name: HumanEval_151_double_the_difference
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu77i8wmz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            if (f % 2 !=\
    \ 0) {\n                sum += f * f;\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyxqrrq5r.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy8yrzjul.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfvwackw.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            if (f % 2 != 0) {\n   \
    \             sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwvz_b2h.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptv4_20ym.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3selmnkq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += (f % 2 == 1) ? Math.pow(f, 2) : 0;\n        }\n        return sum;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2rviblu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            if (f % 2 != 0) {\n   \
    \             sum += f * f;\n            }\n        }\n        return sum;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4uv21h25.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_t3ptzq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg8j_5_4f.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb_iaqbd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7svz_04.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9zp92ed4.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f , 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3apt5pal.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ >= 0) && (f % 2 != 0)) {\n                sum += f * f;\n            }\n   \
    \     }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ % 2) == 1) {\n                sum += f;\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8c3jgxqx.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ramwcm5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0)\n                sum += Math.pow(Math.abs(f), 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv4e3fcaq.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3o1mwhc7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv08szvr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ztmr580.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2qqveo_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5wjy9gy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        long sumOfSquares = 0;\n        for (Float f :\
    \ lst) {\n            if (f < 0) {\n                continue;\n            }\n\
    \            if (f % 2 != 0) {\n                sum += f;\n                sumOfSquares\
    \ += f * f;\n            }\n        }\n        return sumOfSquares; // return\
    \ sumOfSquares\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qigb4ah.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f > 0 &&\
    \ f % 2 != 0) {\n                sum += Math.pow(f, 2);\n            }\n     \
    \   }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppw3fcs3e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9munxana.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5quokgf.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcau3q_zm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f - 1, 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0629im18.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 != 0) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf4y1b53d.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f , 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6btgt96.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += f * f;\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f - 1, 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5bk_mco.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mgd7yhx.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp05chh7ob.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaquprgpe.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppugj8lhu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            if (f % 2 !=\
    \ 0) {\n                sum += f * f;\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpthee2og_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp57w53sr_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f - 1, 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuleofxi6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5227938.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfoq_jqq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1lm1i0iv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecsrrfwq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ybnbtpc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjaybwcc4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f - 1, 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbvseq3d.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxslxx2d_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodii7jje.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_78r9fch.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qu_9jnb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) {\n            return 0;\n        }\n   \
    \     long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f , 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprm2fu9vb.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9deiw30g.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphanhczkb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg4qb0d4w.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f , 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoomp1rbb.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3b162x8f.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7h09wulv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpda6u1n0j.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0xres72y.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjfpiju2h.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphe0wg_ty.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3frv1jw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55gr27xj.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - Math.round(f), 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpitkx48jb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjkbddve.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f - 1, 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp07xldwpk.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1cn2schh.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            if (f % 2 != 0) {\n   \
    \             sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            if (f % 2 ==\
    \ 1) {\n                sum += f * f;\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvp2j7b3r.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppski7htq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkoo17wkb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprwo1syre.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            if (f % 2 != 0) {\n   \
    \             sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) return 0;\n        long sum = 0;\n      \
    \  for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyn8x0zmj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - lst.get(0), 2);\n        }\n        return sum;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzva25q0u.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4gdxyh0c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckcymm_a.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvw6in1ah.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgijle7g.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f , 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp15kst9ca.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1urt6qul.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) {\n            return 0;\n        }\n   \
    \     long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += (long) Math.pow(f\
    \ , 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81r7xj0g.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpydpra003.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_16wdvzu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyymvi_h5.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            if (f % 2 != 0) {\n   \
    \             sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += (long) Math.pow(f\
    \ + f, 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnz_groon.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvytzirwy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3t4nnihf.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f > 0 &&\
    \ f % 2 == 1) {\n                sum += Math.pow(f, 2);\n            }\n     \
    \   }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppn1denbc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjjhxghb2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - Math.round(f), 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9y7n64mj.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += (long) Math.pow(f\
    \ , 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2c3jyva.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += (long) Math.pow(f - 1, 2);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4w3ff_lf.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - lst.get(lst.indexOf(f)), 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjooq3syi.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) {\n            return 0;\n        }\n   \
    \     long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f , 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffgyt_d4.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudoj_vk2.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptj8tf5c7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptjqhyvj2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f , 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7io7uwap.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu89y95_e.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwi2bo299.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - f.intValue(), 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn06cc1zq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f , 2);\n            }\n       \
    \ }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleh6wye0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp049xz3hb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gkz09em.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq6w7t18.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jl0d6ct.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxeyqj57.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) {\n            return 0;\n        }\n   \
    \     long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5p27c5gd.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += f;\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3j84kiv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ >= 0) && (f % 2 == 1)) {\n                sum += Math.pow(f, 2);\n         \
    \   }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgizoma36.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f - lst.get(lst.indexOf(f)), 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsif0d36s.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7z__8_j.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0sot7da.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += f;\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2mifooo.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7c3v_43.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_4almbi.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqsbxduwa.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkyr_j9c.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ < 0) {\n                continue;\n            }\n            sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpklvexpom.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgaf4fm2t.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f , 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6i6vur_g.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixvk45o7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk8nw49sx.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) return 0;\n        long sum = 0;\n      \
    \  for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dj6invv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpld_71b8p.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoh8o__v1.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8g_0kms.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkk26zifk.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaeek3vx0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppac74qw.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoddnxqha.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += f * f;\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0z5b_1fk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ldmkf7c.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82rdzinx.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f - 1, 2);\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwijrutve.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiich7nbb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f - 1, 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphrhumyjw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            sum += (long)\
    \ Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpmohmr9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f - 1, 2);\n        }\n        return sum;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2349f9ol.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - lst.get(0), 2);\n        }\n        return sum;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi94bntr9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rf0__lt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1uc0i1d.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            if (f % 2 !=\
    \ 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n   \
    \     return sum;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprp8b_wtz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n       \
    \ }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcf67czgg.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_3ntm25.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfa3izbby.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpye8cyopu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ih3furz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbfpqg2ft.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += f * f;\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzn77wwj.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f < 0) {\n                continue;\n            }\n            sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmnx3_jc.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f - lst.get(0), 2);\n        }\n        return sum;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqmb8sny.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f != 0) {\n                sum += Math.pow(f - 1, 2);\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpin1nor9_.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if(f\
    \ > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzgl0miwc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) return 0;\n        long sum = 0;\n      \
    \  for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_awsi0f4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7stzxava.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.isEmpty()) {\n            return 0;\n        }\n   \
    \     long sum = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhklo2y7.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4wv31m7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0)\n                sum += Math.pow(f, 2);\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms4e7enx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_dlqntk.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            if((f\
    \ > 0) || (f < 0)) {\n                sum += Math.pow(Math.abs(f), 2);\n     \
    \       }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfj1dlbci.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += f * f;\n            }\n    \
    \    }\n        return sum;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for(Float f : lst) {\n            sum\
    \ += Math.pow(f , 2);\n        }\n        return sum;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4t87amo6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ebcduyo.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static long doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 == 1) {\n                sum += Math.pow(f, 2);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

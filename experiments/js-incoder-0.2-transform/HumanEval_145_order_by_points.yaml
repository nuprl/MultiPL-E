name: HumanEval_145_order_by_points
language: js
prompt: "//Write a function which sorts the given list of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
  \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11,\
  \ 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423,\
  \ 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
  \ 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["    nums.sort(function(a, b){\n        return (a-b);\n    });\n   \
    \ return nums;\n}\n", "  var sum = 0;\n  var len = nums.length;\n  var ret = [];\n\
    \  for(var i=0; i<len; i++){\n    sum += nums[i];\n    ret.push(nums[i]);\n  }\n\
    \  ret.sort(function(a, b){\n    return sum - a;\n  });\n  return ret;\n}\n",
  "  var result = [];\n  nums.forEach(function(num){\n    var sum = 0;\n    while(num\
    \ > 0){\n      sum += num % 10;\n      num = Math.floor(num / 10);\n    }\n  \
    \  result.push(sum);\n  });\n  result.sort(function(a, b){\n    return a - b;\n\
    \  });\n  return result;\n}\n", "    var sum = 0;\n    var len = nums.length;\n\
    \    var index = 0;\n    var result = [];\n    while(index < len){\n        sum\
    \ += nums[index];\n        result.push(nums[index]);\n        index++;\n    }\n\
    \    result.sort(function(a, b){\n        return sum - a - b;\n    });\n    return\
    \ result;\n}\n</code>\n<|/ a tags=sorting,javascript |>\n<| c |>\nThis doesn't\
    \ work if there are negative numbers in the array\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are negative numbers in the array\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are negative numbers in the array\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are negative numbers in the array\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are negative numbers in the array\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nvar numbers = [1, 11, -1, -11, -12];\nnumbers.sort(function(a, b){\n \
    \   return a - b;\n});\n</code>\n<|/ a tags=sorting,javascript |>\n<| c |>\nIt\
    \ doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nvar numbers = [1, 11, -1, -11, -12];\nnumbers.sort(function(a, b){\n\
    \    return a - b;\n});\n</code>\n<|/ a tags=sorting,javascript |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are negative numbers in the array\n<|/ c |>\n<| a tags=sorting,javascript\
    \ |>\n<code>\nvar numbers = [1, 11, -1, -11, -12];\nnumbers.sort(function(a, b){\n\
    \    return a - b;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nIt ", "    var sum\
    \ = 0;\n    var index = 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        if(sum > 0){\n            result.push(nums[index]);\n\
    \            sum -= nums[index];\n            index++;\n        }\n    }\n   \
    \ if(sum > 0){\n        result.push(nums[index]);\n    }\n    return result;\n\
    }\n", "    var sum = 0;\n    var result = [];\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        result.push(sum);\n    }\n    result.sort(function(a,b){\n\
    \        return b-a;\n    });\n    return result;\n}\n", "    var result = [];\n\
    \    var len = nums.length;\n    var sum = 0;\n    var index = 0;\n    var digit;\n\
    \    while(index < len){\n        digit = nums[index];\n        sum += digit;\n\
    \        result.push(digit);\n        index++;\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a - b;\n    });\n    return result;\n}\n", "    var\
    \ len = nums.length;\n    if(len < 2) return nums;\n    var ret = [];\n    var\
    \ i, j, sum, digit;\n    for(i = 0; i < len; i++){\n        sum = 0;\n       \
    \ for(j = 0; j < len; j++){\n            digit = nums[j].charCodeAt() - '0'.charCodeAt(0);\n\
    \            if(digit === 0) continue;\n            sum += digit;\n        }\n\
    \        ret.push(sum);\n    }\n    ret.sort(function(a, b){\n        return a\
    \ - b;\n    });\n    return ret;\n}\n", "    var sum = 0;\n    var result = [];\n\
    \    for(var i=0;i<nums.length;i++){\n        sum += nums[i];\n        result.push(nums[i]);\n\
    \    }\n    result.sort(function(a,b){\n        return sum - a + b;\n    });\n\
    \    return result;\n}\n", "    var sum = 0;\n    var index = 0;\n    var result\
    \ = [];\n    for(var i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a, b){\n     \
    \   return sum - a;\n    });\n    return result;\n}\n", "    var len = nums.length;\n\
    \    var sorted = [];\n    var points = [];\n    var index = 0;\n    var sum =\
    \ 0;\n    var digit;\n    while(index < len){\n        digit = nums[index];\n\
    \        sum += digit;\n        points.push(index);\n        if(sum > 0){\n  \
    \          sum -= digit;\n            sorted.push(digit);\n        }\n       \
    \ index++;\n    }\n    points.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    sorted = sorted.concat(points.map(function(p){\n        return nums[p];\n\
    \    }));\n    return sorted;\n}", "    var sum = 0;\n    var index = 0;\n   \
    \ var result = [];\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n\
    \        result.push(nums[i]);\n    }\n    result.sort(function(a, b){\n     \
    \   return sum - a + b;\n    });\n    return result;\n}\n", "  var result = [];\n\
    \  var len = nums.length;\n  for(var i=0; i<len; i++){\n    var num = nums[i];\n\
    \    var sum = 0;\n    for(var j=0; j<num.length; j++){\n      sum += num.substr(j,1);\n\
    \    }\n    result.push(num);\n    result.push(sum);\n  }\n  result.sort(function(a,b){\n\
    \    var sumA = parseInt(a[1]);\n    var sumB = parseInt(b[1]);\n    return sumA\
    \ - sumB;\n  });\n  return result;\n}\n", "  var sum = 0;\n  var result = [];\n\
    \  for(var i=0;i<nums.length;i++){\n    sum += nums[i];\n    result.push(sum);\n\
    \  }\n  result.sort(function(a,b){\n    return a-b;\n  });\n  return result;\n\
    }\n", "    var sum = 0;\n    var index = 0;\n    var result = [];\n    for(var\
    \ i=0; i<nums.length; i++){\n        sum += nums[i];\n        if(sum > 0){\n \
    \           result.push(nums[index]);\n            sum -= nums[index];\n     \
    \       index++;\n        }\n    }\n    if(sum > 0){\n        result.push(nums[index]);\n\
    \    }\n    return result;\n}\n", "    var sum = 0;\n    var len = nums.length;\n\
    \    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        sum\
    \ = 0;\n        for(j = 0; j < len; j++){\n            sum += nums[j].digit;\n\
    \        }\n        ret.push(nums[sum < 0 ? sum * -1 : sum]);\n    }\n    return\
    \ ret;\n}\n", "  var sum = 0;\n  var len = nums.length;\n  for(var i=0; i<len;\
    \ i++){\n    sum += nums[i];\n  }\n  nums.sort(function(a, b){\n    return sum\
    \ - a + b;\n  });\n  return nums;\n}\n", "    var sum = 0;\n    var len = nums.length;\n\
    \    var index = 0;\n    var result = [];\n    while(index < len){\n        sum\
    \ += nums[index];\n        result.push(nums[index]);\n        index++;\n    }\n\
    \    result.sort(function(a, b){\n        return sum - a - b;\n    });\n    return\
    \ result;\n}\n", "    var result = [];\n    var len = nums.length;\n    var sum\
    \ = 0;\n    var index = 0;\n    while(index < len){\n        sum += nums[index];\n\
    \        result.push(nums[index]);\n        index++;\n    }\n    result.sort(function(a,\
    \ b){\n        return sum - a;\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    nums.forEach(function(num){\n        var sum = 0;\n        while(num\
    \ > 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        result.push(sum);\n    });\n    result.sort(function(a, b){\n\
    \        return a - b;\n    });\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

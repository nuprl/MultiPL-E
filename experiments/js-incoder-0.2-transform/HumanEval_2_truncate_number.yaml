name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunction truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ 0 ? 0 : fraction);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n \
    \       whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction < decimals ? fraction : 0);\n}\n", "\tvar decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "    var decimal_part = Math.trunc(number);\n    var whole_part = Math.floor(number);\n\
    \    var decimals = Math.trunc(Math.abs(number - whole_part));\n    return decimal_part\
    \ + decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n  \
    \      whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number)\
    \ / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "  var decimal_part = Math.floor(number);\n  var whole_part\
    \ = number - decimal_part;\n  if(whole_part < 1){\n    return decimal_part;\n\
    \  }\n  return whole_part;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number * decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number * decimals)\
    \ / decimals;\n}\n", "  var decimals = Math.ceil(Math.log(Math.abs(number)) /\
    \ Math.LN10);\n  return Math.floor(number / Math.pow(10, decimals)) * Math.pow(10,\
    \ decimals);\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.floor(number*decimals)/decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(Math.abs(number))\
    \ / Math.LN10);\n    return number < 0 ? -Math.ceil(-number * Math.pow(10, decimals))\
    \ / Math.pow(10, decimals) : Math.ceil(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tvar decimals = Math.ceil(number).toString().split('.')[1];\n\
    \treturn decimals ? parseInt(decimals) : 0;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(number) / Math.LN10);\n\
    \    return Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "\tlet decimals = Math.trunc(number).toString().split('.')[1];\n\treturn\
    \ (number - Math.floor(number)).toFixed(decimals.length);\n}\n", "\tvar decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\treturn number -\
    \ decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(Math.abs(number)) / Math.LN10);\n\
    \treturn (number < 1) ? 1 : Math.floor(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ 0 ? 1 : 0);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimal_part = Math.floor(number);\n    var whole_part\
    \ = number - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n \
    \   return whole_part * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.ceil(Math.abs(number));\n\
    \treturn Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(Math.abs(number))\
    \ / Math.LN10);\n    return number < 0 ? -Math.ceil(-number * Math.pow(10, -decimals))\
    \ / Math.pow(10, decimals) : Math.ceil(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.ceil(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "    var decimals\
    \ = Math.ceil(Math.log(number)/Math.LN10);\n    return Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.round(number * decimals) / decimals;\n}\n", "  var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(Math.abs(number));\n\
    \    return number - decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.trunc(Math.log(whole_part) / Math.LN10);\n    return\
    \ decimal_part + decimals;\n}\n", "\tnumber = number.toFixed(1);\n\tnumber = number.replace(/0+$/,\
    \ '');\n\t\n\tvar parts = number.split('.');\n\t\n\treturn parts.length > 1 ?\
    \ parts[1] : 0;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split(\"\
    .\")[1].length || 0;\n\treturn (number - Math.floor(number)).toFixed(decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.ceil(Math.log(number) / Math.LN10);\n\treturn Math.trunc(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.floor(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split('.')[1];\n\
    \treturn (number - Math.floor(number)) * Math.pow(10, decimals.length);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.ceil(number).toString().split('.')[1];\n    return Math.trunc(number*10)/10+decimals;\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 0 : fraction);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(number).toString().split('.')[1];\n\
    \    return decimals ? parseInt(decimals, 10) : 0\n}\n", "    var decimals = Math.ceil(Math.log(number)\
    \ / Math.LN10);\n    return Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tlet decimals = Math.ceil(Math.log10(number));\n\treturn\
    \ Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n  \
    \      whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction * decimals);\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n  \
    \      whole = Math.floor(number),\n        fraction = number - whole;\n    \n\
    \    return (whole + fraction > decimals) ? whole : whole + decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(Math.log10(number));\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tlet decimal_part = Math.floor(number);\n\
    \tlet integer_part = number - decimal_part;\n\treturn decimal_part;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "    var decimal_part = Math.floor(number);\n\
    \    var integer_part = number - decimal_part;\n    return decimal_part;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(Math.abs(number))\
    \ / Math.LN10);\n\treturn number < 0 ? -Math.ceil(-number * Math.pow(10, -decimals))\
    \ / Math.pow(10, decimals) : Math.ceil(number * Math.pow(10, decimals)) / Math.pow(10,\
    \ decimals);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number * decimals) / decimals;\n}\n", "    var decimals\
    \ = Math.ceil(Math.log10(number));\n    return Math.round(number/Math.pow(10,decimals))*Math.pow(10,decimals);\n\
    }\n", "\tlet decimals = Math.trunc(number).toString().split('.')[1];\n\treturn\
    \ (decimals) ? Number(decimals) : 0;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ decimals ? fraction : 0);\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\
    \tlet integer_part = Math.floor(number);\n\tlet decimal_part = number - integer_part;\n\
    \t\n\treturn decimal_part;\n}\n", "\tlet decimals = Math.floor(Math.log10(number));\n\
    \tlet integer_part = Math.floor(number / Math.pow(10, decimals));\n\treturn (number\
    \ - integer_part * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.ceil(Math.abs(number));\n    return Math.trunc(number\
    \ * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    \n    return whole + decimals - (fraction\
    \ < decimals ? fraction : 0);\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.round(number*decimals)/decimals;\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.ceil(Math.log(number) / Math.LN10);\n    return Math.floor(number / Math.pow(10,\
    \ decimals)) * Math.pow(10, decimals);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\
    \treturn number - decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n\t\twhole = Math.floor(number),\n\
    \t\tfraction = number - whole;\n\t\n\treturn whole + decimals / fraction;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tlet decimal_part\
    \ = Math.floor(number);\n\tlet integer_part = number - decimal_part;\n\tlet decimals\
    \ = Math.trunc(Math.abs(integer_part));\n\treturn decimal_part + decimals;\n}\n",
  "    var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.pow(10, decimal_part);\n    return whole_part * decimals;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "  var decimal_part = Math.floor(number);\n \
    \ var whole_part = number - decimal_part;\n  if(whole_part < 1){\n    whole_part\
    \ = 0;\n  }\n  return decimal_part;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \    return Math.round(number*Math.pow(10,-decimals))/Math.pow(10,decimals);\n\
    }\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.ceil(Math.log10(number));\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals\
    \ = Math.ceil(Math.log(number)/Math.LN10);\n    return Math.floor(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "\tvar decimals = Math.ceil(number).toString().split('.')[1];\n\treturn decimals\
    \ ? parseInt(decimals, 10) : 0\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_65_circular_shift
language: js
prompt: "//Circular shift the digits of the integer x, shift the digits right by shift\n\
  // and return the result as a string.\n// If shift > number of digits, return digits\
  \ reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12,\
  \ 2)\n// \"12\"\nfunction circular_shift(x, shift){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = circular_shift;\n  assert.deepEqual(candidate(100, 2),\"001\");\n  assert.deepEqual(candidate(12,\
  \ 2),\"12\");\n  assert.deepEqual(candidate(97, 8),\"79\");\n  assert.deepEqual(candidate(12,\
  \ 1),\"21\");\n  assert.deepEqual(candidate(11, 101),\"11\");\n}\n\ntest();"
completions: ["    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        digit,\n        res,\n      \
    \  i;\n    shift = shift % digits.length;\n    if (shift > digits.length){\n \
    \       shift = digits.length - shift;\n    }\n    res = \"\";\n    for (i = digits.length\
    \ - shift; i >= 0; i--){\n        digit = digits[i];\n        res = digit + res;\n\
    \    }\n    return res;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = String(x).split(\"\"),\n        circ = shift %\
    \ x.length,\n        revshift = shift - circ,\n        revcirc = revshift % x.length,\n\
    \        revdigits = String(x).split(\"\").reverse().join(\"\");\n    return revdigits.substr(0,\
    \ revcirc) + digits.substr(circ, digits.length) + revdigits.substr(revcirc + digits.length);\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length){\n        return digits.reverse().join('');\n \
    \   }\n    else {\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    \    }\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "  if(shift > x.length) shift = x.length;\n\
    \  var result = \"\";\n  for(var i = x.length; i-- > shift; ) result += x.charAt(i);\n\
    \  return result;\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        return digits.reverse().join('');\n    }\n    return\
    \ digits.slice(shift, digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        shift = shift || 0,\n        i = digits.length\
    \ - shift;\n    return digits.reverse().join(\"\") + digits.splice(0, i + shift).join(\"\
    \");\n}\n", "  var digits = String(Math.abs(x)).split('');\n  if(shift > digits.length){\n\
    \    return digits.reverse().join('');\n  }\n  if(shift < -digits.length){\n \
    \   return digits.reverse().join('');\n  }\n  digits = digits.reverse();\n  while(shift\
    \ > 0){\n    digits = digits.slice(0,shift).reverse().concat(digits.slice(shift));\n\
    \    shift -= digits.length;\n  }\n  return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        digits_length = digits.length,\n\
    \        shift = shift || 0,\n        i = digits_length - shift;\n    if (i <\
    \ 0) i = digits_length + i;\n    return digits.reverse().join(\"\").split(\"\"\
    ).reverse().join(\"\") + digits.join(\"\").split(\"\").reverse().join(\"\");\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(x).split(\"\"),\n        shift = shift || 0,\n       \
    \ i = digits.length - shift;\n    return digits.reverse().join(\"\") + digits.slice(0,\
    \ i).reverse().join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    return digits.slice(shift, digits.length).reverse().join('');\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length; i--\
    \ > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       return digits.reverse().join('');\n    }\n    else {\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - shift; i > -1;\
    \ i--){\n        digits[i] = digits[i + shift];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        circ = shift;\n    if (circ > digits.length){\n        circ = digits.length;\n\
    \    }\n    for (var i = circ; i > 0; i--){\n        digits[i] = digits[i-1];\n\
    \    }\n    return digits.reverse().join(\"\");\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length,\n        circ_shift = shift % circ,\n    \
    \    circ_mask = circ - circ_shift,\n        circ_mask2 = circ_mask << 1,\n  \
    \      circ_mask3 = circ_mask2 << 1,\n        circ_mask4 = circ_mask3 << 1,\n\
    \        circ_mask5 = circ_mask4 << 1,\n        circ_mask6 = circ_mask5 << 1,\n\
    \        circ_mask7 = circ_mask6 << 1,\n        circ_mask8 = circ_mask7 << 1,\n\
    \        circ_mask9 = circ_mask8 << 1,\n        circ_mask10 = circ_mask9 << 1,\n\
    \        circ_mask11 = circ_mask10 << 1,\n        circ_mask12 = circ_mask11 <<\
    \ 1,\n        circ_mask13 = circ_mask12 << 1,\n        circ_mask14 = circ_mask13\
    \ << 1,\n        circ_mask15 = circ_mask14 << 1,\n        circ_mask16 = circ_mask15\
    \ << 1,\n        circ_mask17 = circ_mask16 << 1,\n        circ_mask18 = circ_mask17\
    \ << 1,\n        circ_mask19 = circ_mask18 << 1,\n        circ_mask20 = circ_mask19\
    \ << 1,\n        circ_mask21 = circ_mask20 << 1,\n        circ_mask22 = circ_mask21\
    \ << 1,\n        circ_mask23 = circ_mask22 << 1,\n        circ_mask24 = circ_mask23\
    \ << 1,\n        circ_mask25 = circ_mask24 << 1,\n        circ_mask26 = circ_mask25\
    \ << 1,\n        circ_mask27 = circ_mask26 << 1,\n        circ_mask28 = circ_mask27\
    \ << 1,\n        circ_mask29 = circ_mask28 << 1,\n        circ_mask30 = circ_mask29\
    \ << 1,\n        circ_mask31 = circ_mask30 << 1,\n        circ_mask32 = circ_mask31\
    \ << 1,\n        circ_mask33 = circ_mask32 << 1,\n        circ_mask34 = circ_mask33\
    \ << 1,\n        circ_mask35 = circ_mask34 << 1,\n        circ_mask36 = circ_mask35\
    \ << 1,\n        circ_mask37 = circ_mask36 << 1,\n        circ_mask38 = circ_mask37\
    \ << 1,\n        circ_mask39 = cir", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    return digits.slice(shift, digits.length).reverse().join('');\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = x.toString().split('');\n\
    \  var result = \"\";\n  for (var i = 0; i < digits.length; i+=shift){\n    result\
    \ += digits[shift-i];\n  }\n  return result;\n}\n", "  if(shift > x.length) shift\
    \ = x.length - shift;\n  var result = \"\";\n  for(var i = x.length; i > shift;\
    \ --i){\n    result = x.substr(0, i) + result + x.substr(i - shift, i);\n  }\n\
    \  return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n  \
    \  if (shift > digits.length){\n        return digits.reverse().join('');\n  \
    \  }\n    else {\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    \    }\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        return digits.reverse().join('');\n    }\n    else\
    \ {\n        return digits.slice(shift, digits.length).join('');\n    }\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length)\n    \
    \    return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i+1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length) return digits.reverse().join('');\n    else return\
    \ digits.slice(shift, digits.length).join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i -= 1){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length)\n   \
    \     return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length)\n   \
    \     shift = digits.length - shift;\n    for (var i = digits.length - shift;\
    \ i > -1; i--)\n        digits[i] = digits[i + 1];\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = x.toString().split('');\n\
    \  shift = shift % digits.length;\n  if(shift == 0) return x;\n  if(shift < 0)\
    \ return circular_shift(x, -shift);\n  if(shift > digits.length) return circular_shift(x,\
    \ digits.length + shift);\n  for(var i = 0; i < shift; i++) digits[i] = digits[digits.length\
    \ - 1 - i];\n  return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - shift; i > -1; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length) return digits.reverse().join('');\n    return\
    \ digits.slice(shift, digits.length).reverse().join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    for (var i = circ; i > 0; i--){\n        digits[circ -\
    \ i] = digits[circ - i-1];\n    }\n    return digits.join(\"\");\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length) return digits.reverse().join('');\n    else return\
    \ digits.slice(shift, digits.length).reverse().join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        circ = shift;\n    if (circ > digits.length){\n        circ = digits.length;\n\
    \    }\n    for (var i = circ; i > 0; i--){\n        digits[i] = digits[i-1];\n\
    \    }\n    return digits.join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "  var digits = String(x).split(\"\
    \"),\n      result = \"\",\n      i;\n\n  for(i = digits.length - 1; i >= shift;\
    \ i--){\n    result = digits[i] + result;\n  }\n  for(i = digits.length - 1 -\
    \ shift; i >= 0; i--){\n    result = digits[i] + result;\n  }\n  return result;\n\
    }\n", "  if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n\
    \  for(var i = x.length; i > shift; --i) result += x.charAt(x.length - i - 1);\n\
    \  return result;\n}\n", "    var digits = String(x).split(\"\"),\n        shift\
    \ = shift || 0,\n        i = digits && digits.length,\n        result = digits\
    \ && new Array(shift + i),\n        j,\n        k;\n\n    for(j = shift, k = i;\
    \ k > shift; k--)\n        result[k] = digits[k];\n    for(j = i; j > shift; j--)\n\
    \        result[j] = digits[j];\n    return result.join(\"\");\n}\n", "    var\
    \ digits = String(x).split(\"\"),\n        circ = digits.length,\n        circShift\
    \ = circ - shift;\n    circShift = circShift < 0 ? circShift + circ : circShift;\n\
    \    return digits.splice(circShift, circ).join(\"\");\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        circ = digits.length - shift;\n    return\
    \ circ > 0 ? digits.splice(circ, digits.length - circ).join(\"\") : digits.reverse().join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        digits_length = digits.length,\n        shift = shift || 0,\n  \
    \      i = digits_length - shift;\n    \n    if (shift > digits_length)\n    \
    \    return digits.reverse().join(\"\");\n    \n    while (i--)\n        digits[i]\
    \ = digits[i + shift];\n    \n    return digits.join(\"\");\n}\n", "  var digits\
    \ = x.toString().split('');\n  if(shift > digits.length){\n    shift = digits.length\
    \ - shift;\n  }\n  digits.splice(shift, 0, digits.splice(digits.length - shift,\
    \ 1)[0]);\n  return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    \    }\n}\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0\
    \ ? digits.length + shift : shift;\n    return digits.reverse().slice(circ).join(\"\
    \");\n}\n", "  if(shift > x.length) shift = x.length - shift;\n  var result =\
    \ \"\";\n  while(shift > 0){\n    result = x[x.length - shift] + result;\n   \
    \ shift -= x.length;\n  }\n  return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    var result = \"\";\n  \
    \  for(var i = 0; i < shift; i++){\n        result += digits.pop();\n    }\n \
    \   for(var i = 0; i < digits.length; i++){\n        result += digits[i];\n  \
    \  }\n    return result;\n}\n", "    var digits = String(x).split(\"\"),\n   \
    \     circ = shift % digits.length,\n        circShift = circ + (shift - circ)\
    \ % digits.length,\n        circShiftDigits = digits[circShift];\n    digits[circShift]\
    \ = digits[shift];\n    digits[shift] = circShiftDigits;\n    return digits.join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n    }\n\
    \    return digits.reverse().join('');\n}\n", "  var digits = String(Math.abs(x)).split('');\n\
    \  if(shift > digits.length){\n    shift = digits.length - shift;\n  }\n  digits.splice(shift,\
    \ 0, digits.splice(digits.length - shift, 1)[0]);\n  return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    for (var i = circ; i > 0; i--){\n        digits[i] = digits[i-1];\n\
    \    }\n    return digits.join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n\
    \  while(shift > 0){\n    result = x[x.length - shift] + result;\n    shift -=\
    \ x.length;\n  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length) return digits.reverse().join('');\n    else return\
    \ digits.slice(shift, digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - shift; i >=\
    \ 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    var result\
    \ = \"\";\n    for (var i = 0; i < shift; i++)\n        result += digits.pop();\n\
    \    return result + digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length,\n        circ_shift = shift > circ ? shift\
    \ - circ : 0;\n    return digits.reverse().slice(circ_shift).concat(digits.slice(0,\
    \ circ_shift)).reverse().join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - shift; i > -1;\
    \ i--){\n        digits[i] = digits[i + shift];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    else\n    \
    \    return digits.slice(shift, digits.length).join('');\n}\n", "  if(shift >\
    \ x.length) shift = x.length - shift;\n  var result = \"\";\n  for(var i = 0;\
    \ i < shift; i++){\n    result = result.concat(x.charAt(x.length - i - 1));\n\
    \  }\n  return result;\n}\n", "    var digits = String(x).split(\"\"),\n     \
    \   circ = shift;\n    if (circ > digits.length){\n        circ = digits.length\
    \ - 1;\n    }\n    for (var i = circ; i >= 0; i--){\n        digits[i] = digits[i\
    \ + circ];\n    }\n    return digits.join(\"\");\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length - shift;\n    circ = circ < 0 ? circ + digits.length\
    \ : circ;\n    digits.splice(circ, digits.length - circ);\n    return digits.join(\"\
    \");\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "  if(shift > x.length)\
    \ shift = x.length - shift;\n  var result = \"\";\n  for(var i = x.length; i >\
    \ shift; i--){\n    result = x.substr(0, i) + result + x.substr(i - shift, i);\n\
    \  }\n  return result;\n}\n", "  if(shift > x.length) shift = x.length - shift;\n\
    \  var result = \"\";\n  for(var i = 0; i < shift; i++){\n    result = x.charAt(x.length\
    \ - i - 1) + result;\n  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length) return digits.reverse().join('');\n    var result\
    \ = \"\";\n    for (var i = 0; i < shift; i++) result = digits[i + shift] + result;\n\
    \    return result;\n}\n", "  if(shift > x.length) shift = x.length - shift;\n\
    \  var result = \"\";\n  while(shift > 0){\n    result = x[x.length - shift] +\
    \ result;\n    shift--;\n  }\n  while(shift < 0){\n    result = result + x[shift];\n\
    \    shift++;\n  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ shift; i >= 0; i -= 1){\n        digits[i] = digits[i + shift];\n    }\n   \
    \ return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        circ = shift % x.length,\n        circ_str\
    \ = digits.splice(circ, digits.length).join(\"\");\n    return circ_str + digits.join(\"\
    \");\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        shift = digits.length - shift;\n    for (var i = digits.length - shift;\
    \ i > -1; i--)\n        digits[i] = digits[i + shift];\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        return\
    \ digits.slice(shift, digits.length).join('');\n    }\n}\n", "    var digits =\
    \ String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   shift = shift % digits.length;\n    return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  if(shift > x.length) shift = x.length;\n  var result = \"\";\n  for(var\
    \ i = x.length; i-- > shift; ) result += x.charAt(i);\n  return result;\n}\n",
  "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    var result = \"\";\n    for (var i =\
    \ 0; i < shift; i++) result = digits[i + shift] + result;\n    return result;\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return\
    \ digits.join('');\n}\n", "  if(shift > x.length) shift = x.length - shift;\n\
    \  var result = \"\";\n  for(var i = x.length; i > shift; --i) result += x.charAt(x.length\
    \ - i - 1);\n  for(var i = shift; i > 0; --i) result += x.charAt(0);\n  return\
    \ result;\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        shift = digits.length - shift;\n    for (var i = digits.length - shift;\
    \ i > -1; i--)\n        digits[i] = digits[i + shift];\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    var result = new Array(shift+1).join('0');\n\
    \    for (var i = 0; i < shift; i++)\n        result = digits[i+shift] + result;\n\
    \    return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        var result = \"\";\n        for (var i = digits.length;\
    \ i-- > shift; )\n            result += digits[i];\n        return result;\n \
    \   }\n}\n", "  if(shift > x.length) shift = x.length;\n  var result = \"\";\n\
    \  for(var i = x.length; i > shift; --i) result += x.charAt(x.length - i - 1);\n\
    \  return result;\n}\n", "    var digits = String(x).split(\"\"),\n        circ\
    \ = digits.length - shift;\n    return circ > 0 ? digits.splice(circ, digits.length\
    \ - circ).join(\"\") : digits;\n}\n", "  if(shift > x.length){\n    return x.toString();\n\
    \  }\n  if(shift < 0){\n    shift = x.length + shift;\n  }\n  var s = \"\";\n\
    \  while(shift > 0){\n    s = x[x.length - shift] + s;\n    shift--;\n  }\n  return\
    \ s;\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        return digits.reverse().join('');\n    }\n    return\
    \ digits.slice(shift, digits.length).join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length - shift;\n    circ = circ < 0 ? circ + digits.length\
    \ : circ;\n    digits = digits.splice(circ, digits.length - circ);\n    return\
    \ digits.join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   var result = new Array(shift+1).join('0');\n    for (var i = 0; i < shift;\
    \ i++)\n        result = digits[i+shift] + result;\n    return result;\n}\n",
  "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        return\
    \ digits.slice(shift, digits.length).join('');\n    }\n}\n", "    var digits =\
    \ String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        shift = shift || 0,\n        i = digits.length - 1;\n    while (i >=\
    \ 0 && digits[i] >= \"9\") {\n        digits[i--] = digits[i--].substring(0, 1);\n\
    \    }\n    return digits.reverse().join(\"\") + digits.reverse().slice(0, shift);\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "  if(shift > x.length)\
    \ shift = x.length;\n  var result = \"\";\n  for(var i = 0; i < shift; i++){\n\
    \    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", "  if(shift\
    \ > x.length) shift = x.length - shift;\n  var result = \"\";\n  for(var i = 0;\
    \ i < shift; i++){\n    result = result.concat(x.charAt(x.length - i - 1));\n\
    \  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n    if\
    \ (shift > digits.length){\n        shift = digits.length - shift;\n    }\n  \
    \  for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        shift = shift || 0,\n        i = digits && digits.length,\n    \
    \    result = digits && digits[--i] || '',\n        j = i,\n        k = digits\
    \ && digits.length;\n    do { --i; result = digits[i] + result + (i < k ? digits[i]\
    \ : ''); } while (digits.length != i);\n    return result + digits.slice(i).reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    var result = \"\";\n    for (var i =\
    \ 0; i < shift; i++) result = digits[i + shift] + result;\n    return result;\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length; i-- > shift; ){\n        digits[i] = digits[i + 1];\n   \
    \ }\n    return digits.join('');\n}\n", "  if(shift > x.length){\n    return x.split(\"\
    \").reverse().join(\"\");\n  }\n  return x.split(\"\").reverse().join(\"\").split(\"\
    \").reverse().join(\"\") + x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length,\n        circ_shift = shift > circ ? circ\
    \ - shift : circ,\n        circ_mask = (1 << circ_shift) - 1,\n        circ_mask2\
    \ = circ_mask << 1,\n        circ_mask3 = circ_mask2 << 1,\n        circ_mask4\
    \ = circ_mask3 << 1,\n        circ_mask5 = circ_mask4 << 1,\n        circ_mask6\
    \ = circ_mask5 << 1,\n        circ_mask7 = circ_mask6 << 1,\n        circ_mask8\
    \ = circ_mask7 << 1;\n    circ_shift %= circ;\n    circ_mask = (1 << circ_shift)\
    \ - 1;\n    circ_mask2 = circ_mask << 1;\n    circ_mask3 = circ_mask2 << 1;\n\
    \    circ_mask4 = circ_mask3 << 1;\n    circ_mask5 = circ_mask4 << 1;\n    circ_mask6\
    \ = circ_mask5 << 1;\n    circ_mask7 = circ_mask6 << 1;\n    circ_mask8 = circ_mask7\
    \ << 1;\n    circ_mask9 = circ_mask8 << 1;\n    circ_mask10 = circ_mask9 << 1;\n\
    \    circ_mask11 = circ_mask10 << 1;\n    circ_mask12 = circ_mask11 << 1;\n  \
    \  circ_mask13 = circ_mask12 << 1;\n    circ_mask14 = circ_mask13 << 1;\n    circ_mask15\
    \ = circ_mask14 << 1;\n    circ_mask16 = circ_mask15 << 1;\n    circ_mask17 =\
    \ circ_mask16 << 1;\n    circ_mask18 = circ_mask17 << 1;\n    circ_mask19 = circ_mask18\
    \ << 1;\n    circ_mask20 = circ_mask19 << 1;\n    circ_mask21 = circ_mask20 <<\
    \ 1;\n    circ_mask22 = circ_mask21 << 1;\n    circ_mask23 = circ_mask22 << 1;\n\
    \    circ_mask24 = circ_mask23 << 1;\n    circ_mask25 = circ_mask24 << 1;\n  \
    \  circ_mask26 = circ_mask25 << 1;\n    circ_mask27 = circ_mask26 << 1;\n    circ_mask28\
    \ = circ_mask27 << 1;\n    circ_mask29 = circ_mask28 << 1;\n    circ_mask30 =\
    \ circ_mask29 << 1;\n", "    var digits = String(Math.abs(x)).split('');\n   \
    \ if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   var result = \"\";\n    while (shift > 0){\n        if (shift & 1){\n    \
    \        result += digits.pop();\n        }\n        shift >>= 1;\n    }\n   \
    \ digits.reverse();\n    result += digits.join('');\n    return result;\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        circ = digits.length - shift;\n    circ = circ < 0 ? circ + digits.length\
    \ : circ;\n    circ = circ < digits.length ? circ : digits.length - 1;\n    return\
    \ digits.splice(circ, digits.length - circ).join(\"\");\n}\n", "  var digits =\
    \ x.toString().split('');\n  if(shift>=digits.length){\n    return digits.reverse().join('');\n\
    \  }\n  else{\n    var result = \"\";\n    for(var i=0;i<digits.length;i++){\n\
    \      result += digits[i]+(shift-i)*digits.length;\n    }\n    return result;\n\
    \  }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - shift; i >\
    \ -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  var digits = String(x).split(\"\"),\n      shift = shift || 0,\n    \
    \  i = digits.length - shift;\n  return digits.reverse().join(\"\") + digits.splice(0,\
    \ i + shift).join(\"\");\n}\n", "    var digits = x.toString().split('');\n  \
    \  if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var digits =\
    \ String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).join('');\n}\n",
  "    var digits = String(x).split(\"\"),\n        shift = shift || 0,\n        i\
    \ = digits.length,\n        j = i,\n        res = [],\n        carry = 0,\n  \
    \      base = BASE;\n\n    do {\n        res.push(digits[(j + shift) % i] + carry);\n\
    \        carry = (digits[j] / base) | 0;\n        shift++;\n    } while (shift\
    \ <= i);\n\n    return res.reverse().join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        shift = shift || 0,\n        i = digits.length - 1;\n    while (i\
    \ >= 0 && digits[i] >= '9') {\n        digits[i--] = digits[i] || '0';\n    }\n\
    \    digits = digits.reverse();\n    while (shift > digits.length) {\n       \
    \ digits = digits.reverse();\n    }\n    return digits.join(\"\");\n}\n", "  \
    \  var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ shift; i >= 0; i -= 1){\n        digits[i] = digits[i + shift];\n    }\n   \
    \ return digits.join('');\n}\n", "  var digits = x.toString().split('');\n  if(shift\
    \ == 0) return digits;\n  if(shift > digits.length) return digits.reverse();\n\
    \  if(shift < -digits.length) return digits.reverse().join('');\n  for(var i =\
    \ digits.length - 1; i >= shift; i--){\n    digits[i] = digits[i + 1];\n  }\n\
    \  return digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = shift<0 ? digits.length + shift : shift;\n    return digits.reverse().slice(circ).join(\"\
    \");\n}\n", "  if(shift > x.length) shift = x.length;\n  var result = \"\";\n\
    \  for(var i = x.length; shift > 0; shift >>= 1, i++)\n    result += x.charAt(x.length\
    \ - i - 1);\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(x).split(\"\"),\n        shift = shift || 0,\n        i = digits\
    \ && digits.length,\n        result = digits && new Array(shift < 0 ? i + shift\
    \ : shift);\n\n    for(i = digits && digits.length; i; i--){\n        result[--shift]\
    \ = digits[i - 1];\n    }\n    return result.join(\"\");\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        circ = digits.length,\n        circ_shift\
    \ = shift > circ ? shift - circ : 0;\n    return digits.reverse().slice(circ_shift).concat(digits.slice(0,\
    \ circ_shift));\n}\n", "    var digits = String(x).split(\"\"),\n        circ\
    \ = digits.length,\n        circ_shift = shift % circ,\n        circ_mask = circ\
    \ - circ_shift,\n        circ_mask2 = circ_mask << 1,\n        circ_mask3 = circ_mask2\
    \ << 1,\n        circ_mask4 = circ_mask3 << 1,\n        circ_mask5 = circ_mask4\
    \ << 1,\n        circ_mask6 = circ_mask5 << 1,\n        circ_mask7 = circ_mask6\
    \ << 1,\n        circ_mask8 = circ_mask7 << 1,\n        circ_mask9 = circ_mask8\
    \ << 1,\n        circ_mask10 = circ_mask9 << 1,\n        circ_mask11 = circ_mask10\
    \ << 1,\n        circ_mask12 = circ_mask11 << 1,\n        circ_mask13 = circ_mask12\
    \ << 1,\n        circ_mask14 = circ_mask13 << 1,\n        circ_mask15 = circ_mask14\
    \ << 1,\n        circ_mask16 = circ_mask15 << 1,\n        circ_mask17 = circ_mask16\
    \ << 1,\n        circ_mask18 = circ_mask17 << 1,\n        circ_mask19 = circ_mask18\
    \ << 1,\n        circ_mask20 = circ_mask19 << 1,\n        circ_mask21 = circ_mask20\
    \ << 1,\n        circ_mask22 = circ_mask21 << 1,\n        circ_mask23 = circ_mask22\
    \ << 1,\n        circ_mask24 = circ_mask23 << 1,\n        circ_mask25 = circ_mask24\
    \ << 1,\n        circ_mask26 = circ_mask25 << 1,\n        circ_mask27 = circ_mask26\
    \ << 1,\n        circ_mask28 = circ_mask27 << 1,\n        circ_mask29 = circ_mask28\
    \ << 1,\n        circ_mask30 = circ_mask29 << 1,\n        circ_mask31 = circ_mask30\
    \ << 1,\n        circ_mask32 = circ_mask31 << 1,\n        circ_mask33 = circ_mask32\
    \ << 1,\n        circ_mask34 = circ_mask33 << 1,\n        circ_mask35 = circ_mask34\
    \ << 1,\n        circ_mask36 = circ_mask35 << 1,\n        circ_mask37 = circ_mask36\
    \ << 1,\n        circ_mask38 = circ_mask37 << 1,\n        circ_mask39 = cir",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(x).split(\"\"),\n        shift\
    \ = shift || 0,\n        i = digits && digits.length,\n        result = digits\
    \ && digits[--i] || \"\";\n    for(; digits && i; --i){\n        result = digits[(i\
    \ + shift) % digits.length] + result;\n    }\n    return result;\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    var result = \"\";\n    for (var i =\
    \ 0; i < shift; i++){\n        result += digits.pop();\n    }\n    return result\
    \ + digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if\
    \ (shift > digits.length)\n        return digits.reverse().join('');\n    else\n\
    \        return digits.slice(shift).reverse().join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        var result = \"\";\n        for (var i = digits.length\
    \ - shift, len = digits.length; i < len; i++){\n            result += digits[i];\n\
    \        }\n        return result;\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    var result = \"\";\n    for(var i = digits.length - 1; i >= shift; i--){\n\
    \        result = digits[i] + result;\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_24_largest_divisor
language: js
prompt: "//For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
  \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
  \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
completions: ["    var i = 1;\n    while(i <= n){\n        if(n%i == 0){\n       \
    \     n = n/i;\n        }\n        i++;\n    }\n    return n;\n}\n", "  var i\
    \ = 1;\n  var x = 1;\n  while(true){\n    if(i == n){\n      return x;\n    }\n\
    \    i++;\n    x++;\n  }\n}\n", "  var max_divisor = 1;\n  var max_divisor_value\
    \ = 1;\n  var divisor;\n  for(var i = 1; i < n; i++){\n    divisor = i\n    if(n\
    \ % divisor == 0){\n      if(divisor > max_divisor){\n        max_divisor = divisor;\n\
    \      }\n      if(divisor > max_divisor_value){\n        max_divisor_value =\
    \ divisor;\n      }\n    }\n  }\n  return max_divisor_value;\n}\n", "    var i,\
    \ d, max_div = -1;\n    for(i=1;i<=n;i++){\n        d = i * (i-1);\n        if(d\
    \ > max_div){\n            max_div = d;\n        }\n    }\n    return max_div;\n\
    }\n", "  var i = 1;\n  var j = 1;\n  var k = 1;\n  var m = 1;\n  var l = 1;\n\
    \  var s = 1;\n  var t = 1;\n  var r = 1;\n  var q = 1;\n  var p = 1;\n  var q\
    \ = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n\
    \  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m\
    \ = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n\
    \  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n\
    \ = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n\
    \  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m\
    \ = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n\
    \  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n\
    \ = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n\
    \  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m\
    \ = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n\
    \  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n\
    \ = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n\
    \  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m\
    \ = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n\
    \  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n\
    \ = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n\
    \  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m\
    \ = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n\
    \  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n\
    \ = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n  var n = 1;\n  var m = 1;\n\
    \  var n = 1;\n  var m = 1;\n", "  var max_divisor = 1;\n  var max_divisor_value\
    \ = 1;\n  for(var i = 1; i < n; i++){\n    var divisor = i\n    while(divisor\
    \ > max_divisor){\n      max_divisor *= i;\n    }\n    if(max_divisor > n){\n\
    \      max_divisor = n;\n    }\n    if(max_divisor_value > max_divisor){\n   \
    \   max_divisor_value = max_divisor;\n    }\n  }\n  return max_divisor_value;\n\
    }\n", "  var i = 1;\n  var x = 1;\n  while(true){\n    i++;\n    x *= i;\n   \
    \ if(x == n){\n      return i;\n    }\n  }\n}\n", "  var max_divisor = 1;\n  var\
    \ max_divisor_value = 1;\n  for(var i = 1; i <= n; i++){\n    var divisor = i\n\
    \    while(divisor > max_divisor){\n      max_divisor *= i;\n    }\n    if(max_divisor\
    \ > n){\n      max_divisor = n;\n    }\n  }\n  return max_divisor;\n}\n", "  \
    \  var i = 1;\n    while(true){\n        if(n%i == 0){\n            n = n/i;\n\
    \            return i;\n        }\n        i++;\n    }\n}\n", "    var max_divisor\
    \ = n;\n    var max_divisor_p = 0;\n    for(var i = 1; i <= n; i++){\n       \
    \ var divisor = i\n        while(divisor <= max_divisor && divisor % 2 == 0){\n\
    \            divisor *= 2;\n        }\n        if(divisor > max_divisor){\n  \
    \          max_divisor = divisor;\n            max_divisor_p = i;\n        }\n\
    \    }\n    return max_divisor_p;\n}\n", "    var max_divisor = n;\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i == 0){\n            max_divisor = i;\n\
    \        }\n    }\n    return max_divisor;\n}\n", "\tif(n<=1){\n\t\treturn 1;\n\
    \t}\n\tif(n%2==0){\n\t\treturn n;\n\t}\n\tlet largest_divisor=1;\n\tfor(let i=3;i<=n;i+=2){\n\
    \t\tif(n%i==0){\n\t\t\tif(n%i==0){\n\t\t\t\tif(n%i==0){\n\t\t\t\t\tif(n%i==0){\n\
    \t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\tif(n%i==0){\n\
    \t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\
    \t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(n%i==0)", " \
    \   var i = 1;\n    while(true){\n        if(n%i == 0){\n            n = n/i;\n\
    \            i = 1;\n        }\n        else{\n            i++;\n        }\n \
    \       if(i == n){\n            return i;\n        }\n    }\n}\n", "\tvar max_divisor\
    \ = n;\n\tvar max_divisor_p = 0;\n\tvar max_divisor_pp = 0;\n\tfor(var i = 1;\
    \ i <= n; i++){\n\t\tvar p = Math.pow(i, 2);\n\t\tvar p2 = Math.pow(p, 2);\n\t\
    \tvar p3 = Math.pow(p, 3);\n\t\tvar p4 = Math.pow(p, 4);\n\t\tvar p5 = Math.pow(p,\
    \ 5);\n\t\tvar p6 = Math.pow(p, 6);\n\t\tvar p7 = Math.pow(p, 7);\n\t\tvar p8\
    \ = Math.pow(p, 8);\n\t\tvar p9 = Math.pow(p, 9);\n\t\tvar p10 = Math.pow(p, 10);\n\
    \t\tvar p11 = Math.pow(p, 11);\n\t\tvar p12 = Math.pow(p, 12);\n\t\tvar p13 =\
    \ Math.pow(p, 13);\n\t\tvar p14 = Math.pow(p, 14);\n\t\tvar p15 = Math.pow(p,\
    \ 15);\n\t\tvar p16 = Math.pow(p, 16);\n\t\tvar p17 = Math.pow(p, 17);\n\t\tvar\
    \ p18 = Math.pow(p, 18);\n\t\tvar p19 = Math.pow(p, 19);\n\t\tvar p20 = Math.pow(p,\
    \ 20);\n\t\tvar p21 = Math.pow(p, 21);\n\t\tvar p22 = Math.pow(p, 22);\n\t\tvar\
    \ p23 = Math.pow(p, 23);\n\t\tvar p24 = Math.pow(p, 24);\n\t\tvar p25 = Math.pow(p,\
    \ 25);\n\t\tvar p26 = Math.pow(p, 26);\n\t\tvar p27 = Math.pow(p, 27);\n\t\tvar\
    \ p28 = Math.pow(p, 28);\n\t\tvar p29 = Math.pow(p, 29);\n\t\tvar p30 = Math.pow(p,\
    \ 30);\n\t\tvar p31 = Math.pow(p, 31);\n\t\tvar p32 = Math.pow(p, 32);\n\t\tvar\
    \ p33 = Math.pow(p, 33);\n\t\tvar p34 = Math.pow(p, 34);\n\t\tvar p35 = Math.pow(p,\
    \ 35);\n\t\tvar p36 = Math.pow(p, 36);\n\t\tvar p37 = Math.pow(p, 37);\n\t\tvar\
    \ p38 = Math.pow(p, 38);\n\t\tvar p39 = Math.pow(p, 39);\n\t\tvar p40 = Math.pow(p,\
    \ 40);\n\t\tvar p41 = Math.pow(p, 41);\n\t\tvar p42 = Math.pow(p, 42);\n\t\tvar\
    \ p43 = Math.pow(p, 43);\n\t\tvar p44 = Math.pow(p, 44);\n\t\tvar p45 = Math.pow(p,\
    \ 45);\n\t\tvar p46 = Math.pow(p, 46);\n\t\tvar p47 = Math.pow(p, 47);\n\t\tvar\
    \ p48 = Math.pow(p, 48);\n\t\tvar p49 = Math.pow(p, 49);\n\t\tvar p50 = Math.pow(p,\
    \ 50);\n\t\tvar p51 = Math.pow(p, 51);\n\t\tvar p52 = Math.pow(p, 52);\n\t\tvar\
    \ p53 = Math.pow(p, 53);\n\t\tvar p54 = Math.pow(p, 54);\n\t\tvar p55 = Math.pow(p,\
    \ 55);\n\t\tvar p", "    var i = 1;\n    var max_divisor = 1;\n    while(i <=\
    \ n){\n        if(n%i == 0){\n            if(n/i==max_divisor){\n            \
    \    max_divisor = i;\n            }\n        }\n        i++;\n    }\n    return\
    \ max_divisor;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "  \
    \  var i = 1;\n    while(true){\n        if(n%i == 0){\n            return i;\n\
    \        }\n        i++;\n    }\n}\n", "\tlet max_divisor = 1;\n\tfor(let i =\
    \ 1; i < n; i++){\n\t\tlet divisor = n / i;\n\t\tif(divisor > max_divisor){\n\t\
    \t\tmax_divisor = divisor;\n\t\t}\n\t}\n\treturn max_divisor;\n}\n", "\tif(n<=1){\n\
    \t\treturn 1;\n\t}\n\tif(n%2==0){\n\t\treturn n+1;\n\t}\n\tvar max_divisor=1;\n\
    \tvar max_divisor_p=1;\n\tfor(var i=3;i<=Math.sqrt(n);i++){\n\t\tif(n%i==0){\n\
    \t\t\tvar divisor_p=Math.pow(i,n);\n\t\t\tif(divisor_p>max_divisor){\n\t\t\t\t\
    max_divisor=divisor_p;\n\t\t\t\tmax_divisor_p=i;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ max_divisor_p;\n}", "  var max_divisor = n;\n  var max_divisor_remainder = 0;\n\
    \  for(var i = 1; i < n; i++){\n    var divisor = n % i;\n    if(divisor > max_divisor_remainder){\n\
    \      max_divisor = i;\n      max_divisor_remainder = divisor;\n    }\n  }\n\
    \  return max_divisor;\n}\n", "    var i = 1;\n    while(true){\n        if(n%i\
    \ == 0){\n            return i;\n        }\n        i++;\n    }\n}\n</code>\n\
    <|/ a tags=javascript,algorithm |>\n<| c |>\nThis is not correct. Try `largest_divisor(15)`\
    \ - it returns `5` instead of `3`.\n<|/ c |>\n<| c |>\nI missed that one. Thanks\
    \ for pointing it out. Updated the answer.\n<|/ c |>\n<| c |>\nThe question was\
    \ about finding largest divisor of a number `n`, not about finding largest divisor\
    \ of a number `n` which divides `n` evenly.\n<|/ c |>\n<| c |>\nThe question was\
    \ about finding largest divisor of a number `n`, not about finding largest divisor\
    \ of a number `n` which divides `n` evenly. `largest_divisor(15)` returns `5`\
    \ instead of `3`.\n<|/ c |>\n<| c |>\nI see your point. Updated the answer accordingly.\n\
    <|/ c |>\n<| a tags=javascript,algorithm |>\n<code>"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

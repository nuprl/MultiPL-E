name: HumanEval_68_pluck
language: js
prompt: "//\"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// >>> pluck([4, 2, 3])\n// [2, 1]\n// Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n// Example 2:\n// >>> pluck([1, 2,\
  \ 3])\n// [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 3:\n// >>> pluck([])\n// []\n// Example 4:\n// >>> pluck([5,\
  \ 0, 3, 0, 4, 2])\n// [0, 1]\n// Explanation: 0 is the smallest value, but  there\
  \ are two zeros,\n// so we will choose the first zero, which has the smallest index.\n\
  // Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nfunction\
  \ pluck(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pluck;\n  assert.deepEqual(candidate([4, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5,\
  \ 0, 3, 0, 4, 2]),[0, 1]);\n  assert.deepEqual(candidate([1, 2, 3, 0, 5, 3]),[0,\
  \ 3]);\n  assert.deepEqual(candidate([5, 4, 8, 4, 8]),[4, 1]);\n  assert.deepEqual(candidate([7,\
  \ 6, 7, 1]),[6, 1]);\n  assert.deepEqual(candidate([7, 9, 7, 1]),[]);\n}\n\ntest();"
completions: ["    let minIndex = 0;\n    let minValue = arr[0];\n    for (let i =\
    \ 1; i < arr.length; i++){\n        if (arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = arr.filter(function(el){\n        return el%2\
    \ === 0;\n    });\n    if(even.length === 0) return [];\n    let min = even[0];\n\
    \    let minIndex = 0;\n    for(let i = 0; i < even.length; i++){\n        if(even[i]\
    \ === min){\n            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let minIndex = arr.findIndex(node => node.value % 2 === 0);\n    return\
    \ minIndex === -1 ? [] : [arr[minIndex].value, minIndex];\n}\n", "    let evens\
    \ = [];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n   \
    \     if(arr[i] % 2 === 0){\n            evens.push(arr[i]);\n            if(evens.length\
    \ === 1){\n                minIndex = i;\n            }\n        }\n    }\n  \
    \  return evens.sort((a, b) => a - b).indexOf(minIndex) > -1 ? [evens[evens.indexOf(minIndex)],\
    \ minIndex] : [];\n}\n", "    arr.sort(function(a, b){\n        return a - b;\n\
    \    });\n    var result = [];\n    var smallest = 0;\n    var smallest_index\
    \ = 0;\n    for(var i = 0, len = arr.length; i < len; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            if(smallest === 0){\n                smallest = arr[i];\n\
    \                smallest_index = i;\n            }else if(smallest === arr[i]){\n\
    \                smallest_index = i;\n            }\n        }\n    }\n    result.push(smallest,\
    \ smallest_index);\n    return result;\n}\n", "    let evenNodes = arr.filter(node\
    \ => node.value % 2 === 0);\n    let smallestEvenNode = evenNodes.reduce((prev,\
    \ curr) => prev < curr.value ? prev : curr.value);\n    let smallestEvenIndex\
    \ = evenNodes.reduce((prev, curr) => prev < curr.index ? prev : curr.index);\n\
    \    return [smallestEvenNode, smallestEvenIndex];\n}\n", "    arr = arr.sort((a,b)=>a-b);\n\
    \    let minIndex = -1;\n    let minVal = arr[0];\n    for(let i=1;i<arr.length;i++){\n\
    \        if(arr[i]%2===0 && arr[i]<minVal){\n            minVal = arr[i];\n  \
    \          minIndex = i;\n        }\n    }\n    return [minVal, minIndex];\n}\n",
  "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    arr.sort((a,b)=>a-b);\n    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] === minValue){\n\
    \            minIndex++;\n        }\n        if(arr[i] < minValue){\n        \
    \    minValue = arr[i];\n            minIndex = i;\n        }\n    }\n    return\
    \ [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let even = [];\n    let index = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n   \
    \         even.push(arr[i]);\n            index.push(i);\n        }\n    }\n \
    \   if(even.length === 0){\n        return [];\n    }\n    even.sort((a,b) =>\
    \ a - b);\n    index.sort((a,b) => a - b);\n    let smallest = even[0];\n    let\
    \ smallest_index = index[0];\n    for(let i = 1; i < even.length; i++){\n    \
    \    if(even[i] === smallest && index[i] < smallest_index){\n            smallest\
    \ = even[i];\n            smallest_index = index[i];\n        }\n    }\n    return\
    \ [smallest, smallest_index];\n}\n", "    let evens = [];\n    let minIndex =\
    \ 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evens.push(arr[i]);\n            if(evens.length === 1){\n      \
    \          minIndex = i;\n            }\n        }\n    }\n    if(evens.length\
    \ === 0){\n        return [];\n    }\n    evens.sort((a, b) => a - b);\n    return\
    \ evens.slice(0, evens.length - 1).map(e => [e, minIndex]);\n}\n", "    let minIndex\
    \ = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for (let i = 0; i < arr.length; i++){\n\
    \        if (arr[i] < minValue){\n            minValue = arr[i];\n           \
    \ minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", " \
    \   let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evenNodes = arr.filter(node => node.value % 2 === 0);\n    let smallestEvenValue\
    \ = evenNodes.reduce((prev, curr) => prev < curr.value ? prev : curr.value);\n\
    \    let smallestIndex = evenNodes.reduce((prev, curr) => prev < curr.value ?\
    \ prev : curr.index);\n    return [smallestEvenValue, smallestIndex];\n}\n", " \
    \   let evenNodes = arr.filter(node => node.value % 2 === 0);\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    let smallestEven = evenNodes.reduce((prev,\
    \ curr) => prev < curr.value ? prev : curr.value);\n    let smallestIndex = evenNodes.reduce((prev,\
    \ curr) => prev < curr.value ? prev : curr.index);\n    return [smallestEven,\
    \ smallestIndex];\n}\n", "    let even = []\n    let index = []\n    for(let i\
    \ = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            even.push(arr[i])\n\
    \            index.push(i)\n        }\n    }\n    if(even.length === 0){\n   \
    \     return []\n    }\n    even.sort((a, b) => a - b)\n    let smallest = even[0]\n\
    \    let smallestIndex = 0\n    for(let i = 0; i < even.length; i++){\n      \
    \  if(even[i] === smallest && i !== 0){\n            smallestIndex = index[i]\n\
    \        }\n    }\n    return [smallest, smallestIndex]\n}\n", "    let minValue\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(minValue > arr[i]){\n \
    \               minValue = arr[i];\n                minIndex = i;\n          \
    \  }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    arr.sort((a,b)=>a-b);\n\
    \    let even=arr.filter(v=>v%2===0).length;\n    if(even===0){\n        return\
    \ [];\n    }\n    let index=arr.indexOf(arr[0]);\n    return [index,even];\n}",
  "    arr = arr.sort((a,b)=>a-b);\n    let min = arr[0];\n    let index = -1;\n \
    \   for(let i=0;i<arr.length;i++){\n        if(arr[i]%2===0 && arr[i]<min){\n\
    \            min = arr[i];\n            index = i;\n        }\n    }\n    return\
    \ [min, index];\n}\n", "    let evens = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            evens.push(arr[i]);\n    \
    \    }\n    }\n    let smallest = Math.min(...evens);\n    let index = evens.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let evens = [];\n    let index = 0;\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n   \
    \         evens.push(arr[i]);\n        }\n    }\n    evens.sort((a,b) => a - b);\n\
    \    for(let i = 0; i < evens.length; i++){\n        if(evens[i] !== 0){\n   \
    \         return [ evens[i], index ];\n        }\n        index++;\n    }\n  \
    \  return [];\n}\n", "    let evenValues = [];\n    let smallestIndex = 0;\n \
    \   let smallestValue = 0;\n    for(let i = 0; i < arr.length; i++){\n       \
    \ if(arr[i] % 2 === 0){\n            evenValues.push(arr[i]);\n        }\n   \
    \     if(arr[i] < smallestValue){\n            smallestValue = arr[i];\n     \
    \       smallestIndex = i;\n        }\n    }\n    if(evenValues.length === 0){\n\
    \        return [];\n    }\n    for(let i = 0; i < evenValues.length; i++){\n\
    \        if(evenValues[i] < smallestValue){\n            smallestValue = evenValues[i];\n\
    \            smallestIndex = i;\n        }\n    }\n    return [smallestValue,\
    \ smallestIndex];\n}\n", "    let minIndex = -1;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let evenNodes = [];\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenNodes.push(arr[i]);\n            if(evenNodes.length === 1){\n\
    \                smallestIndex = i;\n            }\n        }\n    }\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    if(evenNodes.length === 1){\n      \
    \  return [evenNodes[0], smallestIndex];\n    }\n    let smallestValue = evenNodes[0];\n\
    \    let smallestIndexInArray = smallestIndex;\n    for(let i = 1; i < evenNodes.length;\
    \ i++){\n        if(evenNodes[i] < smallestValue){\n            smallestValue\
    \ = evenNodes[i];\n            smallestIndexInArray = i;\n        }\n    }\n \
    \   return [smallestValue, smallestIndexInArray];\n}\n", "    let even = [];\n\
    \    let index = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            even.push(arr[i]);\n            index.push(i);\n  \
    \      }\n    }\n    if(even.length === 0){\n        return [];\n    }\n    let\
    \ smallest = Math.min(...even);\n    let index = even.indexOf(smallest);\n   \
    \ return [smallest, index];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n \
    \   let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i].value\
    \ % 2 === 0){\n            result.push(arr[i]);\n        }\n    }\n    if(result.length\
    \ === 0){\n        return [];\n    }\n    else if(result.length === 1){\n    \
    \    return [result[0].value, result[0].index];\n    }\n    else{\n        return\
    \ [minValue, minIndex];\n    }\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for (let i = 1; i < arr.length; i++){\n        if (arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = arr.filter(function(item){\n\
    \        return item % 2 === 0;\n    });\n    let smallest = even.sort((a,b) =>\
    \ a - b)[0];\n    let index = even.indexOf(smallest);\n    return [smallest, index];\n\
    }\n", "    let even = arr.filter(node => node.value % 2 === 0);\n    if(even.length\
    \ === 0) return [];\n    let min = even.sort((a,b) => a.value - b.value)[0];\n\
    \    let index = even.findIndex(node => node.value === min.value);\n    return\
    \ [min.value, index];\n}\n", "    let evenNodes = [];\n    let smallestIndex =\
    \ 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenNodes.push(arr[i]);\n            if(evenNodes.length === 1){\n\
    \                smallestIndex = i;\n            }\n        }\n    }\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    if(evenNodes.length === 1){\n      \
    \  return [evenNodes[0], smallestIndex];\n    }\n    let smallestValue = evenNodes[0];\n\
    \    for(let i = 0; i < evenNodes.length; i++){\n        if(evenNodes[i] < smallestValue){\n\
    \            smallestValue = evenNodes[i];\n            smallestIndex = i;\n \
    \       }\n    }\n    return [smallestValue, smallestIndex];\n}\n", "    let even\
    \ = arr.filter(function(item){\n        return item % 2 === 0;\n    });\n    let\
    \ smallest = Math.min.apply(null, even);\n    let index = even.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let even = [];\n    let index = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n   \
    \         even.push(arr[i]);\n            index.push(i);\n        }\n    }\n \
    \   if(even.length === 0){\n        return [];\n    }\n    even.sort((a,b) =>\
    \ a - b);\n    let smallest = even[0];\n    let smallestIndex = 0;\n    for(let\
    \ i = 0; i < even.length; i++){\n        if(even[i] === smallest && i !== 0){\n\
    \            smallestIndex = index[i];\n        }\n    }\n    return [smallest,\
    \ smallestIndex];\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = [];\n    let index =\
    \ [];\n    let smallest;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            even.push(arr[i]);\n            index.push(i);\n  \
    \      }\n    }\n    smallest = even.sort((a, b) => a - b)[0];\n    for(let i\
    \ = 0; i < even.length; i++){\n        if(even[i] === smallest){\n           \
    \ index.splice(i, 1);\n        }\n    }\n    return index;\n}\n", "    let minValue\
    \ = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(minValue > arr[i]){\n \
    \               minValue = arr[i];\n                minIndex = i;\n          \
    \  }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let evens\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evens.push(arr[i]);\n        }\n    }\n    if(evens.length === 0){\n\
    \        return [];\n    }\n    evens = evens.sort((a, b) => a - b);\n    let\
    \ smallest = evens[0];\n    let index = evens.indexOf(smallest);\n    return [smallest,\
    \ index];\n}\n", "    let minIndex = arr.findIndex(node => node.value % 2 ===\
    \ 0);\n    if(minIndex === -1){\n        return [];\n    }\n    let minValue =\
    \ arr[minIndex];\n    let result = [minValue, minIndex];\n    arr.splice(minIndex,\
    \ 1);\n    return result;\n}\n", "    let even = [];\n    let index = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n     \
    \       even.push(arr[i]);\n            index.push(i);\n        }\n    }\n   \
    \ if(even.length === 0){\n        return [];\n    }\n    let smallest = Math.min.apply(null,\
    \ even);\n    let index = index.indexOf(even.indexOf(smallest));\n    return [smallest,\
    \ index];\n}\n", "    let evenNodes = [];\n    let smallestIndex = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            evenNodes.push(arr[i]);\n\
    \            if(evenNodes.length === 1){\n                smallestIndex = i;\n\
    \            }\n        }\n    }\n    return evenNodes.sort((a,b)=>a-b).pop();\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = [];\n    let index = [];\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            even.push(arr[i]);\n\
    \            index.push(i);\n        }\n    }\n    if(even.length === 0){\n  \
    \      return [];\n    }\n    even.sort();\n    index.sort();\n    let min = even[0];\n\
    \    let minIndex = index[0];\n    for(let i = 1; i < even.length; i++){\n   \
    \     if(even[i] === min){\n            minIndex = index[i];\n        }\n    }\n\
    \    return [min, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue =\
    \ arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "  let even = [];\n  let small = [];\n\
    \  let index = [];\n  let temp = [];\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      even.push(arr[i]);\n    } else {\n      small.push(arr[i]);\n\
    \    }\n  }\n  for (let i = 0; i < small.length; i++) {\n    temp.push(small[i]);\n\
    \  }\n  for (let i = 0; i < even.length; i++) {\n    temp.push(even[i]);\n  }\n\
    \  for (let i = 0; i < temp.length; i++) {\n    if (temp[i] < temp[i + 1]) {\n\
    \      index.push(temp[i]);\n    } else {\n      index.push(temp[i + 1]);\n  \
    \  }\n  }\n  return index;\n}\n", "    let minIndex = -1;\n    let minValue =\
    \ arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    if (minIndex === -1) {\n        return [];\n\
    \    }\n    let minValue = arr[minIndex];\n    let result = [];\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i].value % 2 === 0) {\n     \
    \       result.push(arr[i]);\n            if (arr[i].value < minValue) {\n   \
    \             minValue = arr[i].value;\n                minIndex = i;\n      \
    \      }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let even\
    \ = arr.filter(function(num){\n        return num % 2 === 0;\n    });\n    let\
    \ smallest = Math.min(...even);\n    let index = even.indexOf(smallest);\n   \
    \ return [smallest, index];\n}\n", "    let even = arr.filter(function(x){return\
    \ x%2==0;});\n    let min = even.map(function(x){return x.valueOf();}).sort((a,b)=>a-b);\n\
    \    let index = min.indexOf(0);\n    return min[index];\n}\n", "    let even\
    \ = arr.filter(function(el){\n        return el%2 === 0;\n    });\n    let smallest\
    \ = even.sort((a,b) => a-b)[0];\n    let index = even.indexOf(smallest);\n   \
    \ return [smallest, index];\n}\n", "    let evens = arr.filter(x => x % 2 ===\
    \ 0);\n    let smallest = Math.min(...evens);\n    let index = evens.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let even = arr.filter(function(val){\n\
    \        return val%2 === 0;\n    });\n    let smallest = Math.min.apply(null,\
    \ even);\n    let index = even.indexOf(smallest);\n    return [smallest, index];\n\
    }\n", "  let even = [];\n  let index = [];\n  let smallest;\n  for(let i = 0;\
    \ i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      even.push(arr[i]);\n\
    \    }\n  }\n  smallest = even[0];\n  for(let i = 0; i < even.length; i++){\n\
    \    if(even[i] < smallest){\n      smallest = even[i];\n    }\n  }\n  for(let\
    \ i = 0; i < even.length; i++){\n    if(even[i] === smallest){\n      index.push(i);\n\
    \    }\n  }\n  return [smallest, index];\n}\n", "    let even = arr.filter(function(el){\n\
    \        return el % 2 === 0;\n    });\n    let smallest = even.sort((a,b)=>a-b).pop();\n\
    \    let index = even.indexOf(smallest);\n    return [smallest, index];\n}\n",
  "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i]\
    \ < min){\n                min = arr[i];\n                minIndex = i;\n    \
    \        }\n        }\n    }\n    return [min, minIndex];\n}\n", "    let even\
    \ = arr.filter(function(e){\n        return e % 2 === 0;\n    });\n    let smallest\
    \ = Math.min.apply(null, even);\n    let index = even.indexOf(smallest);\n   \
    \ return [smallest, index];\n}\n", "    let minValue = arr[0];\n    let minIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = 0;\n  let result = [];\n  for(let i = 0; i < arr.length; i++){\n\
    \    if(arr[i] % 2 === 0){\n      if(arr[i] < min){\n        min = arr[i];\n \
    \       minIndex = i;\n      }\n    }\n  }\n  if(arr.length > 0){\n    result.push([min,\
    \ minIndex]);\n  }\n  return result;\n}\n", "    let even = [];\n    let index\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            even.push(arr[i]);\n            index.push(i);\n        }\n    }\n\
    \    if(even.length === 0){\n        return [];\n    }\n    even.sort((a, b) =>\
    \ a - b);\n    let smallest = Math.min(...even);\n    let index = even.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let even = arr.filter(function(val){\n\
    \        return val%2 === 0;\n    });\n    if(even.length === 0){\n        return\
    \ [];\n    }\n    let smallest = Math.min.apply(null, even);\n    let index =\
    \ even.indexOf(smallest);\n    return [smallest, index];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    if(minIndex === -1){\n \
    \       return [];\n    }\n    let minValue = arr[minIndex];\n    let evenNodes\
    \ = arr.filter(node => node.value % 2 === 0);\n    if(evenNodes.length === 0){\n\
    \        return [];\n    }\n    let minEvenValue = evenNodes.reduce((prev, curr)\
    \ => prev < curr.value ? prev : curr.value);\n    return [minEvenValue, minIndex];\n\
    }\n", "    let minIndex = arr.findIndex(node => node.value % 2 === 0);\n    let\
    \ minValue = arr[minIndex];\n    let result = [];\n    arr.forEach((node, index)\
    \ => {\n        if(node.value % 2 === 0 && node.value < minValue){\n         \
    \   minValue = node.value;\n            minIndex = index;\n        }\n    });\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "  let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n  return minIndex === -1 ? [] : [arr[minIndex].value,\
    \ minIndex];\n}\n", "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(arr[i] < min){\n                min = arr[i];\n              \
    \  minIndex = i;\n            }\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let min = Infinity;\n    let minIndex = 0;\n    for(let i = 0; i <\
    \ arr.length; i++){\n        if(arr[i] < min){\n            min = arr[i];\n  \
    \          minIndex = i;\n        }\n    }\n    return [min, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    arr = arr.sort((a,b)=>a-b);\n    let even = arr.filter(v=>v%2===0);\n    if(even.length===0){\n\
    \        return [];\n    }\n    let min = even[0];\n    let index = even.indexOf(min);\n\
    \    let result = [min];\n    while(index!==-1){\n        min = even[index];\n\
    \        index = even.indexOf(min);\n        result.unshift(min);\n    }\n   \
    \ return result;\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n \
    \   for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n   \
    \         minValue = arr[i];\n            minIndex = i;\n        }\n    }\n  \
    \  return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = arr.filter(function(x){\n\
    \        return x % 2 === 0;\n    });\n    let smallest = Math.min.apply(null,\
    \ even);\n    let index = even.indexOf(smallest);\n    return [smallest, index];\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i]\
    \ < min){\n                min = arr[i];\n                minIndex = i;\n    \
    \        }\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    return minIndex === -1 ?\
    \ [] : [arr[minIndex], minIndex];\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let minIndex = 0;\n  let result = [];\n  for(let i = 0; i < arr.length; i++){\n\
    \    if(arr[i] % 2 === 0){\n      if(min > arr[i]){\n        min = arr[i];\n \
    \       minIndex = i;\n      }\n    }\n  }\n  if(min === Number.MAX_SAFE_INTEGER){\n\
    \    return [];\n  }\n  result.push(min, minIndex);\n  return result;\n}\n", " \
    \ let minIndex = arr.findIndex(node => node.value % 2 === 0);\n  return minIndex\
    \ === -1 ? [] : [arr[minIndex].value, minIndex];\n}\n", "    let evenNodes = [];\n\
    \    let smallestIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n      \
    \  if(arr[i] % 2 === 0){\n            evenNodes.push(arr[i]);\n            if(evenNodes.length\
    \ === 1){\n                smallestIndex = i;\n            }\n        }\n    }\n\
    \    return evenNodes.sort((a,b) => a - b).splice(0, evenNodes.length).sort((a,b)\
    \ => a - b).splice(0, smallestIndex);\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = arr.findIndex(node\
    \ => node.value % 2 === 0);\n    let minValue = arr[minIndex];\n    let result\
    \ = [];\n    arr.forEach((node, index) => {\n        if(node.value % 2 === 0){\n\
    \            if(node.value < minValue){\n                minValue = node.value;\n\
    \                minIndex = index;\n            }\n        }\n    });\n    return\
    \ [minValue, minIndex];\n}\n", "    let evenArr = [];\n    let minIndex = 0;\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n   \
    \         evenArr.push(arr[i]);\n            if(evenArr.length === 1){\n     \
    \           minIndex = i;\n            }\n        }\n    }\n    return evenArr.length\
    \ === 0 ? [] : [evenArr[minIndex], minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            min = Math.min(min, arr[i]);\n            minIndex\
    \ = i;\n        }\n    }\n    return [min, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let evenValues\
    \ = [];\n    let smallestIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i] % 2 === 0){\n            evenValues.push(arr[i]);\n       \
    \     if(evenValues.length === 1){\n                smallestIndex = i;\n     \
    \       }\n        }\n    }\n    return evenValues.sort((a,b) => a - b).pop()\
    \ || [smallestIndex, smallestIndex];\n}\n", "    arr = arr.sort((a,b)=>a-b);\n\
    \    let min = arr[0];\n    let index = -1;\n    for(let i=1;i<arr.length;i++){\n\
    \        if(arr[i]===min){\n            index = i;\n            break;\n     \
    \   }\n    }\n    return [min,index];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let evenNodes = arr.filter(node\
    \ => node.value % 2 === 0);\n    let smallestEvenNode = evenNodes.reduce((a, b)\
    \ => a.value < b.value ? a : b);\n    let smallestEvenIndex = evenNodes.indexOf(smallestEvenNode);\n\
    \    return [smallestEvenNode.value, smallestEvenIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let evenNodes\
    \ = [];\n    let smallestEvenValue = arr[0];\n    let smallestIndex = 0;\n   \
    \ for(let i = 1; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n      \
    \      evenNodes.push(arr[i]);\n            if(arr[i] < smallestEvenValue){\n\
    \                smallestEvenValue = arr[i];\n                smallestIndex =\
    \ i;\n            }\n        }\n    }\n    if(evenNodes.length === 0){\n     \
    \   return [];\n    }\n    return [smallestEvenValue, smallestIndex];\n}\n", " \
    \ let minIndex = -1;\n  let minValue = arr[0];\n  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  return [minValue, minIndex];\n}\n", "    let minIndex =\
    \ -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let evens\
    \ = [];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n   \
    \     if(arr[i] % 2 === 0){\n            evens.push(arr[i]);\n            if(evens.length\
    \ === 1){\n                minIndex = i;\n            }\n        }\n    }\n  \
    \  if(evens.length === 0){\n        return [];\n    }\n    evens.sort((a, b) =>\
    \ a - b);\n    return evens.map(e => [e, minIndex]).filter(e => e[0] % 2 === 0);\n\
    }\n", "    let evens = [];\n    let smallest;\n    let smallestIndex;\n    let\
    \ index;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 ===\
    \ 0){\n            evens.push(arr[i]);\n        }\n    }\n    smallest = evens[0];\n\
    \    smallestIndex = 0;\n    for(let i = 0; i < evens.length; i++){\n        if(smallest\
    \ > evens[i]){\n            smallest = evens[i];\n            smallestIndex =\
    \ i;\n        }\n    }\n    return [smallest, smallestIndex];\n}\n", "    arr\
    \ = arr.sort((a,b)=>a-b);\n    let result = [];\n    let minIndex = arr.findIndex((el,i)=>{\n\
    \        if(el%2===0){\n            result.push(el);\n            return true;\n\
    \        }\n        return false;\n    });\n    if(minIndex===-1){\n        return\
    \ [];\n    }\n    let minValue = arr[minIndex];\n    for(let i=minIndex+1;i<arr.length;i++){\n\
    \        if(arr[i]%2===0){\n            result.push(arr[i]);\n        }\n    }\n\
    \    return [minValue,minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] === minValue){\n\
    \            minIndex = i;\n        }\n        if(arr[i] < minValue){\n      \
    \      minValue = arr[i];\n            minIndex = i;\n        }\n    }\n    return\
    \ [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let evenNodes = arr.filter(node =>\
    \ node.value % 2 === 0);\n    let smallestEvenValue = evenNodes.reduce((prev,\
    \ curr) => prev < curr.value ? prev : curr.value);\n    let smallestIndex = evenNodes.reduce((prev,\
    \ curr) => prev < curr.value ? prev : curr.index);\n    return [smallestEvenValue,\
    \ smallestIndex];\n}\n", "    let even = []\n    let index = []\n    for(let i\
    \ = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            even.push(arr[i])\n\
    \            index.push(i)\n        }\n    }\n    if(even.length === 0){\n   \
    \     return []\n    }\n    let min = even[0]\n    let minIndex = 0\n    for(let\
    \ i = 0; i < even.length; i++){\n        if(even[i] === min){\n            minIndex\
    \ = index[i]\n        }\n    }\n    return [min, minIndex]\n}\n", "    let minIndex\
    \ = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = arr.findIndex(node => node.value % 2 === 0);\n    return minIndex === -1 ?\
    \ [] : [arr[minIndex], minIndex];\n}\n", "  let evens = arr.filter(x => x % 2\
    \ === 0);\n  let smallest = Math.min(...evens);\n  let index = evens.indexOf(smallest);\n\
    \  return [smallest, index];\n}\n", "    let minIndex = 0;\n    let minValue =\
    \ arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let evens = [];\n    let minIndex\
    \ = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evens.push(arr[i]);\n            if(minIndex === -1 || arr[i] < evens[minIndex]){\n\
    \                minIndex = i;\n            }\n        }\n    }\n    if(evens.length\
    \ === 0){\n        return [];\n    }\n    return [evens[minIndex], minIndex];\n\
    }\n", "    let evenNodes = arr.filter(function(x){\n        return x % 2 === 0;\n\
    \    });\n    let smallestEvenNode = evenNodes.reduce(function(a, b){\n      \
    \  return Math.min(a, b);\n    });\n    let smallestIndex = 0;\n    for(let i\
    \ = 0; i < evenNodes.length; i++){\n        if(evenNodes[i] === smallestEvenNode){\n\
    \            smallestIndex = i;\n        }\n    }\n    return [smallestEvenNode,\
    \ smallestIndex];\n}\n", "    let even = [];\n    let index = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            even.push(arr[i]);\n\
    \            index.push(i);\n        }\n    }\n    if(even.length === 0){\n  \
    \      return [];\n    }\n    even.sort();\n    index.sort((a, b) => a - b);\n\
    \    let smallest = even[0];\n    let smallestIndex = index[0];\n    for(let i\
    \ = 1; i < even.length; i++){\n        if(even[i] === smallest && index[i] < smallestIndex){\n\
    \            smallest = even[i];\n            smallestIndex = index[i];\n    \
    \    }\n    }\n    return [smallest, smallestIndex];\n}\n", "    let even = [];\n\
    \    let index = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            even.push(arr[i]);\n            index.push(i);\n  \
    \      }\n    }\n    if(even.length === 0){\n        return [];\n    }\n    let\
    \ smallest = Math.min.apply(Math, even);\n    let index = even.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let evenValues = [];\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenValues.push(arr[i]);\n            if(evenValues.length === 1){\n\
    \                smallestIndex = i;\n            }\n        }\n    }\n    if(evenValues.length\
    \ === 0){\n        return [];\n    }\n    if(evenValues.length === 1){\n     \
    \   return [evenValues[0], smallestIndex];\n    }\n    let smallestValue = evenValues[0];\n\
    \    let smallestIndexOfSmallestValue = 0;\n    for(let i = 0; i < evenValues.length;\
    \ i++){\n        if(evenValues[i] < smallestValue){\n            smallestValue\
    \ = evenValues[i];\n            smallestIndexOfSmallestValue = i;\n        }\n\
    \    }\n    return [smallestValue, smallestIndexOfSmallestValue];\n}\n", "   \
    \ let evenNodes = [];\n    let smallestIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            evenNodes.push(arr[i]);\n\
    \            if(evenNodes.length === 1){\n                smallestIndex = i;\n\
    \            }\n        }\n    }\n    if(evenNodes.length === 0){\n        return\
    \ [];\n    }\n    if(evenNodes.length === 1){\n        return [evenNodes[0], smallestIndex];\n\
    \    }\n    let smallestValue = evenNodes[0];\n    let smallestIndexInEvenNodes\
    \ = smallestIndex;\n    for(let i = 1; i < evenNodes.length; i++){\n        if(evenNodes[i]\
    \ < smallestValue){\n            smallestValue = evenNodes[i];\n            smallestIndexInEvenNodes\
    \ = i;\n        }\n    }\n    return [smallestValue, smallestIndexInEvenNodes];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = arr.filter(function(e){\n        return e\
    \ % 2 === 0;\n    });\n    if(even.length === 0){\n        return [];\n    }\n\
    \    let min = even[0];\n    let index = even.indexOf(min);\n    while(index >\
    \ -1){\n        min = even[index];\n        index = even.indexOf(min);\n    }\n\
    \    return [min, index];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let evenNodes = [];\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenNodes.push(arr[i]);\n        }\n        if(arr[i] < arr[smallestIndex]){\n\
    \            smallestIndex = i;\n        }\n    }\n    return evenNodes.sort((a,b)\
    \ => a - b).pop();\n}\n", "    let minIndex = arr.findIndex(node => node.value\
    \ % 2 === 0);\n    if(minIndex === -1){\n        return [];\n    }\n    let minValue\
    \ = arr[minIndex];\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i].value % 2 === 0){\n            if(arr[i].value < minValue){\n\
    \                minValue = arr[i].value;\n                minIndex = i;\n   \
    \         }\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let\
    \ minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evenArr = [];\n    let smallest;\n    let smallestIndex;\n    let index;\n\
    \    for (let i = 0; i < arr.length; i++){\n        if (arr[i] % 2 === 0){\n \
    \           evenArr.push(arr[i]);\n        }\n    }\n    smallest = evenArr[0];\n\
    \    smallestIndex = 0;\n    for (let i = 0; i < evenArr.length; i++){\n     \
    \   if (evenArr[i] < smallest){\n            smallest = evenArr[i];\n        \
    \    smallestIndex = i;\n        }\n    }\n    return [smallest, smallestIndex];\n\
    }\n", "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1;\
    \ i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = arr.findIndex((el,i)=>{\n        return\
    \ el%2===0;\n    });\n    if(minIndex===-1){\n        return [];\n    }\n    let\
    \ minValue = arr[minIndex];\n    let minIndexes = [];\n    for(let i=0;i<arr.length;i++){\n\
    \        if(arr[i]===minValue){\n            minIndexes.push(i);\n        }\n\
    \    }\n    if(minIndexes.length===0){\n        return [];\n    }\n    let minIndexesSorted\
    \ = minIndexes.sort((a,b)=>{\n        return a-b;\n    });\n    let minIndexesSorted\
    \ = minIndexesSorted.filter(el=>el%2===0);\n    let minIndexesSorted = minIndexesSorted.sort((a,b)=>{\n\
    \        return a-b;\n    });\n    return minIndexesSorted;\n}\n", "    let evens\
    \ = arr.filter(n => n % 2 === 0);\n    let smallestEven = evens.reduce((a, b)\
    \ => a < b ? a : b);\n    let index = arr.indexOf(smallestEven);\n    return [smallestEven,\
    \ index];\n}\n", "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(arr[i] < min){\n                min = arr[i];\n              \
    \  minIndex = i;\n            }\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let even = arr.filter(function(n){\n        return n % 2 === 0;\n \
    \   });\n    let smallest = even.sort((a,b) => a - b)[0];\n    let index = even.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let even = []\n    let index = []\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n   \
    \         even.push(arr[i])\n            index.push(i)\n        }\n    }\n   \
    \ even.sort()\n    let smallest = even[0]\n    let smallestIndex = 0\n    for(let\
    \ i = 0; i < even.length; i++){\n        if(even[i] === smallest && i === even.length\
    \ - 1) smallestIndex = index[i]\n        if(even[i] === smallest && i !== even.length\
    \ - 1) smallestIndex = index[i]\n    }\n    return [smallest, smallestIndex]\n\
    }\n", "    let evens = [];\n    let smallest;\n    let index;\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            evens.push(arr[i]);\n\
    \        }\n    }\n    smallest = evens[0];\n    index = -1;\n    for(let i =\
    \ 0; i < evens.length; i++){\n        if(evens[i] < smallest){\n            smallest\
    \ = evens[i];\n            index = i;\n        }\n    }\n    return [smallest,\
    \ index];\n}\n", "    let even = arr.filter(function(el){\n        return el%2\
    \ === 0;\n    });\n    let smallest = even.sort((a,b)=>a-b).pop();\n    let index\
    \ = even.indexOf(smallest);\n    return [smallest, index];\n}\n", "    let evenNodes\
    \ = [];\n    let smallestEven = arr[0];\n    let smallestIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            evenNodes.push(arr[i]);\n\
    \            if(arr[i] < smallestEven){\n                smallestEven = arr[i];\n\
    \                smallestIndex = i;\n            }\n        }\n    }\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    return [smallestEven, smallestIndex];\n\
    }\n", "    let evenArr = [];\n    let indexArr = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            evenArr.push(arr[i]);\n  \
    \          indexArr.push(i);\n        }\n    }\n    if(evenArr.length === 0){\n\
    \        return [];\n    }\n    let smallestValue = evenArr[0];\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < evenArr.length; i++){\n        if(evenArr[i] <\
    \ smallestValue){\n            smallestValue = evenArr[i];\n            smallestIndex\
    \ = i;\n        }\n    }\n    return [smallestValue, indexArr[smallestIndex]];\n\
    }\n", "    let evens = arr.filter(x => x % 2 === 0);\n    let smallest = Math.min(...evens);\n\
    \    let index = evens.indexOf(smallest);\n    return [smallest, index];\n}\n",
  "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let evenNodes = [];\n    let smallestIndex = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            evenNodes.push(arr[i]);\n\
    \            if(evenNodes.length === 1){\n                smallestIndex = i;\n\
    \            }\n        }\n    }\n    return evenNodes.sort((a,b) => a-b).pop();\n\
    }\n", "    let evenValues = [];\n    let smallestValue = 0;\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenValues.push(arr[i]);\n        }\n        if(arr[i] < smallestValue){\n\
    \            smallestValue = arr[i];\n            smallestIndex = i;\n       \
    \ }\n    }\n    if(evenValues.length === 0){\n        return [];\n    }\n    for(let\
    \ i = 0; i < evenValues.length; i++){\n        if(evenValues[i] < smallestValue){\n\
    \            smallestValue = evenValues[i];\n            smallestIndex = i;\n\
    \        }\n    }\n    return [smallestValue, smallestIndex];\n}\n", "    let\
    \ minValue = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    let minIndex = arr.findIndex(node => node.value % 2 === 0);\n    let minValue\
    \ = arr[minIndex];\n    let result = [];\n    arr.forEach((node, index) => {\n\
    \        if(node.value % 2 === 0){\n            result.push([node.value, index]);\n\
    \        }\n    });\n    if(result.length){\n        result.sort((a, b) => a[0]\
    \ - b[0]);\n        return result[0][1];\n    }\n    return [];\n}\n", "    let\
    \ even = [];\n    let index = [];\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i] % 2 === 0){\n            even.push(arr[i]);\n            index.push(i);\n\
    \        }\n    }\n    \n    if(even.length === 0){\n        return [];\n    }\n\
    \    \n    let smallest = Math.min(...even);\n    let smallestIndex = 0;\n   \
    \ for(let i = 0; i < even.length; i++){\n        if(even[i] === smallest){\n \
    \           smallestIndex = index[i];\n        }\n    }\n    \n    return [smallest,\
    \ smallestIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let even = arr.filter(function(x){\n\
    \        return x % 2 === 0;\n    });\n    let index = even.indexOf(Math.min(...even));\n\
    \    return even[index];\n}\n", "    let minValue = arr[0];\n    let minIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minValue = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            if(arr[i] < minValue){\n                minValue =\
    \ arr[i];\n                minIndex = i;\n            }\n        }\n    }\n  \
    \  return [minValue, minIndex];\n}\n", "    let evenNodes = [];\n    let smallestEven\
    \ = Number.MAX_SAFE_INTEGER;\n    let smallestIndex = -1;\n    for(let i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            evenNodes.push(arr[i]);\n\
    \            if(arr[i] < smallestEven){\n                smallestEven = arr[i];\n\
    \                smallestIndex = i;\n            }\n        }\n    }\n    if(evenNodes.length\
    \ === 0){\n        return [];\n    }\n    return [smallestEven, smallestIndex];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let i = 1; i\
    \ < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue =\
    \ arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = arr.filter(function(val){\n        return\
    \ val%2 === 0;\n    });\n    let smallest = Math.min(...even);\n    let index\
    \ = even.indexOf(smallest);\n    return [smallest, index];\n}\n", "    let evens\
    \ = [];\n    let minIndex = -1;\n    for(let i = 0; i < arr.length; i++){\n  \
    \      if(arr[i] % 2 === 0){\n            evens.push(arr[i]);\n            if(minIndex\
    \ === -1 || arr[i] < evens[minIndex]){\n                minIndex = i;\n      \
    \      }\n        }\n    }\n    return evens.sort((a,b) => a - b).slice(0, minIndex\
    \ + 1);\n}\n", "    let even = arr.filter(function(x){\n        return x % 2 ===\
    \ 0;\n    });\n    let smallest = even.sort((a,b)=>a-b)[0];\n    let index = even.indexOf(smallest);\n\
    \    return [smallest, index];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let evenValues = [];\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenValues.push(arr[i]);\n            if(evenValues.length === 1){\n\
    \                smallestIndex = i;\n            }\n        }\n    }\n    if(evenValues.length\
    \ === 0){\n        return [];\n    }\n    if(evenValues.length === 1){\n     \
    \   return [evenValues[0], smallestIndex];\n    }\n    let smallestValue = evenValues[0];\n\
    \    let smallestIndexInArray = smallestIndex;\n    for(let i = 1; i < evenValues.length;\
    \ i++){\n        if(evenValues[i] < smallestValue){\n            smallestValue\
    \ = evenValues[i];\n            smallestIndexInArray = i;\n        }\n    }\n\
    \    return [smallestValue, smallestIndexInArray];\n}\n", "    let min = Infinity;\n\
    \    let minIndex = 0;\n    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] < min){\n            min = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    result.push(min, minIndex);\n    return result;\n\
    }\n", "    let even = arr.filter(function(val){\n        return val%2 === 0;\n\
    \    });\n    if(even.length === 0) return [];\n    let min = even.map(function(val){\n\
    \        return val < even[0]? val : even.indexOf(val);\n    });\n    return min.map(function(val,\
    \ index){\n        return [val, index];\n    });\n}\n", "    let minValue = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            if(arr[i] < minValue){\n                minValue =\
    \ arr[i];\n                minIndex = i;\n            }\n        }\n    }\n  \
    \  return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    arr = arr.sort((a,b)=>a-b);\n  \
    \  let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(minValue === arr[i]){\n\
    \                minIndex = i;\n            }\n            else{\n           \
    \     minValue = arr[i];\n                minIndex = i;\n            }\n     \
    \   }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue = arr[0];\n\
    \    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let evenNodes =\
    \ [];\n    let smallestEvenValue = arr[0];\n    let smallestIndex = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i]\
    \ < smallestEvenValue){\n                smallestEvenValue = arr[i];\n       \
    \         smallestIndex = i;\n            }\n        }\n    }\n    return [smallestEvenValue,\
    \ smallestIndex];\n}\n", "    let even = arr.filter(x => x % 2 === 0);\n    if(even.length\
    \ === 0) return [];\n    let min = even[0];\n    let index = even.indexOf(min);\n\
    \    while(index > -1){\n        if(even[index] === min){\n            min = even[index\
    \ + 1];\n            index = even.indexOf(min);\n        }else{\n            index\
    \ = even.indexOf(min);\n        }\n    }\n    return [min, index];\n}\n", "  \
    \  let evenNodes = [];\n    let smallestEvenValue = arr[0];\n    let smallestIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(smallestEvenValue === arr[i]){\n                smallestEvenValue\
    \ = arr[i];\n                smallestIndex = i;\n            }\n            else{\n\
    \                evenNodes.push([arr[i], i]);\n            }\n        }\n    }\n\
    \    return evenNodes.sort((a,b)=>a[0]-b[0])[0];\n}\n", "    let minIndex = 0;\n\
    \    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n      \
    \  if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minIndex\
    \ = 0;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let minValue\
    \ = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n\
    \        if(arr[i] < minValue){\n            minValue = arr[i];\n            minIndex\
    \ = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n", "    let even\
    \ = arr.filter(function(val){\n        return val%2 === 0;\n    });\n    let smallest\
    \ = Math.min.apply(null, even);\n    let index = even.indexOf(smallest);\n   \
    \ return [smallest, index];\n}\n", "    let minIndex = arr.findIndex(node => node.value\
    \ % 2 === 0);\n    if (minIndex === -1) return [];\n    let minValue = arr[minIndex];\n\
    \    let result = [];\n    for (let i = 0; i < arr.length; i++){\n        if (arr[i].value\
    \ % 2 === 0 && arr[i].value < minValue){\n            result.push(arr[i]);\n \
    \       }\n    }\n    return result;\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n      \
    \          min = arr[i];\n                minIndex = i;\n            }\n     \
    \   }\n    }\n    return [min, minIndex];\n}\n", "  let minIndex = 0;\n  let minValue\
    \ = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < minValue)\
    \ {\n      minValue = arr[i];\n      minIndex = i;\n    }\n  }\n  return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let evenNodes = arr.filter(node => node.value % 2 ===\
    \ 0);\n    let smallestEvenNode = evenNodes.reduce((prev, curr) => Math.min(prev,\
    \ curr.value), Infinity);\n    let smallestIndex = 0;\n    for(let i = 0; i <\
    \ evenNodes.length; i++){\n        if(evenNodes[i].value === smallestEvenNode){\n\
    \            smallestIndex = i;\n        }\n    }\n    return [smallestEvenNode,\
    \ smallestIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let evenValues = [];\n    let smallestIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            evenValues.push(arr[i]);\n        }\n        if(arr[i] < arr[smallestIndex]){\n\
    \            smallestIndex = i;\n        }\n    }\n    if(evenValues.length ===\
    \ 0){\n        return [];\n    }\n    return evenValues.sort((a, b) => a - b).slice(0,\
    \ smallestIndex + 1);\n}\n", "    let minValue = arr[0];\n    let minIndex = 0;\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n  \
    \          minValue = arr[i];\n            minIndex = i;\n        }\n    }\n \
    \   return [minValue, minIndex];\n}\n", "    let minIndex = 0;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let even = [];\n    let index =\
    \ [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            even.push(arr[i]);\n            index.push(i);\n        }\n    }\n\
    \    if(even.length === 0){\n        return [];\n    }\n    even.sort((a,b) =>\
    \ a - b);\n    let smallest = even[0];\n    let smallestIndex = 0;\n    for(let\
    \ i = 0; i < even.length; i++){\n        if(even[i] === smallest && i !== 0){\n\
    \            smallestIndex = index[i];\n            smallest = even[i];\n    \
    \    }\n    }\n    return [smallest, smallestIndex];\n}\n", "    let evens = arr.filter(x\
    \ => x % 2 === 0);\n    let smallest = evens.reduce((a, b) => a < b ? a : b);\n\
    \    let index = arr.indexOf(smallest);\n    return [smallest, index];\n}\n",
  "    let minIndex = -1;\n    let minValue = arr[0];\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] < minValue){\n            minValue = arr[i];\n    \
    \        minIndex = i;\n        }\n    }\n    return [minValue, minIndex];\n}\n",
  "    arr = arr.sort((a,b)=>a-b);\n    let min = 0;\n    let minIndex = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 == 0){\n            if(min\
    \ == 0){\n                min = arr[i];\n                minIndex = i;\n     \
    \       }else if(arr[i] < min){\n                min = arr[i];\n             \
    \   minIndex = i;\n            }\n        }\n    }\n    return [min, minIndex];\n\
    }\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for (let i = 1;\
    \ i < arr.length; i++){\n        if (arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let minIndex = 0;\n    let minValue = arr[0];\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n            minValue\
    \ = arr[i];\n            minIndex = i;\n        }\n    }\n    return [minValue,\
    \ minIndex];\n}\n", "    let even = [];\n    let index = [];\n    let smallest;\n\
    \    let smallestIndex;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 === 0){\n            even.push(arr[i]);\n            index.push(i);\n  \
    \      }\n    }\n    smallest = even[0];\n    smallestIndex = index[0];\n    for(let\
    \ i = 1; i < even.length; i++){\n        if(even[i] < smallest){\n           \
    \ smallest = even[i];\n            smallestIndex = index[i];\n        }\n    }\n\
    \    return [smallest, smallestIndex];\n}\n", "    let minIndex = 0;\n    let\
    \ minValue = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ < minValue){\n            minValue = arr[i];\n            minIndex = i;\n  \
    \      }\n    }\n    return [minValue, minIndex];\n}\n", "    let evens = [];\n\
    \    let smallest;\n    let index;\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i] % 2 === 0){\n            evens.push(arr[i]);\n        }\n \
    \   }\n    smallest = evens[0];\n    index = evens.indexOf(smallest);\n    if(index\
    \ === -1){\n        return [];\n    }\n    for(let i = 0; i < evens.length; i++){\n\
    \        if(evens[i] === smallest){\n            index = i;\n        }\n    }\n\
    \    return [smallest, index];\n}\n", "    let minIndex = -1;\n    let minValue\
    \ = arr[0];\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < minValue){\n\
    \            minValue = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [minValue, minIndex];\n}\n", "    let evenNodes = arr.filter(node\
    \ => node.value % 2 === 0);\n    if(evenNodes.length === 0){\n        return [];\n\
    \    }\n    let smallestEvenValue = evenNodes.reduce((prev, curr) => prev < curr.value\
    \ ? prev : curr.value);\n    let smallestIndex = 0;\n    for(let i = 0; i < evenNodes.length;\
    \ i++){\n        if(evenNodes[i].value === smallestEvenValue){\n            smallestIndex\
    \ = i;\n        }\n    }\n    return [smallestEvenValue, smallestIndex];\n}\n",
  "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            min = Math.min(min,\
    \ arr[i]);\n            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

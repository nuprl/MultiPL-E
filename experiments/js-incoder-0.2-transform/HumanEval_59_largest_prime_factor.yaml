name: HumanEval_59_largest_prime_factor
language: js
prompt: "//Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  // >>> largest_prime_factor(13195)\n// 29\n// >>> largest_prime_factor(2048)\n//\
  \ 2\nfunction largest_prime_factor(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_prime_factor;\n  assert.deepEqual(candidate(15),5);\n  assert.deepEqual(candidate(27),3);\n\
  \  assert.deepEqual(candidate(63),7);\n  assert.deepEqual(candidate(330),11);\n\
  \  assert.deepEqual(candidate(13195),29);\n}\n\ntest();"
completions: ["  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n \
    \   if(s%2==0){\n      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n\
    \    }\n    s=s/2;\n  }\n  return i;\n}\n", "  var factor = 2;\n  while(n%factor\
    \ == 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                n /= i;\n            }\n    \
    \    }\n    }\n    return factors.length ? factors[factors.length - 1] : n;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=primes,algorithm,javascript |>\n<code>",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n\
    \        if(n % i == 0){\n            return i;\n        }\n        i += 2;\n\
    \    }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2\n  while(i*i<n){\n \
    \   i++\n  }\n  if(i==n){\n    return i;\n  }\n  var j=3\n  while(j*j<n){\n  \
    \  j++\n  }\n  return j;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var\
    \ factors = [];\n    for(var i = 2; i < n; i++){\n        var div = i; // the\
    \ divisor\n        while(div % 2 == 0){\n            div = div / 2;\n        }\n\
    \        if(div > 1){\n            factors.push(div);\n        }\n    }\n    return\
    \ factors[factors.length - 1];\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n \
    \   return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i\
    \ <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return\
    \ factors[factors.length-1];\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return\
    \ n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors.length\
    \ ? Math.max.apply(null, factors) : -1;\n}\n", "  if(n<=1){\n    return 1;\n \
    \ }\n  var i=2,s=1;\n  while(i*i<n){\n    s+=i;\n    i+=2;\n  }\n  return s;\n\
    }\n", "    var factor = 2;\n    while(n > 1){\n        if(n % factor === 0){\n\
    \            n = n/factor;\n        }\n        else{\n            factor++;\n\
    \        }\n    }\n    return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n\
    \  for(var i=2;i*i<=n;i++){\n    var d=n%i\n    if(d==0){\n      return i;\n \
    \   }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;\
    \ i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n \
    \ return n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n\
    \ % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      i=i*2+1;\n      s=s/2;\n    }\n    else{\n      i=i*2+3;\n      s=s/2;\n\
    \    }\n    if(s>1){\n      break;\n    }\n  }\n  return i;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n         \
    \   factors.push(i);\n            while(n % i == 0){\n                factors.push(i);\n\
    \                n /= i;\n            }\n        }\n    }\n    return factors.length\
    \ ? factors[factors.length - 1] : n;\n}\n", "    var factors = [];\n    for(var\
    \ i = 2; i <= n; i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \        }\n    }\n    return factors[factors.length-1];\n}\n</code>\n<|/ a tags=primes,javascript,algorithm\
    \ |>\n<| c |>\nThis doesn't work for `largest_prime_factor(13195)` because `factors.length`\
    \ is `1`\n<|/ c |>\n<| c |>\nYes, I noticed that after I posted my answer. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works\
    \ perfectly for small numbers but for large numbers it doesn't work. For example:\
    \ largest_prime_factor(13449) returns 2 instead of 3.\n<|/ c |>\n<| c |>\nYes,\
    \ I noticed that after I posted my answer. Thanks for pointing it out.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. Your code works perfectly for small numbers\
    \ but for large numbers it doesn't work. For example: largest_prime_factor(13449)\
    \ returns 2 instead of 3.\n<|/ c |>\n<| a dscore=4 |>\n<code>", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var j=1;\n    while(j<i){\n\
    \      j+=i;\n    }\n    if(j==n){\n      return i;\n    }\n  }\n  return 1;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      s=s/2;\n      i++;\n    }else{\n      break;\n    }\n  }\n  return i;\n\
    }\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n\
    \      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n}\n",
  "  var factor = 2;\n  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n %\
    \ i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n   \
    \ return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  var factor = 2;\n  while(n > 1){\n    if(n % factor == 0){\n      n = n/factor;\n\
    \      factor++;\n    }\n    else{\n      factor++;\n    }\n  }\n  return factor;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  var factor\
    \ = 2;\n  while(n%factor !== 0){\n    factor++;\n    n/=factor;\n  }\n  return\
    \ factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var\
    \ factors = [];\n    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n \
    \           factors.push(i);\n        }\n    }\n    return factors.length ? Math.max.apply(null,\
    \ factors) : -1;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "    var i = 2;\n    while(i < n){\n        if(n % i == 0){\n            n = n /\
    \ i;\n        }\n        i++;\n    }\n    return n;\n}\n", "  var factor = 2;\n\
    \  while(n > 1){\n    if(n % factor == 0){\n      n = n/factor;\n      factor++;\n\
    \    }\n    else{\n      factor++;\n    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n     \
    \   if(n % i == 0){\n            n = n/i;\n        }\n        else{\n        \
    \    return i;\n        }\n        i++;\n    }\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      s=s/2;\n   \
    \   i++;\n    }else{\n      break;\n    }\n  }\n  return i;\n}", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return\
    \ n;\n}\n", "    var i = 2;\n    while(true){\n        if(n % i == 0){\n     \
    \       n = n/i;\n        }\n        else{\n            i++;\n        }\n    \
    \    if(n > 1){\n            break;\n        }\n    }\n    return i;\n}\n", " \
    \ if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  var factor =\
    \ 2;\n  while(n > 1){\n    if(n % factor == 0){\n      n = n/factor;\n      factor++;\n\
    \    }\n    else{\n      factor++;\n    }\n  }\n  return factor;\n}\n", "    var\
    \ i = 2;\n    while(true){\n        if(n % i == 0){\n            return i;\n \
    \       }\n        i += 2;\n    }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2\n  while(i*i<=n){\n    if(n % i == 0){\n\
    \      return i;\n    }\n    i++\n  }\n  return n;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  var i=2,s=n;\n  while(i<s){\n    if(s%i==0){\n      i=i+1;\n    \
    \  s=s/i;\n    }else{\n      s=s*i;\n    }\n  }\n  return s;\n}\n", "  var factors\
    \ = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n    \
    \  factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n}\n", " \
    \ if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      if(s==2){\n        return 2;\n      }\n      i=i*2+1;\n      s=s/2;\n \
    \   }\n    else{\n      i=i*2+3;\n      s=s/2;\n    }\n    if(s>=1){\n      return\
    \ i;\n    }\n  }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n    }\n  \
    \  s+=i;\n  }\n  return i;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n\
    \ % factor == 0){\n      n = n/factor;\n    }else{\n      factor++;\n    }\n \
    \ }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n\
    \  while(m*m<=n){\n    p=primes[i];\n    if(p<=m){\n      i++;\n    }else{\n \
    \     i--;\n    }\n    m=Math.sqrt(n);\n  }\n  return primes[i];\n}\n", "    var\
    \ i = 2;\n    while(true){\n        if(n % i == 0){\n            n = n / i;\n\
    \            return i;\n        }\n        i++;\n    }\n}\n", "  var factor =\
    \ 2;\n  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      s=s/2;\n      i++;\n    }\n    else{\n      s=3*s+1; \n      i++;\n   \
    \ }\n    if(s>=n){\n      break;\n    }\n  }\n  return i;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factor = 2;\n  while(n > 1){\n   \
    \ if(n % factor == 0){\n      n = n/factor;\n      factor++;\n    }\n    else{\n\
    \      factor++;\n    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n     \
    \   if(n % i == 0) return i;\n        if(i > n) return n;\n        i += 2;\n \
    \   }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "    var i = 2;\n    while(true){\n        if(n % i == 0){\n            return i;\n\
    \        }\n        i += 2;\n    }\n}\n", "  var factors = [];\n  for(var i =\
    \ 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n\
    \  return factors[factors.length-1];\n}\n", "  if(n<=1){\n    return 1;\n  }\n\
    \  for(var i=2;i*i<=n;i++){\n    var j=Math.floor(i/2);\n    if(n%j===0){\n  \
    \    return j;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n \
    \ }\n  var i=2,\n      m=Math.sqrt(n);\n  while(i<m){\n    if(n % i == 0){\n \
    \     i++;\n    }else{\n      n = n/i;\n    }\n  }\n  return n;\n}\n", "  var\
    \ factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  return factors[factors.length-1];\n}\n", "  var factor = 2;\n \
    \ while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  var factor = 2;\n  while(n\
    \ > 1){\n    if(n % factor == 0){\n      n = n/factor;\n      factor++;\n    }\n\
    \    else{\n      factor++;\n    }\n  }\n  return factor;\n}\n", "    var factor\
    \ = 2;\n    while(n > 1){\n        if(n % factor === 0){\n            n /= factor;\n\
    \        }else{\n            factor++;\n        }\n    }\n    return factor;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      i=i+2;\n      s=s/2;\n    }else{\n      i=i+1;\n      s=s/2;\n    }\n \
    \   if(i==n){\n      return s;\n    }\n  }\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n%i==0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n\
    \  while(m*m<=n){\n    p=Math.floor(m);\n    if(n%p==0){\n      i=p+1;\n     \
    \ break;\n    }\n    m=m+p;\n  }\n  return i;\n}", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    if(n%i==0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "    var i = 2;\n    while(true){\n        if(n%i == 0){\n\
    \            return i;\n        }\n        i++;\n    }\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't work. Try it with `n = 13`.\n<|/ c |>\n<| c |>\nI\
    \ tested it on `n = 13` and it returns `2`.\n<|/ c |>\n<| c |>\nIt returns `2`\
    \ for `n = 13` because `13` has no prime factors.\n<|/ c |>\n<| c |>\nI see, I\
    \ missed that part. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. Try it with `n = 13`.\n<|/ c |>\n<| a |>\n<code>", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor\
    \ == 0){\n      n = n/factor;\n      factor++;\n    }\n    else{\n      factor++;\n\
    \    }\n  }\n  return factor;\n}\n", "  var factors = [];\n  for(var i = 2; i\
    \ <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return\
    \ factors[factors.length-1];\n}\n", "    var i = 2;\n    while(true){\n      \
    \  if(n % i == 0){\n            n = n/i;\n        }\n        else{\n         \
    \   return i;\n        }\n        i++;\n    }\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n\
    \    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n\
    \      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n}\n",
  "    var factor = 2;\n    while(n > 1){\n        if(n % factor == 0){\n        \
    \    n = n/factor;\n        }else{\n            factor++;\n        }\n    }\n\
    \    return factor;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor\
    \ == 0){\n      n = n/factor;\n    }else{\n      factor++;\n    }\n  }\n  return\
    \ factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var j=Math.floor(i/2);\n    if(n%j==0){\n      return j;\n    }\n  }\n  return\
    \ 1;\n}\n", "  var factor = 2;\n  while(n%factor == 0){\n    factor += 1;\n  }\n\
    \  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n%i==0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var i =\
    \ 2;\n    while(true){\n        if(n % i == 0) return i;\n        i += 2;\n  \
    \  }\n}\n", "  if(n<2){\n    return 2;\n  }\n  if(n==2){\n    return 2;\n  }\n\
    \  for(var i=3;i*i<=n;i+=2){\n    if(n % i == 0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "  var factor = 2;\n  while(n%factor !== 0){\n    factor +=\
    \ 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n\
    \    if(s%2==0){\n      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n\
    \    }\n    s=s/2;\n  }\n  return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n\
    \  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "  var factor = 2;\n  while(n%factor !== 0){\n    factor +=\
    \ 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,\n\
    \      m=Math.sqrt(n);\n  while(i<m){\n    if(n % i == 0){\n      i++;\n    }else{\n\
    \      n = n/i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n     \
    \   if(n % i == 0){\n            return i;\n        }\n        i += 2;\n    }\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var p=i;\n\
    \    while(p*p<=n){\n      p=p*p;\n    }\n    if(p%i==0){\n      return i;\n \
    \   }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(i < n){\n        if(n\
    \ % i == 0){\n            n = n/i;\n        }else{\n            i++;\n       \
    \ }\n    }\n    return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      return\
    \ s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n    }\n    s=s/2;\n  }\n\
    \  return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var factor\
    \ = 2;\n    while(n > 1){\n        if(n % factor == 0){\n            n = n/factor;\n\
    \        }else{\n            factor = factor * 2;\n        }\n    }\n    return\
    \ factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,\n      m=Math.sqrt(n);\n\
    \  while(true){\n    if(m%(i++))\n      continue;\n    if(!i)\n      break;\n\
    \    if(m%(i-1))\n      break;\n    return i;\n  }\n}", "  if(n<=1){\n    return\
    \ 1;\n  }\n  var i=2\n  while(i*i<=n){\n    if(n % i == 0){\n      return i;\n\
    \    }\n    i++;\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n \
    \ for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n\
    \    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n\
    \  while(i*i<n){\n    i++;\n  }\n  return i;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    if(n%i===0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n \
    \   return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n\
    \  while(i*i<n){\n    i++;\n  }\n  return i;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  var i=2,p,m=Math.sqrt(n);\n  while(m*m<=n){\n    p=Math.floor(m+0.5);\n\
    \    i=i*p+1;\n    m=m*p;\n  }\n  return i;\n}\n", "  var factor = 2;\n  while(factor\
    \ * factor <= n){\n    factor++;\n  }\n  return factor;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n \
    \ }\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    var j=1;\n    while(i*j<=n){\n      j++;\n\
    \    }\n    if(i*j>n){\n      return i;\n    }\n  }\n  return 1;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      s=s/2;\n\
    \      i++;\n    }\n    else{\n      s=3*s+1;\n      i=i+1;\n    }\n    if(s>=n){\n\
    \      break;\n    }\n  }\n  return i;\n}", "    var i = 2;\n    while(i < n){\n\
    \        if(n % i == 0){\n            n = n/i;\n        }else{\n            i++;\n\
    \        }\n    }\n    return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "    var factors = [];\n    for(var i = 2; i <= n; i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n        }\n    }\n   \
    \ return factors[factors.length - 1];\n}\n", "  if(n<2){\n    return 2;\n  }\n\
    \  if(n==2){\n    return 2;\n  }\n  var i=3;\n  while(i*i<=n){\n    i=i*i;\n \
    \ }\n  return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n%i==0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var i =\
    \ 2;\n    while(true){\n        if(n % i == 0) return i;\n        if(i > n) return\
    \ n;\n        i += 2;\n    }\n}\n", "  var factors = [];\n  for(var i = 2; i <=\
    \ n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  factors.sort(function(a,\
    \ b){\n    return b-a;\n  });\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i\
    \ <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n\
    \  }\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n % i == 0){\n      return i;\n\
    \    }\n  }\n  return n;\n}\n", "  var factor = 2;\n  while(n%factor !== 0){\n\
    \    factor++;\n    n/=factor;\n  }\n  return factor;\n}\n", "  if(n<=1){\n  \
    \  return 1;\n  }\n  var i=2;\n  while(i*i<n){\n    i++;\n  }\n  if(n%i==0){\n\
    \    return i;\n  }\n  else{\n    return largest_prime_factor(n/i);\n  }\n}",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n  while(i*i<=n){\n    i++;\n  }\n\
    \  return i;\n}\n", "    var factors = [];\n    for(var i = 2; i <= n; i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            while(n %\
    \ i == 0){\n                factors.push(i);\n                n /= i;\n      \
    \      }\n        }\n    }\n    return factors.length ? factors[factors.length\
    \ - 1] : null;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var j=1;\n    while(i*j<=n){\n      j++;\n    }\n    if(i*j>n){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n     \
    \   if(n%i == 0){\n            return i;\n        }\n        i += 2;\n    }\n\
    }\n</code>\n<|/ a tags=primes,javascript,algorithm |>\n<| c |>\nThis doesn't work\
    \ for large numbers. `largest_prime_factor(1000000000)` returns `2` instead of\
    \ `3`.\n<|/ c |>\n<| c |>\nIt works for me in Chrome and Firefox. Are you sure\
    \ you copied the code correctly? It returns `3` for `1000000000`.\n<|/ c |>\n\
    <| c |>\nYes, I copied it correctly. I'm running Chrome Version 42.0.2311.90 on\
    \ OSX 10.10.3.\n<|/ c |>\n<| c |>\nI tested it on Chrome Version 42.0.2311.90\
    \ on OSX 10.10.3 and it returned `3` as expected. Are you sure you copied the\
    \ code correctly? It returns `3` for `1000000000`.\n<|/ c |>\n<| c |>\nI tested\
    \ it on Chrome Version 42.0.2311.90 on OSX 10.10.3 and it returned `3` as expected.\
    \ Are you sure you copied the code correctly? It returns `3` for `1000000000`.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n        if(n % i ==\
    \ 0) return i;\n        i += 2;\n        if(n % i == 0) return i;\n        i +=\
    \ 2;\n        if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0)\
    \ return i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n\
    \        if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        i += 2;\n        if(n % i == 0) return i;\n        i += 2;\n   \
    \     if(n % i == 0) return i;\n        i += 2;\n        if(n % i == 0) return\
    \ i;\n        ", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n\
    \ % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors.length ? Math.max.apply(null,\
    \ factors) : -1;\n}\n", "  var factor = 2;\n  while(n%factor == 0){\n    factor\
    \ += 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return\
    \ n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "    var factors = [];\n    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n        }\n    }\n    return factors[factors.length-1];\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      i=i*2+1;\n      s=s/2;\n    }else{\n      i=i*2+3;\n      s=s/2;\n    }\n\
    \    if(i==n){\n      return s;\n    }\n  }\n}\n", "    var i = 2;\n    while(true){\n\
    \        if(n % i == 0){\n            n = n / i;\n        }\n        else{\n \
    \           i++;\n        }\n        if(i > n)\n            break;\n    }\n  \
    \  return i;\n}\n</code>\n<|/ a tags=primes,algorithm,javascript |>\n<| c |>\n\
    This doesn't work. Try it with `largest_prime_factor(13195)`\n<|/ c |>\n<| c |>\n\
    It works. Try it with `largest_prime_factor(13195)`\n<|/ c |>\n<| c |>\nYes, it\
    \ does. Try it with `largest_prime_factor(13195)`\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `largest_prime_factor(13195)`\n<|/ c |>\n<| c |>\nIt works.\
    \ Try it with `largest_prime_factor(13195)`\n<|/ c |>\n<| a tags=primes,algorithm,javascript\
    \ |>\n<code>", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \        if(n%i == 0){\n            factors.push(i);\n        }\n    }\n    return\
    \ factors[factors.length-1];\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    var d=n%i\n    if(d==0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n\
    \    while(true){\n        if(n%i == 0){\n            return i;\n        }\n \
    \       i += 2;\n    }\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n\
    \    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var d=n%i\n\
    \    if(d!==0){\n      n=d\n    }\n  }\n  return n\n}\n", "  var factor = 2;\n\
    \  while(n%factor == 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      i=i*2+1;\n      s>>=1;\n\
    \    }\n    else{\n      i=i*2+3;\n      s>>=2;\n    }\n    if(i==n){\n      return\
    \ s;\n    }\n  }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  var factor =\
    \ 2;\n  while(n > 1){\n    if(n % factor === 0){\n      n /= factor;\n    }else{\n\
    \      factor++;\n    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factor = 2;\n  while(n%factor !==\
    \ 0){\n    factor++;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      return s;\n    }\n\
    \    i=i*2+1;\n    if(s>=n){\n      break;\n    }\n    s=s/2;\n  }\n  return i;\n\
    }", "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n  while(i*i<n){\n    i++;\n\
    \  }\n  return i;\n}", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            while(n\
    \ % i == 0){\n                n /= i;\n            }\n        }\n    }\n    return\
    \ factors.length ? factors[factors.length - 1] : n;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var j=i;\n    while(j<n && j%i==0){\n\
    \      j++;\n    }\n    if(j<n){\n      continue;\n    }\n    return i;\n  }\n\
    \  return n;\n}\n", "  if(n<2){\n    return 2;\n  }\n  if(n==2){\n    return 2;\n\
    \  }\n  if(n%2==0){\n    return 2;\n  }\n  var m=Math.sqrt(n);\n  var i=3;\n \
    \ while(i<m){\n    if(n%i==0){\n      return i;\n    }\n    i+=2;\n  }\n  return\
    \ n;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor == 0){\n  \
    \    n = n/factor;\n    }else{\n      factor = factor * 2;\n    }\n  }\n  return\
    \ factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  var factor\
    \ = 2;\n  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var j=Math.ceil(i/2);\n\
    \    if(j>n){\n      continue;\n    }\n    while(j%2==0){\n      j=j/2;\n    }\n\
    \    if(j>n){\n      continue;\n    }\n    return i;\n  }\n  return 1;\n}\n",
  "    var factors = [];\n    for(var i = 2; i < n; i++){\n        var m = Math.floor(Math.sqrt(n));\n\
    \        if(n % i == 0){\n            factors.push(i);\n            n /= i;\n\
    \        }\n    }\n    return factors.length ? factors[factors.length-1] : 1;\n\
    }\n", "    var i = 2;\n    while(true){\n        if(n % i == 0){\n           \
    \ n = n/i;\n        }\n        else{\n            i++;\n        }\n        if(i\
    \ > n){\n            break;\n        }\n    }\n    return i;\n}\n</code>\n<|/\
    \ a tags=primes,javascript,algorithm |>\n<| c |>\nThis doesn't work for `largest_prime_factor(131071)`\n\
    <|/ c |>\n<| c |>\nIt works for me. `largest_prime_factor(131071)` returns `131071`\n\
    <|/ c |>\n<| c |>\nIt works for me too. `largest_prime_factor(131071)` returns\
    \ `131071`\n<|/ c |>\n<| c |>\nIt works for me too. `largest_prime_factor(131071)`\
    \ returns `131071`\n<|/ c |>\n<| c |>\nIt works for me too. `largest_prime_factor(131071)`\
    \ returns `131071`\n<|/ c |>\n<| a tags=primes,javascript,algorithm |>\n<code>",
  "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n        }\n    }\n    return factors.length\
    \ ? Math.max.apply(null, factors) : -1;\n}\n", "  if(n<2){\n    return 1;\n  }\n\
    \  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n\
    \    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= n;\
    \ i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var j=Math.ceil(i/2);\n\
    \    if(j>n){\n      j=n;\n    }\n    if(j%i==0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor ==\
    \ 0){\n      n = n / factor;\n      factor++;\n    }else{\n      factor++;\n \
    \   }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "    var factors = [];\n    for(var i = 2; i <= n; i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n        }\n    }\n   \
    \ return factors.length ? Math.max.apply(null, factors) : -1;\n}\n", "  var factor\
    \ = 2;\n  while(n%factor !== 0){\n    factor += 2;\n  }\n  return factor;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n \
    \   return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<2){\n    return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n\
    \  while(m*m<=n){\n    p=Math.floor(m);\n    if(n%p==0){\n      m=p/p;\n     \
    \ i++;\n    }\n    else{\n      m=m*p;\n    }\n  }\n  return i;\n}\n", "    var\
    \ factors = [];\n    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n \
    \           factors.push(i);\n        }\n    }\n    return factors[factors.length-1];\n\
    }\n", "  var factor = 2;\n  while(n%factor !== 0){\n    factor++;\n    n/=factor;\n\
    \  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n\
    \    if(n%i===0){\n      return i;\n    }\n  }\n  return n;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n%i == 0){\n\
    \            factors.push(i);\n        }\n    }\n    return factors.length ? Math.max.apply(null,\
    \ factors) : -1;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var j=Math.ceil(i/2);\n    if(j>n){\n      return i;\n    }\n    if(j%2==0){\n\
    \      continue;\n    }\n    if(j==n){\n      return i;\n    }\n  }\n  return\
    \ n;\n}\n", "    var i = 2;\n    while(true){\n        if(n % i == 0){\n     \
    \       return i;\n        }\n        i += 2;\n    }\n}\n", "  var factors = [];\n\
    \  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  return factors[factors.length-1];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

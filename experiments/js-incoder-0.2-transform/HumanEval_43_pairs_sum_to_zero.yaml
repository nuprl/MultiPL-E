name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are two distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
  // false\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["    for(var i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return false;\n \
    \           }\n        }\n    }\n    return true;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n        sum += pairs[i];\n\
    \    }\n    return sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n    return\
    \ false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n    return p +\
    \ c;\n  }, 0);\n  if(pairs === 0){\n    return true;\n  }\n  return false;\n}\n",
  "\tfor(var i=0;i<l.length;i++){\n\t\tfor(var j=i+1;j<l.length;j++){\n\t\t\tif(l[i]+l[j]===0){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "\tfor(var i\
    \ = 1; i < l.length; i++){\n\t\tfor(var j = i; j > 0; j--){\n\t\t\tif(l[j] + l[j-1]\
    \ != 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x[0], x[0]+x[1]];\n  });\n  return pairs.reduce(function(prev, curr){\n\
    \    return prev && curr[1] === 0;\n  }, true);\n}\n", "    var i, j, sum;\n \
    \   for(i = 0; i < l.length; i++){\n        sum = 0;\n        for(j = 0; j < l.length;\
    \ j++){\n            sum += l[j];\n            if(sum === 0){\n              \
    \  return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var sum = 0;\n\
    \    for(var i=0; i<pairs.length; i++){\n      sum += pairs[i][0];\n    }\n  \
    \  if(sum === 0){\n      return true;\n    }\n  });\n  return false;\n}\n", " \
    \ var pairs = l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  var pairs = l.slice(0);\n\
    \  var pair;\n  for(var i=0; i<pairs.length; i++){\n    pair = pairs[i];\n   \
    \ if(pair[0] === pair[1]){\n      pairs.splice(i, 1);\n      i--;\n    }\n  }\n\
    \  if(pairs.length > 0){\n    return false;\n  }\n  return true;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "    var\
    \ pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n\
    \        sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  for(var i=0;\
    \ i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j]\
    \ === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", " \
    \ var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n \
    \   sum += pair[1];\n  });\n  return sum === 0;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        var pair = l[i];\n        for(var j=i+1; j<l.length; j++){\n\
    \            var pair2 = l[j];\n            if(pair + pair2 === 0){\n        \
    \        return false;\n            }\n        }\n    }\n    return true;\n}\n",
  "  if(l.length == 0){\n    return false;\n  }\n  var pairs = l.slice(0);\n  pairs.sort(function(a,b){return\
    \ b-a});\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum == 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = _.pairs(l);\n  var\
    \ sum = 0;\n  for(var i in pairs){\n    if(pairs[i][1] > 0){\n      sum += pairs[i][1];\n\
    \    }\n  }\n  return sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n  \
    \  for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<l.length;i++){\n        sum += l[i];\n    }\n    return sum===0;\n}\n",
  "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n  \
    \  sum += pair[1];\n  });\n  return sum === 0;\n}\n", "\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\
    \t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    var pairs\
    \ = l.slice(0);\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n  \
    \      sum += pairs[i];\n    }\n    return sum == 0;\n}\n", "    for(var i = 0;\
    \ i<l.length; i++){\n        for(var j = i+1; j<l.length; j++){\n            if(l[i]\
    \ + l[j] === 0){\n                return true;\n            }\n        }\n   \
    \ }\n    return false;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var\
    \ i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n  }\n  return sum === 0;\n\
    }\n", "  if(l.length == 0){\n    return false;\n  }\n  if(l.length == 1){\n  \
    \  return l[0] == 0;\n  }\n  var pairs = l.slice(1).map(function(elem, index,\
    \ arr){\n    return [elem, arr[index-1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] == 0;\n  });\n  return zeros.length == pairs.length;\n}\n",
  "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var sum = 0;\n\
    \    for(var i=0; i<pairs.length; i++){\n      sum += pairs[i][0];\n    }\n  \
    \  if(sum === 0){\n      return true;\n    }\n  });\n  return false;\n}\n", " \
    \   for(var i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n\
    \            if(l[i] + l[j] === 0){\n                return false;\n         \
    \   }\n        }\n    }\n    return true;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    var first = true;\n    for(var i=0; i<pairs.length; i++){\n\
    \        var pair = pairs[i];\n        if(pair < 0){\n            pair = -pair;\n\
    \        }\n        if(first && pair > sum){\n            return false;\n    \
    \    }\n        else if(pair > sum){\n            sum = pair;\n        }\n   \
    \     else if(pair === sum){\n            pairs.splice(i, 1);\n        }\n   \
    \     first = false;\n    }\n    return pairs.length === 0;\n}\n", "    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = i+1; j < l.length; j++){\n \
    \           if(l[i] + l[j] === 0){\n                return false;\n          \
    \  }\n        }\n    }\n    return true;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0; i<l.length; i++){\n        sum += l[i];\n        if(sum === 0){\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n", "  if(l.length\
    \ == 0){\n    return false;\n  }\n  if(l.length == 1){\n    return l[0] == 0;\n\
    \  }\n  var pairs = l.slice(1).map(function(x){\n    return [x[0], 0];\n  });\n\
    \  pairs.forEach(function(pair){\n    var sum = pair[0] + pair[1];\n    if(sum\
    \ == 0){\n      pair[1] = -pair[1];\n    }\n  });\n  return pairs.reduce(function(prev,\
    \ curr){\n    return prev && curr[1];\n  });\n}\n", "\tfor(var i = 0; i<l.length;\
    \ i++){\n\t\tfor(var j = i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  var pairs\
    \ = l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum +=\
    \ pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n\
    \      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n    var first_pair\
    \ = pairs.shift();\n    pairs.forEach(function(pair){\n        sum += pair;\n\
    \    });\n    return sum === 0 && pairs.length !== 0 && pairs.indexOf(first_pair)\
    \ === -1;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(i){\n\
    \    return [l[0], i];\n  });\n  var zeros = pairs.filter(function(i){\n    return\
    \ i[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  var pairs = _.zip(l,\
    \ l.slice(1));\n  return _.every(pairs, function(pair){\n    return pair[0] ===\
    \ 0 && pair[1] === 0;\n  });\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2) return false;\n\
    \  var pairs = l.slice(1).map(function(pair){\n    return [pair[0], pair[0]+pair[1]];\n\
    \  });\n  var zeros = pairs.filter(function(pair){\n    return pair[1] === 0;\n\
    \  });\n  return zeros.length === 0;\n}\n", "  var pairs = _.pairs(l);\n  var\
    \ sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return\
    \ sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice(1).map(function(x){\n    return [x[0], x[0]+x[1]];\n  });\n  var zeros\
    \ = pairs.filter(function(x){\n    return x[1] == 0;\n  });\n  return zeros.length\
    \ == pairs.length && zeros.length == 1;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    var pairs = _.pairs(l);\n\
    \    var sum = 0;\n    _.each(pairs, function(pair){\n        sum += pair[1];\n\
    \    });\n    return sum === 0;\n}\n", "\tfor(var i in l){\n\t\tfor(var j in l){\n\
    \t\t\tif(i != j && l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var\
    \ pairs = l.slice(1).map(function(pair){\n    return [pair[0], pair[0]+pair[1]];\n\
    \  });\n  var pairs2 = pairs.filter(function(pair){\n    return pair[0] > 0;\n\
    \  });\n  return pairs2.length == 0;\n}\n", "  for(var i=0;i<l.length;i++){\n\
    \    for(var j=i+1;j<l.length;j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n        sum += pairs[i];\n\
    \    }\n    return sum === 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var\
    \ j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "    var sum = 0;\n    var pairs =\
    \ [];\n    for(var i = 0; i < l.length; i++){\n        sum += l[i];\n        if(sum\
    \ === 0){\n            pairs.push([l[i], 0]);\n        }\n        else{\n    \
    \        for(var j = 0; j < pairs.length; j++){\n                if(pairs[j][0]\
    \ === l[i]){\n                    pairs[j][1] = pairs[j][1] + l[i];\n        \
    \            break;\n                }\n            }\n        }\n    }\n    return\
    \ pairs.length === 2;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var j=i+1;\
    \ j<l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  var pairs = l.slice();\n  var sum =\
    \ 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum ===\
    \ 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "    for(var i=0;\
    \ i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i]\
    \ + l[j] == 0){\n                return false;\n            }\n        }\n   \
    \ }\n    return true;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "    var pairs = _.pairs(l);\n    var\
    \ sum = 0;\n    _.each(pairs, function(pair){\n        sum += pair[1];\n    });\n\
    \    return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var\
    \ i = 0; i < pairs.length; i++){\n    var pair = pairs[i];\n    if(pair[1] !=\
    \ 0){\n      sum += pair[1];\n    }\n  }\n  return sum == 0;\n}\n", "    var pairs\
    \ = _.pairs(l);\n    var sum = 0;\n    _.each(pairs, function(pair){\n       \
    \ sum += pair[1];\n    });\n    return sum === 0;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ === 0){\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\n", "    var i, j, sum;\n    for(i=0, j=l.length-1; i<j; i++){\n\
    \        sum = 0;\n        for(; i>=0; i--){\n            sum += l[i];\n     \
    \   }\n        if(sum === 0){\n            return false;\n        }\n    }\n \
    \   return true;\n}\n", "\tfor(var i in l){\n\t\tvar sum = 0;\n\t\tfor(var j in\
    \ l){\n\t\t\tsum += l[j];\n\t\t\tif(sum == 0){\n\t\t\t\treturn false;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn true;\n}\n", "    var pairs = _.pairs(l);\n    var sum\
    \ = 0;\n    _.each(pairs, function(pair){\n        sum += pair[1];\n    });\n\
    \    return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n \
    \ var pairs = l.slice(1).map(function(elem, index, arr){\n    return [elem, arr[index-1]];\n\
    \  });\n  var zeros = pairs.filter(function(pair){\n    return pair[0] === 0;\n\
    \  });\n  return zeros.length === 0;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n\
    \  });\n  return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n \
    \ }\n  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n  }\n  if(sum === 0){\n    return false;\n  }\n\
    \  for(var i=0; i<pairs.length; i++){\n    if(pairs[i] > 0){\n      pairs[i] -=\
    \ 1;\n    }\n  }\n  if(pairs[0] === 0){\n    return true;\n  }\n  return false;\n\
    }\n", "  var pairs = l.slice();\n  pairs.sort(function(a,b){\n    return a-b;\n\
    \  });\n  for(var i=0; i<pairs.length; i++){\n    if(pairs[i]+pairs[i+1] != 0){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ for(var i = 0; i<l.length; i++){\n    var sum = 0;\n    for(var j=0; j<l.length;\
    \ j++){\n      sum += l[j];\n    }\n    if(sum == 0){\n      return true;\n  \
    \  }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum\
    \ === 0;\n}\n", "    var sum = 0;\n    for(var i in l){\n        sum += l[i];\n\
    \    }\n    return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n\
    \  for(var i = 0; i < pairs.length; i++){\n    var pair = pairs[i];\n    if(pair[1]\
    \ != 0){\n      sum += pair[1];\n    }\n  }\n  return sum == 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(i){\n \
    \   return [l[0], i];\n  });\n  var zeros = pairs.filter(function(pair){\n   \
    \ return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "\tfor(var\
    \ i=0; i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i]\
    \ + l[j] === 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n\
    }\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n  \
    \    if(l[i]+l[j]==0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "    var pairs = _.zip(l, l.slice(1));\n    var sum = 0;\n    _.each(pairs,\
    \ function(pair){\n        sum += pair[0];\n    });\n    return sum === 0;\n}\n",
  "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return\
    \ [x[0], x[0]];\n  });\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i][0];\n  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  var pair;\n  for(var i=0; i<pairs.length; i++){\n    pair =\
    \ pairs[i];\n    sum += pair;\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var\
    \ pairs = l.slice(1).map(function(pair){\n    return pair[0] + pair[1];\n  });\n\
    \  var zeros = pairs.filter(function(pair){\n    return pair === 0;\n  });\n \
    \ return zeros.length === 0;\n}\n", "    for(var i=0;i<l.length;i++){\n      \
    \  for(var j=i+1;j<l.length;j++){\n            if(l[i] + l[j] === 0){\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n        sum += l[i];\n\
    \    }\n    return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i][1];\n  }\n  return\
    \ sum == 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs =\
    \ l.slice(1).map(function(i){\n    return [i[0], i[1]];\n  });\n  var sum = 0;\n\
    \  pairs.forEach(function(pair){\n    sum += pair[1];\n  });\n  return sum ===\
    \ 0;\n}\n", "    var sum = 0;\n    for(var i = 0; i < l.length; i++){\n      \
    \  sum += l[i];\n        if(sum === 0){\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "\tfor(var i = 0; i<l.length; i++){\n\t\tfor(var\
    \ j = i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n \
    \ var zeros = pairs.filter(function(x){\n    return x[0] === 0;\n  });\n  if(zeros.length\
    \ > 0){\n    return false;\n  }\n  return pairs.filter(function(x){\n    return\
    \ x[0] === x[1];\n  }).length === 0;\n}\n", "    var pairs = l.slice();\n    var\
    \ sum = 0;\n    for(var i=0; i<pairs.length; i++){\n        sum += pairs[i];\n\
    \    }\n    return sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "\tlet pairs = l.filter(function(x){\n\
    \t\treturn x != 0\n\t});\n\tlet pairs_sum_to_zero = pairs.every(function(x){\n\
    \t\treturn x == pairs.reduce((acc, cur)=>{\n\t\t\treturn acc + cur\n\t\t}, 0)\n\
    \t});\n\treturn pairs_sum_to_zero;\n}\n", "  var pairs = _.pairs(l);\n  var sum\
    \ = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return\
    \ sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "\tlet pairs = l.map((x,i)=>[x,l[i+1]]);\n\tlet pairs_sum\
    \ = pairs.map(x => x[0] + x[1]);\n\treturn pairs_sum.filter(x => x === 0).length\
    \ === 0;\n}\n", "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n      \
    \  sum += l[i];\n    }\n    return sum == 0;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "    var sum = 0;\n    for(var i = 0; i < l.length; i++){\n  \
    \      sum += l[i];\n    }\n    return sum == 0;\n}\n", "    for(var i = 0; i<l.length;\
    \ i++){\n        var pair = l[i];\n        for(var j = i+1; j<l.length; j++){\n\
    \            if(pair[0] + pair[1] != l[j]){\n                return false;\n \
    \           }\n        }\n    }\n    return true;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return\
    \ [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var sum = 0;\n    for(var\
    \ i=0; i<pairs.length; i++){\n      sum += pairs[i][0];\n    }\n    if(sum ===\
    \ 0){\n      return true;\n    }\n  });\n  return false;\n}\n", "  var pairs =\
    \ _.zip(l, l.slice(1));\n  return _.every(pairs, function(pair){\n    return pair[0]\
    \ === pair[1];\n  });\n}\n", "    for(var i = 0; i<l.length; i++){\n        for(var\
    \ j = i+1; j<l.length; j++){\n            if(l[i] + l[j] === 0){\n           \
    \     return false;\n            }\n        }\n    }\n    return true;\n}\n",
  "  var pairs = _.zip(l, l.slice(1))\n  return _.every(pairs, function(pair){\n \
    \   return pair[0] === pair[1]\n  })\n}\n", "  var pairs = _.zip(l, _.tail(l));\n\
    \  return _.every(pairs, function(pair){\n    return pair[0] === 0 && pair[1]\
    \ === 0;\n  });\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  if(l.length\
    \ == 2){\n    return l[0] == l[1];\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var i = pair[0];\n\
    \    var j = pair[1];\n    pair[0] = i;\n    pair[1] = j;\n  });\n  var pair =\
    \ pairs[0];\n  pairs.forEach(function(pair){\n    var i = pair[0];\n    var j\
    \ = pair[1];\n    if(i != j){\n      pair[0] += i;\n      pair[1] += j;\n    }\n\
    \  });\n  return pairs[0][0] == 0;\n}\n", "    for(var i = 0; i < l.length; i++){\n\
    \        for(var j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] ===\
    \ 0){\n                return false;\n            }\n        }\n    }\n    return\
    \ true;\n}\n", "    var sum = 0;\n    for(var i = 0; i < l.length; i++){\n   \
    \     sum += l[i];\n        if(sum === 0){\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n", "    var sum = 0;\n    for(var i = 0; i <\
    \ l.length; i++){\n        sum += l[i];\n    }\n    return sum == 0;\n}\n", " \
    \ for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n     \
    \ if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2)\n    return false;\n  for(var i=0; i<l.length-1; i++){\n\
    \    if(l[i] + l[i+1] != 0)\n      return false;\n  }\n  return true;\n}\n", " \
    \   var pairs = _.pairs(l);\n    var sum = 0;\n    _.each(pairs, function(pair){\n\
    \        sum += pair[1];\n    });\n    return sum === 0;\n}\n", "  for(var i=0;\
    \ i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j]\
    \ == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice();\n  pairs.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  for(var i = 1; i < pairs.length; i++){\n  \
    \  if(pairs[i] - pairs[i-1] != 0){\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0];\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "    var sum = 0;\n    for(var i in l){\n       \
    \ sum += l[i];\n    }\n    return sum == 0;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ === 0){\n                return true;\n            }\n        }\n    }\n   \
    \ return false;\n}\n", "    var sum = 0;\n    for(var i in l){\n        sum +=\
    \ l[i];\n    }\n    return sum == 0;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n\
    \  });\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum\
    \ === 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn true;\n}\n", "\tfor(var i=0;i<l.length;i++){\n\t\tfor(var j=i+1;j<l.length;j++){\n\
    \t\t\tif(l[i]+l[j]==0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0];\n  });\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  return sum == 0;\n}\n", "  var sum = 0;\n  for(var\
    \ i in l){\n    sum += l[i];\n  }\n  if(sum === 0){\n    return true;\n  }\n \
    \ else{\n    return false;\n  }\n}\n", "    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] + l[i-1] != 0){\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    var sum = 0;\n    var n = l.length;\n    for(var\
    \ i = 0; i < n; i++){\n        sum += l[i];\n        if(sum === 0){\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n", "  var pairs = l.slice();\n\
    \  pairs.sort(function(a, b){\n    return a - b;\n  });\n  for(var i = 1; i <\
    \ pairs.length; i++){\n    if(pairs[i] - pairs[i-1] != 0){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i];\n    if(sum===0){\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  var pairs = _.zip(l,\
    \ l.slice(1));\n  return _.every(pairs, function(pair){\n    return pair[0] ===\
    \ 0 && pair[1] === 0;\n  });\n}\n", "  var pairs = _.zip(l, l.slice(1).map(function(x){return\
    \ -x}));\n  return _.all(pairs, function(pair){return pair[0] === 0 && pair[1]\
    \ === 0;});\n}\n", "    var pairs = l.filter(function(x){return x>0});\n    var\
    \ pair_counts = pairs.map(function(x){return pairs.filter(function(y){return y==x}).length});\n\
    \    return pair_counts.filter(function(x){return x==1}).length==0;\n}\n", " \
    \ for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n     \
    \ if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  var i, j, sum;\n  for(i=0, sum=0;i<l.length;i++){\n    sum+=l[i];\n \
    \   for(j=i+1;j<l.length;j++){\n      if(l[i]+l[j]===sum){\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum\
    \ += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum == 0;\n}\n", "\tfor(var\
    \ i in l){\n\t\tfor(var j in l){\n\t\t\tif(i != j && l[i] + l[j] == 0){\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var\
    \ i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(v,\
    \ i){\n    return [l[0], v];\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i][1];\n  }\n  return sum === 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n \
    \   return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var i = pair[0];\n\
    \    var j = pair[1];\n    pairs[i] = [pairs[i][0] + pair[j], pairs[i][1] + 1];\n\
    \  });\n  return pairs.reduce(function(prev, curr){\n    return prev && curr[0]\
    \ === 0;\n  });\n}\n", "    var pairs = l.filter(function(x){return x>0;});\n\
    \    var sum = 0;\n    for(var i=0;i<pairs.length;i++){\n        sum += pairs[i];\n\
    \    }\n    return sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "    var sum = 0;\n    for(var i=0;i<l.length;i++){\n\
    \        sum += l[i];\n        if(sum === 0){\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(elem, index, arr){\n    return [elem,\
    \ arr[index-1]];\n  });\n  return pairs.every(function(pair){\n    return pair[0]\
    \ === 0;\n  });\n}\n", "    var pairs = _.zip(l, l.slice(1));\n    return _.all(pairs,\
    \ function(pair){\n        return pair[0] === pair[1];\n    });\n}\n", "  var\
    \ pairs = l.slice();\n  var sum = 0;\n  for (var i = 0; i < pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n \
    \       return true;\n      }\n    }\n  }\n  return false;\n}\n", "\tfor(var i=0;i<l.length;i++){\n\
    \t\tfor(var j=i+1;j<l.length;j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length < 2){\n  \
    \  return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return [x,\
    \ 0];\n  });\n  pairs.forEach(function(pair){\n    var x = pair[0];\n    var y\
    \ = pair[1];\n    pairs.forEach(function(pair){\n      var xy = pair[0] + pair[1];\n\
    \      if(xy === 0){\n        pair[1] = y;\n      }\n    });\n  });\n  return\
    \ pairs.reduce(function(acc, pair){\n    return acc && pair[1] === 0;\n  }, true);\n\
    }\n", "  var pairs = _.zip(l, l.slice(1));\n  return _.every(pairs, function(pair){\n\
    \    return pair[0] === 0 && pair[1] === 0;\n  });\n}\n", "    var pairs = l.map(function(x){\n\
    \        return [x, 0];\n    });\n    var zeros = pairs.filter(function(x){\n\
    \        return x[0] === 0;\n    });\n    return zeros.length === 0;\n}\n", " \
    \   for(var i = 0; i<l.length; i++){\n        for(var j = i+1; j<l.length; j++){\n\
    \            if(l[i] + l[j] == 0){\n                return true;\n           \
    \ }\n        }\n    }\n    return false;\n}\n", "  if(l.length < 2){\n    return\
    \ false;\n  }\n  var pairs = l.slice();\n  var pair;\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    pair = pairs[i];\n    sum += pair;\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "    var i,\
    \ j, sum;\n    for(i = 0; i < l.length; i++){\n        sum = 0;\n        for(j\
    \ = 0; j < l.length; j++){\n            sum += l[j];\n        }\n        if(sum\
    \ === 0){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i][1];\n  }\n  return sum == 0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var\
    \ pairs = l.slice(1).map(function(pair){\n    return pair[0];\n  });\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "  if(l.length\
    \ < 2) return false;\n  var pairs = l.slice(1).map(function(pair){\n    return\
    \ pair[0] + pair[1];\n  });\n  return pairs.filter(function(pair){\n    return\
    \ pair === 0;\n  }).length === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum\
    \ = 0;\n  for(var i=0;i<pairs.length;i++){\n    var pair = pairs[i];\n    if(pair[1]\
    \ != 0){\n      sum += pair[1];\n    }\n  }\n  return sum == 0;\n}\n", "    var\
    \ pairs = _.pairs(l);\n    var sum = 0;\n    _.each(pairs, function(pair){\n \
    \       sum += pair[1];\n    });\n    return sum === 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    var pair = [c,p];\n    p.push(pair);\n    return p;\n  },[]);\n  return pairs.reduce(function(p,c){\n\
    \    return p + c[0] === c[1];\n  },false);\n}\n", "\tfor(var i=0; i<l.length;\
    \ i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length\
    \ == 0){\n    return false;\n  }\n  var pairs = l.slice(0);\n  var pair = pairs.shift();\n\
    \  while(pairs.length){\n    var next = pairs.shift();\n    if(pair[0] + pair[1]\
    \ != 0){\n      return false;\n    }\n    pair[0] = pair[0] + pair[1];\n    pair[1]\
    \ = next;\n  }\n  return true;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  var i = 0;\n  while(i < pairs.length){\n    sum += pairs[i];\n    i++;\n  }\n\
    \  if(sum === 0){\n    return true;\n  }else{\n    return false;\n  }\n}\n", " \
    \ var pairs = l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i];\n  }\n  return sum == 0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n\
    \  }\n  return sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  var pairs = l.map(function(x){\n\
    \    return [x, x];\n  });\n  var pairs2 = pairs.filter(function(x){\n    return\
    \ x[1] > 0;\n  });\n  return pairs2.length == 0;\n}\n", "    var sum = 0;\n  \
    \  for(var i=0; i<l.length; i++){\n        sum += l[i];\n        if(sum === 0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    var\
    \ sum = 0;\n    for(var i=0; i<l.length; i++){\n        sum += l[i];\n       \
    \ if(sum === 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    var pairs = _.pairs(l);\n    var sum = 0;\n    _.each(pairs, function(pair){\n\
    \        sum += pair[1];\n    });\n    return sum === 0;\n}\n", "  var pairs =\
    \ l.slice();\n  pairs.sort(function(a, b){\n    return a - b;\n  });\n  var zeros\
    \ = 0;\n  var pair;\n  for(var i=0; i<pairs.length; i++){\n    pair = pairs[i];\n\
    \    if(pair < 0){\n      pairs--;\n      continue;\n    }\n    if(pair === 0){\n\
    \      zeros++;\n      pairs--;\n      continue;\n    }\n    if(pair > 0){\n \
    \     pairs--;\n      continue;\n    }\n    return false;\n  }\n  return zeros\
    \ === pairs.length;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n   \
    \ for(var i = 0; i < pairs.length; i++){\n        sum += pairs[i];\n        if(sum\
    \ === 0){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var sum = 0;\n\
    \    for(var i=0; i<pairs.length; i++){\n      sum += pairs[i][0];\n    }\n  \
    \  if(sum === 0){\n      return true;\n    }\n  });\n  return false;\n}\n", " \
    \ for(var i=0; i<l.length-1; i++){\n    if(l[i]+l[i+1] != 0){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum\
    \ === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "\tfor(var\
    \ i = 0; i<l.length; i++){\n\t\tvar sum = 0;\n\t\tfor(var j=0; j<l.length; j++){\n\
    \t\t\tsum += l[j];\n\t\t}\n\t\tif(sum == 0){\n\t\t\treturn true;\n\t\t}\n\t}\n\
    \treturn false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    if(l[i]+l[i+1]\
    \ != 0){\n      return false;\n    }\n  }\n  return true;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  if(l.length == 2){\n    return l[0] == l[1];\n\
    \  }\n  var pairs = l.slice(1).map(function(pair){\n    return pair[0] - pair[1];\n\
    \  });\n  var zeros = pairs.filter(function(pair){\n    return pair == 0;\n  });\n\
    \  return zeros.length == 0;\n}\n", "\tfor(var i = 0; i<l.length; i++){\n\t\t\
    for(var j = i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length < 2){\n  \
    \  return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n    return\
    \ pair[0] + pair[1];\n  });\n  return pairs.filter(function(pair){\n    return\
    \ pair === 0;\n  }).length === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum\
    \ = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return\
    \ sum === 0;\n}\n", "  var pairs = _.zip(_.range(l.length), l);\n  var sum = 0;\n\
    \  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return sum ===\
    \ 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i][1];\n  }\n  return sum == 0;\n}\n", "    var sum = 0;\n \
    \   for(var i = 0; i < l.length; i++){\n        sum += l[i];\n        if(sum ===\
    \ 0){\n            return false;\n        }\n    }\n    return true;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  if(l.length == 2){\n    return\
    \ l[0] + l[1] == 0;\n  }\n  if(l.length == 3){\n    return l[0] + l[1] + l[2]\
    \ == 0;\n  }\n  if(l.length == 4){\n    return l[0] + l[1] + l[2] + l[3] == 0;\n\
    \  }\n  if(l.length == 5){\n    return l[0] + l[1] + l[2] + l[3] + l[4] == 0;\n\
    \  }\n  if(l.length == 6){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5]\
    \ == 0;\n  }\n  if(l.length == 7){\n    return l[0] + l[1] + l[2] + l[3] + l[4]\
    \ + l[5] + l[6] == 0;\n  }\n  if(l.length == 8){\n    return l[0] + l[1] + l[2]\
    \ + l[3] + l[4] + l[5] + l[6] + l[7] == 0;\n  }\n  if(l.length == 9){\n    return\
    \ l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] == 0;\n  }\n  if(l.length\
    \ == 10){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] +\
    \ l[8] + l[9] == 0;\n  }\n  if(l.length == 11){\n    return l[0] + l[1] + l[2]\
    \ + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10] == 0;\n  }\n  if(l.length\
    \ == 12){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] +\
    \ l[8] + l[9] + l[10] + l[11] == 0;\n  }\n  if(l.length == 13){\n    return l[0]\
    \ + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10] + l[11]\
    \ + l[12] == 0;\n  }\n  if(l.length == 14){\n    return l[0] + l[1] + l[2] + l[3]\
    \ + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10] + l[11] + l[12] + l[13] ==\
    \ 0;\n  }\n  if(l.length == 15){\n    return l[0] + l[1] + l[2] + l[3] + l[4]\
    \ + l[5] + l[6] + l[7] + l[8] + l[9] + l[10] + l[11] + l[12] + l", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0];\n  });\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  return sum === 0;\n}\n", "  if(l.length < 2) return\
    \ false;\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i in pairs){\n\
    \    if(pairs[i][1] != 0) return false;\n    sum += pairs[i][0];\n  }\n  return\
    \ sum == 0;\n}\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n\
    \      if(l[i]+l[j]==0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n \
    \ }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var\
    \ pairs = l.slice(1).map(function(x){\n    return [x[0], x[0]+x[1]];\n  });\n\
    \  var pairs2 = pairs.filter(function(x){\n    return l.indexOf(x[0]) == l.indexOf(x[1]);\n\
    \  });\n  return pairs2.length == 0;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return\
    \ sum === 0;\n}\n", "    var pairs = _.pairs(l);\n    var sum = 0;\n    _.each(pairs,\
    \ function(pair){\n        sum += pair[1];\n    });\n    return sum === 0;\n}\n",
  "  var i, j, sum;\n  for(i=0, sum=0;i<l.length;i++){\n    for(j=i+1;j<l.length;j++){\n\
    \      if(l[i]+l[j]===0) return false;\n      else sum += l[i]+l[j];\n    }\n\
    \  }\n  return sum===0;\n}\n", "  if(l.length < 2)\n    return false;\n  if(l.length\
    \ == 2)\n    return l[0] == l[1];\n  var pairs = l.slice(1).map(function(x){return\
    \ [x[0], x[0]+x[1]];});\n  return pairs.reduce(function(acc, pair){\n    return\
    \ acc && pair[1] === 0;\n  }, true);\n}\n", "    var sum = 0;\n    for(var i =\
    \ 0; i < l.length; i++){\n        sum += l[i];\n        if(sum === 0){\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n", "\tfor(var i=0;\
    \ i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j]\
    \ == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", " \
    \   for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return false;\n \
    \           }\n        }\n    }\n    return true;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n        sum += pairs[i];\n\
    \    }\n    return sum === 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

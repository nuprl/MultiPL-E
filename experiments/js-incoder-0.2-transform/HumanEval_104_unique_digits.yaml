name: HumanEval_104_unique_digits
language: js
prompt: "//Given a list of positive integers x. return a sorted list of all \n// elements\
  \ that hasn't any even digit.\n// Note: Returned list should be sorted in increasing\
  \ order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n\
  // >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
  \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
  \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
  \ 135]);\n}\n\ntest();"
completions: ["\tlet result = [];\n\tfor(let i = 0; i < x.length; i++){\n\t\tlet digit\
    \ = x[i];\n\t\tlet isEven = false;\n\t\tfor(let j = 0; j < result.length; j++){\n\
    \t\t\tif(result[j] === digit){\n\t\t\t\tisEven = true;\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t}\n\t\tif(!isEven){\n\t\t\tresult.push(digit);\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < x.length; i++){\n        var\
    \ digit = x[i];\n        if(digit % 2 === 0){\n            result.push(digit);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    return result;\n}\n", "    var result = [];\n    for(var i=0;i<x.length;i++){\n\
    \        if(x[i]%2==0){\n            result.push(x[i]);\n        }\n    }\n  \
    \  result.sort();\n    return result;\n}\n", "\tvar result = [];\n\tfor(var i=0;\
    \ i<x.length; i++){\n\t\tfor(var j=i+1; j<x.length; j++){\n\t\t\tif(x[i] % x[j]\
    \ === 0){\n\t\t\t\tresult.push(x[j]);\n\t\t\t\tx.splice(j, 1);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tfor(var j = 0; j < x.length; j++){\n\t\t\tif(x[i] % x[j] === 0){\n\
    \t\t\t\tresult.push(x[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "\tvar result = [];\n\tfor(var i=0; i<x.length; i++){\n\t\tfor(var j=0;\
    \ j<x.length; j++){\n\t\t\tif(x[i] % x[j] == 0){\n\t\t\t\tresult.push(x[i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < x.length; i++){\n        var digit = x[i];\n   \
    \     if(digit % 2 === 0){\n            result.push(digit);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n", "\tvar result = [];\n\tfor(var\
    \ i=0;i<x.length;i++){\n\t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tif(x[i]%x[j]\
    \ == 0){\n\t\t\t\tresult.push(x[i]);\n\t\t\t\tresult.push(x[j]);\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\tfor(var i\
    \ in x){\n\t\tvar num = x[i];\n\t\tvar digits = [];\n\t\twhile(num > 0){\n\t\t\
    \tdigits.push(num % 10);\n\t\t\tnum = Math.floor(num / 10);\n\t\t}\n\t\tfor(var\
    \ j in digits){\n\t\t\tif(digits[j] % 2 === 0){\n\t\t\t\tresult.push(digits[j]);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var result = [];\n    for(var\
    \ i=0;i<x.length;i++){\n        if(x[i] % 2 === 0){\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n", "\tvar result\
    \ = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tvar str = x[i].toString();\n\t\t\
    var digits = str.split('');\n\t\tfor(var j=0;j<digits.length;j++){\n\t\t\tif(digits[j].length%2\
    \ == 0){\n\t\t\t\tresult.push(parseInt(digits[j]));\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ result.sort(function(a,b){return a-b});\n}\n", "\tvar result = [];\n\tfor(var\
    \ i=0;i<x.length;i++){\n\t\tif(x[i] % 2 != 0){\n\t\t\tresult.push(x[i]);\n\t\t\
    }\n\t}\n\treturn result.sort();\n}\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tvar digit = x[i];\n\t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tvar digit2 =\
    \ x[j];\n\t\t\tif(digit%digit2 == 0){\n\t\t\t\tresult.push(digit);\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\
    \t\tif(x[i] % 2 == 0){\n\t\t\tresult.push(x[i]);\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "\tvar result = [];\n\tfor(var i=0;i<x.length;i++){\n\t\tvar digit = x[i];\n\
    \t\tfor(var j=i+1;j<x.length;j++){\n\t\t\tvar digit2 = x[j];\n\t\t\tif(digit%2\
    \ == 0 && digit2%2 == 0){\n\t\t\t\tresult.push(digit);\n\t\t\t\tresult.push(digit2);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\
    \tfor(var i = 0; i < x.length; i++){\n\t\tvar digit = x[i];\n\t\tfor(var j = 0;\
    \ j < result.length; j++){\n\t\t\tif(result[j] == digit){\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t\tif(j == result.length){\n\t\t\tresult.push(digit);\n\t\t}\n\t\
    }\n\treturn result;\n}\n", "\tvar result = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tvar digit = x[i];\n\t\tfor(var j = i+1; j < x.length; j++){\n\t\t\
    \tvar digit2 = x[j];\n\t\t\tif(digit % 2 != 0 && digit2 % 2 != 0){\n\t\t\t\tresult.push(digit);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "\tvar result = [];\n\
    \tfor(var i=0;i<x.length;i++){\n\t\tvar digit = x[i];\n\t\tfor(var j=i+1;j<x.length;j++){\n\
    \t\t\tvar digit2 = x[j];\n\t\t\tif(digit%2 != 0 && digit2%2 == 0){\n\t\t\t\tresult.push(digit);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var result =\
    \ [];\n    for(var i=0;i<x.length;i++){\n        if(x[i] % 2 === 0){\n       \
    \     result.push(x[i]);\n        }\n    }\n    result.sort(function(a,b){\n \
    \       return a-b;\n    });\n    return result;\n}\n", "\tvar result = [];\n\t\
    for(var i=0; i<x.length; i++){\n\t\tfor(var j=i+1; j<x.length; j++){\n\t\t\tif(x[i]\
    \ % x[j] === 0){\n\t\t\t\tresult.push(x[j]);\n\t\t\t\tx.splice(j, 1);\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

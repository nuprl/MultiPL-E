name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    var len = arr.length;\n    for(var i=0; i<len; i++){\n        for(var\
    \ j=0; j<len; j++){\n            if(arr[i]>arr[j]){\n                var temp\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \            }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        ret[i] = arr[i];\n    }\n    for(i = len - 1; i >= 0; i--){\n       \
    \ for(j = i - 1; j >= 0; j--){\n            for(k = 0; k < len; k++){\n      \
    \          if(arr[k] > arr[j] && arr[k] > arr[j + k]){\n                    ret[k]\
    \ = arr[k];\n                }\n            }\n        }\n    }\n    return ret;\n\
    }\n", "    var len = arr.length;\n    var sorted = new Array(len);\n    for(var\
    \ i=0; i<len; i++){\n        var count = 0;\n        for(var j=0; j<len; j++){\n\
    \            if(arr[j] == arr[i]){\n                count++;\n            }\n\
    \        }\n        sorted[i] = count;\n    }\n    for(var i=0; i<len; i++){\n\
    \        sorted[i] = sorted[i]/arr.length;\n    }\n    return sorted;\n}\n", " \
    \ var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  if(len % 2 ===\
    \ 0){\n    return arr.sort();\n  }\n  var half = Math.floor(len / 2);\n  var left\
    \ = arr.slice(0, half);\n  var right = arr.slice(half);\n  return merge(sort_array(left),\
    \ sort_array(right));\n}\n", "    var len = arr.length;\n    if(len < 2){\n  \
    \      return arr;\n    }\n    var ones = arr.reduce(function(sum, val){\n   \
    \     return sum + val;\n    }, 0);\n    var maxOnes = Math.pow(2,len) - ones;\n\
    \    var maxOnesIndex = Math.floor(maxOnes / Math.pow(2,len));\n    var maxOnesBin\
    \ = maxOnes % Math.pow(2,len);\n    var minOnes = Math.pow(2,len) - maxOnesBin;\n\
    \    var minOnesIndex = Math.floor(minOnes / Math.pow(2,len));\n    var minOnesBin\
    \ = minOnes % Math.pow(2,len);\n    var onesBin = maxOnesBin + minOnesBin;\n \
    \   var onesIndex = maxOnesIndex + minOnesIndex;\n    var onesBinString = onesBin.toString(2);\n\
    \    var onesIndex = onesIndex.toString(2);\n    var onesBinStringLength = onesBinString.length;\n\
    \    var onesIndexLength = onesIndex.length;\n    var sortedArr = arr.slice(0);\n\
    \    for(var i = 0; i <= len; i++){\n        var index = onesIndex.indexOf(\"\
    1\" + onesBinString[i]);\n        if(index != -1){\n            sortedArr.splice(index,\
    \ 1);\n        }\n        index = onesIndex.indexOf(\"0\" + onesBinString[i]);\n\
    \        if(index != -1){\n            sortedArr.splice(index, 1);\n        }\n\
    \    }\n    return sortedArr;\n}\n", "    arr.sort(function(a, b){\n        var\
    \ a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n        var a_ones_comp\
    \ = a_ones - b_ones;\n        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp\
    \ === 0){\n            return b_ones_comp;\n        }\n        if(b_ones_comp\
    \ === 0){\n            return a_ones_comp;\n        }\n        return a_ones_comp\
    \ * b_ones_comp;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var temp = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr\
    \ = [];\n    while(i < len){\n        while(j >= 0 && arr[j] == 0){\n        \
    \    j--;\n        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n\
    \            j--;\n        }\n        tempArr.push(temp);\n        i++;\n    }\n\
    \    while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j >= 0 && arr[j] == 0){\n            j--;\n\
    \        }\n        while(j >= 0 && arr[j] == 1){\n            temp++;\n     \
    \       j--;\n        }\n        tempArr.push(temp);\n        j++;\n    }\n  \
    \  while(j < len){\n        while(j", "    arr.sort(function(a, b){\n        var\
    \ a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n        if(a_ones\
    \ < b_ones){\n            return -1;\n        }else if(a_ones > b_ones){\n   \
    \         return 1;\n        }else{\n            return 0;\n        }\n    });\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n\
    \        for(var j=0; j<len; j++){\n            if(arr[j] == arr[i]){\n      \
    \          arr.splice(j,1);\n                len--;\n            }\n        }\n\
    \    }\n    arr.sort(function(a,b){\n        var x = a.toString(2);\n        var\
    \ y = b.toString(2);\n        return x.localeCompare(y);\n    });\n    return\
    \ arr;\n}\n", "  var len = arr.length;\n  var max = 0;\n  var min = 0;\n  var\
    \ mid = 0;\n  var tmp;\n  var tmp2;\n  var tmp3;\n  var tmp4;\n  var tmp5;\n \
    \ var tmp6;\n  var tmp7;\n  var tmp8;\n  var tmp9;\n  var tmp10;\n  var tmp11;\n\
    \  var tmp12;\n  var tmp13;\n  var tmp14;\n  var tmp15;\n  var tmp16;\n  var tmp17;\n\
    \  var tmp18;\n  var tmp19;\n  var tmp20;\n  var tmp21;\n  var tmp22;\n  var tmp23;\n\
    \  var tmp24;\n  var tmp25;\n  var tmp26;\n  var tmp27;\n  var tmp28;\n  var tmp29;\n\
    \  var tmp30;\n  var tmp31;\n  var tmp32;\n  var tmp33;\n  var tmp34;\n  var tmp35;\n\
    \  var tmp36;\n  var tmp37;\n  var tmp38;\n  var tmp39;\n  var tmp40;\n  var tmp41;\n\
    \  var tmp42;\n  var tmp43;\n  var tmp44;\n  var tmp45;\n  var tmp46;\n  var tmp47;\n\
    \  var tmp48;\n  var tmp49;\n  var tmp50;\n  var tmp51;\n  var tmp52;\n  var tmp53;\n\
    \  var tmp54;\n  var tmp55;\n  var tmp56;\n  var tmp57;\n  var tmp58;\n  var tmp59;\n\
    \  var tmp60;\n  var tmp61;\n  var tmp62;\n  var tmp63;\n  var tmp64;\n  var tmp65;\n\
    \  var tmp66;\n  var tmp67;\n  var tmp68;\n  var tmp69;\n  var tmp70;\n  var tmp71;\n\
    \  var tmp72;\n  var tmp73;\n  var tmp74;\n  var tmp75;\n  var tmp76;\n  var tmp77;\n\
    \  var tmp78;\n  var tmp79;\n  var tmp80;\n  var tmp81;\n  var tmp82;\n  var tmp83;\n\
    \  var tmp84;\n  var tmp85;\n  var tmp86;\n  var tmp87;\n  var tmp88;\n  var tmp89;\n\
    \  var tmp90;\n  var tmp91;\n  var tmp92;\n  var tmp93;\n  var tmp94;\n  var tmp95;\n\
    \  var tmp96;\n  var tmp97;\n  var tmp98;\n  var tmp99;\n  var tmp100;\n  var\
    \ tmp101;\n  var tmp102;\n  var tmp103;\n  var ", "  var len = arr.length;\n \
    \ if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n  var sorted\
    \ = new Array(len);\n  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n\
    \  sorted.sort(function(a, b){\n    var aVal = parseInt(a, 10);\n    var bVal\
    \ = parseInt(b, 10);\n    if(aVal > bVal){\n      return 1;\n    }\n    if(aVal\
    \ < bVal){\n      return -1;\n    }\n    if(aVal == bVal){\n      return 0;\n\
    \    }\n    if(aVal == 0){\n      return ones[a] - ones[b];\n    }\n    return\
    \ aVal - bVal;\n  });\n  return sorted;\n}\n", "  var len = arr.length;\n  if(len\
    \ < 2){\n    return arr;\n  }\n  if(len % 2 === 0){\n    return arr.sort();\n\
    \  }\n  var mid = Math.floor(len / 2);\n  var left = arr.slice(0, mid);\n  var\
    \ right = arr.slice(mid);\n  return sort_array(left).concat(sort_array(right));\n\
    }\n", "\tlet len = arr.length;\n\tlet max = 0;\n\tfor(let i = 0; i < len; i++){\n\
    \t\tlet cur = arr[i];\n\t\tlet count = 0;\n\t\tfor(let j = 0; j < len; j++){\n\
    \t\t\tif(arr[j] == cur){\n\t\t\t\tcount++;\n\t\t\t\tif(count > max){\n\t\t\t\t\
    \tmax = count;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlet res = [];\n\tfor(let i =\
    \ 0; i < len; i++){\n\t\tlet cur = arr[i];\n\t\tlet count = 0;\n\t\tfor(let j\
    \ = 0; j < len; j++){\n\t\t\tif(arr[j] == cur){\n\t\t\t\tcount++;\n\t\t\t\tif(count\
    \ > max){\n\t\t\t\t\tres.push(cur);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn res;\n}\n", "    arr.sort(function(a, b){\n        var x = a.toString(2);\n\
    \        var y = b.toString(2);\n        var z = x.length - y.length;\n      \
    \  if(z == 0){\n            return 0;\n        }\n        if(z > 0){\n       \
    \     return 1;\n        }\n        return -1;\n    });\n    return arr;\n}\n",
  "    var len = arr.length;\n    var temp = [];\n    var i;\n    for(i = 0; i < len;\
    \ i++){\n        temp.push(arr[i]);\n    }\n    for(i = 0; i < len; i++){\n  \
    \      for(var j = 0; j < len; j++){\n            if(arr[j] == temp[i]){\n   \
    \             temp.splice(j, 1);\n                j--;\n            }\n      \
    \  }\n    }\n    return temp;\n}\n", "    arr.sort(function(a, b){\n        var\
    \ a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_count = a_ones_len/2;\n        var b_ones_count = b_ones_len/2;\n\
    \        var a_ones_decimal = a_ones_len%2;\n        var b_ones_decimal = b_ones_len%2;\n\
    \        var a_decimal = a_ones_decimal?a_ones_decimal:a_ones_count;\n       \
    \ var b_decimal = b_ones_decimal?b_ones_decimal:b_ones_count;\n        var a_count\
    \ = a_ones_count?a_ones_count:a_ones_len;\n        var b_count = b_ones_count?b_ones_count:b_ones_len;\n\
    \        var a_decimal = a_ones_decimal?a_ones_decimal:a_ones_count;\n       \
    \ var b_decimal = b_ones_decimal?b_ones_decimal:b_ones_count;\n        var a_count\
    \ = a_ones_count?a_ones_count:a_ones_len;\n        var b_count = b_ones_count?b_ones_count:b_ones_len;\n\
    \        var a_decimal = a_ones_decimal?a_ones_decimal:a_ones_count;\n       \
    \ var b_decimal = b_ones_decimal?b_ones_decimal:b_ones_count;\n        if(a_ones_count\
    \ > b_ones_count){\n            return 1;\n        }else if(a_ones_count < b_ones_count){\n\
    \            return -1;\n        }else if(a_ones_count == b_ones_count){\n   \
    \         if(b_ones_count > a_ones_count){\n                return 1;\n      \
    \      }else if(b_ones_count < a_ones_count){\n                return -1;\n  \
    \          }else{\n                return 0;\n            }\n        }else{\n\
    \            if(a_ones_count > b_ones_count){\n                return -1;\n  \
    \          }else if(a_ones_count < b_ones_count){\n                return 1;\n\
    \            }else{\n                if(a_decimal){\n                    return\
    \ a_decimal-b_decimal;\n                }else{\n                    return a_count-b_count;\n\
    \                }\n            }\n        }\n    });\n    return arr;\n}\n",
  "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        for(var j=0;\
    \ j<len; j++){\n            if(arr[j] > arr[j+1]){\n                var temp =\
    \ arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n\
    \            }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var flag = new Array(len);\n    for(var\
    \ i = 0; i < len; i++){\n        flag[i] = 0;\n        sorted[i] = arr[i];\n \
    \   }\n    for(var i = 0; i < len; i++){\n        for(var j = 0; j < len; j++){\n\
    \            if(flag[j] == 0){\n                if((arr[j] > 0) == (arr[j + 1]\
    \ > 0)){\n                    flag[j] = 0;\n                    sorted[i] = arr[j];\n\
    \                    sorted[i + 1] = arr[j + 1];\n                }\n        \
    \    }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n            k = j;\n\
    \            while(k >= 0 && arr[k - 1] > arr[k]){\n                arr[k] = arr[k\
    \ - 1];\n                k--;\n            }\n            arr[k] = arr[j];\n \
    \           j--;\n        }\n        arr[j] = arr[i];\n    }\n    return arr;\n\
    }\n", "    arr.sort(function(a, b){\n        var aNum = parseInt(a, 10);\n   \
    \     var bNum = parseInt(b, 10);\n        if(aNum === bNum){\n            return\
    \ 0;\n        }\n        if(aNum < bNum){\n            return -1;\n        }\n\
    \        return 1;\n    });\n    return arr;\n}\n</code>\n<|/ a tags=arrays,sorting,javascript\
    \ |>\n<| c |>\nThis doesn't work. Try `sort_array([1, 5, 2, 3, 4])`. It returns\
    \ `[-6, -5, -4, -3, -2]`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting.\
    \ What browser are you using?\n<|/ c |>\n<| c |>\nI'm using Chrome Version 39.0.2171.95\
    \ (64-bit)\n<|/ c |>\n<| c |>\nOh, I see. Sorry, I didn't notice that `sort_array`\
    \ was returning the array instead of sorting it. Thanks for pointing that out.\n\
    <|/ c |>\n<| c |>\nI updated my answer to fix the problem. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| a tags=arrays,sorting,javascript |>\n<code>", "    var\
    \ len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[j] < arr[i]){\n\
    \                k = j;\n                while(arr[k] == arr[i]){\n          \
    \          k++;\n                }\n                arr[k] = arr[i];\n       \
    \         arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    if(len < 1) return arr;\n    var result = [];\n\
    \    var oneCount = 0;\n    var twoCount = 0;\n    var threeCount = 0;\n    var\
    \ fourCount = 0;\n    var fiveCount = 0;\n    var sixCount = 0;\n    var i = 0;\n\
    \    while(i < len){\n        var one = arr[i];\n        var two = arr[i+1];\n\
    \        var three = arr[i+2];\n        var four = arr[i+3];\n        var five\
    \ = arr[i+4];\n        var six = arr[i+5];\n        var oneCount = oneCount +\
    \ (one ? 1 : 0);\n        var twoCount = twoCount + (two ? 1 : 0);\n        var\
    \ threeCount = threeCount + (three ? 1 : 0);\n        var fourCount = fourCount\
    \ + (four ? 1 : 0);\n        var fiveCount = fiveCount + (five ? 1 : 0);\n   \
    \     var sixCount = sixCount + (six ? 1 : 0);\n        i += 6;\n        if(oneCount\
    \ > twoCount){\n            if(oneCount > threeCount){\n                if(oneCount\
    \ > fourCount){\n                    if(oneCount > fiveCount){\n             \
    \           if(oneCount > sixCount){\n                            result.push(one);\n\
    \                            i++;\n                        }else{\n          \
    \                  result.push(four);\n                            i += 4;\n \
    \                       }\n                    }else{\n                      \
    \  result.push(one);\n                        i += 1;\n                    }\n\
    \                }else{\n                    result.push(one);\n             \
    \       i += 1;\n                }\n            }else{\n                result.push(one);\n\
    \                i += 1;\n            }\n        }else if(twoCount > threeCount){\n\
    \            result.push(two);\n            i += 1;\n        }else if(threeCount\
    \ > fourCount){\n            result.push(three);\n            i += 1;\n      \
    \  }else if(fourCount > fiveCount){\n            result.push(four);\n        \
    \    i += 1;\n        }else if(fiveCount > sixCount){\n            result.push(five);\n\
    \            i += 1;\n        }else if(sixCount > oneCount){\n            result.push(six);\n\
    \            i += 1;\n        }\n    }\n    return result;\n}", "  if(arr.length\
    \ == 0){\n    return arr;\n  }\n  if(arr.length == 1){\n    return arr;\n  }\n\
    \  var ones = arr.filter(function(x){\n    return x > 0;\n  });\n  var zeros =\
    \ arr.filter(function(x){\n    return x < 0;\n  });\n  var ones_count = ones.length;\n\
    \  var zeros_count = zeros.length;\n  var ones_sum = 0;\n  var zeros_sum = 0;\n\
    \  for(var i=0; i<ones.length; i++){\n    ones_sum += ones[i];\n  }\n  for(var\
    \ i=0; i<zeros.length; i++){\n    zeros_sum += zeros[i];\n  }\n  if(ones_count\
    \ > zeros_count){\n    return sort_array(ones);\n  }\n  if(zeros_count > ones_count){\n\
    \    return sort_array(zeros);\n  }\n  if(ones_count == zeros_count){\n    return\
    \ sort_array(ones);\n  }\n  if(ones_sum > zeros_sum){\n    return sort_array(ones);\n\
    \  }\n  if(zeros_sum > ones_sum){\n    return sort_array(zeros);\n  }\n  return\
    \ arr;\n}\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n    \
    \    for(var j=0; j<len; j++){\n            if(arr[i] == arr[j]){\n          \
    \      arr.splice(j,1);\n                len--;\n            }\n        }\n  \
    \  }\n    arr.sort(function(a,b){\n        return a-b;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var swapped;\n    var sorted;\n    var i;\n\
    \    var j;\n    \n    sorted = new Array(len);\n    \n    for(i = 0; i < len;\
    \ i++){\n        swapped = 0;\n        for(j = 0; j < len; j++){\n           \
    \ if(arr[j] > arr[j + 1]){\n                sorted = [arr[j], arr[j + 1]];\n \
    \               swapped++;\n            }\n        }\n        if(swapped === 0){\n\
    \            sorted[i] = arr[i];\n        }\n    }\n    \n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        sorted.push(arr[i]);\n    }\n    for(i =\
    \ len - 1; i >= 0; i--){\n        for(j = i + 1; j < len; j++){\n            if(arr[j]\
    \ < arr[i]){\n                k = j;\n                while(arr[k] == arr[j]){\n\
    \                    k++;\n                }\n                arr[k] = arr[i];\n\
    \                arr[i] = arr[j];\n                arr[j] = k;\n            }\n\
    \        }\n    }\n    return sorted;\n}", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    for(var i=0; i<len; i++){\n        sorted[i] =\
    \ i;\n    }\n    sorted.sort(function(a,b){\n        var a_bin = bin(a);\n   \
    \     var b_bin = bin(b);\n        var a_ones = a_bin.substr(a_bin.indexOf('1'));\n\
    \        var b_ones = b_bin.substr(b_bin.indexOf('1'));\n        var a_ones_len\
    \ = a_ones.length;\n        var b_ones_len = b_ones.length;\n        if(a_ones_len\
    \ > b_ones_len){\n            return 1;\n        }\n        if(a_ones_len < b_ones_len){\n\
    \            return -1;\n        }\n        if(a_ones == b_ones){\n          \
    \  return 0;\n        }\n        return a_ones > b_ones ? 1 : -1;\n    });\n \
    \   for(var i=0; i<len; i++){\n        sorted[i] = arr[i];\n    }\n    return\
    \ sorted;\n}\n", "  var len = arr.length;\n  if(len < 2){\n    return arr;\n \
    \ }\n  \n  var ones = arr.reduce(function(acc, val){\n    return acc + val;\n\
    \  }, 0);\n  \n  if(ones === 0){\n    return arr;\n  }\n  \n  var twos = arr.reduce(function(acc,\
    \ val){\n    return acc + val;\n  }, 0);\n  \n  var tens = arr.reduce(function(acc,\
    \ val){\n    return acc + val;\n  }, 0);\n  \n  var tens_pow = Math.pow(10, tens);\n\
    \  var tens_pow_ones = Math.pow(10, ones);\n  \n  var tens_pow2 = Math.pow(10,\
    \ twos);\n  \n  var tens_pow3 = Math.pow(10, threes);\n  \n  var tens_pow4 = Math.pow(10,\
    \ fours);\n  \n  var tens_pow5 = Math.pow(10, fives);\n  \n  var tens_pow6 = Math.pow(10,\
    \ six);\n  \n  var tens_pow7 = Math.pow(10, sevens);\n  \n  var tens_pow8 = Math.pow(10,\
    \ eights);\n  \n  var tens_pow9 = Math.pow(10, nines);\n  \n  var tens_pow10 =\
    \ Math.pow(10, tens);\n  \n  var tens_pow11 = Math.pow(10, elevens);\n  \n  var\
    \ tens_pow12 = Math.pow(10, twelves);\n  \n  var tens_pow13 = Math.pow(10, thirteens);\n\
    \  \n  var tens_pow14 = Math.pow(10, fourteens);\n  \n  var tens_pow15 = Math.pow(10,\
    \ fifteens);\n  \n  var tens_pow16 = Math.pow(10, sixteens);\n  \n  var tens_pow17\
    \ = Math.pow(10, seventeens);\n  \n  var tens_pow18 = Math.pow(10, eighteens);\n\
    \  \n  var tens_pow19 = Math.pow(10, nineteens);\n  \n  var tens_pow20 = Math.pow(10,\
    \ twenty);\n  \n  var tens_pow21 = Math.pow(10, twentyone);\n  \n  var tens_pow22\
    \ = Math.pow(10, twentytwo);\n  \n  var tens_pow23 = Math.pow(10, twentythree);\n\
    \  \n  var tens_pow24 = Math.pow(10, twentyfour);\n  \n  var tens_pow25 = Math.pow(10,\
    \ twentyfive);\n  \n  var tens_pow26 = Math.pow(10, twentysix);\n  \n  var tens_pow27\
    \ = Math.pow(10, twentyseven);\n  \n  var tens_pow28 = Math.pow(10, ", "    var\
    \ len = arr.length;\n    var temp = 0;\n    var i = 0;\n    var j = 0;\n    var\
    \ k = 0;\n    var tempArr = [];\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n\
    \            }\n        }\n        tempArr.push(temp);\n        temp = 0;\n  \
    \  }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n     \
    \       if(arr[j] == arr[i]){\n                temp++;\n            }\n      \
    \  }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i\
    \ < len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){", "    arr.sort(function(a, b){\n\
    \        var a_ones = count_ones(a),\n            b_ones = count_ones(b),\n  \
    \          a_ones_comp = a_ones - b_ones,\n            b_ones_comp = b_ones -\
    \ a_ones,\n            a_comp = count_ones(a) - count_ones(b),\n            b_comp\
    \ = count_ones(b) - count_ones(a),\n            a_comp_dec = a_comp * Math.pow(10,\
    \ a_ones_comp),\n            b_comp_dec = b_comp * Math.pow(10, b_ones_comp),\n\
    \            a_comp_dec_comp = a_comp_dec * Math.pow(10, a_ones_comp - b_ones_comp),\n\
    \            b_comp_dec_comp = b_comp_dec * Math.pow(10, b_ones_comp - a_ones_comp);\n\
    \        if(a_ones_comp > b_ones_comp){\n            return a_comp_dec_comp;\n\
    \        }\n        else if(b_ones_comp > a_ones_comp){\n            return b_comp_dec_comp;\n\
    \        }\n        else{\n            return a_comp_dec;\n        }\n    });\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n       \
    \ return arr;\n    }\n    var ones = arr.filter(function(i){\n        return i\
    \ === 1;\n    });\n    var zeros = arr.filter(function(i){\n        return i ===\
    \ 0;\n    });\n    var ones_len = ones.length;\n    var zeros_len = zeros.length;\n\
    \    var max_len = Math.max(ones_len, zeros_len);\n    var min_len = Math.max(zeros_len,\
    \ ones_len);\n    var ones_count = 0, zeros_count = 0;\n    var result = [];\n\
    \    for(var i = 0; i < max_len; i++){\n        if(ones_count < min_len){\n  \
    \          result.push(ones[ones_count]);\n            ones_count++;\n       \
    \ }else if(zeros_count < min_len){\n            result.push(zeros[zeros_count]);\n\
    \            zeros_count++;\n        }else{\n            var cmp = ones_count\
    \ - zeros_count;\n            if(cmp > 0){\n                result.push(zeros[zeros_count]);\n\
    \                zeros_count++;\n            }else{\n                result.push(ones[ones_count]);\n\
    \                ones_count++;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n\
    \    var result = [];\n    var ones = [1];\n    var twos = [2];\n    var threes\
    \ = [3];\n    var fours = [4];\n    var fives = [5];\n    var sixes = [6];\n \
    \   var i;\n    for(i = 0; i < len; i++){\n        if(ones[arr[i]]){\n       \
    \     ones.push(arr[i]);\n        }\n        else if(twos[arr[i]]){\n        \
    \    twos.push(arr[i]);\n        }\n        else if(threes[arr[i]]){\n       \
    \     threes.push(arr[i]);\n        }\n        else if(fours[arr[i]]){\n     \
    \       fours.push(arr[i]);\n        }\n        else if(fives[arr[i]]){\n    \
    \        fives.push(arr[i]);\n        }\n        else if(sixes[arr[i]]){\n   \
    \         sixes.push(arr[i]);\n        }\n    }\n    ones = sort_array(ones);\n\
    \    twos = sort_array(twos);\n    threes = sort_array(threes);\n    fours = sort_array(fours);\n\
    \    fives = sort_array(fives);\n    sixes = sort_array(sixes);\n    for(i = 0;\
    \ i < len; i++){\n        result.push(ones[i]);\n        result.push(twos[i]);\n\
    \        result.push(threes[i]);\n        result.push(fours[i]);\n        result.push(fives[i]);\n\
    \        result.push(sixes[i]);\n    }\n    return result;\n}", "    var len =\
    \ arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n      \
    \  for(j = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n        \
    \        sorted[i]++;\n                sorted[j]--;\n            }\n        }\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            if(sorted[i] > sorted[j]){\n                k = sorted[i];\n    \
    \            sorted[i] = sorted[j];\n                sorted[j] = k;\n        \
    \    }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, tmp;\n    for(i = 0; i < len; i++){\n   \
    \     tmp = arr[i];\n        for(j = i; j > 0; j--){\n            if(tmp & 1){\n\
    \                tmp = arr[j];\n                arr[j] = arr[j-1];\n         \
    \       arr[j-1] = tmp;\n            }\n        }\n        sorted.push(tmp);\n\
    \    }\n    return sorted;\n}\n", "    var len = arr.length;\n    for(var i=0;\
    \ i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j] > arr[j+1]){\n\
    \                var temp = arr[j];\n                arr[j] = arr[j+1];\n    \
    \            arr[j+1] = temp;\n            }\n        }\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var swapped;\n    var sorted;\n    var i;\n\
    \n    sorted = new Array(len);\n    for(i = 0; i < len; i++){\n        swapped\
    \ = 0;\n        for(j = 0; j < len; j++){\n            if(arr[j] > arr[j+1]){\n\
    \                swap(arr, j, j+1);\n                swapped = 1;\n          \
    \  }\n        }\n        if(!swapped){\n            sorted[i] = arr[i];\n    \
    \    }\n    }\n    return sorted;\n}\n", "  var len = arr.length;\n  if(len <\
    \ 2){\n    return arr;\n  }\n  \n  var ones = arr.filter(function(i){\n    return\
    \ i === 1;\n  });\n  var tens = arr.filter(function(i){\n    return i === 10;\n\
    \  });\n  var hundreds = arr.filter(function(i){\n    return i === 100;\n  });\n\
    \  var thousands = arr.filter(function(i){\n    return i === 1000;\n  });\n  var\
    \ millions = arr.filter(function(i){\n    return i === 1000000;\n  });\n  var\
    \ billions = arr.filter(function(i){\n    return i === 1000000000;\n  });\n  var\
    \ trillions = arr.filter(function(i){\n    return i === 1000000000000;\n  });\n\
    \  \n  var ones_count = ones.length;\n  var tens_count = tens.length;\n  var hundreds_count\
    \ = hundreds.length;\n  var thousands_count = thousands.length;\n  var millions_count\
    \ = millions.length;\n  var billions_count = billions.length;\n  var trillions_count\
    \ = trillions.length;\n  \n  var ones_count_sorted = ones_count > 0 ? ones : [];\n\
    \  var tens_count_sorted = tens_count > 0 ? tens : [];\n  var hundreds_count_sorted\
    \ = hundreds_count > 0 ? hundreds : [];\n  var thousands_count_sorted = thousands_count\
    \ > 0 ? thousands : [];\n  var millions_count_sorted = millions_count > 0 ? millions\
    \ : [];\n  var billions_count_sorted = billions_count > 0 ? billions : [];\n \
    \ var trillions_count_sorted = trillions_count > 0 ? trillions : [];\n  \n  var\
    \ ones_count_sorted_sorted = ones_count_sorted.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var tens_count_sorted_sorted = tens_count_sorted.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var hundreds_count_sorted_sorted = hundreds_count_sorted.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var thousands_count_sorted_sorted = thousands_count_sorted.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var millions_count_sorted_sorted = millions_count_sorted.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var billions_count_sorted_sorted = billions_count_sorted.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var trillions_count_sorted_sorted = trillions_count_sorted.sort(function(a,\
    \ b){\n    return a - b;", "    arr.sort(function(a, b){\n        var a_ones =\
    \ count_ones(a);\n        var b_ones = count_ones(b);\n        var a_ones_comp\
    \ = a_ones - b_ones;\n        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp\
    \ === 0){\n            return b_ones_comp;\n        }\n        if(b_ones_comp\
    \ === 0){\n            return a_ones_comp;\n        }\n        return a_ones_comp\
    \ - b_ones_comp;\n    });\n    return arr;\n}\n", "\tarr.sort(function(a, b){\n\
    \t\tif(a==b) return 0;\n\t\tif(a<b) return -1;\n\t\treturn 1;\n\t});\n\treturn\
    \ arr;\n}\n", "    arr.sort(function(a, b){\n        var aNum = parseInt(a, 2);\n\
    \        var bNum = parseInt(b, 2);\n        if(aNum === bNum){\n            return\
    \ 0;\n        }\n        if(aNum < bNum){\n            return -1;\n        }\n\
    \        return 1;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   for(j = i+1; j < len; j++){\n            if(arr[i] == arr[j]){\n         \
    \       sorted.push(arr[i]);\n                arr.splice(i, 1);\n            \
    \    arr.splice(j, 1);\n                j--;\n            }\n        }\n    }\n\
    \    for(i = 0; i < len; i++){\n        for(k = i+1; k < len; k++){\n        \
    \    if(arr[i] == arr[k]){\n                sorted.push(arr[i]);\n           \
    \     arr.splice(i, 1);\n                arr.splice(k, 1);\n                k--;\n\
    \            }\n        }\n    }\n    return sorted;\n}", "    arr.sort(function(a,\
    \ b){\n        var x = parseInt(a, 10);\n        var y = parseInt(b, 10);\n  \
    \      return x - y;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        var num = arr[i];\n        if(num == 0){\n\
    \            continue;\n        }\n        var bin = num.toString(2);\n      \
    \  var len = bin.length;\n        var count = 0;\n        for(var j=0; j<len;\
    \ j++){\n            if(bin[j] == '1'){\n                count++;\n          \
    \  }\n        }\n        arr.splice(i, 1);\n        arr.splice(i, 0, count);\n\
    \    }\n    return arr;\n}\n", "    arr.sort(function(a, b){\n        var aNum\
    \ = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n        if(aNum ===\
    \ bNum){\n            return aNum - bNum;\n        }\n        return aNum > bNum\
    \ ? 1 : -1;\n    });\n    return arr;\n}\n", "  var len = arr.length;\n  if(len\
    \ < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n  var sorted = new\
    \ Array(len);\n  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a,\
    \ b){\n    var aVal = parseInt(a, 10);\n    var bVal = parseInt(b, 10);\n    if(aVal\
    \ < bVal){\n      return -1;\n    } else if(aVal > bVal){\n      return 1;\n \
    \   } else {\n      return 0;\n    }\n  });\n  for(var i=0; i<len; i++){\n   \
    \ sorted[i] = parseInt(sorted[i], 10);\n  }\n  return sorted;\n}\n", "    var\
    \ len = arr.length;\n    var sorted = new Array(len);\n    for(var i=0; i<len;\
    \ i++){\n        sorted[i] = i;\n    }\n    sorted.sort(function(a, b){\n    \
    \    var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.substr(a_bin.length-4);\n\
    \        var b_ones = b_bin.substr(b_bin.length-4);\n        var a_ones_len =\
    \ a_ones.length;\n        var b_ones_len = b_ones.length;\n        var a_dec =\
    \ parseInt(a_ones, 2);\n        var b_dec = parseInt(b_ones, 2);\n        if(a_ones_len\
    \ != b_ones_len){\n            return a_ones_len - b_ones_len;\n        }\n  \
    \      if(a_ones_len == 0){\n            return a_dec - b_dec;\n        }\n  \
    \      return a_dec - b_dec;\n    });\n    for(var i=0; i<len; i++){\n       \
    \ sorted[i] = arr[i];\n    }\n    return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var x = parseInt(a, 10);\n        var y = parseInt(b, 10);\n  \
    \      if(x < y){\n            return -1;\n        }\n        if(x > y){\n   \
    \         return 1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n</code>\n<|/ a tags=sorting,javascript,arrays |>\n<| a tags=sorting,javascript,arrays\
    \ |>\n<code>\nvar arr = [1, 5, 2, 3, 4];\narr.sort(function(a, b){\n    return\
    \ parseInt(a, 10) - parseInt(b, 10);\n});", "    arr.sort(function(a, b){\n  \
    \      var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n    \
    \    var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones - a_ones;\n\
    \        if(a_ones_comp == 0){\n            return b_ones_comp;\n        }\n \
    \       if(b_ones_comp == 0){\n            return a_ones_comp;\n        }\n  \
    \      return a_ones_comp - b_ones_comp;\n    });\n    return arr;\n}\n", "  \
    \  arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var b_bin =\
    \ bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return x=='1';});\n\
    \        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n \
    \       var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_sum = a_ones.reduce(function(a, b){return a+b;});\n      \
    \  var b_ones_sum = b_ones.reduce(function(a, b){return a+b;});\n        var a_ones_sum_dec\
    \ = a_ones_sum/Math.pow(2, a_ones_len);\n        var b_ones_sum_dec = b_ones_sum/Math.pow(2,\
    \ b_ones_len);\n        var a_ones_sum_dec_str = a_ones_sum_dec.toFixed(2);\n\
    \        var b_ones_sum_dec_str = b_ones_sum_dec.toFixed(2);\n        if(a_ones_len\
    \ == b_ones_len){\n            return a_ones_sum_dec_str < b_ones_sum_dec_str\
    \ ? -1 : 1;\n        }\n        return a_ones_len > b_ones_len ? -1 : 1;\n   \
    \ });\n    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n \
    \       return arr;\n    }\n    var ones = arr.filter(function(item){\n      \
    \  return item === 1;\n    });\n    var zeros = arr.filter(function(item){\n \
    \       return item === 0;\n    });\n    var len = ones.length;\n    var max =\
    \ 0;\n    var min = 0;\n    for(var i = 0; i<len; i++){\n        max = Math.max(max,\
    \ ones[i]);\n        min = Math.min(min, ones[i]);\n    }\n    for(var i = 0;\
    \ i<len; i++){\n        ones[i] = ((ones[i] - min) * len + zeros[i]) / max;\n\
    \    }\n    return ones;\n}\n", "    var len = arr.length;\n    var temp = 0;\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr = [];\n    while(i\
    \ < len){\n        while(j < len){\n            if(arr[j] == 1){\n           \
    \     tempArr[k] = arr[j];\n                k++;\n                j++;\n     \
    \       }else{\n                j++;\n            }\n        }\n        while(j\
    \ < len){\n            if(arr[j] == 0){\n                tempArr[k] = arr[j];\n\
    \                k++;\n                j++;\n            }else{\n            \
    \    j++;\n            }\n        }\n        while(j < len){\n            if(arr[j]\
    \ == 1){\n                tempArr[k] = arr[j];\n                k++;\n       \
    \         j++;\n            }else{\n                j++;\n            }\n    \
    \    }\n        while(j < len){\n            if(arr[j] == 0){\n              \
    \  tempArr[k] = arr[j];\n                k++;\n                j++;\n        \
    \    }else{\n                j++;\n            }\n        }\n        while(j <\
    \ len){\n            if(arr[j] == 1){\n                tempArr[k] = arr[j];\n\
    \                k++;\n                j++;\n            }else{\n            \
    \    j++;\n            }\n        }\n        while(j < len){\n            if(arr[j]\
    \ == 0){\n                tempArr[k] = arr[j];\n                k++;\n       \
    \         j++;\n            }else{\n                j++;\n            }\n    \
    \    }\n        while(j < len){\n            if(arr[j] == 1){\n              \
    \  tempArr[k] = arr[j];\n                k++;\n                j++;\n        \
    \    }else{\n                j++;\n            }\n        }\n        while(j <\
    \ len){\n            if(arr[j] == 0){\n                tempArr[k] = arr[j];\n\
    \                k++;\n                j++;\n            }else{\n            \
    \    j++;\n            }\n        }\n        while(j < len){\n            if(arr[j]\
    \ == 1){\n                tempArr[k] = arr[j];\n                k++;\n       \
    \         j++;\n            }else{\n                j++;\n            }\n    \
    \    }\n        while(j < len){\n            if(arr[j] == 0){\n              \
    \  tempArr[k] = arr[j];\n                k++;\n                j++;\n        \
    \    }else{\n                j++;\n            }\n        }\n        while(j <\
    \ len){\n            if(arr[j] == 1){\n                tempArr[k] = arr[j];\n\
    \                k++;\n                j++;\n            }else{\n            \
    \    j++;\n            }\n        }\n        while(j < len){\n            if(arr[j]\
    \ == 0){\n                tempArr[k] = arr[j];\n                k++;\n       \
    \         j++;\n            }else{\n                j++;\n            }\n    \
    \    }\n        ", "    var len = arr.length;\n    if(len < 2){\n        return\
    \ arr;\n    }\n    var max_ones = 0, max_dec = 0;\n    var min_ones = 0, min_dec\
    \ = 0;\n    for(var i = 0; i < len; i++){\n        var ones = arr[i].toString(2).split('1');\n\
    \        if(ones.length === 1){\n            ones = ones[0].split('0');\n    \
    \        ones = ones[0].split(',');\n            ones = ones[0].split('-');\n\
    \            ones = ones[0].split(',');\n            ones = ones[0].split('.');\n\
    \            ones = ones[0].split('+');\n            ones = ones[0].split('/');\n\
    \            ones = ones[0].split('<');\n            ones = ones[0].split('>');\n\
    \            ones = ones[0].split('|');\n            ones = ones[0].split('^');\n\
    \            ones = ones[0].split('~');\n            ones = ones[0].split('!');\n\
    \            ones = ones[0].split('=');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(';');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split(':');\n\
    \            ones = ones[0].split(':');\n            ones = ones[0].split('",
  "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var b_bin =\
    \ bin(b);\n        var a_ones = a_bin.split('').filter(function(x){ return x ==\
    \ '1'; }).length;\n        var b_ones = b_bin.split('').filter(function(x){ return\
    \ x == '1'; }).length;\n        var a_num = parseInt(a_ones, 2);\n        var\
    \ b_num = parseInt(b_ones, 2);\n        return a_num - b_num;\n    });\n    return\
    \ arr;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "    var len\
    \ = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n \
    \       for(j = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n   \
    \             for(k = 0; k < len; k++){\n                    if(arr[k] > arr[j]\
    \ && arr[k] < arr[i]){\n                        sorted[k] = arr[k];\n        \
    \            }\n                }\n                for(k = j + 1; k < len; k++){\n\
    \                    if(arr[k] > arr[j] && arr[k] < arr[i]){\n               \
    \         sorted[k] = arr[k];\n                    }\n                }\n    \
    \            for(k = j + 1; k < len; k++){\n                    if(arr[k] > arr[j]\
    \ && arr[k] < arr[i]){\n                        sorted[k] = arr[k];\n        \
    \            }\n                }\n                for(k = j + 1; k < len; k++){\n\
    \                    if(arr[k] > arr[j] && arr[k] < arr[i]){\n               \
    \         sorted[k] = arr[k];\n                    }\n                }\n    \
    \            for(k = j + 1; k < len; k++){\n                    if(arr[k] > arr[j]\
    \ && arr[k] < arr[i]){\n                        sorted[k] = arr[k];\n        \
    \            }\n                }\n                for(k = j + 1; k < len; k++){\n\
    \                    if(arr[k] > arr[j] && arr[k] < arr[i]){\n               \
    \         sorted[k] = arr[k];\n                    }\n                }\n    \
    \            for(k = j + 1; k < len; k++){\n                    if(arr[k] > arr[j]\
    \ && arr[k] < arr[i]){\n                        sorted[k] = arr[k];\n        \
    \            }\n                }\n                for(k = j + 1; k < len; k++){\n\
    \                    if(arr[k] > arr[j] && arr[k] < arr[i]){\n               \
    \         sorted[k] = arr[k];\n                    }\n                }\n    \
    \            for(k = j + 1; k < len; k++){\n                    if(arr[k] > arr[j]\
    \ && arr[k] < arr[i]){\n                        sorted[k] = arr[k];\n        \
    \            }\n                }\n                for(k = j + 1; k < len; k++){\n\
    \                    if(arr[k] > arr[j] && arr[k] < arr[i]){\n               \
    \         sorted[k] = arr[k];\n                    }\n                }\n    \
    \            for(k = j + 1; k < len; k++){\n                    if(arr[k] > arr[j]\
    \ && arr[k] < arr[i]){\n                        sorted[k] = arr[k];\n        \
    \            }\n                }\n                for(k = j + 1; k < len; k++){\n\
    \                    if(arr[k] > arr[j] && arr[k] < arr[i]){\n               \
    \         sorted", "    var len = arr.length;\n    var sorted = new Array(len);\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            if(arr[i] == arr[j]){\n                k = j;\n                while(arr[k]\
    \ == arr[j]){\n                    k++;\n                }\n                arr[k]\
    \ = arr[i];\n                arr[i] = k;\n            }\n        }\n    }\n  \
    \  return sorted;\n}", "    var len = arr.length;\n    var sorted_arr = [];\n\
    \    var flag = 0;\n    for(var i = 0; i < len; i++){\n        flag = 0;\n   \
    \     for(var j = 0; j < len; j++){\n            if(arr[j] == 1){\n          \
    \      flag = 1;\n                break;\n            }\n        }\n        if(flag\
    \ == 0){\n            sorted_arr.push(arr[i]);\n        }\n    }\n    for(var\
    \ i = 0; i < len; i++){\n        flag = 0;\n        for(var j = 0; j < len; j++){\n\
    \            if(arr[j] == -1){\n                flag = 1;\n                break;\n\
    \            }\n        }\n        if(flag == 0){\n            sorted_arr.push(arr[i]);\n\
    \        }\n    }\n    return sorted_arr;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x==='1';});\n        var b_ones\
    \ = b_bin.split('').filter(function(x){return x==='1';});\n        var a_ones_count\
    \ = a_ones.length;\n        var b_ones_count = b_ones.length;\n        if(a_ones_count\
    \ > b_ones_count){\n            return -1;\n        }\n        if(a_ones_count\
    \ < b_ones_count){\n            return 1;\n        }\n        var a_ones_decimal\
    \ = a_ones.map(function(x){return parseInt(x, 10);});\n        var b_ones_decimal\
    \ = b_ones.map(function(x){return parseInt(x, 10);});\n        var a_ones_decimal_sorted\
    \ = a_ones_decimal.sort(function(a, b){return a-b;});\n        var b_ones_decimal_sorted\
    \ = b_ones_decimal.sort(function(a, b){return a-b;});\n        var a_ones_decimal_sorted_count\
    \ = a_ones_decimal_sorted.length;\n        var b_ones_decimal_sorted_count = b_ones_decimal_sorted.length;\n\
    \        if(a_ones_decimal_sorted_count > b_ones_decimal_sorted_count){\n    \
    \        return -1;\n        }\n        if(a_ones_decimal_sorted_count < b_ones_decimal_sorted_count){\n\
    \            return 1;\n        }\n        return a_ones_decimal_sorted.length\
    \ - b_ones_decimal_sorted.length;\n    });\n    return arr;\n}\n</code>\n<|/ a\
    \ tags=sorting,arrays,javascript |>\n<| a tags=sorting,arrays,javascript |>\n\
    <code>", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j -\
    \ 1] > arr[j]){\n            k = j;\n            while(k >= 0 && arr[k - 1] >\
    \ arr[k]){\n                arr[k] = arr[k - 1];\n                k--;\n     \
    \       }\n            arr[k] = arr[j];\n            j--;\n        }\n       \
    \ arr[j] = arr[i];\n    }\n    return arr;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_len =\
    \ a_bin.length;\n        var b_len = b_bin.length;\n        var a_ones = a_len\
    \ - 1;\n        var b_ones = b_len - 1;\n        var a_ones_count = a_ones.toString(2);\n\
    \        var b_ones_count = b_ones.toString(2);\n        var a_ones_count_int\
    \ = parseInt(a_ones_count);\n        var b_ones_count_int = parseInt(b_ones_count);\n\
    \        var a_ones_count_dec = a_ones_count_int - a_ones_count_int.toString(2);\n\
    \        var b_ones_count_dec = b_ones_count_int - b_ones_count_int.toString(2);\n\
    \        var a_ones_count_dec = a_ones_count_dec.toString(2);\n        var b_ones_count_dec\
    \ = b_ones_count_dec.toString(2);\n        var a_ones_count_dec = a_ones_count_dec.length\
    \ - a_ones_count_dec.length;\n        var b_ones_count_dec = b_ones_count_dec.length\
    \ - b_ones_count_dec.length;\n        if(a_ones_count_dec > b_ones_count_dec){\n\
    \            return -1;\n        }\n        if(a_ones_count_dec < b_ones_count_dec){\n\
    \            return 1;\n        }\n        if(a_ones_count_dec == b_ones_count_dec){\n\
    \            var a_ones_count_str = a_ones.toString(2);\n            var b_ones_count_str\
    \ = b_ones.toString(2);\n            var a_ones_count_str_int = parseInt(a_ones_count_str);\n\
    \            var b_ones_count_str_int = parseInt(b_ones_count_str);\n        \
    \    var a_ones_count_str_dec = a_ones_count_str_int - a_ones_count_str_int.toString(2);\n\
    \            var b_ones_count_str_dec = b_ones_count_str_int - b_ones_count_str_int.toString(2);\n\
    \            var a_ones_count_str_dec = a_ones_count_str_dec.toString(2);\n  \
    \          var b_ones_count_str_dec = b_ones_count_str_dec.toString(2);\n    \
    \        var a_ones_count_str_dec = a_ones_count_str_dec.length - a_ones_count_str_dec.length;\n\
    \            var b_ones_count_str_dec = b_ones_count_str_dec.length - b_ones_count_str_dec.length;\n\
    \            if(a_ones_count_str_dec > b_ones_count_str_dec){\n              \
    \  return -1;\n            }\n            if(a_ones_count_str_dec < b_ones_count_str_dec){\n\
    \                return 1;\n            }\n            if(a_ones_", "    var len\
    \ = arr.length;\n    var temp = 0;\n    var i = 0;\n    var j = 0;\n    var k\
    \ = 0;\n    var tempArr = [];\n    while(i < len){\n        while(j < len){\n\
    \            if(arr[j] == 1){\n                temp++;\n                j++;\n\
    \            }\n            else{\n                break;\n            }\n   \
    \     }\n        if(temp == 0){\n            tempArr.push(arr[i]);\n         \
    \   i++;\n        }\n        else{\n            while(j < len){\n            \
    \    if(arr[j] == 0){\n                    temp--;\n                    j++;\n\
    \                }\n                else{\n                    break;\n      \
    \          }\n            }\n            if(temp > 0){\n                tempArr.push(arr[i]);\n\
    \                i++;\n            }\n            else{\n                while(j\
    \ < len){\n                    if(arr[j] == 1){\n                        j++;\n\
    \                    }\n                    else{\n                        break;\n\
    \                    }\n                }\n                tempArr.push(arr[i]);\n\
    \                i++;\n            }\n        }\n    }\n    return tempArr;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        sorted[i] = [];\n        for(j = 0, k = i;\
    \ j < len; j++){\n            if(arr[j] % 2 === 0){\n                sorted[i].push(arr[k]);\n\
    \                k++;\n            }else{\n                sorted[i].push(arr[j]);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = 0; j < len; j++){\n            if(sorted[i][j] > sorted[i][j+1]){\n      \
    \          var temp = sorted[i][j];\n                sorted[i][j] = sorted[i][j+1];\n\
    \                sorted[i][j+1] = temp;\n            }\n        }\n    }\n   \
    \ return sorted;\n}\n", "  var len = arr.length;\n  if(len < 2){\n    return arr;\n\
    \  }\n  var ones = count_ones(arr);\n  var len = ones.length;\n  if(len < 2){\n\
    \    return arr;\n  }\n  var sorted = new Array(len);\n  for(var i=0; i<len; i++){\n\
    \    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a, b){\n    var aVal = count_ones(a);\n\
    \    var bVal = count_ones(b);\n    var aValLen = aVal.length;\n    var bValLen\
    \ = bVal.length;\n    var aValSum = 0;\n    var bValSum = 0;\n    for(var i=0;\
    \ i<aValLen; i++){\n      aValSum += aVal[i];\n    }\n    for(var i=0; i<bValLen;\
    \ i++){\n      bValSum += bVal[i];\n    }\n    if(aValSum < bValSum){\n      return\
    \ -1;\n    }\n    if(aValSum > bValSum){\n      return 1;\n    }\n    return 0;\n\
    \  });\n  for(var i=0; i<len; i++){\n    sorted[i] = sorted[i].toString();\n \
    \ }\n  return sorted;\n}\n", "    return arr.sort(function(a, b){\n        var\
    \ aNum = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n        if(aNum\
    \ === 0){\n            return 1;\n        }\n        if(bNum === 0){\n       \
    \     return -1;\n        }\n        if(aNum === bNum){\n            return 0;\n\
    \        }\n        if(aNum < bNum){\n            return -1;\n        }\n    \
    \    if(aNum > bNum){\n            return 1;\n        }\n    });\n}\n", "    var\
    \ len = arr.length;\n    var sorted_arr = [];\n    var max_ones = 0;\n    var\
    \ min_ones = 0;\n    var max_decimal = 0;\n    var min_decimal = 0;\n    for(var\
    \ i=0; i<len; i++){\n        var num = arr[i];\n        if(num > 0){\n       \
    \     sorted_arr.push(num);\n            max_ones = Math.max(max_ones, num);\n\
    \            min_ones = Math.min(min_ones, num);\n        }else{\n           \
    \ sorted_arr.push(num);\n            max_decimal = Math.max(max_decimal, num);\n\
    \            min_decimal = Math.min(min_decimal, num);\n        }\n    }\n   \
    \ sorted_arr.sort(function(a, b){\n        var a_ones = Math.log(a) / Math.log(2);\n\
    \        var b_ones = Math.log(b) / Math.log(2);\n        var a_decimal = Math.log(a)\
    \ / Math.log(10);\n        var b_decimal = Math.log(b) / Math.log(10);\n     \
    \   if(a_ones < b_ones){\n            return -1;\n        }else if(a_ones > b_ones){\n\
    \            return 1;\n        }else{\n            if(a_decimal < b_decimal){\n\
    \                return -1;\n            }else if(a_decimal > b_decimal){\n  \
    \              return 1;\n            }else{\n                return 0;\n    \
    \        }\n        }\n    });\n    for(var i=0; i<len; i++){\n        sorted_arr[i]\
    \ = sorted_arr[i]/Math.pow(10, max_decimal);\n    }\n    return sorted_arr;\n\
    }\n</code>\n<|/ a tags=javascript,sorting |>\n<| c |>\nThis doesn't seem to work.\
    \ Try `sort_array([1, 5, 2, 3, 4])`\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I added the test case in the answer. Can you please tell me what is not working?\n\
    <|/ c |>\n<| c |>\nIt doesn't work for `sort_array([1, 5, 2, 3, 4])`\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I added the test case in the answer.\
    \ Can you please tell me what is not working?\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ for `sort_array([-2, -3, -4, -5, -6])`\n<|/ c |>\n<| a dscore=2 |>\nThis should\
    \ work:\n<code>", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n\
    \        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_sum = a_ones.reduce(function(a, b){return a+b;});\n      \
    \  var b_ones_sum = b_ones.reduce(function(a, b){return a+b;});\n        var a_ones_avg\
    \ = a_ones_sum / a_ones_len;\n        var b_ones_avg = b_ones_sum / b_ones_len;\n\
    \        var a_ones_decimal = a_ones_sum / a_ones_len;\n        var b_ones_decimal\
    \ = b_ones_sum / b_ones_len;\n        if(a_ones_len == b_ones_len){\n        \
    \    return a_ones_decimal - b_ones_decimal;\n        }\n        return a_ones_avg\
    \ - b_ones_avg;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k <=\
    \ 0){\n                ret.unshift(arr[i]);\n                ret.push(arr[j]);\n\
    \                break;\n            }\n            else if(k >= 1){\n       \
    \         ret.unshift(arr[j]);\n                ret.push(arr[i]);\n          \
    \      break;\n            }\n        }\n    }\n    return ret;\n}\n", "    var\
    \ len = arr.length;\n    var sorted = [];\n    var i, j, tmp;\n    for(i = 0;\
    \ i < len; i++){\n        tmp = arr[i];\n        for(j = i - 1; j >= 0; j--){\n\
    \            if(tmp & 1){\n                tmp = arr[j];\n                arr[j]\
    \ = tmp;\n                arr[i] = tmp;\n                break;\n            }\n\
    \        }\n        sorted.push(tmp);\n    }\n    return sorted;\n}\n", "    var\
    \ len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i] ==\
    \ arr[j]){\n                for(k = 0; k < len; k++){\n                    if(arr[k]\
    \ > arr[j]){\n                        sorted[k] = arr[k];\n                  \
    \  }else{\n                        sorted[k] = arr[j];\n                    }\n\
    \                }\n                for(k = len - 1; k >= j; k--){\n         \
    \           sorted[k] = arr[k];\n                }\n                for(k = j\
    \ + 1; k < len; k++){\n                    sorted[k] = arr[k];\n             \
    \   }\n            }\n        }\n    }\n    return sorted;\n}\n", "    var len\
    \ = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i] ==\
    \ arr[j]){\n                for(k = 0; k < i; k++){\n                    sorted[k]\
    \ = sorted[k + 1];\n                }\n                sorted[i] = arr[i];\n \
    \               for(k = i + 1; k < len; k++){\n                    sorted[k] =\
    \ sorted[k + 1];\n                }\n                for(k = len - 1; k >= j;\
    \ k--){\n                    sorted[k] = sorted[k - 1];\n                }\n \
    \               for(k = j - 1; k >= i; k--){\n                    sorted[k] =\
    \ sorted[k - 1];\n                }\n                break;\n            }\n \
    \       }\n    }\n    return sorted;\n}\n", "  var len = arr.length;\n  if(len\
    \ < 1) return arr;\n  var ones = count_ones(arr);\n  var sorted = new Array(len);\n\
    \  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a,\
    \ b){\n    return count_ones(a) - count_ones(b) || a - b;\n  });\n  for(var i=0;\
    \ i<len; i++){\n    sorted[i] = sorted[i].toString();\n  }\n  return sorted;\n\
    }\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n   \
    \     var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp == 0){\n \
    \           return b_ones_comp;\n        }\n        if(b_ones_comp == 0){\n  \
    \          return a_ones_comp;\n        }\n        return a_ones_comp * b_ones_comp;\n\
    \    });\n    return arr;\n}\n", "  var len = arr.length;\n  if(len < 2){\n  \
    \  return arr;\n  }\n  var ones = count_ones(arr);\n  var dec = Math.pow(10, Math.ceil(Math.log(len)/Math.LN10));\n\
    \  var res = [];\n  for(var i=0; i<len; i++){\n    res.push(parseInt(arr[i]/dec,\
    \ 10));\n  }\n  res = res.sort(function(a, b){\n    return a-b;\n  });\n  for(var\
    \ i=0; i<len; i++){\n    res.push(parseInt(arr[i]/dec, 10));\n  }\n  return res;\n\
    }\n", "\tarr.sort(function(a, b){\n\t\tif(a==b) return 0;\n\t\tif(a>b) return\
    \ 1;\n\t\treturn -1;\n\t});\n\treturn arr;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[j] < arr[i]){\n                var temp = arr[i];\n                arr[i]\
    \ = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    var result = [];\n   \
    \ var ones = [];\n    var zeros = [];\n    var i;\n\n    for(i = 0; i < len; i++){\n\
    \        if(arr[i] == 0){\n            zeros.push(arr[i]);\n        }else if(arr[i]\
    \ == 1){\n            ones.push(arr[i]);\n        }else{\n            result.push(arr[i]);\n\
    \        }\n    }\n\n    for(i = 0; i < len; i++){\n        if(ones.length ==\
    \ 0){\n            result.push(arr[i]);\n        }else if(zeros.length == 0){\n\
    \            zeros.push(arr[i]);\n        }else if(ones.length == 1){\n      \
    \      ones.push(arr[i]);\n        }else if(zeros.length == 1){\n            zeros.push(arr[i]);\n\
    \        }else{\n            var ones_count = ones.length;\n            var zeros_count\
    \ = zeros.length;\n            var max_ones = Math.max(ones_count, zeros_count);\n\
    \            var min_zeros = Math.min(ones_count, zeros_count);\n            var\
    \ max_zeros = Math.max(zeros_count, ones_count);\n            var min_ones = Math.min(ones_count,\
    \ zeros_count);\n            var max_ones_count = max_ones - min_ones;\n     \
    \       var max_zeros_count = max_zeros - min_zeros;\n            var max_ones_zeros_count\
    \ = max_ones_count + max_zeros_count;\n            var min_ones_zeros_count =\
    \ min_ones_count + min_zeros_count;\n            var max_ones_zeros_count_sorted\
    \ = max_ones_zeros_count - max_ones_count - max_zeros_count;\n            var\
    \ min_ones_zeros_count_sorted = min_ones_zeros_count - min_ones_count - min_zeros_count;\n\
    \            var max_ones_zeros_count_sorted_sorted = max_ones_zeros_count_sorted\
    \ - max_ones_count - max_zeros_count;\n            var min_ones_zeros_count_sorted_sorted\
    \ = min_ones_zeros_count_sorted - min_ones_count - min_zeros_count;\n        \
    \    var max_ones_zeros_count_sorted_sorted_sorted = max_ones_zeros_count_sorted_sorted\
    \ - max_ones_count - max_zeros_count;\n            var min_ones_zeros_count_sorted_sorted_sorted\
    \ = min_ones_zeros_count_sorted_sorted_sorted - min_ones_count - min_zeros_count;\n\
    \            var max_ones_zeros_count_sorted_sorted_sorted_sorted = max_ones_zeros_count_sorted_sorted_sorted_sorted\
    \ - max_ones_count - max_zeros_count;\n            var min_ones_zeros_count_sorted_sorted_sorted_sorted\
    \ = min_ones_zeros_count_sorted_sorted_sorted_sorted - min_ones_count - min_zeros_count;\n\
    \            var max_ones_zeros_count_sorted_sorted_sorted_sorted_sorted = max_ones_zeros_count_sorted_sorted_sorted_sorted\
    \ - ", "    var len = arr.length;\n    var sorted_arr = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        sorted_arr[i] = 0;\n    }\n    for(i =\
    \ 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ == arr[j]){\n                sorted_arr[j] += 1;\n            }\n        }\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            if(arr[i] > arr[j]){\n                k = sorted_arr[j];\n      \
    \          sorted_arr[j] = sorted_arr[i];\n                sorted_arr[i] = k;\n\
    \            }\n        }\n    }\n    return sorted_arr;\n}\n", "    var len =\
    \ arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        j = i;\n        while(j > 0 && arr[j-1] > arr[j]){\n            k = j;\n\
    \            while(k >0 && arr[k-1] > arr[k]){\n                arr[k] = arr[k-1];\n\
    \                k--;\n            }\n            arr[k] = arr[j-1];\n       \
    \     j--;\n        }\n        ret.push(arr[j]);\n    }\n    return ret;\n}\n",
  "  var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n\
    \  var sorted_arr = new Array(len);\n  for(var i=0; i<len; i++){\n    sorted_arr[i]\
    \ = arr[i];\n  }\n  sorted_arr.sort(function(a, b){\n    var a_ones = count_ones(a);\n\
    \    var b_ones = count_ones(b);\n    if(a_ones < b_ones){\n      return -1;\n\
    \    }\n    if(a_ones > b_ones){\n      return 1;\n    }\n    return count_ones(a)\
    \ - count_ones(b);\n  });\n  return sorted_arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){ return x == '1'; }).length;\n        var\
    \ b_ones = b_bin.split('').filter(function(x){ return x == '1'; }).length;\n \
    \       var a_ones_num = a_ones - 1;\n        var b_ones_num = b_ones - 1;\n \
    \       var a_ones_dec = a_ones_num.toString(10);\n        var b_ones_dec = b_ones_num.toString(10);\n\
    \        var a_ones_dec = a_ones_dec.split('').map(function(x){ return parseInt(x,\
    \ 10); });\n        var b_ones_dec = b_ones_dec.split('').map(function(x){ return\
    \ parseInt(x, 10); });\n        var a_ones_dec = a_ones_dec.map(function(x){ return\
    \ x * -1; });\n        var b_ones_dec = b_ones_dec.map(function(x){ return x *\
    \ -1; });\n        var a_ones_dec = a_ones_dec.map(function(x){ return x * -1;\
    \ });\n        var b_ones_dec = b_ones_dec.map(function(x){ return x * -1; });\n\
    \        var a_ones_dec = a_ones_dec.map(function(x){ return x * -1; });\n   \
    \     var b_ones_dec = b_ones_dec.map(function(x){ return x * -1; });\n      \
    \  var a_ones_dec = a_ones_dec.map(function(x){ return x * -1; });\n        var\
    \ b_ones_dec = b_ones_dec.map(function(x){ return x * -1; });\n        var a_ones_dec\
    \ = a_ones_dec.map(function(x){ return x * -1; });\n        var b_ones_dec = b_ones_dec.map(function(x){\
    \ return x * -1; });\n        var a_ones_dec = a_ones_dec.map(function(x){ return\
    \ x * -1; });\n        var b_ones_dec = b_ones_dec.map(function(x){ return x *\
    \ -1; });\n        var a_ones_dec = a_ones_dec.map(function(x){ return x * -1;\
    \ });\n        var b_ones_dec = b_ones_dec.map(function(x){ return x * -1; });\n\
    \        var a_ones_dec = a_ones_dec.map(function(x){ return x * -1; });\n   \
    \     var b_ones_dec = b_ones_dec.map(function(x){ return x * -1; });\n      \
    \  var a_ones_dec = a_ones_dec.map(function(x){ return x * -1; });\n        var\
    \ b_ones_dec = b_ones_dec.map(function(x){ return x * -1; });\n        var a_ones_dec\
    \ = a_ones_dec.map(function(", "    var len = arr.length;\n    var sorted = new\
    \ Array(len);\n    for(var i = 0; i < len; i++){\n        sorted[i] = i;\n   \
    \ }\n    for(var i = 0; i < len; i++){\n        for(var j = 0; j < len; j++){\n\
    \            if(arr[j] > arr[j+1]){\n                var temp = sorted[j];\n \
    \               sorted[j] = sorted[j+1];\n                sorted[j+1] = temp;\n\
    \            }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   j = i;\n        while(j > 0 && arr[j-1] > arr[j]){\n            k = j;\n \
    \           while(k >0 && arr[k-1] > arr[k]){\n                arr[k] = arr[k-1];\n\
    \                k--;\n            }\n            arr[k] = arr[j];\n         \
    \   j--;\n        }\n        arr[j] = arr[i];\n    }\n    return arr;\n}", " \
    \   arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var b_bin =\
    \ bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return x=='1';});\n\
    \        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n \
    \       var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_sum = a_ones.reduce(function(a, b){return a+b;});\n      \
    \  var b_ones_sum = b_ones.reduce(function(a, b){return a+b;});\n        var a_ones_avg\
    \ = a_ones_sum/a_ones_len;\n        var b_ones_avg = b_ones_sum/b_ones_len;\n\
    \        var a_ones_decimal = a_ones_sum/a_ones_len;\n        var b_ones_decimal\
    \ = b_ones_sum/b_ones_len;\n        if(a_ones_len == 0){\n            return 1;\n\
    \        }\n        if(b_ones_len == 0){\n            return -1;\n        }\n\
    \        if(a_ones_len < b_ones_len){\n            return -1;\n        }\n   \
    \     if(a_ones_len > b_ones_len){\n            return 1;\n        }\n       \
    \ if(a_ones_avg < b_ones_avg){\n            return -1;\n        }\n        if(a_ones_avg\
    \ > b_ones_avg){\n            return 1;\n        }\n        if(a_ones_decimal\
    \ < b_ones_decimal){\n            return -1;\n        }\n        if(a_ones_decimal\
    \ > b_ones_decimal){\n            return 1;\n        }\n        return 0;\n  \
    \  });\n    return arr;\n}\n", "    var len = arr.length;\n    var ret = new Array(len);\n\
    \    var i;\n    for(i = 0; i < len; i++){\n        var count = 0;\n        for(var\
    \ j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n                count++;\n\
    \            }\n        }\n        ret[i] = count;\n    }\n    ret.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return ret;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = parseInt(a.toString(2), 2);\n        var b_ones =\
    \ parseInt(b.toString(2), 2);\n        return a_ones - b_ones;\n    });\n    return\
    \ arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j,\
    \ k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j-1]\
    \ > arr[j]){\n            k = j;\n            while(k >= 0 && arr[k-1] > arr[k]){\n\
    \                arr[k] = arr[k-1];\n                k--;\n            }\n   \
    \         arr[k] = arr[j];\n            j--;\n        }\n        arr[j] = arr[i];\n\
    \    }\n    return arr;\n}\n", "    var len = arr.length;\n    var ret = new Array(len);\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        ret[i] = arr[i];\n \
    \   }\n    for(i = len - 1; i >= 0; i--){\n        j = i;\n        while(j > 0\
    \ && ret[j - 1] > ret[j]){\n            ret[j] = ret[j - 1];\n            j--;\n\
    \        }\n        ret[j] = i;\n    }\n    return ret;\n}\n", "    var len =\
    \ arr.length;\n    var ret = new Array(len);\n    var i;\n    for(i = 0; i < len;\
    \ i++){\n        var cur = arr[i];\n        var cnt = 0;\n        while(cur !==\
    \ 0){\n            if((cur & 1) === 1){\n                cnt++;\n            }\n\
    \            cur >>= 1;\n        }\n        ret[i] = cnt;\n    }\n    ret.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   for(j = i+1; j < len; j++){\n            k = j;\n            while(k > 0 &&\
    \ arr[k-1] > arr[k]){\n                arr[k] = arr[k-1];\n                k--;\n\
    \            }\n            arr[k] = arr[j];\n        }\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = new Array(len);\n    var i,\
    \ j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n \
    \   for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n       \
    \     if(arr[j] < arr[i]){\n                k = j;\n                while(arr[k\
    \ - 1] === arr[k]){\n                    k--;\n                }\n           \
    \     arr[k] = arr[k - 1];\n                arr[k - 1] = arr[i];\n           \
    \     arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i = 0;\
    \ i < len; i++){\n        ret.push(0);\n    }\n    for(i = 0; i < len; i++){\n\
    \        for(j = i; j < len; j++){\n            k = j;\n            while(k >=\
    \ 0 && arr[k] == 1){\n                ret[k--] = j;\n            }\n        }\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i; j < len; j++){\n   \
    \         k = j;\n            while(k >= 0 && arr[k] == 0){\n                ret[k--]\
    \ = j;\n            }\n        }\n    }\n    return ret;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = a.toString(2);\n        var b_bin = b.toString(2);\n\
    \        var a_ones = a_bin.split('1').length - 1;\n        var b_ones = b_bin.split('1').length\
    \ - 1;\n        if(a_ones > b_ones){\n            return 1;\n        }else if(a_ones\
    \ < b_ones){\n            return -1;\n        }else{\n            return 0;\n\
    \        }\n    });\n    return arr;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array([-1, -2,\
    \ -3, -4, -5, -6])`.\n<|/ c |>\n<| c |>\nYes, I forgot about negative numbers.\
    \ I updated my answer. Thanks.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>",
  "    arr.sort(function(a, b){\n        var aNum = parseInt(a, 10);\n        var\
    \ bNum = parseInt(b, 10);\n        if(aNum === 0){\n            return 1;\n  \
    \      }\n        if(bNum === 0){\n            return -1;\n        }\n       \
    \ if(aNum === bNum){\n            return 0;\n        }\n        if(aNum < bNum){\n\
    \            return -1;\n        }\n        if(aNum > bNum){\n            return\
    \ 1;\n        }\n    });\n    return arr;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x==='1';});\n        var b_ones\
    \ = b_bin.split('').filter(function(x){return x==='1';});\n        var a_ones_count\
    \ = a_ones.length;\n        var b_ones_count = b_ones.length;\n        var a_ones_sum\
    \ = 0;\n        var b_ones_sum = 0;\n        for(var i=0; i<a_ones_count; i++){\n\
    \            a_ones_sum += a_ones[i];\n        }\n        for(var i=0; i<b_ones_count;\
    \ i++){\n            b_ones_sum += b_ones[i];\n        }\n        var a_ones_average\
    \ = a_ones_sum/a_ones_count;\n        var b_ones_average = b_ones_sum/b_ones_count;\n\
    \        if(a_ones_count === 0){\n            return 1;\n        }\n        if(b_ones_count\
    \ === 0){\n            return -1;\n        }\n        if(a_ones_average > b_ones_average){\n\
    \            return 1;\n        }\n        if(a_ones_average < b_ones_average){\n\
    \            return -1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n", "    arr.sort(function(a, b){\n        var c = a.toString(2);\n        var\
    \ d = b.toString(2);\n        var e = 0;\n        var f = 1;\n        while(c[--d]\
    \ == '0') e++;\n        while(c[--d] == '1') f++;\n        return e - f;\n   \
    \ });\n    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n \
    \       return arr;\n    }\n    var ones = count_ones(arr);\n    var dec = Math.pow(10,\
    \ Math.ceil(Math.log(ones) / Math.LN10));\n    var arr2 = [];\n    var i = 0;\n\
    \    while(i < len){\n        arr2[i] = parseInt(arr[i], dec);\n        i++;\n\
    \    }\n    arr2.sort(function(a, b){\n        return a - b;\n    });\n    for(i\
    \ = 0; i < len; i++){\n        arr[i] = arr2[i];\n    }\n    return arr;\n}\n",
  "    arr.sort(function(a, b){\n        var a_ones = parseInt(a.toString(2), 2);\n\
    \        var b_ones = parseInt(b.toString(2), 2);\n        return a_ones - b_ones;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var ret = new\
    \ Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        ret[i]\
    \ = arr[i];\n    }\n    for(i = len - 1; i >= 0; i--){\n        j = i;\n     \
    \   while(j > 0 && ret[j - 1] > ret[j]){\n            ret[j] = ret[j - 1];\n \
    \           j--;\n        }\n        ret[j] = i;\n    }\n    return ret;\n}\n",
  "    arr.sort(function(a, b){\n        return a > b ? 1 : a < b ? -1 : 0;\n    });\n\
    \    return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp === 0){\n\
    \            return b_ones_comp;\n        }\n        if(b_ones_comp === 0){\n\
    \            return a_ones_comp;\n        }\n        return a_ones_comp * b_ones_comp;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = count_ones(arr);\n    var max_ones\
    \ = ones[0];\n    var max_num = max_ones;\n    var min_num = max_ones;\n    for(var\
    \ i = 1; i < len; i++){\n        var num = count_ones(arr[i]);\n        if(num[0]\
    \ > max_num){\n            max_num = num[0];\n        }\n        if(num[0] < min_num){\n\
    \            min_num = num[0];\n        }\n    }\n    var result = [];\n    for(var\
    \ i = min_num; i <= max_num; i++){\n        result.push(arr[i]);\n    }\n    result.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_num = a_ones[0];\n        var b_num = b_ones[0];\n        if(a_num\
    \ === b_num){\n            return sort_number(a) - sort_number(b);\n        }\n\
    \        return a_num - b_num;\n    });\n    return result;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var aNum = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n\
    \        if(aNum === 0 && bNum !== 0) return 1;\n        if(aNum !== 0 && bNum\
    \ === 0) return -1;\n        if(aNum !== 0 && bNum !== 0) return aNum - bNum;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = count_ones(arr);\n    var len = ones.length;\n\
    \    if(len === 0){\n        return arr;\n    }\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n\
    \    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n      \
    \      if(ones[i] > ones[j]){\n                var temp = sorted[i];\n       \
    \         sorted[i] = sorted[j];\n                sorted[j] = temp;\n        \
    \    }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        ret[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            k = j;\n            while(k >= 0 && ret[k\
    \ - 1] > ret[k]){\n                ret[k] = ret[k - 1];\n                k--;\n\
    \            }\n            ret[k] = arr[j];\n        }\n    }\n    return ret;\n\
    }\n", "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var\
    \ mid = 0;\n    var temp = 0;\n    var swap = 0;\n    var count = 0;\n    for(var\
    \ i = 0; i < len; i++){\n        temp = arr[i];\n        while(temp > 0){\n  \
    \          temp = temp / 2;\n            count++;\n        }\n        if(count\
    \ > max){\n            max = count;\n            mid = i;\n        }\n       \
    \ else if(count < min){\n            min = count;\n            mid = i;\n    \
    \    }\n    }\n    swap = arr[mid];\n    arr[mid] = arr[len - 1];\n    arr[len\
    \ - 1] = swap;\n    for(var i = 0; i < len; i++){\n        temp = arr[i];\n  \
    \      while(temp > 0){\n            temp = temp / 2;\n            count++;\n\
    \        }\n        if(count > max){\n            max = count;\n            mid\
    \ = i;\n        }\n        else if(count < min){\n            min = count;\n \
    \           mid = i;\n        }\n    }\n    swap = arr[mid];\n    arr[mid] = arr[len\
    \ - 1];\n    arr[len - 1] = swap;\n    return arr;\n}", "    var len = arr.length;\n\
    \    var sorted_arr = [];\n    var counter = 0;\n    for(var i=0; i<len; i++){\n\
    \        counter = 0;\n        for(var j=0; j<len; j++){\n            if(arr[j]\
    \ == 1){\n                counter++;\n            }\n        }\n        sorted_arr[counter]\
    \ = arr[i];\n    }\n    return sorted_arr;\n}\n", "    var len = arr.length;\n\
    \    if(len < 2){\n        return arr;\n    }\n    var ones = count_ones(arr);\n\
    \    var sorted_arr = new Array(len);\n    for(var i = 0; i < len; i++){\n   \
    \     sorted_arr[i] = arr[i];\n    }\n    sorted_arr.sort(function(x, y){\n  \
    \      var cmp = 0;\n        if(x > y){\n            cmp = 1;\n        }else if(x\
    \ < y){\n            cmp = -1;\n        }\n        if(cmp === 0){\n          \
    \  var diff = x - y;\n            if(diff > 0){\n                cmp = 1;\n  \
    \          }else if(diff < 0){\n                cmp = -1;\n            }\n   \
    \     }\n        return cmp;\n    });\n    for(var i = 0; i < len; i++){\n   \
    \     sorted_arr[i] = arr[i];\n    }\n    return sorted_arr;\n}\n", "    var len\
    \ = arr.length;\n    if(len === 0) return arr;\n    if(len === 1) return arr[0];\n\
    \    \n    var ones = count_ones(arr);\n    var len = ones.length;\n    if(len\
    \ === 0) return arr;\n    if(len === 1) return arr[0];\n    \n    var sorted =\
    \ [];\n    for(var i = 0; i < len; i++){\n        var index = ones[i];\n     \
    \   sorted.push(arr[index]);\n    }\n    \n    sorted.sort(function(a, b){\n \
    \       return a - b;\n    });\n    \n    return sorted;\n}\n", "    var len =\
    \ arr.length;\n    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n\
    \            if(arr[j] == arr[i]){\n                arr.splice(j,1);\n       \
    \         len--;\n            }\n        }\n    }\n    arr.sort(function(a,b){\n\
    \        return a-b;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var cnt = 0;\n    for(var i = 0; i < len;\
    \ i++){\n        var cur = arr[i];\n        var next = 0;\n        while(cur !==\
    \ 0){\n            next = cur & 1;\n            cur = cur >> 1;\n            if(cnt\
    \ === next){\n                ret[cnt++] = cur;\n            }\n        }\n  \
    \  }\n    ret.sort(function(a, b){\n        return a - b;\n    });\n    return\
    \ ret;\n}\n", "    var len = arr.length;\n    var sorted = new Array(len);\n \
    \   var i, j, tmp;\n    for(i = 0; i < len; i++){\n        tmp = arr[i];\n   \
    \     for(j = 0; j < len; j++){\n            if(tmp === arr[j]){\n           \
    \     sorted.splice(j, 0, tmp);\n                break;\n            }\n     \
    \   }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var max\
    \ = 0;\n    var min = 0;\n    var curr = 1;\n    var tmp = 0;\n    var i = 0;\n\
    \    var j = 0;\n    for(i = 0; i < len; i++){\n        tmp = arr[i];\n      \
    \  while(curr < len){\n            curr++;\n            if(tmp == 0){\n      \
    \          arr[i] = arr[curr];\n                arr[curr] = 0;\n             \
    \   curr = 1;\n            }else{\n                if(tmp < arr[curr]){\n    \
    \                arr[curr] = tmp;\n                }\n            }\n        }\n\
    \        while(curr > 0){\n            curr--;\n            if(tmp == 0){\n  \
    \              arr[i] = arr[curr];\n                arr[curr] = 0;\n         \
    \       curr = 1;\n            }else{\n                if(tmp > arr[curr]){\n\
    \                    arr[curr] = tmp;\n                }\n            }\n    \
    \    }\n    }\n    for(i = 0; i < len; i++){\n        while(arr[i] > 0){\n   \
    \         arr[i]--;\n        }\n        while(arr[i] < 0){\n            arr[i]++;\n\
    \        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted.push(arr[i]);\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            if(arr[j] < arr[i]){\n                k = j;\n                while(arr[k]\
    \ == arr[j]){\n                    k++;\n                }\n                arr[k]\
    \ = arr[i];\n                arr[i] = k;\n            }\n        }\n    }\n  \
    \  return sorted;\n}\n", "    var len = arr.length;\n    var sorted = [];\n  \
    \  var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j\
    \ > 0 && arr[j - 1] > arr[j]){\n            k = j;\n            while(k >= 0 &&\
    \ arr[k - 1] > arr[k]){\n                arr[k] = arr[k - 1];\n              \
    \  k--;\n            }\n            arr[k] = arr[j];\n            j--;\n     \
    \   }\n        arr[j] = arr[i];\n    }\n    return arr;\n}\n", "    var len =\
    \ arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[j] < arr[i]){\n\
    \                k = j;\n                while(arr[k] == arr[i]){\n          \
    \          k++;\n                }\n                arr[k] = arr[i];\n       \
    \         arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    var sorted_arr = [];\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j]\
    \ == 0){\n                for(k = j; k < len; k++){\n                    if(arr[k]\
    \ == 0){\n                        break;\n                    }\n            \
    \        else{\n                        arr[k] = arr[k - 1];\n               \
    \     }\n                }\n                for(k = j; k < len; k++){\n      \
    \              arr[k] = 0;\n                }\n                break;\n      \
    \      }\n            else{\n                if(arr[j] > arr[j + 1]){\n      \
    \              for(k = j; k < len; k++){\n                        arr[k] = arr[k\
    \ - 1];\n                    }\n                    for(k = j; k < len; k++){\n\
    \                        arr[k] = arr[k + 1];\n                    }\n       \
    \             break;\n                }\n                else{\n             \
    \       for(k = j; k < len; k++){\n                        arr[k] = arr[k + 1];\n\
    \                    }\n                    for(k = j; k < len; k++){\n      \
    \                  arr[k] = arr[k - 1];\n                    }\n             \
    \       break;\n                }\n            }\n        }\n    }\n    return\
    \ sorted_arr;\n}\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n\
    \        var b_bin = bin(b);\n        var a_len = a_bin.length;\n        var b_len\
    \ = b_bin.length;\n        var a_ones = a_bin.substr(a_len-1, 1);\n        var\
    \ b_ones = b_bin.substr(b_len-1, 1);\n        var a_ones_num = parseInt(a_ones);\n\
    \        var b_ones_num = parseInt(b_ones);\n        if(a_ones_num < b_ones_num){\n\
    \            return -1;\n        }else if(a_ones_num > b_ones_num){\n        \
    \    return 1;\n        }else{\n            return 0;\n        }\n    });\n  \
    \  return arr;\n}", "    var len = arr.length;\n    var maxOnes = 0;\n    var\
    \ minOnes = Number.MAX_VALUE;\n    var maxDiff = Number.MAX_VALUE;\n    var minDiff\
    \ = Number.MAX_VALUE;\n    var maxDiffIndex = -1;\n    var minDiffIndex = -1;\n\
    \    var maxDiffItem = -1;\n    var minDiffItem = -1;\n    for(var i=0; i<len;\
    \ i++){\n        var item = arr[i];\n        var diff = item - 1;\n        if(diff\
    \ > maxDiff){\n            maxDiff = diff;\n            maxDiffIndex = i;\n  \
    \      }\n        if(diff < minDiff){\n            minDiff = diff;\n         \
    \   minDiffIndex = i;\n        }\n        if(item > maxOnes){\n            maxOnes\
    \ = item;\n            maxDiffItem = item;\n            maxDiffIndex = i;\n  \
    \      }\n        if(item < minOnes){\n            minOnes = item;\n         \
    \   minDiffItem = item;\n            minDiffIndex = i;\n        }\n    }\n   \
    \ if(maxOnes < minOnes){\n        arr.splice(maxDiffIndex, 0, arr.splice(minDiffIndex,\
    \ 1)[0]);\n    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return arr;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", " \
    \   arr.sort(function(a, b){\n        var aNum = parseInt(a, 10);\n        var\
    \ bNum = parseInt(b, 10);\n        if(aNum === bNum){\n            return 0;\n\
    \        }\n        if(aNum < bNum){\n            return -1;\n        }\n    \
    \    return 1;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n \
    \   var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n      \
    \  for(j = i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n           \
    \ if(k <= 0){\n                k = k + arr[j];\n                arr[j] = -arr[j];\n\
    \                arr[i] = -arr[i];\n            }\n            if(k >= 0){\n \
    \               sorted.push(arr[i]);\n                sorted.push(arr[j]);\n \
    \               arr[i] = k;\n                arr[j] = -arr[j];\n            }\n\
    \        }\n    }\n    return sorted;\n}\n", "    arr.sort(function(a, b){\n \
    \       var aNum = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n   \
    \     if(aNum === bNum){\n            return aNum - bNum;\n        }\n       \
    \ return aNum > bNum ? 1 : -1;\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a),\n            b_bin = bin(b);\n        if(a_bin.length\
    \ < b_bin.length){\n            return -1;\n        }\n        if(a_bin.length\
    \ > b_bin.length){\n            return 1;\n        }\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x === '1';}),\n            b_ones = b_bin.split('').filter(function(x){return\
    \ x === '1';});\n        if(a_ones.length < b_ones.length){\n            return\
    \ -1;\n        }\n        if(a_ones.length > b_ones.length){\n            return\
    \ 1;\n        }\n        return a_ones.length - b_ones.length;\n    });\n    return\
    \ arr;\n}\n</code>\n<|/ a tags=javascript,sorting |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. `sort_array([-2, -3, -4, -5, -6])` returns `[-6, -5, -4,\
    \ -3, -2]`\n<|/ c |>\n<| c |>\nYes, I noticed that too. Thanks for pointing that\
    \ out. I fixed the code accordingly.\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ negative numbers. `sort_array([-2, -3, -4, -5, -6])` returns `[-6, -5, -4, -3,\
    \ -2]`\n<|/ c |>\n<| c |>\nIt works for negative numbers. `sort_array([-2, -3,\
    \ -4, -5, -6])` returns `[-6, -5, -4, -3, -2]`\n<|/ c |>\n<| c |>\nIt works for\
    \ negative numbers. `sort_array([-2, -3, -4, -5, -6])` returns `[-6, -5, -4, -3,\
    \ -2]`\n<|/ c |>\n<| a tags=javascript,sorting |>\n<code>", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, tmp;\n    for(i = 0; i < len; i++){\n   \
    \     tmp = arr[i];\n        for(j = i - 1; j >= 0; j--){\n            if(tmp\
    \ & 1){\n                tmp = arr[j];\n                arr[j] = arr[i];\n   \
    \             arr[i] = tmp;\n                break;\n            }\n        }\n\
    \        sorted.push(tmp);\n    }\n    return sorted;\n}\n", "\tlet result = [];\n\
    \tfor(let i = 0; i < arr.length; i++){\n\t\tlet count = 0;\n\t\tfor(let j = 0;\
    \ j < arr.length; j++){\n\t\t\tif(arr[j] == arr[i]){\n\t\t\t\tcount++;\n\t\t\t\
    }\n\t\t}\n\t\tif(count == 1){\n\t\t\tresult.push(arr[i]);\n\t\t}\n\t\telse if(count\
    \ > 1){\n\t\t\tresult.push(arr[i] + count);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "    var len = arr.length;\n    var temp = 0;\n    var i = 0;\n    while(i < len){\n\
    \        while(arr[i] === 0){\n            i++;\n        }\n        temp = arr[i];\n\
    \        arr[i] = arr[len - 1];\n        arr[len - 1] = temp;\n        len--;\n\
    \    }\n    return arr;\n}\n", "  var len = arr.length;\n  if(len < 2){\n    return\
    \ arr;\n  }\n  var ones = count_ones(arr);\n  var dec = Math.pow(10, Math.ceil(Math.log(ones)\
    \ / Math.LN10));\n  var arr = arr.map(function(x){\n    return Math.round(x *\
    \ dec) / dec;\n  });\n  arr.sort(function(a, b){\n    return a - b;\n  });\n \
    \ return arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = 0;\n    }\n   \
    \ for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n            k\
    \ = j;\n            while(k >= 0 && arr[k] <= arr[j]){\n                sorted[i]\
    \ += 1;\n                k--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = 0; j < len; j++){\n            k = j;\n    \
    \        while(k >= 0 && arr[k] >= arr[j]){\n                sorted[i] += -1;\n\
    \                k--;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        for(j = i+1; j < len; j++){\n            k = arr[i]*arr[j];\n\
    \            if(k > 0){\n                sorted.push(arr[i]);\n              \
    \  sorted.push(arr[j]);\n                sorted.push(k);\n            }\n    \
    \    }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n       \
    \ sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j = i\
    \ + 1; j < len; j++){\n            if(sorted[j] < sorted[i]){\n              \
    \  k = j;\n                while(sorted[k - 1] > sorted[k]){\n               \
    \     sorted[k] = sorted[k - 1];\n                    k--;\n                }\n\
    \                sorted[k] = sorted[i];\n                sorted[i] = k;\n    \
    \        }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    for(var i=0; i<len; i++){\n        sorted[i]\
    \ = i;\n    }\n    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n\
    \            if(arr[j] == arr[i]){\n                sorted[i] = j;\n         \
    \       break;\n            }\n        }\n    }\n    return sorted;\n}\n", " \
    \   arr.sort(function(a, b){\n        var a_ones = count_ones(a),\n          \
    \  b_ones = count_ones(b),\n            a_ones_comp = a_ones - b_ones,\n     \
    \       b_ones_comp = b_ones - a_ones,\n            a_comp = count_ones(a) - count_ones(b),\n\
    \            b_comp = count_ones(b) - count_ones(a),\n            a_comp_dec =\
    \ a_comp / b_comp,\n            b_comp_dec = b_comp / a_comp,\n            a_comp_dec_comp\
    \ = a_comp_dec / b_comp_dec,\n            b_comp_dec_comp = b_comp_dec / a_comp_dec,\n\
    \            a_comp_dec_comp_dec = a_comp_dec_comp / b_comp_dec_comp,\n      \
    \      b_comp_dec_comp_dec = b_comp_dec_comp / a_comp_dec_comp;\n        if(a_ones_comp\
    \ === b_ones_comp){\n            return a_comp_dec_comp_dec;\n        }\n    \
    \    else{\n            return a_comp_dec_comp_dec > b_comp_dec_comp_dec ? 1 :\
    \ -1;\n        }\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = i +\
    \ 1; j < len; j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n\
    \                sorted[j]--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            k = sorted[j]\
    \ - sorted[i];\n            if(k > 0){\n                arr[i] = arr[j];\n   \
    \             sorted[i] = sorted[j];\n                sorted[j] = k;\n       \
    \     }\n        }\n    }\n    return arr;\n}\n", "\tlet len = arr.length;\n\t\
    let sortedArr = new Array(len);\n\tfor(let i = 0; i < len; i++){\n\t\tlet count\
    \ = 0;\n\t\tfor(let j = 0; j < len; j++){\n\t\t\tif(arr[j] == 1){\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t\tsortedArr[i] = count;\n\t}\n\tfor(let i = 0; i < len; i++){\n\
    \t\tfor(let j = 0; j < len; j++){\n\t\t\tif(sortedArr[j] > sortedArr[i]){\n\t\t\
    \t\tlet temp = sortedArr[i];\n\t\t\t\tsortedArr[i] = sortedArr[j];\n\t\t\t\tsortedArr[j]\
    \ = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn sortedArr;\n}\n", "\tlet len = arr.length;\n\
    \tlet swapped;\n\tfor(let i = 0; i < len; i++){\n\t\tswapped = false;\n\t\tfor(let\
    \ j = 0; j < len; j++){\n\t\t\tif(arr[j] > arr[j + 1]){\n\t\t\t\tlet temp = arr[j];\n\
    \t\t\t\tarr[j] = arr[j + 1];\n\t\t\t\tarr[j + 1] = temp;\n\t\t\t\tswapped = true;\n\
    \t\t\t}\n\t\t}\n\t\tif(!swapped){\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn arr;\n}\n",
  "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n        var\
    \ b_ones = count_ones(b);\n        if(a_ones === b_ones){\n            return\
    \ sort_number(a);\n        }\n        return a_ones - b_ones;\n    });\n    return\
    \ arr;\n}\n", "    return arr.sort((a,b)=>{\n        const ones = a.toString(2).split('').reduce((a,b)=>a+b,0)\n\
    \        const zeros = b.toString(2).split('').reduce((a,b)=>a+b,0)\n        return\
    \ ones - zeros\n    })\n}\n", "  var len = arr.length;\n  if(len < 1) return arr;\n\
    \  var ones = count_ones(arr);\n  var sorted = new Array(len);\n  for(var i=0;\
    \ i<len; i++){\n    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a, b){\n\
    \    var aVal = count_ones(a);\n    var bVal = count_ones(b);\n    if(aVal ==\
    \ bVal){\n      return sort_number(a);\n    }\n    return aVal - bVal;\n  });\n\
    \  for(var i=0; i<len; i++){\n    sorted[i] = sorted[i].toString();\n  }\n  return\
    \ sorted;\n}\n", "    arr.sort(function(a, b){\n        var c = a.toString(2);\n\
    \        var d = b.toString(2);\n        var e = (d.length - c.length);\n    \
    \    if(e > 0){\n            d = d.substr(0, e);\n        }\n        if(e < 0){\n\
    \            c = c.substr(-e);\n        }\n        return c + d;\n    });\n  \
    \  return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = parseInt(a.toString(2),\
    \ 2);\n        var b_ones = parseInt(b.toString(2), 2);\n        return a_ones\
    \ - b_ones;\n    });\n    return arr;\n}\n", "\tlet len = arr.length;\n\tlet sorted\
    \ = [];\n\tlet ones = 0;\n\tlet decimal = 0;\n\tfor(let i = 0; i < len; i++){\n\
    \t\tones += arr[i] & 1;\n\t\tdecimal += arr[i] >> 1;\n\t}\n\tfor(let i = 0; i\
    \ < len; i++){\n\t\tlet num = arr[i];\n\t\tlet pos = ones - num;\n\t\tlet neg\
    \ = decimal - num;\n\t\tif(pos > neg){\n\t\t\tsorted.push(num);\n\t\t\tones--;\n\
    \t\t\tdecimal--;\n\t\t}else if(pos < neg){\n\t\t\tsorted.push(num);\n\t\t\tdecimal--;\n\
    \t\t}else{\n\t\t\tsorted.push(num);\n\t\t\tones++;\n\t\t}\n\t}\n\treturn sorted;\n\
    }\n", "    var len = arr.length;\n    var maxOnes = 0;\n    var maxDec = -1;\n\
    \    var minDec = 1;\n    var minOnes = -1;\n    var i;\n    for(i = 0; i < len;\
    \ i++){\n        var ones = arr[i];\n        var dec = ones - minOnes;\n     \
    \   if(dec > maxDec){\n            maxDec = dec;\n        }\n        if(dec <\
    \ minDec){\n            minDec = dec;\n        }\n        if(ones > maxOnes){\n\
    \            maxOnes = ones;\n        }\n        if(ones < minOnes){\n       \
    \     minOnes = ones;\n        }\n    }\n    for(i = 0; i < len; i++){\n     \
    \   arr[i] = minOnes + (arr[i] - minDec);\n    }\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var i;\n    for(i = 0; i < len; i++){\n  \
    \      var count = 0;\n        for(var j = 0; j < len; j++){\n            if(arr[j]\
    \ == i){\n                count++;\n                break;\n            }\n  \
    \      }\n        ret[i] = count;\n    }\n    ret.sort(function(a, b){\n     \
    \   return a - b;\n    });\n    return ret;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x=='1';});\n        var b_ones =\
    \ b_bin.split('').filter(function(x){return x=='1';});\n        var a_ones_count\
    \ = a_ones.length;\n        var b_ones_count = b_ones.length;\n        var a_ones_sum\
    \ = a_ones.reduce(function(a, b){return a+b;});\n        var b_ones_sum = b_ones.reduce(function(a,\
    \ b){return a+b;});\n        var a_ones_sum_decimal = a_ones_sum/Math.pow(2, a_ones_count);\n\
    \        var b_ones_sum_decimal = b_ones_sum/Math.pow(2, b_ones_count);\n    \
    \    var a_ones_sum_decimal_str = a_ones_sum_decimal.toFixed(2);\n        var\
    \ b_ones_sum_decimal_str = b_ones_sum_decimal.toFixed(2);\n        var a_ones_sum_decimal_str_lower\
    \ = a_ones_sum_decimal_str.toLowerCase();\n        var b_ones_sum_decimal_str_lower\
    \ = b_ones_sum_decimal_str.toLowerCase();\n        if(a_ones_count > b_ones_count){\n\
    \            return a_ones_sum_decimal_str_lower-b_ones_sum_decimal_str_lower;\n\
    \        }\n        else{\n            return b_ones_sum_decimal_str_lower-a_ones_sum_decimal_str_lower;\n\
    \        }\n    });\n    return arr;\n}\n", "    arr.sort(function(a, b){\n  \
    \      var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones =\
    \ a_bin.split('1').length - 1;\n        var b_ones = b_bin.split('1').length -\
    \ 1;\n        if(a_ones < b_ones){\n            return -1;\n        }\n      \
    \  if(a_ones > b_ones){\n            return 1;\n        }\n        return 0;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted =\
    \ [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = [];\n\
    \        for(j = 0; j < len; j++){\n            sorted[i][j] = 0;\n        }\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n   \
    \         if(arr[j] == 1){\n                sorted[i][j] = 1;\n              \
    \  for(k = j + 1; k < len; k++){\n                    if(arr[k] == 1){\n     \
    \                   sorted[i][j] += 1;\n                        break;\n     \
    \               }\n                }\n            }\n        }\n    }\n    for(i\
    \ = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n            if(sorted[i][j]\
    \ == 0){\n                sorted[i][j] = arr[sorted[i][j]];\n            }\n \
    \       }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k !==\
    \ 0){\n                ret.push(k);\n            }\n        }\n    }\n    ret.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var temp = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr\
    \ = [];\n    while(i < len){\n        while(j < len){\n            if(arr[j] ==\
    \ 1){\n                temp++;\n                j++;\n            }\n        \
    \    else{\n                break;\n            }\n        }\n        while(k\
    \ <= j){\n            tempArr.push(arr[k]);\n            k++;\n        }\n   \
    \     while(j < len){\n            if(arr[j] == 0){\n                j++;\n  \
    \          }\n            else{\n                break;\n            }\n     \
    \   }\n        while(k <= j){\n            arr[k] = tempArr[k];\n            k++;\n\
    \        }\n    }\n    return arr;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,sorting,javascript\
    \ |>\n<code>", "    var len = arr.length;\n    for(var i=0;i<len;i++){\n     \
    \   for(var j=i+1;j<len;j++){\n            if(arr[i]>arr[j]){\n              \
    \  var temp = arr[i];\n                arr[i] = arr[j];\n                arr[j]\
    \ = temp;\n            }\n        }\n    }\n    return arr;\n}\n", "    var len\
    \ = arr.length;\n    for(var i=0; i<len; i++){\n        var num = arr[i];\n  \
    \      var bin = num.toString(2);\n        for(var j=0; j<bin.length; j++){\n\
    \            if(bin[j] == '1'){\n                arr.splice(i,1);\n          \
    \      arr.splice(i-1,0,num);\n                break;\n            }\n       \
    \ }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted\
    \ = new Array(len);\n    for(var i = 0; i < len; i++){\n        var num = arr[i];\n\
    \        for(var j = 0; j < len; j++){\n            if(num === arr[j]){\n    \
    \            num++;\n                break;\n            }\n        }\n      \
    \  sorted[i] = num;\n    }\n    for(var i = 0; i < len; i++){\n        for(var\
    \ j = 0; j < len; j++){\n            if(sorted[i] === sorted[j]){\n          \
    \      sorted[i]++;\n                break;\n            }\n        }\n    }\n\
    \    return sorted;\n}\n", "    return arr.sort(function(a, b){\n        var a_ones\
    \ = count_ones(a);\n        var b_ones = count_ones(b);\n        if(a_ones < b_ones){\n\
    \            return -1;\n        }\n        if(a_ones > b_ones){\n           \
    \ return 1;\n        }\n        return a - b;\n    });\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   j = i;\n        while(j > 0 && arr[j-1] > arr[j]){\n            k = j;\n \
    \           while(k >0 && arr[k-1] > arr[k]){\n                arr[k] = arr[k-1];\n\
    \                k--;\n            }\n            arr[k] = arr[j-1];\n       \
    \     j--;\n        }\n        arr[j] = arr[i];\n    }\n    return arr;\n}\n",
  "    var len = arr.length;\n    var temp = [];\n    var i;\n    for(i = 0; i < len;\
    \ i++){\n        temp.push(arr[i]);\n    }\n    for(i = 0; i < len; i++){\n  \
    \      for(j = i + 1; j < len; j++){\n            if(arr[j] < arr[i]){\n     \
    \           var temp = arr[i];\n                arr[i] = arr[j];\n           \
    \     arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n}\n",
  "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n        var\
    \ b_ones = count_ones(b);\n        if(a_ones < b_ones){\n            return -1;\n\
    \        }\n        if(a_ones > b_ones){\n            return 1;\n        }\n \
    \       return 0;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var maxOnes = 0;\n    var maxDec = 0;\n    var minOnes = Number.MAX_VALUE;\n\
    \    var minDec = Number.MAX_VALUE;\n    for(var i=0; i<len; i++){\n        var\
    \ ones = arr[i].toString(2);\n        var dec = arr[i].toString(10);\n       \
    \ var onesLen = ones.length;\n        var decLen = dec.length;\n        if(onesLen\
    \ > maxOnes){\n            maxOnes = onesLen;\n        }\n        if(decLen >\
    \ maxDec){\n            maxDec = decLen;\n        }\n        if(onesLen < minOnes){\n\
    \            minOnes = onesLen;\n        }\n        if(decLen < minDec){\n   \
    \         minDec = decLen;\n        }\n    }\n    arr.sort(function(a, b){\n \
    \       var aOnes = a.toString(2);\n        var aDec = a.toString(10);\n     \
    \   var bOnes = b.toString(2);\n        var bDec = b.toString(10);\n        var\
    \ aOnesLen = aOnes.length;\n        var aDecLen = aDec.length;\n        var bOnesLen\
    \ = bOnes.length;\n        var bDecLen = bDec.length;\n        if(aOnesLen > bOnesLen){\n\
    \            return 1;\n        }else if(aOnesLen < bOnesLen){\n            return\
    \ -1;\n        }else if(aDecLen > bDecLen){\n            return 1;\n        }else\
    \ if(aDecLen < bDecLen){\n            return -1;\n        }else{\n           \
    \ var aOnesSum = 0;\n            var aDecSum = 0;\n            for(var i=0; i<aOnesLen;\
    \ i++){\n                aOnesSum += parseInt(aOnes.charAt(i));\n            }\n\
    \            for(var i=0; i<aDecLen; i++){\n                aDecSum += parseInt(aDec.charAt(i));\n\
    \            }\n            var bOnesSum = 0;\n            var bDecSum = 0;\n\
    \            for(var i=0; i<bOnesLen; i++){\n                bOnesSum += parseInt(bOnes.charAt(i));\n\
    \            }\n            for(var i=0; i<bDecLen; i++){\n                bDecSum\
    \ += parseInt(bDec.charAt(i));\n            }\n            if(aOnesSum > bOnesSum){\n\
    \                return 1;\n            }else if(aOnesSum < bOnesSum){\n     \
    \           return -1;\n            }else if(aDecSum > bDecSum){\n           \
    \     return 1;\n            }else if(aDecSum < bDecSum){\n                return\
    \ -1;\n            }else{\n                return 0;\n            }\n        }\n\
    \    });\n    for(var i=0; i<len; i++){\n        arr[i] = parseInt(arr[i].toString(2));\n\
    \    }\n    return arr;", "    var len = arr.length;\n    var temp = 0;\n    var\
    \ i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr = [];\n    for(i = 0;\
    \ i < len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] ==\
    \ arr[i]){\n                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n      \
    \      if(arr[j] == arr[i]){\n                temp++;\n            }\n       \
    \ }\n        tempArr.push(temp);\n        temp = 0;\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j] == arr[i]){\n\
    \                temp++;\n            }\n        }\n        tempArr.push(temp);\n\
    \        temp = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j\
    \ < len; j++){\n            if(arr[j] == arr[i]){\n                temp++;\n \
    \           }\n        }\n        tempArr.push(temp);\n        temp = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){", "    var\
    \ len = arr.length;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n  \
    \  var tmp;\n    var tmp2;\n    var tmp3;\n    var tmp4;\n    var tmp5;\n    var\
    \ tmp6;\n    var tmp7;\n    var tmp8;\n    var tmp9;\n    var tmp10;\n    var\
    \ tmp11;\n    var tmp12;\n    var tmp13;\n    var tmp14;\n    var tmp15;\n   \
    \ var tmp16;\n    var tmp17;\n    var tmp18;\n    var tmp19;\n    var tmp20;\n\
    \    var tmp21;\n    var tmp22;\n    var tmp23;\n    var tmp24;\n    var tmp25;\n\
    \    var tmp26;\n    var tmp27;\n    var tmp28;\n    var tmp29;\n    var tmp30;\n\
    \    var tmp31;\n    var tmp32;\n    var tmp33;\n    var tmp34;\n    var tmp35;\n\
    \    var tmp36;\n    var tmp37;\n    var tmp38;\n    var tmp39;\n    var tmp40;\n\
    \    var tmp41;\n    var tmp42;\n    var tmp43;\n    var tmp44;\n    var tmp45;\n\
    \    var tmp46;\n    var tmp47;\n    var tmp48;\n    var tmp49;\n    var tmp50;\n\
    \    var tmp51;\n    var tmp52;\n    var tmp53;\n    var tmp54;\n    var tmp55;\n\
    \    var tmp56;\n    var tmp57;\n    var tmp58;\n    var tmp59;\n    var tmp60;\n\
    \    var tmp61;\n    var tmp62;\n    var tmp63;\n    var tmp64;\n    var tmp65;\n\
    \    var tmp66;\n    var tmp67;\n    var tmp68;\n    var tmp69;\n    var tmp70;\n\
    \    var tmp71;\n    var tmp72;\n    var tmp73;\n    var tmp74;\n    var tmp75;\n\
    \    var tmp76;\n    var tmp77;\n    var tmp78;\n    var tmp79;\n    var tmp80;\n\
    \    var tmp81;\n    var tmp82;\n    var tmp83;\n    var tmp84;\n    var tmp85;\n\
    \    var tmp86;\n    var tmp87;\n    var tmp88;\n    var tmp89;\n    var tmp90;\n\
    \    var tmp91;\n    var tmp92;\n    var tmp93;\n    var tmp94;\n    var tmp95;\n\
    \    var tmp96;\n    var tmp97;\n    var tmp98;\n    var tmp99;\n    var tmp100;\n\
    \    var tmp101;\n    var tmp102;\n    var tmp103;\n    var ", "    arr.sort(function(a,\
    \ b){\n        var a_bin = a.toString(2);\n        var b_bin = b.toString(2);\n\
    \        var a_ones = a_bin.split('').filter(function(x){return x=='1';});\n \
    \       var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n  \
    \      var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_count = a_ones_len + a_ones_len - b_ones_len;\n        var\
    \ b_ones_count = b_ones_len + b_ones_len - a_ones_len;\n        if(a_ones_count\
    \ > b_ones_count){\n            return -1;\n        }\n        if(a_ones_count\
    \ < b_ones_count){\n            return 1;\n        }\n        return 0;\n    });\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    var result = [];\n   \
    \ var flag = [];\n    for(var i = 0; i < len; i++){\n        flag[i] = 0;\n  \
    \  }\n    for(var i = 0; i < len; i++){\n        if(flag[arr[i]] === 0){\n   \
    \         flag[arr[i]] = 1;\n            result.push(arr[i]);\n        }\n   \
    \ }\n    result.sort(function(a, b){\n        return a - b;\n    });\n    return\
    \ result;\n}\n", "    arr.sort(function(a, b){\n        var c = (a-b);\n     \
    \   if(c === 0){\n            return 0;\n        }\n        else if(c > 0){\n\
    \            return 1;\n        }\n        else{\n            return -1;\n   \
    \     }\n    });\n    return arr;\n}\n", "  var len = arr.length;\n  if(len <\
    \ 2){\n    return arr;\n  }\n  \n  var ones = count_ones(arr);\n  var sorted_arr\
    \ = [];\n  \n  for(var i=0; i<len; i++){\n    var num = arr[i];\n    var index\
    \ = ones - num;\n    sorted_arr.push(num);\n    sorted_arr.push(index);\n  }\n\
    \  \n  sorted_arr.sort(function(a, b){\n    return a - b;\n  });\n  \n  return\
    \ sorted_arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0\
    \ && arr[j - 1] > arr[j]){\n            k = j;\n            while(k >= 0 && arr[k\
    \ - 1] > arr[k]){\n                arr[k] = arr[k - 1];\n                k--;\n\
    \            }\n            arr[k] = arr[j];\n            j--;\n        }\n  \
    \      arr[j] = arr[i];\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    if(len < 2){\n        return arr;\n    }\n    var ones = count_ones(arr);\n\
    \    var len = ones.length;\n    var max = 0;\n    for(var i=0; i<len; i++){\n\
    \        if(ones[i] > max){\n            max = ones[i];\n        }\n    }\n  \
    \  var result = [];\n    for(var i=0; i<len; i++){\n        result.push(arr[i]);\n\
    \    }\n    for(var i=0; i<len; i++){\n        var index = arr.indexOf(arr[i]);\n\
    \        var val = arr[i];\n        var pos = 0;\n        while(index > -1){\n\
    \            arr[index] = val;\n            index = arr.indexOf(val, pos);\n \
    \           pos++;\n        }\n        arr[pos] = val;\n    }\n    for(var i=0;\
    \ i<len; i++){\n        arr[i] = arr[i]/max;\n    }\n    return arr;\n}\n", " \
    \   var len = arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i+1; j < len; j++){\n            k = arr[i]*arr[j];\n\
    \            if(k !== 0){\n                ret.push(k);\n            }\n     \
    \   }\n    }\n    ret.sort(function(a, b){\n        return a - b;\n    });\n \
    \   return ret;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp === 0){\n\
    \            return b_ones_comp;\n        }\n        if(b_ones_comp === 0){\n\
    \            return a_ones_comp;\n        }\n        return a_ones_comp - b_ones_comp;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var temp = 0;\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArr = [];\n    while(i\
    \ < len){\n        while(j > 0 && arr[j-1] > arr[j]){\n            temp = arr[j-1];\n\
    \            arr[j-1] = arr[j];\n            arr[j] = temp;\n            j--;\n\
    \        }\n        while(j > 0 && arr[j-1] == arr[j]){\n            tempArr[k]\
    \ = arr[j-1];\n            k++;\n            j--;\n        }\n        while(j\
    \ < len && arr[j] == arr[j+1]){\n            tempArr[k] = arr[j];\n          \
    \  k++;\n            j++;\n        }\n        while(j < len && arr[j] == arr[j-1]){\n\
    \            tempArr[k] = arr[j];\n            k++;\n            j++;\n      \
    \  }\n        i++;\n    }\n    while(j < len){\n        tempArr[k] = arr[j];\n\
    \        k++;\n        j++;\n    }\n    return tempArr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones\
    \ - a_ones;\n        if(a_ones_comp === 0){\n            return b_ones_comp;\n\
    \        }\n        if(b_ones_comp === 0){\n            return a_ones_comp;\n\
    \        }\n        return a_ones_comp * b_ones_comp;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var temp = 0;\n    var result = [];\n  \
    \  var i = 0;\n    while(i < len){\n        temp = arr[i];\n        while(temp\
    \ > 0){\n            result.push(temp % 2);\n            temp = temp / 2;\n  \
    \      }\n        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n\
    \        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n    \
    \    i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n\
    \    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n    }\n\
    \    while(i < len){\n        result.push(arr[i]);\n        i++;\n    }\n    while(i\
    \ < len){\n        result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n\
    \        result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n    \
    \    result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n\
    \        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n    \
    \    i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n\
    \    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n    }\n\
    \    while(i < len){\n        result.push(arr[i]);\n        i++;\n    }\n    while(i\
    \ < len){\n        result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n\
    \        result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n    \
    \    result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n\
    \        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n    \
    \    i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n\
    \    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n    }\n\
    \    while(i < len){\n        result.push(arr[i]);\n        i++;\n    }\n    while(i\
    \ < len){\n        result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n\
    \        result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n    \
    \    result.push(arr[i]);\n        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n\
    \        i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n    \
    \    i++;\n    }\n    while(i < len){\n        result.push(arr[i]);\n        i++;\n\
    \    }", "    var len = arr.length;\n    var sorted = [];\n    var tmp;\n    var\
    \ i;\n    for(i = 0; i < len; i++){\n        tmp = arr[i];\n        sorted.push(tmp);\n\
    \    }\n    sorted.sort(function(a, b){\n        var aNum = parseInt(a, 10);\n\
    \        var bNum = parseInt(b, 10);\n        if(aNum === bNum){\n           \
    \ return 0;\n        }\n        if(aNum > bNum){\n            return 1;\n    \
    \    }\n        return -1;\n    });\n    for(i = 0; i < len; i++){\n        arr[i]\
    \ = sorted[i];\n    }\n    return arr;\n}\n", "    var len = arr.length;\n   \
    \ var swapped;\n    var sorted;\n    var i;\n    var j;\n    \n    sorted = [];\n\
    \    \n    for(i = 0; i < len; i++){\n        swapped = false;\n        for(j\
    \ = 0; j < len; j++){\n            if(arr[j] > arr[j + 1]){\n                swap(arr,\
    \ j, j + 1);\n                swapped = true;\n            }\n        }\n    \
    \    \n        if(!swapped){\n            sorted.push(arr[i]);\n        }\n  \
    \  }\n    \n    return sorted;\n}\n", "  var len = arr.length;\n  if(len < 2){\n\
    \    return arr;\n  }\n  var ones = count_ones(arr);\n  var sorted_arr = [];\n\
    \  for(var i=0; i<len; i++){\n    sorted_arr.push(arr[i]);\n  }\n  sorted_arr.sort(function(a,\
    \ b){\n    var a_b = count_ones(a);\n    var b_b = count_ones(b);\n    if(a_b\
    \ === b_b){\n      return a - b;\n    }\n    return a_b - b_b;\n  });\n  for(var\
    \ i=0; i<len; i++){\n    sorted_arr[i] = arr[i];\n  }\n  return sorted_arr;\n\
    }\n", "    var len = arr.length;\n    var ret = new Array(len);\n    var i;\n\
    \    for(i = 0; i < len; i++){\n        var num = arr[i];\n        var count =\
    \ 0;\n        for(var j = 0; j < len; j++){\n            if(num === arr[j]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            ret[i] = num;\n        }\n        else if(count > 1){\n         \
    \   ret[i] = num;\n        }\n        else if(count === 0){\n            ret[i]\
    \ = 0;\n        }\n    }\n    return ret;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x==='1';});\n        var b_ones\
    \ = b_bin.split('').filter(function(x){return x==='1';});\n        var a_ones_count\
    \ = a_ones.length;\n        var b_ones_count = b_ones.length;\n        var a_ones_sum\
    \ = 0;\n        var b_ones_sum = 0;\n        a_ones.forEach(function(x){a_ones_sum\
    \ += x;});\n        b_ones.forEach(function(x){b_ones_sum += x;});\n        var\
    \ a_ones_average = a_ones_sum / a_ones_count;\n        var b_ones_average = b_ones_sum\
    \ / b_ones_count;\n        var a_ones_decimal = a_ones_average * Math.pow(10,\
    \ a_ones_count);\n        var b_ones_decimal = b_ones_average * Math.pow(10, b_ones_count);\n\
    \        return a_ones_decimal - b_ones_decimal;\n    });\n    return arr;\n}\n",
  "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        var cur = arr[i];\n\
    \        for(var j=0; j<len; j++){\n            if(arr[j] == cur){\n         \
    \       arr.splice(j, 1);\n                len--;\n            }\n        }\n\
    \    }\n    arr.sort(function(a, b){\n        var aNum = parseInt(a, 2);\n   \
    \     var bNum = parseInt(b, 2);\n        if(aNum == bNum){\n            return\
    \ 0;\n        }\n        if(aNum > bNum){\n            return 1;\n        }\n\
    \        return -1;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted_arr = [];\n    var counter = 0;\n    for(var i = 0; i < len; i++){\n\
    \        if(arr[i] == 0){\n            counter++;\n        }else{\n          \
    \  sorted_arr[counter] = arr[i];\n            counter++;\n        }\n    }\n \
    \   for(var i = 0; i < counter; i++){\n        sorted_arr[counter] = i;\n    }\n\
    \    return sorted_arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = arr.reduce(function(p, c){\n     \
    \   return p + c;\n    }, 0);\n    var tens = arr.reduce(function(p, c){\n   \
    \     return p + 10 * c;\n    }, 0);\n    var tensLen = tens / 10;\n    var onesLen\
    \ = ones / 10;\n    var tensDiff = tens - tensLen;\n    var onesDiff = ones -\
    \ onesLen;\n    var tensDiffLen = tensDiff / 10;\n    var onesDiffLen = onesDiff\
    \ / 10;\n    var tensDiffLenLen = tensDiffLen / 10;\n    var onesDiffLenLen =\
    \ onesDiffLen / 10;\n    var tensDiffLenLenLen = tensDiffLenLen / 10;\n    var\
    \ onesDiffLenLenLen = onesDiffLenLen / 10;\n    var tensDiffLenLenLen = tensDiffLenLenLen\
    \ / 10;\n    var onesDiffLenLenLen = onesDiffLenLenLen / 10;\n    var tensDiffLenLenLen\
    \ = tensDiffLenLenLen / 10;\n    var onesDiffLenLenLen = onesDiffLenLenLen / 10;\n\
    \    var tensDiffLenLenLen = tensDiffLenLenLen / 10;\n    var onesDiffLenLenLen\
    \ = onesDiffLenLenLen / 10;\n    var tensDiffLenLenLen = tensDiffLenLenLen / 10;\n\
    \    var onesDiffLenLenLen = onesDiffLenLenLen / 10;\n    var tensDiffLenLenLen\
    \ = tensDiffLenLenLen / 10;\n    var onesDiffLenLenLen = onesDiffLenLenLen / 10;\n\
    \    var tensDiffLenLenLen = tensDiffLenLenLen / 10;\n    var onesDiffLenLenLen\
    \ = onesDiffLenLenLen / 10;\n    var tensDiffLenLenLen = tensDiffLenLenLen / 10;\n\
    \    var onesDiffLenLenLen = onesDiffLenLenLen / 10;\n    var tensDiffLenLenLen\
    \ = tensDiffLenLenLen / 10;\n    var onesDiffLenLenLen = onesDiffLenLenLen / 10;\n\
    \    var tensDiffLenLenLen = tensDiffLenLenLen / 10;\n    var onesDiffLenLenLen\
    \ = onesDiffLenLenLen / 10;\n    var tensDiffLenLenLen = tensDiffLenLenLen / 10;\n\
    \    var onesDiffLenLen", "    var len = arr.length;\n    var sorted = new Array(len);\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n\
    \    }\n    for(i = len - 1; i >= 0; i--){\n        for(j = i - 1; j >= 0; j--){\n\
    \            k = j + 1;\n            while(k <= len && sorted[k - 1] > sorted[k]){\n\
    \                sorted[k] = sorted[k - 1];\n                k++;\n          \
    \  }\n            sorted[k] = arr[j];\n        }\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n         \
    \   k = binary_search(arr[i], arr[j]);\n            if(k > -1){\n            \
    \    sorted.push(arr[k]);\n                arr.splice(k, 1);\n               \
    \ len--;\n            }\n        }\n    }\n    return sorted;\n}\n", "\tarr.sort(function(a,\
    \ b){\n\t\tvar a_bin = bin(a);\n\t\tvar b_bin = bin(b);\n\t\tvar a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n\t\tvar b_ones = b_bin.split('').filter(function(x){return x==='1';});\n\
    \t\tvar a_ones_len = a_ones.length;\n\t\tvar b_ones_len = b_ones.length;\n\t\t\
    var a_ones_sum = a_ones.reduce(function(a, b){return a+b;});\n\t\tvar b_ones_sum\
    \ = b_ones.reduce(function(a, b){return a+b;});\n\t\tvar a_ones_diff = a_ones_sum\
    \ - a_ones_len;\n\t\tvar b_ones_diff = b_ones_sum - b_ones_len;\n\t\tvar a_ones_decimal\
    \ = a_ones_diff / a_ones_len;\n\t\tvar b_ones_decimal = b_ones_diff / b_ones_len;\n\
    \t\tvar a_ones_decimal = Math.round(a_ones_decimal*10)/10;\n\t\tvar b_ones_decimal\
    \ = Math.round(b_ones_decimal*10)/10;\n\t\treturn a_ones_decimal - b_ones_decimal;\n\
    \t});\n\treturn arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n   \
    \     return arr;\n    }\n    var result = [];\n    var maxOnes = 0;\n    var\
    \ maxOnesIndex = 0;\n    var maxOnesValue = 0;\n    for(var i = 0; i < len; i++){\n\
    \        var ones = arr[i];\n        if(ones > maxOnes){\n            maxOnes\
    \ = ones;\n            maxOnesIndex = i;\n            maxOnesValue = ones;\n \
    \       }\n        else if(ones === maxOnes){\n            maxOnesValue += ones;\n\
    \        }\n    }\n    result.push(arr[maxOnesIndex]);\n    for(var i = 0; i <\
    \ len; i++){\n        var ones = arr[i];\n        if(ones > maxOnes){\n      \
    \      result.push(arr[maxOnesIndex]);\n            maxOnes = ones;\n        \
    \    maxOnesIndex = i;\n            maxOnesValue = ones;\n        }\n        else\
    \ if(ones === maxOnes){\n            result.push(arr[maxOnesIndex]);\n       \
    \     result.push(arr[maxOnesIndex]);\n            maxOnesValue += ones;\n   \
    \     }\n        else{\n            result.push(arr[maxOnesIndex]);\n        }\n\
    \    }\n    result.push(arr[maxOnesIndex]);\n    return result;\n}\n", "    var\
    \ len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n    var ones\
    \ = count_ones(arr);\n    var len = arr.length;\n    var ret = [];\n    var i\
    \ = 0;\n    while(i < len){\n        var cur = arr[i];\n        var j = i;\n \
    \       while(j > 0 && arr[j-1] > cur){\n            arr[j] = arr[j-1];\n    \
    \        j--;\n        }\n        arr[j] = cur;\n        i++;\n    }\n    while(i\
    \ < len){\n        arr[i] = arr[i-1];\n        i++;\n    }\n    while(i < len){\n\
    \        arr[i] = arr[i] - ones;\n        i++;\n    }\n    return arr;\n}\n",
  "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n\
    \            if(k !== 0){\n                ret.push(k);\n            }\n     \
    \   }\n    }\n    ret.sort(function(a, b){\n        return a - b;\n    });\n \
    \   return ret;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp == 0){\n \
    \           return b_ones_comp;\n        }\n        if(b_ones_comp == 0){\n  \
    \          return a_ones_comp;\n        }\n        return a_ones_comp - b_ones_comp;\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var ret = new\
    \ Array(len);\n    var i;\n    for(i = 0; i < len; i++){\n        var num = arr[i];\n\
    \        var bin = num.toString(2);\n        var len = bin.length;\n        var\
    \ count = 0;\n        for(var j = 0; j < len; j++){\n            if(bin[j] ==\
    \ '1'){\n                count++;\n            }\n        }\n        ret[i] =\
    \ count;\n    }\n    ret.sort(function(a, b){\n        return a - b;\n    });\n\
    \    return ret;\n}\n", "    var len = arr.length;\n    var sorted = [];\n   \
    \ var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n        while(j\
    \ > 0 && arr[j - 1] > arr[j]){\n            k = j;\n            while(arr[k -\
    \ 1] > arr[k]){\n                arr[k] = arr[k - 1];\n                k--;\n\
    \            }\n            arr[k] = arr[j - 1];\n            j--;\n        }\n\
    \        sorted[i] = arr[j];\n    }\n    return sorted;\n}\n", "    var len =\
    \ arr.length;\n    var maxOnes = 0;\n    var minOnes = Number.MAX_VALUE;\n   \
    \ var maxDecimal = Number.NEGATIVE_INFINITY;\n    var minDecimal = Number.POSITIVE_INFINITY;\n\
    \    for(var i = 0; i < len; i++){\n        var ones = arr[i].toString(2).split('1');\n\
    \        var decimal = ones[1];\n        if(ones[0].length > maxOnes){\n     \
    \       maxOnes = ones[0].length;\n        }\n        if(ones[0].length < minOnes){\n\
    \            minOnes = ones[0].length;\n        }\n        if(decimal > maxDecimal){\n\
    \            maxDecimal = decimal;\n        }\n        if(decimal < minDecimal){\n\
    \            minDecimal = decimal;\n        }\n    }\n    for(var i = 0; i < len;\
    \ i++){\n        arr[i] = parseInt(arr[i].toString(2).split('1'), 2);\n    }\n\
    \    arr.sort(function(a, b){\n        var aDecimal = a.toString(2).split('1')[1];\n\
    \        var bDecimal = b.toString(2).split('1')[1];\n        if(aDecimal ===\
    \ bDecimal){\n            return a - b;\n        }\n        return aDecimal -\
    \ bDecimal;\n    });\n    for(var i = 0; i < len; i++){\n        arr[i] = parseInt(arr[i].toString(2).split('1'),\
    \ 2);\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    var temp\
    \ = 0;\n    var flag = 0;\n    for(var i=0; i<len; i++){\n        temp = arr[i];\n\
    \        flag = 0;\n        for(var j=0; j<len; j++){\n            if(arr[j] ==\
    \ temp){\n                flag = 1;\n                break;\n            }\n \
    \       }\n        if(flag == 0){\n            arr.splice(i, 0, temp);\n     \
    \       len++;\n        }\n    }\n    return arr;\n}\n", "\tarr.sort(function(a,\
    \ b){\n\t\tif(a==b) return 0;\n\t\tif(a<b) return -1;\n\t\treturn 1;\n\t});\n\t\
    return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_bin = bin(a);\n\
    \        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_count = a_ones.length;\n        var b_ones_count\
    \ = b_ones.length;\n        var a_ones_decimal = a_ones_count / a_ones.length;\n\
    \        var b_ones_decimal = b_ones_count / b_ones.length;\n        var a_ones_decimal\
    \ = Math.floor(a_ones_decimal * 100) / 100;\n        var b_ones_decimal = Math.floor(b_ones_decimal\
    \ * 100) / 100;\n        return a_ones_decimal - b_ones_decimal;\n    });\n  \
    \  return arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            k = arr[i] > arr[j] ? i : j;\n            sorted.push(arr[k]);\n\
    \        }\n    }\n    return sorted;\n}\n", "  if(arr.length < 2){\n    return\
    \ arr;\n  }\n  var len = arr.length;\n  var sorted = new Array(len);\n  for(var\
    \ i=0; i<len; i++){\n    sorted[i] = i;\n  }\n  sorted.sort(function(a, b){\n\
    \    var a_bin = bin(arr[a]);\n    var b_bin = bin(arr[b]);\n    var a_ones =\
    \ a_bin.substr(a_bin.length-arr[a].length);\n    var b_ones = b_bin.substr(b_bin.length-arr[b].length);\n\
    \    var a_ones_num = parseInt(a_ones, 2);\n    var b_ones_num = parseInt(b_ones,\
    \ 2);\n    if(a_ones_num < b_ones_num){\n      return -1;\n    }\n    if(a_ones_num\
    \ > b_ones_num){\n      return 1;\n    }\n    return a_bin.length - b_bin.length;\n\
    \  });\n  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  return sorted;\n\
    }\n", "    arr.sort(function(a, b){\n        var c = a.toString(2).split('').reverse().join('');\n\
    \        var d = b.toString(2).split('').reverse().join('');\n        return parseInt(c,\
    \ 10) - parseInt(d, 10);\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones\
    \ - a_ones;\n        if(a_ones_comp == 0){\n            return b_ones_comp;\n\
    \        }\n        if(b_ones_comp == 0){\n            return a_ones_comp;\n \
    \       }\n        return a_ones_comp * b_ones_comp;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var ret = [];\n    var tmp = [];\n    var\
    \ cnt = 0;\n    for(var i = 0; i < len; i++){\n        if(arr[i] > 0){\n     \
    \       tmp.push(arr[i]);\n            cnt++;\n        }\n    }\n    while(cnt\
    \ > 0){\n        for(var i = 0; i < len; i++){\n            if(arr[i] > 0){\n\
    \                tmp.push(arr[i]);\n                cnt--;\n            }\n  \
    \      }\n        len = tmp.length;\n        for(var i = 0; i < len; i++){\n \
    \           ret.push(tmp[i]);\n        }\n    }\n    return ret;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_comp = a_ones - b_ones;\n        if(a_ones_comp != 0){\n \
    \           return a_ones_comp;\n        }\n        return a - b;\n    });\n \
    \   return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_bin = a.toString(2),\n\
    \            b_bin = b.toString(2),\n            a_ones = a_bin.split('1').length,\n\
    \            b_ones = b_bin.split('1').length,\n            a_zeros = a_bin.length\
    \ - a_ones,\n            b_zeros = b_bin.length - b_ones,\n            a_sign\
    \ = a_ones > b_ones ? '+' : '-',\n            b_sign = b_ones > a_ones ? '+' :\
    \ '-',\n            a_zeros_sign = a_zeros > b_zeros ? '+' : '-',\n          \
    \  b_zeros_sign = b_zeros > a_zeros ? '+' : '-';\n        if(a_ones > b_ones){\n\
    \            return a_sign + b_sign + a_zeros_sign + b_zeros_sign;\n        }\n\
    \        if(a_ones < b_ones){\n            return b_sign + a_sign + b_zeros_sign\
    \ + a_zeros_sign;\n        }\n        if(a_zeros > b_zeros){\n            return\
    \ a_sign + b_sign + a_zeros_sign + b_zeros_sign;\n        }\n        if(a_zeros\
    \ < b_zeros){\n            return b_sign + a_sign + b_zeros_sign + a_zeros_sign;\n\
    \        }\n        return 0;\n    });\n    return arr;\n}\n", "    var len =\
    \ arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n      \
    \      k = j;\n            while(k >= 0 && arr[k - 1] > arr[k]){\n           \
    \     arr[k] = arr[k - 1];\n                k--;\n            }\n            arr[k]\
    \ = arr[j];\n            j--;\n        }\n        arr[j] = arr[i];\n    }\n  \
    \  return arr;\n}\n", "  var len = arr.length;\n  if(len < 1) return arr;\n  if(len\
    \ == 1) return [arr[0]];\n  var ones = count_ones(arr);\n  var len = ones.length;\n\
    \  if(len == 0) return arr;\n  var max = 0;\n  for(var i = 0; i < len; i++){\n\
    \    if(ones[i] > max) max = ones[i];\n  }\n  var res = [];\n  for(var i = 0;\
    \ i < len; i++){\n    var index = arr.indexOf(arr[i]);\n    res.push(arr[index]);\n\
    \    arr[index] = arr[max];\n    arr[max] = arr[i];\n  }\n  return res;\n}\n",
  "    var len = arr.length;\n    var sorted = [];\n    var i, j, tmp;\n    for(i\
    \ = 0; i < len; i++){\n        tmp = arr[i];\n        for(j = 0; j < len; j++){\n\
    \            if(tmp == arr[j]){\n                sorted.push(arr[j]);\n      \
    \          arr.splice(j, 1);\n                break;\n            }\n        }\n\
    \    }\n    return sorted;\n}\n", "  var len = arr.length;\n  if(len < 2){\n \
    \   return arr;\n  }\n  var ones = count_ones(arr);\n  var len = ones.length;\n\
    \  if(len < 2){\n    return arr;\n  }\n  var sorted = new Array(len);\n  for(var\
    \ i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a, b){\n\
    \    return ones[a] - ones[b];\n  });\n  return sorted;\n}\n", "    var len =\
    \ arr.length;\n    var sorted = [];\n    var i, j, tmp;\n    for(i = 0; i < len;\
    \ i++){\n        tmp = arr[i];\n        for(j = i - 1; j >= 0; j--){\n       \
    \     if(tmp < arr[j]){\n                tmp = arr[j];\n                sorted.push(tmp);\n\
    \                break;\n            }\n        }\n        sorted.push(tmp);\n\
    \    }\n    return sorted;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_14_all_prefixes
language: js
prompt: "//Return list of all prefixes from shortest to longest of the input string\n\
  // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
  asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
  WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
completions: ["  var prefixes = [];\n  var len = string.length;\n  for(var i=0; i<len;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i <= string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [],\n      i = string.length,\n\
    \      prefix;\n  while (i){\n    prefix = string.substring(0, i);\n    if (prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n    i -= 1;\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix += string[i];\n    if(string[i] != string[0]){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i = 0, len = string.length;\
    \ i < len; i++){\n    prefix = string.substring(0, i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix = prefix + string[i];\n    if(prefixes.indexOf(prefix) === -1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix;\n    for(var i = 0; i < string.length; i++){\n\
    \        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ==\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefix += string[i];\n    if(string[i] !== prefix){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  return prefixes;\n}\n", "    var prefixes =\
    \ [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length; i++){\n\
    \        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ===\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n \
    \   prefixes.push(string.substr(0,i+1));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var strings = string.split('');\n\
    \    for(var i=0;i<strings.length;i++){\n        prefixes.push(strings[i]);\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n\
    \    var i;\n    for(i = 0; i < string.length; i++){\n        prefix = string.slice(0,\
    \ i);\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n  for(var\
    \ i = 0; i<len; i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var current_prefix = \"\";\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === string[0]){\n      current_prefix += string[0];\n\
    \    }else{\n      prefixes.push(current_prefix);\n      current_prefix = \"\"\
    ;\n    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  var prefix_length = 0;\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === string[0]){\n      prefix_length++;\n    }\n   \
    \ else{\n      prefixes.push(string.substr(0, prefix_length));\n      prefix_length\
    \ = 0;\n    }\n  }\n  prefixes.push(string.substr(0, prefix_length));\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n   \
    \ for(var i=0;i<len;i++){\n        prefixes.push(string.substr(0,i));\n    }\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i <\
    \ string.length; i++){\n        prefix = string.substring(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix;\n  var stringLength = string.length;\n  for(var i=0; i<stringLength;\
    \ i++){\n    prefix = string.substr(0, i);\n    if(prefixes.indexOf(prefix) ===\
    \ -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", " \
    \   var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length;\
    \ i++){\n        prefix = string.slice(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n\
    \    if(prefixes.indexOf(prefix)==-1){\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix;\n  var i;\n  for(i = 0; i < string.length; i++){\n    prefix\
    \ = string.substr(0, i);\n    if(prefixes.indexOf(prefix) === -1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n  for(var\
    \ i = 0; i<len; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  var i = 0;\n  while(i < string.length){\n    prefix = string.substr(0,i);\n\
    \    if(prefixes.indexOf(prefix) === -1){\n      prefixes.push(prefix);\n    }\n\
    \    i++;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  var stringLength = string.length;\n  for(var i = 0; i < stringLength; i++){\n\
    \    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix) === -1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)===-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var i = string.length;\n  while (i--){\n    prefixes.unshift(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len\
    \ = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n\
    \  while (i--){\n    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var currentLength = string.length;\n  for(var i=0;i<currentLength;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.substring(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var i = 0;\n  var len = string.length;\n  while(i < len){\n\
    \    prefixes.push(string.substr(i, len));\n    i += len;\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  var i;\n  for(i = 0; i < string.length; i++){\n\
    \    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix) === -1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n\
    \    if(prefixes.indexOf(prefix)<0){\n      prefixes.push(prefix);\n    }\n  }\n\
    \  return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i<len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var i = string.length;\n  while (i--){\n    prefixes.unshift(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var strings = string.split(\"\"\
    );\n    for(var i = 0; i < strings.length; i++){\n        prefixes.push(strings[i]);\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n\
    \  while (i--){\n    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [],\n      i = string.length,\n      prefix;\n  while\
    \ (i){\n    prefix = string.substring(0, i);\n    if (prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n    i--;\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var current_prefix = \"\";\n  for(var i = 0; i < string.length; i++){\n\
    \    if(string[i] === \" \" || string[i] === \"\\t\" || string[i] === \"\\n\"\
    ){\n      prefixes.push(current_prefix);\n      current_prefix = \"\";\n    }else{\n\
    \      current_prefix += string[i];\n    }\n  }\n  prefixes.push(current_prefix);\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  var i;\n  for(i\
    \ = 0; i < string.length; i++){\n    prefix = string.substring(0, i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var len =\
    \ string.length;\n    for(var i = 0; i<len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n\
    \    for(var i=0;i<string.length;i++){\n        prefix = string.substr(0,i);\n\
    \        if(prefixes.indexOf(prefix)<0){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix_length\
    \ = 0;\n  for(var i = 0; i < string.length; i++){\n    prefix_length = prefix_length\
    \ + string[i].length;\n    prefixes.push(string.substr(0, prefix_length));\n \
    \ }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix\
    \ = \"\";\n  for(var i = 0; i < string.length; i++){\n    if(string[i] === \"\
    \ \" || string[i] === \"\\t\" || string[i] === \"\\n\"){\n      if(current_prefix\
    \ !== \"\"){\n        prefixes.push(current_prefix);\n      }\n      current_prefix\
    \ = \"\";\n    }else{\n      current_prefix += string[i];\n    }\n  }\n  if(current_prefix\
    \ !== \"\"){\n    prefixes.push(current_prefix);\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [],\n      i = string.length,\n      prefix;\n  while (i){\n \
    \   prefix = string.substring(0, i);\n    if (prefixes.indexOf(prefix) === -1){\n\
    \      prefixes.push(prefix);\n    }\n    i -= 1;\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(string.indexOf(prefix,\
    \ i) === i){\n            prefixes.push(prefix);\n        }\n    }\n    return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix += string[i];\n    if(string[i] !== prefix){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var current_prefix = \"\";\n  for(var i = 0; i\
    \ < string.length; i++){\n    if(string[i] === string[0]){\n      prefixes.push(current_prefix);\n\
    \      current_prefix = \"\";\n    } else {\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n  var len\
    \ = string.length;\n  while (i < len){\n    prefixes.push(string.substr(i, 1));\n\
    \    i = i + 1;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var current\
    \ = \"\";\n  for(var i = 0; i < string.length; i++){\n    current += string[i];\n\
    \    if(string[i] != string[0]){\n      prefixes.push(current);\n      current\
    \ = \"\";\n    }\n  }\n  prefixes.push(current);\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  var prefix_length = string.length;\n  for(var i=0;i<prefix_length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length;\
    \ i++){\n        prefix = string.substring(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix_length = 0;\n\
    \  for(var i = 0; i < string.length; i++){\n    if(string[i] === string[0]){\n\
    \      prefix_length++;\n    } else {\n      prefixes.push(string.substr(0, prefix_length));\n\
    \      prefix_length = 0;\n    }\n  }\n  prefixes.push(string.substr(0, prefix_length));\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n   \
    \   prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix = string.substr(0, i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix_length\
    \ = 0;\n  for(var i = 0; i < string.length; i++){\n    prefix_length += string[i].length;\n\
    \    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    var prefix;\n    for(var i = 0; i < string.length; i++){\n\
    \        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ===\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n    prefix\
    \ = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length +=\
    \ string[i].length;\n        prefixes.push(string.substr(0, i));\n    }\n    prefixes.push(string.substr(0,\
    \ prefix_length));\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len\
    \ = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.substring(0, i));\n \
    \ }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for\
    \ (var i = 0; i < string.length; i++){\n    prefix += string[i];\n    if (string[i]\
    \ != prefix){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  prefixes.push(prefix);\n  return prefixes;\n}\n", "    var prefixes = [];\n\
    \    var prefix;\n    var i;\n    for(i = 0; i < string.length; i++){\n      \
    \  prefix = string.slice(0, i);\n        if(prefixes.indexOf(prefix) === -1){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  var i;\n  for(i = 0; i < string.length;\
    \ i++){\n    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix) ===\
    \ -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i\
    \ < string.length; i++){\n        prefixes.push(string.slice(0, i));\n    }\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    var current_prefix =\
    \ \"\";\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ \" \" || string[i] === \"\\n\" || string[i] === \"\\r\"){\n            prefixes.push(current_prefix);\n\
    \            current_prefix = \"\";\n        } else {\n            current_prefix\
    \ += string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === \" \" || string[i] ===\
    \ \"\\t\" || string[i] === \"\\n\"){\n      prefixes.push(current_prefix);\n \
    \     current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var length\
    \ = string.length;\n    for(var i = 0; i <= length; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ string[0]){\n            prefixes.push(string.substr(0, i));\n            prefix_length\
    \ = i;\n        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n\
    \  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n  while (i--){\n\
    \    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var i = 0;\n    while(i < string.length){\n        prefixes.push(string.substr(i,\
    \ string.length));\n        i++;\n    }\n    return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n    prefix\
    \ += string[i];\n    if(string[i] === string[0]){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  return prefixes;\n}\n", "    var prefixes =\
    \ [];\n    var prefix;\n    for(var i = 0; i < string.length; i++){\n        prefix\
    \ = string.substr(0, i);\n        if(prefixes.indexOf(prefix) === -1){\n     \
    \       prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length;\
    \ i++){\n        prefix = string.slice(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var i = string.length;\n  while (i--){\n    prefixes.unshift(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n   \
    \ for(var i = 0; i<len; i++){\n        prefixes.push(string.slice(0, i));\n  \
    \  }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n  while(i\
    \ < string.length){\n    prefixes.push(string.substr(i, string.length));\n   \
    \ i++;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var i = 0;\n  var len = string.length;\n  while (i < len) {\n    prefixes.push(string.substr(i,\
    \ 1));\n    i += 1;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var\
    \ i = string.length;\n  while (i){\n    prefixes.unshift(string.substring(0, i));\n\
    \    string = string.substring(i);\n    i--;\n  }\n  return prefixes;\n}\n", " \
    \   var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix;\n    var i;\n    for(i = 0; i <\
    \ string.length; i++){\n        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n\
    \    prefixes.push(string.substr(0,i+1));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var current_prefix = \"\";\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === \" \" || string[i] === \"\\t\" || string[i] ===\
    \ \"\\n\"){\n      if(current_prefix !== \"\"){\n        prefixes.push(current_prefix);\n\
    \      }\n      current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  if(current_prefix !== \"\"){\n    prefixes.push(current_prefix);\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix = prefix + string[i];\n    if(string[i]\
    \ !== string[0]){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n \
    \ }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var stringLength = string.length;\n\
    \  for(var i = 0; i <= stringLength; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n\
    \    var i;\n    for(i = 0; i < string.length; i++){\n        prefix = string.substring(0,\
    \ i);\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n  for(var\
    \ i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n  }\n  return prefixes;\n\
    }\n", "    var prefixes = [];\n    var i = string.length;\n    while(i--){\n \
    \       prefixes.unshift(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix;\n  for(var i=0; i<string.length; i++){\n  \
    \  prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix) == -1){\n   \
    \   prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === \" \" || string[i] ===\
    \ \"\\t\" || string[i] === \"\\n\"){\n      current_prefix += string[i];\n   \
    \ }\n    else{\n      prefixes.push(current_prefix);\n      current_prefix = \"\
    \";\n    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n", " \
    \ var prefixes = [];\n  for(var i = 0; i<string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  var i;\n  for(i = 0; i < string.length; i++){\n    prefix = string.substring(0,\
    \ i);\n    if(prefixes.indexOf(prefix) === -1){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var stringLength\
    \ = string.length;\n    for(var i = 0; i < stringLength; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var i = string.length;\n\
    \  while (i--){\n    prefixes.unshift(string.slice(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefixes.push(string.substring(0, i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix =\
    \ \"\";\n  for(var i = 0; i < string.length; i++){\n    if(string[i] === current_prefix){\n\
    \      prefixes.push(current_prefix);\n      current_prefix = \"\";\n    } else\
    \ {\n      current_prefix += string[i];\n    }\n  }\n  prefixes.push(current_prefix);\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix = prefix + string[i];\n    if(prefixes.length\
    \ == 0 || prefixes[prefixes.length - 1] != prefix){\n      prefixes.push(prefix);\n\
    \    }\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)<0){\n     \
    \ prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var current = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        current += string[i];\n        if(string[i] === string[0]){\n\
    \            prefixes.push(current);\n            current = \"\";\n        }\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var current = \"\";\n  for(var i = 0; i < string.length; i++){\n\
    \    current += string[i];\n    if(string[i] !== string[0]){\n      prefixes.push(current);\n\
    \      current = \"\";\n    }\n  }\n  prefixes.push(current);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix_length = 0;\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] === \"a\"){\n      prefixes.push(string.substr(0, i));\n\
    \      prefix_length = i;\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = []\n  for(var i = 0;\
    \ i < string.length; i++){\n    prefixes.push(string.substring(0, i))\n  }\n \
    \ return prefixes\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n   \
    \   prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var strings\
    \ = string.split(\"\");\n    for(var i = 0; i < strings.length; i++){\n      \
    \  prefixes.push(strings[i]);\n    }\n    return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  for(var i = 0; i <= string.length; i++){\n    prefixes.push(string.substr(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [],\n      i = string.length,\n\
    \      prefix;\n  while (i){\n    prefix = string.substring(0, i);\n    if (prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n    i -= 1;\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0; i<string.length; i++){\n\
    \    prefix = string.slice(0, i);\n    if(prefixes.indexOf(prefix) == -1){\n \
    \     prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix = '';\n    for(var i = 0; i < string.length; i++){\n \
    \       prefix += string[i];\n        if(string[i] !== prefix){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n  for(var i=0;i<string.length;i++){\n\
    \    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)==-1){\n   \
    \   prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "  var prefixes\
    \ = [],\n      i = string.length,\n      prefix;\n  while(i){\n    prefix = string.substring(0,\
    \ i);\n    if(prefixes.indexOf(prefix) === -1){\n      prefixes.push(prefix);\n\
    \    }\n    i -= 1;\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === \" \" || string[i] ===\
    \ \"\\t\" || string[i] === \"\\n\"){\n      if(current_prefix !== \"\"){\n   \
    \     prefixes.push(current_prefix);\n      }\n      current_prefix = \"\";\n\
    \    }\n    else{\n      current_prefix += string[i];\n    }\n  }\n  if(current_prefix\
    \ !== \"\"){\n    prefixes.push(current_prefix);\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n \
    \   prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  for(var i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var i = 0;\n  while(i < string.length){\n    prefixes.push(string.substr(i,\
    \ string.length));\n    i++;\n  }\n  return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i\
    \ = 0; i <= string.length; i++){\n    prefixes.push(string.slice(0, i));\n  }\n\
    \  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ === string[0]){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n \
    \ }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var current = \"\"\
    ;\n    for(var i = 0; i < string.length; i++){\n        current += string[i];\n\
    \        prefixes.push(current);\n    }\n    return prefixes;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

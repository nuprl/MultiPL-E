name: HumanEval_14_all_prefixes
language: js
prompt: "//Return list of all prefixes from shortest to longest of the input string\n\
  // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
  asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
  WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
completions: ["  var prefixes = [];\n  var len = string.length;\n  for(var i=0; i<len;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i <= string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [],\n      i = string.length,\n\
    \      prefix;\n  while (i){\n    prefix = string.substring(0, i);\n    if (prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n    i -= 1;\n  }\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i=0;i<string.length;i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix += string[i];\n    if(string[i] != string[0]){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix;\n  for(var i = 0, len = string.length;\
    \ i < len; i++){\n    prefix = string.substring(0, i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length; i++){\n\
    \    prefix = prefix + string[i];\n    if(prefixes.indexOf(prefix) === -1){\n\
    \      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix;\n    for(var i = 0; i < string.length; i++){\n\
    \        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ==\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefix += string[i];\n    if(string[i] !== prefix){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  return prefixes;\n}\n", "    var prefixes =\
    \ [];\n    var prefix;\n    var i;\n    for(i = 0; i < string.length; i++){\n\
    \        prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ===\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var prefix;\n\
    \  for(var i=0;i<string.length;i++){\n    prefix = string.substr(0,i);\n    if(prefixes.indexOf(prefix)\
    \ === -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n \
    \   prefixes.push(string.substr(0,i+1));\n  }\n  return prefixes;\n}\n", "  var\
    \ prefixes = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i+1));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var strings = string.split('');\n\
    \    for(var i=0;i<strings.length;i++){\n        prefixes.push(strings[i]);\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix;\n\
    \    var i;\n    for(i = 0; i < string.length; i++){\n        prefix = string.slice(0,\
    \ i);\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i=0;i<string.length;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n  for(var\
    \ i = 0; i<len; i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_163_generate_integers
language: js
prompt: "//Given two positive integers a and b, return the even digits between a\n\
  // and b, in ascending order.\n// For example:\n// >>> generate_integers(2, 8)\n\
  // [2, 4, 6, 8]\n// >>> generate_integers(8, 2)\n// [2, 4, 6, 8]\n// >>> generate_integers(10,\
  \ 14)\n// []\nfunction generate_integers(a, b){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = generate_integers;\n  assert.deepEqual(candidate(2, 10),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(10,\
  \ 2),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(132, 2),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(17,\
  \ 89),[]);\n}\n\ntest();"
completions: ["  var result = [];\n  for(var i = a; i <= b; i++){\n    result.push(i);\n\
    \  }\n  return result;\n}\n", "  var result = [];\n  var i = 0;\n  while(a >=\
    \ b){\n    result.push(a%10);\n    a = Math.floor(a/10);\n    i++;\n  }\n  if(a\
    \ > b){\n    result.push(a%10);\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    while(a <= b){\n        result.push(a);\n        a = a + 2;\n   \
    \ }\n    return result;\n}\n", "  var result = [];\n  var current = a;\n  while(current\
    \ <= b){\n    result.push(current);\n    current += 2;\n  }\n  return result;\n\
    }\n", "    var result = [];\n    for(var i = a; i <= b; i++){\n        result.push(i);\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  while(a <= b){\n    result.push(a);\n\
    \    a = a + 2;\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i\
    \ = a; i <= b; i++){\n    result.push(i);\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  var i = 0;\n  while(a <= b){\n    result.push(a);\n    a = a\
    \ + 2;\n    i++;\n  }\n  return result;\n}\n", "  var result = [];\n  for(var\
    \ i = a; i <= b; i++){\n    result.push(i);\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  for(var i = a; i <= b; i++){\n    result.push(i);\n  }\n  return\
    \ result;\n}\n", "    var result = [];\n    for(var i = a; i <= b; i++){\n   \
    \     result.push(i);\n    }\n    return result;\n}\n", "  var result = [];\n\
    \  for(var i = a; i <= b; i++){\n    result.push(i);\n  }\n  return result;\n\
    }\n", "    var result = [];\n    for(var i = a; i <= b; i++){\n        result.push(i);\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for(var i = a; i <= b;\
    \ i++){\n    result.push(i);\n  }\n  return result;\n}\n", "  var result = [];\n\
    \  while(a <= b){\n    result.push(a);\n    a = a + 2;\n  }\n  return result;\n\
    }\n", "    var result = [];\n    var counter = 0;\n    while(counter < a){\n \
    \       result.push(counter);\n        counter = counter + b;\n    }\n    return\
    \ result;\n}\n", "  var arr = [];\n  for(var i = a; i <= b; i++){\n    arr.push(i);\n\
    \  }\n  return arr;\n}\n", "  var result = [];\n  for(var i = a; i <= b; i++){\n\
    \    result.push(i);\n  }\n  return result;\n}\n", "  var result = [];\n  var\
    \ current = a;\n  while(current < b){\n    result.push(current);\n    current\
    \ += 2;\n  }\n  return result;\n}\n", "    var result = [];\n    for(var i = a;\
    \ i <= b; i++){\n        result.push(i);\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_148_bf
language: js
prompt: "//There are eight planets in our solar system: the closerst to the Sun \n\
  // is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n// Uranus,\
  \ Neptune.\n// Write a function that takes two planet names as strings planet1 and\
  \ planet2. \n// The function should return a tuple containing all planets whose\
  \ orbits are \n// located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n// the proximity to the sun. \n// The function should return an empty\
  \ tuple if planet1 or planet2\n// are not correct planet names. \n// Examples\n\
  // >>> bf(\"Jupiter\", \"Neptune\")\n// [\"Saturn\", \"Uranus\"]\n// >>> bf(\"Earth\"\
  , \"Mercury\")\n// \"Venus\"\n// >>> bf(\"Mercury\", \"Uranus\")\n// [\"Venus\"\
  , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]\nfunction bf(planet1, planet2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = bf;\n  assert.deepEqual(candidate(\"Jupiter\", \"Neptune\"),[\"Saturn\", \"\
  Uranus\"]);\n  assert.deepEqual(candidate(\"Earth\", \"Mercury\"),[\"Venus\"]);\n\
  \  assert.deepEqual(candidate(\"Mercury\", \"Uranus\"),[\"Venus\", \"Earth\", \"\
  Mars\", \"Jupiter\", \"Saturn\"]);\n  assert.deepEqual(candidate(\"Neptune\", \"\
  Venus\"),[\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"]);\n  assert.deepEqual(candidate(\"\
  Earth\", \"Earth\"),[]);\n  assert.deepEqual(candidate(\"Mars\", \"Earth\"),[]);\n\
  \  assert.deepEqual(candidate(\"Jupiter\", \"Makemake\"),[]);\n}\n\ntest();"
completions: ["  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n\
    \  let planet1Sun = sun(planet1Orbit);\n  let planet2Sun = sun(planet2Orbit);\n\
    \  let planet1OrbitSun = orbit(planet1Orbit);\n  let planet2OrbitSun = orbit(planet2Orbit);\n\
    \  let planet1SunOrbitSun = orbit(planet1Sun);\n  let planet2SunOrbitSun = orbit(planet2Sun);\n\
    \  let planet1OrbitSunOrbitSun = orbit(planet1OrbitSun);\n  let planet2OrbitSunOrbitSun\
    \ = orbit(planet2OrbitSun);\n  let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n  let\
    \ planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun",
  "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1Orbit = orbits[planet1];\n    let planet2Orbit = orbits[planet2];\n\
    \    let planet1Sun = sunOrbit;\n    let planet2Sun = sunOrbit;\n    let planet1OrbitSun\
    \ = orbits[planet1Sun];\n    let planet2OrbitSun = orbits[planet2Sun];\n    let\
    \ planet1OrbitPlanet2 = orbits[planet1Orbit];\n    let planet2OrbitPlanet2 = orbits[planet2Orbit];\n\
    \    let planet1OrbitPlanet1 = orbits[planet1OrbitSun];\n    let planet2OrbitPlanet1\
    \ = orbits[planet2OrbitSun];\n    let planet1OrbitPlanet1Sun = orbits[planet1OrbitPlanet1];\n\
    \    let planet2OrbitPlanet1Sun = orbits[planet2OrbitPlanet1];\n    let planet1OrbitPlanet2Sun\
    \ = orbits[planet1OrbitPlanet2];\n    let planet2OrbitPlanet2Sun = orbits[planet2OrbitPlanet2];\n\
    \    let planet1OrbitPlanet1OrbitPlanet2 = orbits[planet1OrbitPlanet1OrbitPlanet1];\n\
    \    let planet2OrbitPlanet1OrbitPlanet2 = orbits[planet2OrbitPlanet1OrbitPlanet1];\n\
    \    let planet1OrbitPlanet1OrbitPlanet1Sun = orbits[planet1OrbitPlanet1OrbitPlanet2];\n\
    \    let planet2OrbitPlanet1OrbitPlanet1Sun = orbits[planet2OrbitPlanet1OrbitPlanet2];\n\
    \    let planet1OrbitPlanet1OrbitPlanet2Sun = orbits[planet1OrbitPlanet1OrbitPlanet1Sun];\n\
    \    let planet2OrbitPlanet1OrbitPlanet2Sun = orbits[planet2OrbitPlanet1OrbitPlanet2Sun];\n\
    \    let planet1OrbitPlanet1OrbitPlanet2OrbitPlanet2 = orbits[planet1OrbitPlanet1OrbitPlanet2OrbitPlanet1];\n\
    \    let planet2OrbitPlanet1OrbitPlanet2OrbitPlanet2 = orbit", "\tlet planet1Orbit\
    \ = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet planet1Sun = sun(planet1Orbit)\n\
    \tlet planet2Sun = sun(planet2Orbit)\n\tlet planet1OrbitSun = orbit(planet1Orbit)\n\
    \tlet planet2OrbitSun = orbit(planet2Orbit)\n\tlet planet1OrbitSunDistance = distance(planet1OrbitSun,\
    \ planet1Sun)\n\tlet planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Sun)\n\
    \tlet planet1OrbitSunDistanceToPlanet2 = distance(planet1OrbitSun, planet2)\n\t\
    let planet2OrbitSunDistanceToPlanet1 = distance(planet2OrbitSun, planet1)\n\t\
    let planet1OrbitSunDistanceToPlanet1AndPlanet2 = distance(planet1OrbitSun, planet1OrbitSunDistanceToPlanet2)\n\
    \tlet planet2OrbitSunDistanceToPlanet1AndPlanet2 = distance(planet2OrbitSun, planet2OrbitSunDistanceToPlanet1)\n\
    \tlet planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3 = distance(planet1OrbitSun,\
    \ planet1OrbitSunDistanceToPlanet2AndPlanet3)\n\tlet planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3\
    \ = distance(planet2OrbitSun, planet2OrbitSunDistanceToPlanet1AndPlanet3)\n\t\
    let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4 = distance(planet1OrbitSun,\
    \ planet1OrbitSunDistanceToPlanet2AndPlanet3AndPlanet4)\n\tlet planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4\
    \ = distance(planet2OrbitSun, planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3)\n\
    \tlet planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = distance(planet1OrbitSun, planet1OrbitSunDistanceToPlanet2", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun\
    \ = planet1Orbit.orbit(sun);\n    let planet2OrbitSun = planet2Orbit.orbit(sun);\n\
    \    let planet1OrbitSunSun = planet1OrbitSun.orbit(sun);\n    let planet2OrbitSunSun\
    \ = planet2OrbitSun.orbit(sun);\n    let planet1OrbitSunSunSun = planet1OrbitSunSun.orbit(sun);\n\
    \    let planet2OrbitSunSunSun = planet2OrbitSunSun.orbit(sun);\n    let planet1OrbitSunSunSunSun\
    \ = planet1OrbitSunSunSun.orbit(sun);\n    let planet2OrbitSunSunSunSun = planet2OrbitSunSunSun.orbit(sun);\n\
    \    let planet1OrbitSunSunSunSunSun = planet1OrbitSunSunSunSun.orbit(sun);\n\
    \    let planet2OrbitSunSunSunSunSun = planet2OrbitSunSunSunSun.orbit(sun);\n\
    \    let planet1OrbitSunSunSunSunSunSun = planet1OrbitSunSunSunSunSun.orbit(sun);\n\
    \    let planet2OrbitSunSunSunSunSunSun = planet2OrbitSunSunSunSunSun.orbit(sun);\n\
    \    let planet1OrbitSunSunSunSunSunSunSun = planet1OrbitSunSunSunSunSunSun.orbit(sun);\n\
    \    let planet2OrbitSunSunSunSunSunSunSun = planet2OrbitSunSunSunSunSunSun.orbit(sun);\n\
    \    let planet1OrbitSunSunSunSunSunSunSunSun = planet1OrbitSunSunSunSunSunSunSunSun.orbit(sun);\n\
    \    let planet2OrbitSunSunSunSunSunSunSunSunSun = planet2OrbitSunSunSunSunSunSunSunSunSun.orbit(sun);\n\
    \    let planet1OrbitSunSunSunSunSunSunSunSunSunSun = planet1OrbitSunSunSunSunSunSunSunSunSunSun.orbit(sun);\n\
    \    let planet2OrbitSunSunSunSunSunSunSunSunSunSun = planet2OrbitSunSunSunSunSunSun",
  "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet\
    \ planet1OrbitSun = planet1Orbit.orbit(sun)\n\tlet planet2OrbitSun = planet2Orbit.orbit(sun)\n\
    \tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(sun)\n\tlet planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(sun)\n\tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance\n\tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquared - planet2OrbitSunDistanceSquared\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistance\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ - planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistance\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinus",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\tlet planet2OrbitSun = planet2Orbit.orbit(sun);\n\
    \tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(sun);\n\tlet planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(sun);\n\tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n\tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquared - planet2OrbitSunDistanceSquared;\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ - planet2OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ - planet2OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared", "    let\
    \ planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n    let\
    \ planet1Sun = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n   \
    \ let planet1OrbitSun = orbit(planet1, planet1Sun)\n    let planet2OrbitSun =\
    \ orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun)\n    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun)\n    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSun =\
    \ orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n    let\
    \ planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n    let\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ plan", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1OrbitDistance = distance(planet1Orbit)\n    let planet2OrbitDistance\
    \ = distance(planet2Orbit)\n    let planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sunDistance\n    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance\n\
    \    let planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSun / planet1OrbitDistance\n\
    \    let planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSun / planet2OrbitDistance\n\
    \    let planet1OrbitDistanceToSunOrbitToPlanet2 = planet1OrbitDistanceToSunOrbit\
    \ * planet2OrbitDistanceToSunOrbit\n    let planet1OrbitDistanceToSunOrbitToPlanet1\
    \ = planet1OrbitDistanceToSunOrbit * planet1OrbitDistanceToSunOrbit\n    let planet1OrbitDistanceToSunOrbitToPlanet1\
    \ = planet1OrbitDistanceToSunOrbitToPlanet1 * planet2OrbitDistanceToSunOrbit\n\
    \    let planet1OrbitDistanceToSunOrbitToPlanet2 = planet1OrbitDistanceToSunOrbitToPlanet2\
    \ * planet1OrbitDistanceToSunOrbit\n    let planet1OrbitDistanceToSunOrbitToPlanet2\
    \ = planet1OrbitDistanceToSunOrbitToPlanet2 * planet2OrbitDistanceToSunOrbit\n\
    \    let planet1OrbitDistanceToSunOrbitToPlanet1 = planet1OrbitDistanceToSunOrbitToPlanet1\
    \ * planet1OrbitDistanceToSunOrbit\n    let planet1OrbitDistanceToSunOrbitToPlanet1\
    \ = planet1OrbitDistanceToSunOrbitToPlanet1 * planet2OrbitDistanceToSunOrbit\n\
    \    let planet1OrbitDistanceToSunOrbitToPlanet2 = planet1OrbitDistanceToSunOrbitToPlanet2\
    \ * planet1OrbitDistanceToSunOrbit\n    let planet1OrbitDistanceToSunOrbitToPlanet2\
    \ = planet1OrbitDistanceToSunOrbitToPlanet2 * planet2OrbitDistanceToSunOrbit\n\
    \    let planet1", "    var planet1 = planet1.toLowerCase();\n    var planet2\
    \ = planet2.toLowerCase();\n    var planet1orbit = planet1.split(\"_\");\n   \
    \ var planet2orbit = planet2.split(\"_\");\n    var planet1orbitorbit = planet1orbit.concat(planet2orbit);\n\
    \    var planet1orbitorbitorbit = planet1orbitorbit.filter(function(x){return\
    \ x!=\"venus\"&&x!=\"mercury\"&&x!=\"earth\"&&x!=\"mars\"&&x!=\"jupiter\"&&x!=\"\
    saturn\"&&x!=\"uranus\"&&x!=\"neptune\"});\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbit.filter(function(x){return x!=\"venus\"&&x!=\"mercury\"\
    &&x!=\"earth\"&&x!=\"mars\"&&x!=\"jupiter\"&&x!=\"saturn\"&&x!=\"uranus\"&&x!=\"\
    neptune\"});\n    var planet1orbitorbitorbitorbitorbitorbit = planet1orbitorbitorbitorbitorbit.filter(function(x){return\
    \ x!=\"venus\"&&x!=\"mercury\"&&x!=\"earth\"&&x!=\"mars\"&&x!=\"jupiter\"&&x!=\"\
    saturn\"&&x!=\"uranus\"&&x!=\"neptune\"});\n    var planet1orbitorbitorbitorbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbitorbitorbit.filter(function(x){return x!=\"venus\"\
    &&x!=\"mercury\"&&x!=\"earth\"&&x!=\"mars\"&&x!=\"jupiter\"&&x!=\"saturn\"&&x!=\"\
    uranus\"&&x!=\"neptune\"});\n    var planet1orbitorbitorbitorbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbitorbitorbitorbit.filter(function(x){return x!=\"\
    venus\"&&x!=\"mercury\"&&x!=\"earth\"&&x!=\"mars\"&&x!=\"jupiter\"&&x!=\"saturn\"\
    &&x!=\"uranus\"&&x!=\"neptune\"});\n    var planet1orbitorbitorbitorbitorbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbitorbitorbitorbitorbit.filter(function(x){return\
    \ x!=\"ven", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1)\n\tlet planet2OrbitSun = orbit(planet2)\n\
    \tlet planet", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit =\
    \ orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1Orbit", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitDistance = distance(planet1Orbit);\n\
    \tlet planet2OrbitDistance = distance(planet2Orbit);\n\tlet planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunDistance;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunDistance;\n\tlet planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5AndPlanet6\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun + planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet", "\tlet\
    \ planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet planet1OrbitToSun\
    \ = planet1Orbit.distanceTo(sun)\n\tlet planet2OrbitToSun = planet2Orbit.distanceTo(sun)\n\
    \tlet planet1OrbitToPlanet2 = planet1Orbit.distanceTo(planet2)\n\tlet planet2OrbitToPlanet2\
    \ = planet2Orbit.distanceTo(planet2)\n\tlet planet1OrbitToPlanet1 = planet1Orbit.distanceTo(planet1)\n\
    \tlet planet2OrbitToPlanet1 = planet2Orbit.distanceTo(planet1)\n\tlet planet1OrbitToSun\
    \ = planet1Orbit.distanceTo(sun)\n\tlet planet2OrbitToSun = planet2Orbit.distanceTo(sun)\n\
    \tlet planet1OrbitToPlanet2 = planet1Orbit.distanceTo(planet2)\n\tlet planet2OrbitToPlanet2\
    \ = planet2Orbit.distanceTo(planet2)\n\tlet planet1OrbitToPlanet1 = planet1Orbit.distanceTo(planet1)\n\
    \tlet planet2OrbitToPlanet1 = planet2Orbit.distanceTo(planet1)\n\tlet planet1OrbitToSun\
    \ = planet1Orbit.distanceTo(sun)\n\tlet planet2OrbitToSun = planet2Orbit.distanceTo(sun)\n\
    \tlet planet1OrbitToPlanet2 = planet1Orbit.distanceTo(planet2)\n\tlet planet2OrbitToPlanet2\
    \ = planet2Orbit.distanceTo(planet2)\n\tlet planet1OrbitToPlanet1 = planet1Orbit.distanceTo(planet1)\n\
    \tlet planet2OrbitToPlanet1 = planet2Orbit.distanceTo(planet1)\n\tlet planet1OrbitToSun\
    \ = planet1Orbit.distanceTo(sun)\n\tlet planet2OrbitToSun = planet2Orbit.distanceTo(sun)\n\
    \tlet planet1OrbitToPlanet2 = planet1Orbit.distanceTo(planet2)\n\tlet planet2OrbitToPlanet2\
    \ = planet2Orbit.", "  if(planet1 === planet2){\n    return [];\n  }\n  if(planet1\
    \ === \"Mercury\"){\n    return [\"Venus\"];\n  }\n  if(planet1 === \"Venus\"\
    ){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"];\n  }\n  if(planet1\
    \ === \"Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n\
    \  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"\
    ];\n  }\n  if(planet1 === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n\
    \  }\n  if(planet1 === \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1\
    \ === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet1 === \"Neptune\"\
    ){\n    return [\"Mercury\"];\n  }\n  if(planet2 === \"Mercury\"){\n    return\
    \ [\"Venus\"];\n  }\n  if(planet2 === \"Venus\"){\n    return [\"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\"];\n  }\n  if(planet2 === \"Earth\"){\n    return [\"\
    Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Mars\"\
    ){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"\
    Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Saturn\"\
    ){\n    return [\"Uranus\"];\n  }\n  if(planet2 === \"Uranus\"){\n    return [\"\
    Neptune\"];\n  }\n  if(planet2 === \"Neptune\"){\n    return [\"Mercury\"];\n\
    \  }\n}\n", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1OrbitSun = planet1Orbit.sun\n\tlet planet2OrbitSun = planet2Orbit.sun\n\
    \tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun)\n\t\
    let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun)\n\t\
    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \tlet planet1OrbitSunDistanceSquaredSquared = planet1OrbitSunDistanceSquared *\
    \ planet1OrbitSunDistanceSquared\n\tlet planet2OrbitSunDistanceSquaredSquared\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n\tlet planet1OrbitSunDistanceSquaredCubed\
    \ = planet1OrbitSunDistanceSquared * planet1OrbitSunDistanceSquared\n\tlet planet2OrbitSunDistanceSquaredCubed\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n\tlet planet1OrbitSunDistanceSquaredCubedSquared\
    \ = planet1OrbitSunDistanceSquaredCubed * planet1OrbitSunDistanceSquaredCubed\n\
    \tlet planet2OrbitSunDistanceSquaredCubedSquared = planet2OrbitSunDistanceSquaredCubed\
    \ * planet2OrbitSunDistanceSquaredCubed\n\tlet planet1OrbitSunDistanceSquaredCubedCubed\
    \ = planet1OrbitSunDistanceSquaredCubed * planet1OrbitSunDistanceSquaredCubed\n\
    \tlet planet2OrbitSunDistanceSquaredCubedCubed = planet2OrbitSunDistanceSquaredCubed\
    \ * planet2OrbitSunDistanceSquaredCubed\n\tlet planet1OrbitSunDistanceSquaredCubedCubedSquared\
    \ = planet1OrbitSunDistanceSquaredCubedCubed * planet1OrbitSunDistanceSquaredCubedCubed\n\
    \tlet planet2OrbitSunDistanceSquared", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n    let planet2OrbitSun\
    \ = planet2Orbit.sun;\n    let planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \    let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistance", "    let planet1Orbit = orbit(planet1);\n \
    \   let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit.slice(planet1OrbitIndex).length;\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).length;\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(\"Sun\");\n    let planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(\"Sun\");\n    let planet1OrbitDistanceToSunOrbit\
    \ = planet1OrbitDistanceToSun / planet1Orbit.length;\n    let planet2OrbitDistanceToSunOrbit\
    \ = planet2OrbitDistanceToSun / planet2Orbit.length;\n    let planet1OrbitDistanceToSunOrbitIndex\
    \ = planet1Orbit.indexOf(planet2Orbit.slice(planet2OrbitIndex).indexOf(\"Sun\"\
    ));\n    let planet2OrbitDistanceToSunOrbitIndex = planet2Orbit.indexOf(planet1Orbit.slice(planet1OrbitIndex).indexOf(\"\
    Sun\"));\n    let planet1OrbitDistanceToSunOrbitDistance = planet1OrbitDistanceToSunOrbit\
    \ - planet1OrbitDistanceToSunOrbitIndex;\n    let planet2OrbitDistanceToSunOrbitDistance\
    \ = planet2OrbitDistanceToSunOrbit - planet2OrbitDistanceToSunOrbitIndex;\n  \
    \  let planet1OrbitDistanceToSunOrbitDistanceToSun = planet1OrbitDistanceToSunOrbitDistance\
    \ - planet1OrbitDistanceToSunOrbitIndex * planet1OrbitDistanceToSunOrbit;\n  \
    \  let planet2OrbitDistanceToSunOrbitDistanceToSun = planet2OrbitDistanceToSunOrbitDistance\
    \ - planet2OrbitDistanceToSunOrbitIndex * planet2OrbitDistanceToSunOrbit;\n  \
    \  let planet1OrbitDistanceToSunOrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbitDistanceToSun\
    \ / planet1Orbit.length;\n    let plan", "    let planet1Orbit = orbit(planet1)\n\
    \    let planet2Orbit = orbit(planet2)\n    let planet1Sun = sun(planet1Orbit)\n\
    \    let planet2Sun = sun(planet2Orbit)\n    let planet1OrbitSun = orbit(planet1Orbit)\n\
    \    let planet2OrbitSun = orbit(planet2Orbit)\n    let planet1SunOrbitSun = orbit(planet1Sun)\n\
    \    let planet2SunOrbitSun = orbit(planet2Sun)\n    let planet1OrbitSunOrbitSun\
    \ = orbit(planet1OrbitSun)\n    let planet2OrbitSunOrbitSun = orbit(planet2OrbitSun)\n\
    \    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun)\n  \
    \  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun)\n    let\
    \ planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun)\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun)\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun)\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit.slice(planet1OrbitIndex).sort((a,b)=>a-b);\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).sort((a,b)=>a-b);\n    let planet1OrbitDistanceIndex\
    \ = planet1OrbitDistance.indexOf(planet2);\n    let planet2OrbitDistanceIndex\
    \ = planet2OrbitDistance.indexOf(planet1);\n    let planet1OrbitDistanceDistance\
    \ = planet1OrbitDistance.slice(planet1OrbitDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistanceDistance = planet2OrbitDistance.slice(planet2OrbitDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceDistanceIndex = planet1OrbitDistanceDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceDistanceIndex = planet2OrbitDistanceDistance.indexOf(planet1);\n\
    \    let planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistance.slice(planet1OrbitDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistance.slice(planet2OrbitDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceDistanceDistanceIndex = planet2OrbitDistanceDistanceDistance.indexOf(planet1);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistance.slice(planet1OrbitDistanceDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance.slice(planet2OrbitDistanceDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistanceDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistanceIndex = planet2", "  var\
    \ planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1OrbitSun = planet1Orbit.sun;\n  var planet2OrbitSun = planet2Orbit.sun;\n\
    \  var planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\
    \  var planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared", "    let planet1Orbit = orbit(planet1)\n\
    \    let planet2Orbit = orbit(planet2)\n    let planet1OrbitSun = planet1Orbit.sun\n\
    \    let planet2OrbitSun = planet2Orbit.sun\n    let planet1OrbitSunDistance =\
    \ planet1OrbitSun.distance(planet2OrbitSun)\n    let planet2OrbitSunDistance =\
    \ planet2OrbitSun.distance(planet1OrbitSun)\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquaredSquared\
    \ = planet1OrbitSunDistanceSquared * planet1OrbitSunDistanceSquared\n    let planet2OrbitSunDistanceSquaredSquared\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n    let planet1OrbitSunDistanceSquaredSquareRoot\
    \ = planet1OrbitSunDistanceSquared ** 0.5\n    let planet2OrbitSunDistanceSquaredSquareRoot\
    \ = planet2OrbitSunDistanceSquared ** 0.5\n    let planet1OrbitSunDistanceSquaredSquareRoot\
    \ = planet1OrbitSunDistanceSquared ** 0.5\n    let planet2OrbitSunDistanceSquaredSquareRoot\
    \ = planet2OrbitSunDistanceSquared ** 0.5\n    let planet1OrbitSunDistanceSquaredSquareRoot\
    \ = planet1OrbitSunDistanceSquared ** 0.5\n    let planet2OrbitSunDistanceSquaredSquareRoot\
    \ = planet2OrbitSunDistanceSquared ** 0.5\n    let planet1OrbitSunDistanceSquaredSquareRoot\
    \ = planet1OrbitSunDistanceSquared ** 0.5\n    let planet2OrbitSunDistanceSquaredSquareRoot\
    \ = planet2OrbitSunDistanceSquared ** 0.5\n    let planet1OrbitSunDistanceSquaredSquareRoot\
    \ = planet1OrbitSunDistanceSquared ** 0.5\n    let planet2OrbitSunDistanceSquaredSquareRoot\
    \ = planet2OrbitSunDistanceSquared ** 0.5\n    let planet1OrbitSunDistanceSquaredSquareRoot\
    \ = planet1OrbitSunDistanceSquared ** 0.5\n    let planet2OrbitSunDistanceSquaredSquare",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSunAndPlanet2 = orbit(planet1, planet2, true);\n\t\
    let planet2OrbitSunAndPlanet1 = orbit(planet2, planet1, true);\n\tlet planet1OrbitSunAndPlanet1AndPlanet2\
    \ = orbit(planet1, planet2, planet2, true);\n\tlet planet2OrbitSunAndPlanet1AndPlanet2\
    \ = orbit(planet2, planet1, planet2, true);\n\tlet planet1OrbitSunAndPlanet1AndPlanet2AndPlanet3\
    \ = orbit(planet1, planet2, planet3, true);\n\tlet planet2OrbitSunAndPlanet1AndPlanet2AndPlanet3\
    \ = orbit(planet2, planet1, planet3, true);\n\tlet planet1OrbitSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4\
    \ = orbit(planet1, planet2, planet3, planet4, true);\n\tlet planet2OrbitSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4\
    \ = orbit(planet2, planet1, planet3, planet4, true);\n\tlet planet1OrbitSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = orbit(planet1, planet2, planet3, planet4, planet5, true);\n\tlet planet2OrbitSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = orbit(planet2, planet1, planet3, planet4, planet5, true);\n\tlet planet1OrbitSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5AndPlanet6\
    \ = orbit(planet1, planet2, planet3, planet4, planet5, planet6, true);\n\tlet\
    \ planet2OrbitSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5AndPlanet6\
    \ = orbit(planet2, planet1, planet3, planet4, planet5, planet6, true);\n\tlet ",
  "  var planet1 = planet1.toLowerCase();\n  var planet2 = planet2.toLowerCase();\n\
    \  var planet1orbit = planet1orbits[planet1];\n  var planet2orbit = planet2orbits[planet2];\n\
    \  var planet1orbitorbit = planet1orbitorbits[planet1];\n  var planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n  var\
    \ planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit =\
    \ orbit(planet2)\n    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun =\
    \ sunOrbit(planet2)\n    let planet1OrbitSun = orbit(planet1, planet1Sun)\n  \
    \  let planet2OrbitSun = orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun)\n    let planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2, plan", "  var\
    \ planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1OrbitDistance = distance(planet1Orbit);\n  var planet2OrbitDistance =\
    \ distance(planet2Orbit);\n  var planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sun.distance;\n  var planet2OrbitDistanceToSun = planet2OrbitDistance - sun.distance;\n\
    \  var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSun / planet1Orbit.distance;\n\
    \  var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSun / planet2Orbit.distance;\n\
    \  var planet1OrbitDistanceToSunOrbitOrbit = planet1OrbitDistanceToSunOrbit *\
    \ planet1Orbit.distance;\n  var planet2OrbitDistanceToSunOrbitOrbit = planet2OrbitDistanceToSunOrbit\
    \ * planet2Orbit.distance;\n  var planet1OrbitDistanceToSunOrbitOrbitOrbit = planet1OrbitDistanceToSunOrbitOrbit\
    \ * planet1Orbit.distance;\n  var planet2OrbitDistanceToSunOrbitOrbitOrbit = planet2OrbitDistanceToSunOrbitOrbit\
    \ * planet2Orbit.distance;\n  var planet1OrbitDistanceToSunOrbitOrbitOrbitOrbit\
    \ = planet1OrbitDistanceToSunOrbitOrbitOrbit * planet1Orbit.distance;\n  var planet2OrbitDistanceToSunOrbitOrbitOrbitOrbit\
    \ = planet2OrbitDistanceToSunOrbitOrbitOrbit * planet2Orbit.distance;\n  var planet1OrbitDistanceToSunOrbitOrbitOrbitOrbit\
    \ = planet1OrbitDistanceToSunOrbitOrbitOrbitOrbit * planet1Orbit.distance;\n \
    \ var planet2OrbitDistanceToSunOrbitOrbitOrbitOrbit = planet2OrbitDistanceToSunOrbitOrbitOrbitOrbit\
    \ * planet2Orbit.distance;\n  var planet1OrbitDistanceToSunOrbitOrbitOrbitOrbitOrbit\
    \ = planet1OrbitDistanceToSunOrbitOrbitOrbitOrbit ", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\t\
    let planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n\tlet\
    \ planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit);\n\
    \tlet planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit);\n\tlet planet2OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit);\n\
    \tlet planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit, planet1OrbitSunOrbitOrbitOrbit);\n\
    \tlet planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit, planet2OrbitSunOrbitOrbitOrbit);\n\
    \tlet planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1Orbit",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitToSun = planet1Orbit.orbit(sun);\n    let planet2OrbitToSun\
    \ = planet2Orbit.orbit(sun);\n    let planet1OrbitToPlanet2 = planet1Orbit.orbit(planet2);\n\
    \    let planet2OrbitToPlanet2 = planet2Orbit.orbit(planet2);\n    let planet1OrbitToPlanet1\
    \ = planet1Orbit.orbit(planet1);\n    let planet2OrbitToPlanet1 = planet2Orbit.orbit(planet1);\n\
    \    let planet1OrbitToSun = planet1Orbit.orbit(sun);\n    let planet2OrbitToSun\
    \ = planet2Orbit.orbit(sun);\n    let planet1OrbitToPlanet2 = planet1Orbit.orbit(planet2);\n\
    \    let planet2OrbitToPlanet2 = planet2Orbit.orbit(planet2);\n    let planet1OrbitToPlanet1\
    \ = planet1Orbit.orbit(planet1);\n    let planet2OrbitToPlanet1 = planet2Orbit.orbit(planet1);\n\
    \    let planet1OrbitToSun = planet1Orbit.orbit(sun);\n    let planet2OrbitToSun\
    \ = planet2Orbit.orbit(sun);\n    let planet1OrbitToPlanet2 = planet1Orbit.orbit(planet2);\n\
    \    let planet2OrbitToPlanet2 = planet2Orbit.orbit(planet2);\n    let planet1OrbitToPlanet1\
    \ = planet1Orbit.orbit(planet1);\n    let planet2OrbitToPlanet1 = planet2Orbit.orbit(planet1);\n\
    \    let planet1OrbitToSun = planet1Orbit.orbit(sun);\n    let planet2OrbitToSun\
    \ = planet2Orbit.orbit(sun);\n    let planet1OrbitToPlanet2 = planet1Orbit.orbit(planet2);\n\
    \    let planet2OrbitToPlanet2 = planet2Orbit.orbit(planet2);\n    let planet1OrbitToPlanet1\
    \ = planet1Orbit.orbit(", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1Orbit);\n    let planet2Sun\
    \ = sunOrbit(planet2Orbit);\n    let planet1OrbitSun = orbit(planet1Orbit);\n\
    \    let planet2OrbitSun = orbit(planet2Orbit);\n    let planet1SunOrbitSun =\
    \ orbit(planet1Sun);\n    let planet2SunOrbitSun = orbit(planet2Sun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n \
    \   let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbit",
  "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet\
    \ planet1Sun = sun(planet1)\n\tlet planet2Sun = sun(planet2)\n\tlet planet1OrbitSun\
    \ = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun)\n\
    \tlet planet1OrbitSun2 = orbit(planet1, planet1Sun, planet2Sun)\n\tlet planet2OrbitSun2\
    \ = orbit(planet2, planet2Sun, planet1Sun)\n\tlet planet1OrbitSun3 = orbit(planet1,\
    \ planet1Sun, planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSun3 = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSun4 = orbit(planet1,\
    \ planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSun4\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun)\n\
    \tlet planet1OrbitSun5 = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun2)\n\tlet planet2OrbitSun5 = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun2, planet2OrbitSun2)\n\
    \tlet planet1OrbitSun6 = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun2, planet2OrbitSun2)\n\tlet planet2OrbitSun6\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun2,\
    \ planet2OrbitSun2, planet1OrbitSun3)\n\tlet planet1OrbitSun7 = orbit(planet1,\
    \ planet1Sun, planet2Sun, planet1Or", "\tlet planet1Orbit = orbit(planet1);\n\t\
    let planet2Orbit = orbit(planet2);\n\tlet planet1OrbitSun = planet1Orbit.sun;\n\
    \tlet planet2OrbitSun = planet2Orbit.sun;\n\tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \tlet planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2Orbit", "    var planet1Orbit =\
    \ orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \    var planet1OrbitLength = planet1Orbit.length;\n    var planet2OrbitLength\
    \ = planet2Orbit.length;\n    var planet1OrbitDistance = planet1OrbitIndex - planet2OrbitIndex;\n\
    \    var planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n    var\
    \ planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet", "  let planet1 = planet1.toLowerCase();\n  let planet2 = planet2.toLowerCase();\n\
    \  let planet1Orbit = planet1.split(\"_\");\n  let planet2Orbit = planet2.split(\"\
    _\");\n  let planet1Orbit = planet1Orbit[0];\n  let planet2Orbit = planet2Orbit[0];\n\
    \  let planet1OrbitOrbit = planet1Orbit.split(\"-\");\n  let planet2OrbitOrbit\
    \ = planet2Orbit.split(\"-\");\n  let planet1OrbitOrbit = planet1OrbitOrbit[0];\n\
    \  let planet2OrbitOrbit = planet2OrbitOrbit[0];\n  let planet1OrbitOrbitOrbit\
    \ = planet1OrbitOrbit.split(\"-\");\n  let planet2OrbitOrbitOrbit = planet2OrbitOrbit.split(\"\
    -\");\n  let planet1OrbitOrbitOrbit = planet1OrbitOrbitOrbit[0];\n  let planet2OrbitOrbitOrbit\
    \ = planet2OrbitOrbitOrbit[0];\n  let planet1OrbitOrbitOrbitOrbit = planet1OrbitOrbitOrbit.split(\"\
    -\");\n  let planet2OrbitOrbitOrbitOrbit = planet2OrbitOrbitOrbit.split(\"-\"\
    );\n  let planet1OrbitOrbitOrbitOrbitOrbit = planet1OrbitOrbitOrbitOrbit[0];\n\
    \  let planet2OrbitOrbitOrbitOrbitOrbit = planet2OrbitOrbitOrbitOrbit[0];\n  let\
    \ planet1OrbitOrbitOrbitOrbitOrbitOrbit = planet1OrbitOrbitOrbitOrbitOrbit.split(\"\
    -\");\n  let planet2OrbitOrbitOrbitOrbitOrbitOrbit = planet2OrbitOrbitOrbitOrbitOrbit[0];\n\
    \  let planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit = planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit.split(\"\
    -\");\n  let planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit = planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit[0];\n\
    \  let planet1OrbitOrbitOrbitOrbitOrbitOrbit", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sun();\n\tlet planet2Sun\
    \ = sun();\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n\tlet planet1OrbitPlanet2 = orbit(planet1, planet2);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet1);\n\tlet planet1OrbitPlanet1Sun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n\tlet planet2OrbitPlanet1Sun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun);\n\tlet planet1OrbitPlanet2Sun\
    \ = orbit(planet1, planet2, planet1Sun, planet2Sun);\n\tlet planet2OrbitPlanet2Sun\
    \ = orbit(planet2, planet1, planet2Sun, planet1Sun);\n\tlet planet1OrbitPlanet1Planet2\
    \ = orbit(planet1, planet2, planet1, planet2);\n\tlet planet2OrbitPlanet1Planet1\
    \ = orbit(planet2, planet1, planet1, planet2);\n\tlet planet1OrbitPlanet1Planet1Sun\
    \ = orbit(planet1, planet2, planet1, planet1Sun, planet2OrbitSun);\n\tlet planet2OrbitPlanet1Planet1Sun\
    \ = orbit(planet2, planet1, planet1, planet1Sun, planet1OrbitSun);\n\tlet planet1OrbitPlanet1Planet2Sun\
    \ = orbit(planet1, planet2, planet1, planet2, planet1Sun, planet2OrbitSun);\n\t\
    let planet2OrbitPlanet1Planet2Sun = orbit(planet2, planet1, planet1, planet2,\
    \ planet1Sun, planet1OrbitSun);\n\tlet planet1OrbitPlanet1Planet1Planet2 = orbit(planet1,\
    \ planet2, planet1, planet2, planet1, planet2);\n\tlet planet2OrbitPlanet", " \
    \ let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let\
    \ planet1OrbitSun = planet1Orbit.orbitalOrbit.sun\n  let planet2OrbitSun = planet2Orbit.orbitalOrbit.sun\n\
    \  let planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun)\n\
    \  let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun)\n\
    \  let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \  let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \  let planet1OrbitSunDistanceSquaredSquared = planet1OrbitSunDistanceSquared\
    \ * planet1OrbitSunDistanceSquared\n  let planet2OrbitSunDistanceSquaredSquared\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n  let planet1OrbitSunDistanceSquaredCubed\
    \ = planet1OrbitSunDistanceSquared * planet1OrbitSunDistanceSquared\n  let planet2OrbitSunDistanceSquaredCubed\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n  let planet1OrbitSunDistanceSquaredCubedSquared\
    \ = planet1OrbitSunDistanceSquaredCubed * planet1OrbitSunDistanceSquared\n  let\
    \ planet2OrbitSunDistanceSquaredCubedSquared = planet2OrbitSunDistanceSquaredCubed\
    \ * planet2OrbitSunDistanceSquared\n  let planet1OrbitSunDistanceSquaredCubedSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredCubedSquared * planet1OrbitSunDistanceSquared\n\
    \  let planet2OrbitSunDistanceSquaredCubedSquaredSquared = planet2OrbitSunDistanceSquaredCubedSquared\
    \ * planet2OrbitSunDistanceSquaredSquared\n  let planet1OrbitSunDistanceSquaredCubedSquaredCubed\
    \ = planet1OrbitSunDistanceSquaredCubedSquared * planet1OrbitSunDistanceSquared\n\
    \  let planet2OrbitSunDistanceSquaredCubedSquaredCubed = planet2", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\t\
    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\tlet\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ plan", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\t\
    let planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun)\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2Orbit", "  var planet1 = planet1.toLowerCase();\n\
    \  var planet2 = planet2.toLowerCase();\n  var planet1orbit = planet2orbit(planet1);\n\
    \  var planet2orbit = planet1orbit;\n  var planet1orbitorbit = planet2orbitorbit(planet1);\n\
    \  var planet1orbitorbitorbit = planet2orbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbitorbit\
    \ = planet2orbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbit = planet2orbitorbitorbitorbit(planet1);\n\
    \  var planet1orbitorbitorbit = planet2orbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbit\
    \ = planet2orbitorbitorbitorbit(planet1);\n  var planet1orbitorbitorbit = planet2orbitorbitorbitorbit(planet1);\n\
    \  var planet1orbitorbitorbit = planet2orbitorbitorbitorbit(planet1);\n  var ",
  "  if(planet1 === planet2){\n    return [];\n  }\n  let planet1orbit = orbit(planet1);\n\
    \  let planet2orbit = orbit(planet2);\n  let planet1orbitdistance = planet1orbit.distanceTo(sun);\n\
    \  let planet2orbitdistance = planet2orbit.distanceTo(sun);\n  let planet1orbitorbit\
    \ = planet1orbit.orbit(planet2);\n  let planet2orbitorbit = planet2orbit.orbit(planet1);\n\
    \  let planet1orbitorbitdistance = planet1orbitorbit.distanceTo(sun);\n  let planet2orbitorbitdistance\
    \ = planet2orbitorbit.distanceTo(sun);\n  let planet1orbitorbitorbit = planet1orbitorbit.orbit(planet2);\n\
    \  let planet2orbitorbitorbit = planet2orbitorbit.orbit(planet1);\n  let planet1orbitorbitorbitdistance\
    \ = planet1orbitorbitorbit.distanceTo(sun);\n  let planet2orbitorbitorbitdistance\
    \ = planet2orbitorbitorbit.distanceTo(sun);\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbit.orbit(planet2);\n  let planet2orbitorbitorbit = planet2orbitorbit.orbit(planet1);\n\
    \  let planet1orbitorbitorbitdistance = planet1orbitorbitorbit.distanceTo(sun);\n\
    \  let planet2orbitorbitorbitdistance = planet2orbitorbitorbit.distanceTo(sun);\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.orbit(planet2);\n\
    \  let planet2orbitorbitorbit = planet2orbitorbit.orbit(planet1);\n  let planet1orbitorbitorbitdistance\
    \ = planet1orbitorbitorbit.distanceTo(sun);\n  let planet2orbitorbitorbitdistance\
    \ = planet2orbitorbitorbit.distanceTo(sun);\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbit.orbit(planet2);\n  let planet2orbitorbitorbit = planet2orbitorbit.orbit(planet1);\n\
    \  let planet1orbitorbitorbitdistance = planet1orbitorbitorbit.distanceTo(sun);\n\
    \  let planet2orbitorbitorbitdistance = planet2orbitorbitorbit.distanceTo(sun);\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.orbit(planet2);\n\
    \  let planet2orbitorbitorbit = planet2orbitorbit.orbit(planet1);\n", "  var planet1Orbit\
    \ = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var planet1OrbitSun\
    \ = planet1Orbit.sun;\n  var planet2OrbitSun = planet2Orbit.sun;\n  var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distance(planet2OrbitSun);\n  var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distance(planet1OrbitSun);\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    let planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    let planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n    let\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquaredMinusPlanet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMin",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n    var\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    var planet1OrbitDistance", "    let planet1 = planet1.toLowerCase();\n  \
    \  let planet2 = planet2.toLowerCase();\n    let planet1Orbit = planet1.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet2Orbit = planet2.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbit = planet1.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbit = planet2.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbitOrbit = planet1.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbitOrbit = planet2.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbitOrbitOrbit = planet1.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbitOrbitOrbit = planet2.includes(\"\
    mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"earth\";\n    let planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"earth", "  if(planet1===\"\
    Mercury\" || planet1===\"Venus\" || planet1===\"Earth\" || planet1===\"Mars\"\
    \ || planet1===\"Jupiter\" || planet1===\"Saturn\" || planet1===\"Uranus\" ||\
    \ planet1===\"Neptune\"){\n    if(planet2===\"Mercury\" || planet2===\"Venus\"\
    \ || planet2===\"Earth\" || planet2===\"Mars\" || planet2===\"Jupiter\" || planet2===\"\
    Saturn\" || planet2===\"Uranus\" || planet2===\"Neptune\"){\n      return [planet1,\
    \ planet2];\n    }\n  }\n  if(planet2===\"Mercury\" || planet2===\"Venus\" ||\
    \ planet2===\"Earth\" || planet2===\"Mars\" || planet2===\"Jupiter\" || planet2===\"\
    Saturn\" || planet2===\"Uranus\" || planet2===\"Neptune\"){\n    return [planet2,\
    \ planet1];\n  }\n  if(planet1===\"Mercury\" || planet1===\"Venus\" || planet1===\"\
    Earth\" || planet1===\"Mars\" || planet1===\"Jupiter\" || planet1===\"Saturn\"\
    \ || planet1===\"Uranus\" || planet1===\"Neptune\"){\n    return [planet1, planet2];\n\
    \  }\n  if(planet2===\"Mercury\" || planet2===\"Venus\" || planet2===\"Earth\"\
    \ || planet2===\"Mars\" || planet2===\"Jupiter\" || planet2===\"Saturn\" || planet2===\"\
    Uranus\" || planet2===\"Neptune\"){\n    return [planet2, planet1];\n  }\n  if(planet1===\"\
    Mercury\" || planet1===\"Venus\" || planet1===\"Earth\" || planet1===\"Mars\"\
    \ || planet1===\"Jupiter\" || planet1===\"Saturn\" || planet1===\"Uranus\" ||\
    \ planet1===\"Neptune\"){\n    return [planet1, planet2];\n  }\n  if(planet2===\"\
    Mercury\" || planet2===\"Venus\" || planet2===\"Earth\" || planet", "\tlet planet1Orbit\
    \ = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet planet1Sun = sunOrbit(planet1)\n\
    \tlet planet2Sun = sunOrbit(planet2)\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun)\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun)\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun)\n\tlet planet1OrbitSunOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun)\n\tlet planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOr",
  "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1OrbitSun = planet1Orbit.orbit(sun);\n  var planet2OrbitSun = planet2Orbit.orbit(sun);\n\
    \  var planet1OrbitSunSun = planet1OrbitSun.orbit(sun);\n  var planet2OrbitSunSun\
    \ = planet2OrbitSun.orbit(sun);\n  var planet1OrbitSunSunSun = planet1OrbitSunSun.orbit(sun);\n\
    \  var planet2OrbitSunSunSun = planet2OrbitSunSun.orbit(sun);\n  var planet1OrbitSunSunSunSun\
    \ = planet1OrbitSunSunSun.orbit(sun);\n  var planet2OrbitSunSunSunSun = planet2OrbitSunSunSun.orbit(sun);\n\
    \  var planet1OrbitSunSunSunSunSun = planet1OrbitSunSunSunSun.orbit(sun);\n  var\
    \ planet2OrbitSunSunSunSunSun = planet2OrbitSunSunSunSun.orbit(sun);\n  var planet1OrbitSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSun.orbit(sun);\n  var planet2OrbitSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSun.orbit(sun);\n  var planet1OrbitSunSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSunSun.orbit(sun);\n  var planet2OrbitSunSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSunSun.orbit(sun);\n  var planet1OrbitSunSunSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSunSunSunSun.orbit(sun);\n  var planet2OrbitSunSunSunSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSunSunSunSunSun.orbit(sun);\n  var planet1OrbitSunSunSunSunSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSunSunSunSunSunSun.orbit(sun);\n  var planet2OrbitSunSunSunSunSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSunSun", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared;\n\
    \    var planet2OrbitDistanceSquaredSquared = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2Orbit",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitLength = planet1Orbit.length;\n\
    \tlet planet2OrbitLength = planet2Orbit.length;\n\tlet planet1OrbitDistance =\
    \ planet1OrbitIndex - planet2OrbitIndex;\n\tlet planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - planet1OrbitLength;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - planet2OrbitLength;\n\tlet planet1Or", "  let planet1Orbit = orbit(planet1);\n\
    \  let planet2Orbit = orbit(planet2);\n  let planet1OrbitDistance = distance(planet1Orbit);\n\
    \  let planet2OrbitDistance = distance(planet2Orbit);\n  let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunDistance;\n  let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunDistance;\n  let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n  let planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n  let planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n  let planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n  let planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistance", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit\
    \ = orbit(planet2)\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2)\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1)\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex] - planet2Orbit[planet2OrbitIndex]\n    let\
    \ planet2OrbitDistance = planet2Orbit[planet2OrbitIndex] - planet1Orbit[planet1OrbitIndex]\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance\n\
    \    let planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared\n\
    \    let planet2OrbitDistanceSquaredSquared = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared\n\
    \    let planet1OrbitDistanceSquaredSquaredSquared = planet1OrbitDistanceSquaredSquared\
    \ * planet1OrbitDistanceSquaredSquared\n    let planet2OrbitDistanceSquaredSquaredSquared\
    \ = planet2OrbitDistanceSquaredSquared * planet2OrbitDistanceSquaredSquared\n\
    \    let planet1OrbitDistanceSquaredSquaredSquared = planet1OrbitDistanceSquaredSquared\
    \ * planet1OrbitDistanceSquaredSquared\n    let planet2OrbitDistanceSquaredSquaredSquared\
    \ = planet2OrbitDistanceSquaredSquared * planet2OrbitDistanceSquaredSquared\n\
    \    let planet1OrbitDistanceSquaredSquaredSquaredSquared = planet1OrbitDistanceSquaredSquared\
    \ * planet1OrbitDistanceSquaredSquaredSquared\n    let planet2OrbitDistanceSquaredSquaredSquaredSquared\
    \ = planet2OrbitDistanceSquaredSquared * planet2OrbitDistanceSquaredSquaredSquared\n\
    \    let planet1OrbitDistanceSquaredSquaredSquaredSquared = planet1OrbitDistanceSquaredSquared\
    \ * planet1OrbitDistanceSquaredSquaredSquared\n    let planet2OrbitDistanceSquaredSquaredSquaredSquared\
    \ = planet2", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit =\
    \ orbit(planet2);\n    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun\
    \ = planet2Orbit.sun;\n    var planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n\tlet planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n\tlet planet1OrbitDistanceInRadians = planet1OrbitDistance\
    \ * Math.PI / 180;\n\tlet planet2OrbitDistanceInRadians = planet2OrbitDistance\
    \ * Math.PI / 180;\n\tlet planet1OrbitDistanceInDegrees = planet1OrbitDistance\
    \ * 180 / Math.PI;\n\tlet planet2OrbitDistanceInDegrees = planet2OrbitDistance\
    \ * 180 / Math.PI;\n\tlet planet1OrbitDistanceInRadiansOrDegrees = planet1OrbitDistanceInRadians\
    \ / Math.PI * 180;\n\tlet planet2OrbitDistanceInRadiansOrDegrees = planet2OrbitDistanceInRadians\
    \ / Math.PI * 180;\n\tlet planet1OrbitDistanceInDegreesOrRadians = planet1OrbitDistanceInDegrees\
    \ / Math.PI * 180;\n\tlet planet2OrbitDistanceInDegreesOrRadians = planet2OrbitDistanceInDegrees\
    \ / Math.PI * 180;\n\tlet planet1OrbitDistanceInRadiansOrDegreesOrRadians = planet1OrbitDistanceInRadiansOrDegrees\
    \ / Math.PI * 180;\n\tlet planet2OrbitDistanceInRadiansOrDegreesOrRadians = planet2OrbitDistanceInRadiansOrDegrees\
    \ / Math.PI * 180;\n\tlet planet1OrbitDistanceInDegreesOrRadiansOrDegrees = planet1OrbitDistanceInDegreesOrRadians\
    \ / Math.PI * 180;\n\tlet planet2OrbitDistanceInDegreesOrRadiansOrDegrees = planet2OrbitDistanceInDegreesOrRadians\
    \ / Math.PI * 180;\n\tlet planet1OrbitDistanceInRadiansOrDegreesOrRadiansOrDegrees\
    \ = planet1OrbitDistanceInRadiansOrDegreesOrRadians / ", "\tlet planet1Orbit =\
    \ orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sun();\n\
    \tlet planet2Sun = sun();\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitPlanet2\
    \ = orbit(planet1, planet2OrbitSun);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet1OrbitSun);\n\tlet planet1OrbitPlanet1Sun = orbit(planet1, planet1OrbitSun);\n\
    \tlet planet2OrbitPlanet2Sun = orbit(planet2, planet2OrbitSun);\n\tlet planet1OrbitPlanet1OrbitSun\
    \ = orbit(planet1, planet1OrbitSun, planet2OrbitSun);\n\tlet planet2OrbitPlanet2OrbitSun\
    \ = orbit(planet2, planet1OrbitSun, planet2OrbitSun);\n\tlet planet1OrbitPlanet1OrbitPlanet2OrbitSun\
    \ = orbit(planet1, planet1OrbitSun, planet2OrbitSun, planet1OrbitPlanet2OrbitSun);\n\
    \tlet planet2OrbitPlanet2OrbitPlanet1OrbitSun = orbit(planet2, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitPlanet2OrbitSun);\n\tlet planet1OrbitPlanet1OrbitPlanet2OrbitPlanet1OrbitSun\
    \ = orbit(planet1, planet1OrbitSun, planet2OrbitSun, planet1OrbitPlanet2OrbitSun,\
    \ planet1OrbitPlanet1OrbitSun);\n\tlet planet2OrbitPlanet2OrbitPlanet1OrbitPlanet2OrbitSun\
    \ = orbit(planet2, planet1OrbitSun, planet2OrbitSun, planet1OrbitPlanet2OrbitSun,\
    \ planet2OrbitPlanet1OrbitSun);\n\tlet planet1OrbitPlanet1OrbitPlanet2OrbitPlanet1Orbit",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sun(planet1Orbit);\n    let planet2Sun = sun(planet2Orbit);\n\
    \    let planet1SunOrbit = orbit(planet1Sun);\n    let planet2SunOrbit = orbit(planet2Sun);\n\
    \    let planet1SunSun = sun(planet1SunOrbit);\n    let planet2SunSun = sun(planet2SunOrbit);\n\
    \    let planet1SunSunOrbit = orbit(planet1SunSun);\n    let planet2SunSunOrbit\
    \ = orbit(planet2SunSun);\n    let planet1SunSunSun = sun(planet1SunSunOrbit);\n\
    \    let planet2SunSunSun = sun(planet2SunSunOrbit);\n    let planet1SunSunSunOrbit\
    \ = orbit(planet1SunSunSun);\n    let planet2SunSunSunOrbit = orbit(planet2SunSunSun);\n\
    \    let planet1SunSunSunSun = sun(planet1SunSunSunOrbit);\n    let planet2SunSunSunSun\
    \ = sun(planet2SunSunSunOrbit);\n    let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun);\n\
    \    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun);\n    let planet1SunSunSunSun\
    \ = sun(planet1SunSunSunSunOrbit);\n    let planet2SunSunSunSun = sun(planet2SunSunSunSunOrbit);\n\
    \    let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun);\n    let planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun);\n    let planet1SunSunSunSunSun = sun(planet1SunSunSunSunSunOrbit);\n\
    \    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSunSun);\n    let planet1SunSunSunSunSun\
    \ = sun(planet1SunSunSunSunSunOrbit);\n    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSunSun);\n\
    \    let planet1SunSunSunSun", "    let planet1Orbit = orbit(planet1);\n    let\
    \ planet2Orbit = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n  \
    \  let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n  \
    \  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistance\
    \ - planet2OrbitDistance;\n    let planet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet2OrbitDistance - planet1OrbitDistance;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2Orbit",
  "  if(planet1 === planet2){\n    return []\n  }\n  if(planet1 === \"Mercury\"){\n\
    \    return [\"Venus\"]\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1\
    \ === \"Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\",\
    \ \"Neptune\"]\n  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\", \"\
    Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Jupiter\"){\n    return\
    \ [\"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Saturn\"){\n\
    \    return [\"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Uranus\"){\n  \
    \  return [\"Neptune\"]\n  }\n  if(planet1 === \"Neptune\"){\n    return []\n\
    \  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"]\n  }\n  if(planet2\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"\
    Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n\
    \  if(planet2 === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\", \"Neptune\"\
    ]\n  }\n  if(planet2 === \"Saturn\"){\n    return [\"Uranus\", \"Neptune\"]\n\
    \  }\n  if(planet2 === \"Uranus\"){\n    return [\"Neptune\"]\n  }\n  if(planet2\
    \ === \"Neptune\"){\n    return []\n  }\n}\n", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n\
    \    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n  \
    \  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n\
    \    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance.pow(2);\n    let planet2OrbitSunDistanceSquared =\
    \ planet2OrbitSunDistance.pow(2);\n    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquared.minus(planet2OrbitSunDistanceSquared);\n  \
    \  let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared.minus(planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared);\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared.minus(planet2OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared);\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared.minus(planet2OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1Or",
  "  if(planet1 === planet2){\n    return [];\n  }\n  if(planet1 === \"Mercury\"){\n\
    \    return [\"Venus\"];\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\"];\n  }\n  if(planet1 === \"Earth\"){\n   \
    \ return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 ===\
    \ \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet1 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet1 === \"Neptune\"){\n    return [];\n\
    \  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n  if(planet2\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"];\n\
    \  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\"];\n  }\n  if(planet2 === \"Mars\"){\n    return [\"Jupiter\", \"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Jupiter\"){\n    return [\"Saturn\"\
    , \"Uranus\"];\n  }\n  if(planet2 === \"Saturn\"){\n    return [\"Uranus\"];\n\
    \  }\n  if(planet2 === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet2\
    \ === \"Neptune\"){\n    return [];\n  }\n}\n", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitSun = planet1Orbit.sun;\n\
    \    var planet2OrbitSun = planet2Orbit.sun;\n    var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistance",
  "  let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let\
    \ planet1OrbitIndex = planet1Orbit.indexOf(planet2)\n  let planet2OrbitIndex =\
    \ planet2Orbit.indexOf(planet1)\n  let planet1OrbitDistance = planet1OrbitIndex\
    \ - planet2OrbitIndex\n  let planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex\n\
    \  let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance\n\
    \  let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance\n\
    \  let planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared\n\
    \  let planet2OrbitDistanceSquaredSquared = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared\n  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared * planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ * planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2Or", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun(planet1Orbit);\n\
    \    let planet2Sun = sun(planet2Orbit);\n    let planet1OrbitSun = orbit(planet1Orbit);\n\
    \    let planet2OrbitSun = orbit(planet2Orbit);\n    let planet1SunOrbitSun =\
    \ orbit(planet1Sun);\n    let planet2SunOrbitSun = orbit(planet2Sun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n \
    \   let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun",
  "  if(planet1 === planet2){\n    return [];\n  }\n  if(planet1 === \"Mercury\"){\n\
    \    return [\"Venus\"];\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Earth\"\
    ){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet1 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet1 === \"Neptune\"){\n    return [];\n\
    \  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n  if(planet2\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\"];\n  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Mars\"){\n    return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Jupiter\"){\n    return [\"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Saturn\"){\n    return [\"Uranus\"\
    ];\n  }\n  if(planet2 === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet2\
    \ === \"Neptune\"){\n    return [];\n  }\n}\n", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n\
    \    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distance(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distance(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared",
  "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n  var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).indexOf(planet2);\n\
    \  var planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).indexOf(planet1);\n\
    \  var planet1OrbitDistanceIndex = planet1OrbitDistance - planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceDistance = planet1OrbitDistance.slice(planet1OrbitDistanceIndex).indexOf(planet2);\n\
    \  var planet2OrbitDistanceDistance = planet2OrbitDistance.slice(planet2OrbitDistanceIndex).indexOf(planet1);\n\
    \  var planet1OrbitDistanceDistanceIndex = planet1OrbitDistanceDistance - planet2OrbitDistanceDistance;\n\
    \  var planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistance.slice(planet1OrbitDistanceDistanceIndex).indexOf(planet2);\n\
    \  var planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistance.slice(planet2OrbitDistanceDistanceIndex).indexOf(planet1);\n\
    \  var planet1OrbitDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistance\
    \ - planet2OrbitDistanceDistanceDistance;\n  var planet1OrbitDistanceDistanceDistanceDistance\
    \ = planet1OrbitDistanceDistanceDistance.slice(planet1OrbitDistanceDistanceDistanceIndex).indexOf(planet2);\n\
    \  var planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance.slice(planet2OrbitDistanceDistanceIndex).indexOf(planet1);\n\
    \  var planet1OrbitDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistance\
    \ - planet2OrbitDistanceDistanceDistanceDistance;\n  var planet1OrbitDistanceDistanceDistanceDistanceDistance\
    \ = planet1OrbitDistanceDistanceDistanceDistance.slice(planet1OrbitDistanceDistanceDistanceIndex).indexOf(planet2);\n\
    \  var planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistanceDistance.slice(planet2OrbitDistanceDistanceDistanceIndex).indexOf(planet1);\n\
    \  var planet1OrbitDistanceDistanceDistanceDistanceDistance = planet", "    let\
    \ planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n   \
    \ let planet1OrbitSun = orbit(planet1, true);\n    let planet2OrbitSun = orbit(planet2,\
    \ true);\n    let planet1OrbitSunAndPlanet2 = orbit(planet1, true).filter(x =>\
    \ x === planet2);\n    let planet2OrbitSunAndPlanet1 = orbit(planet2, true).filter(x\
    \ => x === planet1);\n    let planet1OrbitSunAndPlanet2AndPlanet1 = orbit(planet1,\
    \ true).filter(x => x === planet2).filter(x => x === planet1);\n    let planet2OrbitSunAndPlanet1AndPlanet2\
    \ = orbit(planet2, true).filter(x => x === planet1).filter(x => x === planet2);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2 = orbit(planet1, true).filter(x\
    \ => x === planet2).filter(x => x === planet1).filter(x => x === planet2);\n \
    \   let planet2OrbitSunAndPlanet1AndPlanet2AndPlanet1 = orbit(planet2, true).filter(x\
    \ => x === planet1).filter(x => x === planet2).filter(x => x === planet1);\n \
    \   let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1 = orbit(planet1,\
    \ true).filter(x => x === planet2).filter(x => x === planet1).filter(x => x ===\
    \ planet2).filter(x => x === planet1);\n    let planet2OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet2, true).filter(x => x === planet1).filter(x => x === planet2).filter(x\
    \ => x === planet1).filter(x => x === planet2);\n    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, true).filter(x => x === planet2).filter(x => x === planet1).filter(x\
    \ => x === planet2).filter(x => x === planet1).filter(x => x === planet2);\n \
    \   let planet2OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlan", "  if(planet1 ===\
    \ planet2){\n    return []\n  }\n  if(planet1 === \"Mercury\"){\n    return [\"\
    Venus\"]\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\", \"Mars\",\
    \ \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"\
    Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    ]\n  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"]\n  }\n  if(planet1 === \"Jupiter\"){\n    return [\"Saturn\", \"\
    Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Saturn\"){\n    return [\"Uranus\"\
    , \"Neptune\"]\n  }\n  if(planet1 === \"Uranus\"){\n    return [\"Neptune\"]\n\
    \  }\n  if(planet1 === \"Neptune\"){\n    return []\n  }\n  if(planet2 === \"\
    Mercury\"){\n    return [\"Venus\"]\n  }\n  if(planet2 === \"Venus\"){\n    return\
    \ [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n\
    \  if(planet2 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\",\
    \ \"Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"Mars\"){\n    return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"Jupiter\"){\n\
    \    return [\"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"Saturn\"\
    ){\n    return [\"Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"Uranus\"){\n\
    \    return [\"Neptune\"]\n  }\n  if(planet2 === \"Neptune\"){\n    return []\n\
    \  }\n}\n", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitSun = planet1Orbit.sun;\n    let planet2OrbitSun = planet2Orbit.sun;\n\
    \    let planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\
    \    let planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\
    \    let planet1OrbitSunDistanceInRadians = planet1OrbitSunDistance * Math.PI\
    \ / 180;\n    let planet2OrbitSunDistanceInRadians = planet2OrbitSunDistance *\
    \ Math.PI / 180;\n    let planet1OrbitSunDistanceInRadiansDiff = planet1OrbitSunDistanceInRadians\
    \ - planet2OrbitSunDistanceInRadians;\n    let planet1OrbitSunDistanceInRadiansDiffInRadians\
    \ = planet1OrbitSunDistanceInRadiansDiff * 180 / Math.PI;\n    let planet1OrbitSunDistanceInRadiansDiffInDegrees\
    \ = planet1OrbitSunDistanceInRadiansDiffInRadians * 360 / Math.PI;\n    let planet1OrbitSunDistanceInRadiansDiffInDegreesString\
    \ = planet1OrbitSunDistanceInRadiansDiffInRadians.toFixed(2);\n    let planet2OrbitSunDistanceInRadiansDiffInRadians\
    \ = planet2OrbitSunDistanceInRadians - planet1OrbitSunDistanceInRadians;\n   \
    \ let planet2OrbitSunDistanceInRadiansDiffInRadians = planet2OrbitSunDistanceInRadiansDiff\
    \ * 180 / Math.PI;\n    let planet2OrbitSunDistanceInRadiansDiffInDegrees = planet2OrbitSunDistanceInRadiansDiffInRadians\
    \ * 360 / Math.PI;\n    let planet2OrbitSunDistanceInRadiansDiffInDegreesString\
    \ = planet2OrbitSunDistanceInRadiansDiffInRadians.toFixed(2);\n    let planet1OrbitSunDistanceInRadiansDiffInDegreesString\
    \ = planet1OrbitSunDistanceInRadiansDiffInDegrees.toFixed(2);\n    let planet2OrbitSunDistanceInRadiansDiffInDegreesString\
    \ = planet2OrbitSunDistanceIn", "    let planet1Orbit = orbit(planet1);\n    let\
    \ planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance * planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ * planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMin", "\t\
    let planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet\
    \ planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\tlet\
    \ planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun)\n\tlet\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1Sun = sunOrbit(planet1Orbit);\n\tlet planet2Sun = sunOrbit(planet2Orbit);\n\
    \tlet planet1OrbitSun = orbit(planet1Orbit);\n\tlet planet2OrbitSun = orbit(planet2Orbit);\n\
    \tlet planet1SunOrbit = orbit(planet1Sun);\n\tlet planet2SunOrbit = orbit(planet2Sun);\n\
    \tlet planet1OrbitSunOrbit = orbit(planet1OrbitSun);\n\tlet planet2OrbitSunOrbit\
    \ = orbit(planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSun = orbit(planet1OrbitSunOrbit);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2OrbitSunOrbit);\n\tlet planet1OrbitSunOrbitSunSun\
    \ = orbit(planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunSun = orbit(planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunSunSun = orbit(planet1OrbitSunOrbitSunSun);\n\tlet\
    \ planet2OrbitSunOrbitSunSunSun = orbit(planet2OrbitSunOrbitSunSun);\n\tlet planet1OrbitSunOrbitSunSunSun\
    \ = orbit(planet1OrbitSunOrbitSunSunSun);\n\tlet planet2OrbitSunOrbitSunSunSun\
    \ = orbit(planet2OrbitSunOrbitSunSunSun);\n\tlet planet1OrbitSunOrbitSunSunSun\
    \ = orbit(planet1OrbitSunOrbitSunSunSun);\n\tlet planet2OrbitSunOrbitSunSunSun\
    \ = orbit(planet2OrbitSunOrbitSunSunSun);\n\tlet planet1OrbitSunOrbitSunSunSun\
    \ = orbit(planet1OrbitSunOrbitSunSunSun);\n\tlet planet2OrbitSunOrbitSunSunSun\
    \ = orbit(planet2OrbitSunOrbitSunSunSun);\n\tlet planet1Or", "  var planet1Orbit\
    \ = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var planet1OrbitOrbit\
    \ = orbit(planet1Orbit);\n  var planet2OrbitOrbit = orbit(planet2Orbit);\n  var\
    \ planet1OrbitOrbitOrbit = orbit(planet1OrbitOrbit);\n  var planet2OrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbit);\n  var planet1OrbitOrbitOrbitOrbit = orbit(planet1OrbitOrbitOrbit);\n\
    \  var planet2OrbitOrbitOrbitOrbit = orbit(planet2OrbitOrbitOrbit);\n  var planet1OrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbit);\n  var planet2OrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbit);\n  var planet1OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbit);\n  var planet2OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbitOrbitOrbit);\n  var planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n  var planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n  var planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n  var planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n  var planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n  var planet2Orbit",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).length;\n\
    \tlet planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).length;\n\t\
    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunDistance(planet1);\n\
    \tlet planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance(planet2);\n\
    \tlet planet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSun = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSun\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2OrbitDistanceToSunAndPlanet1OrbitDistanceToSunAndPlanet2Orbit",
  "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1Sun = sunOrbit(planet1);\n  let planet2Sun = sunOrbit(planet2);\n  let\
    \ planet1OrbitSun = orbit(planet1, planet1Sun);\n  let planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n  let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \  let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n \
    \ let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \  let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbit);\n  let planet2OrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit);\n\
    \  let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit);\n  let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit,\
    \ planet1OrbitSunOrbitSun);\n  let planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit,\
    \ planet1OrbitSunOrbitSunOrbit);\n  let planet2OrbitSunOrbitSunOrbit", "    var\
    \ planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n   \
    \ var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1OrbitIndex\
    \ - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared;\n\
    \    var planet2OrbitDistanceSquaredSquared = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet", "  var planet1Orbit = orbit(planet1);\n\
    \  var planet2Orbit = orbit(planet2);\n  var planet1OrbitSun = planet1Orbit.sun;\n\
    \  var planet2OrbitSun = planet2Orbit.sun;\n  var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \  var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistance", "  if(planet1 === planet2){\n    return [];\n\
    \  }\n  if(planet1 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n  if(planet1\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\"];\n  }\n  if(planet1 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Jupiter\"){\n    return [\"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Saturn\"){\n    return [\"Uranus\"\
    ];\n  }\n  if(planet1 === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet1\
    \ === \"Neptune\"){\n    return [\"Mercury\"];\n  }\n  if(planet2 === \"Mercury\"\
    ){\n    return [\"Venus\"];\n  }\n  if(planet2 === \"Venus\"){\n    return [\"\
    Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 ===\
    \ \"Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n \
    \ }\n  if(planet2 === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"\
    ];\n  }\n  if(planet2 === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n\
    \  }\n  if(planet2 === \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet2\
    \ === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet2 === \"Neptune\"\
    ){\n    return [\"Mercury\"];\n  }\n}\n", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared;\n\
    \    let planet2OrbitDistanceSquaredSquared = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredSquared - planet2OrbitDistanceSquaredSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquaredSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet\
    \ planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet\
    \ planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet\
    \ planet", "    let planet1Orbit = planet1Orbit(planet1);\n    let planet2Orbit\
    \ = planet2Orbit(planet2);\n    let planet1OrbitIndex = planet1OrbitIndex(planet1);\n\
    \    let planet2OrbitIndex = planet2OrbitIndex(planet2);\n    let planet1OrbitDistance\
    \ = planet1OrbitDistance(planet1, planet2);\n    let planet2OrbitDistance = planet2OrbitDistance(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1", "    let planet1Orbit = orbit(planet1);\n    let\
    \ planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbital;\n\
    \    let planet2OrbitSun = planet2Orbit.orbital;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(sun);\n    let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(sun);\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1Orbit", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit);\n    let\
    \ planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSunOrbit);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbit, planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit,\
    \ planet2OrbitSunOrbit, planet1OrbitSunOrbitSunOrbit);\n    let planet2OrbitSunOrbitSunOrbit",
  "  if(planet1 === \"Mercury\" && planet2 === \"Earth\"){\n    return [\"Venus\"\
    ];\n  }\n  if(planet1 === \"Earth\" && planet2 === \"Venus\"){\n    return [\"\
    Mars\", \"Jupiter\", \"Saturn\"];\n  }\n  if(planet1 === \"Mars\" && planet2 ===\
    \ \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"\
    Jupiter\" && planet2 === \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1\
    \ === \"Saturn\" && planet2 === \"Uranus\"){\n    return [\"Mercury\"];\n  }\n\
    \  if(planet1 === \"Uranus\" && planet2 === \"Mercury\"){\n    return [\"Earth\"\
    ];\n  }\n  if(planet1 === \"Neptune\" && planet2 === \"Earth\"){\n    return [];\n\
    \  }\n}\n", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1Sun = sunOrbit(planet1Orbit);\n\tlet planet2Sun = sunOrbit(planet2Orbit);\n\
    \tlet planet1OrbitSun = orbit(planet1Orbit);\n\tlet planet2OrbitSun = orbit(planet2Orbit);\n\
    \tlet planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Sun);\n\tlet\
    \ planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Sun);\n\tlet planet1OrbitSunDistanceSorted\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted2\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted2\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted3\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted3\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted4\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted4\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted5\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted5\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted6\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted6\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted7\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet2OrbitSunDistanceSorted7\
    \ = sortByDistance(planet2OrbitSunDistance);\n\tlet planet1OrbitSunDistanceSorted8\
    \ = sortByDistance(planet1OrbitSunDistance);\n\tlet planet", "    var planets\
    \ = planet1.concat(planet2);\n    var sun = findSun();\n    var orbits = findOrbits(planets,\
    \ sun);\n    var result = [];\n    orbits.forEach(function(orbit){\n        if(orbit[0]\
    \ < orbit[1]){\n            result.push(orbit[0]);\n        }\n        else{\n\
    \            result.push(orbit[1]);\n        }\n    });\n    result.sort();\n\
    \    return result;\n}\n", "  var planet1 = planet1.toLowerCase();\n  var planet2\
    \ = planet2.toLowerCase();\n  var planet1orbit = orbits[planet1];\n  var planet2orbit\
    \ = orbits[planet2];\n  var planet1sun = sun;\n  var planet2sun = sun;\n  var\
    \ planet1orbitorbit = planet1orbit.orbit(planet2orbit);\n  var planet2orbitorbit\
    \ = planet2orbit.orbit(planet1orbit);\n  var planet1orbitsun = planet1orbitorbit.distance(planet2orbitorbit);\n\
    \  var planet2orbitsun = planet2orbitorbit.distance(planet1orbitsun);\n  var planet1orbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitsun);\n  var planet2orbitorbitsun =\
    \ planet2orbitorbit.distance(planet1orbitsun);\n  var planet1orbitorbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitorbitsun);\n  var planet2orbitorbitorbitsun\
    \ = planet2orbitorbit.distance(planet1orbitorbitsun);\n  var planet1orbitorbitorbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitorbitorbitsun);\n  var planet2orbitorbitorbitorbitsun\
    \ = planet2orbitorbit.distance(planet1orbitorbitsun);\n  var planet1orbitorbitorbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitorbitorbitorbitsun);\n  var planet2orbitorbitorbitorbitsun\
    \ = planet2orbitorbit.distance(planet1orbitorbitorbitsun);\n  var planet1orbitorbitorbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitorbitorbitorbitsun);\n  var planet2orbitorbitorbitorbitsun\
    \ = planet2orbitorbit.distance(planet1orbitorbitorbitsun);\n  var planet1orbitorbitorbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitorbitorbitorbitsun);\n  var planet2orbitorbitorbitorbitsun\
    \ = planet2orbitorbit.distance(planet1orbitorbitorbitsun);\n  var planet1orbitorbitorbitorbitsun\
    \ = planet1orbitorbit.distance(planet2orbitorbitorbitorbitsun);\n  var planet2orbitorbitorbitorbitsun\
    \ = planet2orbitorbit.distance(planet1orbitorbitorbitsun);\n  var planet1orbitorbitorbitorbitsun\
    \ = planet1orbitorbit", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit\
    \ = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n\tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \tlet planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \tlet planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitIndex = planet1Orbit.indexOf(planet1);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet2);\n\tlet planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared",
  "  if(planet1 === planet2){\n    return [];\n  }\n  if(planet1 === \"Mercury\"){\n\
    \    return [\"Venus\"];\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Earth\"\
    ){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet1 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet1 === \"Neptune\"){\n    return [\"\
    Mercury\"];\n  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n\
    \  if(planet2 === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Mars\"){\n  \
    \  return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Jupiter\"\
    ){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Saturn\"){\n\
    \    return [\"Uranus\"];\n  }\n  if(planet2 === \"Uranus\"){\n    return [\"\
    Neptune\"];\n  }\n  if(planet2 === \"Neptune\"){\n    return [\"Mercury\"];\n\
    \  }\n}\n", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1Sun = sun();\n\tlet planet2Sun = sun();\n\tlet planet1OrbitSun =\
    \ orbit(planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2Sun);\n\tlet planet1OrbitPlanet2\
    \ = orbit(planet1, planet2);\n\tlet planet2OrbitPlanet1 = orbit(planet2, planet1);\n\
    \tlet planet1OrbitPlanet1Sun = orbit(planet1Sun, planet1);\n\tlet planet2OrbitPlanet1Sun\
    \ = orbit(planet2Sun, planet1);\n\tlet planet1OrbitPlanet2Sun = orbit(planet1Sun,\
    \ planet2);\n\tlet planet2OrbitPlanet2Sun = orbit(planet2Sun, planet2);\n\tlet\
    \ planet1OrbitPlanet1Planet2 = orbit(planet1, planet2, planet2);\n\tlet planet2OrbitPlanet1Planet1\
    \ = orbit(planet2, planet1, planet1);\n\tlet planet1OrbitPlanet2Planet1 = orbit(planet1,\
    \ planet2, planet1);\n\tlet planet2OrbitPlanet2Planet1 = orbit(planet2, planet1,\
    \ planet2);\n\tlet planet1OrbitPlanet1Planet2Sun = orbit(planet1Sun, planet1,\
    \ planet2);\n\tlet planet2OrbitPlanet1Planet2Sun = orbit(planet2Sun, planet1,\
    \ planet2);\n\tlet planet1OrbitPlanet2Planet1Sun = orbit(planet1Sun, planet2,\
    \ planet1);\n\tlet planet2OrbitPlanet2Planet1Sun = orbit(planet2Sun, planet2,\
    \ planet1);\n\tlet planet1OrbitPlanet1Planet2Planet2 = orbit(planet1, planet2,\
    \ planet2, planet2);\n\tlet planet2OrbitPlanet1Planet2Planet1 = orbit(planet2,\
    \ planet1, planet2, planet1);\n\tlet planet1OrbitPlanet2Planet2Planet1 = orbit(planet1,\
    \ plan", "  if(planet1 === planet2){\n    return []\n  }\n  if(planet1 === \"\
    Mercury\"){\n    if(planet2 === \"Venus\"){\n      return [\"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    }\n    if(planet2 ===\
    \ \"Earth\"){\n      return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"\
    Neptune\"]\n    }\n    if(planet2 === \"Mars\"){\n      return [\"Jupiter\", \"\
    Saturn\", \"Uranus\", \"Neptune\"]\n    }\n    if(planet2 === \"Jupiter\"){\n\
    \      return [\"Saturn\", \"Uranus\", \"Neptune\"]\n    }\n    if(planet2 ===\
    \ \"Saturn\"){\n      return [\"Uranus\", \"Neptune\"]\n    }\n    if(planet2\
    \ === \"Uranus\"){\n      return [\"Neptune\"]\n    }\n    if(planet2 === \"Neptune\"\
    ){\n      return []\n    }\n  }\n  if(planet1 === \"Venus\"){\n    if(planet2\
    \ === \"Earth\"){\n      return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"]\n    }\n    if(planet2 === \"Mars\"){\n      return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\"]\n    }\n    if(planet2 === \"Jupiter\"\
    ){\n      return [\"Saturn\", \"Uranus\", \"Neptune\"]\n    }\n    if(planet2\
    \ === \"Saturn\"){\n      return [\"Uranus\", \"Neptune\"]\n    }\n    if(planet2\
    \ === \"Uranus\"){\n      return [\"Neptune\"]\n    }\n    if(planet2 === \"Neptune\"\
    ){\n      return []\n    }\n  }\n  if(planet1 === \"Earth\"){\n    if(planet2\
    \ === \"Mars\"){\n      return [\"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    ]\n    }\n    if(planet2 === \"Jupiter\"){\n      return [\"Saturn\", \"Uranus\"\
    , \"Neptune\"]\n    }\n    if(planet2 === \"Saturn\"){\n      return [\"Uranus\"\
    , \"Neptune\"]\n    }\n    if(planet2 === \"Uranus\"){\n      return [\"Neptune\"\
    ]\n    }\n    if(planet2 === \"Neptune\"){\n      return []\n    }\n  }", "  \
    \  let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sun(planet1Orbit)\n    let planet2Sun = sun(planet2Orbit)\n\
    \    let planet1OrbitSun = orbit(planet1Orbit)\n    let planet2OrbitSun = orbit(planet2Orbit)\n\
    \    let planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Sun)\n   \
    \ let planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Sun)\n    let\
    \ planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquaredSquared = planet1OrbitSunDistanceSquared\
    \ * planet1OrbitSunDistanceSquared\n    let planet2OrbitSunDistanceSquaredSquared\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n    let planet1OrbitSunDistanceSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared * planet1OrbitSunDistanceSquaredSquared\n\
    \    let planet2OrbitSunDistanceSquaredSquaredSquared = planet2OrbitSunDistanceSquaredSquared\
    \ * planet2OrbitSunDistanceSquaredSquared\n    let planet1OrbitSunDistanceSquaredSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared * planet1OrbitSunDistanceSquaredSquared\n\
    \    let planet2OrbitSunDistanceSquaredSquaredSquaredSquared = planet2OrbitSunDistanceSquaredSquared\
    \ * planet2OrbitSunDistanceSquaredSquaredSquared\n    let planet1OrbitSunDistanceSquaredSquaredSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquaredSquared * planet1OrbitSunDistanceSquaredSquaredSquared\n\
    \    let planet2OrbitSunDistanceSquaredSquaredSquaredSquaredSquared = planet2OrbitSunDistanceSquaredSquaredSquared\
    \ * planet2OrbitSunDistanceSquaredSquaredSquaredSquared\n    let planet1Orbit",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitSun = planet1Orbit.orbital;\n    let planet2OrbitSun = planet2Orbit.orbital;\n\
    \    let planet1OrbitSunDistance = planet1OrbitSun.distanceTo(sun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(sun);\n    let planet1OrbitSunDistanceSquared =\
    \ planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquared - planet2OrbitSunDistanceSquared;\n    let\
    \ planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquared;\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ - planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared;\n    let\
    \ planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared;\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet1Orbit",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n\
    \    var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistance", "    let planet1Orbit = orbit(planet1);\n \
    \   let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n\
    \    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistance",
  "  let planet1 = planet1.toLowerCase();\n  let planet2 = planet2.toLowerCase();\n\
    \  let planet1orbit = orbits[planet1];\n  let planet2orbit = orbits[planet2];\n\
    \  let planet1orbitorbit = orbits[planet1orbit];\n  let planet2orbitorbit = orbits[planet2orbit];\n\
    \  let planet1orbitorbitorbit = orbits[planet1orbitorbit];\n  let planet2orbitorbitorbit\
    \ = orbits[planet2orbitorbit];\n  let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n\
    \  let planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbitorbit];\n  let\
    \ planet1orbitorbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n  let\
    \ planet2orbitorbitorbitorbitorbit = orbits[planet2orbitorbitorbitorbit];\n  let\
    \ planet1orbitorbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n  let\
    \ planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbitorbit];\n  let planet1orbitorbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbitorbit];\n  let planet2orbitorbitorbitorbit =\
    \ orbits[planet2orbitorbitorbitorbit];\n  let planet1orbitorbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbitorbit];\n  let planet2orbitorbitorbitorbit =\
    \ orbits[planet2orbitorbitorbitorbit];\n  let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n\
    \  let planet2orbitorbitorbit = orbits[planet2orbitorbitorbit];\n  let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n  let planet2orbitorbitorbit = orbits[planet2orbitorbitorbit];\n\
    \  let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n  let planet2orbitorbitorbit\
    \ = orbits[planet2orbitorbitorbit];\n  let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n\
    \  let planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbitorbit];\n  let\
    \ planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n  let planet2orbitorbitorbit\
    \ = orbits[planet2orbitorbitorbit];\n  let planet1orbitorbitorbitorbit = orbits[plan",
  "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1Sun = sun(planet1Orbit);\n  let planet2Sun = sun(planet2Orbit);\n  let\
    \ planet1OrbitSun = orbit(planet1Orbit);\n  let planet2OrbitSun = orbit(planet2Orbit);\n\
    \  let planet1SunOrbitSun = orbit(planet1Sun);\n  let planet2SunOrbitSun = orbit(planet2Sun);\n\
    \  let planet1OrbitSunOrbitSun = orbit(planet1OrbitSun);\n  let planet2OrbitSunOrbitSun\
    \ = orbit(planet2OrbitSun);\n  let planet1SunOrbitSunOrbitSun = orbit(planet1SunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSun = orbit(planet2OrbitSun);\n  let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSun);\n  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOr", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1Sun = sunOrbit(planet1);\n\
    \    var planet2Sun = sunOrbit(planet2);\n    var planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    var planet2OrbitSun = orbit(planet2, planet2Sun);\n    var\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n    var\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n    var\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    var planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n    var planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n  \
    \  var planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    var planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    var planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSunOrbitSun);\n    var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1", "\tlet planet1Orbit = orbit(planet1)\n\t\
    let planet2Orbit = orbit(planet2)\n\tlet planet1Sun = sunOrbit(planet1)\n\tlet\
    \ planet2Sun = sunOrbit(planet2)\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun)\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun)\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun)\n\tlet planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun)\n\tlet planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2Orbit", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sun(planet1Orbit);\n\tlet planet2Sun = sun(planet2Orbit);\n\tlet planet1OrbitSun\
    \ = orbit(planet1Orbit);\n\tlet planet2OrbitSun = orbit(planet2Orbit);\n\tlet\
    \ planet1SunOrbitSun = orbit(planet1Sun);\n\tlet planet2SunOrbitSun = orbit(planet2Sun);\n\
    \tlet planet1OrbitSunOrbitSun = orbit(planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2OrbitSun);\n\tlet planet1SunOrbitSunOrbitSun = orbit(planet1SunOrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbit",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n\
    \    let planet1SunOrbit = planet1Orbit.filter(x => x.name === \"Sun\")\n    let\
    \ planet2SunOrbit = planet2Orbit.filter(x => x.name === \"Sun\")\n    let planet1SunSun\
    \ = planet1SunOrbit.filter(x => x.name === \"Sun\")\n    let planet2SunSun = planet2SunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunOrbit = planet1SunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunOrbit = planet2SunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSun = planet1SunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSun = planet2SunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunOrbit = planet1SunSunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunOrbit = planet2SunSunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSun = planet1SunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunOrbit = planet2SunSunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSun = planet1SunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunOrbit = planet2SunSunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSun = planet1SunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunOrbit = planet2SunSunSun.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSun = planet1SunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunOrbit = planet2SunSunSun.filter(x\
    \ => x.name === \"Sun\")\n    let plan", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitDistance = distance(planet1Orbit);\n\
    \tlet planet2OrbitDistance = distance(planet2Orbit);\n\tlet planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunDistance;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunDistance;\n\tlet planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5AndPlanet6\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitDistance\
    \ = distance(planet1Orbit);\n    let planet2OrbitDistance = distance(planet2Orbit);\n\
    \    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n    let\
    \ planet2OrbitDistanceToSun = planet2OrbitDistance - sunRadius;\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunRadius;\n    let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunRadius;\n    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n\
    \    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunRadius;\n    let\
    \ planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n    let planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - sunRadius;\n    let planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sunRadius;\n    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunRadius;\n\
    \    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n    let\
    \ planet2OrbitDistanceToSun = planet2OrbitDistance - sunRadius;\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunRadius;\n    let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunRadius;\n    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n\
    \    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunRadius;\n    let\
    \ planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n    let planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - sunRadius;\n    let planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sunRadius;\n    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunRadius;\n\
    \    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n    let\
    \ planet2OrbitDistanceToSun = planet2", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \    let planet2OrbitSun = planet2Orbit.orbit(sun);\n    let planet1OrbitPlanet1\
    \ = planet1OrbitSun.orbit(planet1);\n    let planet2OrbitPlanet1 = planet2OrbitSun.orbit(planet1);\n\
    \    let planet1OrbitPlanet2 = planet1OrbitSun.orbit(planet2);\n    let planet2OrbitPlanet2\
    \ = planet2OrbitSun.orbit(planet2);\n    let planet1OrbitPlanet3 = planet1OrbitSun.orbit(planet3);\n\
    \    let planet2OrbitPlanet3 = planet2OrbitSun.orbit(planet3);\n    let planet1OrbitPlanet4\
    \ = planet1OrbitSun.orbit(planet4);\n    let planet2OrbitPlanet4 = planet2OrbitSun.orbit(planet4);\n\
    \    let planet1OrbitPlanet5 = planet1OrbitSun.orbit(planet5);\n    let planet2OrbitPlanet5\
    \ = planet2OrbitSun.orbit(planet5);\n    let planet1OrbitPlanet6 = planet1OrbitSun.orbit(planet6);\n\
    \    let planet2OrbitPlanet6 = planet2OrbitSun.orbit(planet6);\n    let planet1OrbitPlanet7\
    \ = planet1OrbitSun.orbit(planet7);\n    let planet2OrbitPlanet7 = planet2OrbitSun.orbit(planet7);\n\
    \    let planet1OrbitPlanet8 = planet1OrbitSun.orbit(planet8);\n    let planet2OrbitPlanet8\
    \ = planet2OrbitSun.orbit(planet8);\n    let planet1OrbitPlanet9 = planet1OrbitSun.orbit(planet9);\n\
    \    let planet2OrbitPlanet9 = planet2OrbitSun.orbit(planet9);\n    let planet1OrbitPlanet10\
    \ = planet1OrbitSun.orbit(planet10);\n    let planet2OrbitPlanet10 = planet2OrbitSun.orbit(planet10);\n\
    \    let planet1OrbitPlanet", "    let planet1Orbit = orbit(planet1);\n    let\
    \ planet2Orbit = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n  \
    \  let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n  \
    \  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "  var planet1Orbit = orbit(planet1);\n\
    \  var planet2Orbit = orbit(planet2);\n  var planet1Sun = sun(planet1Orbit);\n\
    \  var planet2Sun = sun(planet2Orbit);\n  var planet1OrbitSun = orbit(planet1Orbit);\n\
    \  var planet2OrbitSun = orbit(planet2Orbit);\n  var planet1SunOrbitSun = orbit(planet1Sun);\n\
    \  var planet2SunOrbitSun = orbit(planet2Sun);\n  var planet1OrbitSunOrbitSun\
    \ = orbit(planet1OrbitSun);\n  var planet2OrbitSunOrbitSun = orbit(planet2OrbitSun);\n\
    \  var planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun);\n  var\
    \ planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSun);\n  var planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n\tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \tlet planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \tlet planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2Orbit",
  "    var planets = [planet1, planet2];\n    var sun = sun();\n    var orbits = orbits(planets,\
    \ sun);\n    var result = [];\n    for(var i = 0; i<orbits.length; i++){\n   \
    \     var planet = orbits[i][0];\n        var distance = orbits[i][1];\n     \
    \   if(distance < sun){\n            result.push(planet);\n        }\n    }\n\
    \    result.sort();\n    return result;\n}\n", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitSun = planet1Orbit.sun;\n\
    \    var planet2OrbitSun = planet2Orbit.sun;\n    var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distance(planet2OrbitSun);\n    var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distance(planet1OrbitSun);\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared",
  "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet\
    \ planet1Sun = sun(planet1)\n\tlet planet2Sun = sun(planet2)\n\tlet planet1SunOrbit\
    \ = orbit(planet1Sun)\n\tlet planet2SunOrbit = orbit(planet2Sun)\n\tlet planet1SunSun\
    \ = sun(planet1Sun)\n\tlet planet2SunSun = sun(planet2Sun)\n\tlet planet1SunSunOrbit\
    \ = orbit(planet1SunSun)\n\tlet planet2SunSunOrbit = orbit(planet2SunSun)\n\t\
    let planet1SunSunSun = sun(planet1SunSun)\n\tlet planet2SunSunSun = sun(planet2SunSun)\n\
    \tlet planet1SunSunSunOrbit = orbit(planet1SunSunSun)\n\tlet planet2SunSunSunOrbit\
    \ = orbit(planet2SunSunSun)\n\tlet planet1SunSunSunSun = sun(planet1SunSunSun)\n\
    \tlet planet2SunSunSunSun = sun(planet2SunSunSun)\n\tlet planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun)\n\tlet planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \tlet planet1SunSunSunSun = sun(planet1SunSunSunSun)\n\tlet planet2SunSunSunSun\
    \ = sun(planet2SunSunSunSun)\n\tlet planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun)\n\
    \tlet planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\tlet planet1SunSunSunSunSun\
    \ = sun(planet1SunSunSunSunSun)\n\tlet planet2SunSunSunSun = sun(planet2SunSunSunSun)\n\
    \tlet planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSunSun)\n\tlet planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n\tlet planet1SunSunSunSunSun = ", "    var planets\
    \ = [planet1, planet2];\n    var sun = sun();\n    var orbit1 = orbit(planet1);\n\
    \    var orbit2 = orbit(planet2);\n    var orbits = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets1 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet1;\n    });\n    var planets2 = orbits.filter(function(orbit){\n  \
    \      return orbit.planet == planet2;\n    });\n    var planets3 = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets4 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet2 || orbit.planet == planet1;\n    });\n    var planets5 = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets6 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet2 || orbit.planet == planet1;\n    });\n    var planets7 = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets8 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet2 || orbit.planet == planet1;\n    });\n    var planets9 = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets10 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet2 || orbit.planet == planet1;\n    });\n    var planets11 = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets12 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet2 || orbit.planet == planet1;\n    });\n    var planets13 = orbits.filter(function(orbit){\n\
    \        return orbit.planet == planet1 || orbit.planet == planet2;\n    });\n\
    \    var planets14 = orbits.filter(function(orbit){\n        return orbit.planet\
    \ == planet2 || orbit.planet == planet1;\n    });\n    var planets15 = orbits.filter(",
  "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n  let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n  let planet1OrbitDistance = planet1OrbitIndex\
    \ - planet2OrbitIndex;\n  let planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n\
    \  let planet1OrbitDistanceToSun = planet1OrbitDistance * Math.PI / 180;\n  let\
    \ planet2OrbitDistanceToSun = planet2OrbitDistance * Math.PI / 180;\n  let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance * Math.PI / 180;\n  let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ * Math.PI / 180;\n  let planet1OrbitDistanceToSun = planet1OrbitDistance * Math.PI\
    \ / 180;\n  let planet2OrbitDistanceToSun = planet2OrbitDistance * Math.PI / 180;\n\
    \  let planet1OrbitDistanceToSun = planet1OrbitDistance * Math.PI / 180;\n  let\
    \ planet2OrbitDistanceToSun = planet2OrbitDistance * Math.PI / 180;\n  let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance * Math.PI / 180;\n  let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ * Math.PI / 180;\n  let planet1OrbitDistanceToSun = planet1OrbitDistance * Math.PI\
    \ / 180;\n  let planet2OrbitDistanceToSun = planet2OrbitDistance * Math.PI / 180;\n\
    \  let planet1OrbitDistanceToSun = planet1OrbitDistance * Math.PI / 180;\n  let\
    \ planet2OrbitDistanceToSun = planet2OrbitDistance * Math.PI / 180;\n  let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance * Math.PI / 180;\n  let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ * Math.PI / 180;\n  let planet1OrbitDistanceToSun = planet1OrbitDistance * Math.PI\
    \ / 18", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1OrbitIndex = planet1Orbit.indexOf(planet1)\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet2)\n\tlet planet1OrbitLength = planet1Orbit.length\n\
    \tlet planet2OrbitLength = planet2Orbit.length\n\tlet planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).indexOf(planet2)\n\
    \tlet planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).indexOf(planet1)\n\
    \tlet planet1OrbitDistanceLength = planet1OrbitDistance.length\n\tlet planet2OrbitDistanceLength\
    \ = planet2OrbitDistance.length\n\tlet planet1OrbitDistanceDistance = planet1OrbitDistance.slice(planet1OrbitDistanceIndex).indexOf(planet2)\n\
    \tlet planet2OrbitDistanceDistance = planet2OrbitDistance.slice(planet2OrbitDistanceIndex).indexOf(planet1)\n\
    \tlet planet1OrbitDistanceDistanceLength = planet1OrbitDistanceDistance.length\n\
    \tlet planet2OrbitDistanceDistanceLength = planet2OrbitDistanceDistance.length\n\
    \tlet planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistance.slice(planet1OrbitDistanceDistanceIndex).indexOf(planet2)\n\
    \tlet planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistance.slice(planet2OrbitDistanceDistanceIndex).indexOf(planet1)\n\
    \tlet planet1OrbitDistanceDistanceDistanceLength = planet1OrbitDistanceDistanceDistance.length\n\
    \tlet planet2OrbitDistanceDistanceDistanceLength = planet2OrbitDistanceDistanceDistance.length\n\
    \tlet planet1OrbitDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistance.slice(planet1OrbitDistanceDistanceDistanceIndex).indexOf(planet2)\n\
    \tlet planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance.slice(planet2OrbitDistanceDistanceDistanceIndex).indexOf(planet1)\n\
    \tlet planet1OrbitDistanceDistanceDistanceDistanceLength = planet1OrbitDistanceDistanceDistanceDistance.length\n\
    \tlet planet2OrbitDistanceDistanceDistanceDistanceLength = planet2OrbitDistanceDistance",
  "  let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let\
    \ planet1OrbitSun = planet1Orbit.sun\n  let planet2OrbitSun = planet2Orbit.sun\n\
    \  let planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun)\n\
    \  let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun)\n\
    \  let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \  let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \  let planet1OrbitSunDistanceSquaredSquared = planet1OrbitSunDistanceSquared\
    \ * planet1OrbitSunDistanceSquared\n  let planet2OrbitSunDistanceSquaredSquared\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n  let planet1OrbitSunDistanceSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared * planet1OrbitSunDistanceSquaredSquared\n\
    \  let planet2OrbitSunDistanceSquaredSquaredSquared = planet2OrbitSunDistanceSquaredSquared\
    \ * planet2OrbitSunDistanceSquaredSquared\n  let planet1OrbitSunDistanceSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared * planet1OrbitSunDistanceSquaredSquared\n\
    \  let planet2OrbitSunDistanceSquaredSquaredSquared = planet2OrbitSunDistanceSquaredSquared\
    \ * planet2OrbitSunDistanceSquaredSquared\n  let planet1OrbitSunDistanceSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared * planet1OrbitSunDistanceSquaredSquared\n\
    \  let planet2OrbitSunDistanceSquaredSquaredSquared = planet2OrbitSunDistanceSquaredSquared\
    \ * planet2OrbitSunDistanceSquaredSquared\n  let planet1OrbitSunDistanceSquaredSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared * planet1OrbitSunDistanceSquaredSquared\n\
    \  let planet2OrbitSunDistanceSquaredSquaredSquared = planet2", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).length;\n\
    \    let planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).length;\n\
    \    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunDistance(planet1);\n\
    \    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance(planet2);\n\
    \    let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet3 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet4 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet5 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet6 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet7 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet8 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet9 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet10 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet11 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let plan", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1OrbitDistance = distance(planet1Orbit);\n\
    \    let planet2OrbitDistance = distance(planet2Orbit);\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunRadius;\n    let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunRadius;\n    let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1 =\
    \ planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceTo", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit\
    \ = orbit(planet2)\n    let planet1OrbitSun = planet1Orbit.orbit(sun)\n    let\
    \ planet2OrbitSun = planet2Orbit.orbit(sun)\n    let planet1OrbitSunDistance =\
    \ planet1OrbitSun.distanceTo(sun)\n    let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(sun)\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let ", "    let planet1Orbit = planet1Orbit(planet1);\n    let planet2Orbit\
    \ = planet2Orbit(planet2);\n    let planet1OrbitIndex = planet1OrbitIndex(planet1);\n\
    \    let planet2OrbitIndex = planet2OrbitIndex(planet2);\n    let planet1OrbitDistance\
    \ = planet1OrbitDistance(planet1);\n    let planet2OrbitDistance = planet2OrbitDistance(planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1);\n   \
    \ let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet2);\n    let\
    \ planet1OrbitDistanceDistance = planet1OrbitDistanceDistance(planet1);\n    let\
    \ planet2OrbitDistanceDistance = planet2OrbitDistanceDistance(planet2);\n    let\
    \ planet1OrbitDistanceDistanceIndex = planet1OrbitDistanceDistanceIndex(planet1);\n\
    \    let planet2OrbitDistanceDistanceIndex = planet2OrbitDistanceDistanceIndex(planet2);\n\
    \    let planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistanceDistance(planet1);\n\
    \    let planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance(planet2);\n\
    \    let planet1OrbitDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceIndex(planet1);\n\
    \    let planet2OrbitDistanceDistanceDistanceIndex = planet2OrbitDistanceDistanceDistanceIndex(planet2);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistanceDistance(planet1);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistanceDistance(planet2);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistanceIndex(planet1);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistanceIndex = planet2OrbitDistanceDistanceDistanceDistanceIndex(planet2);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistanceDistanceDistance(planet1);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistanceDistanceDistance(planet2);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistanceDistanceDistanceIndex(planet1);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistance", "  let planet1Orbit =\
    \ orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let planet1Sun = sun(planet1)\n\
    \  let planet2Sun = sun(planet2)\n  let planet1OrbitSun = orbit(planet1, planet1Sun)\n\
    \  let planet2OrbitSun = orbit(planet2, planet2Sun)\n  let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun)\n  let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun)\n  let planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun)\n  let planet2OrbitSunOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun)\n  let planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \  let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun)\n  let planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit)\n\
    \  let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit)\n  let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit,\
    \ planet2OrbitSunOrbit)\n  let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2Orbit", "  var planet1Orbit = orbit(planet1);\n\
    \  var planet2Orbit = orbit(planet2);\n  var planet1OrbitSun = planet1Orbit.orbital;\n\
    \  var planet2OrbitSun = planet2Orbit.orbital;\n  var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(sun);\n  var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(sun);\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1Orbit", "    let planet1Orbit =\
    \ orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1", "  let planet1Orbit = orbit(planet1);\n \
    \ let planet2Orbit = orbit(planet2);\n  let planet1Sun = sun(planet1Orbit);\n\
    \  let planet2Sun = sun(planet2Orbit);\n  let planet1OrbitSun = orbit(planet1Orbit);\n\
    \  let planet2OrbitSun = orbit(planet2Orbit);\n  let planet1OrbitSunDistance =\
    \ distance(planet1OrbitSun, planet1Orbit);\n  let planet2OrbitSunDistance = distance(planet2OrbitSun,\
    \ planet2Orbit);\n  let planet1OrbitSunDistanceToPlanet2 = distance(planet1OrbitSun,\
    \ planet2);\n  let planet2OrbitSunDistanceToPlanet1 = distance(planet2OrbitSun,\
    \ planet1);\n  let planet1OrbitSunDistanceToPlanet1AndPlanet2 = distance(planet1OrbitSun,\
    \ planet1OrbitSunDistanceToPlanet2);\n  let planet2OrbitSunDistanceToPlanet1AndPlanet2\
    \ = distance(planet2OrbitSun, planet2OrbitSunDistanceToPlanet1);\n  let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3\
    \ = distance(planet1OrbitSun, planet1OrbitSunDistanceToPlanet1AndPlanet2);\n \
    \ let planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3 = distance(planet2OrbitSun,\
    \ planet2OrbitSunDistanceToPlanet1AndPlanet2);\n  let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4\
    \ = distance(planet1OrbitSun, planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3);\n\
    \  let planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4 = distance(planet2OrbitSun,\
    \ planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3);\n  let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = distance(planet1OrbitSun, planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4);\n\
    \  let plan", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\tlet planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunOrbitDistance;\n\tlet planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - sunOrbitDistance;\n\tlet planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\tlet planet2OrbitDistanceToSunAndPlanet1\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSunAndPlanet2 + planet2OrbitDistanceToSun;\n\tlet planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ = planet2OrbitDistanceToSunAndPlanet1 + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet2 + planet2OrbitDistanceToSun;\n\
    \tlet planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2 + planet2OrbitDistanceToSun;\n\
    \tlet planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet1 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSun", "    var planet1 = planet1.toLowerCase();\n  \
    \  var planet2 = planet2.toLowerCase();\n    var planet1orbit = orbit(planet1);\n\
    \    var planet2orbit = orbit(planet2);\n    var planet1orbitorbit = orbit(planet1orbit);\n\
    \    var planet2orbitorbit = orbit(planet2orbit);\n    var planet1orbitorbitorbit\
    \ = orbit(planet1orbitorbit);\n    var planet2orbitorbitorbit = orbit(planet2orbitorbit);\n\
    \    var planet1orbitorbitorbitorbit = orbit(planet1orbitorbitorbit);\n    var\
    \ planet2orbitorbitorbitorbit = orbit(planet2orbitorbitorbit);\n    var planet1orbitorbitorbitorbitorbit\
    \ = orbit(planet1orbitorbitorbitorbit);\n    var planet2orbitorbitorbitorbitorbit\
    \ = orbit(planet2orbitorbitorbitorbit);\n    var planet1orbitorbitorbitorbitorbit\
    \ = orbit(planet1orbitorbitorbitorbit);\n    var planet2orbitorbitorbitorbitorbit\
    \ = orbit(planet2orbitorbitorbitorbit);\n    var planet1orbitorbitorbitorbitorbit\
    \ = orbit(planet1orbitorbitorbitorbit);\n    var planet2orbitorbitorbitorbitorbit\
    \ = orbit(planet2orbitorbitorbitorbit);\n    var planet1orbitorbitorbitorbitorbit\
    \ = orbit(planet1orbitorbitorbitorbit);\n    var planet2orbitorbitorbitorbitorbit\
    \ = orbit(planet2orbitorbitorbitorbit);\n    var planet1orbitorbitorbitorbitorbit\
    \ = orbit(planet1orbitorbitorbitorbit);\n    var planet2orbitorbitorbitorbitorbit\
    \ = orbit(planet2orbitorbitorbitorbit);\n    var planet1orbitorbitorbitorbitorbit\
    \ = orbit(planet1orbitorbitorbitorbit);\n    var planet2orbitorbitorbitorbit =\
    \ orbit(planet2orbitorbitorbit);\n    var planet1orbitorbitorbitorbit = orbit(planet1orbitorbitorbit);\n\
    \    var planet2orbitorbitorbitorbit = orbit(planet2orbitorbitorbit);\n    var\
    \ planet1orbitorbitorbitorbit = orbit(planet1orbitorbitorbit);\n    var planet2orbitorbitorbitorbit\
    \ = orbit(planet2orbitorbitorbit);\n    var planet1orbitorbitorbitorbit = orbit(planet1orbitorbitorbit);\n\
    \    var planet2orbitorbitorbitorbit = orbit(planet2orbitorbitorbit);\n    var\
    \ planet1", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1OrbitSun = planet1Orbit.sun;\n\tlet planet2OrbitSun = planet2Orbit.sun;\n\
    \tlet planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\t\
    let planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\tlet\
    \ planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared = planet1OrbitSunDistanceSquared\
    \ - planet2OrbitSunDistanceSquared;\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquared;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ - planet2OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared;\n\tlet\
    \ planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSqu",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitSun = planet1Orbit.sun;\n    let planet2OrbitSun = planet2Orbit.sun;\n\
    \    let planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\
    \    let planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1Orbit.slice(planet1OrbitIndex).length;\n\tlet planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).length;\n\tlet planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunDistance(planet1);\n\tlet planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - sunDistance(planet2);\n\tlet planet1OrbitDistanceToSunOrbit\
    \ = planet1OrbitDistanceToSun / planet1Orbit.length;\n\tlet planet2OrbitDistanceToSunOrbit\
    \ = planet2OrbitDistanceToSun / planet2Orbit.length;\n\tlet planet1OrbitDistanceToSunOrbitIndex\
    \ = planet1Orbit.indexOf(planet1OrbitDistanceToSunOrbit);\n\tlet planet2OrbitDistanceToSunOrbitIndex\
    \ = planet2Orbit.indexOf(planet2OrbitDistanceToSunOrbit);\n\tlet planet1OrbitDistanceToSunOrbitDistance\
    \ = planet1OrbitDistanceToSunOrbit - planet1OrbitDistanceToSunOrbitIndex;\n\t\
    let planet2OrbitDistanceToSunOrbitDistance = planet2OrbitDistanceToSunOrbit -\
    \ planet2OrbitDistanceToSunOrbitIndex;\n\tlet planet1OrbitDistanceToSunOrbitDistanceToSun\
    \ = planet1OrbitDistanceToSunOrbitDistance - sunDistance(planet1OrbitDistanceToSunOrbit);\n\
    \tlet planet2OrbitDistanceToSunOrbitDistanceToSun = planet2OrbitDistanceToSunOrbitDistance\
    \ - sunDistance(planet2OrbitDistanceToSunOrbit);\n\tlet planet1OrbitDistanceToSunOrbitDistanceToSunOrbit\
    \ = planet1OrbitDistanceToSunOrbitDistanceToSun / planet1Orbit.length;\n\tlet\
    \ planet2OrbitDistanceToSunOrbitDistanceToSunOrbit = planet2OrbitDistanceTo",
  "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1orbit = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1", "  if(planet1 == \"Mercury\" || planet1 ==\
    \ \"Venus\" || planet1 == \"Earth\" || planet1 == \"Mars\" || planet1 == \"Jupiter\"\
    \ || planet1 == \"Saturn\" || planet1 == \"Uranus\" || planet1 == \"Neptune\"\
    ){\n    if(planet2 == \"Mercury\" || planet2 == \"Venus\" || planet2 == \"Earth\"\
    \ || planet2 == \"Mars\" || planet2 == \"Jupiter\" || planet2 == \"Saturn\" ||\
    \ planet2 == \"Uranus\" || planet2 == \"Neptune\"){\n      return [planet1, planet2];\n\
    \    }\n  }\n  if(planet2 == \"Mercury\" || planet2 == \"Venus\" || planet2 ==\
    \ \"Earth\" || planet2 == \"Mars\" || planet2 == \"Jupiter\" || planet2 == \"\
    Saturn\" || planet2 == \"Uranus\" || planet2 == \"Neptune\"){\n    return [planet2,\
    \ planet1];\n  }\n  if(planet1 == \"Mercury\" || planet1 == \"Venus\" || planet1\
    \ == \"Earth\" || planet1 == \"Mars\" || planet1 == \"Jupiter\" || planet1 ==\
    \ \"Saturn\" || planet1 == \"Uranus\" || planet1 == \"Neptune\"){\n    if(planet2\
    \ == \"Mercury\" || planet2 == \"Venus\" || planet2 == \"Earth\" || planet2 ==\
    \ \"Mars\" || planet2 == \"Jupiter\" || planet2 == \"Saturn\" || planet2 == \"\
    Uranus\" || planet2 == \"Neptune\"){\n      return [planet2, planet1];\n    }\n\
    \  }\n  if(planet2 == \"Mercury\" || planet2 == \"Venus\" || planet2 == \"Earth\"\
    \ || planet2 == \"Mars\" || planet2 == \"Jupiter\" || planet2 == \"Saturn\" ||\
    \ planet2 == \"Uranus\" || planet2 == \"Neptune\"){\n    return [planet1, planet2];\n\
    \  }\n  if(planet1 == \"Mercury\" || planet1 == \"Venus\" || planet1 == \"Earth\"\
    \ || planet1 == \"Mars\" || planet1 == \"Jupiter\" || planet1 == \"Saturn\" ||\
    \ planet1 == \"Uranus\" || planet1 == \"Neptune\"){\n    if(planet2 == \"Mercury\"\
    \ || planet2 == \"Venus\" || planet2 == \"", "\tlet planet1 = planet1.toLowerCase();\n\
    \tlet planet2 = planet2.toLowerCase();\n\tlet planet1orbit = orbits[planet1];\n\
    \tlet planet2orbit = orbits[planet2];\n\tlet sunorbit = orbits[\"sun\"];\n\tlet\
    \ distances = [];\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\tlet distance;\n\
    \tlet distance;\n\t", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit\
    \ = orbit(planet2);\n  var planet1OrbitDistance = distance(planet1Orbit);\n  var\
    \ planet2OrbitDistance = distance(planet2Orbit);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunRadius;\n  var planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunRadius;\n  var planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun - planet1OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun - planet1OrbitDistanceToSun\
    \ - planet2OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun - planet1OrbitDistanceToSun\
    \ - planet2OrbitDistanceToSun - planet3OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun - planet1OrbitDistanceToSun\
    \ - planet2OrbitDistanceToSun - planet3OrbitDistanceToSun - planet4OrbitDistanceToSun;\n\
    \  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun - planet1OrbitDistanceToSun\
    \ - planet2OrbitDistanceToSun - planet3OrbitDistanceToSun - planet4OrbitDistanceToSun\
    \ - planet5OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5AndPlanet6\
    \ = planet1OrbitDistanceToSun + planet2", "  var planet1Orbit = orbit(planet1);\n\
    \  var planet2Orbit = orbit(planet2);\n  var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \  var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n  var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1Orbit", "    var planet1 = planet1.toLowerCase();\n    var planet2\
    \ = planet2.toLowerCase();\n    var planet1orbit = planet1orbits[planet1];\n \
    \   var planet2orbit = planet2orbits[planet2];\n    var planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    var planet2orbitorbit = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet", "    var planet1Orbit\
    \ = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n    var planet1Sun\
    \ = sun(planet1Orbit);\n    var planet2Sun = sun(planet2Orbit);\n    var planet1OrbitSun\
    \ = orbit(planet1Orbit);\n    var planet2OrbitSun = orbit(planet2Orbit);\n   \
    \ var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n   \
    \ var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n   \
    \ var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun(planet1);\n\
    \    let planet2Sun = sun(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n\
    \    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet2OrbitSunOrbit);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet2OrbitSunOrbit, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun,\
    \ planet1OrbitSun", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = planet1Orbit.sun;\n\tlet planet2OrbitSun\
    \ = planet2Orbit.sun;\n\tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \tlet planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \tlet planet1OrbitSunAngle = planet1OrbitSun.angleTo(planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunAngle = planet2OrbitSun.angleTo(planet1OrbitSun);\n\tlet planet1OrbitSunDistanceAngle\
    \ = planet1OrbitSunDistance * Math.cos(planet1OrbitSunAngle);\n\tlet planet2OrbitSunDistanceAngle\
    \ = planet2OrbitSunDistance * Math.cos(planet2OrbitSunAngle);\n\tlet planet1OrbitSunDistanceAngle2\
    \ = planet1OrbitSunDistance * Math.sin(planet1OrbitSunAngle);\n\tlet planet2OrbitSunDistanceAngle2\
    \ = planet2OrbitSunDistance * Math.sin(planet2OrbitSunAngle);\n\tlet planet1OrbitSunDistanceAngle3\
    \ = planet1OrbitSunDistance * Math.sin(planet1OrbitSunAngle);\n\tlet planet2OrbitSunDistanceAngle3\
    \ = planet2OrbitSunDistance * Math.sin(planet2OrbitSunAngle);\n\tlet planet1OrbitSunDistanceAngle4\
    \ = planet1OrbitSunDistance * Math.cos(planet1OrbitSunAngle);\n\tlet planet2OrbitSunDistanceAngle4\
    \ = planet2OrbitSunDistance * Math.cos(planet2OrbitSunAngle);\n\tlet planet1OrbitSunDistanceAngle5\
    \ = planet1OrbitSunDistance * Math.sin(planet1OrbitSunAngle);\n\tlet planet2OrbitSunDistanceAngle5\
    \ = planet2OrbitSunDistance * Math.sin(planet2OrbitSunAngle);\n\tlet planet1OrbitSunDistanceAngle6\
    \ = planet1OrbitSunDistance * Math.cos(planet1OrbitSunAngle);\n\tlet planet2OrbitSunDistanceAngle",
  "    let planet1Orbit = planet1Orbit(planet1);\n    let planet2Orbit = planet2Orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1OrbitIndex(planet1);\n    let planet2OrbitIndex\
    \ = planet2OrbitIndex(planet2);\n    let planet1OrbitDistance = planet1OrbitDistance(planet1,\
    \ planet2);\n    let planet2OrbitDistance = planet2OrbitDistance(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceDistance = planet1OrbitDistanceDistance(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistance = planet2OrbitDistanceDistance(planet1,\
    \ planet2);\n    let planet1OrbitDistanceDistanceIndex = planet1OrbitDistanceDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistanceIndex = planet2OrbitDistanceDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistanceDistance(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance(planet1,\
    \ planet2);\n    let planet1OrbitDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistanceDistanceIndex = planet2OrbitDistanceDistanceDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistanceDistance(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistanceDistance(planet1,\
    \ planet2);\n    let planet1OrbitDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistanceDistanceDistanceIndex = planet2OrbitDistanceDistanceDistanceDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistanceDistanceDistance(planet1,\
    \ planet2);\n    let planet2OrbitDistanceDistanceDistanceDistanceDistance = planet",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun)\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun)\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun)\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun)\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun)\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = orbit(planet1);\n\
    \    let planet2orbit = orbit(planet2);\n    let planet1sun = sun(planet1);\n\
    \    let planet2sun = sun(planet2);\n    let planet1orbitsun = orbit(planet1,\
    \ planet1sun);\n    let planet2orbitsun = orbit(planet2, planet2sun);\n    let\
    \ planet1orbitsunsun = orbit(planet1, planet1sun, planet2sun);\n    let planet2orbitsunsun\
    \ = orbit(planet2, planet2sun, planet1sun);\n    let planet1orbitsunsunsun = orbit(planet1,\
    \ planet1sun, planet2sun, planet2sun);\n    let planet2orbitsunsunsun = orbit(planet2,\
    \ planet2sun, planet1sun, planet1sun);\n    let planet1orbitsunsunsunsun = orbit(planet1,\
    \ planet1sun, planet2sun, planet2sun, planet1sun);\n    let planet2orbitsunsunsunsun\
    \ = orbit(planet2, planet2sun, planet1sun, planet1sun, planet2sun);\n    let planet1orbitsunsunsunsunsun\
    \ = orbit(planet1, planet1sun, planet2sun, planet2sun, planet1sun, planet1sun);\n\
    \    let planet2orbitsunsunsunsunsun = orbit(planet2, planet2sun, planet1sun,\
    \ planet1sun, planet2sun, planet1sun);\n    let planet1orbitsunsunsunsunsunsun\
    \ = orbit(planet1, planet1sun, planet2sun, planet2sun, planet1sun, planet1sun,\
    \ planet2sun);\n    let planet2orbitsunsunsunsunsunsunsun = orbit(planet2, planet2sun,\
    \ planet1sun, planet1sun, planet2sun, planet1sun, planet1sun, planet2sun);\n \
    \   let planet1orbitsunsunsunsunsunsunsun = orbit(planet1, planet1sun, planet2sun,\
    \ planet2sun, planet1sun, planet1sun, plan", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitDistance = distance(planet1Orbit);\n\
    \    let planet2OrbitDistance = distance(planet2Orbit);\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunDistance;\n    let planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunDistance;\n    let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n    let planet2OrbitDistanceToSunAndPlanet1 =\
    \ planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSunAndPlanet2 + planet2OrbitDistanceToSunAndPlanet1;\n\
    \    let planet2OrbitDistanceToSunAndPlanet1AndPlanet1 = planet2OrbitDistanceToSunAndPlanet1\
    \ + planet1OrbitDistanceToSunAndPlanet2;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet2 + planet2OrbitDistanceToSunAndPlanet1AndPlanet1;\n\
    \    let planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSunAndPlanet1AndPlanet2;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3AndPlanet4\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3 + planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3;\n\
    \    let planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3AndPlanet4 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3\
    \ + planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet4;\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3AndPlanet",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1Sun = sunOrbit(planet1Orbit);\n    var planet2Sun = sunOrbit(planet2Orbit);\n\
    \    var planet1OrbitSun = orbit(planet1Orbit);\n    var planet2OrbitSun = orbit(planet2Orbit);\n\
    \    var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n\
    \    var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n\
    \    var planet1OrbitSunDistanceSorted = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted2 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted2 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted3 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted3 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted4 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted4 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted5 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted5 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted6 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted6 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted7 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted7 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted8 = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted8 = sortByDistance(planet2OrbitSunDistance);\n\
    \    var plan", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1OrbitSun = orbit(planet1, true);\n    let\
    \ planet2OrbitSun = orbit(planet2, true);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ true, true);\n    let planet2OrbitSunOrbit = orbit(planet2, true, true);\n \
    \   let planet1OrbitSunOrbitSun = orbit(planet1, true, true, true);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, true, true, true);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, true, true, true, true);\n    let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, true, true, true, true);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, true, true, true, true, true);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, true, true, true, true, true, true);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, true, true, true, true, true, true, true, true);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, true, true, true, true, true, true, true, true, true);\n  \
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ true, true, true, true, true, true, true, true, true, true);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, true, true, true, true, true, true, true, true, true, true,\
    \ true);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, true, true, true, true, true, true, true, true, true, true,\
    \ true, true);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, true, true, true, true, true, true, true, true, true, true,\
    \ true, true);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit =\
    \ orbit(planet2);\n  var planet1Orbits = planet1Orbit.orbits;\n  var planet2Orbits\
    \ = planet2Orbit.orbits;\n  var planet1OrbitNames = planet1Orbit.orbitNames;\n\
    \  var planet2OrbitNames = planet2Orbit.orbitNames;\n  var planet1OrbitDistances\
    \ = planet1Orbit.orbitDistances;\n  var planet2OrbitDistances = planet2Orbit.orbitDistances;\n\
    \  var planet1OrbitDistanceNames = planet1Orbit.orbitDistanceNames;\n  var planet2OrbitDistanceNames\
    \ = planet2Orbit.orbitDistanceNames;\n  var planet1OrbitDistanceDistances = planet1Orbit.orbitDistanceDistances;\n\
    \  var planet2OrbitDistanceDistances = planet2Orbit.orbitDistanceDistances;\n\
    \  var planet1OrbitDistanceDistanceNames = planet1Orbit.orbitDistanceDistanceNames;\n\
    \  var planet2OrbitDistanceDistanceNames = planet2Orbit.orbitDistanceDistanceNames;\n\
    \  var planet1OrbitDistanceDistanceDistances = planet1Orbit.orbitDistanceDistanceDistances;\n\
    \  var planet2OrbitDistanceDistanceDistances = planet2Orbit.orbitDistanceDistanceDistances;\n\
    \  var planet1OrbitDistanceDistanceDistanceNames = planet1Orbit.orbitDistanceDistanceDistanceNames;\n\
    \  var planet2OrbitDistanceDistanceDistanceNames = planet2Orbit.orbitDistanceDistanceDistanceNames;\n\
    \  var planet1OrbitDistanceDistanceDistanceDistances = planet1Orbit.orbitDistanceDistanceDistanceDistances;\n\
    \  var planet2OrbitDistanceDistanceDistanceDistances = planet2Orbit.orbitDistanceDistanceDistanceDistances;\n\
    \  var planet1OrbitDistanceDistanceDistanceDistanceNames = planet1Orbit.orbitDistanceDistanceDistanceDistanceNames;\n\
    \  var planet2OrbitDistanceDistanceDistanceDistanceNames = planet2Orbit.orbitDistanceDistanceDistanceDistanceNames;\n\
    \  var planet1OrbitDistanceDistanceDistanceDistanceDistances = planet1Orbit.orbitDistanceDistanceDistanceDistanceDistances;\n\
    \  var planet2OrbitDistanceDistanceDistanceDistanceDistances = planet2Orbit.orbitDistanceDistanceDistanceDistanceDistances;\n\
    \  var planet1", "    var planet1 = planet1.toLowerCase();\n    var planet2 =\
    \ planet2.toLowerCase();\n    var planet1orbit = planet1orbits[planet1];\n   \
    \ var planet2orbit = planet2orbits[planet2];\n    var planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    var planet2orbitorbit = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit\
    \ = orbit(planet2)\n    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun\
    \ = sunOrbit(planet2)\n    let planet1SunOrbit = orbit(planet1Sun)\n    let planet2SunOrbit\
    \ = orbit(planet2Sun)\n    let planet1SunSun = sunOrbit(planet1Sun)\n    let planet2SunSun\
    \ = sunOrbit(planet2Sun)\n    let planet1SunSunOrbit = orbit(planet1SunSun)\n\
    \    let planet2SunSunOrbit = orbit(planet2SunSun)\n    let planet1SunSunSun =\
    \ sunOrbit(planet1SunSun)\n    let planet2SunSunSun = sunOrbit(planet2SunSun)\n\
    \    let planet1SunSunSunOrbit = orbit(planet1SunSunSun)\n    let planet2SunSunSunOrbit\
    \ = orbit(planet2SunSunSun)\n    let planet1SunSunSunSun = sunOrbit(planet1SunSunSun)\n\
    \    let planet2SunSunSunSun = sunOrbit(planet2SunSunSun)\n    let planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun)\n    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \    let planet1SunSunSunSunSun = sunOrbit(planet1SunSunSunSun)\n    let planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n    let planet1SunSunSunSunSun = sunOrbit(planet1SunSunSunSun)\n\
    \    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n    let planet1SunSunSunSunSun\
    \ = sunOrbit(planet1SunSunSunSunSun)\n    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \    let planet1SunSunSunSunSun = sunOrbit(planet1SunSunSunSunSun)\n    let planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n    let planet1SunSunSunSunSun = ", "    let planet1\
    \ = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let\
    \ planet1Orbit = planet1.includes(\"mercury\") ? \"mercury\" : \"venus\";\n  \
    \  let planet2Orbit = planet2.includes(\"mercury\") ? \"mercury\" : \"venus\"\
    ;\n    let planet1OrbitOrbit = planet1.includes(\"mercury\") ? \"mercury\" : \"\
    venus\";\n    let planet2OrbitOrbit = planet2.includes(\"mercury\") ? \"mercury\"\
    \ : \"venus\";\n    let planet1OrbitOrbitOrbit = planet1.includes(\"mercury\"\
    ) ? \"mercury\" : \"venus\";\n    let planet2OrbitOrbitOrbit = planet2.includes(\"\
    mercury\") ? \"mercury\" : \"venus\";\n    let planet1OrbitOrbitOrbitOrbit = planet1.includes(\"\
    mercury\") ? \"mercury\" : \"venus\";\n    let planet2OrbitOrbitOrbitOrbit = planet2.includes(\"\
    mercury\") ? \"mercury\" : \"venus\";\n    let planet1OrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet2OrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet1OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet2OrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet1OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet2OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet1.includes(\"mercury\") ? \"mercury\" : \"venus\";\n    let planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = planet2.includes(\"mercury\") ? \"", "  let planet1Orbit = orbit(planet1);\n\
    \  let planet2Orbit = orbit(planet2);\n  let planet1Sun = sun();\n  let planet2Sun\
    \ = sun();\n  let planet1OrbitSun = orbit(planet1, planet1Sun);\n  let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n  let planet1OrbitPlanet2 = orbit(planet1, planet2);\n\
    \  let planet2OrbitPlanet1 = orbit(planet2, planet1);\n  let planet1OrbitPlanet1Sun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n  let planet2OrbitPlanet1Sun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun);\n  let planet1OrbitPlanet2Sun\
    \ = orbit(planet1, planet2, planet1OrbitSun);\n  let planet2OrbitPlanet2Sun =\
    \ orbit(planet2, planet1, planet2OrbitSun);\n  let planet1OrbitPlanet1Planet2\
    \ = orbit(planet1, planet2, planet1);\n  let planet2OrbitPlanet1Planet1 = orbit(planet2,\
    \ planet1, planet2);\n  let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2,\
    \ planet2);\n  let planet2OrbitPlanet2Planet1 = orbit(planet2, planet1, planet1);\n\
    \  let planet1OrbitPlanet1Planet1Sun = orbit(planet1, planet1, planet1OrbitSun,\
    \ planet1OrbitPlanet2Sun);\n  let planet2OrbitPlanet1Planet1Sun = orbit(planet2,\
    \ planet1, planet2, planet2OrbitSun, planet2OrbitPlanet1Sun);\n  let planet1OrbitPlanet2Planet1Sun\
    \ = orbit(planet1, planet2, planet1, planet2OrbitSun, planet2OrbitPlanet1Sun);\n\
    \  let planet2OrbitPlanet2Planet1Sun = orbit(planet2, planet1, planet2, planet1OrbitSun,\
    \ planet1OrbitPlanet2Sun);\n  let planet1OrbitPlanet1Planet2Sun = orbit(plan",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sun();\n    let planet2Sun = sun();\n    let planet1OrbitSun\
    \ = orbit(planet1Sun);\n    let planet2OrbitSun = orbit(planet2Sun);\n    let\
    \ planet1OrbitPlanet2 = orbit(planet1, planet2);\n    let planet2OrbitPlanet1\
    \ = orbit(planet2, planet1);\n    let planet1OrbitPlanet1Sun = orbit(planet1Sun,\
    \ planet1);\n    let planet2OrbitPlanet1Sun = orbit(planet2Sun, planet1);\n  \
    \  let planet1OrbitPlanet2Sun = orbit(planet1Sun, planet2);\n    let planet2OrbitPlanet2Sun\
    \ = orbit(planet2Sun, planet2);\n    let planet1OrbitPlanet1Planet2 = orbit(planet1,\
    \ planet2, planet1);\n    let planet2OrbitPlanet1Planet1 = orbit(planet2, planet1,\
    \ planet1);\n    let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2, planet2);\n\
    \    let planet2OrbitPlanet2Planet1 = orbit(planet2, planet1, planet2);\n    let\
    \ planet1OrbitPlanet1Planet1Sun = orbit(planet1Sun, planet1, planet1);\n    let\
    \ planet2OrbitPlanet1Planet1Sun = orbit(planet2Sun, planet1, planet1);\n    let\
    \ planet1OrbitPlanet2Planet1Sun = orbit(planet1Sun, planet2, planet1);\n    let\
    \ planet2OrbitPlanet2Planet1Sun = orbit(planet2Sun, planet2, planet1);\n    let\
    \ planet1OrbitPlanet1Planet2Sun = orbit(planet1Sun, planet1, planet2);\n    let\
    \ planet2OrbitPlanet1Planet2Sun = orbit(planet2Sun, planet1, planet2);\n    let\
    \ planet1OrbitPlanet2Planet2Sun = orbit(planet1Sun, planet2, planet2);\n    let\
    \ planet2OrbitPlanet2Planet2Sun = orbit(planet2Sun", "    let planet1Orbit = planet1Orbit(planet1);\n\
    \    let planet2Orbit = planet2Orbit(planet2);\n    let planet1OrbitIndex = planet1OrbitIndex(planet1);\n\
    \    let planet2OrbitIndex = planet2OrbitIndex(planet2);\n    let planet1OrbitDistance\
    \ = planet1OrbitDistance(planet1, planet2);\n    let planet2OrbitDistance = planet2OrbitDistance(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit\
    \ = orbit(planet2)\n\tlet planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\
    \tlet planet1Planets = planets(planet1)\n\tlet planet2Planets = planets(planet2)\n\
    \tlet planet1PlanetsSun = planets(planet1, sunOrbit(planet1))\n\tlet planet2PlanetsSun\
    \ = planets(planet2, sunOrbit(planet2))\n\tlet planet1PlanetsOrbit = planets(planet1,\
    \ orbit(planet1))\n\tlet planet2PlanetsOrbit = planets(planet2, orbit(planet2))\n\
    \tlet planet1PlanetsOrbitSun = planets(planet1, orbit(planet1, sunOrbit(planet1)))\n\
    \tlet planet2PlanetsOrbitSun = planets(planet2, orbit(planet2, sunOrbit(planet2)))\n\
    \tlet planet1PlanetsOrbitPlanets = planets(planet1, orbit(planet1, planets))\n\
    \tlet planet2PlanetsOrbitPlanets = planets(planet2, orbit(planet2, planets))\n\
    \tlet planet1PlanetsOrbitPlanetsSun = planets(planet1, orbit(planet1, planets,\
    \ sunOrbit(planet1)))\n\tlet planet2PlanetsOrbitPlanetsSun = planets(planet2,\
    \ orbit(planet2, planets, sunOrbit(planet2)))\n\tlet planet1PlanetsOrbitPlanetsOrbit\
    \ = planets(planet1, orbit(planet1, planets, orbit(planet1)))\n\tlet planet2PlanetsOrbitPlanetsOrbit\
    \ = planets(planet2, orbit(planet2, planets, orbit(planet2)))\n\tlet planet1PlanetsOrbitPlanetsOrbitSun\
    \ = planets(planet1, orbit(planet1, planets, orbit(planet1, sunOrbit(planet1))))\n\
    \tlet planet2PlanetsOrbitPlanetsOrbitSun = planets(plan", "  if(planet1 === planet2){\n\
    \    return [];\n  }\n  if(planet1 === \"Mercury\"){\n    return [\"Venus\"];\n\
    \  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\"];\n  }\n  if(planet1 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Jupiter\"){\n    return [\"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Saturn\"){\n    return [\"Uranus\"\
    ];\n  }\n  if(planet1 === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet1\
    \ === \"Neptune\"){\n    return [];\n  }\n  if(planet2 === \"Mercury\"){\n   \
    \ return [\"Venus\"];\n  }\n  if(planet2 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\"];\n  }\n  if(planet2 === \"Earth\"){\n   \
    \ return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 ===\
    \ \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet2 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet2 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet2 === \"Neptune\"){\n    return [];\n\
    \  }\n  if(planet1 === \"Mercury\" && planet2 === \"Neptune\"){\n    return [\"\
    Mercury\", \"Venus\"];\n  }\n  if(planet1 === \"Mercury\" && planet2 === \"Uranus\"\
    ){\n    return [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    ];\n  }\n  if(planet1 === \"Mercury\" && planet2 === \"Saturn\"){\n    return\
    \ [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    ];\n  }\n  if(planet1 === \"Mercury", "\tlet planet1Orbit = orbit(planet1);\n\t\
    let planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n\tlet planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n\tlet planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sunOrbitDistance;\n\tlet planet2OrbitDistanceToSun = planet2OrbitDistance\
    \ - sunOrbitDistance;\n\tlet planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n\tlet planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSunAndPlanet2 + planet2OrbitDistanceToSun;\n\tlet planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ = planet2OrbitDistanceToSunAndPlanet1 + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet2 + planet2OrbitDistanceToSun;\n\
    \tlet planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2 + planet2OrbitDistanceToSun;\n\
    \tlet planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet3 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSun;\n\tlet ", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n\
    \    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distance(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distance(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared",
  "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1OrbitSun = planet1Orbit.sun;\n  var planet2OrbitSun = planet2Orbit.sun;\n\
    \  var planet1OrbitSunDistance = planet1Orbit.sunDistanceTo(planet2OrbitSun);\n\
    \  var planet2OrbitSunDistance = planet2Orbit.sunDistanceTo(planet1OrbitSun);\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \  var planet1OrbitSunDistance", "  var planet1Orbit = orbit(planet1);\n  var\
    \ planet2Orbit = orbit(planet2);\n  var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \  var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistance\
    \ = planet1Orbit.slice(planet1OrbitIndex).length;\n  var planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).length;\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(planet2);\n  var planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistanceToSun\
    \ = ", "    var planet1 = planet1.toLowerCase();\n    var planet2 = planet2.toLowerCase();\n\
    \    var planet1orbit = orbits[planet1];\n    var planet2orbit = orbits[planet2];\n\
    \    var planet1sun = sun;\n    var planet2sun = sun;\n    var planet1orbitorbit\
    \ = orbits[planet1orbit];\n    var planet2orbitorbit = orbits[planet2orbit];\n\
    \    var planet1sunsun = sunsun;\n    var planet2sunsun = sunsun;\n    var planet1orbitorbitorbit\
    \ = orbits[planet1orbitorbit];\n    var planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    var planet1sunsunsun = sunsunsun;\n    var planet2sunsunsun = sunsunsun;\n\
    \    var planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    var\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    var planet1sunsunsun\
    \ = sunsunsun;\n    var planet2sunsunsun = sunsunsun;\n    var planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    var planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    var planet1sunsunsun = sunsunsun;\n    var planet2sunsunsun = sunsunsun;\n\
    \    var planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    var\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    var planet1sunsunsun\
    \ = sunsunsun;\n    var planet2sunsunsun = sunsunsun;\n    var planet1orbitorbitorbit\
    \ = orbits[planet1orbitorbit];\n    var planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    var planet1sunsunsun = sunsunsun;\n    var planet2sunsunsun = sunsunsun;\n\
    \    var planet1orbitorbitorbit = orbits[planet1orbitorbit];\n    var planet2orbitorbitorbit\
    \ = orbits[planet2orbitorbit];\n    var planet1sunsunsun = sunsunsun;\n    var\
    \ planet2sunsunsun = sunsunsun;\n    var planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \    var planet2orbitorbitorbit = orbits[planet2orbitorbit];\n", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \    let planet1OrbitLength = planet1Orbit.length;\n    let planet2OrbitLength\
    \ = planet2Orbit.length;\n    let planet1OrbitDistance = planet1OrbitIndex - planet2OrbitIndex;\n\
    \    let planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n    let\
    \ planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2 = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet1\
    \ = planet1OrbitDistanceSquared - planet1OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet1MinusPlanet2\
    \ = planet1OrbitDistanceSquared - planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet1MinusPlanet2Squared = planet1OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet1MinusPlanet2SquaredMinusPlanet2\
    \ = planet1OrbitDistanceSquared - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet1MinusPlanet2SquaredMinusPlanet2Squared\
    \ = planet1OrbitDistanceSquared - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet1Minus", "\tlet planet1Orbit =\
    \ orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\
    \tlet planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun);\n\tlet planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2Orbit", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit\
    \ = orbit(planet2);\n    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun\
    \ = planet2Orbit.sun;\n    var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistance", "  let planet1Orbit = orbit(planet1);\n  let\
    \ planet2Orbit = orbit(planet2);\n  let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \  let planet2OrbitSun = planet2Orbit.orbit(sun);\n  let planet1OrbitSunSun =\
    \ planet1OrbitSun.orbit(sun);\n  let planet2OrbitSunSun = planet2OrbitSun.orbit(sun);\n\
    \  let planet1OrbitSunSunSun = planet1OrbitSunSun.orbit(sun);\n  let planet2OrbitSunSunSun\
    \ = planet2OrbitSunSun.orbit(sun);\n  let planet1OrbitSunSunSunSun = planet1OrbitSunSunSun.orbit(sun);\n\
    \  let planet2OrbitSunSunSunSun = planet2OrbitSunSunSun.orbit(sun);\n  let planet1OrbitSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSun.orbit(sun);\n  let planet2OrbitSunSunSunSunSun =\
    \ planet2OrbitSunSunSunSun.orbit(sun);\n  let planet1OrbitSunSunSunSunSunSun =\
    \ planet1OrbitSunSunSunSunSun.orbit(sun);\n  let planet2OrbitSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSun.orbit(sun);\n  let planet1OrbitSunSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSunSun.orbit(sun);\n  let planet2OrbitSunSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSunSun.orbit(sun);\n  let planet1OrbitSunSunSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSunSunSunSun.orbit(sun);\n  let planet2OrbitSunSunSunSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSunSunSunSunSun.orbit(sun);\n  let planet1OrbitSunSunSunSunSunSunSunSunSunSun\
    \ = planet1OrbitSunSunSunSunSunSunSunSunSunSun.orbit(sun);\n  let planet2OrbitSunSunSunSunSunSunSunSunSunSun\
    \ = planet2OrbitSunSunSunSunSunSun", "    var planets = [planet1, planet2];\n\
    \    var sun = sun();\n    var planet1 = planet1.toLowerCase();\n    var planet2\
    \ = planet2.toLowerCase();\n    var planet1orbit = orbit(planet1);\n    var planet2orbit\
    \ = orbit(planet2);\n    var planet1orbitorbit = orbitorbit(planet1, planet2);\n\
    \    var planet1orbitorbitorbit = orbitorbitorbitorbit(planet1, planet2, sun);\n\
    \    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1, planet2,\
    \ sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbitorbitorbit = orbitorbitorbitorbitorbit(planet1,\
    \ planet2, sun);\n    var planet1orbitorbit", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit\
    \ = orbit(planet2);\n  var planet1Sun = sun(planet1Orbit);\n  var planet2Sun =\
    \ sun(planet2Orbit);\n  var planet1OrbitSun = orbit(planet1Orbit);\n  var planet2OrbitSun\
    \ = orbit(planet2Orbit);\n  var planet1OrbitSunDistance = distance(planet1OrbitSun,\
    \ planet1Orbit);\n  var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n\
    \  var planet1OrbitSunDistanceSorted = sortByDistance(planet1OrbitSunDistance);\n\
    \  var planet2OrbitSunDistanceSorted = sortByDistance(planet2OrbitSunDistance);\n\
    \  var planet1OrbitSunDistanceSorted2 = sortByDistance(planet1OrbitSunDistanceSorted);\n\
    \  var planet2OrbitSunDistanceSorted2 = sortByDistance(planet2OrbitSunDistanceSorted);\n\
    \  var planet1OrbitSunDistanceSorted3 = sortByDistance(planet1OrbitSunDistanceSorted2);\n\
    \  var planet2OrbitSunDistanceSorted3 = sortByDistance(planet2OrbitSunDistanceSorted2);\n\
    \  var planet1OrbitSunDistanceSorted4 = sortByDistance(planet1OrbitSunDistanceSorted3);\n\
    \  var planet2OrbitSunDistanceSorted4 = sortByDistance(planet2OrbitSunDistanceSorted3);\n\
    \  var planet1OrbitSunDistanceSorted5 = sortByDistance(planet1OrbitSunDistanceSorted4);\n\
    \  var planet2OrbitSunDistanceSorted5 = sortByDistance(planet2OrbitSunDistanceSorted4);\n\
    \  var planet1OrbitSunDistanceSorted6 = sortByDistance(planet1OrbitSunDistanceSorted5);\n\
    \  var planet2OrbitSunDistanceSorted6 = sortByDistance(planet2OrbitSunDistanceSorted5);\n\
    \  var planet1OrbitSunDistanceSorted7 = sortByDistance(planet1OrbitSunDistanceSorted6);\n\
    \  var planet2OrbitSunDistanceSorted7 = sortByDistance(planet2OrbitSunDistanceSorted6);\n\
    \  var planet1OrbitSunDistanceSorted8 = sortByDistance(planet1OrbitSunDistanceSorted7);\n\
    \  var planet2OrbitSunDistanceSorted8 = sortByDistance(planet", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun\
    \ = planet1Orbit.sun;\n    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistance",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sun();\n    let planet2Sun = sun();\n    let planet1OrbitSun\
    \ = orbit(planet1Sun);\n    let planet2OrbitSun = orbit(planet2Sun);\n    let\
    \ planet1OrbitPlanet1 = orbit(planet1Orbit);\n    let planet2OrbitPlanet1 = orbit(planet2Orbit);\n\
    \    let planet1OrbitPlanet2 = orbit(planet1Orbit);\n    let planet2OrbitPlanet2\
    \ = orbit(planet2Orbit);\n    let planet1OrbitPlanet1Sun = orbit(planet1OrbitSun);\n\
    \    let planet2OrbitPlanet1Sun = orbit(planet2OrbitSun);\n    let planet1OrbitPlanet2Sun\
    \ = orbit(planet1OrbitSun);\n    let planet2OrbitPlanet2Sun = orbit(planet2OrbitSun);\n\
    \    let planet1OrbitPlanet1Planet1 = orbit(planet1OrbitPlanet1);\n    let planet2OrbitPlanet1Planet1\
    \ = orbit(planet2OrbitPlanet1);\n    let planet1OrbitPlanet2Planet1 = orbit(planet1OrbitPlanet2);\n\
    \    let planet2OrbitPlanet2Planet1 = orbit(planet2OrbitPlanet2);\n    let planet1OrbitPlanet1Planet2\
    \ = orbit(planet1OrbitPlanet1);\n    let planet2OrbitPlanet1Planet2 = orbit(planet2OrbitPlanet1);\n\
    \    let planet1OrbitPlanet2Planet2 = orbit(planet1OrbitPlanet2);\n    let planet2OrbitPlanet2Planet2\
    \ = orbit(planet2OrbitPlanet2);\n    let planet1OrbitPlanet1Planet1Sun = orbit(planet1OrbitPlanet1Sun);\n\
    \    let planet2OrbitPlanet1Planet1Sun = orbit(planet2OrbitPlanet1Sun);\n    let\
    \ planet1OrbitPlanet2Planet1Sun = orbit(planet1OrbitPlanet2Sun);\n    let planet2OrbitPlanet2Planet1Sun\
    \ = orbit", "  let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n\
    \  let planet1Sun = sun(planet1Orbit)\n  let planet2Sun = sun(planet2Orbit)\n\
    \  let planet1OrbitSun = orbit(planet1Orbit)\n  let planet2OrbitSun = orbit(planet2Orbit)\n\
    \  let planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit)\n  let\
    \ planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit)\n  let planet1OrbitSunDistanceSorted\
    \ = sort(planet1OrbitSunDistance)\n  let planet2OrbitSunDistanceSorted = sort(planet2OrbitSunDistance)\n\
    \  let planet1OrbitSunDistanceSortedIndex = planet1OrbitSunDistanceSorted.indexOf(planet1OrbitSunDistanceSorted[0])\n\
    \  let planet2OrbitSunDistanceSortedIndex = planet2OrbitSunDistanceSorted.indexOf(planet2OrbitSunDistanceSorted[0])\n\
    \  let planet1OrbitSunDistanceSortedIndex2 = planet1OrbitSunDistanceSorted.indexOf(planet1OrbitSunDistanceSorted[1])\n\
    \  let planet2OrbitSunDistanceSortedIndex2 = planet2OrbitSunDistanceSorted.indexOf(planet2OrbitSunDistanceSorted[1])\n\
    \  let planet1OrbitSunDistanceSortedIndex3 = planet1OrbitSunDistanceSorted.indexOf(planet1OrbitSunDistanceSorted[2])\n\
    \  let planet2OrbitSunDistanceSortedIndex3 = planet2OrbitSunDistanceSorted.indexOf(planet2OrbitSunDistanceSorted[2])\n\
    \  let planet1OrbitSunDistanceSortedIndex4 = planet1OrbitSunDistanceSorted.indexOf(planet1OrbitSunDistanceSorted[3])\n\
    \  let planet2OrbitSunDistanceSortedIndex4 = planet2OrbitSunDistanceSorted.indexOf(planet2OrbitSunDistanceSorted[3])\n\
    \  let planet1OrbitSunDistanceSortedIndex5 = planet1OrbitSunDistanceSorted.indexOf(planet1OrbitSunDistanceSorted[4])\n\
    \  let planet2OrbitSunDistanceSortedIndex5 = planet2OrbitSunDistanceSorted.indexOf(planet2OrbitSunDistanceSorted[4])\n\
    \  let planet1OrbitSunDistanceSortedIndex6 = planet1OrbitSunDistanceSorted.indexOf(planet1Orbit",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1Orbit", "   \
    \ var planets = [planet1, planet2];\n    var sun = sun();\n    var orbit1 = orbit(planet1);\n\
    \    var orbit2 = orbit(planet2);\n    var orbits = orbits.filter(function(orbit){\n\
    \        return orbit.planet1.name === planet1 && orbit.planet2.name === planet2;\n\
    \    });\n    var result = [];\n    orbits.forEach(function(orbit){\n        var\
    \ distance = distanceBetween(orbit.planet1, orbit.planet2);\n        if (distance\
    \ < sun){\n            result.push(orbit.planet1.name);\n        }\n        if\
    \ (distance > sun){\n            result.push(orbit.planet2.name);\n        }\n\
    \    });\n    return result.sort();\n}\n", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1",
  "  var planet1 = planet1.toLowerCase();\n  var planet2 = planet2.toLowerCase();\n\
    \  var planet1orbit = planet1orbits[planet1];\n  var planet2orbit = planet2orbits[planet2];\n\
    \  var planet1orbitorbit = planet1orbitorbits[planet1];\n  var planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbit\
    \ = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var plan", " \
    \   var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1Sun = sun(planet1Orbit);\n    var planet2Sun = sun(planet2Orbit);\n\
    \    var planet1OrbitSun = orbit(planet1Orbit);\n    var planet2OrbitSun = orbit(planet2Orbit);\n\
    \    var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n\
    \    var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n\
    \    var planet1OrbitSunDistanceSorted = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted2 = sortByDistance(planet1OrbitSunDistanceSorted);\n\
    \    var planet2OrbitSunDistanceSorted2 = sortByDistance(planet2OrbitSunDistanceSorted);\n\
    \    var planet1OrbitSunDistanceSorted3 = sortByDistance(planet1OrbitSunDistanceSorted2);\n\
    \    var planet2OrbitSunDistanceSorted3 = sortByDistance(planet2OrbitSunDistanceSorted2);\n\
    \    var planet1OrbitSunDistanceSorted4 = sortByDistance(planet1OrbitSunDistanceSorted3);\n\
    \    var planet2OrbitSunDistanceSorted4 = sortByDistance(planet2OrbitSunDistanceSorted3);\n\
    \    var planet1OrbitSunDistanceSorted5 = sortByDistance(planet1OrbitSunDistanceSorted4);\n\
    \    var planet2OrbitSunDistanceSorted5 = sortByDistance(planet2OrbitSunDistanceSorted4);\n\
    \    var planet1OrbitSunDistanceSorted6 = sortByDistance(planet1OrbitSunDistanceSorted5);\n\
    \    var planet2OrbitSunDistanceSorted6 = sortByDistance(planet2OrbitSunDistanceSorted5);\n\
    \    var planet1OrbitSunDistanceSorted7 = sortByDistance(planet1OrbitSunDistanceSorted6);\n\
    \    var planet2OrbitSunDistanceSorted7 = sortByDistance(planet2OrbitSunDistanceSorted6);\n\
    \    var planet1OrbitSunDistanceSorted8 = sortByDistance(planet1OrbitSunDistanceSorted7);\n\
    \    var planet2OrbitSunDistanceSorted8 = sortByDistance(planet", "    var planet1Orbit\
    \ = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance\
    \ = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1Orbit", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\t\
    let planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun);\n\tlet planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun =\
    \ orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \    let planet2OrbitSun = planet2Orbit.orbit(sun);\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(sun);\n    let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(sun);\n\
    \    let planet1OrbitSunDistanceSorted = planet1OrbitSun.sort((a, b) => a.distanceTo(sun)\
    \ - b.distanceTo(sun));\n    let planet2OrbitSunDistanceSorted = planet2OrbitSun.sort((a,\
    \ b) => a.distanceTo(sun) - b.distanceTo(sun));\n    let planet1OrbitSunDistanceSorted2\
    \ = planet1OrbitSunDistanceSorted.sort((a, b) => a.distanceTo(sun) - b.distanceTo(sun));\n\
    \    let planet2OrbitSunDistanceSorted2 = planet2OrbitSunDistanceSorted.sort((a,\
    \ b) => a.distanceTo(sun) - b.distanceTo(sun));\n    let planet1OrbitSunDistanceSorted3\
    \ = planet1OrbitSunDistanceSorted2.sort((a, b) => a.distanceTo(sun) - b.distanceTo(sun));\n\
    \    let planet2OrbitSunDistanceSorted3 = planet2OrbitSunDistanceSorted2.sort((a,\
    \ b) => a.distanceTo(sun) - b.distanceTo(sun));\n    let planet1OrbitSunDistanceSorted4\
    \ = planet1OrbitSunDistanceSorted3.sort((a, b) => a.distanceTo(sun) - b.distanceTo(sun));\n\
    \    let planet2OrbitSunDistanceSorted4 = planet2OrbitSunDistanceSorted3.sort((a,\
    \ b) => a.distanceTo(sun) - b.distanceTo(sun));\n    let planet1OrbitSunDistanceSorted5\
    \ = planet1OrbitSunDistanceSorted4.sort((a, b) => a.distanceTo(sun) - b.distanceTo(sun));\n\
    \    let planet2OrbitSunDistanceSorted5 = planet2OrbitSunDistanceSorted4.sort((a,\
    \ b) => a.distanceTo(sun) - b.distanceTo(sun));\n    let planet1OrbitSunDistanceSorted6\
    \ = planet1OrbitSunDistanceSorted5.sort((a, b) => a.distanceTo(sun) - b.distanceTo(sun));\n\
    \    let planet2OrbitSunDistanceSorted6 = planet2OrbitSunDistanceSorted5.sort((a,\
    \ b) => a.distanceTo(sun) - b.distanceTo(sun));\n    let plan", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitDistance\
    \ = distance(planet1Orbit);\n\tlet planet2OrbitDistance = distance(planet2Orbit);\n\
    \tlet planet1OrbitDistanceToSun = planet1OrbitDistance - sunRadius;\n\tlet planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - sunRadius;\n\tlet planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5AndPlanet6\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun;\n\tlet planet1OrbitDistanceToSunAndPlanet1AndPlan",
  "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1OrbitSun = planet1Orbit.orbit(sun);\n  var planet2OrbitSun = planet2Orbit.orbit(sun);\n\
    \  var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(sun);\n  var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(sun);\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared = planet1",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistance.indexOf(planet1);\n\
    \    let planet1OrbitDistanceDistance = planet1OrbitDistance.slice(planet1OrbitDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistanceDistance = planet2OrbitDistance.slice(planet2OrbitDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceDistanceIndex = planet1OrbitDistanceDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceDistanceIndex = planet2OrbitDistanceDistance.indexOf(planet1);\n\
    \    let planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistance.slice(planet1OrbitDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistance.slice(planet2OrbitDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceDistanceDistanceIndex = planet2OrbitDistanceDistanceDistance.indexOf(planet1);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistance.slice(planet1OrbitDistanceDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance.slice(planet2OrbitDistanceDistanceDistanceIndex).sort((a,b)=>a-b);\n\
    \    let planet1OrbitDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistanceDistance.indexOf(planet2);\n\
    \    let planet2OrbitDistanceDistanceDistanceDistanceIndex = planet2", "    var\
    \ planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n   \
    \ var planet1OrbitDistance = distance(planet1Orbit);\n    var planet2OrbitDistance\
    \ = distance(planet2Orbit);\n    var planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sunDistance;\n    var planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSun / planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSun / planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * planet1Orbit;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSunOrbit * planet2Orbit;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * planet1;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSunOrbit * planet2;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * planet1;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSunOrbit * planet2;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * planet1;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSunOrbit * planet2;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * planet1;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSunOrbit * planet2;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * planet1;\n\
    \    var planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSunOrbit * planet2;\n\
    \    var planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSunOrbit * plan",
  "    var planet1 = planet1.toLowerCase();\n    var planet2 = planet2.toLowerCase();\n\
    \    var planet1orbit = planet1orbits[planet1];\n    var planet2orbit = planet2orbits[planet2];\n\
    \    var planet1orbitorbit = planet1orbitorbits[planet1];\n    var planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbit", "    let\
    \ planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n   \
    \ let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit);\n    let\
    \ planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun, planet1OrbitSunOrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun, planet2OrbitSunOrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSun", "  var planet1Orbit\
    \ = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var planet1OrbitSun\
    \ = planet1Orbit.sun;\n  var planet2OrbitSun = planet2Orbit.sun;\n  var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distance(planet2OrbitSun);\n  var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distance(planet1OrbitSun);\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n  var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n  var planet1OrbitSunDistanceSquared",
  "  if(planet1 === planet2){\n    return [];\n  }\n  if(planet1 === \"Mercury\"){\n\
    \    return [\"Venus\"];\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Earth\"\
    ){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet1 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet1 === \"Neptune\"){\n    return [\"\
    Mercury\"];\n  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n\
    \  if(planet2 === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Mars\"){\n  \
    \  return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Jupiter\"\
    ){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Saturn\"){\n\
    \    return [\"Uranus\"];\n  }\n  if(planet2 === \"Uranus\"){\n    return [\"\
    Neptune\"];\n  }\n  if(planet2 === \"Neptune\"){\n    return [\"Mercury\"];\n\
    \  }\n}\n", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1OrbitSun = planet1Orbit.orbital;\n\tlet planet2OrbitSun = planet2Orbit.orbital;\n\
    \tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(sun);\n\tlet planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(sun);\n\tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance\
    \ * planet1OrbitSunDistance;\n\tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance\
    \ * planet2OrbitSunDistance;\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquared - planet2OrbitSunDistanceSquared;\n\tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquared;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ - planet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared;\n\tlet\
    \ planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared;\n\
    \tlet planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredMinusPlanet2",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n    let planet2OrbitSunOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit);\n    let\
    \ planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit);\n    let planet2OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit);\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit, planet1OrbitSunOrbitOrbitOrbit);\n\
    \    let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit, planet2OrbitSunOrbitOrbitOrbit);\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1Or", "  var planet1Orbit = orbit(planet1);\n\
    \  var planet2Orbit = orbit(planet2);\n  var planet1Sun = sunOrbit(planet1Orbit);\n\
    \  var planet2Sun = sunOrbit(planet2Orbit);\n  var planet1OrbitSun = orbit(planet1Orbit);\n\
    \  var planet2OrbitSun = orbit(planet2Orbit);\n  var planet1SunOrbitSun = sunOrbit(planet1OrbitSun);\n\
    \  var planet2SunOrbitSun = sunOrbit(planet2OrbitSun);\n  var planet1OrbitSunOrbitSun\
    \ = orbit(planet1OrbitSun);\n  var planet2OrbitSunOrbitSun = orbit(planet2OrbitSun);\n\
    \  var planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun);\n  var\
    \ planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSun);\n  var planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1OrbitSun", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit.slice(planet1OrbitIndex).length;\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).length;\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - sunDistance(planet1);\n    let planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - sunDistance(planet2);\n    let planet1OrbitDistanceToSunOrbit1\
    \ = planet1OrbitDistanceToSun / planet1Orbit.length;\n    let planet2OrbitDistanceToSunOrbit2\
    \ = planet2OrbitDistanceToSun / planet2Orbit.length;\n    let planet1OrbitDistanceToSunOrbit1Orbit2\
    \ = planet1OrbitDistanceToSunOrbit1 + planet2OrbitDistanceToSunOrbit2;\n    let\
    \ planet1OrbitDistanceToSunOrbit1Orbit2Orbit1 = planet1OrbitDistanceToSunOrbit1Orbit2\
    \ + planet2OrbitDistanceToSunOrbit1;\n    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2\
    \ = planet1OrbitDistanceToSunOrbit1Orbit2Orbit1 + planet2OrbitDistanceToSunOrbit1Orbit2;\n\
    \    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1 = planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2\
    \ + planet2OrbitDistanceToSunOrbit1Orbit2Orbit1;\n    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1Orbit2\
    \ = planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1 + planet2OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2;\n\
    \    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1Orbit2Orbit1 = ",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    let planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    let planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n    let\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitSun = planet1Orbit.sun;\n\tlet planet2OrbitSun = planet2Orbit.sun;\n\
    \tlet planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \tlet planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2Orbit", "  var planet1Orbit = orbit(planet1);\n\
    \  var planet2Orbit = orbit(planet2);\n  var planet1Sun = sun(planet1Orbit);\n\
    \  var planet2Sun = sun(planet2Orbit);\n  var planet1OrbitSun = orbit(planet1Orbit);\n\
    \  var planet2OrbitSun = orbit(planet2Orbit);\n  var planet1OrbitSunDistance =\
    \ distance(planet1OrbitSun, planet1Orbit);\n  var planet2OrbitSunDistance = distance(planet2OrbitSun,\
    \ planet2Orbit);\n  var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n\
    \  var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n  var\
    \ planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n  var planet2OrbitSunDistance\
    \ = distance(planet2OrbitSun, planet2Orbit);\n  var planet1OrbitSunDistance =\
    \ distance(planet1OrbitSun, planet1Orbit);\n  var planet2OrbitSunDistance = distance(planet2OrbitSun,\
    \ planet2Orbit);\n  var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n\
    \  var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n  var\
    \ planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n  var planet2OrbitSunDistance\
    \ = distance(planet2OrbitSun, planet2Orbit);\n  var planet1OrbitSunDistance =\
    \ distance(planet1OrbitSun, planet1Orbit);\n  var planet2OrbitSunDistance = distance(planet2OrbitSun,\
    \ planet2Orbit);\n  var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n\
    \  var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n  var\
    \ planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n  var planet2OrbitSunDistance\
    \ = distance(planet2Or", "    var planets = [planet1, planet2];\n    var sun =\
    \ findSun();\n    var planet1 = findPlanet(planet1);\n    var planet2 = findPlanet(planet2);\n\
    \    var orbit1 = findOrbit(planet1);\n    var orbit2 = findOrbit(planet2);\n\
    \    var distance = getDistance(orbit1, orbit2);\n    var planets = [];\n    planets.push(planet1);\n\
    \    planets.push(planet2);\n    planets = planets.filter(function(planet){\n\
    \        return getDistance(orbit1, orbit2) < distance;\n    });\n    planets\
    \ = planets.sort();\n    return planets;\n}\n", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \    let planet2OrbitSun = planet2Orbit.orbit(sun);\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(sun);\n    let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(sun);\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitLength\
    \ = planet1Orbit.length;\n\tlet planet2OrbitLength = planet2Orbit.length;\n\t\
    let planet1OrbitDistance = planet1OrbitIndex - planet2OrbitIndex;\n\tlet planet2OrbitDistance\
    \ = planet2OrbitIndex - planet1OrbitIndex;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSqu", "    let planet1Orbit\
    \ = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n    let planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2)\n    let planet2OrbitIndex = planet2Orbit.indexOf(planet1)\n\
    \    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).reduce((acc,\
    \ cur)=>{\n        return acc + distance(cur, planet2)\n    }, 0);\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).reduce((acc, cur)=>{\n        return\
    \ acc + distance(cur, planet1)\n    }, 0);\n    let planet1OrbitDistanceIndex\
    \ = planet1Orbit.indexOf(planet1)\n    let planet2OrbitDistanceIndex = planet2Orbit.indexOf(planet2)\n\
    \    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitDistanceIndex).reduce((acc,\
    \ cur)=>{\n        return acc + distance(cur, planet1)\n    }, 0);\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitDistanceIndex).reduce((acc, cur)=>{\n     \
    \   return acc + distance(cur, planet2)\n    }, 0);\n    let planet1OrbitDistanceIndex\
    \ = planet1Orbit.indexOf(planet2)\n    let planet2OrbitDistanceIndex = planet2Orbit.indexOf(planet1)\n\
    \    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitDistanceIndex).reduce((acc,\
    \ cur)=>{\n        return acc + distance(cur, planet1)\n    }, 0);\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitDistanceIndex).reduce((acc, cur)=>{\n     \
    \   return acc + distance(cur, planet2)\n    }, 0);\n    let planet1OrbitDistanceIndex\
    \ = planet1Orbit.indexOf(planet1)\n    let planet2OrbitDistanceIndex = planet2Orbit.indexOf(planet2)\n\
    \    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitDistanceIndex).reduce((acc,\
    \ cur)=>{\n        return acc + distance(cur, planet1)\n    }, 0);\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitDistanceIndex).reduce((acc, cur)=>{", "   \
    \ let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1orbit = orbits[planet1];\n    let planet2orbit = orbits[planet2];\n\
    \    let planet1sun = sun;\n    let planet2sun = sun;\n    let planet1sunorbit\
    \ = planet1orbit;\n    let planet2sunorbit = planet2orbit;\n    let planet1sunsun\
    \ = sunsun;\n    let planet2sunsun = sunsun;\n    let planet1sunsunorbit = planet1sunorbit;\n\
    \    let planet2sunsunorbit = planet2sunorbit;\n    let planet1sunsunsun = sunsunsun;\n\
    \    let planet2sunsunsun = sunsunsun;\n    let planet1sunsunsunorbit = planet1sunsunorbit;\n\
    \    let planet2sunsunsunorbit = planet2sunsunorbit;\n    let planet1sunsunsunsun\
    \ = sunsunsunsun;\n    let planet2sunsunsunsun = sunsunsunsun;\n    let planet1sunsunsunsunorbit\
    \ = planet1sunsunsunorbit;\n    let planet2sunsunsunsunorbit = planet2sunsunsunorbit;\n\
    \    let planet1sunsunsunsunsun = sunsunsunsun;\n    let planet2sunsunsunsun =\
    \ sunsunsunsun;\n    let planet1sunsunsunsunorbit = planet1sunsunsunorbit;\n \
    \   let planet2sunsunsunsunorbit = planet2sunsunsunorbit;\n    let planet1sunsunsunsunsun\
    \ = sunsunsunsun;\n    let planet2sunsunsunsunsun = sunsunsunsun;\n    let planet1sunsunsunsunsunorbit\
    \ = planet1sunsunsunsunorbit;\n    let planet2sunsunsunsunsunorbit = planet2sunsunsunsunorbit;\n\
    \    let planet1sunsunsunsunsunsun = sunsunsunsun;\n    let planet2sunsunsunsunsun\
    \ = sunsunsunsun;\n    let planet1sunsunsunsunsunorbit = planet1sunsunsunsunorbit;\n\
    \    let planet2sunsunsunsunorbit = planet2sunsunsunsunorbit;\n    let planet1sunsunsunsunsun\
    \ = sunsunsunsun;\n    let planet2sunsunsunsunsun = sunsunsun", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\tlet planet1SunOrbit\
    \ = sunOrbit(planet1);\n\tlet planet2SunOrbit = sunOrbit(planet2);\n\tlet planet1OrbitSun\
    \ = orbit(planet1);\n\tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1);\n\tlet planet2OrbitSunOrbit = orbit(planet2);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1);\n\tlet planet2OrbitSunOrbitSun = orbit(planet2);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1);\n\tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2);\n\t\
    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbit = orbit(planet1);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet2);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2);\n\tlet\
    \ planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbit = orbit(planet1);\n\tlet\
    \ planet2OrbitSunOr", "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit\
    \ = orbit(planet2);\n  let planet1Sun = sunOrbit(planet1Orbit);\n  let planet2Sun\
    \ = sunOrbit(planet2Orbit);\n  let planet1Orbits = orbits(planet1Orbit, planet1Sun);\n\
    \  let planet2Orbits = orbits(planet2Orbit, planet2Sun);\n  let planet1Orbits\
    \ = planet1Orbits.sort((a, b) => a - b);\n  let planet2Orbits = planet2Orbits.sort((a,\
    \ b) => a - b);\n  let planet1Orbits = planet1Orbits.filter(x => x !== planet1Orbit);\n\
    \  let planet2Orbits = planet2Orbits.filter(x => x !== planet2Orbit);\n  let planet1Orbits\
    \ = planet1Orbits.filter(x => x !== planet1Sun);\n  let planet2Orbits = planet2Orbits.filter(x\
    \ => x !== planet2Sun);\n  let planet1Orbits = planet1Orbits.filter(x => x !==\
    \ planet2Orbit);\n  let planet2Orbits = planet2Orbits.filter(x => x !== planet1Orbit);\n\
    \  let planet1Orbits = planet1Orbits.filter(x => x !== planet1Sun);\n  let planet2Orbits\
    \ = planet2Orbits.filter(x => x !== planet2Sun);\n  let planet1Orbits = planet1Orbits.filter(x\
    \ => x !== planet2Orbit);\n  let planet2Orbits = planet2Orbits.filter(x => x !==\
    \ planet1Orbit);\n  let planet1Orbits = planet1Orbits.filter(x => x !== planet1Sun);\n\
    \  let planet2Orbits = planet2Orbits.filter(x => x !== planet2Sun);\n  let planet1Orbits\
    \ = planet1Orbits.filter(x => x !== planet2Orbit);\n  let planet2Orbits = planet2Orbits.filter(x\
    \ => x !== planet1Orbit);\n  let planet1Orbits = planet1Orbits.filter(x => x !==\
    \ planet1Sun);\n  let plan", "    var planet1Orbit = orbit(planet1);\n    var\
    \ planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

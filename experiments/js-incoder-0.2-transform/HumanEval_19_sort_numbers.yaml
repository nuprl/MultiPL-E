name: HumanEval_19_sort_numbers
language: js
prompt: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to\
  \ largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\nfunction\
  \ sort_numbers(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
  \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
  ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
  \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
completions: ["\tvar numbers = numbers.split(\" \");\n\tvar sorted_numbers = \"\"\
    ;\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tsorted_numbers += numbers[i]\
    \ + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.split(\" \");\n\tsorted_numbers.sort();\n\
    \tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].trim();\n\
    \t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\t", "  var numbers = numbers.split(\" \");\n  var numbers_sorted =\
    \ [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(\" \");\n}\n",
  "  var numbers_array = numbers.split(\" \");\n  var sorted_numbers = \"\";\n  for(var\
    \ i = 0; i < numbers_array.length; i++){\n    sorted_numbers += numbers_array[i];\n\
    \    if(i != numbers_array.length - 1){\n      sorted_numbers += \" \";\n    }\n\
    \  }\n  return sorted_numbers;\n}\n", "\tvar numbers_array = numbers.split(\"\
    \ \");\n\tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length;\
    \ i++){\n\t\tsorted_numbers += numbers_array[i];\n\t\tif(i < numbers_array.length\
    \ - 1){\n\t\t\tsorted_numbers += \" \";\n\t\t}\n\t}\n\treturn sorted_numbers;\n\
    }\n", "  var numbers_arr = numbers.split(\" \");\n  var sorted_numbers = \"\"\
    ;\n  for(var i=0; i<numbers_arr.length; i++){\n    sorted_numbers += numbers_arr[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\" \").sort().join(\"\
    \ \");\n  return sorted_numbers;\n}\n", "\tvar numbers_array = numbers.split(\"\
    \ \");\n\tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length;\
    \ i++){\n\t\tsorted_numbers += numbers_array[i] + \" \";\n\t}\n\tsorted_numbers\
    \ = sorted_numbers.replace(/\\s+$/,\"\");\n\tsorted_numbers = sorted_numbers.replace(/^\\\
    s+/,\"\");\n\tsorted_numbers = sorted_numbers.replace(/\\s+/,\" \");\n\treturn\
    \ sorted_numbers;\n}\n", "\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\t\tsorted_numbers\
    \ += numbers_array[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.split(\"\
    \ \").sort().join(\" \");\n\treturn sorted_numbers;\n}\n", "  var numbers_array\
    \ = numbers.split(\" \");\n  var sorted_numbers = numbers_array.sort();\n  return\
    \ sorted_numbers.join(\" \");\n}\n", "  var numbers_array = numbers.split(\" \"\
    );\n  var numbers_sorted = [];\n  for(var i=0; i<numbers_array.length; i++){\n\
    \    numbers_sorted.push(parseInt(numbers_array[i]));\n  }\n  numbers_sorted.sort();\n\
    \  return numbers_sorted.join(\" \");\n}\n", "\tvar numbers_array = numbers.split(\"\
    \ \");\n\tvar numbers_sorted = [];\n\tfor(var i=0;i<numbers_array.length;i++){\n\
    \t\tnumbers_sorted.push(parseInt(numbers_array[i]));\n\t}\n\tnumbers_sorted.sort(function(a,b){return\
    \ a-b});\n\treturn numbers_sorted.join(\" \");\n}\n", "  var numbers = numbers.split(\"\
    \ \");\n  numbers.sort();\n  return numbers.join(\" \");\n}\n", "\tvar numbers_array\
    \ = numbers.split(\" \");\n\tvar sorted_numbers = \"\";\n\tvar sorted_numbers_array\
    \ = [];\n\t\n\tfor(var i=0; i<numbers_array.length; i++){\n\t\tsorted_numbers_array.push(parseInt(numbers_array[i]));\n\
    \t}\n\t\n\tsorted_numbers_array.sort(function(a, b){\n\t\treturn a-b;\n\t});\n\
    \t\n\tfor(var i=0; i<sorted_numbers_array.length; i++){\n\t\tsorted_numbers +=\
    \ sorted_numbers_array[i] + \" \";\n\t}\n\t\n\treturn sorted_numbers;\n}\n", "\t\
    var numbers_array = numbers.split(\" \");\n\tvar sorted_numbers = \"\";\n\tfor(var\
    \ i = 0; i < numbers_array.length; i++){\n\t\tsorted_numbers += numbers_array[i];\n\
    \t\tif(i < numbers_array.length - 1){\n\t\t\tsorted_numbers += \" \";\n\t\t}\n\
    \t}\n\treturn sorted_numbers;\n}\n", "  var numbers = numbers.split(\" \");\n\
    \  var numbers_sorted = numbers.sort(function(a, b){\n    return a - b;\n  });\n\
    \  return numbers_sorted.join(\" \");\n}\n", "    var numbers = numbers.split(\"\
    \ \");\n    var numbers_sorted = [];\n    var current_number = 0;\n    var current_string\
    \ = \"\";\n    \n    while(current_number < numbers.length){\n        current_string\
    \ = numbers[current_number];\n        \n        if(current_string == \"zero\"\
    ){\n            numbers_sorted.push(\"zero\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"one\"\
    ){\n            numbers_sorted.push(\"one\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"two\"\
    ){\n            numbers_sorted.push(\"two\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"three\"\
    ){\n            numbers_sorted.push(\"three\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"four\"\
    ){\n            numbers_sorted.push(\"four\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"five\"\
    ){\n            numbers_sorted.push(\"five\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"six\"\
    ){\n            numbers_sorted.push(\"six\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"seven\"\
    ){\n            numbers_sorted.push(\"seven\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"eight\"\
    ){\n            numbers_sorted.push(\"eight\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"nine\"\
    ){\n            numbers_sorted.push(\"nine\");\n            current_number++;\n\
    \            continue;\n        }\n    }\n    \n    return numbers_sorted.join(\"\
    \ \");\n}\n", "\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\t\tvar current_number\
    \ = numbers_array[i];\n\t\tfor(var j = 0; j < numbers_array.length; j++){\n\t\t\
    \tif(j == i){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(current_number < numbers_array[j]){\n\
    \t\t\t\tcurrent_number = numbers_array[j];\n\t\t\t}\n\t\t}\n\t\tsorted_numbers\
    \ += current_number + \" \";\n\t}\n\treturn sorted_numbers.trim();\n}\n", "  var\
    \ numbers_array = numbers.split(\" \");\n  numbers_array.sort(function(a, b){\n\
    \    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n", "  var numbers_array\
    \ = numbers.split(\" \");\n  var sorted_numbers = \"\";\n  for(var i=0; i<numbers_array.length;\
    \ i++){\n    sorted_numbers += numbers_array[i] + \" \";\n  }\n  sorted_numbers\
    \ = sorted_numbers.split(\" \").sort(function(a, b){\n    return a - b;\n  });\n\
    \  for(var i=0; i<sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].toString();\n\
    \  }\n  return sorted_numbers.join(\" \");\n}\n", "\tvar numbers_array = numbers.split(\"\
    \ \");\n\tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length;\
    \ i++){\n\t\tsorted_numbers += numbers_array[i] + \" \";\n\t}\n\tsorted_numbers\
    \ = sorted_numbers.trim();\n\tsorted_numbers = sorted_numbers.split(\" \");\n\t\
    sorted_numbers.sort();\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\t\
    sorted_numbers[i] = sorted_numbers[i].trim();\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tfor(var j = 0; j < sorted_numbers[i].length;\
    \ j++){\n\t\t\tsorted_numbers[i][j] = sorted_numbers[i][j].charCodeAt(0);\n\t\t\
    }\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tfor(var j = 0;\
    \ j < sorted_numbers[i].length; j++){\n\t\t\tsorted_numbers[i][j] = sorted_numbers[i][j]\
    \ - 96;\n\t\t}\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\treturn sorted_numbers.join(\" \");\n\
    }\n", "    var numbers_array = numbers.split(\" \");\n    var sorted_numbers =\
    \ \"\";\n    var sorted_numbers_array = [];\n    for(var i = 0; i < numbers_array.length;\
    \ i++){\n        sorted_numbers_array.push(parseInt(numbers_array[i]));\n    }\n\
    \    sorted_numbers_array.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0; i < sorted_numbers_array.length; i++){\n        sorted_numbers\
    \ += sorted_numbers_array[i] + \" \";\n    }\n    return sorted_numbers;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

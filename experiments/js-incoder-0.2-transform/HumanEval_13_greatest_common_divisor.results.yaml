language: js
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b !==\
    \ 0)\n    return greatest_common_divisor(b, a % b);\n  else\n    return Math.abs(a)\
    \ % Math.abs(b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpna087zn2.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpna087zn2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b instanceof BigNumber){\n\
    \    return a.gcdOf(b);\n  }\n  if(a instanceof BigNumber){\n    return b.gcdOf(a);\n\
    \  }\n  throw new Error('Value must be BigNumber or BigNumber');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpif_avt6p.js:9\n  if(b instanceof BigNumber){\n                \
    \  ^\n\nReferenceError: BigNumber is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmpif_avt6p.js:9:19)\n    at test (/tmp/tmpif_avt6p.js:23:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpif_avt6p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b ===\
    \ -1)\n    return a;\n  if(b === -2)\n    return a;\n  if(b === -3)\n    return\
    \ a;\n  if(b === -4)\n    return a;\n  if(b === -5)\n    return a;\n  if(b ===\
    \ -6)\n    return a;\n  if(b === -7)\n    return a;\n  if(b === -8)\n    return\
    \ a;\n  if(b === -9)\n    return a;\n  if(b === -10)\n    return a;\n  if(b ===\
    \ -11)\n    return a;\n  if(b === -12)\n    return a;\n  if(b === -13)\n    return\
    \ a;\n  if(b === -14)\n    return a;\n  if(b === -15)\n    return a;\n  if(b ===\
    \ -16)\n    return a;\n  if(b === -17)\n    return a;\n  if(b === -18)\n    return\
    \ a;\n  if(b === -19)\n    return a;\n  if(b === -20)\n    return a;\n  if(b ===\
    \ -21)\n    return a;\n  if(b === -22)\n    return a;\n  if(b === -23)\n    return\
    \ a;\n  if(b === -24)\n    return a;\n  if(b === -25)\n    return a;\n  if(b ===\
    \ -26)\n    return a;\n  if(b === -27)\n    return a;\n  if(b === -28)\n    return\
    \ a;\n  if(b === -29)\n    return a;\n  if(b === -30)\n    return a;\n  if(b ===\
    \ -31)\n    return a;\n  if(b === -32)\n    return a;\n  if(b === -33)\n    return\
    \ a;\n  if(b === -34)\n    return a;\n  if(b === -35)\n    return a;\n  if(b ===\
    \ -36)\n    return a;\n  if(b === -37)\n    return a;\n  if(b === -38)\n    return\
    \ a;\n  if(b === -39)\n    return a;\n  if(b === -40)\n    return a;\n  if(b ===\
    \ -41)\n    return a;\n  if(b === -42)\n    return a;\n  if(b === -43)\n    return\
    \ a;\n  if(b === -44)\n    return a;\n  if(b === -45)\n    return a;\n  if(b ===\
    \ -46)\n    return a;\n  if(b === -47)\n    return a;\n  if(b === -48)\n    return\
    \ \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp5g2s8yq9.js:118\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n21\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp98g_5x02.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp98g_5x02.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(a == 0) return b;\n  if(b > a) return greatest_common_divisor(b,\
    \ a % b);\n  else return greatest_common_divisor(a, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpn2lnvxg8.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn2lnvxg8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a/2, b);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7lz33m7d.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpzsnd7bas.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzsnd7bas.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a/2, b);\n  var c = 1;\n  while(b !== 0){\n\
    \    if(a % 2 === 0){\n      b = b / 2;\n      a = a / 2;\n    }\n    else if(b\
    \ % 2 === 0){\n      a = a / 2;\n      b = b / 2;\n    }\n    else{\n      b =\
    \ (b - a % b) / 2;\n      a = a / 2;\n    }\n    c++;\n  }\n  return c;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1076\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpsbd9c9jv.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsbd9c9jv.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1076,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4r1hb4ur.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4r1hb4ur.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return 1;\n  if(a === b)\n    return 1;\n  if(a < b)\n    return greatest_common_divisor(b,\
    \ a);\n  if(a > b)\n    return greatest_common_divisor(a, b);\n  throw new Error(\"\
    Greatest common divisor is unreachable\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpfnjxcjd1.js:7\n  if(a === 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:18:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpfnjxcjd1.js:18:12)\n    at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:18:12)\n\
    \    at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:18:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpfnjxcjd1.js:18:12)\n    at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:18:12)\n\
    \    at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:18:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpfnjxcjd1.js:18:12)\n    at greatest_common_divisor (/tmp/tmpfnjxcjd1.js:18:12)\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpnqk0p7xs.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpnqk0p7xs.js:7:3)\n    at greatest_common_divisor (/tmp/tmpnqk0p7xs.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpnqk0p7xs.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpnqk0p7xs.js:7:21)\n    at greatest_common_divisor (/tmp/tmpnqk0p7xs.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpnqk0p7xs.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpnqk0p7xs.js:7:21)\n    at greatest_common_divisor (/tmp/tmpnqk0p7xs.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpnqk0p7xs.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpnqk0p7xs.js:7:21)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

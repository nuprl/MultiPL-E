language: js
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a > b + c || b > a + c || c > a + b){\n\
    \        return -1;\n    }\n    return Math.sqrt(Math.pow((a + b + c), .25));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.3642616018213658\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprxs8h_wn.js:23:10)\n  \
    \  at Object.<anonymous> (/tmp/tmprxs8h_wn.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.3642616018213658,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a){\n\
    \        return Math.sqrt(Math.pow((a + b), 2) + Math.pow((a + c), 2) + Math.pow((b\
    \ + c), 2));\n    }\n    return -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpum01rir6.js:23:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpum01rir6.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tvar s = (a + b + c) / 2;\n\treturn (s > a)\
    \ ? (s / 2) : (-1 * s / 2);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp7p44sq8f.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7p44sq8f.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = a + b + c\n    if (s > a * a + b\
    \ * b + c * c){\n        return -1\n    }\n    var area = (s*(s-a)*(s-b)*(s-c))/6\n\
    \    return Math.round(area*100)/100\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1008\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpnoaawh0u.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoaawh0u.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1008,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a+b+c)/2;\n    if (s > a&&s<=b&&s<=c)\
    \ return s;\n    else return -1;\n}\n</code>\n<|/ a tags=python,algorithm |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to know if any triangle can\
    \ be formed by three points. Your code only checks if three points are collinear.\n\
    <|/ c |>\n<| c |>\nI misunderstood the question, thanks for pointing it out. I've\
    \ edited my answer to reflect that.\n<|/ c |>\n<| a |>\n<code>\ndef triangleArea(A,\
    \ B, C):\n    AB = B - A\n    AC = C - A\n    BC = B - C\n    \n    AB_AC = AB\
    \ * AC\n    AB_BC = AB * BC\n    AC_BC = AC * BC\n    \n    area_of_triangle =\
    \ AB_AC + AB_BC + AC_BC\n    \n    if area_of_triangle > 0:\n        return area_of_triangle\n\
    \    else:\n        return -1\n</code>\n<|/ a dscore=1 tags=python,algorithm |>\n\
    <| a tags=python,algorithm |>\n<code>\ndef triangleArea(A, B, C):\n    AB = B\
    \ - A\n    AC = C - A\n    BC = B - C\n    \n    area_of_triangle = AB * AC +\
    \ AB * BC + AC * BC\n    \n    if area_of_triangle > 0:\n        return area_of_triangle\n\
    \    else:\n        return -1\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\ndef triangleArea(A, B, C):\n    AB = B - A\n    AC = C - A\n    BC = B\
    \ - C\n    \n    area_of_triangle = AB * AC + AB * BC + AC * BC\n    \n    if\
    \ area_of_triangle > 0:\n        return area_of_triangle\n    else:\n        return\
    \ -1\n</code>\n<|/ a tags=python,algorithm |>\n<| a |>\n<code>\ndef triangleArea(A,\
    \ B, C):\n    AB = B - A\n    AC = C - A\n    BC = B - C\n    \n    area_of_triangle\
    \ = AB * AC + AB * BC + AC * BC\n    \n    if area_of_triangle > 0:\n        return\
    \ area_of_triangle\n    else:\n        return -1\n</code>\n<|/ a dscore=1 tags=python,algorithm\
    \ |>\n<| a tags=python,algorithm |>\n<code>\ndef triangleArea\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpuiaavohm.js:16\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif((a + b > c) && (a + c > b) && (b + c >\
    \ a)){\n\t\treturn Math.sqrt(Math.pow((a + b), 2) + Math.pow((a + c), 2) + Math.pow((b\
    \ + c), 2));\n\t}\n\treturn -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpf2zp8jcj.js:23:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpf2zp8jcj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = a + b + c;\n    if (s > a * a +\
    \ b * b + c * c) {\n        return -1;\n    }\n    return Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpze5v_9nd.js:24:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpze5v_9nd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var s = a + b + c\n  var area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n  return area > 0 ? area : -1\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpcarx8sid.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpcarx8sid.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = a + b + c;\n    var area = Math.abs(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)));\n    return area > 0 ? area : -1;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_57_3a_s.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp_57_3a_s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c && b+c>a && c+a>b){\n\t\treturn (a+b+c)/2;\n\
    \t}\n\treturn -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpx1bmkmmh.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpx1bmkmmh.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var s = a + b + c\n  if (s > a * a + b * b\
    \ + c * c){\n    return -1\n  }\n  return Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8y2gbcfz.js:24:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp8y2gbcfz.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = a + b + c;\n    if (s > 0){\n  \
    \      return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpcbohyi7r.js:24:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpcbohyi7r.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a+b+c)/2;\n    if(s>=(a+b) && s>=(a+c)\
    \ && s>=(b+c)){\n        return Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return\
    \ -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4eyd29ea.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4eyd29ea.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b > c || a+c > b || b+c > a){\n\t\treturn\
    \ -1;\n\t}\n\treturn Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp2oneszg2.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2oneszg2.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c || b+c>a || c+a>b){\n\t\treturn -1;\n\
    \t}\n\treturn (a+b+c)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqporqyd7.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqporqyd7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tvar s = a + b + c;\n\tif (s > a * a + b *\
    \ b + c * c){\n\t\treturn -1;\n\t}\n\treturn Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8gsi9cb5.js:24:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp8gsi9cb5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c || b+c>a || c+a>b){\n\t\treturn -1;\n\
    \t}\n\treturn (a+b+c)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqporqyd7.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqporqyd7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c || b+c>a || c+a>b){\n\t\treturn -1;\n\
    \t}\n\treturn (a+b+c)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqporqyd7.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqporqyd7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a + b + c) / 2;\n    if(s > a *\
    \ b){\n        return -1;\n    }\n    if(s > a * c){\n        return -1;\n   \
    \ }\n    if(s > b * c){\n        return -1;\n    }\n    return Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpctqokdbf.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpctqokdbf.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c || b+c>a || c+a>b){\n\t\treturn -1;\n\
    \t}\n\treturn (a+b+c)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqporqyd7.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqporqyd7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

name: HumanEval_143_words_in_sentence
language: js
prompt: "//You are given a string representing a sentence,\n// the sentence contains\
  \ some words separated by a space,\n// and you have to return a string that contains\
  \ the words from the original sentence,\n// whose lengths are prime numbers,\n//\
  \ the order of the words in the new string should be the same as the original one.\n\
  // Example 1:\n// >>> words_in_sentence(\"This is a test\")\n// \"is\"\n// Example\
  \ 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n// \"go for\"\n// Constraints:\n\
  // * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence(sentence){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = words_in_sentence;\n  assert.deepEqual(candidate(\"This is a test\"),\"is\"\
  );\n  assert.deepEqual(candidate(\"lets go for swimming\"),\"go for\");\n  assert.deepEqual(candidate(\"\
  there is no place available here\"),\"there is no place\");\n  assert.deepEqual(candidate(\"\
  Hi I am Hussein\"),\"Hi am Hussein\");\n  assert.deepEqual(candidate(\"go for it\"\
  ),\"go for it\");\n  assert.deepEqual(candidate(\"here\"),\"\");\n  assert.deepEqual(candidate(\"\
  here is\"),\"is\");\n}\n\ntest();"
completions: ["    let words = sentence.split(\" \");\n    let result = [];\n    for(let\
    \ i = 0; i < words.length; i++){\n        let word = words[i];\n        let prime\
    \ = true;\n        for(let j = i; j < words.length; j++){\n            if(words[j].length\
    \ != word.length){\n                prime = false;\n                break;\n \
    \           }\n        }\n        if(prime){\n            result.push(word);\n\
    \        }\n    }\n    return result.join(\" \");\n}\n", "    let words = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < words.length; i++){\n   \
    \     let word = words[i];\n        let count = 0;\n        for(let j = 0; j <\
    \ word.length; j++){\n            count += word.charCodeAt(j) - 96;\n        }\n\
    \        if(count % 2 === 0){\n            result.push(word);\n        }\n   \
    \ }\n    return result.join(\" \");\n}\n", "    let words = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < words.length; i++){\n   \
    \     let word = words[i];\n        let prime = true;\n        for(let j = 1;\
    \ j < word.length; j++){\n            if(word[j] === \"a\"){\n               \
    \ prime = false;\n            }\n        }\n        if(prime){\n            result.push(word);\n\
    \        }\n    }\n    return result.join(\" \");\n}\n", "    let words = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < words.length; i++){\n   \
    \     let word = words[i];\n        let prime = true;\n        for(let j = 2;\
    \ j < word.length; j++){\n            if(word.charAt(j) != word.charAt(j - 1)){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if(prime){\n            result.push(word);\n        }\n    }\n\
    \    return result.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n\
    \    let res = [];\n    for(let i = 0; i < arr.length; i++){\n        let count\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 2){\n            res.push(arr[i]);\n        }\n    }\n    return res.join(\"\
    \ \");\n}\n", "    // Write your code here\n    let arr = sentence.split(\" \"\
    );\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ count = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ === arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let result = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n         \
    \       count++;\n            }\n        }\n        if(count === 1){\n       \
    \     result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n\
    }\n", "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let isPrime = true;\n        for(let j\
    \ = 2; j < Math.sqrt(arr.length); j++){\n            if(arr[i].length == j){\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if(isPrime){\n            newArr.push(arr[i]);\n        }\n \
    \   }\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            result.push(arr[i]);\n        }\n    }\n\
    \    return result.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n\
    \    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let count\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let result = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n         \
    \       count++;\n            }\n        }\n        if(count === 1){\n       \
    \     result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n\
    }\n", "    let arr = sentence.split(\" \");\n    let newArr = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] === arr[i]){\n                count++;\n\
    \            }\n        }\n        if(count === 1){\n            newArr.push(arr[i]);\n\
    \        }\n    }\n    return newArr.join(\" \");\n}\n", "    let arr = sentence.split(\"\
    \ \");\n    let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let count = 0;\n        for(let j = 0; j < arr.length; j++){\n           \
    \ if(arr[j] === arr[i]){\n                count++;\n            }\n        }\n\
    \        if(count === 1){\n            newArr.push(arr[i]);\n        }\n    }\n\
    \    return newArr.join(\" \");\n}\n", "    let words = [];\n    let word = \"\
    \";\n    for(let i = 0; i < sentence.length; i++){\n        if(sentence[i] ===\
    \ \" \"){\n            words.push(word);\n            word = \"\";\n        }else{\n\
    \            word += sentence[i];\n        }\n    }\n    words.push(word);\n \
    \   return words.join(\" \");\n}\n", "    let arr = sentence.split(\" \");\n \
    \   let newArr = [];\n    for(let i = 0; i < arr.length; i++){\n        let count\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] ===\
    \ arr[i]){\n                count++;\n            }\n        }\n        if(count\
    \ === 1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let newArr = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        let n = arr[i].length;\n    \
    \    for(let j = 2; j <= n; j++){\n            if(n % j === 0){\n            \
    \    let prime = true;\n                for(let k = 0; k < j; k++){\n        \
    \            if(arr[i].charAt(k) === arr[i].charAt(k + 1)){\n                \
    \        prime = false;\n                        break;\n                    }\n\
    \                }\n                if(prime){\n                    newArr.push(arr[i]);\n\
    \                }\n            }\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n", "    let arr = sentence.split(\" \");\n    let result = [];\n  \
    \  for(let i = 0; i < arr.length; i++){\n        let count = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n         \
    \       count++;\n            }\n        }\n        if(count === 1){\n       \
    \     result.push(arr[i]);\n        }\n    }\n    return result.join(\" \");\n\
    }\n", "    let arr = sentence.split(\" \");\n    let res = [];\n    for(let i\
    \ = 0; i < arr.length; i++){\n        let str = arr[i];\n        let len = str.length;\n\
    \        for(let j = 1; j <= len; j++){\n            if(isPrime(j) && isPrime(len\
    \ - j)){\n                res.push(str);\n                break;\n           \
    \ }\n        }\n    }\n    return res.join(\" \");\n}\n", "    let words = sentence.split(\"\
    \ \");\n    let result = \"\";\n    for(let i = 0; i < words.length; i++){\n \
    \       let word = words[i];\n        let prime = true;\n        for(let j = 0;\
    \ j < word.length; j++){\n            prime = prime && isPrime(word[j]);\n   \
    \     }\n        if(prime){\n            result += word;\n        }\n    }\n \
    \   return result;\n}\n", "    let arr = sentence.split(\" \");\n    let newArr\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let count = 0;\n  \
    \      for(let j = 0; j < arr.length; j++){\n            if(arr[j] === arr[i]){\n\
    \                count++;\n            }\n        }\n        if(count === 1){\n\
    \            newArr.push(arr[i]);\n        }\n    }\n    return newArr.join(\"\
    \ \");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_57_monotonic
language: js
prompt: "//Return True is list elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["    var s = monotonicSort;\n    return l(s) ? s[0] === s[1] : false;\n\
    }\n", "  var s = monotonicSort;\n  return l(s).cmp(l(s).reverse()) === 1;\n}\n",
  "    var o=[], diff=[], l=l.slice(), l2=l.slice(), i;\n    for(i=0;i<l.length;i++){\n\
    \        diff[i] = l[i] - l2[i];\n    }\n    for(i=l.length-1;i>0;i--){\n    \
    \    if(diff[i-1]>0){\n            o.push(l[i]);\n        }\n        else{\n \
    \           break;\n        }\n    }\n    return o.length>1 && o.every(function(elem,\
    \ index, array){\n        return index === array.indexOf(elem);\n    });\n}\n",
  "  var n = l.length,\n      out = 0,\n      i,\n      j,\n      xi,\n      yi,\n\
    \      yj;\n  for(i = 0; i < n; i++){\n    xi = l[i];\n    yi = l[i - 1];\n  \
    \  yj = l[i];\n    if(xi > yi){\n      if(yj > xi){\n        out++;\n      }else{\n\
    \        out--;\n      }\n    }else{\n      if(yi < xi){\n        out++;\n   \
    \   }else{\n        out--;\n      }\n    }\n  }\n  return out < 0;\n}\n", "  \
    \  var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n  \
    \  var m = s[0];\n    for (var i = 1; i < n; ++i){\n        if (s[i] > m){\n \
    \           m = s[i];\n        }\n    }\n    if (m > s[n-1]){\n        return\
    \ true;\n    }\n    return false;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p1, p2; // monotonically increasing or decreasing\n\n\
    \    if (n <= 1) {\n        return true; // empty lists are monotonically increasing\n\
    \    }\n\n    for (i = 1; i < n; ++i) {\n        p1 = l[i-1];\n        p2 = l[i];\n\
    \n        if (p1 !== p2) {\n            monotone = false;\n            break;\n\
    \        }\n    }\n\n    return monotone;\n}\n", "    var o=[], diff=Infinity;\n\
    \    for(var i=l.length-1; i>=0; i--){\n        var v=l[i];\n        if(v<diff){\n\
    \            o.unshift(v);\n            diff=v;\n        }\n        else if(v>diff){\n\
    \            o.push(v);\n            diff=v;\n        }\n    }\n    return o.length>1\
    \ && diff===Infinity;\n}\n", "    var n = l.length;\n    if (n < 2) return false;\n\
    \    var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n        p.push(l[i]);\n\
    \    }\n    j = p.length;\n    for (i = 0; i < n; ++i){\n        while (q[j] ===\
    \ p[i]){\n            q[j] = q[j-1];\n            --j;\n        }\n        q[j]\
    \ = p[i];\n    }\n    return j === 0;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s) ? s[0] === s[1] : false;\n}\n", "    var s = monotonicSort;\n    return\
    \ l(s).sort(function(a, b){\n        return s(a) - s(b);\n    }).join(\"\") ===\
    \ \"\";\n}\nmonotonic.tests = [\n    {\n        name: \"monotonic\",\n       \
    \ func: monotonic,\n        args: function(){\n            return [\n        \
    \        [0, 1],\n                [1, 1],\n                [2, 1],\n         \
    \       [3, 1],\n                [4, 1],\n                [5, 1],\n          \
    \      [6, 1],\n                [7, 1],\n                [8, 1],\n           \
    \     [9, 1],\n                [10, 1],\n                [11, 1],\n          \
    \      [12, 1],\n                [13, 1],\n                [14, 1],\n        \
    \        [15, 1],\n                [16, 1],\n                [17, 1],\n      \
    \          [18, 1],\n                [19, 1],\n                [20, 1]\n     \
    \       ];\n        },\n        exp: \"true\"\n    },\n    {\n        name: \"\
    monotonic (desc)\",\n        func: monotonic,\n        args: function(){\n   \
    \         return [\n                [0, 1],\n                [19, 1],\n      \
    \          [18, 1],\n                [17, 1],\n                [16, 1],\n    \
    \            [15, 1],\n                [14, 1],\n                [13, 1],\n  \
    \              [12, 1],\n                [11, 1],\n                [10, 1],\n\
    \                [9, 1],\n                [8, 1],\n                [7, 1],\n \
    \               [6, 1],\n                [5, 1],\n                [4, 1],\n  \
    \              [3, 1],\n                [2, 1],\n                [1, 1],\n   \
    \             [0, 0]\n            ];\n        },\n        exp: \"true\"\n    },\n\
    \    {\n        name: \"monotonic (desc, no dups)\",\n        func: monotonic,\n\
    \        args: function(){\n            return [\n                [0, 1],\n  \
    \              [19, 1],\n                [18, 1],\n                [17, 1],\n\
    \                [16, 1],\n                [15, 1],\n                [14, 1],\n\
    \                [13, 1],\n                [12, 1],\n                [11, 1],\n\
    \                [10, 1],\n                [9, 1],\n                [8, 1],\n\
    \                [7, 1],\n                [6, 1],\n                [5, 1],\n \
    \               [4, 1],\n                [3, 1],\n                [2, 1],\n  \
    \              [1, 1],\n                [0, 0]\n            ];\n        },\n \
    \       exp: \"true\"\n    },\n    {\n        name: \"monotonic (desc, no dups,\
    \ no dups)\",\n        func: monotonic,\n        args: function(){\n         \
    \   return [\n                [0, 1],\n                [19, 1],\n            \
    \    [18, 1],\n                [17, 1],\n                [16, 1],\n          \
    \      [15, 1],\n                [14, 1],\n                [13, 1],\n        \
    \        [12, 1],\n                [11, 1],\n                [10, 1],\n      \
    \          [9, 1],\n                [8, 1],\n                [7, 1],\n       \
    \         [6, 1],\n                [5, 1],\n                [4, 1],\n        \
    \        [3, 1],\n                [2, 1],\n                [1, 1],\n         \
    \       [0, 0]\n            ];\n        },\n", "    var n = l.length;\n    return\
    \ !(n<1 || Math.abs(l[n-1] - l[n-2]) > 1);\n}\n", "    var s = 0, n = l.length;\n\
    \    for(var i = 0; i < n; i++){\n        if(l[i] > l[i+1]){\n            return\
    \ false;\n        }\n        s += l[i] - l[i+1];\n    }\n    return s > 0;\n}\n",
  "    var n = l.length;\n    if(n < 2) return false;\n    var s = l[0], e = l[n-1];\n\
    \    for(var i = 1; i < n; i++){\n        if(l[i] < e || (l[i] == e && l[i-1]\
    \ < s)){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    var n = l.length,\n        monotonic = true,\n        i, j, p0, p1, q0, q1,\
    \ q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15;\n    for(i = 0;\
    \ i < n; i++){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n        if(p0 >\
    \ p1){\n            monotonic = false;\n            break;\n        }\n    }\n\
    \    if(monotonic){\n        return true;\n    }\n    for(i = 0; i < n; i++){\n\
    \        q10 = l[i];\n        q14 = l[(i+2)%n];\n        q15 = l[(i+3)%n];\n \
    \       q16 = l[(i+4)%n];\n        q17 = l[(i+5)%n];\n        q18 = l[(i+6)%n];\n\
    \        q19 = l[(i+7)%n];\n        q13 = l[(i+8)%n];\n        q12 = l[(i+9)%n];\n\
    \        q11 = l[(i+10)%n];\n        q9 = l[(i+11)%n];\n        q8 = l[(i+12)%n];\n\
    \        q7 = l[(i+13)%n];\n        q6 = l[(i+14)%n];\n        q5 = l[(i+15)%n];\n\
    \        q4 = l[(i+16)%n];\n        q3 = l[(i+17)%n];\n        q2 = l[(i+18)%n];\n\
    \        q1 = l[(i+19)%n];\n        if((q10 > q9) && (q10 > q8) && (q10 > q7)\
    \ && (q10 > q6) && (q10 > q5) && (q10 > q4) && (q10 > q3) && (q10 > q2) && (q10\
    \ > q1)){\n            if((q14 > q13) && (q14 > q12) && (q14 > q11) && (q14 >\
    \ q10) && (q14 > q9) && (q14 > q8) && (q14 > q7) && (q14 > q6) && (q14 > q5) &&\
    \ (q14 > q4) && (q14 > q3) && (q14 > q2) && (q14 > q1)){\n                if((q15\
    \ > q14) && (q15 > q13) && (q15 > q12) && (q15 > q11) && (q15 > q10) && (q15 >\
    \ q9) && (q15 > q8) && (q15 > q7) && (q15 > q6", "  var s = monotonicSort;\n \
    \ return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],9:[function(require,module,exports){\n'use strict';\n\nvar isNumeric =\
    \ require('fast-isnumeric');\n\nvar BADNUM = _dereq_('../constants/numerical').BADNUM;\n",
  "  var n = l.length,\n      m = +l.shift(),\n      flag = true,\n      i = 0;\n\n\
    \  for (; i < n; i++){\n    if (l[i] <= m){\n      flag = false;\n      break;\n\
    \    }\n  }\n  return flag;\n}\n\nmodule.exports = monotonic;\n\n},{}],17:[function(require,module,exports){\n\
    var indexOf = require('indexof');\n\nvar Object_keys = function (obj) {\n    if\
    \ (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n \
    \       for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\n\
    var forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n\
    \    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n \
    \   }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({},\
    \ '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj,\
    \ name, {\n                writable: true,\n                enumerable: false,\n\
    \                configurable: true,\n                value: value\n         \
    \   })\n        };\n    } catch(e) {\n        return function(obj, name, value)\
    \ {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals =\
    \ ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity',\
    \ 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError',\
    \ 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent',\
    \ 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat',\
    \ 'parseInt', 'undefined', 'unescape'];\n", "  var s = 0, n = l.length, m = +l[0],\
    \ i, l;\n  for(i = 1; i < n; i++){\n    l = l[i];\n    if(l < m || (m === l &&\
    \ l<l[i])){\n      m = l;\n    }\n  }\n  return m === l[n - 1];\n}\n", "  var\
    \ s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b ? -1 : a\
    \ > b ? 1 : a >= b ? 0 : NaN;\n  });\n}\n\nmonotonic.radix = 2; // 10 or Math.pow(10,\
    \ 10)\nmodule.exports = monotonic;\n\n},{\"./sort\":15}],15:[function(require,module,exports){\n\
    'use strict';\n\nvar compareAsc  = require('./compareAsc');\nvar compareDesc =\
    \ require('./compareDesc');\nvar identity    = require('./identity');\n", "  \
    \  var n = l.length,\n        monotone = true,\n        i, j, p0, p1;\n\n    for\
    \ (i = 0; i < n; ++i) {\n        p0 = l[i];\n        p1 = l[i - 1];\n        if\
    \ (p0 > p1) {\n            monotone = false;\n            break;\n        }\n\
    \    }\n\n    return monotone;\n}\n", "  var n = l.length;\n  if(n < 1) return\
    \ false;\n  for(var i = 1;i < n;i++){\n    if(l[i-1] > l[i]){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  var s = monotonicSort;\n  return s(l, function(a,\
    \ b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", "    var o=[], diff=[],\
    \ l=l.slice(), llen=l.length, i=0, j, c;\n    for(; i < llen; i++){\n        c\
    \ = l[i];\n        j = i;\n        while(j > 0 && l[j-1] > c){\n            diff[j-1]\
    \ = l[j-1];\n            j--;\n        }\n        diff[j] = c;\n    }\n    return\
    \ diff.length == 0 || (diff.length == 1 && diff[0] == l[0]);\n}\n", "  var s =\
    \ monotonicSort;\n  return l(s).every(function(v, i, a){\n    return !i || v(s[i\
    \ - 1]) > v(v[i - 1]);\n  });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isNumeric = _dereq_('fast-isnumeric');\n\nvar BADNUM = _dereq_('../constants/numerical').BADNUM;\n",
  "  var s = monotonicSort;\n  return l(s) && l(s.reverse()) && s.join(\"\") === s.reverse().join(\"\
    \");\n}\n", "    var n = l.length,\n        monotone = true,\n        i, j, p,\
    \ q, t;\n    for(i = 0; i < n; i++){\n        p = l[i];\n        q = l[i - 1];\n\
    \        t = p < q ? -1 : (p > q ? 1 : 0);\n        if(t !== 0){\n           \
    \ monotone = false;\n            break;\n        }\n    }\n    return monotone;\n\
    }\n\nmodule.exports = sort;\n\n},{}],41:[function(_dereq_,module,exports){\n'use\
    \ strict';\n\nvar isArray = Array.isArray;\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n\
    },{}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar VNode,\n    emptyArray = [],\n    isArrayLike = _dereq_('./array').isArrayLike;\n",
  "  var s = l.slice();\n  return s[0] < s[s.length-1] ? monotonic(s) : false;\n}\n",
  "    var n = l.length;\n    if(n < 2) return false;\n    var i, j, p = [], q = [];\n\
    \    for(i = 0; i < n; i++){\n        p[i] = i;\n    }\n    for(i = 1; i < n;\
    \ i++){\n        for(j = 0; j < i; j++){\n            if(p[j] < p[i]){\n     \
    \           p[i] = p[j];\n            }\n        }\n    }\n    for(i = n - 1;\
    \ i >= 0; i--){\n        for(j = i + 1; j < n; j++){\n            if(p[j] > p[i]){\n\
    \                p[i] = p[j];\n            }\n        }\n    }\n    for(i = 0;\
    \ i < n; i++){\n        q[i] = p[i];\n    }\n    while(n > 1){\n        for(i\
    \ = 0; i < n - 1; i++){\n            for(j = i + 1; j < n; j++){\n           \
    \     if(p[j] > p[i]){\n                    p[i] = p[j];\n                }\n\
    \            }\n        }\n        n = n - 1;\n        for(i = 0; i < n; i++){\n\
    \            q[i] = p[i];\n        }\n    }\n    return q[0] === p[0];\n}\n",
  "  var n = l.length;\n  return n > 1 ? (l[n - 1] < l[0] && l[n - 2] > l[0] && l[n\
    \ - 1] < l[n - 2]) : false;\n}\n\nmodule.exports = monotonic;\n\n},{}],24:[function(_dereq_,module,exports){\n\
    var indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":23}],25:[function(_dereq_,module,exports){\n\
    var makePad = _dereq_('./makePad');\nvar nativeCeil = Math.ceil;\nvar nativeMax\
    \ = Math.max;\n\n    /**\n     * Removes the sub-array defined by start and end,\
    \ leaving the\n     * array unchanged if the start and end indexes are less than\
    \ or equal to the\n     * array length. START and END include the items removed,\
    \ i.e. if\n     * START is equal to 0, the array will start with start with 1\
    \ removed.\n     * Similar for END.\n     */\n    function remove(arr, start,\
    \ end, inc){\n        inc = inc || 1;\n        if (start < 0){\n            start\
    \ = nativeMax(start, 0);\n        } else {\n            start = nativeCeil(start);\n\
    \        }\n        if (end < 0){\n            end = nativeMax(end, 0);\n    \
    \    } else {\n            end = nativeCeil(end);\n        }\n        while (start\
    \ < end) {\n            var j = start + inc;\n            if (j < 0 || j >= arr.length){\n\
    \                j = 0;\n            } else if (increment){\n                j++;\n\
    \            }\n            if (j !== start){\n                arr.splice(start,\
    \ 1);\n            } else {\n                start++;\n            }\n       \
    \ }\n        return arr;\n    }\n\n    module.exports = remove;\n\n\n\n},{\"./makePad\"\
    :26}],26:[function(_dereq_,module,exports){\nvar indexOf = _dereq_('./indexOf');\n\
    \n    /**\n     * If array contains values.\n     */\n    function makePad(arr,\
    \ value, trueSize){\n        trueSize = trueSize || false;\n        var len =\
    \ arr.length;\n        var i = -1;\n        var k = 0;\n        while (++i < len)\
    \ {\n            if (i in arr) {\n                arr[i] = value;\n          \
    \  } else {\n                arr[k++] = value;\n            }\n        }\n   \
    \     if (k) {\n            while (k < len) {\n                arr[k++] = value;\n\
    \            }\n        }\n        return arr;\n    }\n\n    module.exports =\
    \ makePad;\n\n\n},{\"./indexOf\":23}],27:[function(_dereq_,module,exports){\n\
    var unique = _dereq_('./unique');\nvar filterUnique = _dereq_('./filterUnique');\n",
  "  var s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = +l[i];\n\
    \    if(l < m || (m === l && l<l[i-1])){\n      m = l;\n    }\n  }\n  return m\
    \ === +l[i-1];\n}\n", "    var n = l.length,\n        monotone = true,\n     \
    \   i, j, p0, p1;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n       \
    \ p1 = l[i];\n        if(p0 > p1){\n            monotone = false;\n          \
    \  break;\n        }\n    }\n    return monotone;\n}\n", "  var n = l.length,\n\
    \      monotonic = true,\n      i, j, p0, p1;\n\n  if (n <= 1) return false;\n\
    \n  for (i = 1; i < n; ++i) {\n    p0 = l[i-1];\n    p1 = l[i];\n    if (p0 <\
    \ p1) monotonic = false;\n  }\n\n  return monotonic;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).join(\"\") === l(s).join(\"\");\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    s.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    while(n > 1 && s[0] === s[n - 1]){\n        s.shift();\n        n--;\n\
    \    }\n    return s[0] > 0;\n}\n", "  var l = l.slice();\n  var monotonic = true,\
    \ i = 1;\n  var len = l.length;\n  for(; i < len; ++i){\n    if(l[i-1] > l[i]){\n\
    \      monotonic = false;\n      break;\n    }\n  }\n  return monotonic;\n}\n\n\
    module.exports = monotonic;\n\n},{}],130:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n", "  var s = monotonicSort;\n\
    \  return l(s) ? s[0] === s[1] : false;\n}\n", "  var n = l.length,\n      monotonic\
    \ = true,\n      i, prev, curr;\n  for(i = 1; i < n; i++){\n    prev = curr;\n\
    \    curr = l[i];\n    if(curr < prev){\n      monotonic = false;\n      break;\n\
    \    }\n  }\n  return monotonic;\n}\n", "  var s = monotonicSort;\n  return l(s);\n\
    }\n\nmonotonic.version = '1.1.0';\n", "    var s = 0, n = l.length, m = +l[0],\
    \ i, l;\n    if(n < 1) return false;\n    if(m > n) return true;\n    for(i =\
    \ 1; i < n; i++){\n        if(+l[i] > m) return true;\n        if(+l[i] < m) s\
    \ = 1;\n        m = +l[i];\n    }\n    return !s;\n}\n", "  var s = 0, n = l.length,\
    \ m = +l.shift()\n  while (n < m) s++\n  return s >= n\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar VNode,\n    emptyArray = [],\n    isArrayLike = _dereq_('./array').isArrayLike,\n\
    \    isObject = _dereq_('./object').isObject;\n\nvar arrayMethods = _dereq_('./array').arrayMethods;\n\
    var arrayProto = _dereq_('./array').arrayProto;\n\nvar createArrayMethod = arrayMethods.create;\n\
    var isTypedArray = arrayMethods.isTypedArray;\n\nvar objectProto = Object.prototype;\n\
    \nvar typedArrayMethods = _dereq_('./typed-array').typedArrayMethods;\nvar methodOp\
    \ = _dereq_('./array').methodOp;\nvar util = _dereq_('./util');\n\nvar Float64Array\
    \ = typeof Float64Array === 'undefined' ? Array : Float64Array;\nvar Int8Array\
    \ = typeof Int8Array === 'undefined' ? Array : Int8Array;\n\nvar defOp = util.defOp;\n\
    var push = arrayProto.push;\nvar isIndex = arrayProto.isIndex;\n\nvar GEp = Array.prototype;\n\
    var splice = GEp.splice;\n", "  var s = monotonicSort;\n  return l(s).join(\"\"\
    ) === l(s).join(\"\");\n}\n", "    var s = 0, n = l.length, m = +l[0], i, l;\n\
    \    if(!n) return !m;\n    if(n === 1) return !m || m > 0;\n    if(m > n) return\
    \ !m;\n    for(i = 1, l = n; i < l; ++i){\n        if(+l[i] > m) return !m;\n\
    \        if(+l[i] < m) s = i;\n    }\n    return !m || +l[s] > m;\n}\n\nmonotonic.array\
    \ = function(arr){\n    return !arr.length || (arr.length > 1 && arr.every(monotonic))\
    \ ? monotonic(arr) :  monotonic(arr.slice());\n};\n\nmonotonic.number = function(n){\n\
    \    return !n || n > 1 && !(n % 1) || n === 0;\n};\n\nmonotonic.date = function(d){\n\
    \    return !d.length || (d.length > 1 && d.every(monotonic)) ? monotonic(d) :\
    \  monotonic(d.slice());\n};\n\nmonotonic.object = function(obj){\n    return\
    \ !obj.length || (obj.length > 1 && obj.every(function(o){\n        return o.x\
    \ && monotonic(o.x) && o.y && monotonic(o.y);\n    })) ? monotonic(obj) :  monotonic(obj.slice());\n\
    };\n\nmonotonic.string = function(str){\n    return !str.length || str.split('').every(monotonic);\n\
    };\n\nmonotonic.value = function(n){\n    return !n || n > 1 && !(n % 1) || n\
    \ === 0;\n};\n\nmonotonic.default = function(x){\n    return !x || x === 0;\n\
    };\n\nmonotonic.copy = function(x){\n    return monotonic(x);\n};\n\nmodule.exports\
    \ = monotonic;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n\
    var isArray = Array.isArray;\n", "  var s = 0, n = l.length, m = +l.shift();\n\
    \  while (n < m) s++;\n  return s >= n;\n}\n", "  var s = monotonicSort;\n  return\
    \ s(l, function(a, b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", " \
    \ var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\n\
    module.exports = monotonic;\n\n},{}],17:[function(require,module,exports){\n'use\
    \ strict';\n\nvar isArray = Array.isArray;\nvar defaultMaxListeners = 10;\n\n\
    module.exports = typeof Promise === 'function' ? Promise : require('es6-promise').Promise;\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\n\
    module.exports = monotonic;\n\n},{}],17:[function(require,module,exports){\n'use\
    \ strict';\n\nvar isArray = Array.isArray;\nvar keys = Object.keys;\n", "  var\
    \ s = monotonicSort;\n  return l(s) ? s[0] < s[1] : false;\n}\n\nmonotonic.version\
    \ = '1.1.1';\n\nmodule.exports = monotonic;\n\n},{}],6:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar VNode,\n    emptyArray\
    \ = [],\n    isArrayLike = _dereq_('./array').isArrayLike,\n    isObject = _dereq_('./object').isObject;\n\
    \nvar diffProps = function diffProps(a, b) {\n  var diff;\n  var aProps = a.props\
    \ || {};\n  var bProps = b.props || {};\n  var aLen = Object.keys(aProps).length;\n\
    \  var bLen = Object.keys(bProps).length;\n  var aKeys = Object.keys(aProps);\n\
    \  var bKeys = Object.keys(bProps);\n\n  if (aLen !== bLen) {\n    diff = [aLen,\
    \ bLen];\n  }\n\n  if (aLen > bLen) {\n    for (var i = 0; i < aLen; i++) {\n\
    \      var propName = aKeys[i];\n      if (!(aProps[propName] in bProps)) {\n\
    \        diff.push(aProps[propName]);\n      }\n    }\n  } else {\n    for (var\
    \ _i = 0; _i < bLen; _i++) {\n      var _propName = bKeys[_i];\n      if (!(_propName\
    \ in aProps)) {\n        diff.push(_propName);\n      }\n    }\n  }\n\n  return\
    \ diff;\n};\n", "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version\
    \ = '1.1.1';\n\nmodule.exports = monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar VNode,\n    emptyArray\
    \ = [],\n    isArrayLike = _dereq_('./array').isArrayLike;\n\nvar arrayMethods\
    \ = { // JS has 2 array methods that we want to emulate\n  every: function(arr){\n\
    \    return !this.some(function(el){\n      return !arr.includes(el);\n    });\n\
    \  },\n  some: function(arr){\n    return this.every(function(el){\n      return\
    \ arr.includes(el);\n    });\n  },\n  includes: function(el, i, arr){\n    return\
    \ arr.includes(el);\n  },\n  indexOf: function(arr, el){\n    return arr.indexOf(el);\n\
    \  },\n  lastIndexOf: function(arr, el){\n    return arr.lastIndexOf(el);\n  },\n\
    \  forEach: function(arr, fn){\n    arr.forEach(fn);\n    return arr;\n  },\n\
    \  map: function(arr, fn){\n    return arr.map(fn);\n  }\n};\n\nvar arrayProto\
    \ = Array.prototype;\nvar arrayMethodsWithPrev = arrayMethods.concat({\n  some:\
    \ function(callbackfn){\n    var needle = callbackfn;\n    return this.some(function(el){\n\
    \      return needle(el);\n    });\n  },\n  every: function(callbackfn){\n   \
    \ var needle = callbackfn;\n    return this.every(function(el){\n      return\
    \ needle(el);\n    });\n  }\n});\n\nvar indexOf = arrayProto.indexOf;\nvar lastIndexOf\
    \ = arrayProto.lastIndexOf;\n", "    var s = 0, n = l.length, m = +Infinity;\n\
    \    while(n < m){\n        if(l[n] <= m){\n            n = n;\n        } else\
    \ {\n            m = l[n];\n            s = s + 1;\n        }\n    }\n    return\
    \ !(n == 1 && m == +Infinity);\n}\n", "  var s = monotonicSort;\n  return l(s);\n\
    }\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],8:[function(require,module,exports){\n\
    'use strict';\n\nvar sortBy = require('./sortBy');\nvar identity = require('./identity');\n\
    var prop = require('./prop');\nvar slice = require('./slice');\nvar reverse =\
    \ require('./reverse');\nvar contains = require('./contains');\nvar debounce =\
    \ require('./debounce');\nvar throttle = require('./throttle');\nvar deburr =\
    \ require('./deburr');\nvar merge = require('./merge');\nvar defaults = require('./defaults');\n\
    var omit = require('./omit');\nvar pick = require('./pick');\nvar keys = require('./keys');\n\
    var every = require('./every');\nvar contains = require('./contains');\nvar map\
    \ = require('./map');\nvar pluck = require('./pluck');\nvar where = require('./where');\n\
    var max = require('./max');\nvar min = require('./min');\nvar partition = require('./partition');\n\
    var countBy = require('./countBy');\nvar shuffle = require('./shuffle');\nvar\
    \ size = require('./size');\nvar partitionBy = require('./partitionBy');\nvar\
    \ invoke = require('./invoke');\nvar pluckBy = require('./pluckBy');\nvar reject\
    \ = require('./reject');\nvar every = require('./every');\nvar some = require('./some');\n\
    var contains = require('./contains');\nvar tap = require('./tap');\nvar thru =\
    \ require('./thru');\nvar find = require('./find');\nvar detect = require('./detect');\n\
    var findIndex = require('./findIndex');\nvar reject = require('./reject');\nvar\
    \ every = require('./every');\nvar some = require('./some');\nvar filter = require('./filter');\n\
    var each = require('./each');\nvar map = require('./map');\nvar find = require('./find');\n\
    var detect = require('./detect');\nvar findIndex = require('./findIndex');\nvar\
    \ some = require('./some');\nvar contains = require('./contains');\nvar tap =\
    \ require('./tap');\nvar thru = require('./thru');\nvar find = require('./find');\n\
    var detect = require('./detect');\nvar findIndex = require('./findIndex');\nvar\
    \ some = require('./some');\nvar contains = require('./contains');\nvar tap =\
    \ require('./tap');\nvar thru = require('./thru');\nvar find = require('./find');\n\
    var detect = require('./detect');\nvar findIndex = require('./findIndex');\nvar\
    \ some = require('./some');\nvar contains = require('./contains');\nvar tap =\
    \ require('./tap');\nvar thru = require('./thru');\nvar find = require('./find');\n\
    var detect = require('./detect');\nvar findIndex = require('./findIndex');\nvar\
    \ some = require('./some');\nvar contains = require('./contains');\nvar tap =\
    \ require('./tap');", "  var n = l.length;\n  return n > 1 ? (l[n - 1] < l[0]\
    \ && l[n - 2] > l[0] && l[n - 1] < l[n - 2]) : false;\n}\n", "  var n = l.length;\n\
    \  if(n === 0) return false;\n  if(n === 1) return true;\n  var k = l[0], i =\
    \ 1;\n  while(i < n){\n    if(l[i] <= k){\n      i++;\n      if(l[i] < k) return\
    \ false;\n    }else{\n      if(l[i] > k){\n        i++;\n      }else{\n      \
    \  return false;\n      }\n    }\n  }\n  return true;\n}\n", "  var n = l.length,\n\
    \      out = 0,\n      i,\n      j,\n      xi,\n      yi,\n      yj;\n  for(i\
    \ = 0; i < n; ++i){\n    xi = l[i];\n    yi = l[(i + 1) % n];\n    yj = l[(i +\
    \ 2) % n];\n    if(xi > yi){\n      if(yj > xi){\n        out = out || 1;\n  \
    \    } else {\n        out = out || 0;\n      }\n    } else {\n      if(yj > xi){\n\
    \        out = out || 0;\n      } else {\n        out = out || 1;\n      }\n \
    \   }\n  }\n  return out;\n}\n", "  var s = monotonicSort;\n  return l(s).join(\"\
    \") === l(s).join(\"\");\n}\n", "  var s = monotonicSort;\n  return s(l, function(a,\
    \ b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n\nmonotonic.radix = 2;\n\
    \nmodule.exports = monotonic;\n\n},{\"./sort\":15}],15:[function(require,module,exports){\n\
    'use strict';\n\nvar compareAscending = function(a, b) {\n  return a - b;\n};\n\
    \nvar indexOf = function(xs, item) {\n  for (var i = 0, l = xs.length; i < l;\
    \ i++) {\n    if (xs[i] === item) return i;\n  }\n  return -1;\n};\n\nvar partitionSelect\
    \ = function(xs, pred) {\n  var out = [];\n  var xl = xs.length;\n  var i = 0;\n\
    \  for (; i < xl; ++i) {\n    var x = xs[i];\n    var r = pred(x, i, xs);\n  \
    \  if (r < 0) {\n      out.push(x);\n    } else if (r === i) {\n      out.push(x);\n\
    \    } else {\n      out.push(xs[r]);\n    }\n  }\n  return out;\n};\n\nvar ascendingComparator\
    \ = function(x, a, b) {\n  return a - b;\n};\n\nvar bisector = function(array,\
    \ f) {\n  if (f == null) f = ascendingComparator;\n  var n = array.length;\n \
    \ if (n) {\n    if (f(x) < f(x = array[0], i, array)) --i;\n    if (f(x) > f(x\
    \ = array[n-1], i, array)) ++i;\n  }\n  return [array, i];\n};\n", "  var s =\
    \ 0, n = l.length, m = +l.shift()\n  while (n < m) n++\n  while (n > m) m--\n\
    \  return m > 0 || n === m && n-- === 0\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s).sort(function(a, b){\n    return s(a) - s(b);\n  }).join(\"\") === \"\"\
    ;\n}\n", "    var n = l.length,\n        monotonic = true,\n        i, j, p0,\
    \ p1;\n\n    for (i = 1; i < n; ++i) {\n        p0 = l[i-1];\n        p1 = l[i];\n\
    \        if (p0 < p1) {\n            monotonic = false;\n            break;\n\
    \        }\n    }\n\n    return monotonic;\n}\n", "    var n = l.length,\n   \
    \     monotonic = true,\n        i, prev, curr;\n    for(i = 0; i < n; i++){\n\
    \        prev = curr = l[i];\n        if(curr < prev){\n            monotonic\
    \ = false;\n            break;\n        }\n    }\n    return monotonic;\n}\n\n\
    module.exports = sort;\n\n},{}],9:[function(_dereq_,module,exports){\nvar indexOf\
    \ = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n\
    \    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n\
    \    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":12}],10:[function(_dereq_,module,exports){\n\
    var makeStr = _dereq_('./makeStr');\nvar contains = _dereq_('./contains');\nvar\
    \ quickSelect = _dereq_('./quickSelect');\n\n    /**\n     * Return a new Array\
    \ with elements that aren't present in the other Arrays.\n     */\n    function\
    \ difference(arr) {\n        var arrs = Array.prototype.slice.call(arguments,\
    \ 1),\n            result = arrs.filter(function(item) {\n                return\
    \ !contains(arr, item);\n            });\n\n        return result;\n    }\n\n\
    \    module.exports = difference;\n\n\n\n},{\"./contains\":9,\"./quickSelect\"\
    :11}],11:[function(_dereq_,module,exports){\nvar identity = _dereq_('./identity');\n\
    var propIs = _dereq_('./propIs');\nvar deepMatches = _dereq_('./deepMatches');\n\
    \n    /**\n     * Return first value that matches against `prop` of element.\n\
    \     */\n    function find(obj, prop) {\n        var i = propIs(obj, prop);\n\
    \        if (i) {\n            return obj[i];\n        }\n        prop = prop.charAt(0)\
    \ === '$' ? prop.slice(1) : prop;\n        \n        for (i = 0; i < obj.length;\
    \ i++) {\n            \n            if (deepMatches(obj[i], prop)) {\n       \
    \         return obj[i];\n            }\n            \n        }\n    }\n\n  \
    \  module.exports = find;\n\n\n\n},{\"./deepMatches\":8,\"./identity\":12,\"./propIs\"\
    :13}],12:[function(_dereq_,module,exports){\nvar indexOf = _dereq_('./indexOf');\n\
    \n    /**\n     * If array contains values.\n     */\n    function contains(arr,\
    \ val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports\
    \ = contains;\n\n\n},{\"./indexOf\":12}],13:[function(_dereq_,module,exports){\n\
    var is = _dereq_('./is');\nvar isObject = _dereq_('./isObject');\nvar nativeKeys\
    \ = Object.keys;\n\n    /**\n     * Return a shallow copy of the source object\
    \ or array.\n     */\n    function copy(obj) {\n        if (obj === null || is(obj,\
    \ 'Array')) {\n            return nativeKeys(obj).slice();\n", "    var n = l.length,\n\
    \        monotonic = true,\n        i, j, p0, p1;\n    for(i = 0; i < n; i++){\n\
    \        p0 = l[i];\n        j = i;\n        while(j > 0 && l[j-1] > p0){\n  \
    \          --j;\n        }\n        p1 = l[j];\n        if(p0 > p1){\n       \
    \     monotonic = false;\n        }\n    }\n    return monotonic;\n}\n", "  var\
    \ n = l.length;\n  return !(n<1 || l[0]<=l[n-1]);\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n\
    \        prev = curr;\n        curr = l[i];\n        if(curr < prev){\n      \
    \      monotone = false;\n            break;\n        }\n    }\n    return monotone;\n\
    }\n\nmodule.exports = sort;\n\n},{}],9:[function(_dereq_,module,exports){\n'use\
    \ strict';\n\nvar isArray = _dereq_('./array');\n\nvar VPatch = _dereq_('../vpatch');\n\
    var isVNode = _dereq_('./is-vnode');\nvar isVText = _dereq_('./is-vtext');\nvar\
    \ isWidget = _dereq_('./is-widget');\nvar isThunk = _dereq_('./is-thunk');\nvar\
    \ handleThunk = _dereq_('./handle-thunk');\n\nvar diffProps = function diffProps(a,\
    \ b) {\n    var diff;\n    var aType = a.type;\n    var bType = b.type;\n    if\
    \ (aType !== bType) {\n        diff = diffProps(aType, bType);\n        if (diff)\
    \ {\n            return diff;\n        }\n    }\n    // Now we know both props\
    \ are same types.\n    switch (aType) {\n        case 'object':\n        case\
    \ 'text':\n        case 'widget':\n        case 'collection':\n        case 'array':\n\
    \            diff = _dereq_('./diff-props')(a, b, aKeys, bKeys);\n           \
    \ if (diff) {\n                return diff;\n            }\n            break;\n\
    \    }\n};\n\nvar aKeys = ['a', 'b', 'c'];\nvar bKeys = ['c', 'd'];\nvar diffPropKeys\
    \ = ['a', 'b', 'c', 'd'];\n", "    var s = 0, n = l.length, m = +Infinity;\n \
    \   while(n < m){\n        s = (l[n]-l[m])/(l[n-1]-l[m-1]);\n        if(!isNaN(s))\
    \ break;\n        m = (l[n-1]+l[n])/2;\n    }\n    return !isNaN(s); //False if\
    \ NaN, True if >0\n}\n", "    var n = l.length,\n        monotone = true,\n  \
    \      i, j, p, rev;\n    for(i = 1; i < n; i++){\n        p = l[i-1];\n     \
    \   rev = l[i];\n        if( p < rev ){\n            monotone = false;\n     \
    \       break;\n        }\n    }\n    if( !monotone ){\n        return false;\n\
    \    }\n    for(i = n - 2; i >= 0; i--){\n        p = l[i];\n        rev = l[i+1];\n\
    \        if( p < rev ){\n            monotone = false;\n            break;\n \
    \       }\n    }\n    return !monotone;\n}\n", "  var n = l.length,\n      m =\
    \ +l.shift(),\n      flag = true,\n      i = 0;\n\n  for (; i < n; i++){\n   \
    \ if (l[i] <= m){\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n\
    }\n", "    var n = l.length,\n        monotone = true,\n        i, j, p1, p2;\n\
    \    for(i = 1; i < n; i++){\n        p1 = l[i-1];\n        p2 = l[i];\n     \
    \   if(p1 !== p2){\n            monotone = false;\n            break;\n      \
    \  }\n    }\n    return monotone;\n}\n", "    var o=[], diff=[], l=l.slice(),\
    \ i, j, k, l;\n    for(i=0, j=l.length-1; i<j; i++){\n        k = l[i];\n    \
    \    if(k !== l[j]){\n            o.push(k);\n            diff.push(k - l[j]);\n\
    \        }\n    }\n    l = o;\n    for(i=0, j=diff.length-1; i<j; i++){\n    \
    \    k = diff[i];\n        if(!isNaN(k)){\n            l.push(k);\n        }\n\
    \    }\n    return l.length ? l : false;\n}\n", "    var n = l.length,\n     \
    \   monotone = true,\n        i, j, p0, p1;\n    for(i = 1; i < n; i++){\n   \
    \     p0 = l[i-1];\n        p1 = l[i];\n        if(p0 < p1){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    return monotone;\n}\n",
  "    var n = l.length,\n        monotonic = true,\n        i, j, p0, p1, q0, q1,\
    \ q2, q3;\n\n    for (i = 0; i < n; ++i) {\n        p0 = l[i];\n        p1 = l[(i\
    \ + 1) % n];\n        q0 = l[(i + 2) % n];\n        q1 = l[(i + 3) % n];\n   \
    \     q2 = l[(i + 4) % n];\n        q3 = l[(i + 5) % n];\n\n        if (p0 < q0)\
    \ {\n            if (p0 !== q0) {\n                monotonic = false;\n      \
    \      }\n        }\n        else if (p0 > q0) {\n            if (p0 !== q0) {\n\
    \                monotonic = false;\n            }\n        }\n        else if\
    \ (p0 === q0) {\n            if (p1 !== q1) {\n                monotonic = false;\n\
    \            }\n        }\n        else if (p0 === q0) {\n            if (p1 !==\
    \ q1) {\n                monotonic = false;\n            }\n        }\n      \
    \  else if (p0 < q0) {\n            if (p0 !== q0) {\n                monotonic\
    \ = false;\n            }\n        }\n        else if (p0 > q0) {\n          \
    \  if (p0 !== q0) {\n                monotonic = false;\n            }\n     \
    \   }\n        else if (p0 === q0) {\n            if (p1 !== q1) {\n         \
    \       monotonic = false;\n            }\n        }\n        else if (p0 ===\
    \ q0) {\n            if (p1 !== q1) {\n                monotonic = false;\n  \
    \          }\n        }\n        else if (p0 < q0) {\n            if (p0 !== q0)\
    \ {\n                monotonic = false;\n            }\n        }\n        else\
    \ if (p0 > q0) {\n            if (p0 !== q0) {\n                monotonic = false;\n\
    \            }\n        }\n    }\n\n    return monotonic;\n}\n\nmodule.exports\
    \ = monotonic;\n\n", "  var l = l || [];\n  var s = l.slice();\n  var m = s.length;\n\
    \  var j = 0;\n  var k = 0;\n  while (j < m) {\n    if (s[j] <= s[k]) {\n    \
    \  ++j;\n      ++k;\n    }\n    else {\n      k = j;\n    }\n  }\n  return j ===\
    \ m;\n}\n", "  var s = 0, n = l.length, m = +l.shift()\n  while (n < m) n++\n\
    \  while (n > m) m--\n  return m > 0 || Math.abs(n - m) > 1\n}\n", "  var s =\
    \ monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n", "    var s = monotonicSort;\n\
    \    return l(s) ? s[0] <= s[1] : false;\n}\n", "  var n = l.length;\n  if(n ===\
    \ 0) return false;\n  if(n === 1) return true;\n  if(l[0] > l[n-1]) return false;\n\
    \  if(l[0] < l[n-1]) return true;\n  for(var i = 1; i < n; i++){\n    if(l[i]\
    \ > l[i-1]) return false;\n    if(l[i] < l[i-1]) return true;\n  }\n  return false;\n\
    }\n", "    var o=[], diff=[], ls=[];\n    for(var i=0, len=l.length; i<len; i++){\n\
    \        var v = l[i];\n        if(v < l[i-1]){\n            o.push(v);\n    \
    \    }else{\n            diff.push(v);\n        }\n    }\n    for(var i=0, len=diff.length;\
    \ i<len; i++){\n        var v = diff[i];\n        if(v > l[i-1]){\n          \
    \  o.push(v);\n        }else{\n            ls.push(v);\n        }\n    }\n   \
    \ return ls.length == o.length && o.length == l.length;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).sort(function(a, b){\n    return s(a) - s(b);\n  }).join(\"\")\
    \ === \"\";\n}\nmonotonic.version = \"1.1.1\";\n\nmodule.exports = monotonic;\n\
    \n},{}],9:[function(_dereq_,module,exports){", "  var n = l.length;\n  if(n <\
    \ 1) return false;\n  for(var i = 1;i < n;i++){\n    if(l[i-1] > l[i]){\n    \
    \  return false;\n    }\n  }\n  return true;\n}\n", "    var n = l.length,\n \
    \       monotone = true,\n        i, j, p0, p1;\n    for(i = 1; i < n; i++){\n\
    \        p0 = l[i-1];\n        p1 = l[i];\n        if(p0 > p1){\n            monotone\
    \ = false;\n            break;\n        }\n    }\n    return monotone;\n}\n",
  "    var n = l.length,\n        monotone = true,\n        i, j, p, q, s, diff;\n\
    \    for(i = 0; i < n; i++){\n        p = l[i];\n        q = l[i - 1];\n     \
    \   s = p < q ? -1 : 1;\n        diff = q - p;\n        if(diff > 0){\n      \
    \      monotone = false;\n        }else if(diff < 0){\n            monotone =\
    \ true;\n        }\n    }\n    return monotone;\n}\n\nmodule.exports = sort;\n\
    \n},{}],17:[function(_dereq_,module,exports){\nvar createElement = _dereq_('../document/createElement');\n\
    var isArray = _dereq_('../object/isArray');\n\nvar svgCreate = (function() {\n\
    \  try {\n    return !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg',\
    \ 'svg').createSVGRect;\n  } catch(e) {\n    return false;\n  }\n}());\n\nvar\
    \ pathHasFill = _dereq_('../graphic/helpers').pathHasFill;\nvar pathHasStroke\
    \ = _dereq_('../graphic/helpers').pathHasStroke;\nvar getElement = _dereq_('../core/core').getElement;\n\
    var color = _dereq_('../color');\nvar dashPattern = _dereq_('../graphic/pattern').dashPattern;\n\
    var copyColor = _dereq_('../color/copy');\n\nvar SVGElement,\n    SVGRenderer,\n\
    \    extendDeepAll,\n    renderList,\n    renderImage,\n    renderPath,\n    renderText,\n\
    \    renderCircle,\n    renderEllipse,\n    renderSector,\n    renderPolygon,\n\
    \    renderRectangle,\n    renderImageMarker,\n    renderGroup,\n    renderCompoundPath,\n\
    \    renderClipRect,\n    renderColor,\n    renderImage,\n    renderRegion,\n\
    \    renderPath,\n    renderImageMarker,\n    renderText,\n    renderList,\n \
    \   renderTextMarker,\n    prepareToRender;\n", "  var n = l.length;\n  if(n <\
    \ 1){\n    return false;\n  }\n  for(var i = 0; i < n; i++){\n    if(l[i] > l[i+1]){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    var s = 0, n = l.length,\
    \ m = +Infinity;\n    while(n < m){\n        s = (l[n]-l[m])>0?1:-1;\n       \
    \ if(s==0) break;\n        m += s;\n        n += s;\n    }\n    return m>+Infinity?false:true;\n\
    }\n", "  var n = l.length,\n      monotone = true,\n      i, j, p0, p1, q0, q1,\
    \ diff;\n  for(i=1;i<n;++i){\n    p0 = l[i-1];\n    p1 = l[i];\n    q0 = l[i -\
    \ 1];\n    q1 = l[i];\n    diff = q1 - q0;\n    if(diff > 0){\n      monotone\
    \ = false;\n      break;\n    }else if(diff < 0){\n      monotone = true;\n  \
    \    break;\n    }\n  }\n  return monotone;\n}\n", "    var o = false;\n    for(var\
    \ i=l.length-1; i>=0; i--){\n        if(l[i+1] < l[i]){\n            o = true;\n\
    \            break;\n        }\n    }\n    return o;\n}\n", "    var n = l.length;\n\
    \    return n > 1 ? (l[n - 1] < l[0] || l[n - 1] > l[n - 2]) : false;\n}\n", " \
    \ var s = l.slice();\n  var n = s.length;\n  s.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  if(n > 1 && s[0] < s[n-1]){\n    return false;\n  }\n  return\
    \ true;\n}\n", "  var s = l.slice();\n  var n = s.length;\n  s.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  for(var i = 1; i < n; i++){\n    if(s[i] -\
    \ s[i - 1] < 0){\n      return false;\n    }\n  }\n  return true;\n}\n", "   \
    \ var s = monotonicSort;\n    return l(s).join(\"\") === l(s).join(\"\");\n}\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.version = '1.1.0';\n\n\
    module.exports = monotonic;\n\n},{}],17:[function(_dereq_,module,exports){\n'use\
    \ strict';\n\nvar isArray = _dereq_('isarray');\n\nvar VNode,\n    emptyArray\
    \ = [],\n    isArrayLike = _dereq_('./array').isArrayLike;\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1, q0, q1, q2, q3;\n\n    for (i\
    \ = 0; i < n; ++i) {\n        p0 = l[i];\n        p1 = l[(i + 1) % n];\n     \
    \   q0 = l[(i + 2) % n];\n        q1 = l[(i + 3) % n];\n        q2 = l[(i + 4)\
    \ % n];\n        q3 = l[(i + 5) % n];\n\n        if (p0<q0) {\n            if\
    \ (p0<q1) {\n                if (p0<q2) {\n                    if (p0<q3) {\n\
    \                        monotone = false;\n                    }\n          \
    \          else {\n                        monotone = true;\n                \
    \    }\n                }\n                else {\n                    monotone\
    \ = true;\n                }\n            }\n            else {\n            \
    \    monotone = true;\n            }\n        }\n        else {\n            monotone\
    \ = true;\n        }\n    }\n\n    return monotone;\n}\n\nmodule.exports = monotonic;\n\
    \n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return !i\
    \ || v !== a[i-1];\n  });\n}\n", "  var n = l.length,\n      monotone = true,\n\
    \      i, j, p1, p2;\n  for(i = 1; i < n; i++){\n    p1 = l[i-1];\n    p2 = l[i];\n\
    \    if(p1 !== p2){\n      monotone = false;\n      break;\n    }\n  }\n  return\
    \ monotone;\n}\n", "  var n = l.length;\n  return n > 1 ? (l[n - 1] < l[0] &&\
    \ l[n - 2] > l[0] && l[n - 1] < l[n - 2]) : false;\n}\n", "  var n = l.length,\n\
    \      m = +l.shift(),\n      flag = true,\n      i = 0;\n\n  for(; i < n; i++){\n\
    \    if(+l[i] < m){\n      m = +l[i];\n    }\n  }\n\n  for(; i < n; i++){\n  \
    \  if(+l[i] > m){\n      m = +l[i];\n    }\n  }\n\n  return flag && m === 0;\n\
    }\n", "    var s = monotonicSort;\n    return l(function(x){\n        return s(x)\
    \ < s(x);\n    });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('./array');\n\
    \nvar VNode,\n    emptyArray = [],\n    isArrayLike = _dereq_('./array').isArrayLike;\n",
  "    var s = monotonicSort;\n    return l(s);\n}\n\nmonotonic.version = '1.1.0';\n",
  "    var n = l.length,\n        monotonic = true,\n        i, j, p1, p2, q1, q2,\
    \ q3, q4, s, t, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15,\
    \ s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31,\
    \ s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47,\
    \ s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63,\
    \ s64, s65, s66, s67, s68, s69, s70, s71, s72, s73, s74, s75, s76, s77, s78, s79,\
    \ s80, s81, s82, s83, s84, s85, s86, s87, s88, s89, s90, s91, s92, s93, s94, s95,\
    \ s96, s97, s98, s99, s100, s101, s102, s103, s104, s105, s106, s107, s108, s109,\
    \ s110, s111, s112, s113, s114, s115, s116, s117, s118, s119, s120, s121, s122,\
    \ s123, s124, s125, s126, s127, s128, s129, s130, s131, s132, s133, s134, s135,\
    \ s136, s137, s138, s139, s140, s141, s142, s143, s144, s145, s146, s147, s148,\
    \ s149, s150, s151, s152, s153, s154, s155, s156, s157, s158, s159, s160, s161,\
    \ s162, s163, s164, s165, s166, s167, s168, s169, s170, s171, s172, s173, s174,\
    \ s175, s176, s177, s178, s179, s180, s181, s182, s183, s184, s185, s186, s187, ",
  "  var s = 0, n = l.length, m = +l.shift();\n  while (n < m) n++;\n  while (n >\
    \ 0) l.pop(), s++;\n  return s > m;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s);\n}\n\nmonotonic.inplace = function(l){\n  return l.sort(function(a, b){\n\
    \    return a - b;\n  });\n};\n", "    var s = 0, n = l.length, m = +l.shift();\n\
    \    while (n < m) n++;\n    return !(n == m);\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).length <= 1 && l(s).every(function(d){\n    return d(l(0));\n \
    \ });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],41:[function(require,module,exports){\n\
    'use strict';\n\nvar d3 = require('@plotly/d3');\nvar isNumeric = require('fast-isnumeric');\n\
    \nvar Plotly = require('../../plotly');\nvar Plots = require('../../plots/plots');\n\
    var Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\
    var Color = require('../color');\nvar Drawing = require('../drawing');\nvar svgTextUtils\
    \ = require('../../lib/svg_text_utils');\nvar anchorUtils = require('../legend/anchor_utils');\n\
    \nvar constants = require('./constants');\nvar LINE_SPACING = constants.LINE_SPACING;\n\
    var MARKER_COLOR = 'rgba(0,0,0,0)';\n\nvar Titles = module.exports = {};\n", " \
    \ var s = monotonicSort;\n  return l(s) ? s[0] <= s[1] : false;\n}\n", "  var\
    \ s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = +l[i];\n\
    \    if(l < m || (l-m > 0.2 && (l-m < 0 || l+m > 0.2))) return false; \n    s\
    \ = s + l;\n  }\n  return true;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p0, p1;\n\n    for (i = 0; i < n; ++i) {\n        p0\
    \ = l[i];\n        p1 = l[(i+1)%n];\n        if (p0 > p1) {\n            monotone\
    \ = false;\n            break;\n        }\n    }\n\n    return monotone;\n}\n",
  "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n", "  var\
    \ l = l.slice();\n  var monotonic = true, x = 0;\n  while(monotonic && x < l.length){\n\
    \    monotonic = false;\n    for (var i = 1; i < l[x]; i++){\n      if (l[x -\
    \ i] - l[x] < 0){\n        monotonic = true;\n        break;\n      }\n    }\n\
    \    x++;\n  }\n  return monotonic;\n}\n\nmodule.exports = monotonic;\n\n},{}],151:[function(require,module,exports){\n\
    var indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":152}],152:[function(require,module,exports){\n\
    var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array\
    \ filter\n     */\n    function filter(arr, callback, thisObj) {\n        callback\
    \ = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr\
    \ == null) {\n            return results;\n        }\n\n        var i = -1, len\
    \ = arr.length, value;\n        while (++i < len) {\n            value = arr[i];\n\
    \            if (callback(value, i, arr)) {\n                results.push(value);\n\
    \            }\n        }\n\n        return results;\n    }\n\n    module.exports\
    \ = filter;\n\n\n\n},{\"../function/makeIterator_\":161}],153:[function(require,module,exports){\n\
    var indexOf = require('./indexOf');\n\n    /**\n     * Returns first item that\
    \ matches criteria\n     */\n    function find(arr, iterator, thisObj){\n    \
    \    var idx = -1, len = arr.length;\n        while (++idx < len) {\n        \
    \  if (iterator.call(thisObj, arr[idx], idx, arr)) {\n            return arr[idx];\n\
    \          }\n        }\n        return undefined;\n    }\n\n    module.exports\
    \ = find;\n\n\n\n},{\"./indexOf\":152}],154:[function(require,module,exports){\n\
    var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns\
    \ the index of the first item that matches criteria\n     */\n    function findIndex(arr,\
    \ iterator, thisObj){\n        var idx = -1, len = arr.length;\n        while\
    \ (++idx < len) {\n          if (iterator.call(thisObj, arr[idx], idx, arr)) {\n\
    \            return idx;\n          }\n        }\n        return -1;\n    }\n\n\
    \    module.exports = findIndex;\n\n\n},{\"../function/makeIterator_\":161}],155:[function(require,module,exports){\n\
    var filter = require('./filter');\n\n    function reject(arr, iterator, thisObj){\n\
    \        iterator = makeIterator(iterator, thisObj);\n        return filter(arr,\
    \ function(value, index, arr){\n            return !iterator.call(arr, value,\
    \ index, arr);\n        }, thisObj);\n    }\n\n    module.exports = reject;\n\n\
    \n\n},{\"./filter\":15", "    var o = false;\n    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i = 0; i < l.length; i++){\n\
    \        if(l[i] !== l[i - 1]){\n            o = true;\n            break;\n \
    \       }\n    }\n    return o;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p0, p1;\n\n    for (i = 0; i < n; ++i) {\n        p0\
    \ = l[i];\n        p1 = l[(i+1)%n];\n        if (p0 > p1) {\n            monotone\
    \ = false;\n        }\n    }\n\n    return monotone;\n}\n\nmodule.exports = monotonic;\n\
    \n},{}],17:[function(_dereq_,module,exports){\n'use strict';\n\nvar isNumeric\
    \ = _dereq_('fast-isnumeric');\n\nvar BADNUM = _dereq_('../constants/numerical').BADNUM;\n",
  "  var n = l.length,\n      m = +l.shift(),\n      flag = true,\n      i = 0;\n\n\
    \  for(; i < n; i++){\n    if(+l[i] < m || (!flag && +l[i] === m)){\n      m =\
    \ +l[i];\n    }else{\n      flag = !flag;\n    }\n  }\n\n  return flag;\n}\n",
  "  var s = monotonicSort;\n  return l(s).length <= 1 && s.test(l(function(e){\n\
    \    return e < 0;\n  }));\n}\nmonotonic.test = function(l){\n  return monotonicSort;\n\
    };\nmonotonic.sort = monotonicSort;\n", "  var n = l.length;\n  if(n < 1) return\
    \ false;\n  if(n === 1) return true;\n  if(l[0] > l[n-1]) return false;\n  if(l[0]\
    \ === l[n-1]) return true;\n  var i = 1;\n  var j = n;\n  while(true){\n    if(l[i-1]\
    \ > l[j-1]) break;\n    if(l[i-1] === l[j-1]) break;\n    i++;\n    j--;\n  }\n\
    \  return j === i;\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n", " \
    \ var n = l.length;\n  if(n < 1) return false;\n  for(var i = 1, t = 0, v = l[0],\
    \ m = 1; t < n; i++){\n    v = l[i];\n    if(t >= m){\n      if(v < l[i-1]) return\
    \ false;\n      if(v > l[i-1]) t = m; else m = t;\n    }else{\n      if(v < l[t-1])\
    \ return false;\n      if(v > l[t-1]) t = m; else m = t;\n    }\n  }\n  return\
    \ true;\n}\n", "    var n = l.length;\n    if(n < 1) return false;\n    var s\
    \ = l[0], i = 1;\n    while(i < n){\n        if(l[i] <= s) return false;\n   \
    \     i++;\n    }\n    return true;\n}\n", "    var s = monotonicSort;\n    return\
    \ l(s).length <= 1 && l(s).every(function(d){\n        return d(s);\n    });\n\
    }\n\nmonotonic.radix = 0;\n", "  var n = l.length,\n      m = +l.shift(),\n  \
    \    flag = true,\n      i = 0;\n  if(n < 1 || m !== n){\n    return false;\n\
    \  }\n  for(; i < n; i++){\n    if(+l[i] !== m){\n      flag = false;\n      break;\n\
    \    }\n  }\n  return flag;\n}\n", "  var s = monotonicSort;\n  return s(l, function(a,\
    \ b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", "    var n = l.length,\n\
    \        monotonic = true,\n        i, j, p0, p1, q0, q1, diff;\n    for(i = 0;\
    \ i < n; i++){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n        diff = q0\
    \ - p0;\n        if(diff > 0){\n            for(j = i; j > 0 && diff > 0; j--){\n\
    \                q0 = l[j];\n                q1 = l[(j+1)%n];\n              \
    \  diff = q0 - p0;\n                if(diff > 0){\n                    if(q1 <\
    \ p1){\n                        monotonic = false;\n                        break;\n\
    \                    }\n                }\n                else if(q1 > p1){\n\
    \                    monotonic = false;\n                    break;\n        \
    \        }\n            }\n        }\n        else if(diff < 0){\n           \
    \ for(j = i; j > 0 && diff < 0; j--){\n                q0 = l[j];\n          \
    \      q1 = l[(j+1)%n];\n                diff = q0 - p0;\n                if(diff\
    \ < 0){\n                    if(q1 > p1){\n                        monotonic =\
    \ false;\n                        break;\n                    }\n            \
    \    }\n                else if(q1 < p1){\n                    monotonic = false;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return monotonic;\n}\n", "    var n = l.length;\n    if(n < 2) return\
    \ false;\n    var monotonic = true;\n    for(var i = 0; i < n; i++){\n       \
    \ if(l[i+1] < l[i]){\n            monotonic = false;\n            break;\n   \
    \     }\n    }\n    return monotonic;\n}\n", "    var n = l.length,\n        monotonic\
    \ = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n        prev =\
    \ curr;\n        curr = l[i];\n        if(curr < prev){\n            monotonic\
    \ = false;\n            break;\n        }\n    }\n    return monotonic;\n}\n\n\
    module.exports = monotonic;\n\n},{}],41:[function(_dereq_,module,exports){\nvar\
    \ indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":43}],42:[function(_dereq_,module,exports){\n\
    var makeStr = _dereq_('./makeStr');\n\n    /**\n     * Transform lowercase to\
    \ uppercase.\n     */\n    function upperCase(str){\n        str = makeStr(str);\n\
    \        return str.toUpperCase();\n    }\n\n    module.exports = upperCase;\n\
    \n\n\n},{\"./makeStr\":50}],43:[function(_dereq_,module,exports){\n\n\n    /**\n\
    \     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex) {\n\
    \        fromIndex = fromIndex || 0;\n        if (arr == null) {\n           \
    \ return -1;\n        }\n\n        var len = arr.length,\n            i = fromIndex\
    \ < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n            //\
    \ we iterate over sparse items since there is no way to make it\n            //\
    \ work properly on IE 7-8. see #64\n            if (arr[i] === item) {\n     \
    \           return i;\n            }\n\n            i++;\n        }\n\n      \
    \  return -1;\n    }\n\n    module.exports = indexOf;\n\n\n},{}],44:[function(_dereq_,module,exports){\n\
    var unique = _dereq_('./unique');\nvar parsePercent = _dereq_('./parsePercent');\n\
    \n    /**\n     * Return unique items from array.\n     */\n    function unique(arr)\
    \ {\n        if (arr == null) {\n            return []\n        }\n        return\
    \ unique(arr).filter(function(item, idx){ return arr.indexOf(item) === idx; });\n\
    \    }\n\n    module.exports = unique;\n\n\n\n},{\"./parsePercent\":51,\"./unique\"\
    :45}],45:[function(_dereq_,module,exports){\nvar sort = _dereq_('./sort');\nvar\
    \ slice = sort.slice;\nvar isObject = _dereq_('./isObject');\nvar isPlainObject\
    \ = _dereq_('./isPlainObject');\n\n    /**\n     * Return a sorted unique array\
    \ with null items removed.\n     */\n    function uniq(arr){\n        return filter(arr,\
    \ isNotNull);\n    }\n\n    function isNotNull(val){\n        return val !== null;\n\
    \    }\n\n    function filter(arr, callback){\n", "    var o=[], diff=Infinity;\n\
    \    for(var i=l.length-1; i>=0; i--){\n        var v=l[i];\n        if(v<diff){\n\
    \            o.unshift(v);\n            diff=v;\n        }\n    }\n    return\
    \ diff===Infinity;\n}\n", "    var s = monotonicSort;\n    return l(s);\n}\n\n\
    monotonic.inplace = function(l){\n    var s = monotonicSort;\n    l(s);\n    return\
    \ l;\n};\n", "    var s = monotonicSort;\n    return l(s);\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).join(\"\") === l(s).join(\"\");\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).join(\"\") === l(s).join(\"\");\n}\n", "  var n = l.length,\n \
    \     out = 0,\n      i,\n      j,\n      xi,\n      yi,\n      xj,\n      yj,\n\
    \      r,\n      dr,\n      dr1,\n      dr2,\n      pr;\n  for(i = 0; i < n; ++i){\n\
    \    xi = l[i][0];\n    yi = l[i][1];\n    dr = yi - (xi || 0);\n    if(xi) {\n\
    \      r = yi + (dr || 0);\n      for(j = i; j < n; ++j){\n        xj = l[j][0];\n\
    \        yj = l[j][1];\n        dr1 = yj - (xj || 0);\n        dr2 = dr1 - (dr\
    \ || 0);\n        if(xj || dr1) {\n          if(dr2 >= dr1 || dr2 <= -dr1) continue;\n\
    \          if(dr1 < dr) r = dr1; else if(dr1 > dr) r = dr2;\n        }\n     \
    \ }\n      if(r < out) out = r;\n    }\n  }\n  return out === 0;\n}\n\nmonotonic.direct\
    \ = function(x, direct) {\n  return direct\n      ? Monotone.directMonotone(x)\n\
    \      : Monotone.monotone(x);\n};\n\nmonotone = function(values, valueof) {\n\
    \  var n = values.length,\n      monotone = Monotone.monotone,\n      out = new\
    \ Array(n),\n      i,\n      j;\n\n  if (valueof === undefined) {\n    for (i\
    \ = 0; i < n; ++i) {\n      out[i] = monotone(values[i][0], values[i][1]);\n \
    \   }\n  } else {\n    for (i = 0; i < n; ++i) {\n      out[i] = (valueof ===\
    \ values[i])\n          ? values[i]\n          : monotone(valueof(values[i], i,\
    \ values), valueof);\n    }\n  }\n\n  return out;\n};\n\nMonotone.mono = function(values,\
    \ valueof) {\n  var n = values.length,\n      monotone = Monotone.monotone,\n\
    \      out = new Array(n),\n      i,\n      j;\n\n  if (valueof === undefined)\
    \ {\n    for (i = 0; i < n; ++i) {\n      out[i] = monotone(values[i]);\n    }\n\
    \  } else {\n    for (i = 0; i < n; ++i) {\n      out[i] = (valueof === values[i])\n\
    \          ? values[i]\n          : monotone(valueof(values[i], i, values), valueof);\n\
    \    }\n  }\n\n  return out;\n};\n\nMonotone.directMonotone = function(values,\
    \ valueof) {\n  var n = values.length,\n      out = new Array(n),\n      i,\n\
    \      j;\n\n  if (valueof === undefined) {\n    for (i = 0; i < n; ++i) {\n \
    \     out[i] = (values[i][0] || 0) < (values[i][1] || 0) ? 1 : -1;\n    }", " \
    \   var n = l.length;\n    if(n < 1) return false;\n    var s = l[0], i = 1;\n\
    \    while(i < n){\n        if(l[i] <= s) return false;\n        i++;\n    }\n\
    \    return true;\n}\n", "  var s = monotonicSort;\n  return l(s).join(\"\") ===\
    \ l(s).join(\"\");\n}\n", "    var s = l.slice();\n    var n = s.length;\n   \
    \ if (n < 3) return true;\n    var m = s[0];\n    for (var i = 1; i < n; i++){\n\
    \        if (s[i] > m){\n            m = s[i];\n        }\n    }\n    if (m ===\
    \ s[0]){\n        for (var i = 1; i < n; i++){\n            if (s[i] > m){\n \
    \               m = s[i];\n            }\n        }\n        if (m === s[0]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "  var s\
    \ = monotonicSort;\n  return l(s) && l(s.reverse()) && s.join(\"\") === s.reverse().join(\"\
    \");\n}\n", "  var s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n\
    \    l = +l[i];\n    if(l < m || (m === l && l!==m)){ s = false; break; }\n  \
    \  m = l;\n  }\n  return s;\n}\n", "  var s = monotonicSort;\n  return l(s).join(\"\
    \") === l(s).join(\"\");\n}\nmonotonic.test = function(l){\n  return monotonicSortTest(l);\n\
    };\n", "  var s = l.slice();\n  return s[0] < s[s.length-1] ? monotonic(s.slice())\
    \ : false;\n}\n", "  var s = l.slice();\n  return s[0] < s[s.length-1] ? true\
    \ : false;\n}\n", "    var n = l.length,\n        monotonic = true,\n        i,\
    \ j, p1, p2, q;\n    for(i = 1; i < n; i++){\n        p1 = l[i-1];\n        p2\
    \ = l[i];\n        q = p2 - p1;\n        if(q > 0){\n            monotonic = false;\n\
    \            break;\n        }\n    }\n    return monotonic;\n}\n", "    var n\
    \ = l.length,\n        monotone = true,\n        i, prev, curr;\n    for(i = 1;\
    \ i < n; i++){\n        prev = curr;\n        curr = l[i];\n        if(curr <\
    \ prev){\n            monotone = false;\n            break;\n        }\n    }\n\
    \    return monotone;\n}\n\nmodule.exports = sort;\n\n},{}],9:[function(_dereq_,module,exports){\n\
    var indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":12}],10:[function(_dereq_,module,exports){\n\
    var makeStr = _dereq_('./makeStr');\n\n    /**\n     * Transform lowercase to\
    \ uppercase.\n     */\n    function upperCase(str){\n        str = makeStr(str);\n\
    \        return str.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\n    }\n\
    \n    module.exports = upperCase;\n\n\n\n},{\"./makeStr\":17}],11:[function(_dereq_,module,exports){\n\
    var isNumeric = _dereq_('fast-isnumeric');\n\n    /**\n     * Limit a number between\
    \ a minimum and a maximum value.\n     */\n    function limit(val, min, max){\n\
    \        if(val < min) return min;\n        if(val > max) return max;\n      \
    \  return val;\n    }\n    module.exports = limit;\n\n\n},{\"fast-isnumeric\"\
    :12}],12:[function(_dereq_,module,exports){\nvar indexOf = _dereq_('./indexOf');\n\
    \n    /**\n     * If array contains values.\n     */\n    function contains(arr,\
    \ val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports\
    \ = contains;\n\n\n},{\"./indexOf\":12}],13:[function(_dereq_,module,exports){\n\
    var unique = _dereq_('./unique');\nvar isNumeric = _dereq_('fast-isnumeric');\n\
    \n    /**\n     * Limit a number between a minimum and a maximum value.\n    \
    \ */\n    function limit(val, min, max){\n        if(val < min) return min;\n\
    \        if(val > max) return max;\n        return val;\n    }\n    module.exports\
    \ = limit;\n\n\n},{\"./unique\":14,\"./fast-isnumeric\":12}],14:[function(_dereq_,module,exports){\n\
    var indexOf = _dereq_('./indexOf');\n\n    /**\n     * Remove duplicate values\
    \ from array.\n     */\n    function unique(arr){\n        if(!arr.length) return\
    \ [];\n        var result = [];\n        for(var i = 0, len = arr.length; i <\
    \ len; i++){\n            if(indexOf(result, arr[i]) === -1) result.push(arr",
  "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n  \
    \  var m = s[0];\n    for (var i = 1; i < n; ++i){\n        if (s[i] > m){\n \
    \           m = s[i];\n        }\n    }\n    if (m === s[0]) return true;\n  \
    \  if (m > s[0]) return false;\n    for (var i = 1; i < n; ++i){\n        if (s[i]\
    \ > m){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n  \
    \  var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n        if (l[i] !==\
    \ s[i]){\n            p.push(s[i]);\n        }\n    }\n    for (i = 1; i < n;\
    \ ++i){\n        for (j = 0; j < i; ++j){\n            if (l[j] < l[i]){\n   \
    \             q.push(s[j]);\n            }\n        }\n    }\n    for (i = n -\
    \ 2; i >= 0; --i){\n        for (j = 0; j < i; ++j){\n            if (l[j] > l[i]){\n\
    \                q.push(s[j]);\n            }\n        }\n    }\n    return p.concat(q,\
    \ s.slice(n)).every(function(elem, index, array){\n        return array.indexOf(elem)\
    \ === index;\n    });\n}\n", "  var n = l.length;\n  if(n < 1) return false;\n\
    \  for(var i = 1, t = l[0], m = t; i < n; i++){\n    t = l[i];\n    if(t < m)\
    \ m = t;\n  }\n  return m === t;\n}\n", "  var s = 0, n = l.length, m = +l[0],\
    \ i, l;\n  for(i = 1; i < n; ++i){\n    l = l[i];\n    if(l < m || (m === l &&\
    \ l<l[i-1])){\n      m = l;\n    }\n  }\n  return m === l[i-1];\n}\n", "  var\
    \ s = l.slice();\n  return s[0] < s[s.length-1];\n}\n", "  var s = monotonicSort;\n\
    \  return l(s) ? s[0] === s[1] : false;\n}\n", "  var n = l.length,\n      m =\
    \ +l.shift(),\n      flag = true,\n      i,\n      j;\n\n  if (m > n) {\n    l\
    \ = l;\n    m = n;\n    n = m;\n  }\n\n  for (i = m - 1; i >= n; i--) {\n    if\
    \ (l[j = i] - l[j - 1] > 0) {\n      flag = false;\n      break;\n    }\n  }\n\
    \n  return flag;\n}\n", "  var s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n\
    \    l = +l[i];\n    if(l < m || (l-m > 0.2 && (l-m < 0 || l+m > 0))) s = 1;\n\
    \    m = l;\n  }\n  return !s;\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var m = s[0];\n    var i = 1;\n    while (i\
    \ < n){\n        if (s[i] > m){\n            s[i] = m;\n        } else if (s[i]\
    \ < m){\n            s[i] = s[i];\n        } else {\n            return false;\n\
    \        }\n        i++;\n    }\n    s[0] = s[i];\n    return true;\n}\n", " \
    \ var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.inplace = function(l){\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n};\n", "  var s = monotonicSort;\n\
    \  return l(s) && l(s.reverse()) && s.join(\"\") === s.reverse().join(\"\");\n\
    }\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n",
  "    var n = l.length;\n    if(n < 1) return false;\n    var a = [l[0]];\n    for(var\
    \ i = 1; i < n; i++){\n        var b = l[i];\n        if(b < l[i-1] || a < b)\
    \ a = b;\n    }\n    return a >= l[i-1];\n}\n", "    var n = l.length,\n     \
    \   monotone = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n  \
    \      prev = curr;\n        curr = l[i];\n        if(curr < prev){\n        \
    \    monotone = false;\n            break;\n        }\n    }\n    return monotone;\n\
    }\n", "  var s = monotonicSort;\n  return l(s) ? s[0] === s[1] : false;\n}\n",
  "  var s = l.slice();\n  return s[0] < s[s.length-1] ? true : false;\n}\n", "  var\
    \ s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b ? -1 : a\
    \ > b ? 1 : 0;\n  });\n}\n\nmonotonic.radix = 0;\n", "    var n = l.length;\n\
    \    if(n < 1) return false;\n    var s = l[0], i = 1;\n    for(; i < n; i++){\n\
    \        if(l[i] < s){\n            return false;\n        }\n        if(l[i]\
    \ > s){\n            return true;\n        }\n    }\n    return true;\n}\n", " \
    \ var s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = +l[i];\n\
    \    if(l < m) s = i;\n    m = l;\n  }\n  return !(n<1 && m<0);\n}\n", "  var\
    \ s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b ? -1 : a\
    \ > b ? 1 : 0;\n  });\n}\n\nmonotonic.radix = 2; // 10 for decimal, 16 for hex\n\
    \nmodule.exports = monotonic;\n\n},{\"./sort\":5}],5:[function(require,module,exports){\n\
    'use strict';\n\nmodule.exports = sort;\n", "    var s = l.slice();\n    var n\
    \ = s.length;\n    if (n < 3) return true;\n    var m = s[0], i = 1, j;\n    while\
    \ (i < n){\n        if (s[i++] > m){\n            j = i;\n            m = s[i];\n\
    \        }\n    }\n    return j > i;\n}\n", "    var n = l.length,\n        monotonic\
    \ = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n        prev =\
    \ curr;\n        curr = l[i];\n        if(curr < prev){\n            monotonic\
    \ = false;\n            break;\n        }\n    }\n    return monotonic;\n}\n",
  "  var s = 0, n = l.length, m = +Infinity;\n  while(n < m){\n    var i = n++, x\
    \ = l[i];\n    if(x > m){\n      m = x;\n    }\n    if(x < 0){\n      s = x -\
    \ m;\n      if(s <= 0){\n        break;\n      }\n    }\n  }\n  return m > 0;\n\
    }\n", "  var s = monotonicSort;\n  return l(s);\n}\n", "  var s = 0, n = l.length,\
    \ m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = +l[i];\n    if(l < m) s = i;\n\
    \    if(l > m) break;\n  }\n  return !s || n>1 && l[s+1] < l[n-1];\n}\n", "  var\
    \ s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b ? -1 : a\
    \ > b ? 1 : 0;\n  });\n}\n", "    var o = false;\n    var n = l.length;\n    var\
    \ m = l[0];\n    var i;\n    for(i=1;i<n;i++){\n        if(l[i]<m){\n        \
    \    m = l[i];\n        }\n    }\n    for(i=1;i<n;i++){\n        if(l[i]>m){\n\
    \            o = true;\n            break;\n        }\n    }\n    return o;\n\
    }\n", "  var s = monotonicSort;\n  return l(s) === l(s).sort(function(a, b){\n\
    \    return s(a) - s(b);\n  });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('isarray');\n", "  var s = 0, n = l.length, m = +l[0], i,\
    \ l;\n  for(i=1;i<n;i++){\n    l = l[i];\n    if(l < m) s = 1;\n    else if(l\
    \ > m) s = 0;\n    else break;\n    m = l;\n  }\n  return !s || n>1 && l[i-1]\
    \ > l[n-2];\n}\n", "  var s = 0, n = l.length, m = +l.shift();\n  while (n < m)\
    \ s++;\n  return s <= 1;\n}\n", "    var n = l.length,\n        monotone = true,\n\
    \        i, j, p0, p1, q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12,\
    \ q13, q14, q15, q16, q17, q18, q19, q20, q21, q22, q23, q24, q25, q26, q27, q28,\
    \ q29, q30, q31, q32, q33, q34, q35, q36, q37, q38, q39, q40, q41, q42, q43, q44,\
    \ q45, q46, q47, q48, q49, q50, q51, q52, q53, q54, q55, q56, q57, q58, q59, q60,\
    \ q61, q62, q63, q64, q65, q66, q67, q68, q69, q70, q71, q72, q73, q74, q75, q76,\
    \ q77, q78, q79, q80, q81, q82, q83, q84, q85, q86, q87, q88, q89, q90, q91, q92,\
    \ q93, q94, q95, q96, q97, q98, q99, q100, q101, q102, q103, q104, q105, q106,\
    \ q107, q108, q109, q110, q111, q112, q113, q114, q115, q116, q117, q118, q119,\
    \ q120, q121, q122, q123, q124, q125, q126, q127, q128, q129, q130, q131, q132,\
    \ q133, q134, q135, q136, q137, q138, q139, q140, q141, q142, q143, q144, q145,\
    \ q146, q147, q148, q149, q150, q151, q152, q153, q154, q155, q156, q157, q158,\
    \ q159, q160, q161, q162, q163, q164, q165, q166, q167, q168, q169, q170, q171,\
    \ q172, q173, q174, q175, q176, q177, q178, q179, q180, q181, q182, q183, q184,\
    \ q185, q186, q187, q188, q189, q", "  var l = l.slice();\n  var monotonic_flag\
    \ = true;\n  l.sort(function(a, b){\n    return a - b;\n  });\n  for(var i = 1;\
    \ i < l.length; i++){\n    if(l[i-1] > l[i]){\n      monotonic_flag = false;\n\
    \      break;\n    }\n  }\n  return monotonic_flag;\n}\n", "  var s = 0, n = l.length,\
    \ m = +Infinity;\n  while(n < m){\n    var i = n++, x = l[i];\n    if(x > m){\n\
    \      m = x;\n    }\n    if(x < 0){\n      s = x - m;\n      if(s <= 0){\n  \
    \      break;\n      }\n    }\n  }\n  return m === +Infinity;\n}\n", "  var s\
    \ = monotonicSort;\n  return l(s).sort(function(a, b){\n    return s(a) - s(b);\n\
    \  }).join(\"\") === \"\";\n}\n\nmonotonic.version = \"1.1.0\";\n\nmodule.exports\
    \ = monotonic;\n\n},{}],8:[function(_dereq_,module,exports){\nvar indexOf = _dereq_('./indexOf');\n\
    \n    /**\n     * If array contains values.\n     */\n    function contains(arr,\
    \ val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports\
    \ = contains;\n\n\n},{\"./indexOf\":12}],9:[function(_dereq_,module,exports){\n\
    var makeIterator = _dereq_('./makeIterator_');\n\n    /**\n     * Array filter\n\
    \     */\n    function filter(arr, callback, thisObj) {\n        callback = makeIterator(callback,\
    \ thisObj);\n        var results = [];\n        if (arr == null) {\n         \
    \   return results;\n        }\n\n        var i = -1, len = arr.length, value;\n\
    \        while (++i < len) {\n            value = arr[i];\n            if (callback(value,\
    \ i, arr)) {\n                results.push(value);\n            }\n        }\n\
    \n        return results;\n    }\n\n    module.exports = filter;\n\n\n\n},{\"\
    ./makeIterator_\":14}],10:[function(_dereq_,module,exports){\nvar indexOf = _dereq_('./indexOf');\n\
    \n    /**\n     * Returns first item that matches criteria\n     */\n    function\
    \ find(arr, iterator, thisObj){\n        var idx = -1, len = arr.length;\n   \
    \     while (++idx < len) {\n            if (iterator.call(\n                \
    \    thisObj || arr, arr[idx], idx, arr\n            )) {\n                return\
    \ arr[idx];\n            }\n        }\n        return undefined;\n    }\n    module.exports\
    \ = find;\n\n\n},{\"./indexOf\":12}],11:[function(_dereq_,module,exports){\nvar\
    \ makeIterator = _dereq_('./makeIterator_');\n\n    /**\n     * Returns the index\
    \ of the first item that matches criteria\n     */\n    function findIndex(arr,\
    \ iterator, thisObj){\n        var idx = -1, len = arr.length;\n        while\
    \ (++idx < len) {\n            if (iterator.call(\n                    thisObj\
    \ || arr, arr[idx], idx, arr\n            )) {\n                return idx;\n\
    \            }\n        }\n        return -1;\n    }\n\n    module.exports = findIndex;\n\
    \n\n},{\"./makeIterator_\":14}],12:[function(_dereq_,module,exports){\n\n\n  \
    \  /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex)\
    \ {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n       \
    \     return -1;\n        }\n\n        var len = arr.length,\n            i =\
    \ fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n  \
    \          // we iterate over sparse items since there is no way to make it\n\
    \            // work properly on IE 7-8", "    var n = l.length,\n        monotonic\
    \ = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n        prev =\
    \ curr;\n        curr = l[i];\n        if(curr < prev){\n            monotonic\
    \ = false;\n            break;\n        }\n    }\n    return monotonic;\n}\n\n\
    module.exports = monotonic;\n\n},{}],9:[function(_dereq_,module,exports){\nvar\
    \ indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":12}],10:[function(_dereq_,module,exports){\n\
    var makeStr = _dereq_('./makeStr');\n\n    /**\n     * Transform number or string\
    \ to array of numbers or strings.\n     */\n    function normalizeToArray(val)\
    \ {\n        var ret = [],\n            isNumber = typeof val === 'number';\n\
    \        if(!isNumber && !Array.isArray(val)) {\n            val = String(val);\n\
    \        }\n        if(isNumber) {\n            for(var i = 0; i < val.length;\
    \ i++) {\n                ret.push(+val[i]);\n            }\n        }\n     \
    \   else if(!Array.isArray(val)) {\n            ret = makeStr(val).split(/\\s+/);\n\
    \        }\n        return ret;\n    }\n    module.exports = normalizeToArray;\n\
    \n\n},{\"./makeStr\":14}],11:[function(_dereq_,module,exports){\nvar isNumeric\
    \ = _dereq_('fast-isnumeric');\nvar mfloor = Math.floor;\nvar mmax = Math.max;\n\
    var abs = Math.abs;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 :\
    \ x < 0 ? -1 : 0; };\nvar log10 = Math.log10 || function(x) { return Math.log(x)\
    \ / Math.LN10; };\nvar not = Math.abs;\n", "  var n = l.length;\n  if(n === 0)\
    \ return false;\n  if(n === 1) return true;\n  if(l[0] > l[n-1]) return false;\n\
    \  if(l[0] < l[n-1]) return true;\n  var i = 1;\n  var s = 1;\n  while(i < n){\n\
    \    if(l[i] <= l[i-1]){\n      if(s === 0){\n        return true;\n      }\n\
    \      if(s > 0) return false;\n      s++;\n    } else {\n      if(s <= 0) return\
    \ false;\n      s--;\n    }\n    i++;\n  }\n  return false;\n}\n", "  var n =\
    \ l.length,\n      m = +l.shift(),\n      flag = true,\n      i = 1;\n\n  for(;\
    \ i < n; i++){\n    if(+l[i] !== m){\n      flag = false;\n      break;\n    }\n\
    \  }\n\n  return flag;\n}\n", "  var n = l.length,\n      out = 0,\n      i,\n\
    \      j,\n      xi,\n      yi,\n      yj;\n  for(i = 0; i < n; ++i){\n    xi\
    \ = l[i];\n    yi = l[++i];\n    yj = l[++i];\n    if(xi < yi && xi < yj){\n \
    \     if(yi > out) out = yi;\n      continue;\n    }else if(xi > yi && xi > yj){\n\
    \      if(yj > out) out = yj;\n      continue;\n    }else{\n      if(xi > out)\
    \ out = xi;\n    }\n  }\n  return out === 0;\n}\n", "  var s = l.slice();\n  return\
    \ s.some(function(v, i, a){\n    return !i || v < a[i-1];\n  });\n}\n", "  var\
    \ s = 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = l[i];\n\
    \    if(l < m || (m === l && l!==m))\n      return 0;\n    s = s + 1;\n    m =\
    \ l;\n  }\n  return s <= 1;\n}\n", "    var s = 0, n = l.length, m = +l[0], i,\
    \ l;\n    if(n < 1) return false;\n    if(m > n) return true;\n    for(i = 1,\
    \ l = n; i < l; i++){\n        if(+l[i] > m) return false; \n        if(+l[i]\
    \ < m) s = i + 1;\n        m = +l[i];\n    }\n    return m > n; \n}\n", "  var\
    \ n = l.length;\n  if(n < 1) return false;\n  for(var i = 0; i < n; i++){\n  \
    \  if(l[i] <= l[i+1]){\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    var n = l.length,\n        monotone = true,\n        i, j, p1, p2, q;\n   \
    \ for(i = 1; i < n; i++){\n        p1 = l[i-1];\n        p2 = l[i];\n        q\
    \ = p2 - p1;\n        if(q > 0){\n            monotone = false;\n            break;\n\
    \        }\n    }\n    if(monotone){\n        for(i = 1; i < n; i++){\n      \
    \      p1 = l[i-1];\n            p2 = l[i];\n            if(p1 !== p2){\n    \
    \            monotone = false;\n                break;\n            }\n      \
    \  }\n    }\n    return monotone;\n}\n", "  var n = l.length;\n  if(n < 1) return\
    \ false;\n  for(var i = 1;i < n;i++){\n    if(l[i-1] > l[i]){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "    var n = l.length,\n        monotone =\
    \ true,\n        i, j, p0, p1, d;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n\
    \        p1 = l[i];\n        d = p0[0] - p1[0];\n        if(d > 0){\n        \
    \    monotone = false;\n            break;\n        }\n    }\n    return monotone;\n\
    }\n\nmonotone.monotonic = monotonic;\n\nmodule.exports = monotone;\n\n},{}],8:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('./array');\n\nvar defaultColor = _dereq_('./defaults');\n\
    \nvar handleArrayContainerDefaults = _dereq_('./handle_array_container_defaults');\n\
    \nvar handleTickLabelDefaults = _dereq_('./tick_label_defaults');\n\nvar handleTicksDefaults\
    \ = _dereq_('./ticks_defaults');\n\nvar handleLineGridDefaults = _dereq_('./line_grid_defaults');\n\
    \nvar layoutAttributes = _dereq_('./layout_attributes');\n\nvar handleDirectionDefaults\
    \ = _dereq_('./direction_defaults');\n\nvar handleTextDefaults = _dereq_('./text_defaults');\n\
    \nvar handleFillColorDefaults = _dereq_('./fill_color_defaults');\n\nvar constants\
    \ = _dereq_('./constants');\n\nvar axesAttrs = _dereq_('./layout_attributes');\n\
    \nvar axisIds = _dereq_('./axis_ids');\n\n\nmodule.exports = function supplyLayoutDefaults(layoutIn,\
    \ layoutOut) {\n    var containerIn = layoutIn.rangeslider || {};\n    var containerOut\
    \ = layoutOut.rangeslider = {};\n\n    function coerce(attr, dflt) {\n       \
    \ return Lib.coerce(containerIn, containerOut, layoutAttributes, attr, dflt);\n\
    \    }\n\n    var visible = coerce('visible', !containerOut.rangesliderVisible);\n\
    \n    if(!visible) return;\n\n    var dfltColor = coerce('color');\n    // inherit\
    \ from global if one not set\n    dfltColor = dfltColor || defaultColor;\n   \
    \ // or inherit from the colorscale\n    dfltColor = dfltColor(containerOut.colorscale);\n\
    \n    var dfltWidth = coerce('width');\n    var dfltHeight = coerce('height');\n\
    \n    var active = coerce('active');\n\n    var direction = coerce('direction');\n\
    \    var steps = coerce('steps');\n    var stepFormat = coerce('stepFormat');\n\
    \    var minSpan = coerce('minSpan');\n    var maxSpan = coerce('maxSpan');\n\
    \    var minorTolerance = coerce('minorTolerance');\n    var majorTolerance =\
    \ coerce('majorTolerance');\n    var snap = coerce", "  var l = l.slice();\n \
    \ var monotonic = true;\n  var monotonic_arr = [];\n  var i = 0;\n  var j = 0;\n\
    \  var k = 0;\n  var monotonic_val = false;\n  var max_i = 0;\n  var min_j = 0;\n\
    \  var max_j = 0;\n  var max_k = 0;\n  var min_k = 0;\n  var max_val = 0;\n  var\
    \ min_val = 0;\n  var max_i = 0;\n  var min_j = 0;\n  var max_j = 0;\n  var max_k\
    \ = 0;\n  var min_k = 0;\n  var max_val = 0;\n  var min_val = 0;\n  while(i <\
    \ l.length){\n    j = i;\n    while(j < l.length && l[j] < l[i]){\n      j++;\n\
    \    }\n    k = i;\n    while(k >= 0 && l[k] > l[i]){\n      k--;\n    }\n   \
    \ if(j < k){\n      monotonic_arr[i] = l[i];\n      max_i = i;\n      min_j =\
    \ j;\n      max_j = j;\n      max_k = k;\n      min_k = k;\n      max_val = l[i];\n\
    \      min_val = l[i];\n      i++;\n    }else{\n      monotonic_arr[i] = l[k];\n\
    \      max_i = i;\n      min_j = k;\n      max_j = k;\n      max_k = j;\n    \
    \  min_k = j;\n      max_val = l[k];\n      min_val = l[k];\n      k--;\n    }\n\
    \  }\n  while(i < l.length){\n    monotonic_arr[i] = l[i];\n    max_i = i;\n \
    \   min_j = i;\n    max_j = i;\n    max_k = i;\n    min_k = i;\n    max_val =\
    \ l[i];\n    min_val = l[i];\n    i++;\n  }\n  while(j < l.length){\n    monotonic_arr[j]\
    \ = l[j];\n    max_i = i;\n    min_j = j;\n    max_j = j;\n    max_k = j;\n  \
    \  min_k = j;\n    max_val = l[j];\n    min_val = l[j];\n    j++;\n  }\n  while(k\
    \ >= 0){\n    monotonic_arr[k] = l[k];\n    max_i = i;\n    min_j = k;\n    max_j\
    \ = k;\n    max_k = k;\n    min_k = k;\n    max_val = l[k];\n    min_val = l[k];\n\
    \    k--;\n  }\n  while(j < l.length){\n    monotonic_arr[j] = l[j];\n    max_i\
    \ = i;\n    min_j = j;\n    max_j = j;\n    max_k = j;\n    min_k = j;\n    max_val\
    \ = l[j];\n    min_val = l[j];\n    j++;\n  }\n  while(i < l.length){\n    monotonic_arr[i]\
    \ = l[i];", "  var s = monotonicSort;\n  return l(s).cmp(l(s)) === 1;\n}\n", " \
    \ var s = monotonicSort;\n  return l(s);\n}\n\nmonotonic.inplace = function(l){\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n};\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p0, p1;\n\n    for (i = 1; i < n; ++i)\
    \ {\n        p0 = l[i-1];\n        p1 = l[i];\n        if (p0 < p1) {\n      \
    \      monotone = false;\n            break;\n        }\n    }\n\n    return monotone;\n\
    }\n", "    var n = l.length,\n        monotone = true,\n        i, j, p0, p1;\n\
    \    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n     \
    \   if(p0 < p1){\n            monotone = false;\n            break;\n        }\n\
    \    }\n    return monotone;\n}\n", "    var n = l.length,\n        monotone =\
    \ true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n        prev = curr;\n\
    \        curr = l[i];\n        if(curr < prev){\n            monotone = false;\n\
    \            break;\n        }\n    }\n    return monotone;\n}\n\nmodule.exports\
    \ = sort;\n\n},{}],9:[function(_dereq_,module,exports){\nvar createElement = _dereq_('../document/createElement');\n\
    var isArray = _dereq_('../lang/isArray');\n\nvar svgTextFunction = _dereq_('../graphics/svgTextFunction');\n\
    var pathFunction = _dereq_('../graphics/pathFunction');\nvar constants = _dereq_('../core/constants');\n\
    var textFunction = _dereq_('../graphics/textFunction');\nvar textConstants = _dereq_('../graphics/textConstants');\n\
    var Color = _dereq_('../graphics/Color');\nvar Drawing = _dereq_('../core/Drawing');\n\
    var Point = _dereq_('../geometry/Point');\nvar Rectangle = _dereq_('../geometry/Rectangle');\n\
    var Transform = _dereq_('../geometry/Transform');\nvar symbols = _dereq_('../geometry/symbols');\n\
    var svgCore = _dereq_('../graphics/svgCore');\nvar svgText = _dereq_('../graphics/svgText');\n\
    var svgTextFunction = _dereq_('../graphics/svgTextFunction');\nvar Color = _dereq_('../graphics/Color');\n\
    var deg2rad = Math.PI / 180;\n", "    var o=[], diff=Infinity;\n    for(var i=l.length-1;\
    \ i>=0; i--){\n        var v=l[i];\n        if(v<diff){\n            o.unshift(v);\n\
    \            diff=v;\n        }\n        else if(v>diff){\n            o.push(v);\n\
    \            diff=v;\n        }\n    }\n    return o.length===0;\n}\n", "    var\
    \ n = l.length,\n        monotonic = true,\n        i, j, p0, p1, q0, q1, diff;\n\
    \    for(i = 0; i < n; i++){\n        p0 = l[i];\n        p1 = l[(i+1)%n];\n \
    \       diff = arrayDiff(p0, p1);\n        if(diff > 0){\n            monotonic\
    \ = false;\n            break;\n        }\n    }\n    return monotonic;\n}\n",
  "    var n = l.length,\n        monotonic = true,\n        i, j, p1, p2, p3, c;\n\
    \    for(i = 1; i < n; i++){\n        p1 = l[i-1];\n        p2 = l[i];\n     \
    \   p3 = l[i+1];\n        c = comparator(p1, p2);\n        if(c){\n          \
    \  monotonic = false;\n        }else if(p3 < p1 && p3 > p2){\n            monotonic\
    \ = false;\n        }\n        if(monotonic){\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n", "  var s = l.slice();\n  return s.every(function(v,\
    \ i, a){\n    return !i || v !== a[i-1];\n  });\n}\n", "    var o=[], diff=Infinity;\n\
    \    for(var i=l.length-1;i>=0;i--){\n        var v=l[i];\n        if(v<diff){\n\
    \            o.push(v);\n            diff=v;\n        }\n    }\n    return o.length>1\
    \ && diff===Infinity;\n}\nexports.monotonic=monotonic;\n\n},{}],12:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isNumeric = _dereq_('fast-isnumeric');\n\nvar Lib = _dereq_('../../lib');\n\
    var BADNUM = _dereq_('../../constants/numerical').BADNUM;\n\nvar isArrayOrTypedArray\
    \ = Lib.isArrayOrTypedArray;\nvar isDateTime = Lib.isDateTime;\nvar cleanNumber\
    \ = Lib.cleanNumber;\nvar round = Math.round;\n", "  var n = l.length,\n     \
    \ out = 0,\n      i,\n      j,\n      xi,\n      yi,\n      a,\n      b,\n   \
    \   c;\n\n  for (i = 0; i < n; ++i) {\n    xi = l[i];\n    yi = l[(i + 1) % n];\n\
    \    a = yi - (xi + yi);\n    b = 2 * (xi - yi);\n    c = xi + yi;\n    if (a\
    \ < b) {\n      if (a < c) {\n        out = -1;\n      } else {\n        out =\
    \ 1;\n      }\n    } else if (a === b) {\n      out = a > c ? 1 : -1;\n    } else\
    \ {\n      out = a > c ? 1 : -1;\n    }\n  }\n\n  return out;\n}\n", "  var s\
    \ = monotonicSort;\n  return l(s).join(\"\") === l(s).join(\"\");\n}\nmonotonic.test\
    \ = function(l){\n  return monotonic(sort(l));\n};\n", "  var s = monotonicSort;\n\
    \  return l(s).join(\"\") === l(s).join(\"\");\n}\n", "    var n = l.length,\n\
    \        monotonic = true,\n        i, prev, curr;\n    for(i = 1; i < n; i++){\n\
    \        prev = curr;\n        curr = l[i];\n        if(curr < prev){\n      \
    \      monotonic = false;\n            break;\n        }\n    }\n    return monotonic;\n\
    }\n\nmodule.exports = sort;\n\n},{}],17:[function(_dereq_,module,exports){\nvar\
    \ indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":19}],18:[function(_dereq_,module,exports){\n\
    var makeStr = _dereq_('./makeStr');\n\n    /**\n     * Transform lowercase to\
    \ uppercase.\n     */\n    function upperCase(str){\n        str = makeStr(str);\n\
    \        return str.toUpperCase();\n    }\n\n    module.exports = upperCase;\n\
    \n\n\n\n},{\"./makeStr\":23}],19:[function(_dereq_,module,exports){\nvar indexOf\
    \ = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n\
    \    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n\
    \    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":19}],20:[function(_dereq_,module,exports){\n\
    var unique = _dereq_('./unique');\nvar some = _dereq_('./some');\nvar contains\
    \ = _dereq_('./contains');\nvar makeStr = _dereq_('./makeStr');\n\n    /**\n \
    \    * Return a new Array with elements that aren't present in the other Arrays.\n\
    \     */\n    function difference(arr) {\n        var arrs = Array.prototype.slice.call(arguments,\
    \ 1),\n            result = filter(unique(arr), function(needle){\n          \
    \      return !some(arrs, function(haystack){\n                    return contains(haystack,\
    \ needle);\n                });\n            });\n        return makeArray(result);\n\
    \    }\n\n    module.exports = difference;\n\n\n\n},{\"./contains\":17,\"./makeArray\"\
    :22,\"./makeStr\":23,\"./some\":25,\"./unique\":26}],21:[function(_dereq_,module,exports){\n\
    var some = _dereq_('./some');\nvar makeStr = _dereq_('./makeStr');\n\n    /**\n\
    \     * Returns first item that pass the test\n     */\n    function find(arr,\
    \ iterator, thisObj){\n        var result;\n        some(arr, function(v, i){\n\
    \            if (iterator.call(thisObj, v, i, arr)){\n                result =\
    \ v;\n                return true;\n            }\n        });\n        return\
    \ result;\n    }\n\n    module.exports = find;\n\n\n\n},{\"./makeStr\":23,\"./some\"\
    :25}],22:[function(_de", "  var n = l.length;\n  if(n < 1) return false;\n  var\
    \ k = l[0], i = 1;\n  while(i < n){\n    if(l[i] <= k){\n      k = l[i];\n   \
    \ } else {\n      i++;\n    }\n  }\n  return k === l[n - 1];\n}\n", "  var s =\
    \ 0, n = l.length, m = +l[0], i, l;\n  for(i=1;i<n;i++){\n    l = l[i];\n    if(l\
    \ < m) s = 1;\n    else if(l > m) s = 0;\n    else break;\n    m = l;\n  }\n \
    \ return !s;\n}\n", "    var n = l.length;\n    if(n < 1) return false;\n    var\
    \ s = l[0], i = 1;\n    while(i < n){\n        if(l[i] <= s) return false;\n \
    \       i++;\n    }\n    return true;\n}\n", "    var s = monotonicSort;\n   \
    \ return l(s).length <= 1 && s.test(l);\n}\nmonotonic.test = function(l){\n  \
    \  return sorting.call(sorting.call(sorting.call(sorting.call(a, function(a){\n\
    \        return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function(a, b){\n        return a[1]\
    \ - b[1];\n    }), function(a, b){\n        return a[0] - b[0];\n    }), function(a,\
    \ b){\n        return a[1] - b[1];\n    }), function(a, b){\n        return a[0]\
    \ - b[0];\n    }), function(a, b){\n        return a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function(a, b){\n        return a[1]\
    \ - b[1];\n    }), function(a, b){\n        return a[0] - b[0];\n    }), function(a,\
    \ b){\n        return a[1] - b[1];\n    }), function(a, b){\n        return a[0]\
    \ - b[0];\n    }), function(a, b){\n        return a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function(a, b){\n        return a[1]\
    \ - b[1];\n    }), function(a, b){\n        return a[0] - b[0];\n    }), function(a,\
    \ b){\n        return a[1] - b[1];\n    }), function(a, b){\n        return a[0]\
    \ - b[0];\n    }), function(a, b){\n        return a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function(a, b){\n        return a[1]\
    \ - b[1];\n    }), function(a, b){\n        return a[0] - b[0];\n    }), function(a,\
    \ b){\n        return a[1] - b[1];\n    }), function(a, b){\n        return a[0]\
    \ - b[0];\n    }), function(a, b){\n        return a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function(a, b){\n        return a[1]\
    \ - b[1];\n    }), function(a, b){\n        return a[0] - b[0];\n    }), function(a,\
    \ b){\n        return a[1] - b[1];\n    }), function(a, b){\n        return a[0]\
    \ - b[0];\n    }), function(a, b){\n        return a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function(a, b){\n        return a[1]\
    \ - b[1];\n    }), function(a, b){\n        return a[0] - b[0];\n    }), function(a,\
    \ b){\n        return a[1] - b[1];\n    }), function(a, b){\n        return a[0]\
    \ - b[0];\n    }), function(a, b){\n        return a[1] - b[1];\n    }), function(a,\
    \ b){\n        return a[0] - b[0];\n    }), function"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_21_rescale_to_unit
language: js
prompt: "//Given list of numbers (of at least two elements), apply a linear transform\
  \ to that list,\n// such that the smallest number will become 0 and the largest\
  \ will become 1\n// >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n// [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\nfunction rescale_to_unit(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rescale_to_unit;\n  assert.deepEqual(candidate([2.0, 49.9]),[0.0, 1.0]);\n \
  \ assert.deepEqual(candidate([100.0, 49.9]),[1.0, 0.0]);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5, 0.75, 1.0]);\n  assert.deepEqual(candidate([2.0,\
  \ 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5, 0.75]);\n  assert.deepEqual(candidate([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75]);\n}\n\ntest();"
completions: ["    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max-min)/2;\n    var rescaled = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i] - min);\n\
    \    }\n    for(var i = 0; i < numbers.length; i++){\n        rescaled[i] = rescaled[i]/range;\n\
    \    }\n    return rescaled;\n}\n", "  var min_number = Math.min.apply(null, numbers);\n\
    \  var max_number = Math.max.apply(null, numbers);\n  var range = max_number -\
    \ min_number;\n  var rescaled = [];\n  for(var i = 0; i < numbers.length; i++){\n\
    \    rescaled.push(numbers[i] - min_number);\n  }\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    rescaled[i] += range * ((numbers[i] - min_number) / range);\n  }\n\
    \  return rescaled;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] - min_number);\n    }\n    new_numbers\
    \ = new_numbers.map(function(n){\n        return n / range;\n    });\n    return\
    \ new_numbers;\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n\
    \            min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    return [min_value,\
    \ max_value];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var\
    \ max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var\
    \ scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n\
    \            min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n      \
    \      min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    return [min_value,\
    \ max_value];\n}\n", "    var min_val = Math.min.apply(null, numbers);\n    var\
    \ max_val = Math.max.apply(null, numbers);\n    var range = max_val - min_val;\n\
    \    var scale = (range == 0) ? 0 : (max_val - min_val) / range;\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        else if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale + min);\n    }\n    return new_numbers;\n}\n", "    var min_value =\
    \ numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] > max){\n            max = numbers[i];\n        }\n      \
    \  if(numbers[i] < min){\n            min = numbers[i];\n        }\n    }\n  \
    \  var scale = (max - min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (max_number - min_number) / range;\n    var scaled_numbers = numbers.map(function(n){\n\
    \        return n*scale;\n    });\n    return scaled_numbers;\n}\n", "    var\
    \ min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value = numbers[i];\n\
    \        if(numbers[i] > max_value) max_value = numbers[i];\n    }\n    var scale\
    \ = (max_value - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var rescaled = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i] - min);\n\
    \    }\n    rescaled.push(range);\n    return rescaled;\n}\n", "    var min =\
    \ numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n      \
    \  }\n        if(numbers[i] < min){\n            min = numbers[i];\n        }\n\
    \    }\n    var scale = (max - min) / (numbers.length - 1);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n\
    }\n", "    var min = Math.min(numbers);\n    var max = Math.max(numbers);\n  \
    \  var range = max - min;\n    var scale = (range == 0) ? 0 : ((range == 1) ?\
    \ 1 : (range / (max - min)));\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_number = numbers[0];\n    var\
    \ max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min_number){\n            min_number = numbers[i];\n   \
    \     }\n        else if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    return rescaled;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (max_number - min_number) / range;\n    return\
    \ numbers.map(function(number){\n        return number - min_number + scale;\n\
    \    });\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var\
    \ max_number = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled_numbers = [];\n    for(var i=0; i<numbers.length; i++){\n  \
    \      rescaled_numbers.push(min_number + (numbers[i] - min_number) * range /\
    \ numbers.length);\n    }\n    return rescaled_numbers;\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max-min)/2;\n    var rescaled = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        rescaled.push(numbers[i] + range);\n    }\n \
    \   return rescaled;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min) min\
    \ = numbers[i];\n        if(numbers[i] > max) max = numbers[i];\n    }\n    var\
    \ range = (max - min);\n    for(var i = 1; i < numbers.length; i++){\n       \
    \ numbers[i] = (numbers[i] - min) / range;\n    }\n    return numbers;\n}\n",
  "    var min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var new_numbers = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ - min_number);\n    }\n    new_numbers = new_numbers.map(function(x){\n    \
    \    return x / range;\n    });\n    return new_numbers;\n}\n", "    var min =\
    \ numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min) min = numbers[i];\n        if(numbers[i]\
    \ > max) max = numbers[i];\n    }\n    var scale = (max - min) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_range = range / 2;\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range - min) / range);\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = max - min;\n    var new_min\
    \ = min - range * 0.5;\n    var new_max = max + range * 0.5;\n    return [new_min,\
    \ new_max];\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var\
    \ max_number = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        rescaled_numbers.push(numbers[i] - min_number);\n    }\n    return rescaled_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var scale\
    \ = (range == 0) ? 0 : ((range + 1.0) / 2.0);\n    var new_numbers = [];\n   \
    \ for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max-min)/2;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] + range);\n    }\n    return rescaled;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_value){\n    \
    \        max_value = numbers[i];\n        }\n        if(numbers[i] < min_value){\n\
    \            min_value = numbers[i];\n        }\n    }\n    return [min_value,\
    \ max_value];\n}\n", "  var min = Math.min(numbers[0], numbers[1]);\n  var max\
    \ = Math.max(numbers[0], numbers[1]);\n  var range = (max - min);\n  var scale\
    \ = (range == 0) ? 0 : (range / (max - min));\n  return numbers.map(function(n){\n\
    \    return Math.round(n * scale);\n  });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(min_number + (numbers[i] - min_number) / range);\n\
    \    }\n    return rescaled;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = max - min;\n\
    \    var scale = (range == 0) ? 0 : ((numbers[1] - numbers[0]) / range);\n   \
    \ var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n}\n",
  "    var min_number = numbers[0];\n    var max_number = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n   \
    \         min_number = numbers[i];\n        }\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers);\n    var max = Math.max(numbers);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : 1 / (max - min);\n    var rescaled\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]\
    \ * scale);\n    }\n    return rescaled;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min){\n            min = numbers[i];\n        }\n      \
    \  else if(numbers[i] > max){\n            max = numbers[i];\n        }\n    }\n\
    \    return [min, max];\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min) min\
    \ = numbers[i];\n        if(numbers[i] > max) max = numbers[i];\n    }\n    var\
    \ range = (max - min);\n    for(var i = 1; i < numbers.length; i++){\n       \
    \ numbers[i] = (numbers[i] - min) / range;\n    }\n    return numbers;\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_range = range / 2;\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    return [new_min, new_max];\n}\n", "    var min_number\
    \ = numbers[0];\n    var max_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (max_number + min_number);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_min = min - range * 0.5;\n    var new_max = max + range * 0.5;\n\
    \    return [new_min, new_max];\n}\n", "    var min_number = numbers[0];\n   \
    \ var max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (max_number + min_number);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n        if(numbers[i] < min){\n   \
    \         min = numbers[i];\n        }\n    }\n    var scale = (max - min) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(Math,\
    \ numbers);\n    var max_number = Math.max.apply(Math, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled_numbers = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        rescaled_numbers.push(min_number + (numbers[i]\
    \ - min_number) / range);\n    }\n    return rescaled_numbers;\n}\n", "    var\
    \ min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value = numbers[i];\n\
    \        if(numbers[i] > max_value) max_value = numbers[i];\n    }\n    return\
    \ [min_value, max_value];\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) /\
    \ range;\n    return numbers.map(function(n){\n        return Math.round((n -\
    \ min) * scale);\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : 1 / (range + 1);\n    var\
    \ scaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ scaled_numbers.push(numbers[i] * scale);\n    }\n    return scaled_numbers;\n\
    }\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n  \
    \  for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        else if(numbers[i] >\
    \ max_number){\n            max_number = numbers[i];\n        }\n    }\n    var\
    \ scale = (max_number - min_number) / (numbers.length - 1);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = max - min;\n    var scale = (range == 0) ? 0 :\
    \ (numbers[1] - numbers[0]) / range;\n    var new_numbers = [];\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i] + scale);\n\
    \    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (max_number -\
    \ min_number) / range;\n    return numbers.map(function(number){\n        return\
    \ number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var new_numbers = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i]/range);\n    }\n    return new_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min_val = Math.min.apply(null, numbers);\n    var max_val\
    \ = Math.max.apply(null, numbers);\n    var range = max_val - min_val;\n    var\
    \ new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ - min_val / range);\n    }\n    return new_numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var new_numbers = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ - min_number);\n    }\n    new_numbers = new_numbers.map(function(n){\n    \
    \    return n / range;\n    });\n    return new_numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var rescaled = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled[i] = (numbers[i]\
    \ - min_number) / range;\n    }\n    return rescaled;\n}\n", "    var min_val\
    \ = numbers[0];\n    var max_val = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_val){\n            min_val = numbers[i];\n\
    \        }\n        if(numbers[i] > max_val){\n            max_val = numbers[i];\n\
    \        }\n    }\n    var range = (max_val - min_val);\n    return function(x){\n\
    \        return (x - min_val) / range;\n    };\n}\n", "    var min_number = numbers[0];\n\
    \    var max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = numbers[0];\n    var\
    \ max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min_number){\n            min_number = numbers[i];\n   \
    \     }\n        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = numbers[0];\n    var\
    \ max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min_number){\n            min_number = numbers[i];\n   \
    \     }\n        else if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max-min)/2;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] + range);\n    }\n    return rescaled;\n}\n", "  \
    \  var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (max_number - min_number)\
    \ / range;\n    return numbers.map(function(number){\n        return number *\
    \ scale;\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n  \
    \  var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var scaled_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        scaled_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return scaled_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value) min_value = numbers[i];\n        if(numbers[i] > max_value) max_value\
    \ = numbers[i];\n    }\n    var scale = (max_value - min_value) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "  var min_number = Math.min.apply(null, numbers);\n\
    \  var max_number = Math.max.apply(null, numbers);\n  var range = max_number -\
    \ min_number;\n  var rescaled = [];\n  for(var i=0; i<numbers.length; i++){\n\
    \    rescaled.push(numbers[i] - min_number);\n  }\n  for(var i=0; i<numbers.length;\
    \ i++){\n    rescaled[i] += range * ((numbers[i] - min_number) / range);\n  }\n\
    \  return rescaled;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n        if(numbers[i] < min){\n   \
    \         min = numbers[i];\n        }\n    }\n    return [min, max];\n}\n", " \
    \   var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : 1 / (range +\
    \ 1);\n    return numbers.map(function(number){\n        return number * scale;\n\
    \    });\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min) min = numbers[i];\n\
    \        if(numbers[i] > max) max = numbers[i];\n    }\n    var scale = (max -\
    \ min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n\
    \        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min\
    \ = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var scale = (range == 0) ? 0 : (range / (max\
    \ - min));\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range + 1) / (max - min));\n    var new_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n \
    \   }\n    return new_numbers;\n}\n", "    var min = numbers[0];\n    var max\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min){\n            min = numbers[i];\n        }\n        else if(numbers[i]\
    \ > max){\n            max = numbers[i];\n        }\n    }\n    var scale = (max\
    \ - min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n\
    \        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(Math, numbers);\n    var max_number = Math.max.apply(Math,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_number = numbers[0];\n    var max_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_number){\n            min_number = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_number){\n            max_number = numbers[i];\n        }\n    }\n   \
    \ var scale = (max_number - min_number) / (numbers.length - 1);\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "  var min_number = Math.min.apply(null, numbers);\n  var max_number\
    \ = Math.max.apply(null, numbers);\n  var range = max_number - min_number;\n \
    \ var new_numbers = [];\n  for(var i=0; i<numbers.length; i++){\n    new_numbers.push(min_number\
    \ + (numbers[i] - min_number) / range);\n  }\n  return new_numbers;\n}\n", " \
    \   var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : 1 / (range + 1);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range / min) * 0.5) + 0.5;\n    var new_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n \
    \   }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers);\n    var\
    \ max = Math.max(numbers);\n    var range = max - min;\n    var rescaled = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]/range);\n\
    \    }\n    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var\
    \ max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n    \
    \    if(numbers[i] < min_value){\n            min_value = numbers[i];\n      \
    \  }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = numbers[0];\n    var\
    \ max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min_number){\n            min_number = numbers[i];\n   \
    \     }\n        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) / range;\n    var\
    \ new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ + scale);\n    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    return numbers.map(function(number){\n     \
    \   return number - min_number;\n    }).map(function(number){\n        return\
    \ range * number / max_number;\n    });\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] > max_value){\n            max_value = numbers[i];\n  \
    \      }\n        if(numbers[i] < min_value){\n            min_value = numbers[i];\n\
    \        }\n    }\n    var range = (max_value - min_value);\n    return function(x){\n\
    \        return (x - min_value) / range;\n    };\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1) / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n  \
    \  for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = max - min;\n    var scale = (range == 0) ? 0 :\
    \ ((range / max) - 1);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : 1 / (range + 1);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_range = range / 2;\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers);\n\
    \    var max = Math.max(numbers);\n    var range = (max - min);\n    var rescaled\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(min\
    \ + (numbers[i] - min) / range);\n    }\n    return rescaled;\n}\n", "    var\
    \ min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : 1 / (range + 1);\n    return numbers.map(function(number){\n   \
    \     return number * scale;\n    });\n}\n", "    var min = numbers[0];\n    var\
    \ max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ > max){\n            max = numbers[i];\n        }\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n    }\n    var scale = (max - min)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range - min) / range);\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (max_number - min_number) / range;\n    return\
    \ numbers.map(function(number){\n        return number - min_number * scale;\n\
    \    });\n}\n", "    var min = Math.min(numbers);\n    var max = Math.max(numbers);\n\
    \    var range = max - min;\n    var new_range = range / 2;\n    var new_min =\
    \ min - new_range;\n    var new_max = max + new_range;\n    var new_numbers =\
    \ [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(new_min\
    \ + (new_numbers[i] - min) * new_range);\n    }\n    return new_numbers;\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value) min_value = numbers[i];\n        if(numbers[i] > max_value) max_value\
    \ = numbers[i];\n    }\n    var scale = (max_value - min_value) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] - min_number);\n\
    \    }\n    new_numbers = new_numbers.map(function(x){\n        return x / range;\n\
    \    });\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max =\
    \ Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var scale\
    \ = (range == 0) ? 0 : ((range + 1) / (max - min));\n    var new_numbers = [];\n\
    \    new_numbers[0] = numbers[0] - min * scale;\n    new_numbers[1] = numbers[1]\
    \ - min * scale;\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max-min)/2;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value) min_value = numbers[i];\n        if(numbers[i] > max_value) max_value\
    \ = numbers[i];\n    }\n    var scale = (max_value - min_value) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value) min_value = numbers[i];\n        if(numbers[i] > max_value) max_value\
    \ = numbers[i];\n    }\n    var scale = (max_value - min_value) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        else if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_min = min - range * 0.5;\n    var new_max = max + range * 0.5;\n\
    \    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_range = range / 2;\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) /\
    \ range;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range == 1) ? 1 : (range / (max - min)));\n    var new_numbers = [];\n \
    \   for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i]/range);\n    }\n\
    \    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max-min)/2;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] + range);\n    }\n    return rescaled;\n}\n", "  \
    \  var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range / min) * 0.5 + 0.5);\n    return numbers.map(function(n){\n      \
    \  return Math.round(n * scale);\n    });\n}\n", "    var min_number = numbers[0];\n\
    \    var max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(1);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled[i] += range *\
    \ (numbers[i] - min_number);\n    }\n    return rescaled;\n}\n", "    var min\
    \ = Math.min(numbers);\n    var max = Math.max(numbers);\n    var range = max\
    \ - min;\n    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) /\
    \ range;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0])\
    \ / range;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = max - min;\n    var new_range = range / 2;\n \
    \   var new_min = min - new_range;\n    var new_max = max + new_range;\n    return\
    \ [new_min, new_max];\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n        if(numbers[i] < min){\n   \
    \         min = numbers[i];\n        }\n    }\n    var scale = (max - min) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scaled_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        scaled_numbers.push(min_number + (numbers[i]\
    \ - min_number) / range);\n    }\n    return scaled_numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n       \
    \ return number * scale;\n    });\n}\n", "    var min_val = Math.min(numbers[0],\
    \ numbers[1]);\n    var max_val = Math.max(numbers[0], numbers[1]);\n    var scale\
    \ = (max_val - min_val) / (numbers.length - 1);\n    var new_numbers = [];\n \
    \   for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(min_val\
    \ + scale * numbers[i]);\n    }\n    return new_numbers;\n}\n", "    var min_value\
    \ = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var rescaled_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        rescaled_numbers.push(min_number\
    \ + (numbers[i] - min_number) / range);\n    }\n    return rescaled_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (range / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (numbers[1] - numbers[0]) / range;\n    return numbers.map(function(x){ return\
    \ (x - min) * scale; });\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n        else if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n    }\n    var scale = (max - min)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var new_min = min - range * 0.5;\n    var new_max = max +\
    \ range * 0.5;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var new_numbers = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i]/range);\n    }\n    return new_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n    \
    \        min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (numbers[1] - numbers[0]) / range;\n    var new_numbers = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i] + scale);\n\
    \    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n    var\
    \ max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n    \
    \    if(numbers[i] < min_value){\n            min_value = numbers[i];\n      \
    \  }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min) min\
    \ = numbers[i];\n        if(numbers[i] > max) max = numbers[i];\n    }\n    var\
    \ scale = (max - min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var range = (max_value - min_value);\n    var new_numbers = [];\n\
    \    for(var i = 0; i < (numbers.length - 1); i++){\n        new_numbers.push(numbers[i]\
    \ / range);\n    }\n    new_numbers.push(1);\n    return new_numbers;\n}\n", " \
    \   var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var\
    \ max_number = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled_numbers = [];\n    for(var i=0; i<numbers.length; i++){\n  \
    \      rescaled_numbers.push(numbers[i] - min_number);\n    }\n    rescaled_numbers\
    \ = rescaled_numbers.map(function(x){\n        return x / range;\n    });\n  \
    \  return rescaled_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) / range;\n    var\
    \ new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ + scale);\n    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min_value\
    \ = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var new_min = min - range * 0.5;\n    var new_max = max\
    \ + range * 0.5;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers);\n\
    \    var max = Math.max(numbers);\n    var range = max - min;\n    var scale =\
    \ (range == 0) ? 0 : 1 / (range + 1);\n    return numbers.map(function(num){\n\
    \        return num * scale;\n    });\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min_value\
    \ = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_value){\n            min_value = numbers[i];\n\
    \        }\n        else if(numbers[i] > max_value){\n            max_value =\
    \ numbers[i];\n        }\n    }\n    var range = (max_value - min_value);\n  \
    \  var new_range = (numbers.length - 1);\n    var new_min_value = min_value -\
    \ (range / new_range);\n    var new_max_value = max_value + (range / new_range);\n\
    \    return numbers.map(function(number){\n        return number - new_min_value;\n\
    \    });\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n\
    \            min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n        else if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n    }\n    var range = (max - min);\n\
    \    return function(x){\n        return (x - min) / range;\n    };\n}\n", " \
    \   var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n    \
    \        min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    return numbers.map(function(number){\n\
    \        return (number - min_number) / range;\n    });\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var rescaled = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        rescaled.push(numbers[i] - min);\n    }\n   \
    \ for(var i = 0; i < numbers.length; i++){\n        rescaled[i] = rescaled[i]\
    \ / range;\n    }\n    return rescaled;\n}\n", "  var min_number = numbers[0];\n\
    \  var max_number = numbers[0];\n  for(var i = 1; i < numbers.length; i++){\n\
    \    if(numbers[i] < min_number){\n      min_number = numbers[i];\n    }\n   \
    \ if(numbers[i] > max_number){\n      max_number = numbers[i];\n    }\n  }\n \
    \ var scale = (max_number - min_number) / (numbers.length - 1);\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    numbers[i] *= scale;\n  }\n  return numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_range = range / 2;\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    return [new_min, new_max];\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var new_numbers = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ - min_number);\n    }\n    new_numbers = new_numbers.map(function(x){\n    \
    \    return x / range;\n    });\n    return new_numbers;\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var scale = (range == 0) ? 0 : ((range == 1)\
    \ ? 1 : (range / (max - min)));\n    var new_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n \
    \   }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(min_number + (numbers[i] -\
    \ min_number) / range);\n    }\n    return new_numbers;\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var scale = (range == 0) ? 0 : (range / (max\
    \ - min));\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    return [min_value, max_value];\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    return [min_value, max_value];\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] > max){\n            max = numbers[i];\n        }\n      \
    \  if(numbers[i] < min){\n            min = numbers[i];\n        }\n    }\n  \
    \  return [min, max];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_min = min - range * 0.5;\n    var new_max = max + range * 0.5;\n\
    \    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    new_numbers[0] = numbers[0] - min * scale;\n    new_numbers[1] =\
    \ numbers[1] - min * scale;\n    return new_numbers;\n}\n", "    var min_number\
    \ = numbers[0];\n    var max_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n        else if(numbers[i] > max_number){\n            max_number\
    \ = numbers[i];\n        }\n    }\n    var scale = (max_number - min_number) /\
    \ (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var new_min = min - range * 0.5;\n    var new_max = max +\
    \ range * 0.5;\n    return [new_min, new_max];\n}\n", "    var min_number = numbers[0];\n\
    \    var max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n        if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var scale = (max_number - min_number) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] - min_number);\n\
    \    }\n    var new_min_number = new_numbers[0];\n    var new_max_number = new_numbers[new_numbers.length\
    \ - 1];\n    var new_range = new_max_number - new_min_number;\n    var new_range_length\
    \ = new_range / new_min_number;\n    var new_min_number_length = new_min_number\
    \ / new_range_length;\n    var new_max_number_length = new_max_number / new_range_length;\n\
    \    var new_min_number_unit = new_min_number_length / range;\n    var new_max_number_unit\
    \ = new_max_number_length / range;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        new_numbers[i] = (new_numbers[i] - new_min_number) * new_range_length\
    \ + new_min_number_unit;\n    }\n    return new_numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var rescaled = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]\
    \ - min_number);\n    }\n    rescaled.push(range);\n    return rescaled;\n}\n",
  "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n      \
    \  }\n        if(numbers[i] < min){\n            min = numbers[i];\n        }\n\
    \    }\n    return [min, max];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range - min) / range);\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var new_min = min - range *\
    \ 0.5;\n    var new_max = max + range * 0.5;\n    return [new_min, new_max];\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var new_range = range / 2;\n\
    \    var new_min = min - new_range;\n    var new_max = max + new_range;\n    return\
    \ [new_min, new_max];\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1) / (max - min));\n\
    \    var new_numbers = [];\n    new_numbers[0] = numbers[0] - min * scale;\n \
    \   new_numbers[1] = numbers[1] - min * scale;\n    return new_numbers;\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (numbers[1] - numbers[0]) / range;\n    var scaled_numbers = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        scaled_numbers.push(numbers[i] + scale);\n\
    \    }\n    return scaled_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(min_number + (numbers[i] - min_number) / range);\n\
    \    }\n    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var\
    \ max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n    \
    \    if(numbers[i] < min_value){\n            min_value = numbers[i];\n      \
    \  }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    return [min_value, max_value];\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n       \
    \ return number * scale;\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = max - min;\n\
    \    var scale = (range == 0) ? 0 : 1 / (range + 1);\n    var new_numbers = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (range / min_number);\n    return numbers.map(function(x){\n\
    \        return (x-min_number) * scale;\n    });\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var new_min = min - range * 0.5;\n    var new_max = max\
    \ + range * 0.5;\n    var new_numbers = [new_min, new_max];\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(min_number + (numbers[i] - min_number) / range);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value) min_value = numbers[i];\n        if(numbers[i] > max_value) max_value\
    \ = numbers[i];\n    }\n    var scale = (max_value - min_value) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    return rescaled;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

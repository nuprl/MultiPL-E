language: js
name: HumanEval_58_common
results:
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = 0, // common\
    \ length\n      lp = 0, // common prefix\n      ln = 0, // common suffix\n   \
    \   i = 0, // current index\n      j = 0;\n\n  while(i<l1.length && j<l2.length){\n\
    \    if(l1[i]===l2[j]){\n      lc++;\n      i++;\n      j++;\n    }else{\n   \
    \   if(lc>lp){\n        lp = lc;\n      }\n      if(lc>ln){\n        ln = lc;\n\
    \      }\n      lc = 0;\n    }\n  }\n\n  if(lc>lp){\n    lp = lc;\n  }\n  if(lc>ln){\n\
    \    ln = lc;\n  }\n\n  return [lp, ln];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var\
    \ j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                i++;\n            }else{\n    \
    \            j++;\n            }\n        }\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpo1dgz81i.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo1dgz81i.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ lLen = l1.length;\n  var l2 = l2.slice(0);\n  while(lLen--){\n    if(l2.indexOf(l1[lLen])\
    \ === -1) out.push(l1[lLen]);\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  34,\n\
    \  3,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmper8wsrx9.js:21:10)\n    at Object.<anonymous> (/tmp/tmper8wsrx9.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 34, 3,\
    \ 4 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ i = 0;\n  var j = 0;\n  while (i < l1.length && j < l2.length) {\n    if (l1[i]\
    \ === l2[j]) {\n      out.push(l1[i]);\n      i++;\n      j++;\n    } else if\
    \ (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpft48fr_w.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpft48fr_w.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i]\
    \ === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmphxgcx5f0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphxgcx5f0.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7lrj80vo.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7lrj80vo.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8x3p5lgh.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8x3p5lgh.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var\
    \ m = l2.length;\n    while(i<n && j<m){\n        if(l1[i]===l2[j]){\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                i++;\n            }else{\n    \
    \            j++;\n            }\n        }\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa2cdrkxk.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa2cdrkxk.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n      }\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpo5pkk44a.js:23:10)\n    at Object.<anonymous> (/tmp/tmpo5pkk44a.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var len1\
    \ = l1.length;\n    var len2 = l2.length;\n    while(i < len1 && j < len2){\n\
    \        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else{\n            if(l1[i] < l2[j]){\n          \
    \      i++;\n            }else{\n                j++;\n            }\n       \
    \ }\n    }\n    while(i < len1){\n        result.push(l1[i]);\n        i++;\n\
    \    }\n    while(j < len2){\n        result.push(l2[j]);\n        j++;\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_els6653.js:43:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_els6653.js:49:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653, 121\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    while\
    \ (lLen > i){\n        if (l1.charAt(i) !== l2.charAt(i)){\n            return\
    \ false;\n        }\n        i++;\n    }\n    while (i < lLen){\n        out.push(l1.charAt(i));\n\
    \        i++;\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmp08xw3zqm.js:12\n        if (l1.charAt(i) !== l2.charAt(i)){\n \
    \              ^\n\nTypeError: l1.charAt is not a function\n    at common (/tmp/tmp08xw3zqm.js:12:16)\n\
    \    at test (/tmp/tmp08xw3zqm.js:29:20)\n    at Object.<anonymous> (/tmp/tmp08xw3zqm.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var ret = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        ret.push(l1[i]);\n      }\n    }\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpz4spghcj.js:23:10)\n    at Object.<anonymous> (/tmp/tmpz4spghcj.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    while(i<l1.length && i<l2.length){\n        if(l1[i]===l2[i]){\n\
    \            result.push(l1[i]);\n            i++;\n        }\n        else if(l1[i]<l2[i]){\n\
    \            result.push(l1[i]);\n            i++;\n        }\n        else{\n\
    \            result.push(l2[i]);\n            i++;\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  1,\n  5,\n  9,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n\
    \  653\n]\n    at test (/tmp/tmpwqiqgusm.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwqiqgusm.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 1, 5,\n    9, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn68n8kk.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfn68n8kk.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] ===\
    \ l2[i]){\n      out.push(l1[i]);\n    }\n  }\n  return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmph2g1146b.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmph2g1146b.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length;\
    \ j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n \
    \       break;\n      }\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpmt7nulh4.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmt7nulh4.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8x3p5lgh.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8x3p5lgh.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8x3p5lgh.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8x3p5lgh.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ lLen = l1.length;\n  var l2 = l2.slice(0);\n  while(lLen--){\n    if(l2.indexOf(l1[lLen])\
    \ === -1) out.push(l1[lLen]);\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  34,\n\
    \  3,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmper8wsrx9.js:21:10)\n    at Object.<anonymous> (/tmp/tmper8wsrx9.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 34, 3,\
    \ 4 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    while(i<l1.length && i<l2.length){\n        if(l1[i]===l2[i]){\n\
    \            result.push(l1[i]);\n            i++;\n        }\n        else{\n\
    \            break;\n        }\n    }\n    return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp96l9tsvd.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp96l9tsvd.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = new Map();\n\
    \  l1.forEach(function(v){lc.set(v, 1);});\n  l2.forEach(function(v){lc.set(v,\
    \ 1);});\n  return Array.from(lc.keys()).sort().filter(function(v, i, a){\n  \
    \  return a.indexOf(v) === i;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  121,\n\
    \  2,\n  3,\n  34,\n  4,\n  5,\n  653,\n  7,\n  9\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp1kam9fzy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1kam9fzy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 121,   2, 3, 34,\n    4,   5, 653, 7,  9\n  ],\n  expected: [ 1, 5, 653 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var lhash = {};\n    var i, j, k;\n    for(i = 0; i <\
    \ l1.length; i++){\n        hash[l1[i]] = 1;\n        lhash[l1[i]] = 1;\n    }\n\
    \    for(i = 0; i < l2.length; i++){\n        hash[l2[i]] = 1;\n        lhash[l2[i]]\
    \ = 1;\n    }\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length;\
    \ j++){\n            if(hash[l1[i]] === hash[l2[j]]){\n                out.push(l1[i]);\n\
    \            }\n        }\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  1,\n  1,\n  1,\n  1,\n  1,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  3,\n\
    \  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  34,\n  34,\n  34,\n  34,\n  34,\n  34,\n\
    \  34,\n  653,\n  653,\n  653,\n  653,\n  653,\n  653,\n  653,\n  2,\n  2,\n \
    \ 2,\n  2,\n  2,\n  2,\n  2,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpppbcmavi.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpppbcmavi.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \   1,  1,  1,  1,  1,   1,   4,   4,   4,   4,\n      4,   4,  4,  3,  3,  3,\
    \   3,   3,   3,   3,  34,\n     34,  34, 34, 34, 34, 34, 653, 653, 653, 653,\
    \ 653,\n    653, 653,  2,  2,  2,  2,   2,   2,   2,   5,   5,\n      5,   5,\
    \  5,  5,  5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j <\
    \ l2.length; j++){\n            if(l1[i] === l2[j]){\n                out.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return out;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpftx19kpi.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpftx19kpi.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var lLen = l1.length;\n    var l1i = -1;\n    var l2i = -1;\n    var l1p\
    \ = -1;\n    var l2p = -1;\n    var l1f = false;\n    var l2f = false;\n\n   \
    \ while (l1i < lLen){\n        if (l2f || l2i > lLen){\n            l2f = false;\n\
    \            l2i = lLen;\n        }\n        if (l1f || l1i > lLen){\n       \
    \     l1f = false;\n            l1i = lLen;\n        }\n        if (l2i >= l1i){\n\
    \            out.push(l2[l2i]);\n            l2i++;\n        }else{\n        \
    \    out.push(l1[l1i]);\n            l1i++;\n        }\n    }\n\n    return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpmz7degm7.js:26\n            out.push(l2[l2i]);\n              \
    \  ^\n\nRangeError: Invalid array length\n    at Array.push (<anonymous>)\n  \
    \  at common (/tmp/tmpmz7degm7.js:26:17)\n    at test (/tmp/tmpmz7degm7.js:42:20)\n\
    \    at Object.<anonymous> (/tmp/tmpmz7degm7.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003956
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var\
    \ j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        }\n   \
    \     else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n    \
    \        j++;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp1qg6svrz.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1qg6svrz.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var lLen = l1.length;\n    var l1Len = l1.length;\n \
    \   var l2Len = l2.length;\n    var i = 0;\n    while(l1Len > 0 && l2Len > 0){\n\
    \        if(l1[i] === l2[i]){\n            out.push(l1[i]);\n            l1Len--;\n\
    \            l2Len--;\n        }else{\n            if(hash[l1[i]] === undefined){\n\
    \                hash[l1[i]] = 1;\n                out.push(l1[i]);\n        \
    \        l1Len--;\n            }else{\n                if(hash[l1[i]] > hash[l2[i]]){\n\
    \                    out.push(l2[i]);\n                    l2Len--;\n        \
    \        }else{\n                    hash[l1[i]]++;\n                }\n     \
    \       }\n        }\n        i++;\n    }\n    return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmp0h0m5ogd.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0h0m5ogd.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ hash = {};\n  for(var i=0; i<l1.length; i++){\n    var a = l1[i];\n    hash[a]\
    \ = hash[a] || [];\n    hash[a].push(i);\n  }\n  for(var i=0; i<l2.length; i++){\n\
    \    var a = l2[i];\n    var ai = hash[a];\n    for(var j=0; j<ai.length; j++){\n\
    \      var b = ai[j];\n      if(b in hash){\n        out.push(a);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmp5s96v_ci.js:17\n    for(var j=0; j<ai.length; j++){\n         \
    \             ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n\
    \    at common (/tmp/tmp5s96v_ci.js:17:23)\n    at test (/tmp/tmp5s96v_ci.js:33:20)\n\
    \    at Object.<anonymous> (/tmp/tmp5s96v_ci.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = 0, // common\
    \ length\n      lp = 0, // common prefix\n      ln = l1.length, // length of first\
    \ list\n      lm = l2.length, // length of second list\n      i = 0, // counter\
    \ for first list\n      j = 0;\n\n  // check common length\n  if(ln >= lm)\n \
    \   return [];\n\n  // get common prefix\n  while(lp < ln && l1[lp] === l2[lp])\n\
    \    lp++;\n\n  // get common length\n  while(lp < lm) {\n    while(l1[lp] ===\
    \ l2[j++])\n      lp++;\n    if(lp < lm)\n      j = 0;\n  }\n\n  // return merged\
    \ list\n  return l1.slice(lp, l1 + lp + 1).filter(function(elem, pos, self) {\n\
    \    return self.indexOf(elem) == pos;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpqjrk07b_.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjrk07b_.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp3opdgkni.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3opdgkni.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmplg7xvhel.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmplg7xvhel.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while (i < l1 || j < l2) {\n        if (l1 && l1[i] === l2[j])\
    \ {\n            result.push(l1[i]);\n            i++;\n            j++;\n   \
    \     } else if (l2 && l2[j] === l1[i]) {\n            result.push(l2[j]);\n \
    \           j++;\n        } else {\n            k++;\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpgt2uot7e.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgt2uot7e.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    while\
    \ (lLen > i){\n        if (l1.charAt(i) !== l2.charAt(i)){\n            return\
    \ false;\n        }\n        i++;\n    }\n    while (i < lLen){\n        if (l1.charAt(i)\
    \ !== l2.charAt(i)){\n            return false;\n        }\n        i++;\n   \
    \ }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmp4e4lz866.js:12\n        if (l1.charAt(i) !== l2.charAt(i)){\n \
    \              ^\n\nTypeError: l1.charAt is not a function\n    at common (/tmp/tmp4e4lz866.js:12:16)\n\
    \    at test (/tmp/tmp4e4lz866.js:31:20)\n    at Object.<anonymous> (/tmp/tmp4e4lz866.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n \
    \   var rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx]\
    \ === l2[rIdx]){\n            result.push(l1[lIdx]);\n            lIdx += 1;\n\
    \            rIdx += 1;\n        }else{\n            lIdx += 1;\n        }\n \
    \   }\n    return result.concat(l1.slice(rIdx)).concat(l2.slice(lIdx));\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmpw8ea4d8y.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw8ea4d8y.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      5,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var i = 0;\n  var j = 0;\n  while (i < l1.length && j < l2.length){\n    if\
    \ (l1[i] === l2[j]){\n      result.push(l1[i]);\n      i++;\n      j++;\n    }\
    \ else if (l1[i] > l2[j]){\n      i++;\n    } else {\n      j++;\n    }\n  }\n\
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppjiqhhpq.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmppjiqhhpq.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while (i < l1 || j < l2) {\n        if (l1 && l1[i] === l2[j])\
    \ {\n            result.push(l1[i]);\n            i++;\n            j++;\n   \
    \     } else if (l2 && l2[j] === l1[i]) {\n            result.push(l2[j]);\n \
    \           j++;\n        } else {\n            k++;\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpgt2uot7e.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgt2uot7e.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [], i = 0,\
    \ j = 0;\n  while(l1.length > i){\n    if(l2.length > j){\n      if(l1[i] ===\
    \ l2[j]){\n        l.push(l1[i]);\n        l1.splice(i,1);\n        l2.splice(j,1);\n\
    \      }\n      else{\n        j++;\n      }\n    }\n    else{\n      i++;\n \
    \   }\n  }\n  return l;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpybkbfhit.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpybkbfhit.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var l1, l2, i;\n\
    \    for(i = 0; i < lLen1; i++){\n        l1 = l1[i];\n        for(j = 0; j <\
    \ lLen2; j++){\n            l2 = l2[j];\n            if(l1 === l2){\n        \
    \        result.push(l1);\n                break;\n            }\n        }\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmpe_q3vlvs.js:14\n            l2 = l2[j];\n                   ^\n\
    \nTypeError: Cannot read properties of undefined (reading '2')\n    at common\
    \ (/tmp/tmpe_q3vlvs.js:14:20)\n    at test (/tmp/tmpe_q3vlvs.js:29:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpe_q3vlvs.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = 0, // common\
    \ length\n      lp = 0, // last common length\n      i = 0;\n  while(lc < l1 &&\
    \ lp < l2){\n    if(l1[i] === l2[lp]){\n      lc ++;\n      lp ++;\n    }else{\n\
    \      lc ++;\n    }\n    i ++;\n  }\n  return lc > l1 ? lc : l1;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmpcc8setmm.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcc8setmm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n \
    \   var rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx]\
    \ === l2[rIdx]){\n            result.push(l1[lIdx]);\n            lIdx += 1;\n\
    \            rIdx += 1;\n        }else{\n            if (l1[lIdx] < l2[rIdx]){\n\
    \                lIdx += 1;\n            }else{\n                rIdx += 1;\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpi7qmigqi.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi7qmigqi.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl9yag21a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9yag21a.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ i = 0;\n  while(l1.length > i){\n    if(l2.indexOf(l1[i]) !== -1){\n      out.push(l1[i]);\n\
    \    }\n    i++;\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpxmaadvrb.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxmaadvrb.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n \
    \   var rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx]\
    \ === l2[rIdx]){\n            result.push(l1[lIdx]);\n            lIdx++;\n  \
    \          rIdx++;\n        }\n        else if (l1[lIdx] < l2[rIdx]){\n      \
    \      lIdx++;\n        }\n        else {\n            rIdx++;\n        }\n  \
    \  }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpi7vb_u5d.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi7vb_u5d.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpipxre8au.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpipxre8au.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var\
    \ m = l2.length;\n    while (i < n && j < m) {\n        if (l1[i] === l2[j]) {\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n          \
    \  j++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa2zxth2v.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa2zxth2v.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjehz4x7q.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjehz4x7q.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j <\
    \ l2.length; j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp6p21lixy.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6p21lixy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp3opdgkni.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3opdgkni.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_i35ggbi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_i35ggbi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var ret = [];\n\
    \    var i, len;\n    for(i = 0, len = Math.min(l1.length, l2.length); i < len;\
    \ i++){\n        if(l1[i] === l2[i]){\n            ret.push(l1[i]);\n        }\n\
    \    }\n    return ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp33_p0sec.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp33_p0sec.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var l1 = l1 || [];\n    var l2 = l2 || [];\n    var i\
    \ = 0, j = 0;\n    var len = Math.min(l1.length, l2.length);\n    while (i < len\
    \ && j < len){\n        if(hash[l1[i]] === hash[l2[j]]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else if(hash[l1[i]] > hash[l2[j]]){\n\
    \            j++;\n        }else{\n            i++;\n        }\n    }\n    return\
    \ out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n \
    \ 5,\n  653\n]\n    at test (/tmp/tmpiyuxpk62.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiyuxpk62.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34,\n    653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var l1 = l1 || [];\n    var l2 = l2 || [];\n    var i\
    \ = 0, j = 0;\n    var len = Math.min(l1.length, l2.length);\n    for(; i < len;\
    \ i++){\n        if(hash[l1[i]] === undefined){\n            hash[l1[i]] = 1;\n\
    \            out.push(l1[i]);\n        }\n    }\n    for(; j < len; j++){\n  \
    \      if(hash[l2[j]] === undefined){\n            hash[l2[j]] = 1;\n        \
    \    out.push(l2[j]);\n        }\n    }\n    return out;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  9,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp3s859041.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3s859041.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3, 34, 653,\n    2, 5, 7,  9, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [], i = 0,\
    \ j = 0;\n  while(l1.length > i){\n    l.push(l1[i]);\n    i++;\n  }\n  while(l2.length\
    \ > j){\n    l.push(l2[j]);\n    j++;\n  }\n  return l;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  5,\n  7,\n  1,\n  5,\n  9,\n  653,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdvpo4orx.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdvpo4orx.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \   4, 3, 34, 653, 2,\n      5,   5, 7,  1,   5, 9,\n    653, 121\n  ],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = Math.min(l1.length,\
    \ l2.length);\n    while(i<n && j<n){\n        if(l1[i]===l2[j]){\n          \
    \  out.push(l1[i]);\n            i++;\n            j++;\n        }else{\n    \
    \        if(l1[i]<l2[j]){\n                i++;\n            }else{\n        \
    \        j++;\n            }\n        }\n    }\n    return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp0ps6elfa.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0ps6elfa.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while(i<l1 || j<l2){\n        if(l1[i] === l2[j]){\n      \
    \      result.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i] < l2[j]){\n            i++;\n        }else{\n            j++;\n   \
    \     }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpyqzqkf4x.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyqzqkf4x.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var l1Len = l1.length;\n\
    \    var i = 0;\n    while (l1Len > 0 && l2Len > 0){\n        if (l1[l1Len - 1]\
    \ === l2[0]){\n            l1.pop();\n            l2.shift();\n            l1Len--;\n\
    \            l2Len--;\n        }\n        else if (l1[l1Len - 1] < l2[0]){\n \
    \           result.push(l1[l1Len - 1]);\n            l1.pop();\n            l1Len--;\n\
    \        }\n        else{\n            result.push(l2[0]);\n            l2.shift();\n\
    \            l2Len--;\n        }\n    }\n    while (l1Len > 0){\n        result.push(l1[l1Len\
    \ - 1]);\n        l1.pop();\n        l1Len--;\n    }\n    while (l2Len > 0){\n\
    \        result.push(l2[0]);\n        l2.shift();\n        l2Len--;\n    }\n \
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp2y16nlca.js:12\n    while (l1Len > 0 && l2Len > 0){\n         \
    \               ^\n\nReferenceError: l2Len is not defined\n    at common (/tmp/tmp2y16nlca.js:12:25)\n\
    \    at test (/tmp/tmp2y16nlca.js:48:20)\n    at Object.<anonymous> (/tmp/tmp2y16nlca.js:54:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var l1 = l1 || [];\n  var l2 = l2 || [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpr82gkl97.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr82gkl97.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i]\
    \ === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmphxgcx5f0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphxgcx5f0.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var ret = [];\n\
    \    var l1 = l1 || [];\n    var l2 = l2 || [];\n    var i = 0, j = 0;\n    while(l1.length\
    \ > 0 && l2.length > 0){\n        if(l1[0] === l2[0]){\n            ret.push(l1[0]);\n\
    \            l1.shift();\n            l2.shift();\n        }else if(l1[0] < l2[0]){\n\
    \            l1.shift();\n        }else{\n            l2.shift();\n        }\n\
    \    }\n    return ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpb51tz_0f.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb51tz_0f.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while (i<l1.length && j<l2.length){\n\
    \        if (l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if (l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else {\n            j++;\n        }\n    }\n    return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpt037rnrr.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt037rnrr.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var\
    \ j = 0;\n    while( i < lLen1 && j < lLen2){\n        if( l1[i] === l2[j]){\n\
    \            out.push( l1[i] );\n            i++;\n            j++;\n        }\n\
    \        else{\n            i++;\n        }\n    }\n    while( i < lLen1){\n \
    \       out.push( l1[i] );\n        i++;\n    }\n    while( j < lLen2){\n    \
    \    out.push( l2[j] );\n        j++;\n    }\n    return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  7,\n\
    \  1,\n  5,\n  9,\n  653,\n  121\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  5,\n  653\n]\n    at test (/tmp/tmpcevxj25q.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcevxj25q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \   7,   1, 5,\n    9, 653, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var llen = l1.length;\n    var llen2 = l2.length;\n \
    \   var i = 0;\n    var j = 0;\n    while( i < llen && j < llen2 ){\n        if(\
    \ l1[i] === l2[j] ){\n            out.push( l1[i] );\n            i++;\n     \
    \       j++;\n        }else{\n            if( !hash[l1[i]] ){\n              \
    \  hash[l1[i]] = 1;\n                out.push( l1[i] );\n            }\n     \
    \       if( !hash[l2[j]] ){\n                hash[l2[j]] = 1;\n              \
    \  out.push( l2[j] );\n            }\n            i++;\n            j++;\n   \
    \     }\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  4,\n  7,\n  3,\n  34,\n  653,\n  9,\n  2,\n  121\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmptlufajnf.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptlufajnf.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n     1,\
    \   5, 4, 7,   3,\n    34, 653, 9, 2, 121\n  ],\n  expected: [ 1, 5, 653 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8x3p5lgh.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8x3p5lgh.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] == l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpea1ixp6h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpea1ixp6h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i]\
    \ === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmphxgcx5f0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphxgcx5f0.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_i35ggbi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_i35ggbi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var lLen = l1.length;\n    var l1i = -1;\n    var l2i\
    \ = -1;\n    var l2Len = l2.length;\n    var l2Index = -1;\n    while(l1i< lLen\
    \ && l2i< l2Len){\n        if(l1[l1i] == l2[l2i] && !hash[l1[l1i]]) {\n      \
    \      out.push(l1[l1i]);\n            hash[l1[l1i]] = true;\n            l1i++;\n\
    \            l2i++;\n        } else if(l1[l1i] < l2[l2i]) {\n            l1i++;\n\
    \        } else {\n            l2i++;\n        }\n    }\n    return out;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test\
    \ (/tmp/tmpn2e9r1ph.js:34:10)\n    at Object.<anonymous> (/tmp/tmpn2e9r1ph.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfn68n8kk.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfn68n8kk.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l1Index = 0;\n    var l2Index = 0;\n    while\
    \ (l1Index < lLen) {\n        while (l2Index < lLen && l1[l1Index] === l2[l2Index])\
    \ {\n            result.push(l1[l1Index++]);\n            l2Index++;\n       \
    \ }\n        if (l2Index >= lLen) {\n            result.push(l1[l1Index++]);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  while(lLen1--){\n    while(lLen2--){\n\
    \      if(l1[lLen1] == l2[lLen2]){\n        result.push(l1[lLen1]);\n        lLen1--;\n\
    \        lLen2--;\n      }\n    }\n  }\n  return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_i35ggbi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_i35ggbi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=l1.length,\
    \ l2=l2.length, a=0, b=0, c;\n  for(i=0; i<l; i++){\n    a = l1[i];\n    for(j=0;\
    \ j<l2; j++){\n      b = l2[j];\n      if(a===b){\n        c = i;\n        break;\n\
    \      }\n    }\n    if(c!==i){\n      l2.splice(c, 1);\n    }\n  }\n  return\
    \ l2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5],\
    \ [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3,\
    \ 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2,\
    \ 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp96bby_20.js:18\n      l2.splice(c, 1);\n         ^\n\nTypeError:\
    \ l2.splice is not a function\n    at common (/tmp/tmp96bby_20.js:18:10)\n   \
    \ at test (/tmp/tmp96bby_20.js:29:20)\n    at Object.<anonymous> (/tmp/tmp96bby_20.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [], i, j,\
    \ k;\n  for(i = 0; i < l1.length; i++){\n    for(j = 0; j < l2.length; j++){\n\
    \      k = l1.indexOf(l2[j]);\n      if(k != -1){\n        l.push(l1[i]);\n  \
    \      l1.splice(i, 1);\n        i--;\n      }\n    }\n  }\n  return l;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  undefined,\n\
    \  undefined\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpbm4z_7zo.js:26:10)\n    at Object.<anonymous> (/tmp/tmpbm4z_7zo.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, undefined,\
    \ undefined ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var llen = l1.length;\n    var llen2 = l2.length;\n \
    \   var i = 0;\n    var j = 0;\n    while( i < llen && j < llen2 ){\n        if(\
    \ l1[i] === l2[j] ){\n            out.push( l1[i] );\n            i++;\n     \
    \       j++;\n        }\n        else if(hash[l1[i]] === hash[l2[j]]) {\n    \
    \        out.push( l1[i] );\n            i++;\n        }\n        else{\n    \
    \        hash[l1[i]] = hash[l2[j]] = 1;\n            out.push( l2[j] );\n    \
    \        j++;\n        }\n    }\n    while( i < llen ){\n        out.push( l1[i]\
    \ );\n        i++;\n    }\n    while( j < llen2 ){\n        out.push( l2[j] );\n\
    \        j++;\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  34,\n  653,\n  2,\n  5,\n  7,\n  1,\n  5,\n  9,\n  653,\n  121\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp56qmmvjt.js:45:10)\n\
    \    at Object.<anonymous> (/tmp/tmp56qmmvjt.js:51:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4, 3, 34, 653,   2,\n      5, 7, 1,  5,   9, 653,\n    121\n  ],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [], i = 0,\
    \ j = 0;\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n      l.push(l2[0]);\n\
    \      l2.shift();\n    }\n  }\n  while(i < l1.length){\n    l.push(l1[i]);\n\
    \    i++;\n  }\n  while(j < l2.length){\n    l.push(l2[j]);\n    j++;\n  }\n \
    \ return l;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5,\n  121\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpcnpy2aea.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcnpy2aea.js:43:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4,  3,   5, 7, 1,\n      5, 9, 34, 653, 2, 5,\n    121\n  ],\n  expected: [\
    \ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var lLen = l1.length;\n \
    \   var l1Len = l1.length;\n    var l2Len = l2.length;\n    var maxLen = Math.max(lLen,\
    \ l2Len);\n    while(i<l1Len && j<l2Len){\n        if(l1[i]===l2[j]){\n      \
    \      result.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n     \
    \   }\n    }\n    while(i<l1Len){\n        result.push(l1[i]);\n        i++;\n\
    \    }\n    while(j<l2Len){\n        result.push(l2[j]);\n        j++;\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpttm6lajb.js:42:10)\n\
    \    at Object.<anonymous> (/tmp/tmpttm6lajb.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653, 121\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk2pvji0t.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk2pvji0t.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var\
    \ m = l2.length;\n    while(i<n && j<m){\n        if(l1[i]===l2[j]){\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                i++;\n            }else{\n    \
    \            j++;\n            }\n        }\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa2cdrkxk.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa2cdrkxk.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl9yag21a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9yag21a.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if(l1[i]<l2[j]){\n            j++;\n        }\n        else{\n \
    \           i++;\n        }\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpxjpmbp08.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxjpmbp08.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            result.push(l1[0]);\n            l1.shift();\n    \
    \        l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n\
    \        }else{\n            l2.shift();\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmprkjnoik5.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmprkjnoik5.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0, j = 0;\n    var len = Math.min(l1.length, l2.length);\n    while\
    \ (i < len && j < len){\n        if (l1[i] === l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if (l1[i] > l2[j]){\n\
    \            i++;\n        }\n        else{\n            j++;\n        }\n   \
    \ }\n    return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp5eengljg.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5eengljg.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var llen = l1.length;\n    var lx = 0;\n    var ly = 0;\n    while (lx <\
    \ llen && ly < llen){\n        if (l1[lx] === l2[ly]){\n            lx++;\n  \
    \          ly++;\n        }\n        else if (l1[lx] < l2[ly]){\n            out.push(l1[lx]);\n\
    \            lx++;\n        }\n        else {\n            out.push(l2[ly]);\n\
    \            ly++;\n        }\n    }\n    while (ly < llen){\n        out.push(l2[ly]);\n\
    \        ly++;\n    }\n    while (lx < llen){\n        out.push(l1[lx]);\n   \
    \     lx++;\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  2,\n  5,\n  121\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp01p3u2qy.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmp01p3u2qy.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \   4, 3,  5, 7,\n    1,   5, 9, 34, 2,\n    5, 121\n  ],\n  expected: [ 1, 5,\
    \ 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var l1Len = l1.length;\n\
    \    var i = 0;\n    while (l1Len > 0 && l2Len > 0){\n        if (l1[i] === l2[0]){\n\
    \            l2.shift();\n            l1Len --;\n        }\n        else if (l1[i]\
    \ < l2[0]){\n            result.push(l1[i]);\n            l1.splice(i--, 1);\n\
    \            l1Len --;\n        }\n        else {\n            result.push(l2[0]);\n\
    \            l2.shift();\n            l2Len --;\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpdqj0uh_v.js:12\n    while (l1Len > 0 && l2Len > 0){\n         \
    \               ^\n\nReferenceError: l2Len is not defined\n    at common (/tmp/tmpdqj0uh_v.js:12:25)\n\
    \    at test (/tmp/tmpdqj0uh_v.js:36:20)\n    at Object.<anonymous> (/tmp/tmpdqj0uh_v.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length;\
    \ j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n \
    \       break;\n      }\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpmt7nulh4.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmt7nulh4.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var ret = [];\n\
    \    var l1 = l1 || [];\n    var l2 = l2 || [];\n    var i = 0, j = 0;\n    var\
    \ ilen = l1.length;\n    var jlen = l2.length;\n    for(; i < ilen; i++){\n  \
    \      for(; j < jlen; j++){\n            if(l1[i] === l2[j]){\n             \
    \   ret.push(l1[i]);\n                break;\n            }\n        }\n    }\n\
    \    return ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk3ad_kmo.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk3ad_kmo.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpipxre8au.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpipxre8au.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ llen = l1.length;\n  var lx = 0;\n  var ly = 0;\n  while(lx < llen && ly < llen){\n\
    \    if(l1[lx] === l2[ly]){\n      out.push(l1[lx]);\n      lx++;\n      ly++;\n\
    \    }else if(l1[lx] < l2[ly]){\n      ly++;\n    }else{\n      lx++;\n    }\n\
    \  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmph9eo_8jr.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmph9eo_8jr.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl9yag21a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9yag21a.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) ===\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp5zsyi9v_.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5zsyi9v_.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var ret = [];\n  for(var\
    \ i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] ===\
    \ l2[i]){\n      ret.push(l1[i]);\n    }\n  }\n  return ret;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppms63ju6.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppms63ju6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    for(var i=0; i<l1.length; i++){\n        if(l2.indexOf(l1[i]) == -1){\n \
    \           result.push(l1[i]);\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmptm6y4z3k.js:21:10)\n    at Object.<anonymous> (/tmp/tmptm6y4z3k.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }\n        else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkvf8a8ye.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkvf8a8ye.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl9yag21a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9yag21a.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    for(var i = 0, len = l1.length; i < len; i++){\n        if(l2.indexOf(l1[i])\
    \ !== -1){\n            result.push(l1[i]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppy00pwi6.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppy00pwi6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length;\
    \ j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n \
    \       break;\n      }\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpmt7nulh4.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmt7nulh4.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = 0, // common\
    \ length\n      lp = 0, // common prefix\n      ln = l1.length, // length of first\
    \ list\n      lm = l2.length, // length of second list\n      i = 0, // current\
    \ index\n      j = 0;\n\n  // check common length\n  if(ln >= lm)return [];\n\n\
    \  // get common prefix\n  for(; i < ln; i++){\n    if(l1[i] !== l2[j]){\n   \
    \   lc = i;\n      break;\n    }\n  }\n\n  // get common suffix\n  for(; j < lm;\
    \ j++){\n    if(l1[i] !== l2[j]){\n      lc = i;\n      break;\n    }\n  }\n\n\
    \  // return common substring\n  return l1.slice(lc);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpejgul9oa.js:42:10)\n\
    \    at Object.<anonymous> (/tmp/tmpejgul9oa.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl9yag21a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9yag21a.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [],\n    \
    \  l1 = l1 || [],\n      l2 = l2 || [],\n      i = 0, j = 0;\n\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n   \
    \   l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      l.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n\n  while(i < l1.length){\n    l.push(l1[i++]);\n  }\n\n  while(j < l2.length){\n\
    \    l.push(l2[j++]);\n  }\n\n  return l;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5,\n  121\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpte4cgm30.js:42:10)\n\
    \    at Object.<anonymous> (/tmp/tmpte4cgm30.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 4,  3,   5, 7, 1,\n      5, 9, 34, 653, 2, 5,\n    121\n  ],\n  expected: [\
    \ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n  \
    \  return l1;\n  }\n  if(lLen2 > lLen1){\n    return l2;\n  }\n  while(lLen1 >\
    \ 0){\n    var l1 = l1[0];\n    var l2 = l2[0];\n    if(l1 === l2){\n      result.push(l1);\n\
    \      l1.splice(0, 1);\n      l2.splice(0, 1);\n      lLen1--;\n      lLen2--;\n\
    \    }else if(l1 !== l2){\n      return result;\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppl30tos1.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmppl30tos1.js:43:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j <\
    \ l2.length; j++){\n            k = l1.indexOf(l2[j]);\n            if(k !== -1){\n\
    \                out.push(l1[i]);\n                l1.splice(i, 1);\n        \
    \        i--;\n            }\n        }\n    }\n    return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  undefined,\n\
    \  undefined\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpvipuztnv.js:27:10)\n    at Object.<anonymous> (/tmp/tmpvipuztnv.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, undefined,\
    \ undefined ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl9yag21a.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9yag21a.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    out\
    \ = l1;\n    l1 = l2;\n    l2 = out;\n  }\n  for(var i=0; i<lLen1; i++){\n   \
    \ for(var j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        l1.splice(i, 1);\n        l2.splice(j, 1);\n        i--;\n        j--;\n\
    \      }\n    }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var commonCount = 0;\n  \
    \  var lLen = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n\
    \    var maxLen = Math.max(lLen, l2Len);\n    while(l1Len > 0 && l2Len > 0){\n\
    \        if(l1[k] == l2[j]){\n            commonCount++;\n            k = k +\
    \ 1;\n            j++;\n            if(j == l2Len){\n                j = 0;\n\
    \                k = k + 1;\n            }\n        }else if(l1[k] > l2[j]){\n\
    \            commonCount++;\n            k = k + 1;\n        }else{\n        \
    \    commonCount++;\n            j = j + 1;\n            if(j == lLen){\n    \
    \            j = 0;\n                k = k + 1;\n            }\n        }\n  \
    \      if(k == maxLen){\n            break;\n        }\n    }\n    while(i < lLen\
    \ && j < l2Len){\n        if(l1[i] == l2[j]){\n            commonCount++;\n  \
    \          i++;\n            j++;\n            if(j == l2Len){\n             \
    \   j = 0;\n                i++;\n            }\n        }else if(l1[i] > l2[j]){\n\
    \            commonCount++;\n            i++;\n        }else{\n            commonCount++;\n\
    \            j++;\n            if(j == lLen){\n                j = 0;\n      \
    \          i++;\n            }\n        }\n        if(k == maxLen){\n        \
    \    break;\n        }\n    }\n    return commonCount;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpt3ewo1x_.js:72:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt3ewo1x_.js:78:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=Math.min(l1.length,\
    \ l2.length), a=[], diff=l1.length-(l2.length);\n  for(i=l-1;i>=0;i--){\n    a.push(l1[i]==l2[i]?0:(l1[i]<l2[i]?-1:1));\n\
    \  }\n  for(i=diff;i>=0;i--){\n    a.push(l1[i]==l2[i]?0:(l1[i]<l2[i]?-1:1));\n\
    \  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -1,\n\
    \  1,\n  1,\n  1,\n  -1,\n  -1,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n \
    \ 1,\n  5,\n  653\n]\n    at test (/tmp/tmplgpfw2_o.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplgpfw2_o.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    -1,\
    \ -1,  1,  1,\n     1, -1, -1, -1\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = 0, // common\
    \ length\n      lp = 0, // last common length\n      i = 0;\n  while(l1 && l2\
    \ && lc++ && lp < l1 || l2 && l1 && l2 && lp++ && lc < l2){\n    i++;\n  }\n \
    \ return lc < l1 ? l1 : l2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  7,\n\
    \  1,\n  5,\n  9,\n  653,\n  121\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  5,\n  653\n]\n    at test (/tmp/tmp5ic0epuq.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ic0epuq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \   7,   1, 5,\n    9, 653, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var common;\n    var l12 = [];\n    var l12l2 = [];\n    var i = 0;\n   \
    \ var j = 0;\n    var k = 0;\n    var l1 = l1 || [];\n    var l2 = l2 || [];\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    l12l2.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                out.push(l1[i]);\n            \
    \    i++;\n            }else{\n                out.push(l2[j]);\n            \
    \    j++;\n            }\n        }\n    }\n    while(i<l1.length){\n        out.push(l1[i]);\n\
    \        i++;\n    }\n    while(j<l2.length){\n        out.push(l2[j]);\n    \
    \    j++;\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  2,\n  5,\n  121\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmptu3i0n6r.js:47:10)\n\
    \    at Object.<anonymous> (/tmp/tmptu3i0n6r.js:53:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \   4, 3,  5, 7,\n    1,   5, 9, 34, 2,\n    5, 121\n  ],\n  expected: [ 1, 5,\
    \ 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n     \
    \   }\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpnmpumbrp.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnmpumbrp.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7lrj80vo.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7lrj80vo.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n \
    \       for(j = 0; j < l2.length; j++){\n            k = l1[i];\n            if(hash[k]\
    \ === undefined){\n                hash[k] = 1;\n            }else{\n        \
    \        hash[k]++;\n            }\n        }\n    }\n    for(i = 0; i < l1.length;\
    \ i++){\n        for(j = 0; j < l2.length; j++){\n            k = l2[j];\n   \
    \         if(hash[k] === undefined){\n                hash[k] = 1;\n         \
    \   }else{\n                hash[k]--;\n            }\n        }\n    }\n    for(i\
    \ = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n       \
    \     if(hash[l1[i]] === hash[l2[j]]){\n                out.push(l1[i]);\n   \
    \         }\n        }\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  653,\n  653,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n\
    \  653\n]\n    at test (/tmp/tmpufqsyvfc.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpufqsyvfc.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 653,\
    \ 653, 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=l1.length,\
    \ l2=l2.length, a=0, b=0, c;\n  for(i=0; i<l; i++){\n    c = l1[i];\n    for(j=0;\
    \ j<l2; j++){\n      if(c===l2[j]){\n        a++;\n        break;\n      }\n \
    \   }\n  }\n  for(i=0; i<l; i++){\n    c = l1[i];\n    for(j=0; j<l2; j++){\n\
    \      if(c===l2[j]){\n        b++;\n        break;\n      }\n    }\n  }\n  return\
    \ [a, b];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp300blgp_.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmp300blgp_.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i]\
    \ === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmphxgcx5f0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphxgcx5f0.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else{\n            if(l1[i]<l2[j]){\n            \
    \    i++;\n            }else{\n                j++;\n            }\n        }\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_s6tu5ak.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_s6tu5ak.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_i35ggbi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_i35ggbi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmplsgk8qk0.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmplsgk8qk0.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjehz4x7q.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjehz4x7q.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var\
    \ j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n\
    \            i++;\n        }else{\n            j++;\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis is not the most efficient\
    \ solution. `common` function has O(n^2) complexity. `sort` function has O(nlogn)\
    \ complexity. `intersection` function has O(n) complexity. `union` function has\
    \ O(n) complexity. `merge` function has O(n) complexity. `mergeSort` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity.\
    \ `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity.\
    \ `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity.\
    \ `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3elev6j6.js:25\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk2pvji0t.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk2pvji0t.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !==\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdqve0ca8.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdqve0ca8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var i = 0;\n  var j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      result.push(l1[i]);\n      i++;\n      j++;\n    }\n    else if(l1[i]<l2[j]){\n\
    \      i++;\n    }\n    else{\n      j++;\n    }\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp42y8j7yw.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp42y8j7yw.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n\
    \    var i = 0;\n    var j = 0;\n    while(i<lLen && j<l2Len){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }\n        else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpm2us0rec.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm2us0rec.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var lLen2 = l2.length;\n\
    \    var i = 0;\n    while (lLen > 0 && lLen2 > 0){\n        if (l1[i] === l2[0]){\n\
    \            l1.splice(i, 1);\n            lLen--;\n            lLen2--;\n   \
    \     }\n        else{\n            result.push(l1[i]);\n            l1.splice(i,\
    \ 1);\n            lLen--;\n        }\n        i++;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n\
    \  653,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpvcrkj10m.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvcrkj10m.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 653,\
    \ undefined, undefined, undefined ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ && l2.length){\n    if(l1[0]===l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n\
    \      l2.shift();\n    }else if(l1[0]<l2[0]){\n      out.push(l1[0]);\n     \
    \ l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz1iig7z8.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz1iig7z8.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=l1.length,\
    \ m=l2.length, a = [], o = [];\n  for(i=0; i<l; i++){\n    a.push(l1[i]);\n  }\n\
    \  for(i=0; i<m; i++){\n    o.push(l2[i]);\n  }\n  a = a.concat(o);\n  a.sort();\n\
    \  return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n\
    \  121,\n  2,\n  3,\n  34,\n  4,\n  5,\n  5,\n  5,\n  653,\n  653,\n  7,\n  9\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpz4wtyiot.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz4wtyiot.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 1, 121, 2,   3,  34,\n    4, 5,   5, 5, 653, 653,\n    7, 9\n  ],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    out\
    \ = l1;\n    l1 = l2;\n    l2 = out;\n  }\n  for(var i=0; i<lLen1; i++){\n   \
    \ for(var j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        l1.splice(i, 1);\n        l2.splice(j, 1);\n        i--;\n        j--;\n\
    \      }\n    }\n  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003957
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var llen = l1.length;\n    var lx = 0;\n    var ly = 0;\n    while (lx <\
    \ llen && ly < llen){\n        if (l1[lx] === l2[ly]){\n            lx++;\n  \
    \          ly++;\n        }\n        else if (l1[lx] < l2[ly]){\n            out.push(l1[lx]);\n\
    \            lx++;\n        }\n        else{\n            out.push(l2[ly]);\n\
    \            ly++;\n        }\n    }\n    while (ly < llen){\n        out.push(l2[ly]);\n\
    \        ly++;\n    }\n    while (lx < llen){\n        out.push(l1[lx]);\n   \
    \     lx++;\n    }\n    return out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  2,\n  5,\n  121\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp86ulkyjw.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmp86ulkyjw.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \   4, 3,  5, 7,\n    1,   5, 9, 34, 2,\n    5, 121\n  ],\n  expected: [ 1, 5,\
    \ 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    var\
    \ j = 0;\n    while(lLen > i){\n        if(l2[j] === l1[i]){\n            l2.splice(j--,\
    \ 1);\n            lLen--;\n        }else{\n            i++;\n        }\n    }\n\
    \    while(l2.length > 0){\n        out.push(l2[0]);\n        l2.shift();\n  \
    \  }\n    return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  1,\n\
    \  5,\n  9,\n  653,\n  121\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n\
    \  653\n]\n    at test (/tmp/tmpowqntorz.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpowqntorz.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7, 1, 5,\
    \ 9, 653, 121 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=l1.length,\
    \ m=l2.length, a=[], b=[], c=[]\n  for(i=0; i<l; i++){\n    a.push(l1[i])\n  }\n\
    \  for(i=0; i<m; i++){\n    b.push(l2[i])\n  }\n  while(l>0){\n    for(i=0; i<l;\
    \ i++){\n      if(b.indexOf(a[i])<0){\n        c.push(a[i])\n        l--\n   \
    \   }\n    }\n    for(i=0; i<m; i++){\n      if(c.indexOf(b.indexOf(a[i]))<0){\n\
    \        c.push(a[i])\n        l--\n      }\n    }\n  }\n  return c\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  1,\n  4,\n  3,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpzkrvqnxf.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzkrvqnxf.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    4,\
    \  3,  34, 1, 4,\n    3, 34, 653, 2, 5\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_i35ggbi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_i35ggbi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    for(var i = 0, len = l1.length; i < len; i++){\n        if(l2.indexOf(l1[i])\
    \ !== -1){\n            result.push(l1[i]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppy00pwi6.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppy00pwi6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while (i<l1.length && j<l2.length){\n\
    \        if (l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if (l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpmhfav3uz.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmhfav3uz.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var lc = 0, // common\
    \ length\n      l1, l2, // iterators\n      i1, i2, // iterators\n      j, k;\
    \ // iterators\n\n  while(l1 < l2){\n    j = lc; // common length\n    i1 = l1;\n\
    \    i2 = l2;\n    while(i1 < i2){\n      if(l1[i1] == l2[j]){\n        lc++;\n\
    \        j++;\n      }else{\n        i1++;\n      }\n    }\n    l1 = i1 - 1;\n\
    \    l2 = j - 1;\n  }\n  return lc;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmphl9hiro7.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmphl9hiro7.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0, j = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            out.push(l1[0]);\n            l1.shift();\n       \
    \     l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n\
    \        }else{\n            l2.shift();\n        }\n    }\n    while(l1.length\
    \ > 0){\n        out.push(l1[0]);\n        l1.shift();\n    }\n    while(l2.length\
    \ > 0){\n        out.push(l2[0]);\n        l2.shift();\n    }\n    return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpo3ka4d28.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo3ka4d28.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653, 121\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=Math.min(l1.length,\
    \ l2.length), a=[], i=0;\n  while(i<l){\n    if(l1[i]===l2[i]){\n      a.push(l1[i]);\n\
    \      i++;\n    }else{\n      while(i<l && a[a.length-1]===l2[i]){\n        a.pop();\n\
    \      }\n      if(i === l){\n        a.push(l2[i]);\n      }\n    }\n  }\n  return\
    \ a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5],\
    \ [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3,\
    \ 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2,\
    \ 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003958
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var l1, l2, i;\n\
    \    for(i = 0; i < lLen1; i++){\n        l1 = l1[i];\n        for(j = 0; j <\
    \ lLen2; j++){\n            l2 = l2[j];\n            if(l1 === l2){\n        \
    \        result.push(l1);\n                break;\n            }\n        }\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmpe_q3vlvs.js:14\n            l2 = l2[j];\n                   ^\n\
    \nTypeError: Cannot read properties of undefined (reading '2')\n    at common\
    \ (/tmp/tmpe_q3vlvs.js:14:20)\n    at test (/tmp/tmpe_q3vlvs.js:29:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpe_q3vlvs.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, ret = [];\n\
    \  for(i = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        ret.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return ret;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdc07h1wi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdc07h1wi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n \
    \   var rIdx = 0;\n    var commonCount = 0;\n    while (lIdx < lLen1 && rIdx <\
    \ lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n            commonCount++;\n \
    \           lIdx++;\n            rIdx++;\n        }\n        else if (l1[lIdx]\
    \ < l2[rIdx]){\n            lIdx++;\n        }\n        else {\n            rIdx++;\n\
    \        }\n    }\n    while (lIdx < lLen1){\n        result.push(l1[lIdx]);\n\
    \        lIdx++;\n    }\n    while (rIdx < lLen2){\n        result.push(l2[rIdx]);\n\
    \        rIdx++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  121\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpp_k_fi7s.js:42:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp_k_fi7s.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 121 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) ===\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp5zsyi9v_.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5zsyi9v_.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) ===\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  34,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp5zsyi9v_.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5zsyi9v_.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 34,\
    \ 2 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            result.push(l1[0]);\n            l1.shift();\n    \
    \        l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n\
    \        }else{\n            l2.shift();\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmprkjnoik5.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmprkjnoik5.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ hash = {};\n  for(var i=0; i<l1.length; i++){\n    var a = l1[i];\n    var b\
    \ = l2[i];\n    var key = a<b?a:b;\n    if(hash[key]){\n      out.push(key);\n\
    \    }else{\n      hash[key] = true;\n    }\n  }\n  return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdg_buo18.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdg_buo18.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_i35ggbi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_i35ggbi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [],\n    \
    \  i = 0,\n      j = 0,\n      k = 0,\n      n = l1.length,\n      m = l2.length,\n\
    \      a = l2.slice(0);\n  while(i<n && j<m){\n    if(l1[i]===l2[j]){\n      l.push(l1[i]);\n\
    \      i++;\n      j++;\n    }else{\n      if(l1[i]<l2[j]){\n        i++;\n  \
    \    }else{\n        j++;\n      }\n    }\n  }\n  return l;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpy1sbcqgx.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy1sbcqgx.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp3opdgkni.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3opdgkni.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var llen = l1.length;\n    var llen2 = l2.length;\n    var i = 0;\n    var\
    \ j = 0;\n    while(i<llen && j<llen2){\n        if(l1[i]===l2[j]){\n        \
    \    out.push(l1[i]);\n            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n\
    \            i++;\n        }else{\n            j++;\n        }\n    }\n    return\
    \ out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpgum3miw7.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgum3miw7.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var i, j, k;\n  for(i = 0; i < l1.length; i++){\n    for(j = 0; j < l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpaz_n7m1z.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaz_n7m1z.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpsczxj8_k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsczxj8_k.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !==\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdqve0ca8.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdqve0ca8.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjehz4x7q.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjehz4x7q.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var\
    \ m = l2.length;\n    while (i < n && j < m) {\n        if (l1[i] === l2[j]) {\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n          \
    \  j++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa2zxth2v.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa2zxth2v.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0, j = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            out.push(l1[0]);\n            l1.shift();\n       \
    \     l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n\
    \        }else{\n            l2.shift();\n        }\n    }\n    while(l1.length\
    \ > 0){\n        out.push(l1[0]);\n        l1.shift();\n    }\n    while(l2.length\
    \ > 0){\n        out.push(l2[0]);\n        l2.shift();\n    }\n    return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpo3ka4d28.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo3ka4d28.js:42:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653, 121\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, l=Math.min(l1.length,\
    \ l2.length), a=[], i=0;\n  while(l1.length && l2.length){\n    if(l1[0]===l2[0]){\n\
    \      a.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]<l2[0]){\n\
    \      a.push(l1[i++]);\n      l1.shift();\n    }else{\n      a.push(l2[i++]);\n\
    \      l2.shift();\n    }\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n\
    \  653,\n  5,\n  653,\n  undefined,\n  undefined,\n  undefined,\n  undefined,\n\
    \  653,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  5,\n  653\n]\n    at test (/tmp/tmpdaeamf7t.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdaeamf7t.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \         3,\n    653,       5,\n    653,       undefined,\n    undefined, undefined,\n\
    \    undefined, 653,\n    undefined, undefined\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var common = [];\n    var l1 = l1 || [];\n    var l2 = l2 || [];\n    var\
    \ i = 0, j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n    \
    \    if(l1[i]===l2[j]){\n            common.push(l1[i]);\n            i++;\n \
    \           j++;\n        }else{\n            if(l1[i]<l2[j]){\n             \
    \   i++;\n            }else{\n                j++;\n            }\n        }\n\
    \    }\n    while(i<l1.length){\n        common.push(l1[i]);\n        i++;\n \
    \   }\n    while(j<l2.length){\n        common.push(l2[j]);\n        j++;\n  \
    \  }\n    return common;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  121\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp6of9z6bz.js:42:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6of9z6bz.js:48:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653, 121\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  for(var i=0; i<lLen1; i++){\n\
    \    for(var j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \      }\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp94q1znm3.js:25:10)\n    at Object.<anonymous> (/tmp/tmp94q1znm3.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5, 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var hash = {};\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n \
    \       hash[l1[i]] = true;\n    }\n    for(i = 0; i < l2.length; i++){\n    \
    \    hash[l2[i]] = true;\n    }\n    for(k in hash){\n        if(hash.hasOwnProperty(k)){\n\
    \            out.push(k);\n        }\n    }\n    return out;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  '2',\n\
    \  '3',\n  '4',\n  '5',\n  '7',\n  '9',\n  '34',\n  '121',\n  '653'\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkepjwdw0.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkepjwdw0.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '1',\
    \   '2',  '3',\n    '4',   '5',  '7',\n    '9',   '34', '121',\n    '653'\n  ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [],\n    \
    \  l1 = l1 || [],\n      l2 = l2 || [],\n      i = 0, j = 0;\n\n  while (l1.length\
    \ && l2.length) {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n      i++;\n\
    \      j++;\n    } else if (l1[i] < l2[j]) {\n      l.push(l1[i]);\n      i++;\n\
    \    } else {\n      l.push(l2[j]);\n      j++;\n    }\n  }\n\n  return l;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpwqz5483p.js:14\n      l.push(l1[i]);\n        ^\n\nRangeError:\
    \ Invalid array length\n    at Array.push (<anonymous>)\n    at common (/tmp/tmpwqz5483p.js:14:9)\n\
    \    at test (/tmp/tmpwqz5483p.js:34:20)\n    at Object.<anonymous> (/tmp/tmpwqz5483p.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003957
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    for(var\
    \ i=0; i<lLen1; i++){\n      out.push(l1[i]);\n    }\n  }else{\n    for(var i=0;\
    \ i<lLen2; i++){\n      out.push(l2[i]);\n    }\n  }\n  return out;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  7,\n\
    \  1,\n  5,\n  9,\n  653,\n  121\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  5,\n  653\n]\n    at test (/tmp/tmpw94pmy5n.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw94pmy5n.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \   7,   1, 5,\n    9, 653, 121\n  ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [], i = 0,\
    \ j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n     \
    \ l.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n      i++;\n\
    \    }else{\n      j++;\n    }\n  }\n  return l;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpi0xqlpbz.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi0xqlpbz.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    while\
    \ (lLen > 0 && l2.length > 0) {\n        if (l1[i] === l2[0]) {\n            l2.shift();\n\
    \            lLen--;\n        } else {\n            result.push(l1[i]);\n    \
    \        l1.splice(i, 1);\n            lLen--;\n        }\n        i++;\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n\
    \  653,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpuw0_x6r_.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuw0_x6r_.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 653,\
    \ undefined, undefined, undefined ],\n  expected: [ 1, 5, 653 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  var\
    \ i = 0;\n  var j = 0;\n  while(i < l1.length && j < l2.length){\n    if(l1[i]\
    \ === l2[j]){\n      out.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]\
    \ < l2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp5kei3wo7.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5kei3wo7.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpipxre8au.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpipxre8au.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  var lLen = l1.length;\n  var l2 = l2.slice(0);\n  var l1Len = l1.length;\n\
    \  var i = 0;\n  while(l1Len > 0 && l2Len > 0){\n    if(l1[i] === l2[i]){\n  \
    \    result.push(l1[i]);\n      l1.splice(i, 1);\n      l2.splice(i, 1);\n   \
    \   l1Len--;\n      l2Len--;\n    }else{\n      i++;\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpaurwg4ew.js:12\n  while(l1Len > 0 && l2Len > 0){\n            \
    \         ^\n\nReferenceError: l2Len is not defined\n    at common (/tmp/tmpaurwg4ew.js:12:22)\n\
    \    at test (/tmp/tmpaurwg4ew.js:31:20)\n    at Object.<anonymous> (/tmp/tmpaurwg4ew.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkhjjb_xq.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkhjjb_xq.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp8x3p5lgh.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8x3p5lgh.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var l = [], i = 0,\
    \ j = 0;\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n      i++;\n    }else\
    \ if(l1[0] < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n  \
    \    l.push(l2[0]);\n      l2.shift();\n    }\n  }\n  return l;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  5,\n  7,\n  1,\n  5,\n  9,\n  34,\n  653,\n  2,\n  5\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpp5u0nyud.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp5u0nyud.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 4, 3,  5,   7,\n    1, 5, 9, 34, 653,\n    2, 5\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var i, ret = [];\n\
    \  for(i = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        ret.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return ret;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpdc07h1wi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdc07h1wi.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003953
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk2pvji0t.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk2pvji0t.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: -1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n    var result = [];\n\
    \    var lLen = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n\
    \    var i = 0;\n    var j = 0;\n    while(i<lLen){\n        while(j<l2Len){\n\
    \            if(l1[i]===l2[j]){\n                result.push(l1[i]);\n       \
    \         i++;\n                j++;\n            }else{\n                break;\n\
    \            }\n        }\n        if(j===l2Len){\n            result.push(l1[i]);\n\
    \            i++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660003958
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpbazw420h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbazw420h.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660003952

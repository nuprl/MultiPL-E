name: HumanEval_91_is_bored
language: js
prompt: "//You'll be given a string of words, and your task is to count the number\n\
  // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
  \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\"\
  )\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n// 1\nfunction is_bored(S){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
  Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
  bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
  \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for a\
  \ walk\"),0);\n}\n\ntest();"
completions: ["    var boredom = 0;\n    S.split(\" \").forEach(function(word){\n\
    \        if (word.startsWith(\"I\")){\n            boredom++;\n        }\n   \
    \ });\n    return boredom;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=javascript,python,algorithm\
    \ |>\n<code>\ndef boredom(s):\n    boredom = 0\n    for word in s.split():\n \
    \       if word.startswith('I'):\n            boredom += 1\n    return boredom\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef boredom(s):\n    boredom\
    \ = 0\n    for word in s.split():\n        if word.startswith('I'):\n        \
    \    boredom += 1\n    return boredom\n</code>\n<|/ a tags=javascript,python,algorithm\
    \ |>\n<| a |>\n<code>\ndef boredom(s):\n    boredom = 0\n    for word in s.split():\n\
    \        if word.startswith('I'):\n            boredom += 1\n    return boredom\n\
    </code>\n<|/ a tags=javascript,python,algorithm dscore=1 |>\n<| a tags=javascript,python,algorithm\
    \ |>\n<code>\ndef boredom(s):\n    boredom = 0\n    for word in s.split():\n \
    \       if word.startswith('I'):\n            boredom += 1\n    return boredom\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=javascript,python,algorithm |>\n<code>\n\
    def boredom(s):\n    boredom = 0\n    for word in s.split():\n        if word.startswith('I'):\n\
    \            boredom += 1\n    return boredom\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\ndef boredom(s):\n    boredom = 0\n    for word in s.split():\n\
    \        if word.startswith('I'):\n            boredom += 1\n    return boredom\n\
    </code>\n<|/ a tags=javascript,python,algorithm |>\n<| a dscore=1 |>\n<code>\n\
    def boredom(s):\n    boredom = 0\n    for word in s.split():\n        if word.startswith('I'):\n\
    \            boredom += 1\n    return boredom\n</code>\n<|/ a tags=javascript,python,algorithm\
    \ |>\n<| a tags=javascript,python,algorithm |>\n<code>\ndef boredom(s):\n    boredom\
    \ = 0\n    for word in s.split():\n        if word.startswith('I'):\n        \
    \    boredom += 1\n    return bore", "  var boredoms = S.split(\" \");\n  var\
    \ count = 0;\n  for(var i=0; i<boredoms.length; i++){\n    if(boredoms[i].indexOf(\"\
    I\") === 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "    var boredoms\
    \ = S.match(/\\bI\\b/g);\n    return boredoms.length;\n}\n", "    var boredoms\
    \ = S.match(/\\bI\\b/g);\n    return boredoms.length;\n}\n", "    var boredoms\
    \ = S.match(/\\bI\\b/g);\n    return boredoms.length;\n}\n", "    var boredom\
    \ = 0;\n    S.split(\" \").forEach(function(word){\n        if(word.startsWith(\"\
    I\")){\n            boredom++;\n        }\n    });\n    return boredom;\n}\n",
  "    var boredom = 0;\n    var words = S.split(\" \");\n    for(var i=0; i<words.length;\
    \ i++){\n        if(words[i][0] === \"I\"){\n            boredom++;\n        }\n\
    \    }\n    return boredom;\n}\n", "    var boredom = 0;\n    S = S.toLowerCase();\n\
    \    S = S.split('.');\n    S = S.join('');\n    S = S.split('?');\n    S = S.join('');\n\
    \    S = S.split('!');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n    S = S.join('');\n    S = S.split('I');\n    S = S.join('');\n\
    \    S = S.split('I');\n", "  var boredom = 0;\n  S.split('.').forEach(function(word){\n\
    \    if(word === 'I'){\n      boredom++;\n    }\n  });\n  return boredom;\n}\n",
  "  var boredom = 0;\n  S.split(\" \").forEach(function(word){\n    if(word.startsWith(\"\
    I\")){\n      boredom++;\n    }\n  });\n  return boredom;\n}\n", "    var boredoms\
    \ = S.match(/\\bI\\b/);\n    return boredoms ? boredoms.length : 0;\n}\n", " \
    \   var boredoms = 0;\n    for(var i=0; i<S.length; i++){\n        if(S[i]==\"\
    I\"){\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  var boredom = 0;\n  S.split(\" \").forEach(function(word){\n    if(word.startsWith(\"\
    I\")){\n      boredom++;\n    }\n  });\n  return boredom;\n}\n", "    var boredoms\
    \ = S.match(/\\bI\\b/g);\n    return boredoms.length;\n}\n", "    var boredoms\
    \ = 0;\n    var words = S.split(\" \");\n    for(var i=0;i<words.length;i++){\n\
    \        if(words[i][0]==\"I\"){\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n", "    var boredoms = 0;\n    var sentences = S.split(\"\
    .\");\n    for(var i=0; i<sentences.length; i++){\n        if(sentences[i].indexOf(\"\
    I\") === 0){\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n", "  var boredom = 0;\n  S.split('.').forEach(function(word){\n    if(word.startsWith(\"\
    I\")){\n      boredom++;\n    }\n  });\n  return boredom;\n}\n", "  var boredom\
    \ = 0;\n  for(var i=0; i<S.length; i++){\n    if(S[i] == '.' || S[i] == '?' ||\
    \ S[i] == '!'){\n      boredom++;\n    }\n  }\n  return boredom;\n}\n", "    var\
    \ boredoms = S.match(/\\bI\\b/g);\n    return boredoms.length;\n}\n", "  var boredoms\
    \ = 0;\n  S.split(\" \").forEach(function(word){\n    if(word.startsWith(\"I\"\
    )){\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["\tvar count = 0;\n\tfor (var i = 0; i < string.length; i++){\n\t\t\
    var char = string.charAt(i);\n\t\tif (char.charCodeAt(0) >= 65 && char.charCodeAt(0)\
    \ <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return char.match(/[a-z]/i) != null\n  }).length\n\
    }\n", "  var uniqueChars = {};\n  for(var i=0; i<string.length; i++){\n    var\
    \ char = string.charAt(i);\n    if(uniqueChars[char]){\n      uniqueChars[char]++;\n\
    \    }else{\n      uniqueChars[char] = 1;\n    }\n  }\n  return Object.keys(uniqueChars).length;\n\
    }\n", "  return string.split(\"\").filter(function(char){\n    return char.charCodeAt(0)\
    \ != char.charCodeAt(0).toLowerCase().charCodeAt(0);\n  }).length;\n}\n", "\t\
    var char_count = 0;\n\t\n\tfor(var i = 0; i < string.length; i++){\n\t\tchar_count\
    \ += string.charCodeAt(i) - 64;\n\t}\n\t\n\treturn char_count;\n}\n", "  var count\
    \ = 0;\n  for(var i = 0; i < string.length; i++){\n    if(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "    var chars = string.split(\"\").sort();\n    var count = 1;\n\
    \    for(var i = 0; i < chars.length; i++){\n        if(chars[i] === chars[i -\
    \ 1]){\n            count++;\n        }\n    }\n    return count;\n}\n", "  return\
    \ string.split(\"\").filter(function(char){\n    return char.match(/[a-z]/i) ?\
    \ char.match(/[a-z]/).length : char.match(/[A-Z]/).length;\n  }).length;\n}\n",
  "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string.charAt(i)\
    \ !== string.charAt(string.length - 1)){\n            char_count++;\n        }\n\
    \    }\n    return char_count;\n}\n", "  var chars = string.split(\"\");\n  var\
    \ counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\").sort();\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char] == null) counts[char]\
    \ = 0;\n        counts[char]++;\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return char.charCodeAt(0) !== char.charCodeAt(0).toLowerCase().charCodeAt(0);\n\
    \  }).length;\n}\n", "    var char_count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char.charCodeAt(0) !=\
    \ char.charCodeAt(0)){\n            char_count++;\n        }\n    }\n    return\
    \ char_count;\n}\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    string.split('').forEach(function(char){\n   \
    \     chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    var char = string.charAt(i);\n        if(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \   var chars = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n", "    var chars = string.split(\"\");\n    var\
    \ distinct_chars = chars.filter(function(char){\n        return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n    });\n    return distinct_chars.length;\n}\n",
  "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i\
    \ < string.length; i++){\n\t\tif(string.charAt(i) !== string.charAt(string.length\
    \ - 1)){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var chars =\
    \ string.split(\"\");\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char] == undefined){\n\
    \            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var distinct_chars = 0;\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(char.charCodeAt(0) != char.charCodeAt(1)){\n\
    \            distinct_chars++;\n        }\n    }\n    return distinct_chars;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        counts[chars[i]] = counts[chars[i]]||0;\n\
    \        counts[chars[i]]++;\n    }\n    return counts;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_distinct_characters(\"abBcC\"\
    )`\n<|/ c |>\n<| c |>\nI tested it and it works fine for me. Can you give me an\
    \ example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine for me. Can you give me an example where it doesn't work?\n<|/ c |>\n<|\
    \ c |>\nI tested it and it works fine for me. Can you give me an example where\
    \ it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works fine for me. Can\
    \ you give me an example where it doesn't work?\n<|/ c |>\n<| a tags=javascript,string,algorithm\
    \ |>\n<code>", "  var hash = {}\n  for(var i=0;i<string.length;i++){\n    var\
    \ char = string.charAt(i)\n    if(hash[char]){\n      hash[char]++\n    }else{\n\
    \      hash[char] = 1\n    }\n  }\n  return Object.keys(hash).length\n}\n", " \
    \   var chars = string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char] == undefined){\n      \
    \      counts[char] = 1;\n        }else{\n            counts[char]++;\n      \
    \  }\n    }\n    return counts;\n}\n", "    var chars = string.split(\"\");\n\
    \    var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var\
    \ char = chars[i];\n        counts[char] = counts[char] ? counts[char] + 1 : 1;\n\
    \    }\n    return Object.keys(counts).length;\n}\n", "    var chars = string.split(\"\
    \");\n    var distinct_chars = chars.filter(function(char){\n        return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n    });\n    return distinct_chars.length;\n}\n",
  "  var chars = string.split(\"\").sort();\n  var distinct_chars = chars.filter(function(elem,\
    \ pos) {\n    return chars.indexOf(elem) == pos;\n  }).length;\n  return distinct_chars;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0; i<chars.length; i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return counts;\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return char.match(/[a-z]/i) && char.match(/[A-Z]/i) && char.match(/[0-9]/i);\n\
    \  }).length;\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\
    \t\tif(string.charCodeAt(i) >= 65 && string.charCodeAt(i) <= 90){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n", "  let chars = string.split('');\n  let counts\
    \ = {};\n  chars.forEach(char => {\n    if(counts[char] == null){\n      counts[char]\
    \ = 1;\n    } else {\n      counts[char] += 1;\n    }\n  });\n  return counts;\n\
    }\n", "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "  var chars = string.split(\"\").sort();\n\
    \  var counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n", "\tvar count =\
    \ 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tvar char = string.charAt(i);\n\
    \t\tif(char.charCodeAt(0) != char.charCodeAt(string.length-1)){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n", "\tvar count = 0;\n\tfor(var i=0; i<string.length;\
    \ i++){\n\t\tvar char = string.charAt(i);\n\t\tif(char.charCodeAt(0) != char.charCodeAt(string.length-1)){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var chars = {};\n    for(var\
    \ i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n    \
    \    if(chars[char]){\n            chars[char]++;\n        }else{\n          \
    \  chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "  var counts = {};\n  string.split(\"\").forEach(function(char){\n    counts[char]\
    \ = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", "    var chars =\
    \ {};\n    string.split(\"\").forEach(function(char){\n        chars[char] = chars[char]\
    \ ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n}\n",
  "    var chars = string.split(\"\").sort();\n    var count = 1;\n    for(var i in\
    \ chars){\n        if(chars[i] == chars[i-1]){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n", "  var char_count = 0;\n  for (var i = 0;\
    \ i < string.length; i++) {\n    char_count += string.charCodeAt(i) - 64;\n  }\n\
    \  return char_count;\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return char.charCodeAt(0) != char.charCodeAt(0).toLowerCase().charCodeAt(0);\n\
    \  }).length;\n}\n", "    var chars = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        chars.push(string.charAt(i));\n    }\n    return chars.filter(function(elem,\
    \ pos) {\n        return chars.indexOf(elem) == pos;\n    }).length;\n}\n", " \
    \   var uniqueChars = {};\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(uniqueChars[char]){\n            uniqueChars[char]++;\n\
    \        }else{\n            uniqueChars[char] = 1;\n        }\n    }\n    return\
    \ Object.keys(uniqueChars).length;\n}\n", "    var chars = string.split('');\n\
    \    var char_counts = {};\n    chars.forEach(function(char){\n        char_counts[char]\
    \ = (char_counts[char] || 0) + 1;\n    });\n    return Object.keys(char_counts).length;\n\
    }\n", "    var hash = {};\n    for(var i = 0; i < string.length; i++){\n     \
    \   var character = string[i];\n        if(hash[character]){\n            hash[character]++;\n\
    \        }else{\n            hash[character] = 1;\n        }\n    }\n    return\
    \ Object.keys(hash).length;\n}\n", "    var chars = string.split(\"\");\n    var\
    \ counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n\
    \        if(counts[char]){\n            counts[char]++;\n        }else{\n    \
    \        counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).map(function(key){\n\
    \        return counts[key];\n    }).reduce(function(prev, curr){\n        return\
    \ prev + curr;\n    });\n}\n", "  return string.split('').filter(function(char){\n\
    \    return char.match(/[a-z]/i) != null;\n  }).length;\n}\n", "    var chars\
    \ = {};\n    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \ var chars = {};\n  for (var i = 0; i < string.length; i++) {\n    var char =\
    \ string.charAt(i);\n    if (chars[char]) {\n      chars[char]++;\n    } else\
    \ {\n      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n\
    }\n", "  var chars = string.split('');\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n", "    var chars = string.split('');\n    var counts\
    \ = {};\n    chars.forEach(function(char){\n        counts[char] = (counts[char]\
    \ || 0) + 1;\n    });\n    return Object.keys(counts).map(function(char){\n  \
    \      return char;\n    }).reduce(function(prev, curr){\n        return prev\
    \ + counts[curr];\n    }, 0);\n}\n", "    var chars = string.split(\"\");\n  \
    \  var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var char\
    \ = chars[i];\n        if(counts[char]){\n            counts[char]++;\n      \
    \  } else {\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        char_count = char_count + (string.charCodeAt(i));\n    }\n    return\
    \ char_count;\n}\n", "    var chars = string.split(\"\");\n    var count = 0;\n\
    \    for(var i = 0; i < chars.length; i++){\n        if(chars.indexOf(chars[i])\
    \ == -1){\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \ var chars = string.split(\"\").sort();\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return counts;\n}\n", "    var char_count = 0;\n    for(var\
    \ i=0; i<string.length; i++){\n        if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \   var chars = string.split(\"\").sort();\n    var count = 1;\n    for(var i\
    \ in chars){\n        if(chars.indexOf(chars[i]) !== i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    var chars = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n\
    \            chars[char]++;\n        }else{\n            chars[char] = 1;\n  \
    \      }\n    }\n    return Object.keys(chars).length;\n}\n", "\tvar char_count\
    \ = 0;\n\t\n\tfor (var i = 0; i < string.length; i++){\n\t\tvar char = string.charAt(i);\n\
    \t\t\n\t\tif (char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90){\n\t\t\tchar_count++;\n\
    \t\t}\n\t}\n\t\n\treturn char_count;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var count = 0;\n    for(var i = 0; i < chars.length;\
    \ i++){\n        if(chars.indexOf(chars[i]) == -1){\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n", "\tvar count = 0;\n\tfor(var i=0; i<string.length;\
    \ i++){\n\t\tif(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var hash = {};\n  for(var i=0;\
    \ i<string.length; i++){\n    var char = string.charAt(i);\n    if(hash[char]){\n\
    \      hash[char]++;\n    }else{\n      hash[char] = 1;\n    }\n  }\n  return\
    \ Object.keys(hash).length;\n}\n", "  let count = 0;\n  for(let i = 0; i < string.length;\
    \ i++){\n    if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "  var chars = string.split(\"\");\n  var\
    \ count = 0;\n  for(var i=0; i<chars.length; i++){\n    if(chars.indexOf(chars[i])\
    \ == -1){\n      count++;\n    }\n  }\n  return count;\n}\n", "    var chars =\
    \ string.split(\"\");\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]\
    \ + 1 : 1;\n    }\n    return counts;\n}\n", "    var chars = string.split(\"\"\
    );\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        counts[chars[i]]\
    \ = counts[chars[i]]||0;\n        counts[chars[i]]++;\n    }\n    return Object.keys(counts).map(function(key){\n\
    \        return counts[key];\n    });\n}\n", "\tvar chars = string.split(\"\"\
    );\n\tvar counts = {};\n\tfor(var i = 0; i < chars.length; i++){\n\t\tvar char\
    \ = chars[i];\n\t\tif(!counts[char]){\n\t\t\tcounts[char] = 1;\n\t\t}else{\n\t\
    \t\tcounts[char]++;\n\t\t}\n\t}\n\treturn counts;\n}\n", "\tvar char_count = 0;\n\
    \tfor(var i=0; i<string.length; i++){\n\t\tif(string.charAt(i) == string.charAt(i).toUpperCase()){\n\
    \t\t\tchar_count++;\n\t\t}\n\t}\n\treturn char_count;\n}\n", "  var char_count\
    \ = 0;\n  for(var i=0; i<string.length; i++){\n    char_count++;\n    for(var\
    \ j=0; j<string.length; j++){\n      if(i != j){\n        if(string[i] == string[j]){\n\
    \          char_count++;\n        }\n      }\n    }\n  }\n  return char_count;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    if(counts[chars[i]]===undefined){\n      counts[chars[i]] = 1;\n    }else{\n\
    \      counts[chars[i]]++;\n    }\n  }\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "  var hash = {};\n  for (var i = 0; i < string.length;\
    \ i++) {\n    hash[string[i]] = hash[string[i]] ? hash[string[i]] + 1 : 1;\n \
    \ }\n  return Object.keys(hash).length;\n}\n", "    var chars = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n    \
    \    if(chars.indexOf(char) === -1){\n            chars.push(char);\n        }\n\
    \    }\n    return chars.length;\n}\n", "\tvar characters = string.split(\"\"\
    );\n\tvar counts = {};\n\tfor(var i in characters){\n\t\tcounts[characters[i]]\
    \ = counts[characters[i]] ? counts[characters[i]]+1 : 1;\n\t}\n\treturn counts;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char]++;\n        }else{\n            counts[char] = 1;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "    var chars\
    \ = [];\n    for(var i=0; i<string.length; i++){\n        var char = string[i];\n\
    \        if(chars.indexOf(char) == -1){\n            chars.push(char);\n     \
    \   }\n    }\n    return chars.length;\n}\n", "    var char_count = 0;\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            char_count++;\n        }\n    }\n   \
    \ return char_count;\n}\n", "  var chars = string.split(\"\");\n  var counts =\
    \ {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char] || 0)\
    \ + 1;\n  });\n  return Object.keys(counts).length;\n}\n", "  var chars = string.split(\"\
    \");\n  var counts = {};\n  chars.forEach(function(char){\n    counts[char] =\
    \ (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n}\n",
  "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n        if(string.charAt(i)\
    \ == string.charAt(i).toUpperCase()){\n            char_count++;\n        }\n\
    \    }\n    return char_count;\n}\n", "    var chars = {};\n    string.split(\"\
    \").forEach(function(char){\n        chars[char] = chars[char] ? chars[char] +\
    \ 1 : 1;\n    });\n    return Object.keys(chars).length;\n}\n", "  var counts\
    \ = {};\n  string.split(\"\").forEach(function(char){\n    counts[char] = counts[char]\
    \ ? counts[char]+1 : 1;\n  });\n  return Object.keys(counts).length;\n}\n", " \
    \ let chars = string.split(\"\").sort();\n  let count = 1;\n  for(let i = 0; i\
    \ < chars.length; i++){\n    if(chars[i] != chars[i - 1]){\n      count++;\n \
    \   }\n  }\n  return count;\n}\n", "    var chars = {};\n    for(var i=0; i<string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n    \
    \        chars[char]++;\n        }else{\n            chars[char] = 1;\n      \
    \  }\n    }\n    return Object.keys(chars).length;\n}\n", "  var chars = string.split(\"\
    \");\n  var counts = {};\n  chars.forEach(function(char){\n    counts[char] =\
    \ (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n}\n",
  "\tvar chars = string.split(\"\");\n\tvar count = 0;\n\tfor(var i=0; i<chars.length;\
    \ i++){\n\t\tif(chars.indexOf(chars[i]) == -1){\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;\n}\n", "\tvar chars = {};\n\t\n\tstring.split(\"\").forEach(function(char){\n\
    \t\tchars[char] = chars[char] ? chars[char] + 1 : 1;\n\t});\n\t\n\treturn Object.keys(chars).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  for(var i=0; i<chars.length;\
    \ i++){\n    var char = chars[i];\n    if(counts[char]){\n      counts[char] =\
    \ counts[char] + 1;\n    }else{\n      counts[char] = 1;\n    }\n  }\n  return\
    \ Object.keys(counts).length;\n}\n", "  var chars = string.split(\"\");\n  var\
    \ counts = {};\n  chars.forEach(function(char){\n    counts[char] = counts[char]\
    \ ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ curr){\n    return prev + counts[curr];\n  }, 0);\n}\n", "    var char_count\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n            char_count++;\n\
    \        }\n    }\n    return char_count;\n}\n", "    var chars = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n\
    \            chars[char]++;\n        } else {\n            chars[char] = 1;\n\
    \        }\n    }\n    return Object.keys(chars).length;\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return string.split(\"\").indexOf(char) === string.split(\"\
    \").lastIndexOf(char);\n  }).length;\n}\n", "  var chars = string.split(\"\");\n\
    \  var counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).map(function(key){\n    return\
    \ counts[key];\n  }).reduce(function(a,b){\n    return a+b;\n  });\n}\n", "  \
    \  var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "    var chars = {};\n    for(var i =\
    \ 0; i < string.length; i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n\
    \            chars[char]++;\n        }else{\n            chars[char] = 1;\n  \
    \      }\n    }\n    return Object.keys(chars).length;\n}\n", "    var chars =\
    \ {};\n    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return char.charCodeAt(0) != char.charCodeAt(0).toLowerCase();\n  }).length;\n\
    }\n", "\tvar char_count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\t\
    var char = string.charAt(i);\n\t\tif(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \t\t\tchar_count++;\n\t\t}\n\t}\n\treturn char_count;\n}\n", "  var chars = string.split(\"\
    \");\n  var counts = {};\n  chars.forEach(function(char){\n    counts[char] =\
    \ (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n}\n",
  "\tvar count = 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tif(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "  var chars = string.split(\"\").sort();\n  var counts = {};\n\
    \  for(var i = 0; i < chars.length; i++){\n    var char = chars[i];\n    if(counts[char]\
    \ == null){\n      counts[char] = 1;\n    } else {\n      counts[char]++;\n  \
    \  }\n  }\n  return counts;\n}\n", "    var uniqueChars = {};\n    for(var i =\
    \ 0; i < string.length; i++){\n        var char = string.charAt(i);\n        if(uniqueChars[char]){\n\
    \            uniqueChars[char]++;\n        }else{\n            uniqueChars[char]\
    \ = 1;\n        }\n    }\n    return Object.keys(uniqueChars).length;\n}\n", " \
    \   var char_count = 0;\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(char.charCodeAt(0) != char.charCodeAt(string.length-1)){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \ var chars = string.split(\"\").sort();\n  var counts = {};\n  for(var i = 0;\
    \ i < chars.length; i++){\n    var char = chars[i];\n    if(counts[char] == null)\
    \ counts[char] = 0;\n    counts[char]++;\n  }\n  return counts;\n}\n", "    var\
    \ chars = string.split(\"\").sort();\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0; i<chars.length; i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return counts;\n}\n", "    var chars = string.split(\"\"\
    );\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char\
    \ = chars[i];\n        counts[char] = counts[char] ? counts[char]+1 : 1;\n   \
    \ }\n    return counts;\n}\n", "  var chars = string.split(\"\");\n  var counts\
    \ = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n    if(counts[char]){\n\
    \      counts[char]++;\n    }else{\n      counts[char] = 1;\n    }\n  }\n  return\
    \ Object.keys(counts).length;\n}\n", "  var unique = {}, char_count = 0;\n  for(var\
    \ i=0; i<string.length; i++){\n    if(unique[string[i]]){\n      unique[string[i]]++;\n\
    \    }else{\n      unique[string[i]] = 1;\n      char_count++;\n    }\n  }\n \
    \ return char_count;\n}\n", "    var char_count = {};\n    for(var i=0; i<string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char_count[char]){\n\
    \            char_count[char]++;\n        }else{\n            char_count[char]\
    \ = 1;\n        }\n    }\n    return Object.keys(char_count).length;\n}\n", " \
    \ var uniqueChars = {};\n  for(var i=0; i<string.length; i++){\n    var char =\
    \ string.charAt(i);\n    if(uniqueChars[char]){\n      uniqueChars[char]++;\n\
    \    }else{\n      uniqueChars[char] = 1;\n    }\n  }\n  return Object.keys(uniqueChars).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    if(counts[char]){\n      counts[char]++;\n    }else{\n\
    \      counts[char] = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n",
  "  var hash = {};\n  for(var i=0; i<string.length; i++){\n    hash[string[i]] =\
    \ hash[string[i]] ? hash[string[i]] + 1 : 1;\n  }\n  return Object.keys(hash).length;\n\
    }\n", "  return string.split(\"\").filter((char,index)=>{\n    return index===0\
    \ || char===string[index-1]\n  }).length\n}\n", "    var chars = string.split(\"\
    \");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var\
    \ char = chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char]++;\n        }\n    }\n    return\
    \ Object.keys(counts).length;\n}\n", "    var chars = string.split(\"\");\n  \
    \  var counts = {};\n    chars.forEach(function(char){\n        counts[char] =\
    \ counts[char] ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).reduce(function(prev,\
    \ curr){\n        return prev + counts[curr];\n    }, 0);\n}\n", "\tvar chars\
    \ = string.split(\"\");\n\tvar count = 0;\n\tfor(var i=0;i<chars.length;i++){\n\
    \t\tvar char = chars[i];\n\t\tvar lower = char.toLowerCase();\n\t\tvar upper =\
    \ char.toUpperCase();\n\t\tif(lower != upper){\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;\n}\n", "  var hash = {};\n  for(var i=0; i<string.length; i++){\n\
    \    var character = string[i].toLowerCase();\n    if(hash[character]){\n    \
    \  hash[character]++;\n    }else{\n      hash[character] = 1;\n    }\n  }\n  return\
    \ Object.keys(hash).length;\n}\n", "    var chars = string.split(\"\");\n    var\
    \ counts = {};\n    chars.forEach(function(char){\n        counts[char] = (counts[char]\
    \ || 0) + 1;\n    });\n    return Object.keys(counts).length;\n}\n", "  var counts\
    \ = {};\n  for (var i = 0; i < string.length; i++){\n    var char = string.charAt(i);\n\
    \    if (counts[char] === undefined){\n      counts[char] = 1;\n    } else {\n\
    \      counts[char]++;\n    }\n  }\n  return counts;\n}\n", "    var chars = {};\n\
    \    for(var i=0;i<string.length;i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n", "    var characters = string.split(\"\");\n  \
    \  var distinct_characters = 0;\n    for(var i=0; i<characters.length; i++){\n\
    \        var character = characters[i];\n        if(characters.indexOf(character)\
    \ !== i){\n            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        counts[char]\
    \ = counts[char] ? counts[char]+1 : 1;\n    }\n    return counts;\n}\n", "  var\
    \ chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \   var chars = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return Object.keys(counts).map(function(key){\n        return\
    \ counts[key];\n    }).reduce(function(prev, curr){\n        return prev + curr;\n\
    \    });\n}\n", "    var chars = [];\n    for(var i = 0; i < string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(chars.indexOf(char) === -1){\n\
    \            chars.push(char);\n        }\n    }\n    return chars.length;\n}\n",
  "    var chars = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  return string.split(\"\").filter(function(char){\n    return char.charCodeAt(0)\
    \ !== char.charCodeAt(0).toUpperCase().charCodeAt(0);\n  }).length;\n}\n", " \
    \ var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ cur){\n    return prev + counts[cur];\n  }, 0);\n}\n", "    var chars = {};\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    for(var i=0;i<string.length;i++){\n        var\
    \ char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var distinct_chars = 0;\n    for(var\
    \ i = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(char.charCodeAt(0)\
    \ != char.charCodeAt(0)){\n            distinct_chars++;\n        }\n    }\n \
    \   return distinct_chars;\n}\n", "  var hash = {}\n  for(var i=0; i<string.length;\
    \ i++){\n    hash[string.charAt(i)] = string.charAt(i)\n  }\n  return Object.keys(hash).length\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  return string.split('').filter(function(char){\n    return char.charCodeAt(0)\
    \ !== char.charCodeAt(0).toUpperCase().charCodeAt(0);\n  }).length;\n}\n", " \
    \ var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ cur){\n    return prev + counts[cur];\n  }, 0);\n}\n", "  let chars = string.split(\"\
    \");\n  let char_count = {};\n  chars.forEach((char) => {\n    char_count[char]\
    \ = char_count.hasOwnProperty(char) ? char_count[char] + 1 : 1;\n  });\n  return\
    \ Object.keys(char_count).length;\n}\n", "  var chars = string.split(\"\").sort();\n\
    \  var counts = {};\n  for(var i = 0; i < chars.length; i++){\n    var char =\
    \ chars[i];\n    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = counts[char] ? counts[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(counts).reduce(function(prev, curr){\n        return prev + counts[curr];\n\
    \    }, 0);\n}\n", "  var chars = {};\n  for(var i=0; i<string.length; i++){\n\
    \    var char = string.charAt(i);\n    if(chars[char]){\n      chars[char]++;\n\
    \    }else{\n      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n\
    }\n", "  return string.split('').filter(function(char){\n    return char.charCodeAt(0)\
    \ !== char.charCodeAt(0).toUpperCase().charCodeAt(0);\n  }).length;\n}\n", " \
    \ var chars = string.split(\"\");\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    if(counts[char]){\n      counts[char]++;\n    }else{\n\
    \      counts[char] = 1;\n    }\n  }\n  return Object.keys(counts).map(function(key){\n\
    \    return counts[key];\n  }).reduce(function(a,b){\n    return a+b;\n  });\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \   var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n       \
    \ var char = string.charAt(i);\n        if(char.charCodeAt(0) != char.charCodeAt(0)){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \   var chars = {};\n    for(var i=0;i<string.length;i++){\n        var char =\
    \ string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n  \
    \      }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0; i<chars.length; i++){\n        var char = chars[i];\n        if(counts[char]\
    \ == undefined){\n            counts[char] = 1;\n        }else{\n            counts[char]++;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "  return string.split('').filter(function(char){\n\
    \    return string.indexOf(char) === -1\n  }).length\n}\n", "    var chars = {};\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "\tvar chars = string.split(\"\");\n\tvar counts = {};\n\tchars.forEach(function(char){\n\
    \t\tcounts[char] = (counts[char] || 0) + 1;\n\t});\n\treturn Object.keys(counts).length;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        char_count += string.charCodeAt(i);\n    }\n    return char_count;\n\
    }\n", "    var chars = string.split('');\n    var char_counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        char_counts[chars[i]] = char_counts[chars[i]]?char_counts[chars[i]]+1:1;\n\
    \    }\n    return Object.keys(char_counts).length;\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return char.charCodeAt(0) != char.charCodeAt(0).toUpperCase().charCodeAt(0);\n\
    \  }).length;\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\
    \t\tvar char = string.charAt(i);\n\t\tif(char.charCodeAt(0) != char.charCodeAt(string.length\
    \ - 1)){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var hash = {};\n\
    \  for (var i = 0; i < string.length; i++) {\n    var char = string.charAt(i);\n\
    \    if (hash[char]) {\n      hash[char]++;\n    } else {\n      hash[char] =\
    \ 1;\n    }\n  }\n  return Object.keys(hash).length;\n}\n", "    var chars = [];\n\
    \    for(var i=0;i<string.length;i++){\n        var char = string.charAt(i);\n\
    \        if(chars.indexOf(char)==-1){\n            chars.push(char);\n       \
    \ }\n    }\n    return chars.length;\n}\n", "  var char_count = 0;\n  for(var\
    \ i=0; i<string.length; i++){\n    char_count = char_count + string.charCodeAt(i);\n\
    \  }\n  return char_count;\n}\n", "    var chars = [];\n    for(var i=0; i<string.length;\
    \ i++){\n        chars[string.charAt(i)] = true;\n    }\n    return chars.length;\n\
    }\n", "    var chars = string.split(\"\");\n    var counts = {};\n    for(var\
    \ i=0;i<chars.length;i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char]++;\n        }else{\n            counts[char] = 1;\n\
    \        }\n    }\n    return Object.keys(counts).length;\n}\n", "  var chars\
    \ = string.split(\"\").sort();\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "  let chars = string.split('');\n  let\
    \ uniqueChars = {};\n  chars.forEach((char) => {\n    uniqueChars[char] = uniqueChars[char]\
    \ ? uniqueChars[char] + 1 : 1;\n  });\n  return Object.keys(uniqueChars).length;\n\
    }\n", "  var chars = string.split(\"\").sort();\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  var chars = [];\n  for(var i=0; i<string.length; i++){\n    chars.push(string.charAt(i));\n\
    \  }\n  var uniqueChars = {};\n  for(var i=0; i<chars.length; i++){\n    if(uniqueChars[chars[i]]\
    \ == undefined){\n      uniqueChars[chars[i]] = 1;\n    }else{\n      uniqueChars[chars[i]]++;\n\
    \    }\n  }\n  return Object.keys(uniqueChars).length;\n}\n", "    var chars =\
    \ string.split(\"\");\n    var distinct_chars = chars.filter(function(char){\n\
    \        return chars.indexOf(char) === chars.lastIndexOf(char);\n    });\n  \
    \  return distinct_chars.length;\n}\n", "    var chars = string.split(\"\");\n\
    \    var distinct_chars = chars.filter(function(char){\n        return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n    });\n    return distinct_chars.length;\n}\n",
  "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \ var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var hash = {}\n    for(var i = 0; i < string.length; i++){\n      \
    \  var char = string.charAt(i)\n        if(hash[char]){\n            hash[char]\
    \ += 1\n        }else{\n            hash[char] = 1\n        }\n    }\n    return\
    \ Object.keys(hash).length\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var chars = string.split(\"\"\
    );\n    var counts = {};\n    for(var i = 0; i < chars.length; i++){\n       \
    \ var char = chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char] += 1;\n        }\n    }\n   \
    \ return Object.keys(counts).map(function(key){\n        return counts[key];\n\
    \    }).reduce(function(a, b){\n        return a + b;\n    });\n}\n", "    var\
    \ char_count = 0;\n    for(var i=0; i<string.length; i++){\n        char_count\
    \ = char_count + string.charCodeAt(i);\n    }\n    return char_count;\n}\n", " \
    \   var char_count = 0;\n    for(var i=0; i<string.length; i++){\n        char_count\
    \ = char_count + count_distinct_characters_helper(string.charAt(i));\n    }\n\
    \    return char_count;\n}\n", "    var char_count = 0;\n    for(var i=0; i<string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char.charCodeAt(0) >=\
    \ 65 && char.charCodeAt(0) <= 90){\n            char_count++;\n        }\n   \
    \ }\n    return char_count;\n}\n", "  var chars = {};\n  for(var i=0; i<string.length;\
    \ i++){\n    var char = string.charAt(i);\n    if(chars[char]){\n      chars[char]++;\n\
    \    }else{\n      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n\
    }\n", "  var hash = {};\n  for(var i = 0; i < string.length; i++){\n    var character\
    \ = string[i];\n    if(hash[character]){\n      hash[character]++;\n    }else{\n\
    \      hash[character] = 1;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n", "  var char_count = 0;\n  for(var i=0; i<string.length; i++){\n    char_count\
    \ = char_count + (string.charCodeAt(i));\n  }\n  return char_count;\n}\n", " \
    \ var hash = {};\n  for (var i = 0; i < string.length; i++) {\n    var char =\
    \ string.charAt(i);\n    if (hash[char] == null) {\n      hash[char] = 1;\n  \
    \  } else {\n      hash[char]++;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n", "    var chars = string.split(\"\");\n    var count = 0;\n    for(var i\
    \ = 0; i < chars.length; i++){\n        if(chars.indexOf(chars[i]) == i){\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n", "  var count =\
    \ 0;\n  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n\
    \    if(string.indexOf(char, i+1) == i){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "  var chars = string.split(\"\");\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    char_count += string.charCodeAt(i);\n    }\n    return char_count;\n}\n",
  "    var chars = string.split(\"\");\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).map(function(key){\n\
    \        return counts[key];\n    });\n}\n", "\tvar count = 0;\n\tfor(var i=0;\
    \ i<string.length; i++){\n\t\tif(string.charAt(i) == string.charAt(i).toUpperCase()){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var chars = {};\n    string.split(\"\
    \").forEach(function(char){\n        chars[char] = chars[char] ? chars[char] +\
    \ 1 : 1;\n    });\n    return Object.keys(chars).length;\n}\n", "  var chars =\
    \ string.split(\"\");\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    if(counts[char] == null){\n      counts[char] =\
    \ 1;\n    }else{\n      counts[char]++;\n    }\n  }\n  return Object.keys(counts).length;\n\
    }\n", "\tvar count = 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tif(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "  var chars = string.split(\"\");\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n", "  var hash = {};\n  for(var i=0; i<string.length;\
    \ i++){\n    var char = string.charAt(i);\n    if(hash[char]){\n      hash[char]++;\n\
    \    }else{\n      hash[char] = 1;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

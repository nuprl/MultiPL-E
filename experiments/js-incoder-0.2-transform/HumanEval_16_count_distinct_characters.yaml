name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["\tvar count = 0;\n\tfor (var i = 0; i < string.length; i++){\n\t\t\
    var char = string.charAt(i);\n\t\tif (char.charCodeAt(0) >= 65 && char.charCodeAt(0)\
    \ <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  return string.split(\"\
    \").filter(function(char){\n    return char.match(/[a-z]/i) != null\n  }).length\n\
    }\n", "  var uniqueChars = {};\n  for(var i=0; i<string.length; i++){\n    var\
    \ char = string.charAt(i);\n    if(uniqueChars[char]){\n      uniqueChars[char]++;\n\
    \    }else{\n      uniqueChars[char] = 1;\n    }\n  }\n  return Object.keys(uniqueChars).length;\n\
    }\n", "  return string.split(\"\").filter(function(char){\n    return char.charCodeAt(0)\
    \ != char.charCodeAt(0).toLowerCase().charCodeAt(0);\n  }).length;\n}\n", "\t\
    var char_count = 0;\n\t\n\tfor(var i = 0; i < string.length; i++){\n\t\tchar_count\
    \ += string.charCodeAt(i) - 64;\n\t}\n\t\n\treturn char_count;\n}\n", "  var count\
    \ = 0;\n  for(var i = 0; i < string.length; i++){\n    if(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "    var chars = string.split(\"\").sort();\n    var count = 1;\n\
    \    for(var i = 0; i < chars.length; i++){\n        if(chars[i] === chars[i -\
    \ 1]){\n            count++;\n        }\n    }\n    return count;\n}\n", "  return\
    \ string.split(\"\").filter(function(char){\n    return char.match(/[a-z]/i) ?\
    \ char.match(/[a-z]/).length : char.match(/[A-Z]/).length;\n  }).length;\n}\n",
  "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string.charAt(i)\
    \ !== string.charAt(string.length - 1)){\n            char_count++;\n        }\n\
    \    }\n    return char_count;\n}\n", "  var chars = string.split(\"\");\n  var\
    \ counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n", "    var chars\
    \ = string.split(\"\").sort();\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char] == null) counts[char]\
    \ = 0;\n        counts[char]++;\n    }\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    string.split(\"\").forEach(function(char){\n \
    \       chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(chars).length;\n}\n", "  return string.split(\"\").filter(function(char){\n\
    \    return char.charCodeAt(0) !== char.charCodeAt(0).toLowerCase().charCodeAt(0);\n\
    \  }).length;\n}\n", "    var char_count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char.charCodeAt(0) !=\
    \ char.charCodeAt(0)){\n            char_count++;\n        }\n    }\n    return\
    \ char_count;\n}\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var chars = {};\n    string.split('').forEach(function(char){\n   \
    \     chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    var char = string.charAt(i);\n        if(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \   var chars = string.split(\"\");\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split(\"\");\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  });\n  return\
    \ distinct_chars.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_99_closest_integer
results:
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var closestAbs;\n  var closestDiff;\n  var closestDiffAbs;\n\
    \  var closestAbsDiff;\n  var closestAbsDiffAbs;\n  var closestAbsDiffAbs2;\n\
    \  var closestAbsDiffAbs3;\n  var closestAbsDiffAbs4;\n  var closestAbsDiffAbs5;\n\
    \  var closestAbsDiffAbs6;\n  var closestAbsDiffAbs7;\n  var closestAbsDiffAbs8;\n\
    \  var closestAbsDiffAbs9;\n  var closestAbsDiffAbs10;\n  var closestAbsDiffAbs11;\n\
    \  var closestAbsDiffAbs12;\n  var closestAbsDiffAbs13;\n  var closestAbsDiffAbs14;\n\
    \  var closestAbsDiffAbs15;\n  var closestAbsDiffAbs16;\n  var closestAbsDiffAbs17;\n\
    \  var closestAbsDiffAbs18;\n  var closestAbsDiffAbs19;\n  var closestAbsDiffAbs20;\n\
    \  var closestAbsDiffAbs21;\n  var closestAbsDiffAbs22;\n  var closestAbsDiffAbs23;\n\
    \  var closestAbsDiffAbs24;\n  var closestAbsDiffAbs25;\n  var closestAbsDiffAbs26;\n\
    \  var closestAbsDiffAbs27;\n  var closestAbsDiffAbs28;\n  var closestAbsDiffAbs29;\n\
    \  var closestAbsDiffAbs30;\n  var closestAbsDiffAbs31;\n  var closestAbsDiffAbs32;\n\
    \  var closestAbsDiffAbs33;\n  var closestAbsDiffAbs34;\n  var closestAbsDiffAbs35;\n\
    \  var closestAbsDiffAbs36;\n  var closestAbsDiffAbs37;\n  var closestAbsDiffAbs38;\n\
    \  var closestAbsDiffAbs39;\n  var closestAbsDiffAbs40;\n  var closestAbsDiffAbs41;\n\
    \  var closestAbsDiffAbs42;\n  var closestAbsDiffAbs43;\n  var closestAbsDiffAbs44;\n\
    \  var closestAbsDiffAbs45;\n  var closestAbsDiffAbs46;\n  var closestAbsDiffAbs47;\n\
    \  var closestAbsDiffAbs48;\n  var closestAbsDiffAbs49;\n  var closestAbsDiffAbs50;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpkqz3shup.js:84\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  if(Math.abs(value - Math.floor(value)) < 0.0000001){\n    closest = Math.floor(value);\n\
    \  }else{\n    closest = Math.round(value);\n  }\n  return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = closest_integer;\n\
    \  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"14.5\"\
    ),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-15\n\nshould\
    \ loosely deep-equal\n\n-16\n    at test (/tmp/tmp_5ua2wm1.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_5ua2wm1.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -15,\n  expected:\
    \ -16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6hq_6h1c.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var num = Number(value);\n\
    \  var closest;\n  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n\
    \  var diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n\
    \  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex;\n  var diffAbs\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = closest_integer;\n\
    \  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"14.5\"\
    ),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpg7278ejz.js:87\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6hq_6h1c.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest =\
    \ Math.round(value);\n  var diff = Math.abs(value - closest);\n  if (diff < 0.5){\n\
    \    return closest;\n  }\n  return closest + 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n15\n    at test (/tmp/tmpecexpcpp.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpecexpcpp.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 15,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var closestAbs;\n  var closestDiff;\n  var closestDiffAbs;\n\
    \  var closestInteger;\n  var closestIntegerAbs;\n  var closestIntegerDiff;\n\
    \  var closestIntegerDiffAbs;\n  var closestIntegerDiffAbsMax;\n  var closestIntegerDiffAbsMaxAbs;\n\
    \  var closestIntegerDiffAbsMaxAbsMax;\n  var closestIntegerDiffAbsMaxAbsMaxAbs;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMax;\n  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbs;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMax;\n  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbs;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n \
    \ var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax;\n\
    \  var closestIntegerDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAb\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpghsmur21.js:56\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6hq_6h1c.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n    var closest;\n\
    \    var diff;\n    var diffAbs;\n    var diffAbsMax;\n    var diffAbsMaxIndex;\n\
    \    var diffAbsMaxValue;\n    var diffAbsMaxValueIndex;\n    var diffAbsMaxValueValue;\n\
    \    var diffAbsMaxValueValueIndex;\n    var diffAbsMaxValueValueValue;\n    var\
    \ diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n \
    \   var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbsMaxValueValueValueIndex;\n    var diffAbsMaxValueValueValueValue;\n\
    \    var diffAbs\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n\
    \  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_tejil47.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest_integer\
    \ = Math.round(value);\n  var difference = Math.abs(value - closest_integer);\n\
    \  if (difference < 0.1) {\n    return closest_integer;\n  }\n  return closest_integer;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-15\n\nshould\
    \ loosely deep-equal\n\n-16\n    at test (/tmp/tmpygnel2_t.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpygnel2_t.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -15,\n  expected:\
    \ -16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6hq_6h1c.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var closestAbs;\n  var closestDiffAbs;\n  var\
    \ closestDiff;\n  var closestDiffAbsMax;\n  var closestDiffAbsMaxIndex;\n  var\
    \ closestDiffAbsMaxValue;\n  var closestDiffAbsMin;\n  var closestDiffAbsMinIndex;\n\
    \  var closestDiffAbsMinValue;\n  var closestIndex;\n  var closestValue;\n  var\
    \ closestValueAbs;\n  var closestValueAbsMax;\n  var closestValueAbsMaxIndex;\n\
    \  var closestValueAbsMaxValue;\n  var closestValueAbsMin;\n  var closestValueAbsMinIndex;\n\
    \  var closestValueAbsMinValue;\n  var closestValueIndex;\n  var closestValueValue;\n\
    \  var closestValueValueAbs;\n  var closestValueValueAbsMax;\n  var closestValueValueAbsMaxIndex;\n\
    \  var closestValueValueAbsMaxValue;\n  var closestValueValueAbsMin;\n  var closestValueValueAbsMinIndex;\n\
    \  var closestValueValueAbsMinValue;\n  var closestValueIndex;\n  var closestValueValue;\n\
    \  var closestValueValueAbs;\n  var closestValueValueAbsMax;\n  var closestValueValueAbsMaxIndex;\n\
    \  var closestValueValueAbsMaxValue;\n  var closestValueValueAbsMin;\n  var closestValueValueAbsMinIndex;\n\
    \  var closestValueValueAbsMinValue;\n  var closestValueIndex;\n  var closestValueValue;\n\
    \  var closestValueValueAbs;\n  var closestValueValueAbsMax;\n  var closestValueValueAbsMaxIndex;\n\
    \  var closestValueValueAbsMaxValue;\n  var closestValueValueAbsMin;\n  var closestValueValueAbsMinIndex;\n\
    \  var closestValueValueAbsMinValue;\n  var closestValueIndex;\n  var closestValueValue;\n\
    \  var closestValueValueAbs;\n  var closestValueValueAbsMax;\n  var closestValueValueAbsMaxIndex;\n\
    \  var closestValueValueAbsMaxValue;\n  var closestValueValueAbsMin;\n  var closestValueValueAbsMinIndex;\n\
    \  var closestValueValueAbsMinValue;\n  var closestValueIndex;\n  var closestValueValue;\n\
    \  var closestValueValueAbs;\n  var closestValueValueAbsMax;\n  var closestValueValueAbsMaxIndex;\n\
    \  var closestValueValueAbsMaxValue;\n  var closestValueValueAbsMin;\n  var closestValueValueAbsMinIndex;\n\
    \  var closestValueValueAbsMinValue;\n  var closestValueIndex;\n  var closestValueValue;\n\
    \  var closestValueValueAbs;\n  var \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpery062qf.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var difference\
    \ = Math.abs(value - closest_integer(value));\n  var closest;\n  if (difference\
    \ <= Number.EPSILON) {\n    closest = value;\n  } else {\n    closest = Math.ceil(difference);\n\
    \  }\n  return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpe7f4ehfe.js:15\n  var difference = Math.abs(value - closest_integer(value));\n\
    \                   ^\n\nRangeError: Maximum call stack size exceeded\n    at\
    \ closest_integer (/tmp/tmpe7f4ehfe.js:15:20)\n    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n\
    \    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n\
    \    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n\
    \    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n\
    \    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n    at closest_integer (/tmp/tmpe7f4ehfe.js:15:37)\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMin;\n  var diffAbsMinIndex;\n  var diffAbsMinValue;\n\
    \  var diffAbsValue;\n  var diffAbsValueIndex;\n  var diffAbsValueValue;\n  var\
    \ diffAbsValueValueIndex;\n  var diffAbsValueValueValue;\n  var diffAbsValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueValue;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueValue;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValueValueValueIndex;\n\
    \  var diffAbsValueValueValueValueValueValueIndex;\n  var diffAbsValueValueValueValue\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp1kly7dy0.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsAbs;\n  var diffAbsMaxAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var\
    \ diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var\
    \ diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var\
    \ diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var\
    \ diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var\
    \ diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n\
    \  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var diffAbsMaxAbsAbsAbsAbsIndex;\n  var\
    \ \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3ephdenb.js:55\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n    var closest_integer\
    \ = Math.round(value);\n    if (Math.abs(closest_integer - value) < 0.0000001){\n\
    \        closest_integer = Math.round(value);\n    }\n    return closest_integer;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
    14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
    15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-15\n\nshould\
    \ loosely deep-equal\n\n-16\n    at test (/tmp/tmpydyarop7.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpydyarop7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -15,\n  expected:\
    \ -16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxAbs;\n  var diffAbsMaxAbsIndex;\n  var diffAbsMaxAbsIndex2;\n  var\
    \ diffAbsMaxAbsIndex3;\n  var diffAbsMaxAbsIndex4;\n  var diffAbsMaxAbsIndex5;\n\
    \  var diffAbsMaxAbsIndex6;\n  var diffAbsMaxAbsIndex7;\n  var diffAbsMaxAbsIndex8;\n\
    \  var diffAbsMaxAbsIndex9;\n  var diffAbsMaxAbsIndex10;\n  var diffAbsMaxAbsIndex11;\n\
    \  var diffAbsMaxAbsIndex12;\n  var diffAbsMaxAbsIndex13;\n  var diffAbsMaxAbsIndex14;\n\
    \  var diffAbsMaxAbsIndex15;\n  var diffAbsMaxAbsIndex16;\n  var diffAbsMaxAbsIndex17;\n\
    \  var diffAbsMaxAbsIndex18;\n  var diffAbsMaxAbsIndex19;\n  var diffAbsMaxAbsIndex20;\n\
    \  var diffAbsMaxAbsIndex21;\n  var diffAbsMaxAbsIndex22;\n  var diffAbsMaxAbsIndex23;\n\
    \  var diffAbsMaxAbsIndex24;\n  var diffAbsMaxAbsIndex25;\n  var diffAbsMaxAbsIndex26;\n\
    \  var diffAbsMaxAbsIndex27;\n  var diffAbsMaxAbsIndex28;\n  var diffAbsMaxAbsIndex29;\n\
    \  var diffAbsMaxAbsIndex30;\n  var diffAbsMaxAbsIndex31;\n  var diffAbsMaxAbsIndex32;\n\
    \  var diffAbsMaxAbsIndex33;\n  var diffAbsMaxAbsIndex34;\n  var diffAbsMaxAbsIndex35;\n\
    \  var diffAbsMaxAbsIndex36;\n  var diffAbsMaxAbsIndex37;\n  var diffAbsMaxAbsIndex38;\n\
    \  var diffAbsMaxAbsIndex39;\n  var diffAbsMaxAbsIndex40;\n  var diffAbsMaxAbsIndex41;\n\
    \  var diffAbsMaxAbsIndex42;\n  var diffAbsMaxAbsIndex43;\n  var diffAbsMaxAbsIndex44;\n\
    \  var diffAbsMaxAbsIndex45;\n  var diff\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp30dnhle7.js:79\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  if(Math.abs(value - closest_integer(value)) < 1e-6){\n    closest = value;\n\
    \  }else{\n    closest = Math.ceil(Math.abs(value - closest_integer(value)));\n\
    \  }\n  return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpaazti4n2.js:16\n  if(Math.abs(value - closest_integer(value)) <\
    \ 1e-6){\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at closest_integer\
    \ (/tmp/tmpaazti4n2.js:16:3)\n    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n\
    \    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n\
    \    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n\
    \    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n\
    \    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n    at closest_integer (/tmp/tmpaazti4n2.js:16:23)\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6hq_6h1c.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Create a function that takes a value (string) representing a number\n\
    // and returns the closest integer to it. If the number is equidistant\n// from\
    \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
    10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
    \ from zero means that if the given number is equidistant\n// from two integers,\
    \ the one you should return is the one that is the\n// farthest from zero. For\
    \ example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"\
    -14.5\") should return -15.\nfunction closest_integer(value){\n  var closest;\n\
    \  var diff;\n  var diffAbs;\n  var diffAbsMax;\n  var diffAbsMaxIndex;\n  var\
    \ diffAbsMaxValue;\n  var diffAbsMaxValueIndex;\n  var diffAbsMaxValueValue;\n\
    \  var diffAbsMaxValueValueIndex;\n  var diffAbsMaxValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbsMaxValueValueValueIndex;\n\
    \  var diffAbsMaxValueValueValueValue;\n  var diffAbs\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
    10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
    -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
    0\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6hq_6h1c.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''

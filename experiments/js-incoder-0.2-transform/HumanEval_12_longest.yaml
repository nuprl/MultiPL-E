name: HumanEval_12_longest
language: js
prompt: "//Out of list of strings, return the longest one. Return the first one in\
  \ case of multiple\n// strings of the same length. Return None in case the input\
  \ list is empty.\n// >>> longest([])\n// undefined\n// >>> longest([\"a\", \"b\"\
  , \"c\"])\n// \"a\"\n// >>> longest([\"a\", \"bb\", \"ccc\"])\n// \"ccc\"\nfunction\
  \ longest(strings){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = longest;\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([\"\
  x\", \"y\", \"z\"]),\"x\");\n  assert.deepEqual(candidate([\"x\", \"yyy\", \"zzzz\"\
  , \"www\", \"kkkk\", \"abc\"]),\"zzzz\");\n}\n\ntest();"
completions: ["    if(strings.length == 0){\n        return undefined;\n    }\n  \
    \  var longest = strings[0];\n    for(var i = 1; i < strings.length; i++){\n \
    \       if(strings[i].length > longest.length){\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "    if(strings.length == 0){\n\
    \        return undefined;\n    }\n    else if(strings.length == 1){\n       \
    \ return strings[0];\n    }\n    else{\n        var longest = strings[0];\n  \
    \      for(var i = 1; i < strings.length; i++){\n            if(strings[i].length\
    \ > longest.length){\n                longest = strings[i];\n            }\n \
    \       }\n        return longest;\n    }\n}\n", "    if (strings.length == 0)\
    \ return undefined;\n    var maxLen = 0;\n    var maxStr = \"\";\n    strings.forEach(function(str){\n\
    \        if (str.length > maxLen){\n            maxLen = str.length;\n       \
    \     maxStr = str;\n        }\n    });\n    return maxStr;\n}\n", "    if(!strings.length)\n\
    \        return undefined;\n    var longest = strings[0];\n    for(var i = 1;\
    \ i < strings.length; i++){\n        if(strings[i].length > longest.length){\n\
    \            longest = strings[i];\n        }\n    }\n    return longest;\n}\n",
  "    var longest = strings[0];\n    for(var i = 1; i < strings.length; i++){\n \
    \       if(strings[i].length > longest.length){\n            longest = strings[i];\n\
    \        }\n    }\n    return longest;\n}\n", "\tif(!strings || strings.length\
    \ == 0){\n\t\treturn undefined;\n\t}\n\tvar longest = strings[0];\n\tfor(var i\
    \ = 1; i < strings.length; i++){\n\t\tif(strings[i].length > longest.length){\n\
    \t\t\tlongest = strings[i];\n\t\t}\n\t}\n\treturn longest;\n}\n", "  if (strings.length\
    \ == 0) return undefined;\n  var maxLen = 0;\n  var maxStr = \"\";\n  for (var\
    \ i = 0; i < strings.length; i++){\n    if (strings[i].length > maxLen){\n   \
    \   maxLen = strings[i].length;\n      maxStr = strings[i];\n    }\n  }\n  return\
    \ maxStr;\n}\n", "  if (strings.length == 0) return undefined;\n  var longest\
    \ = strings[0];\n  for (var i = 1; i < strings.length; i++){\n    if (strings[i].length\
    \ > longest.length){\n      longest = strings[i];\n    }\n  }\n  return longest;\n\
    }\n", "    if(strings.length == 0) return undefined;\n    var longestString =\
    \ strings[0];\n    for(var i = 1; i < strings.length; i++){\n        if(strings[i].length\
    \ > longestString.length){\n            longestString = strings[i];\n        }\n\
    \    }\n    return longestString;\n}\n", "  if (strings.length == 0) return undefined;\n\
    \  var longest = strings[0];\n  for (var i = 1; i < strings.length; i++){\n  \
    \  if (strings[i].length > longest.length){\n      longest = strings[i];\n   \
    \ }\n  }\n  return longest;\n}\n", "    var longest = 0;\n    var longestStr =\
    \ \"\";\n    for(var i = 0; i < strings.length; i++){\n        var str = strings[i];\n\
    \        if(str.length > longest){\n            longest = str.length;\n      \
    \      longestStr = str;\n        }\n    }\n    return longestStr;\n}\n", "\t\
    if(!strings.length) return undefined;\n\tvar longest = strings[0];\n\tfor(var\
    \ i = 1; i < strings.length; i++){\n\t\tif(strings[i].length > longest.length){\n\
    \t\t\tlongest = strings[i];\n\t\t}\n\t}\n\treturn longest;\n}\n", "    var longest\
    \ = strings[0];\n    for(var i = 1; i < strings.length; i++){\n        if(strings[i].length\
    \ > longest.length){\n            longest = strings[i];\n        }\n    }\n  \
    \  return longest;\n}\n", "    var longest = 0;\n    var longestStr = \"\";\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].length >\
    \ longest){\n            longest = strings[i].length;\n            longestStr\
    \ = strings[i];\n        }\n    }\n    return longestStr;\n}\n", "  if(strings.length\
    \ == 0)\n    return undefined;\n  if(strings.length == 1)\n    return strings[0];\n\
    \  var longest = strings[0];\n  for(var i = 1; i < strings.length; i++){\n   \
    \ if(strings[i].length > longest.length){\n      longest = strings[i];\n    }\n\
    \  }\n  return longest;\n}\n", "    if(!strings.length) return undefined;\n  \
    \  var maxLen = 0;\n    for(var i = 0; i < strings.length; i++){\n        var\
    \ len = strings[i].length;\n        if(len > maxLen) maxLen = len;\n    }\n  \
    \  return strings[maxLen === strings.length ? 0 : maxLen];\n}\n", "    var longest\
    \ = \"\";\n    var maxLength = 0;\n    for(var i=0; i<strings.length; i++){\n\
    \        var str = strings[i];\n        if(str.length > maxLength){\n        \
    \    maxLength = str.length;\n            longest = str;\n        }\n    }\n \
    \   return longest;\n}\n", "    var longest = strings[0];\n    for(var i = 1;\
    \ i < strings.length; i++){\n        if(strings[i].length > longest.length){\n\
    \            longest = strings[i];\n        }\n    }\n    return longest;\n}\n",
  "    var longest = 0;\n    var longestStr = \"\";\n    for(var i = 0; i < strings.length;\
    \ i++){\n        var str = strings[i];\n        if(str.length > longest){\n  \
    \          longest = str.length;\n            longestStr = str;\n        }\n \
    \   }\n    return longestStr;\n}\n", "    if(!strings.length)\n        return\
    \ undefined;\n    var maxLen = 0;\n    var maxStr = \"\";\n    for(var i = 0;\
    \ i < strings.length; i++){\n        var str = strings[i];\n        if(str.length\
    \ > maxLen){\n            maxLen = str.length;\n            maxStr = str;\n  \
    \      }\n    }\n    return maxStr;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_162_string_to_md5
language: js
prompt: "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text'\
  \ is an empty string, return None.\n// >>> string_to_md5(\"Hello world\")\n// \"\
  3e25960a79dbc69b674cd4ec67a72c62\"\nfunction string_to_md5(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\"\
  );\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"\
  A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"\
  password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();"
completions: ["    var md5 = new jsSHA(\"SHA-256\", \"TEXT\");\n    md5.update(text);\n\
    \    return md5.digest(\"HEX\");\n}\n", "    if(text === \"\"){\n        return\
    \ null;\n    }\n    var md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n\
    \    return md5sum.digest('hex');\n}\n", "    if(text === \"\"){\n        return\
    \ null;\n    }\n    var md5sum = crypto.createHash('md5');\n    md5sum.update(text);\n\
    \    return md5sum.digest('hex');\n}\n", "    var md5 = null;\n    if(text !=\
    \ null && text != \"\"){\n        md5 = crypto.createHash('md5').update(text).digest('hex');\n\
    \    }\n    return md5;\n}\n", "    if(text === \"\"){\n        return null;\n\
    \    }\n    return crypto.createHash('md5').update(text).digest('hex');\n}\n",
  "    var md5 = null;\n    if(text != \"\"){\n        md5 = crypto.createHash('md5').update(text).digest('hex');\n\
    \    }\n    return md5;\n}\n", "    if(text === \"\"){\n        return null;\n\
    \    }\n    var hash = crypto.createHash('md5');\n    hash.update(text);\n   \
    \ return hash.digest('hex');\n}\n", "    var md5sum = crypto.createHash('md5');\n\
    \    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n", "    var md5\
    \ = null;\n    if(text != null && text != \"\"){\n        md5 = crypto.createHash('md5').update(text).digest('hex');\n\
    \    }\n    return md5;\n}\n", "  var md5 = null;\n  if(text != null && text.length\
    \ > 0){\n    md5 = crypto.createHash('md5').update(text).digest('hex');\n  }\n\
    \  return md5;\n}\n", "  if(text === \"\"){\n    return null;\n  }\n  var md5\
    \ = new jsSHA(\"SHA-256\", \"TEXT\");\n  md5.update(text);\n  return md5.digest(\"\
    HEX\");\n}\n", "    var md5 = '';\n    if(text){\n        md5 = crypto.createHash('md5').update(text).digest('hex');\n\
    \    }\n    return md5;\n}\n", "    var md5 = new jsSHA(\"SHA-256\", \"TEXT\"\
    );\n    md5.update(text);\n    return md5.digest(\"HEX\");\n}\n", "  if(text ===\
    \ \"\"){\n    return null;\n  }\n  var md5sum = crypto.createHash('md5');\n  md5sum.update(text);\n\
    \  return md5sum.digest('hex');\n}\n", "    var md5sum = crypto.createHash('md5');\n\
    \    md5sum.update(text);\n    return md5sum.digest('hex');\n}\n", "    var md5sum\
    \ = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n\
    }\n", "  if(text == \"\"){\n    return null;\n  }\n  var md5sum = crypto.createHash('md5');\n\
    \  md5sum.update(text);\n  return md5sum.digest('hex');\n}\n", "    var md5sum\
    \ = crypto.createHash('md5');\n    md5sum.update(text);\n    return md5sum.digest('hex');\n\
    }\n", "  if(text === \"\"){\n    return null;\n  }\n  var hash = crypto.createHash('md5');\n\
    \  hash.update(text);\n  return hash.digest('hex');\n}\n", "    var md5 = null;\n\
    \    if(text != null && text != \"\"){\n        md5 = crypto.createHash('md5').update(text).digest('hex');\n\
    \    }\n    return md5;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, w = b,\
    \ d = c;\n  if(!isFinite(a)) a = b = c = NaN;\n  else if(Math.abs(b) >= Math.abs(c))\n\
    \  {\n    if(a > b) a = b;\n    else b = c;\n  }\n  else\n  {\n    if(a < c) a\
    \ = c;\n    else c = b;\n  }\n  if(isNaN(a) || isNaN(b) || isNaN(c) || isNaN(+v))\
    \ return NaN;\n  if(isFinite(v))\n  {\n    if(v < 0) v = -v;\n    if(v < w) w\
    \ = v;\n    if(v < d) d = v;\n  }\n  return +v === w ? w : (w + Math.abs(v - w))\
    \ / (Math.abs(v) + Math.abs(w));\n}\n", "  return sortBy(l, function(i){return\
    \ i});\n}\n", "  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3]\
    \ + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a,2) + Math.pow(b,2));\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if(len%2) return l[len/2];\n    var\
    \ mid = Math.floor(len/2);\n    return (l[mid-1] + l[mid])/2;\n}\n", "    var\
    \ n = l.length;\n    if(n < 1) return undefined;\n    if(n === 1) return l[0];\n\
    \    var mid = Math.floor(n/2);\n    return median(l[mid]) < median(l[mid-1])\
    \ ? l[mid] : l[mid-1];\n}\n", "    var sortArr = l.slice().sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = sortArr.length;\n    if(len % 2\
    \ === 0){\n        return sortArr[(len - 1) / 2];\n    }\n    return sortArr[len\
    \ / 2];\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ ~~(l.length / 2));\n}\n", "  var l = l.slice(0),\n      n = l.length,\n    \
    \  a = Math.floor(n / 2),\n      b = n - a,\n      c = l[a],\n      d = l[b];\n\
    \  return c + ((d < 0.5) ? d : ((d > 0.5) ? d : 0.5));\n}\n", "    var n = l.length,\
    \ a = +l[0], b = +l[1], c = +l[2], v = a, i = (n - 1) >> 1;\n    if(!arguments.length)\
    \ return v;\n    while(--i >= 0) if((v = a[i] + b + c) < v) c = v, a = b, b =\
    \ v; else b = v, a = v;\n    return a + (n - 1) / 2;\n}\n", "  var n = l.length;\n\
    \  if(n < 1) return undefined;\n  var a = l[0], b = l[1], c = l[2], d = l[3],\
    \ e = l[4];\n  if(n % 2 == 0) return (a+b+c+d+e)/4;\n  else return Math.sqrt((n-1)/2);\n\
    }\n", "    var l = l.slice(0),\n        len = l.length,\n        a,\n        sort,\n\
    \        i;\n\n    if (len % 2 === 0){\n        a = l[(len - 1) / 2];\n      \
    \  sort = function(a, b){\n            return a - b;\n        };\n    } else {\n\
    \        a = l[(len - 1) / 2];\n        sort = function(a, b){\n            return\
    \ b - a;\n        };\n    }\n\n    for (i = 0; i < len; i++){\n        if (i >\
    \ 0 && l[i] > a){\n            l[i] = sort(l[i - 1], a);\n        } else if (i\
    \ < len - 1 && l[i] < a){\n            l[i] = sort(a, l[i + 1]);\n        }\n\
    \    }\n\n    return l[len / 2 - 1];\n}\n", "    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n\
    \    if(l.length % 2){\n        return l[half];\n    }else{\n        return (l[half\
    \ - 1] + l[half]) / 2;\n    }\n}\n", "  var n = l.length, a = (+l[0] + +l[1] +\
    \ +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n}\n", "  var n = l.length, a = (+l[0] + +l[1] + +l[2])\
    \ / 3, b = (+l[3] + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a, 2)\
    \ + Math.pow(b, 2));\n}\n", "    var l = l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if(len%2==0){\n        return\
    \ l[(len/2) - 1];\n    }else{\n        return (l[len/2-1] + l[len/2]) / 2;\n \
    \   }\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ ~~(l.length / 2));\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return l[(len\
    \ / 2) - 1];\n  }\n  else{\n    return l[(len / 2)];\n  }\n}\n", "    var n =\
    \ l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n    if(m\
    \ === 0) return a;\n    m += 1;\n    while(m < n){\n        a = +l[m];\n     \
    \   b = +l[m + 1];\n        c = +l[m + 2];\n        m = Math.max(a, b, c);\n \
    \   }\n    return (a + b + c) / 2;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", " \
    \ var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2) return l[(len/2)-1];\n  else return (l[len/2] + l[(len/2)-1])/2;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

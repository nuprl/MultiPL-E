name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, w = b,\
    \ d = c;\n  if(!isFinite(a)) a = b = c = NaN;\n  else if(Math.abs(b) >= Math.abs(c))\n\
    \  {\n    if(a > b) a = b;\n    else b = c;\n  }\n  else\n  {\n    if(a < c) a\
    \ = c;\n    else c = b;\n  }\n  if(isNaN(a) || isNaN(b) || isNaN(c) || isNaN(+v))\
    \ return NaN;\n  if(isFinite(v))\n  {\n    if(v < 0) v = -v;\n    if(v < w) w\
    \ = v;\n    if(v < d) d = v;\n  }\n  return +v === w ? w : (w + Math.abs(v - w))\
    \ / (Math.abs(v) + Math.abs(w));\n}\n", "  return sortBy(l, function(i){return\
    \ i});\n}\n", "  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3]\
    \ + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a,2) + Math.pow(b,2));\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if(len%2) return l[len/2];\n    var\
    \ mid = Math.floor(len/2);\n    return (l[mid-1] + l[mid])/2;\n}\n", "    var\
    \ n = l.length;\n    if(n < 1) return undefined;\n    if(n === 1) return l[0];\n\
    \    var mid = Math.floor(n/2);\n    return median(l[mid]) < median(l[mid-1])\
    \ ? l[mid] : l[mid-1];\n}\n", "    var sortArr = l.slice().sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = sortArr.length;\n    if(len % 2\
    \ === 0){\n        return sortArr[(len - 1) / 2];\n    }\n    return sortArr[len\
    \ / 2];\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ ~~(l.length / 2));\n}\n", "  var l = l.slice(0),\n      n = l.length,\n    \
    \  a = Math.floor(n / 2),\n      b = n - a,\n      c = l[a],\n      d = l[b];\n\
    \  return c + ((d < 0.5) ? d : ((d > 0.5) ? d : 0.5));\n}\n", "    var n = l.length,\
    \ a = +l[0], b = +l[1], c = +l[2], v = a, i = (n - 1) >> 1;\n    if(!arguments.length)\
    \ return v;\n    while(--i >= 0) if((v = a[i] + b + c) < v) c = v, a = b, b =\
    \ v; else b = v, a = v;\n    return a + (n - 1) / 2;\n}\n", "  var n = l.length;\n\
    \  if(n < 1) return undefined;\n  var a = l[0], b = l[1], c = l[2], d = l[3],\
    \ e = l[4];\n  if(n % 2 == 0) return (a+b+c+d+e)/4;\n  else return Math.sqrt((n-1)/2);\n\
    }\n", "    var l = l.slice(0),\n        len = l.length,\n        a,\n        sort,\n\
    \        i;\n\n    if (len % 2 === 0){\n        a = l[(len - 1) / 2];\n      \
    \  sort = function(a, b){\n            return a - b;\n        };\n    } else {\n\
    \        a = l[(len - 1) / 2];\n        sort = function(a, b){\n            return\
    \ b - a;\n        };\n    }\n\n    for (i = 0; i < len; i++){\n        if (i >\
    \ 0 && l[i] > a){\n            l[i] = sort(l[i - 1], a);\n        } else if (i\
    \ < len - 1 && l[i] < a){\n            l[i] = sort(a, l[i + 1]);\n        }\n\
    \    }\n\n    return l[len / 2 - 1];\n}\n", "    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n\
    \    if(l.length % 2){\n        return l[half];\n    }else{\n        return (l[half\
    \ - 1] + l[half]) / 2;\n    }\n}\n", "  var n = l.length, a = (+l[0] + +l[1] +\
    \ +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n}\n", "  var n = l.length, a = (+l[0] + +l[1] + +l[2])\
    \ / 3, b = (+l[3] + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a, 2)\
    \ + Math.pow(b, 2));\n}\n", "    var l = l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if(len%2==0){\n        return\
    \ l[(len/2) - 1];\n    }else{\n        return (l[len/2-1] + l[len/2]) / 2;\n \
    \   }\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ ~~(l.length / 2));\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return l[(len\
    \ / 2) - 1];\n  }\n  else{\n    return l[(len / 2)];\n  }\n}\n", "    var n =\
    \ l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n    if(m\
    \ === 0) return a;\n    m += 1;\n    while(m < n){\n        a = +l[m];\n     \
    \   b = +l[m + 1];\n        c = +l[m + 2];\n        m = Math.max(a, b, c);\n \
    \   }\n    return (a + b + c) / 2;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", " \
    \ var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2) return l[(len/2)-1];\n  else return (l[len/2] + l[(len/2)-1])/2;\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[(len/2)-1] + l[len/2])/2;\n  }\n}\n", "  return sortBy(l, function(x){\n\
    \    return x;\n  }).length / 2;\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n\
    \  return (n>1)?((a+b)/2):((l[n-2]+l[n-1])/2);\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[(len / 2) - 1];\n  }\n  else{\n    return ((l[(len / 2) - 1] + l[len\
    \ / 2]) / 2);\n  }\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n\
    \        return l[len/2];\n    }\n    var mid = Math.floor(len/2);\n    return\
    \ l[mid-1] + median(l[mid]);\n}\n", "  return l.sort(function(a, b){\n    return\
    \ a - b;\n  }).slice(0, ~~(l.length / 2))[~~(l.length / 2)];\n}\n", "  var n =\
    \ l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2):((l[n-2]+l[n-1])/2);\n\
    }\n", "    var l = l.slice(0),\n        len = l.length,\n        sortedArr = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        });\n    if(len%2) return sortedArr[len/2];\n\
    \    return sortedArr[len/2-1] + sortedArr[len/2];\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0] || 0;\n}\n",
  "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n \
    \ if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b\
    \ === c) return (a % m === 0) && (b % m === 0) && (a % m === b % m) ? m : NaN;\n\
    \  if(a % m === 0) return m === 1 ? a : NaN;\n  if(b % m === 0) return m === 2\
    \ ? b : NaN;\n  return NaN;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n  \
    \  return l[(len/2) - 1];\n  }\n  else{\n    return (l[(len/2)-1] + l[len/2])/2;\n\
    \  }\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n        return\
    \ l[(len / 2) - 1];\n    }\n    return l[(len / 2)];\n}\n", "  var n = l.length,\
    \ a = l[0], b = l[1], c = l[2], m = +Infinity;\n  for(var i = 0; i < n; i++){\n\
    \    if(l[i] < m){ m = l[i]; }\n  }\n  if(m === +Infinity){ return a; }\n  if(m\
    \ === -Infinity){ return b; }\n  if(a < b){ a = b; b = m; }\n  if(c < m){ c =\
    \ m; m = b; }\n  if(a === b){ return a === c ? Infinity : m; }\n  if(a < c){ a\
    \ = c; c = m; }\n  return m * (a + b) / 2;\n}\n", "  var l = l.slice(0),\n   \
    \   n = l.length,\n      a = Math.floor(Math.sqrt(n)),\n      b = Math.ceil(n\
    \ / 2),\n      c = l[b],\n      d = l[b + 1],\n      m = Math.ceil(n / 4);\n \
    \ if(n % 2 == 0){\n    return l[(a+b)/2];\n  }\n  if(m == 0){\n    return c;\n\
    \  }\n  if(m == n){\n    return d;\n  }\n  if((Math.abs(c - d) < Math.abs(c -\
    \ m)) || (Math.abs(c - d) < Math.abs(d - m))){\n    return c;\n  }\n  return d;\n\
    }\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, i = (n - 1)\
    \ >> 1;\n  if(a === b){\n    return v;\n  }\n  if(a > b){\n    while(i < n){\n\
    \      a = v; b = c; c = +l[i++];\n      if(a >= b){\n        v = b;\n      }else{\n\
    \        v = a;\n      }\n    }\n  }else{\n    while(i < n){\n      a = c; b =\
    \ v; c = +l[i++];\n      if(a >= b){\n        v = b;\n      }else{\n        v\
    \ = a;\n      }\n    }\n  }\n  return v;\n}\n", "  return l.sort(function(a, b){return\
    \ a - b})[Math.floor(l.length / 2)];\n}\n", "  var l = l.slice(0),\n      n =\
    \ l.length, \n      a = Math.floor(n / 2),\n      b = n - a,\n      c = l[b],\n\
    \      d = l[a];\n  return d + (c < d ? -1 : 1) * (l[b] - c);\n}\n", "  var n\
    \ = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, i = (n - 1) >> 1;\n  if(a\
    \ === b){\n    return v;\n  }\n  if(a > b){\n    while(i < n){\n      a = v; b\
    \ = c; c = +l[i++];\n      if(a >= b){\n        v = b;\n      }else{\n       \
    \ v = a;\n      }\n    }\n  }else{\n    while(i < n){\n      a = c; b = v; c =\
    \ +l[i++];\n      if(a >= b){\n        v = b;\n      }else{\n        v = a;\n\
    \      }\n    }\n  }\n  return v;\n}\n", "  var n = l.length, a = (+l[0]) || 0,\
    \ b = (+l[n - 1]) || 0;\n  return (a < b) ? a : b;\n}\n", "  var n = l.length,\
    \ a = +l[0], b = +l[n-1];\n  return (n>1)?(a+b)/2:(a>b)? a:b;\n}\n", "  var l\
    \ = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len % 2){\n    return l[(len/2) - 1];\n  }\n  else{\n    return\
    \ (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n", "  return l.sort(function(a, b){\n\
    \    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0]\n}\n", "  var l\
    \ = l.slice(0),\n      n = l.length, \n      a = Math.floor(n / 2),\n      b =\
    \ n - a,\n      c = l[a],\n      d = l[b];\n  return c + ((d < 0.5) ? -d : d)\
    \ * 0.5;\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n\
    \ / 2),\n      b = n - a,\n      c = l[a],\n      d = l[b];\n  return c == undefined\
    \ ? d : ((d > c ? d + 0.5 : c - 0.5) + Math.sqrt((d - c) * (d - c) + (c - a) *\
    \ (c - a) + (b - a) * (b - a))) / 2;\n}\n", "    var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.min(a, b, c);\n    if(m === a) return(a);\n \
    \   if(m === b) return(b);\n    if(m === c) return(c);\n    if(n < 3) return +l[0];\n\
    \    if(n < 5) return +l[n > 2 ? 1 : 2];\n    return +l[n > 3 ? 1 : 3];\n}\n},{}],4:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = Array.isArray;\n", "  var l = l.slice(0),\n   \
    \   n = l.length,\n      a = Math.floor(n / 2),\n      b = n - a,\n      i, x;\n\
    \  if(b === 0) return l[a];\n  for(i = a + 1, x = l[b]; i < n; i++, b--, x = l[b]){\n\
    \    if(x < l[a]) return l[a];\n  }\n  return l[a];\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, ~~(l.length / 2));\n}\n", "    var l =\
    \ l.slice();\n    l.sort(function(a, b){\n        return a - b;\n    });\n   \
    \ var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n        return\
    \ l[half];\n    }else{\n        return (l[half - 1] + l[half]) / 2.0;\n    }\n\
    }\n", "  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n\
    }\n", "    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a,\
    \ b, c);\n    if(m === a)  return a;\n    if(m === b) return b;\n    if(m ===\
    \ c) return c;\n    return m;\n}\n", "    var l = l.slice(0),\n        len = l.length,\n\
    \        mid = Math.floor(len / 2),\n        med = new Array(mid);\n    \n   \
    \ for(var i = 0; i < mid; i++){\n        med[i] = l[i];\n    }\n    \n    for(i\
    \ = len - 1; i >= 0; i--){\n        med[i] = l[len - i - 1];\n    }\n    \n  \
    \  return med;\n}\n", "  return l.sort(function(a, b){return a - b})[Math.floor(l.length\
    \ / 2)];\n}\n", "    var n = l.length, a = l[0], b = l[1], c = l[2], d = l[3],\
    \ e = l[4];\n    if(n < 1) return a;\n    if(n < 2) return b;\n    if(n < 3) return\
    \ c;\n    if(n < 4) return d;\n    if(n < 5) return e;\n    var i = Math.floor(n/2),\
    \ m = (n + i) / 2, l = a; \n    a = b; \n    b = c; \n    c = d;\n    d = e;\n\
    \    e = l; \n    l = m; \n    m = i; \n    i = n;\n    return l = a + (b - a)\
    \ * ((c + d) / 2) + (e - m) * ((a - e) / 2);\n}\n", "    var l = l.slice();\n\
    \    l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len%2) return l[len/2];\n    var mid = Math.floor(len/2);\n    return\
    \ (l[mid-1] + l[mid])/2;\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n\
    \  }\n  else{\n    return (l[len/2-1] + l[len/2])/2\n  }\n}\n", "    var l = l.sort(function(a,\
    \ b){return a - b});\n    var mid = l.length / 2;\n    if(l.length % 2) return\
    \ l[mid];\n    else return (\n        ((l[mid] + l[mid - 1]) / 2) +\n        ((l[mid\
    \ - 1] + l[mid]) / 2)\n    );\n}\n", "    var l = l.slice(0),\n        len = l.length,\
    \ \n        mid = Math.floor(len / 2),\n        med = new Array(mid);\n    \n\
    \    med.sort(function(a, b){\n        return a - b;\n    });\n    \n    for(var\
    \ i = 0; i < mid; i++){\n        med.push(l[i]);\n    }\n    \n    return med[mid];\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2 == 1){\n    return l[(len/2) - 1];\n  }\n \
    \ else{\n    return (l[(len/2) - 1] + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return l[len/2];\n\
    \  }else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  var n = l.length,\
    \ a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return (a < b) ? a : b;\n}\n", " \
    \ var n = l.length, a = l[0], b = l[1], c = l[2], d = l[3], e = l[4];\n  var f\
    \ = a==b?a:Math.abs(a-c), g = Math.abs(b-d), h = Math.abs(c-e);\n  return (f+g+h)/3;\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2) return l[len/2];\n  if(len%2) return (l[len/2-1]\
    \ + l[len/2])/2;\n  return l[len/2];\n}\n", "  var l = l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n\
    \  if(len%2==0) return (l[len/2-1] + l[len/2])/2;\n  else return (l[len/2-1] +\
    \ l[len/2])/2;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m\
    \ = Math.max(a, b, c);\n  return (m === b && m === c) ? m : (m + Math.min(a, b,\
    \ c)) / 2;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a,\
    \ b, c);\n  if(m === a) return(a);\n  if(m === b) return(b);\n  if(m === c) return(c);\n\
    \  if(b > c) return (a > b) ? a : c;\n  if(b < c) return (b > a) ? b : c;\n  return\
    \ (a > b) ? a : b;\n}", "    var l = l.slice(0),\n        len = l.length,\n  \
    \      mid = Math.floor(len / 2),\n        med = new Array(mid),\n        count\
    \ = 0;\n    \n    while (len--){\n        med[count++] = l[len];\n    }\n    \n\
    \    med.sort(function(a, b){\n        return a - b;\n    });\n    \n    return\
    \ med[Math.floor(med.length / 2)];\n}\n", "    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n\
    \    if(l.length % 2)\n        return l[half];\n    return ((l[half - 1] + l[half])\
    \ / 2);\n}\n", "    var l = l.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    var len = l.length;\n    if(len%2==0){\n        return l[(len/2) -\
    \ 1];\n    }\n    else if(len%2==1){\n        return l[(len/2) - 2] + l[(len/2)\
    \ - 1];\n    }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v\
    \ = a, i = (n - 1) >> 1;\n  if(n < 8){\n    return v;\n  }\n  if(a === b){\n \
    \   return n === 1 ? (v = l[0], i) : v;\n  }\n  if(a > b){\n    v = b;\n  }\n\
    \  else{\n    v = a;\n  }\n  if(isFinite(v)){\n    for(; i < n; i++){\n      if(isFinite(a)){\
    \ a = +l[i]; }\n      if(isFinite(b)){\n        b = +l[i];\n        if(a > b &&\
    \ isFinite(c)){ c = +l[i]; }\n      }\n    }\n    if(isFinite(a) && isFinite(b)\
    \ && isFinite(c)){\n      v = (a * n + c) / n;\n    }\n  }\n  return v;\n}\n",
  "  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?(a+b)/2:(a>b)? a:b;\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if (len % 2 === 0){\n        return\
    \ l[(len / 2) - 1];\n    }\n    var mid = Math.floor(len / 2);\n    var median\
    \ = l[mid];\n    \n    if (len % 2 === 1){\n        return median;\n    }\n  \
    \  \n    return median;\n}\n", "    var sortArr = l.slice();\n    sortArr.sort(function(a,b){\n\
    \        return a - b;\n    });\n    var len = sortArr.length;\n    if(len % 2){\n\
    \        return sortArr[len/2];\n    }else{\n        return (sortArr[len/2] +\
    \ sortArr[len/2-1])/2;\n    }\n}\n", "  var l = l.slice(0); // copy the list\n\
    \  l.sort(); //Sort the list\n  var mid = Math.floor(l.length / 2); // find the\
    \ mid point\n  return l[mid];\n}\n", "    var n = l.length, a = (+l[0]) || 0,\
    \ b = (+l[n - 1]) || 0, aMedian = +Infinity, aCount = 0;\n    for(var i = 0; i\
    \ < n; i++){\n        var v = +l[i];\n        if(v === a) aCount++;\n        else\
    \ if(v > a) aMedian = a;\n        else aMedian = v;\n        a = v;\n    }\n \
    \   return aCount ? aMedian / aCount : aMedian;\n}\n", "  var n = l.length, a\
    \ = +l[0], b = +l[n - 1], m = +l[n / 2], sum = a + b + m;\n  if (sum % 2 === 0)\
    \ return m / 2;\n  else return (a + b) / 2;\n}\n", "  return l.sort(function(a,\
    \ b){return a - b})[Math.floor(l.length / 2)];\n}\n", "  var n = l.length, a =\
    \ +l[0], b = +l[n - 1], m = +l[n - 2];\n  return (m == 0 ? (a + b) / 2 : m ==\
    \ 1 ? a : b < m ? b : m) ? NaN : ((a - m) / (m + Math.abs(m))) * ((a > b) ? 1\
    \ : -1);\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a\
    \ - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len/2) -\
    \ 1];\n  }\n  else{\n    return (l[(len/2)-1] + l[len/2]) / 2;\n  }\n}\n", " \
    \   var l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len\
    \ / 2),\n        med = new Array(mid);\n    \n    med.sort(function(a, b){\n \
    \       return a - b;\n    });\n    \n    for(var i = 0; i < mid; i++){\n    \
    \    med.push(l[i]);\n    }\n    \n    return med[Math.floor(len / 2)];\n}\n",
  "    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if(len % 2 === 0){\n        return l[(len\
    \ / 2) - 1];\n    }\n    return ((l[len / 2] + l[len / 2 - 1]) / 2);\n}\n", " \
    \ var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2;\n  }\n}\n", "    var l = l.slice(0), \n        len = l.length,\
    \ \n        mid = Math.floor(len / 2), \n        med = new Array(mid);\n    \n\
    \    med.sort(function(a, b){\n        return a - b;\n    });\n    \n    for(var\
    \ i = 0; i < mid; i++){\n        med.push(l[i]);\n    }\n    \n    return med[Math.floor(len\
    \ / 2)];\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a\
    \ - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len/2)-1];\n  else\
    \ return (l[len/2-1] + l[len/2])/2;\n}\n", "    var l = l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = l.length;\n    if(len%2 == 0){\n\
    \        return l[(len/2) - 1];\n    }\n    return l[(len/2) - 1 + (len%2)];\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2 == 0){\n    return l[(len/2) - 1];\n  }\n \
    \ else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "    var n = l.length,\
    \ a = l[0], b = l[1], c = l[2], m = +Infinity;\n    for(var i = 0; i < n; i++){\n\
    \        var x = l[i];\n        if(x == a || x == b) continue;\n        else if(x\
    \ < m) m = x;\n        else if(x > m) a = x;\n    }\n    return m == +Infinity\
    \ ? NaN : m;\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n\
    \    return (l[len-1] + l[len-2]) / 2;\n  }\n}\n", "  var n = l.length;\n  if(n\
    \ < 1) return undefined;\n  if(n === 1) return l[0];\n  if(n === 2) return Math.max(l[0],\
    \ l[1]);\n  if(n % 2 === 0) return l[n / 2 - 1];\n  var m = Math.floor((n + 1)\
    \ / 2);\n  return (l[m] + l[n - m]) / 2;\n}\n", "  var sortArr = l.slice().sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = sortArr.length;\n  if(len % 2 ===\
    \ 0){\n    return sortArr[(len - 1) / 2];\n  }\n  else{\n    return sortArr[len\
    \ / 2 - 1];\n  }\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a =\
    \ Math.floor(n / 2),\n      b = n - a,\n      c = new Array(a),\n      i;\n\n\
    \  for (i = 0; i < a; i++) c[i] = l[i];\n  for (i = 0; i < b; i++) c[i + a] =\
    \ l[i + a];\n\n  return (c[a + 1] + c[a ]) / 2;\n}\n", "    var l = l.slice();\n\
    \    l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len % 2 === 0){\n        return l[(len / 2) - 1];\n    }\n    var mid\
    \ = Math.floor(len / 2);\n    return l[mid];\n}\n", "    var l = l.slice(0),\n\
    \        len = l.length,\n        mid = Math.floor(len / 2),\n        med = new\
    \ Array(mid);\n    \n    med.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    \n    for(var i = 0; i<mid; i++){\n        med[i] = l[i];\n    }\n\
    \    \n    for(var i = mid; i<len; i++){\n        med[i] = l[len - i - 1];\n \
    \   }\n    \n    return med;\n}\n", "    var n = l.length;\n    if(n < 1) return\
    \ undefined;\n    if(n === 1) return l[0];\n    if(n % 2 === 0) return l[n / 2\
    \ - 1];\n    var m = Math.floor((n + 1) / 2);\n    return l[m] + (l[n - 1] - l[m])\
    \ * ((n / 2) >> 1);\n}\n", "  var l = l.slice(0),\n      n = l.length,\n     \
    \ a = Math.floor(n / 2),\n      b = n - a,\n      c = l[a],\n      d = l[b];\n\
    \  return d === c ? (l[a] + l[b]) / 2 : Math.sqrt((c % d) * (d % c)) / 2;\n}\n",
  "    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n    } else {\n\
    \        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n", "  var n = l.length\n \
    \ if(n < 2) return NaN\n  if(n === 1) return l[0]\n  if(n === 2) return (l[0]\
    \ + l[1]) / 2\n  if(n % 2 === 0) return Math.ceil((l[n / 2 - 1] + l[n / 2]) /\
    \ 2)\n  return l[n / 2]\n}\n", "  var s = l.sort(function(a, b){return a - b});\n\
    \  return s[Math.floor(s.length / 2)];\n}\n", "  var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === 0){\n    return a;\n\
    \  }\n  if(m === 1){\n    return b;\n  }\n  if(m === 2){\n    return c;\n  }\n\
    \  if(b === c){\n    return m * (m + 1) >> 1;\n  }\n  return (a * m + b * m) >>\
    \ 1;\n}\n", "    var sortArr = l.slice().sort(function(a,b){\n        return a-b;\n\
    \    });\n    var len = sortArr.length;\n    if(len%2==0){\n        return sortArr[(len-1)/2]\n\
    \    }else{\n        return (sortArr[len/2-1]+sortArr[len/2])/2\n    }\n}\n",
  "  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n\
    \  return Math.sqrt(a * a + b * b);\n}\n", "    var l = l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var mid = l.length / 2;\n    if(l.length\
    \ % 2){\n        return l[mid];\n    }else{\n        return (l[mid-1] + l[mid])\
    \ / 2;\n    }\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).pop();\n\
    }\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len =\
    \ l.length;\n  if(len%2==0){\n    return l[(len/2)-1];\n  }\n  else{\n    return\
    \ (l[(len-1)/2] + l[len/2]) / 2;\n  }\n}\n", "    var n = l.length, a = l[0],\
    \ b = l[1], c = l[2], m = +Infinity;\n    for(var i = 0; i < n; i++){\n      \
    \  var d = a%b+c%b-a%c-c%b+b%a;\n        if(Math.abs(d) < m) m = d;\n    }\n \
    \   return m;\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n   \
    \     return a - b;\n    });\n    var len = l.length;\n    if (len % 2 === 0){\n\
    \        return l[(len / 2) - 1];\n    }\n    var mid = Math.floor(len / 2);\n\
    \    return l[mid];\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n \
    \   return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n\
    \  var mid = Math.floor(len/2);\n  var median = l[mid];\n  if(len%2) return median;\n\
    \  else return (median+l[mid-1])/2;\n}\n", "  var l = l.slice(0); // copy the\
    \ list\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n\
    \  }\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if (len % 2 === 0){\n        return\
    \ l[len/2];\n    } else {\n        return (l[len/2] + l[len/2-1])/2;\n    }\n\
    }\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, ~~(l.length\
    \ / 2));\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if(l.length %\
    \ 2){\n        return l[half];\n    } else {\n        return (l[half - 1] + l[half])\
    \ / 2;\n    }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[(len\
    \ / 2) - 1];\n  }\n  else{\n    return (l[len / 2] + l[len / 2 - 1]) / 2;\n  }\n\
    }\n", "  return sortBy(l, function(x){return x});\n}\n", "  var n = l.length,\
    \ a = +l[0], b = +l[n-1];\n  return (n>1)? Math.ceil((b+a)/2) : Math.ceil((b-a)/2);\n\
    }\n", "    var l = l.sort(function(a, b){\n        return a - b;\n    });\n  \
    \  var len = l.length;\n    if(len % 2 === 0){\n        return l[(len / 2) - 1];\n\
    \    }\n    return l[(len / 2)];\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n\
    }\n", "  var n = l.length;\n  if(n < 1) return undefined;\n  var a = l[0], b =\
    \ l[1], c = l[2], d = l[3], e = l[4];\n  var f = a>b?a:b;\n  var g = a>c?a:c;\n\
    \  var h = a>d?a:d;\n  var i = b>c?b:c;\n  var j = b>d?b:d;\n  var k = c>d?c:d;\n\
    \  var m = Math.min(f,g,h,i,j,k,m);\n  return m===f?(a>b?a:b) : (m===g?c:d);\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a,b){\n        return a - b;\n\
    \    });\n    var mid = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n\
    \    } else {\n        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n", "  var n\
    \ = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n\
    \  return Math.sqrt(a*b - Math.pow(a,2) + Math.pow(b,2));\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2)-1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n  }\n}\n",
  "  var sortArr = l.slice().sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = sortArr.length;\n  if(len % 2 === 0){\n    return sortArr[len/2];\n  }\n\
    \  else{\n    return (sortArr[len/2] + sortArr[len/2-1])/2;\n  }\n}\n", "  var\
    \ l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n    return\
    \ (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  var l = l.sort(function(a, b){\n \
    \   return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len/2)-1];\n\
    \  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n  }\n}\n", "    var n =\
    \ l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n    if(m\
    \ === 0) return a;\n    m += 1;\n    while(m < n){\n        a = +l[m];\n     \
    \   b = +l[m + 1];\n        c = +l[m + 2];\n        if(b <= a && a <= c && c <=\
    \ b){\n            m += 1;\n        }else{\n            break;\n        }\n  \
    \  }\n    return +l[m];\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "  var n = l.length;\n  if(n % 2 == 0)\n    return l[Math.floor(n /\
    \ 2)];\n  else\n    return (l[n / 2 - 1] + l[n / 2]) / 2;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len-1)/2 | 0];\n  }\n  else{\n    return l[(len-1)/2 | 0] +\n      (l[len/2-1]\
    \ + l[len/2| 0])/2;\n  }\n}\n", "  var s = l.slice(),\n      n = s.length,\n \
    \     a = s.sort();\n  return (n%2==0? a[Math.floor(n/2)] : (a[Math.floor(n/2)]+\
    \ a[Math.ceil(n/2)])/2)\n}\n", "  return l.sort(function(a, b){\n    return a\
    \ - b;\n  }).slice(0, ~~(l.length / 2));\n}\n", "    var l = l || [];\n    var\
    \ n = l.length;\n    if (n < 1) return undefined;\n    if (n === 1) return l[0];\n\
    \    var mid = Math.floor(n/2);\n    return l[mid] >= l[mid + 1] ? l[mid - 1]\
    \ : l[mid + 1];\n}\n", "    var l = l.slice(0),\n        len = l.length,\n   \
    \     sortedArr = l.slice().sort(function(a, b){\n            return a - b;\n\
    \        }),\n        mid = len / 2,\n        media = sortedArr[mid];\n    if(len\
    \ % 2){\n        media = sortedArr[mid-1];\n    }\n    return media;\n}\n", " \
    \   var l = l || [];\n    var sortedArr = l.slice().sort(function(a, b){\n   \
    \     return a - b;\n    });\n    var mid = sortedArr.length / 2;\n    if(sortedArr.length\
    \ % 2){\n        return sortedArr[mid];\n    }else{\n        return (sortedArr[mid-1]\
    \ + sortedArr[mid]) / 2;\n    }\n}\n", "  return l.sort(function(a, b){\n    return\
    \ a - b;\n  }).slice(0, Math.floor(l.length / 2));\n}\n", "    var sortArr = l.slice().sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = sortArr.length;\n    if(len\
    \ % 2 === 0){\n        return sortArr[(len - 1) / 2];\n    }\n    return sortArr[len\
    \ / 2];\n}\n", "  return l.sort(function(a, b){return a - b}).length % 2 ? l[(l.length\
    \ + 1)/2] : l[l.length/2];\n}\n", "  var l = l.slice(0),\n      n = l.length,\n\
    \      a = Math.floor(n / 2),\n      b = n - a,\n      c = l[a],\n      d = l[b];\n\
    \  return a + Math.round((c - d) / 2) + Math.round((a + b) / 2);\n}\n", "  var\
    \ n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n\
    \  return Math.sqrt(a * a + b * b);\n}\n", "  var n = l.length;\n  if(n < 1) return\
    \ undefined;\n  if(n === 0) return Infinity;\n  if(n === 1) return l[0];\n\n \
    \ var m = l[Math.floor(n/2)];\n  var m1 = l[Math.ceil(n/2)];\n  if(m === undefined)\
    \ return m1;\n  if(m1 === undefined) return m;\n\n  return (m+m1)/2;\n}\n", " \
    \ var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2])/2;\n  }\n}\n", "  var l = l.slice(0),\n  \
    \    n = l.length,\n      a = Math.floor(n/2),\n      b = Math.ceil(n/2),\n  \
    \    c = Math.ceil(Math.log(n)/Math.LN2);\n  return Math.pow(2,c*(a+b)/n) * Math.pow(2,c\
    \ - a/n) * l[Math.ceil(c)];\n}\n", "  var sortArr = l.slice().sort(function(a,b){\n\
    \    return a-b;\n  });\n  var len = sortArr.length;\n  if(len%2==0){\n    return\
    \ sortArr[len/2];\n  }\n  else{\n    return (sortArr[len/2]+sortArr[len/2-1])/2;\n\
    \  }\n}\n", "  var n = l.length;\n  if(n % 2 == 0)\n    return l[Math.floor(n\
    \ / 2)];\n  else\n    return (l[Math.floor(n / 2)] + l[Math.floor(n / 2) - 1])\
    \ / 2;\n}\n", "    var n = l.length, a = n>>1;\n    if(n < 8) return l[n/2];\n\
    \    if(n%2) return (l[n-1] + l[n/2]) / 2;\n    var m = l[Math.floor(a/2)];\n\
    \    return m+(l[Math.ceil(a/2)] - m);\n}\n", "  var n = l.length;\n  if(n % 2\
    \ == 0)\n    return l[Math.floor(n / 2)];\n  else\n    return (l[n / 2 - 1] +\
    \ l[n / 2]) / 2;\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n\
    \  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n  else{\n    return (l[len\
    \ / 2] + l[len / 2 - 1]) / 2;\n  }\n}\n", "  return l.sort(function(a, b){return\
    \ a - b})[Math.floor(l.length / 2)];\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n\
    \    if(med == l[l.length/2] || med == -l[l.length/2]) return med;\n    return\
    \ med;\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if(l.length %\
    \ 2) return l[half];\n    else return (0.5 * (l[half-1] + l[half]));\n}\n", " \
    \ var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, i = (n - 1) >> 1;\n\
    \  if(a === b){\n    return v;\n  }\n  if(a > b){\n    while(i < n){\n      a\
    \ = v; b = c; c = +l[i++];\n      if(a >= b){\n        v = b;\n      }else{\n\
    \        v = a;\n      }\n    }\n  }else{\n    while(i < n){\n      a = c; b =\
    \ v; c = +l[i++];\n      if(a >= b){\n        v = b;\n      }else{\n        v\
    \ = a;\n      }\n    }\n  }\n  return v;\n}\n", "  var n = l.length, a = l[0],\
    \ b = l[1], c = l[2], m = +Infinity;\n  if(n%2==0){\n    if(n < 1){\n      return\
    \ a;\n    }\n    m = (a+b)/2;\n  }\n  else{\n    if(n < 2){\n      return a;\n\
    \    }\n    m = (b+c)/2;\n  }\n  if(Math.abs(m) < Math.abs(m)){\n    return m;\n\
    \  }\n  if(m > 0){\n    return b;\n  }\n  return c;\n}", "  var sortArr = l.slice().sort(function(a,b){\n\
    \    return a-b;\n  });\n  var len = sortArr.length;\n  if(len%2 === 0){\n   \
    \ return sortArr[len/2];\n  }\n  else{\n    return (sortArr[len/2-1] + sortArr[len/2])/2;\n\
    \  }\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if(len % 2){\n        return l[len/2];\n\
    \    }\n    var mid = Math.floor(len / 2);\n    return l[mid];\n}\n", "    var\
    \ l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len / 2),\n\
    \        med = new Array(mid);\n    \n    med.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    \n    for(var i = 0; i < mid; i++){\n        med.push(l[i]);\n\
    \    }\n    \n    return med[mid];\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "   \
    \ var sortArr = l.slice().sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = sortArr.length;\n    if(len % 2 === 0){\n        return sortArr[(len\
    \ - 1) / 2]\n    }\n    return sortArr[len / 2 - 1];\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len % 2){\n    return l[(len/2) - 1];\n  }\n  else{\n    return l[len/2];\n\
    \  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2==0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2])/2;\n  }\n}\n", "    var l = l.slice();\n \
    \   l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len % 2 === 0){\n        return l[len/2];\n    }\n    var mid = Math.floor(len/2);\n\
    \    return (l[mid-1] + l[mid])/2;\n}\n", "    var n = l.length, a = +l[0], b\
    \ = +l[1], c = +l[2], m = Math.min(a, b, c);\n    if(m === a)  return a;\n   \
    \ if(m === b) return b;\n    if(m === c) return c;\n    return m;\n}\n", "  return\
    \ l.sort(function(a, b){\n    return a - b;\n  }).slice(1,Math.ceil(l.length /\
    \ 2))[Math.floor(l.length / 2)];\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n\
    \  return (n>1)? Math.ceil((b+a)/2) : Math.ceil((b-a)/2);\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0] || 0;\n}\n",
  "  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n.length / 2),\n\
    \      b = n.length - a,\n      c = l[b],\n      d = l[a];\n  return a === b ?\
    \ d : (c < d ? c : d);\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2],\
    \ m = Math.max(a, b, c);\n  return (m === b && m === c) ? m : (m + Math.sqrt(m\
    \ * m + Math.abs(n - m)));\n}\n", "  var n = l.length, a = l[0], b = l[1], c =\
    \ l[2], m = +Infinity;\n  if(n%2) return m; // if even, return the average of\
    \ the two middle values\n  if(n%2==0) return (a+b)/2;\n  while(n--){\n    if(l[n]<m)\
    \ m = l[n];\n  }\n  return m; // if odd, return the middle value\n}\n", "  var\
    \ l = l.slice(0),\n      len = l.length,\n      a = +l.sort(function(a, b){\n\
    \        return a - b;\n      }).pop(),\n      b = +l.sort(function(a, b){\n \
    \       return b - a;\n      }).pop(),\n      c = +l.sort(function(a, b){\n  \
    \      return b - a;\n      }).pop(),\n      d = +(l.sort(function(a, b){\n  \
    \      return b - a;\n      }).pop() || len / 2);\n\n  return d + (a - b) * ((c\
    \ + d) / 2);\n}\n", "    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m\
    \ = Math.max(a, b, c);\n    if(m === 0) return a;\n    if(m === 1) return b;\n\
    \    if(m === 2) return c;\n    if(m % 2 === 0) return (a + b) / 2;\n    return\
    \ (b + c) / 2;\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n  \
    \      return a - b;\n    });\n    var len = l.length;\n    if (len % 2 === 0){\n\
    \        return l[len/2];\n    }\n    var mid = Math.floor(len / 2);\n    return\
    \ (l[mid-1] + l[mid]) / 2;\n}\n", "  var sortArr = l.slice().sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = sortArr.length;\n  if(len % 2 ===\
    \ 0){\n    return sortArr[len/2];\n  }\n  else{\n    return (sortArr[len/2] +\
    \ sortArr[len/2-1])/2;\n  }\n}\n", "    var l = l.sort(function(a, b){\n     \
    \   return a - b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n\
    \        return l[(len / 2) - 1];\n    }\n    return l[len / 2];\n}\n", "  var\
    \ l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[(len/2)\
    \ - 1];\n  else return (l[len/2-1] + l[len/2]) / 2;\n}\n", "  var n = l.length,\
    \ a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === c)return\
    \ m; // linear\n  if(a === b) return m; // linear\n  if(a === c) return n%2? m\
    \ : (c>0? m : n%2? n : 0);\n  if(b === c) return n%2? m : (n>0? m : n%2? n : 0);\n\
    \  if(b <= a && b >= c)return n%2? m : (n>0? m : n%2? n : 0);\n  if(c <= a &&\
    \ c >= b)return n%2? m : (n>0? m : n%2? n : 0);\n  if(b <= a || b <= c || c <=\
    \ b)return n%2? m : (n>0? m : n%2? n : 0);\n  return n%2? m : (n>0? m : n%2? n\
    \ : 0);\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ Math.floor(l.length / 2));\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var mid = l.length / 2;\n  var median;\n  if(l.length % 2){\n\
    \    median = l[mid];\n  } else {\n    median = (l[mid - 1] + l[mid]) / 2;\n \
    \ }\n  return median;\n}\n", "  var sortArr = l.slice().sort(function(a, b){\n\
    \    return a - b;\n  });\n  var len = sortArr.length;\n  if(len % 2 === 0){\n\
    \    return sortArr[len / 2 - 1];\n  }\n  else{\n    return sortArr[(len - 1)\
    \ / 2];\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n\
    \  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "    var l =\
    \ l.slice();\n    l.sort(function(a, b){\n        return a - b;\n    });\n   \
    \ var half = Math.floor(l.length / 2);\n    if(l.length % 2) return l[half];\n\
    \    else return (l[half-1] + l[half]) / 2.0;\n}\n", "  var sortArr = l.slice().sort(function(a,b){\n\
    \    return a-b;\n  });\n  var len = sortArr.length;\n  if(len%2==0){\n    return\
    \ sortArr[(len-1)/2]\n  }\n  else{\n    return (sortArr[len/2-1] + sortArr[len/2])/2\n\
    \  }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len % 2){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "    var l = l.slice();\n \
    \   l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length\
    \ / 2);\n    if(l.length % 2){\n        return l[half];\n    }else{\n        return\
    \ (l[half - 1] + l[half]) / 2.0;\n    }\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }\n  else{\n    return ((l[len/2-1] + l[len/2]) / 2);\n  }\n}\n",
  "  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n  if(n < 1) return\
    \ m;\n  if(n === 0) return a;\n  if(b <= a && a <= c) return a;\n  if(a <= b)\
    \ if(a <= c) return a;\n  if(b <= c) return b;\n  if(c<= b) return c;\n  if(n%2==0)\
    \ return l[n/2];\n  if(n%2==1) return (l[n/2-1] + l[n/2])/2;\n  while(n>1){\n\
    \    if((n % 2)==0) return l[(n-1)/2];\n    if((n % 2)==1) return (l[(n-1)/2-1]\
    \ + l[(n-1)/2])/2;\n    n--;\n  }\n  return m;\n}\n", "    var l = l.slice(0),\
    \ \n        len = l.length, \n        mid = Math.floor(len / 2), \n        med\
    \ = new Array(mid);\n    \n    med.sort(function(a, b){\n        return a - b;\n\
    \    });\n    \n    for(var i = 0; i < mid; i++){\n        med.push(l[i]);\n \
    \   }\n    \n    return med[Math.floor(len / 2)];\n}\n", "    var l = l.slice(0),\n\
    \        len = l.length, \n        mid = Math.floor(len / 2),\n        arr = [];\n\
    \    \n    arr.push(l[mid]);\n    \n    for(var i = 0; i < mid; i++){\n      \
    \  arr.push(l[i]);\n    }\n    \n    arr.push(l[mid]);\n    \n    return arr.reduce(function(a,\
    \ b){\n        return a + b;\n    }) / 3;\n}\n", "  var l = l.sort(function(a,\
    \ b){return a - b});\n  var mid = l.length / 2;\n  var median;\n  if(l.length\
    \ % 2){\n    median = l[mid];\n  } else {\n    median = (l[mid - 1] + l[mid])\
    \ / 2;\n  }\n  return median;\n}\n", "    var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.max(a, b, c);\n    if(m === 0) return a;\n    m += 1;\n\
    \    while(m < n){\n        a = +l[m];\n        b = +l[m + 1];\n        c = +l[m\
    \ + 2];\n        if(b <= a && a <= c && c <= b){\n            m += 1;\n      \
    \  }else{\n            break;\n        }\n    }\n    return +l[m - 1];\n}\n",
  "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n \
    \ if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b\
    \ === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a > b)\
    \ return a % m;\n  if(a < b) return b % m;\n  if(c < a) return c % m;\n  if(c\
    \ > a) return m % c;\n  return m;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", " \
    \ var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return (a < b)\
    \ ? a : b;\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n    if(med.length%2==0){\n\
    \        return med.pop();\n    }\n    return med;\n}\n", "  var l = l.sort(function(a,\
    \ b){return a - b});\n  var mid = l.length / 2;\n  var median;\n  if(l.length\
    \ % 2){\n    median = l[mid];\n  } else {\n    median = (l[mid - 1] + l[mid])\
    \ / 2;\n  }\n  return median;\n}\n", "    var sortArr = l.slice().sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = sortArr.length;\n    if(len\
    \ % 2 === 0){\n        return sortArr[len / 2 - 1];\n    }\n    return sortArr[(len\
    \ - 1) / 2];\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2 == 0){\n    return l[(len/2)\
    \ - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", " \
    \   var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var len\
    \ = l.length;\n    if(len%2==0){\n        return l[(len/2) - 1];\n    }\n    else{\n\
    \        return (l[(len/2)-1] + l[len/2]) / 2;\n    }\n}\n", "  var l = l.slice(0),\n\
    \      n = l.length, \n      a = Math.floor(n / 2),\n      b = n - a,\n      c\
    \ = l[b],\n      d = l[a];\n  return Math.abs(c - d) < .5 ? d : c;\n}\n", "  var\
    \ l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = l.length;\n  if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n  else{\n\
    \    return (l[len / 2] + l[len / 2 - 1]) / 2;\n  }\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(1,Math.ceil(l.length / 2))[0];\n}\n", " \
    \ var n = l.length, a = l[0], b = l[1], c = l[2], d = l[3], e = l[4];\n  if(n\
    \ % 2 == 0){\n    return (a+b+c+d+e)/4;\n  }\n  else{\n    return Math.sqrt((a\
    \ + b) * (a + c) * (a + d) * (b + c) * (b + d) * (c + d) * (c + e) * (d + e));\n\
    \  }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_87_get_row
language: js
prompt: "//You are given a 2 dimensional data, as a nested lists,\n// which is similar\
  \ to matrix, however, unlike matrices,\n// each row may contain a different number\
  \ of columns.\n// Given lst, and integer x, find integers x in the list,\n// and\
  \ return list of tuples, [(x1, y1), (x2, y2) ...] such that\n// each tuple is a\
  \ coordinate - (row, columns), starting with 0.\n// Sort coordinates initially by\
  \ rows in ascending order.\n// Also, sort coordinates of the row by columns in descending\
  \ order.\n// Examples:\n// >>> get_row([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6],\
  \ [1, 2, 3, 4, 5, 1]], 1)\n// [[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]\n// >>> get_row([],\
  \ 1)\n// []\n// >>> get_row([[], [1], [1, 2, 3]], 3)\n// [[2, 2]]\nfunction get_row(lst,\
  \ x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_row;\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1,\
  \ 6], [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]);\n  assert.deepEqual(candidate([[1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]], 2),[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1],\
  \ [5, 1]]);\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6],\
  \ [1, 1, 3, 4, 5, 6], [1, 2, 1, 4, 5, 6], [1, 2, 3, 1, 5, 6], [1, 2, 3, 4, 1, 6],\
  \ [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 0], [2, 1], [2, 0], [3, 2], [3, 0], [4, 3],\
  \ [4, 0], [5, 4], [5, 0], [6, 5], [6, 0]]);\n  assert.deepEqual(candidate([], 1),[]);\n\
  \  assert.deepEqual(candidate([[1]], 2),[]);\n  assert.deepEqual(candidate([[],\
  \ [1], [1, 2, 3]], 3),[[2, 2]]);\n}\n\ntest();"
completions: ["    if(!lst) return [];\n    var row = [];\n    var rows = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n \
    \           row.push(i);\n            rows.push(row);\n            row = [];\n\
    \        }\n    }\n    rows.push(row);\n    return rows;\n}\n", "  var result\
    \ = [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    var rowResult\
    \ = [];\n    for(var j=0; j<row.length; j++){\n      if(row[j] == x){\n      \
    \  rowResult.push([i, j]);\n      }\n    }\n    result.push(rowResult);\n  }\n\
    \  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  if(lst.length == 1){\n    return [[0, lst[0].length-1]];\n\
    \  }\n  if(lst.length == 2){\n    return [[lst[0][0], lst[1].length-1], [lst[1][0],\
    \ lst[0].length-1]];\n  }\n  let row = [[0, lst[0].length-1]];\n  let col = [lst[0].length-1,\
    \ lst[1].length-1];\n  let row1 = get_row(lst[0], col[0]);\n  let row2 = get_row(lst[1],\
    \ col[1]);\n  row1.push(...row2);\n  return row1;\n}\n", "    var result = [];\n\
    \    var row = [];\n    var col = [];\n    var row_index = 0;\n    var col_index\
    \ = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i]\
    \ === x){\n            result.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n        }\n        else if(row_index === 0){\n  \
    \          row_index++;\n            col_index = 0;\n        }\n        else{\n\
    \            col_index++;\n        }\n    }\n    if(row_index === 0){\n      \
    \  result.push([row_index, col_index]);\n    }\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result =\
    \ [];\n    var row = [];\n    var col = [];\n    var row_index = 0;\n    var col_index\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n  \
    \          result.push([row_index, col_index]);\n            row_index++;\n  \
    \          col_index = 0;\n        }\n        else{\n            row.push(lst[i][0]);\n\
    \            col.push(lst[i][1]);\n        }\n    }\n    result.push([row_index,\
    \ col_index]);\n    return result;\n}\n", "    var row = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push([i,\
    \ lst[i].indexOf(x)]);\n        }\n    }\n    row.sort(function(a, b){\n     \
    \   return b[1] - a[1];\n    });\n    row.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    return row;\n}\n", "    var result = [];\n    var\
    \ row = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            result.push(row);\n        \
    \    row = [];\n        }\n    }\n    if(row.length > 0){\n        result.push(row);\n\
    \    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0; i < row.length; i++){\n        result.push([row[i], i]);\n\
    \    }\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    if(!lst.length) return [];\n    var result = [];\n\
    \    var row = [];\n    var row_len = 0;\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \            row_len++;\n        }\n    }\n    result.push(row);\n    while(row_len){\n\
    \        row = [];\n        row_len = 0;\n        for(var i = 0, len = lst.length;\
    \ i < len; i++){\n            if(lst[i].indexOf(x) !== -1){\n                row.push(i);\n\
    \                row_len++;\n            }\n        }\n        result.push(row);\n\
    \    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    var col = [];\n\
    \    var row_index = 0;\n    var col_index = 0;\n    var row_len = lst.length;\n\
    \    var col_len = lst[0].length;\n    for(var i=0; i<row_len; i++){\n       \
    \ if(lst[i][0] == x){\n            result.push([i, 0]);\n            row_index++;\n\
    \            row.push(lst[i][1]);\n        }\n        else{\n            row.push(lst[i][1]);\n\
    \        }\n    }\n    for(var i=0; i<col_len; i++){\n        if(row_index ==\
    \ 0){\n            result.push([0, i]);\n            col_index++;\n          \
    \  col.push(lst[0][i]);\n        }\n        else{\n            col.push(lst[0][i]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    for(var i=0; i<result.length; i++){\n        result.push([result[i][0], result[i][1]]);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        var row = lst[i];\n        var rowLen\
    \ = row.length;\n        for(var j = 0; j < rowLen; j++){\n            if(row[j]\
    \ === x){\n                result.push([i, j]);\n            }\n        }\n  \
    \  }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    var col = [];\n\
    \    var rows = [];\n    var cols = [];\n    var row_index = 0;\n    var col_index\
    \ = 0;\n    var row_len = lst.length;\n    var col_len = lst[0].length;\n    for(var\
    \ i=0; i<row_len; i++){\n        if(lst[i][0] == x){\n            result.push([i,\
    \ 0]);\n            rows.push(i);\n            for(var j=0; j<col_len; j++){\n\
    \                col.push(j);\n            }\n        }\n    }\n    rows = rows.sort();\n\
    \    cols = cols.sort();\n    for(var i=0; i<rows.length; i++){\n        for(var\
    \ j=0; j<cols.length; j++){\n            row.push(lst[rows[i]][cols[j]]);\n  \
    \      }\n        result.push(row);\n        row = [];\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var row = [];\n    var col = [];\n    var rows\
    \ = [];\n    var cols = [];\n    var row_index = 0;\n    var col_index = 0;\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            result.push([row_index, col_index]);\n            result.push(lst[i]);\n\
    \            row_index++;\n        }\n        else if(row_index > 0){\n      \
    \      rows.push(row);\n            row = [];\n            row_index = 0;\n  \
    \      }\n    }\n    if(row_index > 0){\n        rows.push(row);\n    }\n    for(var\
    \ i = 0, len = rows.length; i < len; i++){\n        for(var j = 0, len2 = rows[i].length;\
    \ j < len2; j++){\n            col.push(rows[i][j]);\n        }\n        cols.push(col);\n\
    \        col = [];\n    }\n    result.sort(function(a, b){\n        var a_row\
    \ = a.shift();\n        var b_row = b.shift();\n        return a_row - b_row;\n\
    \    });\n    result.sort(function(a, b){\n        var a_col = a.shift();\n  \
    \      var b_col = b.shift();\n        return b_col - a_col;\n    });\n    result.forEach(function(item){\n\
    \        for(var i = 0, len = item.length; i < len; i++){\n            result.push([item[i][0],\
    \ item[i][1]]);\n        }\n    });\n    return result;\n}\n", "  let row = []\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n \
    \     row.push([i, lst[i].indexOf(x)])\n    }\n  }\n  row.sort((a,b) => b[1] -\
    \ a[1])\n  row.sort((a,b) => b[0] - a[0])\n  return row\n}\n", "    var res =\
    \ [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return b - a;\n    });\n    for(var i=0; i<row.length; i++){\n\
    \        for(var j=0; j<lst[row[i]].length; j++){\n            res.push([row[i],\
    \ j]);\n        }\n    }\n    res.sort(function(a, b){\n        return b[1] -\
    \ a[1];\n    });\n    return res;\n}\n", "    let row = [];\n    let row_index\
    \ = 0;\n    let col_index = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] === x){\n            row.push([row_index, col_index]);\n     \
    \       row_index++;\n            col_index = 0;\n        }\n        else{\n \
    \           col_index++;\n        }\n    }\n    row.push([row_index, col_index]);\n\
    \    return row;\n}\n", "    var row = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push([i, lst[i].indexOf(x)])\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return b[1] - a[1]\n\
    \    });\n    row.sort(function(a, b){\n        return a[0] - b[0]\n    });\n\
    \    return row;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        var row_x = row[x];\n        var row_y\
    \ = row[lst.length-x-1];\n        result.push([row_x, row_y]);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "  var res =\
    \ [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    for(var\
    \ j=0; j<row.length; j++){\n      if(row[j] == x){\n        res.push([i, j]);\
    \ break;\n      }\n    }\n  }\n  res.sort(function(a, b){\n    return a[0] - b[0]\
    \ || a[1] - b[1];\n  });\n  res.sort(function(a, b){\n    return b[0] - a[0] ||\
    \ b[1] - a[1];\n  });\n  return res;\n}\n", "    var res = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n        \
    \    res.push([i, lst[i].indexOf(x)])\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return a[1] - b[1]\n    });\n    res.sort(function(a, b){\n   \
    \     return b[0] - a[0]\n    });\n    return res;\n}\n", "    if(!lst.length)\
    \ return [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n      \
    \  if(lst[i].indexOf(x) !== -1){\n            row.push([i, lst[i].indexOf(x)]);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return row;\n}\n", "    let row = [];\n    let row_index = 0;\n    let col_index\
    \ = 0;\n    let row_len = lst.length;\n    let col_len = lst[0].length;\n    for(let\
    \ i = 0; i < row_len; i++){\n        if(lst[i][0] == x){\n            row.push([i,\
    \ col_index]);\n            row_index++;\n        }\n        else{\n         \
    \   while(row_index > 0 && lst[row_index - 1][col_index] > x){\n             \
    \   col_index--;\n            }\n            row.push([i, col_index]);\n     \
    \       row_index--;\n        }\n        col_index++;\n    }\n    return row;\n\
    }\n", "  var row = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i][0] ==\
    \ x){\n      row.push([i, lst[i][1]]);\n    }\n  }\n  row.sort(function(a, b){\n\
    \    return b[1] - a[1];\n  });\n  row.sort(function(a, b){\n    return a[0] -\
    \ b[0];\n  });\n  return row;\n}\n", "    var res = [];\n    var row = [];\n \
    \   var col = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            col.push(lst[i].indexOf(x));\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    col.sort(function(a, b){\n        return b - a;\n    });\n    for(var i=0;\
    \ i<row.length; i++){\n        res.push([row[i], col[i]]);\n    }\n    return\
    \ res;\n}\n", "    var result = [];\n    var row = [];\n    var row_index = 0;\n\
    \    var col_index = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i] === x){\n            result.push([row_index, col_index]);\n\
    \            row_index++;\n            col_index = 0;\n        }\n        else{\n\
    \            col_index++;\n        }\n    }\n    if(row_index > 0){\n        result.push([row_index,\
    \ col_index]);\n    }\n    result.sort(function(a, b){\n        return a[0] -\
    \ b[0];\n    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    return result;\n}\n", "    let result = [];\n    for(let i = 0;\
    \ i < lst.length; i++){\n        let row = [];\n        for(let j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] === x){\n                row.push([i, j]);\n\
    \            }\n        }\n        result.push(row);\n    }\n    result.sort((a,\
    \ b) => a[0] - b[0]);\n    result.sort((a, b) => b[1] - a[1]);\n    return result;\n\
    }\n", "    if(lst.length < 1){\n        return [];\n    }\n    var row = [];\n\
    \    var row_index = 0;\n    var column_index = 0;\n    var row_indexes = [];\n\
    \    var column_indexes = [];\n    var row_length = 0;\n    var column_length\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !==\
    \ -1){\n            row_indexes.push(row_index);\n            column_indexes.push(column_index);\n\
    \            row_length++;\n        }\n        if(lst[i].length === column_length){\n\
    \            row_index++;\n            column_index = 0;\n        }\n        column_length\
    \ = lst[i].length;\n    }\n    row_indexes.push(row_index);\n    column_indexes.push(column_index);\n\
    \    row_length++;\n    column_index = 0;\n    for(var i=0; i<row_indexes.length;\
    \ i++){\n        row.push([row_indexes[i], column_indexes[i]]);\n    }\n    row.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return a[1] - b[1];\n    });\n    return row;\n}\n", "    var result =\
    \ [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row =\
    \ lst[i];\n        var rowLen = row.length;\n        if(rowLen === x){\n     \
    \       result.push([i, row]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n\
    \    var rowLen = row.length;\n    for(var j = 0; j < rowLen; j++){\n      if(row[j]\
    \ == x){\n        result.push([i, j]);\n        break;\n      }\n    }\n  }\n\
    \  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    for(var\
    \ j=0; j<row.length; j++){\n      if(row[j] === x){\n        result.push([i, j]);\
    \ \n        break;\n      }\n    }\n  }\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  result.sort(function(a, b){\n    return b[1] - a[1];\n\
    \  });\n  return result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n\
    \  var row = [];\n  var row_index = 0;\n  var column_index = 0;\n  for(var i =\
    \ 0, len = lst.length; i < len; i++){\n    if(lst[i] === x){\n      row.push([row_index,\
    \ column_index]);\n      row_index++;\n      column_index = 0;\n    }\n    else{\n\
    \      column_index++;\n    }\n  }\n  if(row_index > 0){\n    row.push([row_index,\
    \ column_index]);\n  }\n  return row;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        var row = lst[i];\n        for(var j=0; j<row.length;\
    \ j++){\n            if(row[j] == x){\n                result.push([i, j]);\n\
    \                break;\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var col = [];\n    var row_index = 0;\n    var\
    \ col_index = 0;\n    var row_len = lst.length;\n    var col_len = lst[0].length;\n\
    \    while(row_index < row_len){\n        while(col_index < col_len){\n      \
    \      if(lst[row_index][col_index] == x){\n                result.push([row_index,\
    \ col_index]);\n            }\n            col_index++;\n        }\n        col_index\
    \ = 0;\n        row_index++;\n    }\n    result.sort(function(a, b){\n       \
    \ return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ for(var i = 0; i < lst.length; i++){\n        var row = lst[i];\n        for(var\
    \ j = 0; j < row.length; j++){\n            if(row[j] == x){\n               \
    \ result.push([i, j]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push(i);\n        }\n    }\n    result.push(row);\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n         \
    \   row.push(i);\n        }\n    }\n    result.push(row);\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[2] - b[2];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  var row = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    if(lst[i].indexOf(x) !== -1){\n      row.push(i);\n    }\n  }\n  row.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  for(var i = 0, len = row.length; i < len; i++){\n\
    \    result.push([row[i], row.length]);\n  }\n  result.sort(function(a, b){\n\
    \    return a[0] - b[0];\n  });\n  return result;\n}\n", "    var result = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n\
    \        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        var row = lst[i];\n        var rowLen = row.length;\n\
    \        for(var j = 0; j < rowLen; j++){\n            if(row[j] == x){\n    \
    \            result.push([i, j]);\n                break;\n            }\n   \
    \     }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        if(row.indexOf(x) != -1){\n      \
    \      result.push([i, row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "  let row =\
    \ [];\n  let row_index = 0;\n  let col_index = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] === x){\n      row.push([row_index, col_index]);\n    \
    \  row_index++;\n      col_index = 0;\n    }\n    else{\n      col_index++;\n\
    \    }\n  }\n  if(row_index === 0){\n    return [];\n  }\n  row.sort((a, b) =>\
    \ b[1] - a[1]);\n  row.sort((a, b) => a[0] - b[0]);\n  return row;\n}\n", "  \
    \  let row = [];\n    let row_index = 0;\n    let col_index = 0;\n    let row_length\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] === x){\n\
    \            row.push([row_index, col_index]);\n            row_index++;\n   \
    \         row_length++;\n        }\n        else{\n            if(row_length){\n\
    \                col_index--;\n            }\n            else{\n            \
    \    col_index++;\n            }\n            row_length = 0;\n        }\n   \
    \ }\n    return row;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n           \
    \ row.push(i);\n        }\n    }\n    result.push(row);\n    for(var i=0; i<row.length;\
    \ i++){\n        var row = [];\n        for(var j=0; j<lst[row[i]].length; j++){\n\
    \            row.push([row[i], j]);\n        }\n        result.push(row);\n  \
    \  }\n    result.sort(function(a, b){\n        if(a[0] > b[0]) return 1;\n   \
    \     if(a[0] < b[0]) return -1;\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        if(a[1] > b[1]) return 1;\n        if(a[1] < b[1]) return -1;\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n\
    \      result.push([i, lst[i].indexOf(x)]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  return result;\n}\n", "  var result = [];\n  for(var\
    \ i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n    var rowLen\
    \ = row.length;\n    for(var j = 0; j < rowLen; j++){\n      if(row[j] === x){\n\
    \        result.push([i, j]);\n        break;\n      }\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "    var result = [];\n    var\
    \ row = [];\n    var row_index = 0;\n    var column_index = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([row_index,\
    \ column_index]);\n            row_index++;\n            column_index = 0;\n \
    \       }else{\n            column_index++;\n        }\n    }\n    if(row_index\
    \ > 0){\n        result.push([row_index, column_index]);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var row\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n \
    \           row.push([i, lst[i][1]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return row;\n}\n", "    let result =\
    \ [];\n    let row = [];\n    let column = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] === x){\n            result.push([i, 0]);\n       \
    \     row.push(i);\n            column.push(0);\n        }\n        else if(lst[i].length\
    \ > 0){\n            for(let j = 0; j < lst[i].length; j++){\n               \
    \ if(lst[i][j] === x){\n                    result.push([i, j]);\n           \
    \         row.push(i);\n                    column.push(j);\n                }\n\
    \            }\n        }\n    }\n    result.sort((a, b) => b[0] - a[0]);\n  \
    \  row.sort((a, b) => b - a);\n    column.sort((a, b) => b - a);\n    return result.map(e\
    \ => [row[e[0]], column[e[1]]]);\n}\n", "    var result = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        var row = lst[i];\n        for(var j=0; j<row.length;\
    \ j++){\n            if(row[j] === x){\n                result.push([i, j]);\n\
    \            }\n        }\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "    var res = [];\n    var row\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    row = row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i = 0, len = row.length; i\
    \ < len; i++){\n        for(var j = 0, len2 = lst[row[i]].length; j < len2; j++){\n\
    \            res.push([row[i], j]);\n        }\n    }\n    return res.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n}\n", "    var result = [];\n   \
    \ for(var i = 0; i < lst.length; i++){\n        var row = lst[i];\n        for(var\
    \ j = 0; j < row.length; j++){\n            if(row[j] === x){\n              \
    \  result.push([i, j]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    if(!lst)\
    \ return [];\n    var result = [];\n    for(var i=0; i<lst.length; i++){\n   \
    \     if(lst[i].indexOf(x) != -1){\n            result.push([i, lst[i].indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n     \
    \       result.push([i, row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push(i);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return b-a;\n    });\n    for(var i=0; i<row.length; i++){\n  \
    \      result.push([row[i], i]);\n    }\n    result.sort(function(a, b){\n   \
    \     return a[0]-b[0];\n    });\n    return result;\n}\n", "    var row = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        var item = lst[i];\n\
    \        if(item.indexOf(x) !== -1){\n            row.push(i);\n        }\n  \
    \  }\n    row.sort(function(a, b){\n        return a - b;\n    });\n    row.sort(function(a,\
    \ b){\n        return b - a;\n    });\n    return row;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var result = [];\n  var row = [];\n  var row_len\
    \ = 0;\n  var col_len = 0;\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    var item = lst[i];\n    row_len++;\n    col_len = item.length;\n    for(var\
    \ j = 0; j < col_len; j++){\n      if(item[j] == x){\n        result.push([i,\
    \ j]);\n        break;\n      }\n    }\n  }\n  if(row_len == col_len){\n    result.push([row_len,\
    \ col_len]);\n  }\n  result.sort(function(a, b){\n    return b[0] - a[0];\n  });\n\
    \  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return result;\n\
    }\n", "  var result = [];\n  var row = [];\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i] === x){\n      result.push([i, lst[i]]);\n      row.push(lst[i]);\n\
    \    }\n  }\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n \
    \ row.sort(function(a, b){\n    return b - a;\n  });\n  for(var i=0; i<row.length;\
    \ i++){\n    result.push([i, row[i]]);\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    var rowLen\
    \ = row.length;\n    var colLen = lst[0].length;\n    var rowIndex = -1;\n   \
    \ var colIndex = -1;\n    for(var j=0; j<rowLen; j++){\n      if(row[j] == x){\n\
    \        rowIndex = j;\n        break;\n      }\n    }\n    for(var j=0; j<colLen;\
    \ j++){\n      if(rowIndex != -1 && row[j] == x){\n        colIndex = j;\n   \
    \     break;\n      }\n    }\n    if(rowIndex != -1 && colIndex != -1){\n    \
    \  result.push([rowIndex, colIndex]);\n    }\n  }\n  result.sort(function(a, b){\n\
    \    return a[0] - b[0];\n  });\n  result.sort(function(a, b){\n    return a[1]\
    \ - b[1];\n  });\n  return result;\n}\n", "    let row = [];\n    let row_index\
    \ = 0;\n    let col_index = 0;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i].indexOf(x) !== -1){\n            row.push([row_index, col_index]);\n\
    \            row_index++;\n            col_index = 0;\n        }\n        else{\n\
    \            col_index++;\n        }\n    }\n    return row;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var col = [];\n    var row_sorted = [];\n    var\
    \ col_sorted = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            result.push([row_index, col_index]);\n            row.push(lst[i]);\n\
    \            col.push(x);\n            row_index++;\n            col_index++;\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    row.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    col.sort(function(a, b){\n        return b[0] - a[0];\n    });\n    for(var\
    \ i = 0, len = row.length; i < len; i++){\n        row_sorted.push(row[i]);\n\
    \        col_sorted.push(col[i]);\n    }\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        var row = lst[i];\n\
    \        var rowResult = [];\n        for(var j = 0; j < row.length; j++){\n \
    \           if(row[j] == x){\n                rowResult.push([i, j]);\n      \
    \      }\n        }\n        result.push(rowResult);\n    }\n    result.sort(function(a,\
    \ b){\n        var aRow = a[0];\n        var bRow = b[0];\n        if(aRow < bRow){\n\
    \            return -1;\n        }\n        if(aRow > bRow){\n            return\
    \ 1;\n        }\n        return 0;\n    });\n    result.sort(function(a, b){\n\
    \        var aCol = a[1];\n        var bCol = b[1];\n        if(aCol < bCol){\n\
    \            return -1;\n        }\n        if(aCol > bCol){\n            return\
    \ 1;\n        }\n        return 0;\n    });\n    return result;\n}\n", "  let\
    \ row = [];\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ != -1){\n      row.push([i, lst[i].indexOf(x)]);\n    }\n  }\n  row.sort((a,b)\
    \ => b[1] - a[1]);\n  row.sort((a,b) => b[0] - a[0]);\n  return row;\n}\n", " \
    \   var result = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n  \
    \      var row = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i,\
    \ row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return result;\n}\n", "    if(!lst) return [];\n\
    \    var result = [];\n    var row = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    result.push(row);\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    var rows = [];\n    var cols = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n          \
    \  row.push(i);\n            for(j = 0; j < lst[i].length; j++){\n           \
    \     if(lst[i][j] === x){\n                    col.push(j);\n               \
    \ }\n            }\n            rows.push(row);\n            cols.push(col);\n\
    \            row = [];\n            col = [];\n        }\n    }\n    for(i = 0;\
    \ i < rows.length; i++){\n        for(j = 0; j < rows[i].length; j++){\n     \
    \       k = rows[i][j];\n            result.push([rows[k], cols[k]]);\n      \
    \  }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n  \
    \  });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        if(row[x]){\n            result.push([i,\
    \ row[x]]);\n        }\n    }\n    result.sort(function(a, b){\n        if(a[1]\
    \ < b[1]) return -1;\n        if(a[1] > b[1]) return 1;\n        return 0;\n \
    \   });\n    result.sort(function(a, b){\n        if(a[0] < b[0]) return -1;\n\
    \        if(a[0] > b[0]) return 1;\n        return 0;\n    });\n    return result;\n\
    }\n", "  var result = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ !== -1){\n      result.push([i, lst[i].indexOf(x)])\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1]\n  })\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0]\n  })\n  return result\n}\n", "    var result = [];\n    var row\
    \ = [];\n    var col = [];\n    var row_index = 0;\n    var col_index = 0;\n \
    \   for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n \
    \           result.push([row_index, col_index]);\n            row_index++;\n \
    \           col_index = 0;\n        }\n        else{\n            col_index++;\n\
    \        }\n    }\n    result.push([row_index, col_index]);\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        var row = lst[i];\n   \
    \     var rowLen = row.length;\n        if(rowLen === x){\n            result.push([i,\
    \ row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return result;\n}\n", "    var result = [];\n   \
    \ var row = [];\n    var row_len = 0;\n    for(var i = 0, len = lst.length; i\
    \ < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \            row_len++;\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n           \
    \ row_len++;\n        }\n    }\n    result.push(row);\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){", "    var result = [];\n    for(var i=0;\
    \ i<lst.length; i++){\n        var row = lst[i];\n        var row_x = row[x];\n\
    \        for(var j=0; j<row.length; j++){\n            if(row_x == j){\n     \
    \           result.push([i, j]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var res =\
    \ [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    if(row[x]){\n\
    \      res.push([i, row[x]]);\n    }\n  }\n  res.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  res.sort(function(a, b){\n    return a[0] - b[0];\n \
    \ });\n  return res;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n        }\n    }\n    row.sort(function(a, b){\n  \
    \      return a - b;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n\
    \        result.push([row[i], lst[row[i]].indexOf(x)]);\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            result.push([i, lst[i].indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "  let\
    \ row = []\n  let rows = []\n  let cols = []\n  for(let i = 0; i < lst.length;\
    \ i++){\n    let row = lst[i]\n    let rows = []\n    for(let j = 0; j < row.length;\
    \ j++){\n      if(row[j] === x){\n        rows.push([i, j])\n      }\n    }\n\
    \    row.sort(function(a, b){\n      return b[0] - a[0]\n    })\n    row.sort(function(a,\
    \ b){\n      return b[1] - a[1]\n    })\n    cols.push(row.reverse())\n  }\n \
    \ rows = rows.map(function(row){\n    return row.map(function(col){\n      return\
    \ col[0]\n    })\n  })\n  cols = cols.map(function(col){\n    return col.reverse()\n\
    \  })\n  rows = rows.map(function(row){\n    return row.map(function(col){\n \
    \     return col[1]\n    })\n  })\n  rows = rows.map(function(row){\n    return\
    \ row.map(function(col){\n      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n\
    \    return row.map(function(col){\n      return col[0]\n    })\n  })\n  rows\
    \ = rows.map(function(row){\n    return row.map(function(col){\n      return col[0]\n\
    \    })\n  })\n  rows = rows.map(function(row){\n    return row.map(function(col){\n\
    \      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n    return\
    \ row.map(function(col){\n      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n\
    \    return row.map(function(col){\n      return col[0]\n    })\n  })\n  rows\
    \ = rows.map(function(row){\n    return row.map(function(col){\n      return col[0]\n\
    \    })\n  })\n  rows = rows.map(function(row){\n    return row.map(function(col){\n\
    \      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n    return\
    \ row.map(function(col){\n      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n\
    \    return row.map(function(col){\n      return col[0]\n    })\n  })\n  rows\
    \ = rows.map(function(row){\n    return row.map(function(col){\n      return col[0]\n\
    \    })\n  })\n  rows = rows.map(function(row){\n    return row.map(function(col){\n\
    \      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n    return\
    \ row.map(function(col){\n      return col[0]\n    })\n  })\n  rows = rows.map(function(row){\n\
    \    return row.map(function(col){\n      return col[0]\n    })\n  })\n  rows\
    \ = rows.map(function(row){\n    return row.map(function(col){\n      return col[0]\n\
    \    })\n  })\n  rows = rows.map(function(row){\n    return ", "  var result =\
    \ [];\n  if(lst.length == 0){\n    return result;\n  }\n  var row = [];\n  var\
    \ row_len = lst[0].length;\n  for(var i=0; i<row_len; i++){\n    row.push([i,\
    \ lst[0][i]]);\n  }\n  row.sort(function(a, b){\n    return b[1] - a[1];\n  });\n\
    \  for(var i=0; i<row.length; i++){\n    if(row[i][0] == x){\n      result.push(row[i]);\n\
    \    }\n  }\n  result.sort(function(a, b){\n    return b[0] - a[0];\n  });\n \
    \ return result;\n}\n", "  let row = []\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i].indexOf(x) != -1){\n      row.push([i, lst[i].indexOf(x)])\n  \
    \  }\n  }\n  row.sort((a,b) => b[1] - a[1])\n  row.sort((a,b) => b[0] - a[0])\n\
    \  return row\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  var row =\
    \ [];\n  var row_index = 0;\n  var row_len = lst.length;\n  for(var i=0; i<row_len;\
    \ i++){\n    if(lst[i][0] == x){\n      row.push([i, lst[i][1]]);\n      row_index++;\n\
    \    }\n  }\n  if(row_index == 0){\n    return [];\n  }\n  if(row_index == 1){\n\
    \    return row;\n  }\n  var columns = [];\n  var column_index = 0;\n  var column_len\
    \ = row[0][1];\n  for(var j=0; j<column_len; j++){\n    column_index = 0;\n  \
    \  for(var k=0; k<row_index; k++){\n      if(row[k][column_index] > j){\n    \
    \    column_index++;\n      }\n    }\n    columns.push(j);\n  }\n  columns.sort(function(a,\
    \ b){\n    return b - a;\n  });\n  columns.reverse();\n  columns.unshift(0);\n\
    \  return columns;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = [];\n        for(var j=0; j<lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                row.push([i, j]);\n        \
    \    }\n        }\n        result.push(row);\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    let result\
    \ = [];\n    let row = [];\n    let col = [];\n    let row_index = 0;\n    let\
    \ col_index = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ === x){\n            result.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n        }\n        else if(row_index === 0){\n  \
    \          row_index++;\n            col_index = 0;\n        }\n        else if(col_index\
    \ === 0){\n            col_index++;\n        }\n        else if(row_index ===\
    \ lst[i].length){\n            row_index = 0;\n            col_index++;\n    \
    \    }\n        else if(col_index === lst[i].length){\n            row_index++;\n\
    \            col_index = 0;\n        }\n        else{\n            row_index++;\n\
    \            col_index++;\n        }\n    }\n    result.sort((a, b) => a[0] -\
    \ b[0]);\n    result.sort((a, b) => b[1] - a[1]);\n    return result;\n}\n", " \
    \ let row = []\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ !== -1){\n      row.push([i, lst[i].indexOf(x)])\n    }\n  }\n  row.sort((a,\
    \ b) => a[1] - b[1])\n  row.sort((a, b) => b[0] - a[0])\n  return row\n}\n", " \
    \   var res = [];\n    var row = [];\n    var rows = [];\n    var cols = [];\n\
    \    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push(i);\n            rows.push(row);\n            cols.push(lst[i].indexOf(x));\n\
    \        }\n    }\n    for(var i=0; i<rows.length; i++){\n        row = rows[i];\n\
    \        row.sort(function(a, b){\n            return b-a;\n        });\n    \
    \    row.sort(function(a, b){\n            return a-b;\n        });\n        for(var\
    \ j=0; j<cols.length; j++){\n            row.push(cols[j]);\n        }\n     \
    \   res.push(row);\n    }\n    return res;\n}\n", "  var result = [];\n  if(lst.length\
    \ == 0){\n    return result;\n  }\n  if(lst.length == 1){\n    return [[0, lst[0].length]];\n\
    \  }\n  if(lst.length == 2){\n    return [[0, lst[0].length], [lst[1].length,\
    \ 0]];\n  }\n  var row = [];\n  var rows = [];\n  var columns = [];\n  var column\
    \ = 0;\n  var row_index = 0;\n  var col_index = 0;\n  for(var i=0; i<lst.length;\
    \ i++){\n    row.push(lst[i]);\n    if(lst[i].length == x){\n      rows.push(row);\n\
    \      row = [];\n      columns.push(column);\n      column = 0;\n    }\n    else\
    \ if(lst[i].length > x){\n      row.push(lst[i].slice(0, x));\n      columns.push(column);\n\
    \      column = 0;\n    }\n    else{\n      column++;\n    }\n  }\n  if(row.length\
    \ != 0){\n    row.push(rows[rows.length-1]);\n    columns.push(column);\n  }\n\
    \  rows = [];\n  rows.push(row);\n  columns = [];\n  column = 0;\n  for(var i=0;\
    \ i<rows.length; i++){\n    for(var j=0; j<rows[i].length; j++){\n      if(rows[i][j].length\
    \ == x){\n        rows.push(rows[i]);\n        columns.push(column);\n       \
    \ column = 0;\n      }\n      else if(rows[i][j].length > x){\n        rows.push(rows[i].slice(0,\
    \ x));\n        columns.push(column);\n        column = 0;\n      }\n      else{\n\
    \        column++;\n      }\n    }\n  }\n  if(row.length != 0){\n    row.push(rows[rows.length-1]);\n\
    \    columns.push(column);\n  }\n  rows = [];\n  rows.push(row);\n  columns =\
    \ [];\n  column = 0;\n  for(var i=0; i<rows.length; i++){\n    for(var j=0; j<rows[i].length;\
    \ j++){\n      if(rows[i][j].length == x){\n        rows.push(rows[i]);\n    \
    \    columns.push(column);\n        column = 0;\n      }\n      else if(rows[i][j].length\
    \ > x){\n        rows.push(rows[i].slice(0, x));\n        columns.push(column);\n\
    \        column = 0;\n      }\n      else{\n        column++;\n      }\n    }\n\
    \  }\n  if(row.length != 0){\n    row.push(rows[rows.length-1]);\n    columns.push(column);\n\
    \  }\n  rows = [];\n  rows.push(row);\n  columns = [];\n  column = 0;\n  for(var\
    \ i=0; i<rows.length; i++){\n    for(var j=0; j<rows[i].length; j++){\n      if(rows[i][j].length\
    \ == x){\n        rows.push(rows[i]);\n", "    if(!lst) return [];\n    var result\
    \ = [];\n    var row = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        var item = lst[i];\n        if(item === x) result.push(row);\n      \
    \  row.push(item);\n    }\n    result.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    return result;\n}\n", "  var result = [];\n  var row = [];\n  var\
    \ col = [];\n  var row_index = 0;\n  var col_index = 0;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] === x){\n      result.push([row_index, col_index]);\n \
    \     row_index++;\n      col_index = 0;\n    }\n    else{\n      col_index++;\n\
    \    }\n  }\n  if(row_index > 0){\n    result.push([row_index, col_index]);\n\
    \  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  return result;\n}\n", "    if(lst.length\
    \ < 1) return [];\n    var result = [];\n    var row = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0; i < row.length; i++){\n        result.push([row[i], row.length-i-1]);\n\
    \    }\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n        }\n    }\n    result.push(row);\n    for(var\
    \ i = 0, len = row.length; i < len; i++){\n        row[i] = row[i].sort(function(a,\
    \ b){\n            return b - a;\n        });\n        row[i].sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var col = [];\n    var rows = [];\n   \
    \ var cols = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n            result.push([row_index,\
    \ col_index]);\n            rows.push(row);\n            cols.push(col);\n   \
    \         row = [];\n            col = [];\n            row_index++;\n       \
    \     col_index++;\n        }else{\n            row.push(lst[i][0]);\n       \
    \     col.push(lst[i][1]);\n        }\n    }\n    result.push([row_index, col_index]);\n\
    \    rows.push(row);\n    cols.push(col);\n    rows.sort(function(a, b){\n   \
    \     return a[0] - b[0];\n    });\n    cols.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    for(var i=0; i<rows.length; i++){\n        result.push([rows[i][0],\
    \ cols[i][1]]);\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n       \
    \ if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "    var row = [];\n    var row_index = 0;\n    var\
    \ col_index = 0;\n    var row_length = 0;\n    for(var i=0; i<lst.length; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push([row_index, col_index]);\n\
    \            row_index++;\n            row_length++;\n        }\n        if(row_index\
    \ == row_length){\n            row_index = 0;\n            col_index++;\n    \
    \    }\n    }\n    row.sort(function(a, b){\n        return a[0] - b[0];\n   \
    \ });\n    row.sort(function(a, b){\n        return a[1] - b[1];\n    });\n  \
    \  return row;\n}\n", "    var result = [];\n    var row = [];\n    var row_index\
    \ = 0;\n    var col_index = 0;\n    for(var i=0; i<lst.length; i++){\n       \
    \ if(lst[i] === x){\n            result.push([row_index, col_index]);\n      \
    \      row_index++;\n            col_index = 0;\n        }else{\n            col_index++;\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            row.push(i);\n        }\n    }\n    row.sort(function(a, b){\n  \
    \      return a - b;\n    });\n    for(var i = 0, len = row.length; i < len; i++){\n\
    \        result.push([row[i], lst[row[i]].indexOf(x)]);\n    }\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var\
    \ result = [];\n    var row = [];\n    var row_len = 0;\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n       \
    \     row.push(i);\n            row_len++;\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        var col = [];\n\
    \        for(var j = 0, len2 = lst[row[i]].length; j < len2; j++){\n         \
    \   col.push(lst[row[i]][j]);\n        }\n        result.push(col);\n    }\n \
    \   result.sort(function(a, b){\n        var a_len = a.length;\n        var b_len\
    \ = b.length;\n        for(var i = 0, len = a_len; i < len; i++){\n          \
    \  if(a[i] < b[i]){\n                return -1;\n            }\n            if(a[i]\
    \ > b[i]){\n                return 1;\n            }\n        }\n        for(var\
    \ i = 0, len = b_len; i < len; i++){\n            if(a[i] < b[i]){\n         \
    \       return 1;\n            }\n            if(a[i] > b[i]){\n             \
    \   return -1;\n            }\n        }\n        return 0;\n    });\n    result.sort(function(a,\
    \ b){\n        var a_len = a.length;\n        var b_len = b.length;\n        for(var\
    \ i = 0, len = a_len; i < len; i++){\n            if(a[i] < b[i]){\n         \
    \       return -1;\n            }\n            if(a[i] > b[i]){\n            \
    \    return 1;\n            }\n        }\n        for(var i = 0, len = b_len;\
    \ i < len; i++){\n            if(a[i] < b[i]){\n                return 1;\n  \
    \          }\n            if(a[i] > b[i]){\n                return -1;\n     \
    \       }\n        }\n        return 0;\n    });\n    return result;\n}\n", " \
    \   var res = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n \
    \       if(lst[i].indexOf(x) != -1){\n            row.push(i);\n        }\n  \
    \  }\n    row.sort(function(a, b){\n        return b - a;\n    });\n    for(var\
    \ i=0; i<row.length; i++){\n        for(var j=0; j<lst[row[i]].length; j++){\n\
    \            res.push([row[i], j]);\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return res;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var col = [];\n    var row_index = 0;\n    var\
    \ col_index = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n      \
    \  if(lst[i] === x){\n            result.push([row_index, col_index]);\n     \
    \       row_index++;\n            col_index = 0;\n        }\n        else{\n \
    \           row.push(lst[i]);\n            col_index++;\n        }\n    }\n  \
    \  result.push([row_index, col_index]);\n    return result;\n}\n", "    var res\
    \ = [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    row = row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i=0; i<row.length; i++){\n\
    \        for(var j=0; j<lst[row[i]].length; j++){\n            res.push([row[i],\
    \ j]);\n        }\n    }\n    return res;\n}\n", "  var result = [];\n  var row\
    \ = [];\n  var col = [];\n  var row_index = 0;\n  var col_index = 0;\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i] === x){\n      result.push([row_index,\
    \ col_index]);\n      row_index++;\n      col_index = 0;\n    }\n    else{\n \
    \     col[col_index] = lst[i];\n      col_index++;\n    }\n  }\n  if(row_index\
    \ > 0){\n    result.push([row_index, col_index]);\n  }\n  return result;\n}\n",
  "    var result = [];\n    for(var i=0; i<lst.length; i++){\n        var row = lst[i];\n\
    \        for(var j=0; j<row.length; j++){\n            if(row[j] == x){\n    \
    \            result.push([i, j]); \n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "  var res =\
    \ [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) != -1){\n\
    \      res.push([i, lst[i].indexOf(x)]);\n    }\n  }\n  res.sort(function(a, b){\n\
    \    return b[1] - a[1];\n  });\n  res.sort(function(a, b){\n    return a[0] -\
    \ b[0];\n  });\n  return res;\n}\n", "  if(lst.length == 0){\n    return [];\n\
    \  }\n  if(lst.length == 1){\n    return [lst[0]];\n  }\n  var row = [];\n  var\
    \ rows = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) !=\
    \ -1){\n      row.push(i);\n      rows.push(row);\n      row = [];\n    }\n  }\n\
    \  rows = rows.reverse();\n  for(var i=0; i<rows.length; i++){\n    row = rows[i];\n\
    \    row.sort(function(a, b){\n      return b - a;\n    });\n    row.sort(function(a,\
    \ b){\n      return a - b;\n    });\n  }\n  return rows;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        var row = lst[i];\n   \
    \     for(var j=0; j<row.length; j++){\n            if(row[j] == x){\n       \
    \         result.push([i, row.length-j-1]);\n                break;\n        \
    \    }\n        }\n    }\n    result.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    return result;\n}\n", "    var res = [];\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n            res.push([i,\
    \ lst[i].indexOf(x)]);\n        }\n    }\n    res.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    res.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return res;\n}\n", "    var result = [];\n    var\
    \ row = [];\n    var row_index = 0;\n    var col_index = 0;\n    var row_len =\
    \ lst.length;\n    var col_len = lst[0].length;\n    for(var i=0; i<row_len; i++){\n\
    \        if(lst[i][0] == x){\n            result.push([i, 0]);\n            row_index++;\n\
    \        }\n        else{\n            row.push(lst[i][0]);\n            col_index++;\n\
    \        }\n        if(col_index >= col_len){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n    }\n    return result;\n}\n", "  let row = []\n  let col = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    row.push(i)\n    for(let j = 0; j < lst[i].length;\
    \ j++){\n      col.push(j)\n    }\n  }\n  row.sort((a, b) => a - b)\n  col.sort((a,\
    \ b) => b - a)\n  let result = []\n  for(let i = 0; i < row.length; i++){\n  \
    \  let rowResult = []\n    for(let j = 0; j < col.length; j++){\n      if(row[i]\
    \ === col[j]){\n        rowResult.push([row[i], col[j]])\n      }\n    }\n   \
    \ result.push(rowResult)\n  }\n  return result\n}\n", "    var result = [];\n\
    \    var row = [];\n    var col = [];\n    var row_index = 0;\n    var col_index\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n  \
    \          result.push([row_index, col_index]);\n            row_index++;\n  \
    \          col_index = 0;\n        }\n        else if(row_index == 0){\n     \
    \       row_index++;\n            col_index = 0;\n        }\n        else{\n \
    \           row_index--;\n            col_index++;\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    result.forEach(function(item){\n    \
    \    row.forEach(function(item2){\n            col[item2[0]] = item2[1];\n   \
    \     });\n        result.push(col);\n        col = [];\n    });\n    return result;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = lst.length; i < len; i++){\n\
    \    var row = lst[i];\n    for(var j = 0, len2 = row.length; j < len2; j++){\n\
    \      if(row[j] === x){\n        result.push([i, j]);\n        break;\n     \
    \ }\n    }\n  }\n  result.sort(function(a, b){\n    return b[0] - a[0];\n  });\n\
    \  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return result;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var row = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push([i, lst[i].indexOf(x)])\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return row;\n}\n", "  let row = [];\n\
    \  let row_index = 0;\n  let column_index = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] === x){\n      row.push([row_index, column_index]);\n \
    \     row_index++;\n      column_index = 0;\n    }\n    else{\n      column_index++;\n\
    \    }\n  }\n  if(row_index === 0){\n    return [];\n  }\n  row.sort((a, b) =>\
    \ b[0] - a[0]);\n  row.sort((a, b) => b[1] - a[1]);\n  return row;\n}\n", "  \
    \  if(!lst.length) return [];\n    var res = [];\n    var row = [];\n    var col\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var item\
    \ = lst[i];\n        if(item.indexOf(x) !== -1){\n            row.push(i);\n \
    \           col.push(item.indexOf(x));\n        }\n        else if(item.length\
    \ === 1){\n            row.push(i);\n            col.push(0);\n        }\n   \
    \     else{\n            row.push(i);\n            col.push(item.length);\n  \
    \      }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    col.sort(function(a, b){\n        return b - a;\n    });\n    for(var i =\
    \ 0, len = row.length; i < len; i++){\n        res.push([row[i], col[i]]);\n \
    \   }\n    return res;\n}\n", "  var result = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n    for(var\
    \ j = 0; j < rowLen; j++){\n      if(row[j] === x){\n        result.push([i, j]);\n\
    \      }\n    }\n  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n\
    \  });\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return\
    \ result;\n}\n", "  var res = [];\n  var row = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    if(lst[i].indexOf(x) !== -1){\n      res.push(row.concat(i));\n\
    \      row = [];\n    }\n    row.push(lst[i]);\n  }\n  res.push(row.concat(i));\n\
    \  return res;\n}\n", "    let row = [];\n    let row_index = 0;\n    let col_index\
    \ = 0;\n    let row_indexes = [];\n    let col_indexes = [];\n    for(let i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] === x){\n            row.push([row_index,\
    \ col_index]);\n            row_indexes.push(row_index);\n            col_indexes.push(col_index);\n\
    \            row_index++;\n            col_index = 0;\n        }else{\n      \
    \      col_index++;\n        }\n    }\n    row.push([row_index, col_index]);\n\
    \    row_indexes.push(row_index);\n    col_indexes.push(col_index);\n    return\
    \ row_indexes;\n}\n", "    var result = [];\n    var row = [];\n    var col =\
    \ [];\n    var row_sorted = [];\n    var col_sorted = [];\n    var row_sort =\
    \ [];\n    var col_sort = [];\n    var row_len = lst.length;\n    var col_len\
    \ = lst[0].length;\n    var row_index = 0;\n    var col_index = 0;\n    for(var\
    \ i=0; i<row_len; i++){\n        row_sort.push(i);\n    }\n    for(var i=0; i<col_len;\
    \ i++){\n        col_sort.push(i);\n    }\n    while(row_index < row_len && col_index\
    \ < col_len){\n        if(lst[row_index][col_index] == x){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index++;\n        }\n\
    \        else if(lst[row_index][col_index] > x){\n            row_index++;\n \
    \       }\n        else{\n            col_index++;\n        }\n    }\n    while(row_index\
    \ < row_len){\n        row_sort.push(row_index);\n        row_index++;\n    }\n\
    \    while(col_index < col_len){\n        col_sort.push(col_index);\n        col_index++;\n\
    \    }\n    for(var i=0; i<row_sort.length; i++){\n        row_sorted.push(lst[row_sort[i]]);\n\
    \    }\n    for(var i=0; i<col_sort.length; i++){\n        col_sorted.push(lst[col_sort[i]]);\n\
    \    }\n    for(var i=0; i<row_sorted.length; i++){\n        for(var j=0; j<col_sorted.length;\
    \ j++){\n            if(row_sorted[i][j] == col_sorted[j]){\n                result.push([row_sort[i],\
    \ col_sort[j]]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return result;\n}\n", "    let\
    \ row = [];\n    let row_index = 0;\n    let col_index = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] === x){\n            row.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }else{\n            col_index++;\n        }\n    }\n    return row;\n}\n", " \
    \   if(!lst) return [];\n    var row = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        var item = lst[i];\n        if(item.indexOf(x) !== -1){\n           \
    \ row.push([i, item.indexOf(x)]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return row;\n}\n", "    var result =\
    \ [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        var row =\
    \ lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return result;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  var\
    \ row = [];\n  var rows = [];\n  var cols = [];\n  var col = 0;\n  for(var i=0;\
    \ i<lst.length; i++){\n    if(lst[i] == x){\n      row.push(i);\n      rows.push(row);\n\
    \      cols.push(col);\n      col++;\n    }\n  }\n  rows = rows.sort();\n  cols\
    \ = cols.sort();\n  for(var i=0; i<rows.length; i++){\n    var row = rows[i];\n\
    \    for(var j=0; j<cols.length; j++){\n      var col = cols[j];\n      row.push(col);\n\
    \    }\n  }\n  return rows;\n}\n", "    var result = [];\n    var row = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        var col = [];\n\
    \        for(var j = 0, len2 = row[i].length; j < len2; j++){\n            col.push(row[i][j]);\n\
    \        }\n        result.push(col);\n    }\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n     \
    \   return a[0] - b[0];\n    });\n    return result;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n    if(row.indexOf(x)\
    \ != -1){\n      result.push([i, row.indexOf(x)]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ a[0] - b[0];\n  });\n  return result;\n}\n", "    if(!lst) return [];\n    var\
    \ res = [];\n    var rows = lst.length;\n    var cols = lst[0].length;\n    for(var\
    \ i=0; i<rows; i++){\n        var row = [];\n        for(var j=0; j<cols; j++){\n\
    \            row.push([i, j]);\n        }\n        res.push(row);\n    }\n   \
    \ res.sort(function(a, b){\n        var aRow = a[0][0];\n        var bRow = b[0][0];\n\
    \        if(aRow < bRow) return -1;\n        if(aRow > bRow) return 1;\n     \
    \   return 0;\n    });\n    res.sort(function(a, b){\n        var aCol = a[0][1];\n\
    \        var bCol = b[0][1];\n        if(aCol < bCol) return -1;\n        if(aCol\
    \ > bCol) return 1;\n        return 0;\n    });\n    for(var i=0; i<rows; i++){\n\
    \        res[i].sort(function(a, b){\n            var aCol = a[1][0];\n      \
    \      var bCol = b[1][0];\n            if(aCol < bCol) return -1;\n         \
    \   if(aCol > bCol) return 1;\n            return 0;\n        });\n    }\n   \
    \ var rowIndex = -1;\n    for(var i=0; i<rows; i++){\n        if(res[i][0][0]\
    \ == x){\n            rowIndex = i;\n            break;\n        }\n    }\n  \
    \  if(rowIndex == -1){\n        return [];\n    }\n    var row = [];\n    for(var\
    \ i=0; i<cols; i++){\n        row.push([i, res[i][rowIndex][1]]);\n    }\n   \
    \ return row;\n}\n", "    var result = [];\n    var row = [];\n    var col = [];\n\
    \    var row_index = 0;\n    var col_index = 0;\n    var row_len = lst.length;\n\
    \    var col_len = lst[0].length;\n    while(row_index < row_len){\n        while(col_index\
    \ < col_len){\n            if(lst[row_index][col_index] == x){\n             \
    \   result.push([row_index, col_index]);\n                row_index++;\n     \
    \           col_index++;\n            }\n            else{\n                col_index++;\n\
    \            }\n        }\n        col_index = 0;\n        row_index++;\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var\
    \ result = [];\n  for(var i=0; i<lst.length; i++){\n    var row = lst[i];\n  \
    \  for(var j=0; j<row.length; j++){\n      if(row[j] === x){\n        result.push([i,\
    \ j]);\n      }\n    }\n  }\n  result.sort(function(a, b){\n    return a[0] -\
    \ b[0];\n  });\n  result.sort(function(a, b){\n    return a[1] - b[1];\n  });\n\
    \  return result;\n}\n", "  var result = [];\n  var row = [];\n  var col = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) != -1){\n      row.push(i);\n\
    \      col.push(lst[i].indexOf(x));\n    }\n  }\n  row.sort(function(a, b){return\
    \ a - b});\n  col.sort(function(a, b){return b - a});\n  for(var i=0; i<row.length;\
    \ i++){\n    result.push([row[i], col[i]]);\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  var row = [];\n  var col = [];\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i].indexOf(x) != -1){\n      row.push(i);\n      col.push(lst[i].indexOf(x));\n\
    \    }\n  }\n  result.push(row);\n  result.push(col);\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[2] - a[2];\n  });\n  return result;\n}\n", "    var res = [];\n    var row\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i = 0, len = row.length; i\
    \ < len; i++){\n        var index = row[i];\n        for(var j = 0, len2 = lst[index].length;\
    \ j < len2; j++){\n            res.push([index, j]);\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return res;\n}\n", "    var res\
    \ = [];\n    var row = [];\n    var col = [];\n    var rows = [];\n    var cols\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !==\
    \ -1){\n            row.push(lst[i]);\n            rows.push(row);\n         \
    \   row.splice(0,1);\n            col.push(lst[i].indexOf(x));\n            cols.push(col);\n\
    \            col.splice(0,1);\n        }\n    }\n    for(var i=0; i<rows.length;\
    \ i++){\n        for(var j=0; j<cols.length; j++){\n            res.push([rows[i][j],\
    \ cols[j][rows[i][j]]]);\n        }\n    }\n    res.sort(function(a, b){\n   \
    \     return a[1] - b[1];\n    });\n    res.reverse();\n    return res;\n}\n",
  "    var result = [];\n    var row = [];\n    var columns = [];\n    var row_index\
    \ = 0;\n    var column_index = 0;\n    var row_length = lst.length;\n    var column_length\
    \ = lst[0].length;\n    while(row_index < row_length){\n        row.push(lst[row_index][column_index]);\n\
    \        columns.push(column_index);\n        row_index++;\n        column_index++;\n\
    \        if(column_index >= column_length){\n            column_index = 0;\n \
    \           row_index++;\n        }\n    }\n    result.push(row);\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "  var res =\
    \ [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n\
    \      res.push([i, lst[i].indexOf(x)]);\n    }\n  }\n  res.sort(function(a, b){\n\
    \    return a[1] - b[1];\n  });\n  res.sort(function(a, b){\n    return b[0] -\
    \ a[0];\n  });\n  return res;\n}\n", "    if(!lst.length) return [];\n    var\
    \ result = [];\n    var row = [];\n    var col = [];\n    for(var i = 0, len =\
    \ lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n        \
    \    row.push(i);\n            col.push(lst[i].indexOf(x));\n        }\n    }\n\
    \    result.push(row);\n    result.push(col);\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n     \
    \   return b[2] - a[2];\n    });\n    return result;\n}\n", "  var res = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) != -1){\n      res.push([i,\
    \ lst[i].indexOf(x)]);\n    }\n  }\n  res.sort(function(a, b){\n    return a[1]\
    \ - b[1];\n  });\n  res.sort(function(a, b){\n    return b[0] - a[0];\n  });\n\
    \  return res;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n            result.push([i,\
    \ row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n    return result;\n}\n", "    let row = [];\n    let\
    \ row_index = 0;\n    let col_index = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] === x){\n            row.push([row_index, col_index]);\n  \
    \          row_index++;\n            col_index = 0;\n        }\n        else{\n\
    \            col_index++;\n        }\n    }\n    return row;\n}\n", "  var result\
    \ = [];\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) != -1){\n\
    \      result.push([i, lst[i].indexOf(x)])\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[0] - a[0];\n  });\n  return result;\n}\n", "  let row = []\n  let row_index\
    \ = 0\n  let column_index = 0\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ == x){\n      row.push([row_index, column_index])\n      row_index++\n     \
    \ column_index = 0\n      continue\n    }\n    column_index++\n  }\n  return row\n\
    }\n", "    var result = [];\n    var row = [];\n    var col = [];\n    var rows\
    \ = [];\n    var cols = [];\n    var row_len = 0;\n    var col_len = 0;\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n\
    \            row.push(lst[i]);\n            row_len++;\n        }\n        else{\n\
    \            row.push(0);\n        }\n    }\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) != -1){\n            col.push(lst[i].indexOf(x));\n\
    \            col_len++;\n        }\n        else{\n            col.push(0);\n\
    \        }\n    }\n    for(var i = 0, len = lst.length; i < len; i++){\n     \
    \   if(lst[i].indexOf(x) != -1){\n            rows.push(row.slice());\n      \
    \      cols.push(col.slice());\n        }\n    }\n    for(var i = 0, len = rows.length;\
    \ i < len; i++){\n        for(var j = 0, len2 = rows[i].length; j < len2; j++){\n\
    \            for(var k = 0, len3 = cols[i].length; k < len3; k++){\n         \
    \       result.push([rows[i][j], cols[i][k]]);\n            }\n        }\n   \
    \ }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n \
    \   result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            res.push([i, lst[i].indexOf(x)]);\n\
    \        }\n    }\n    res.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    res.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return res;\n}\n", "  if(lst.length == 0){\n    return [];\n  }\n  var row\
    \ = [];\n  var rows = [];\n  var cols = [];\n  var row_index = 0;\n  var col_index\
    \ = 0;\n  var row_length = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ != -1){\n      row.push(i);\n      row_length++;\n      if(row_length == x){\n\
    \        rows.push(row);\n        row = [];\n        row_length = 0;\n      }\n\
    \    }\n  }\n  if(row.length != 0){\n    rows.push(row);\n  }\n  for(var i=0;\
    \ i<rows.length; i++){\n    for(var j=0; j<rows[i].length; j++){\n      cols.push(rows[i][j]);\n\
    \    }\n  }\n  cols.sort();\n  cols.reverse();\n  for(var i=0; i<cols.length;\
    \ i++){\n    row_index = row_index + cols[i];\n  }\n  var result = [];\n  for(var\
    \ i=0; i<rows.length; i++){\n    for(var j=0; j<rows[i].length; j++){\n      result.push([row_index,\
    \ j]);\n    }\n  }\n  return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        var row = lst[i];\n       \
    \ if(row.indexOf(x) !== -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    var res = [];\n    var row = [];\n    var rows\
    \ = [];\n    var cols = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            rows.push(row);\n           \
    \ cols.push(lst[i].indexOf(x));\n        }\n    }\n    rows.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    cols.sort(function(a, b){\n       \
    \ return b[0] - a[0];\n    });\n    for(var i=0; i<rows.length; i++){\n      \
    \  var row = rows[i];\n        var col = cols[i];\n        for(var j=0; j<row.length;\
    \ j++){\n            res.push([row[j], col]);\n        }\n    }\n    return res;\n\
    }\n", "    var result = [];\n    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i] === x){\n            result.push(row);\n          \
    \  row = [];\n        }else{\n            row.push(lst[i]);\n        }\n    }\n\
    \    if(row.length > 0){\n        result.push(row);\n    }\n    return result;\n\
    }\n", "    if(!lst) return [];\n    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        if(row.indexOf(x) !== -1){\n     \
    \       result.push([i, row.indexOf(x)])\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var col = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i][0] == x){\n            result.push([i, lst[i][1]]);\n\
    \            row.push(lst[i][1]);\n            col.push(lst[i][0]);\n        }\n\
    \    }\n    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n\
    \    row.sort(function(a, b){\n        return b - a\n    });\n    col.sort(function(a,\
    \ b){\n        return b - a\n    });\n    for(var i=0; i<result.length; i++){\n\
    \        result.push([col[i], row[i]]);\n    }\n    return result;\n}\n", "  \
    \  if(lst.length == 0){\n        return [];\n    }\n    if(lst.length == 1){\n\
    \        return [[0, lst[0].length - 1]];\n    }\n    var row = [];\n    var rows\
    \ = [];\n    var cols = [];\n    for(var i=0; i<lst.length; i++){\n        var\
    \ col = lst[i].indexOf(x);\n        if(col != -1){\n            row.push(i);\n\
    \            rows.push(i);\n            cols.push(col);\n        }\n    }\n  \
    \  rows = rows.sort();\n    cols = cols.sort();\n    for(var i=0; i<rows.length;\
    \ i++){\n        row.push([rows[i], cols[i]]);\n    }\n    return row;\n}\n",
  "  var result = [];\n  if(lst.length == 0){\n    return result;\n  }\n  var rows\
    \ = lst.length;\n  var cols = lst[0].length;\n  var row = 0;\n  var col = 0;\n\
    \  while(row < rows && col < cols){\n    if(lst[row][col] == x){\n      result.push([row,\
    \ col]);\n    }\n    col++;\n    if(col == cols){\n      col = 0;\n      row++;\n\
    \    }\n  }\n  result.sort(function(a, b){\n    return b[0] - a[0];\n  });\n \
    \ result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  return result;\n\
    }\n", "    if(!lst) return [];\n    var res = [];\n    var row = [];\n    for(var\
    \ i = 0, len = lst.length; i < len; i++){\n        if(lst[i] === x) res.push([i,\
    \ 0]);\n        row.push(lst[i]);\n    }\n    row = row.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    for(var i = 0, len = row.length; i\
    \ < len; i++){\n        row.sort(function(a, b){\n            return b[0] - a[0];\n\
    \        });\n        res.push([row[i][0], row[i][1]]);\n    }\n    return res;\n\
    }\n", "  if(lst.length < 1){\n    return [];\n  }\n  var row = [];\n  var row_index\
    \ = 0;\n  var col_index = 0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x)\
    \ !== -1){\n      row.push([row_index, col_index]);\n      row_index++;\n    \
    \  col_index = 0;\n    }else{\n      col_index++;\n    }\n  }\n  row.push([row_index,\
    \ col_index]);\n  return row;\n}\n", "    var result = [];\n    var row = [];\n\
    \    var col = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i] == x){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n        else if(row_index > 0){\n            row.push(lst[i]);\n        \
    \    col_index++;\n        }\n        else{\n            row_index++;\n      \
    \      row.push(lst[i]);\n            col_index = 0;\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    result.sort(function(a, b){\n       \
    \ return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n        return b[1]\
    \ - a[1];\n    });\n    return result;\n}\n", "  let row = []\n  let col = []\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n \
    \     row.push(i)\n      col.push(lst[i].indexOf(x))\n    }\n  }\n  row.sort((a,\
    \ b) => a - b)\n  col.sort((a, b) => b - a)\n  return row.map((i) => [i, col[i]])\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var row = [];\n\
    \    var row_len = lst.length;\n    for(var i=0; i<row_len; i++){\n        var\
    \ item = lst[i];\n        if(item.indexOf(x) != -1){\n            row.push(i);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    row.sort(function(a, b){\n        return b - a;\n    });\n    return row;\n\
    }\n", "    var result = [];\n    for(var i=0; i<lst.length; i++){\n        var\
    \ row = lst[i];\n        for(var j=0; j<row.length; j++){\n            if(row[j]\
    \ === x){\n                result.push([i, j]);\n            }\n        }\n  \
    \  }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "    if(!lst) return [];\n    var result = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n         \
    \   result.push([i, lst[i].indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "    if(lst.length\
    \ < 1) return [];\n    var result = [];\n    var row = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n    \
    \    }\n    }\n    row.sort(function(a, b){\n        return b-a;\n    });\n  \
    \  for(var i=0; i<row.length; i++){\n        result.push([row[i], i]);\n    }\n\
    \    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<lst.length; i++){\n   \
    \ if(lst[i].indexOf(x) !== -1){\n      result.push([i, lst[i].indexOf(x)])\n \
    \   }\n  }\n  result.sort(function(a, b){\n    return b[1] - a[1]\n  });\n  result.sort(function(a,\
    \ b){\n    return a[0] - b[0]\n  });\n  return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    for(var i = 0; i < lst.length; i++){\n       \
    \ if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n            result.push(row);\n\
    \            row = [];\n        }\n    }\n    result.push(row);\n    result.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var row_index = 0;\n    var col_index = 0;\n \
    \   for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i] === x){\n\
    \            result.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n        }else{\n            col_index++;\n      \
    \  }\n    }\n    if(row_index > 0){\n        result.push([row_index, col_index]);\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return\
    \ result;\n}\n", "    if(!lst) return [];\n    var res = [];\n    var row = [];\n\
    \    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    row = row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i = 0, len = row.length; i\
    \ < len; i++){\n        var index = row[i];\n        var item = lst[index];\n\
    \        for(var j = 0, len2 = item.length; j < len2; j++){\n            res.push([index,\
    \ j]);\n        }\n    }\n    return res.sort(function(a, b){\n        return\
    \ b[0] - a[0];\n    });\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        if(row.indexOf(x) != -1){\n      \
    \      result.push([i, row.indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        var row = lst[i];\n   \
    \     for(var j=0; j<row.length; j++){\n            if(row[j] == x){\n       \
    \         result.push([i, j]); \n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var row_index = 0;\n    var col_index = 0;\n \
    \   var row_len = lst.length;\n    var col_len = lst[0].length;\n    while(row_index\
    \ < row_len){\n        row.push(lst[row_index][col_index]);\n        if(col_index\
    \ == col_len){\n            result.push([row_index, row]);\n            row_index++;\n\
    \            row = [];\n            col_index = 0;\n        }else{\n         \
    \   col_index++;\n        }\n    }\n    return result;\n}\n", "  if(lst.length\
    \ == 0){\n    return [];\n  }\n  var row = [];\n  var row_index = 0;\n  var row_len\
    \ = lst.length;\n  for(var i=0; i<row_len; i++){\n    if(lst[i][0] == x){\n  \
    \    row.push([i, lst[i][1]]);\n      row_index = i;\n    }\n  }\n  if(row_index\
    \ == row_len){\n    return [];\n  }\n  row.sort(function(a, b){\n    return b[1]\
    \ - a[1];\n  });\n  row.sort(function(a, b){\n    return a[0] - b[0];\n  });\n\
    \  return row;\n}\n", "  let row = []\n  let row_len = 0\n  for(let i = 0; i <\
    \ lst.length; i++){\n    if(lst[i].indexOf(x) !== -1){\n      row.push([i, lst[i].indexOf(x)])\n\
    \      row_len++\n    }\n  }\n  if(row_len === 0){\n    return []\n  }\n  if(row_len\
    \ === 1){\n    return [row[0]]\n  }\n  if(row_len === 2){\n    let row1 = [row[0]]\n\
    \    let row2 = [row[1]]\n    let col1 = [row[1][1]]\n    let col2 = [row[0][1]]\n\
    \    if(row1[1] > row2[1]){\n      return [row1, col1]\n    }\n    return [row2,\
    \ col2]\n  }\n  let row1 = [row[0]]\n  let row2 = [row[1]]\n  let col1 = [row[1][1]]\n\
    \  let col2 = [row[0][1]]\n  if(row1[1] > row2[1]){\n    row1.push(row2[0])\n\
    \    row2.push(row1[0])\n    col1.push(col2[0])\n    col2.push(col1[0])\n  }\n\
    \  if(row1[1] < row2[1]){\n    row1.push(row2[1])\n    row2.push(row1[1])\n  \
    \  col1.push(col2[1])\n    col2.push(col1[1])\n  }\n  if(row1[1] === row2[1]){\n\
    \    row1.push(row2[1])\n    row2.push(row1[1])\n    col1.push(col2[1])\n    col2.push(col1[1])\n\
    \  }\n  return [row1, col1, row2, col2]\n}\n", "    if(!lst) return [];\n    var\
    \ result = [];\n    var rows = lst.length;\n    var cols = lst[0].length;\n  \
    \  var row = 0;\n    var col = 0;\n    while(row < rows && col < cols){\n    \
    \    if(lst[row][col] === x){\n            result.push([row, col]);\n        \
    \    row++;\n            col++;\n        }else if(lst[row][col] > x){\n      \
    \      row++;\n        }else{\n            col++;\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    if(!lst)\
    \ return [];\n    var result = [];\n    var row = [];\n    var rows = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n \
    \           row.push(i);\n            rows.push(row);\n            row = [];\n\
    \        }\n    }\n    for(var i=0; i<rows.length; i++){\n        for(var j=0;\
    \ j<rows[i].length; j++){\n            result.push([rows[i][j], lst[rows[i][j]]]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    var row_index\
    \ = 0;\n    var col_index = 0;\n    for(var i = 0, len = lst.length; i < len;\
    \ i++){\n        if(lst[i] === x){\n            result.push([row_index, col_index]);\n\
    \            row_index++;\n            col_index = 0;\n        }\n        else{\n\
    \            col_index++;\n        }\n    }\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n     \
    \   return a[1] - b[1];\n    });\n    return result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            result.push([i, lst[i].indexOf(x)]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var\
    \ row = [];\n    var row_len = lst.length;\n    var col_len = lst[0].length;\n\
    \    var result = [];\n    var i, j, k;\n    for(i = 0; i < row_len; i++){\n \
    \       row.push([]);\n        for(j = 0; j < col_len; j++){\n            if(i\
    \ == 0){\n                row[i].push(x);\n            }\n            else if(j\
    \ == 0){\n                row[i].push(0);\n            }\n            else{\n\
    \                row[i].push(lst[i][j]);\n            }\n        }\n        result.push(row);\n\
    \    }\n    result.sort(function(a, b){\n        var a_len = a.length;\n     \
    \   var b_len = b.length;\n        for(i = 0; i < a_len; i++){\n            for(j\
    \ = 0; j < b_len; j++){\n                if(a[i] < b[j]){\n                  \
    \  return -1;\n                }\n                if(a[i] > b[j]){\n         \
    \           return 1;\n                }\n            }\n        }\n        return\
    \ 0;\n    });\n    result.sort(function(a, b){\n        var a_len = a.length;\n\
    \        var b_len = b.length;\n        for(i = 0; i < a_len; i++){\n        \
    \    for(j = 0; j < b_len; j++){\n                if(a[i] > b[j]){\n         \
    \           return 1;\n                }\n                if(a[i] < b[j]){\n \
    \                   return -1;\n                }\n            }\n        }\n\
    \        return 0;\n    });\n    return result;\n}\n", "    var result = [];\n\
    \    var row = [];\n    var row_index = 0;\n    var col_index = 0;\n    var row_length\
    \ = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i]\
    \ === x){\n            result.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n        }\n        else{\n            row.push(lst[i]);\n\
    \            col_index++;\n        }\n        if(row_index === row_length){\n\
    \            result.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n            row_length++;\n        }\n    }\n   \
    \ result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    return result;\n}\n", "    let\
    \ row = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i][0] ==\
    \ x){\n            row.push([i, lst[i][1]]);\n        }\n    }\n    row.sort((a,\
    \ b) => b[1] - a[1]);\n    row.sort((a, b) => a[0] - b[0]);\n    return row;\n\
    }\n", "    var result = [];\n    var row = [];\n    var row_index = 0;\n    var\
    \ col_index = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] ===\
    \ x){\n            result.push([row_index, col_index]);\n            row_index++;\n\
    \            col_index = 0;\n        }\n        else{\n            col_index++;\n\
    \        }\n    }\n    if(row_index > 0){\n        result.push([row_index, col_index]);\n\
    \    }\n    result.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<lst.length; i++){\n   \
    \ if(lst[i].indexOf(x) != -1){\n      result.push([i, lst[i].indexOf(x)]);\n \
    \   }\n  }\n  result.sort(function(a, b){\n    return b[1] - a[1];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  return result;\n}\n", "    var row =\
    \ [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n   \
    \         row.push([i, lst[i][1]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return row;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i].indexOf(x) != -1){\n      result.push([i,\
    \ lst[i].indexOf(x)])\n    }\n  }\n  result.sort(function(a, b){\n    return b[1]\
    \ - a[1]\n  })\n  result.sort(function(a, b){\n    return a[0] - b[0]\n  })\n\
    \  return result\n}\n", "    var result = [];\n    var row = [];\n    var col\
    \ = [];\n    var rows = [];\n    var cols = [];\n    var row_index = 0;\n    var\
    \ col_index = 0;\n    var row_len = 0;\n    var col_len = 0;\n    for(var i =\
    \ 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n\
    \            result.push([row_index, col_index]);\n            result.push(lst[i]);\n\
    \            row_index++;\n            row_len++;\n        }\n        else{\n\
    \            row.push(lst[i]);\n            row_len++;\n        }\n    }\n   \
    \ for(var i = 0, len = row.length; i < len; i++){\n        for(var j = 0, len2\
    \ = row[i].length; j < len2; j++){\n            col.push(row[i][j]);\n       \
    \     col_index++;\n        }\n        cols.push(col);\n        col = [];\n  \
    \      col_index = 0;\n    }\n    rows.push(row);\n    row = [];\n    row_index\
    \ = 0;\n    cols = [];\n    for(var i = 0, len = cols.length; i < len; i++){\n\
    \        for(var j = 0, len2 = cols[i].length; j < len2; j++){\n            row.push(cols[i][j]);\n\
    \            row_index++;\n        }\n        col = [];\n        col_index = 0;\n\
    \    }\n    cols.push(col);\n    col = [];\n    col_index = 0;\n    for(var i\
    \ = 0, len = rows.length; i < len; i++){\n        for(var j = 0, len2 = rows[i].length;\
    \ j < len2; j++){\n            row.push(rows[i][j]);\n            col_index++;\n\
    \        }\n        cols.push(row);\n        row = [];\n        row_index = 0;\n\
    \    }\n    for(var i = 0, len = cols.length; i < len; i++){\n        for(var\
    \ j = 0, len2 = cols[i].length; j < len2; j++){\n            result.push([row_index,\
    \ col_index]);\n            result.push(cols[i][j]);\n            row_index++;\n\
    \            col_index++;\n        }\n    }\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n     \
    \   return b[1] - a[1];\n    });\n    return result;\n}\n", "    if(!lst) return\
    \ [];\n    var result = [];\n    var row = [];\n    for(var i = 0, len = lst.length;\
    \ i < len; i++){\n        if(lst[i].indexOf(x) !== -1){\n            row.push(i);\n\
    \        }\n    }\n    row.sort(function(a, b){\n        return a - b;\n    });\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        result.push([row[i],\
    \ lst[row[i]].indexOf(x)]);\n    }\n    result.sort(function(a, b){\n        return\
    \ a[1] - b[1];\n    });\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    var row = lst[i];\n    for(var j=0; j<row.length;\
    \ j++){\n      if(row[j] == x){\n        result.push([i, j]);\n      }\n    }\n\
    \  }\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[1] - a[1];\n  });\n  return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n        }\n \
    \   }\n    row.sort(function(a, b){\n        return a - b;\n    });\n    for(var\
    \ i = 0, len = row.length; i < len; i++){\n        result.push([row[i], row.length\
    \ - 1 - i]);\n    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n\
    \    });\n    return result;\n}\n", "    var result = [];\n    var row = [];\n\
    \    var columns = [];\n    var row_index = 0;\n    var column_index = 0;\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i][0] == x){\n           \
    \ result.push([row_index, column_index]);\n            row_index++;\n        \
    \    column_index = 0;\n        }else{\n            column_index++;\n        }\n\
    \    }\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    return\
    \ result;\n}\n", "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i].indexOf(x) !== -1){\n            res.push([i, lst[i].indexOf(x)]);\n\
    \        }\n    }\n    res.sort(function(a, b){\n        return a[1] - b[1];\n\
    \    });\n    res.sort(function(a, b){\n        return b[0] - a[0];\n    });\n\
    \    return res;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        var row = lst[i];\n        for(var j=0; j<row.length; j++){\n\
    \            if(row[j] === x){\n                result.push([i, j]);\n       \
    \     }\n        }\n    }\n    result.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    return result;\n}\n", "    var result = [];\n    for(var i = 0,\
    \ len = lst.length; i < len; i++){\n        var row = lst[i];\n        for(var\
    \ j = 0, len2 = row.length; j < len2; j++){\n            if(row[j] === x){\n \
    \               result.push([i, j]);\n            }\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n\
    \        return b[1] - a[1];\n    });\n    return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n        }\n \
    \   }\n    result.push(row);\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n        }\n \
    \   }\n    result.push(row);\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    result.sort(function(a, b){\n        return a[1]\
    \ - b[1];\n    });\n    return result;\n}\n", "    var result = [];\n    var row\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n        }\n    }\n    result.push(row);\n\
    \    for(var i = 0; i < row.length; i++){\n        var row = [];\n        for(var\
    \ j = 0; j < lst[row[i]].length; j++){\n            row.push([row[i], j]);\n \
    \       }\n        result.push(row);\n    }\n    result.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    result.sort(function(a, b){\n     \
    \   return b[1] - a[1];\n    });\n    return result;\n}\n", "  var result = [];\n\
    \  for(var i = 0, len = lst.length; i < len; i++){\n    var row = lst[i];\n  \
    \  if(row.indexOf(x) !== -1){\n      result.push([i, row.indexOf(x)]);\n    }\n\
    \  }\n  result.sort(function(a, b){\n    return a[1] - b[1];\n  });\n  result.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  return result;\n}\n", "    var result\
    \ = [];\n    var row = [];\n    var col = [];\n    var rows = [];\n    var cols\
    \ = [];\n    var row_index = 0;\n    var col_index = 0;\n    for(var i = 0, len\
    \ = lst.length; i < len; i++){\n        if(lst[i] === x){\n            result.push([row_index,\
    \ col_index]);\n            row_index++;\n            col_index = 0;\n       \
    \ }\n        else if(row_index === 0){\n            rows.push([lst[i]]);\n   \
    \         cols.push([]);\n        }\n        else{\n            rows[row_index-1].push(lst[i]);\n\
    \            cols[col_index-1].push(lst[i]);\n        }\n    }\n    rows = rows.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    cols = cols.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    for(var i = 0, len = rows.length;\
    \ i < len; i++){\n        result.push([rows[i][0], cols[i][0]]);\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<lst.length; i++){\n   \
    \ var row = lst[i];\n    var rowResult = [];\n    for(var j=0; j<row.length; j++){\n\
    \      if(row[j] == x){\n        rowResult.push([i, j]);\n      }\n    }\n   \
    \ result.push(rowResult);\n  }\n  result.sort(function(a, b){\n    return a[0]\
    \ - b[0];\n  });\n  result.sort(function(a, b){\n    return a[1] - b[1];\n  });\n\
    \  return result;\n}\n", "  var res = [];\n  for(var i=0; i<lst.length; i++){\n\
    \    var row = lst[i];\n    var rowLen = row.length;\n    var colLen = row[x];\n\
    \    for(var j=0; j<colLen; j++){\n      res.push([i, j]);\n    }\n  }\n  res.sort(function(a,\
    \ b){\n    return a[0] - b[0];\n  });\n  res.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return res;\n}\n", "    if(!lst.length) return [];\n\
    \    var res = [];\n    var row = [];\n    var col = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n    \
    \        col.push(lst[i].indexOf(x));\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    col.sort(function(a, b){\n        return\
    \ b - a;\n    });\n    for(var i=0; i<row.length; i++){\n        res.push([row[i],\
    \ col[i]]);\n    }\n    return res;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !== -1){\n      \
    \      result.push([i, lst[i].indexOf(x)]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0];\n    });\n    return result;\n}\n", "    var res\
    \ = [];\n    var row = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n\
    \        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n        }\n \
    \   }\n    row.sort(function(a, b){\n        return a - b;\n    });\n    for(var\
    \ i = 0, len = row.length; i < len; i++){\n        for(var j = 0, len2 = lst[row[i]].length;\
    \ j < len2; j++){\n            res.push([row[i], j]);\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        return b[1] - a[1];\n    });\n    return res;\n}\n", "    var result\
    \ = [];\n    for(var i=0; i<lst.length; i++){\n        var row = lst[i];\n   \
    \     if(row.indexOf(x) != -1){\n            result.push([i, row.indexOf(x)]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[1] - a[1];\n\
    \    });\n    result.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var row = [];\n    var row_len\
    \ = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) !=\
    \ -1){\n            result.push(row);\n            row = [];\n            row_len\
    \ = 0;\n        }\n        row.push(lst[i]);\n        row_len++;\n    }\n    result.push(row);\n\
    \    result.sort(function(a, b){\n        if(a[0] > b[0]) return 1;\n        if(a[0]\
    \ < b[0]) return -1;\n        if(a[1] > b[1]) return 1;\n        if(a[1] < b[1])\
    \ return -1;\n        return 0;\n    });\n    result.sort(function(a, b){\n  \
    \      if(a[1] > b[1]) return 1;\n        if(a[1] < b[1]) return -1;\n       \
    \ return 0;\n    });\n    return result;\n}\n", "    var res = [];\n    var row\
    \ = [];\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    row = row.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    for(var i = 0, len = row.length; i\
    \ < len; i++){\n        for(var j = 0, len2 = lst[row[i]].length; j < len2; j++){\n\
    \            res.push([row[i], j]);\n        }\n    }\n    return res.sort(function(a,\
    \ b){\n        return b[0] - a[0];\n    });\n}\n", "    let res = [];\n    let\
    \ row = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    for(let i = 0; i <\
    \ row.length; i++){\n        let temp = [];\n        for(let j = 0; j < row.length;\
    \ j++){\n            if(row[j] === i){\n                temp.push(lst[row[j]][row[j\
    \ + 1]]);\n            }\n        }\n        res.push(temp);\n    }\n    res.sort((a,\
    \ b) => a[0] - b[0]);\n    res.sort((a, b) => b[1] - a[1]);\n    return res;\n\
    }\n", "    var row = [];\n    for(var i=0; i<lst.length; i++){\n        if(lst[i][0]\
    \ == x){\n            row.push([i, lst[i][1]]);\n        }\n    }\n    row.sort(function(a,\
    \ b){\n        return a[1] - b[1];\n    });\n    row.sort(function(a, b){\n  \
    \      return b[0] - a[0];\n    });\n    return row;\n}\n", "  let row = [];\n\
    \  let row_index = 0;\n  let col_index = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] === x){\n      row.push([row_index, col_index]);\n    \
    \  row_index++;\n      col_index = 0;\n    }\n    else{\n      col_index++;\n\
    \    }\n  }\n  row.push([row_index, col_index]);\n  row.sort((a, b) => a[0] -\
    \ b[0]);\n  row.sort((a, b) => a[1] - b[1]);\n  return row;\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var row = [];\n    var rows = [];\n \
    \   var cols = [];\n    var col = 0;\n    var row = 0;\n    var cols = [];\n \
    \   for(var i=0; i<lst.length; i++){\n        if(lst[i] == x){\n            row.push(i);\n\
    \            rows.push(row);\n            col = i;\n            cols.push(col);\n\
    \        }\n    }\n    rows = rows.sort(function(a, b){\n        return b[0] -\
    \ a[0];\n    });\n    cols = cols.sort(function(a, b){\n        return b[1] -\
    \ a[1];\n    });\n    for(var i=0; i<rows.length; i++){\n        row = rows[i];\n\
    \        for(var j=0; j<cols.length; j++){\n            col = cols[j];\n     \
    \       row.push(col);\n        }\n    }\n    return rows;\n}\n", "    let row\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ !== -1){\n            row.push(i);\n        }\n    }\n    row.sort((a,b) =>\
    \ a - b);\n    row.sort((a,b) => b - a);\n    return row.map(i => [i, lst[i]]);\n\
    }\n", "    var res = [];\n    var row = [];\n    var col = [];\n    var row_index\
    \ = 0;\n    var col_index = 0;\n    for(var i = 0, len = lst.length; i < len;\
    \ i++){\n        if(lst[i].indexOf(x) != -1){\n            row.push(i);\n    \
    \        col.push(lst[i].indexOf(x));\n            row_index++;\n            col_index++;\n\
    \        }\n        else if(row_index == 0){\n            row.push(i);\n     \
    \       col_index++;\n        }\n        else if(col_index == 0){\n          \
    \  col.push(lst[i].indexOf(x));\n            col_index++;\n        }\n       \
    \ else if(row_index == col_index){\n            row.push(i);\n            row_index++;\n\
    \            col_index++;\n        }\n        else if(row_index > col_index){\n\
    \            res.push([row, col]);\n            row = [];\n            col = [];\n\
    \            row_index = 0;\n            col_index = 0;\n        }\n    }\n  \
    \  if(row.length > 0){\n        res.push([row, col]);\n    }\n    return res;\n\
    }\n", "    var result = [];\n    var row = [];\n    var row_len = 0;\n    var\
    \ col_len = 0;\n    for(var i = 0, len = lst.length; i < len; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push(i);\n            row_len++;\n        }\n    }\n\
    \    for(var i = 0, len = row.length; i < len; i++){\n        col_len = row.length;\n\
    \        for(var j = 0; j < col_len; j++){\n            result.push([row[i], j]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return b[0] - a[0];\n\
    \    });\n    result.sort(function(a, b){\n        return b[1] - a[1];\n    });\n\
    \    return result;\n}\n", "  var result = [];\n  for(var i = 0, len = lst.length;\
    \ i < len; i++){\n    var row = lst[i];\n    var rowLen = row.length;\n    if(rowLen\
    \ === x){\n      result.push([i, row]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    return b[0] - a[0];\n  });\n  result.sort(function(a, b){\n    return\
    \ b[1] - a[1];\n  });\n  return result;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i].indexOf(x) != -1){\n           \
    \ result.push([i, lst[i].indexOf(x)])\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        return a[1] - b[1]\n    });\n    result.sort(function(a, b){\n\
    \        return b[0] - a[0]\n    });\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

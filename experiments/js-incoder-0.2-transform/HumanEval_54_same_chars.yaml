name: HumanEval_54_same_chars
language: js
prompt: "//Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\"\
  , \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n\
  // true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"\
  eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\"\
  )\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\n\
  function same_chars(s0, s1){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = same_chars;\n  assert.deepEqual(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
  ),true);\n  assert.deepEqual(candidate(\"abcd\", \"dddddddabc\"),true);\n  assert.deepEqual(candidate(\"\
  dddddddabc\", \"abcd\"),true);\n  assert.deepEqual(candidate(\"eabcd\", \"dddddddabc\"\
  ),false);\n  assert.deepEqual(candidate(\"abcd\", \"dddddddabcf\"),false);\n  assert.deepEqual(candidate(\"\
  eabcdzzzz\", \"dddzzzzzzzddddabc\"),false);\n  assert.deepEqual(candidate(\"aabb\"\
  , \"aaccc\"),false);\n}\n\ntest();"
completions: ["    var i, j, s0_len, s1_len, c;\n    s0_len = s0.length;\n    s1_len\
    \ = s1.length;\n    for(i = 0; i < s0_len; i++){\n        c = s0.charAt(i);\n\
    \        for(j = 0; j < s1_len; j++){\n            if(c === s1.charAt(j)){\n \
    \               return true;\n            }\n        }\n    }\n    return false;\n\
    }\n", "\tvar i, j, s0_len = s0.length, s1_len = s1.length;\n\tfor(i = 0; i < s0_len;\
    \ i++){\n\t\tfor(j = 0; j < s1_len; j++){\n\t\t\tif(s0[i] === s1[j]){\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t\tif(j === s1_len){\n\t\t\treturn true;\n\t\t}\n\t}\n\
    \treturn false;\n}\n", "\tvar s0_len = s0.length;\n\tvar s1_len = s1.length;\n\
    \tif(s0_len == 0) return s1_len == 0;\n\tif(s1_len == 0) return s0_len == 0;\n\
    \tif(s0_len != s1_len) return false;\n\tfor(var i = 0; i < s0_len; i++){\n\t\t\
    if(s0.charAt(i) != s1.charAt(i)) return false;\n\t}\n\treturn true;\n}\n", " \
    \   var s0_c = s0.split('').sort().join('');\n    var s1_c = s1.split('').sort().join('');\n\
    \    return s0_c == s1_c;\n}\n", "  var s0_len = s0.length;\n  var s1_len = s1.length;\n\
    \  var same = 0;\n  for(var i=0; i<s0_len; i++){\n    if(s0.charAt(i) != s1.charAt(i)){\n\
    \      same++;\n    }\n  }\n  return same == s0_len;\n}\n", "\tvar i, j, k;\n\t\
    var s0_len = s0.length;\n\tvar s1_len = s1.length;\n\t\n\tif (s0_len == 0) return\
    \ s1_len == 0;\n\tif (s1_len == 0) return s0_len == 0;\n\t\n\tfor (i = 0; i <\
    \ s0_len; i++){\n\t\tfor (j = 0; j < s1_len; j++){\n\t\t\tif (s0[i] != s1[j]){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true;\n}\n", "\tvar i,\
    \ j, k;\n\tfor(i = 0; i < s0.length; i++){\n\t\tfor(j = 0; j < s1.length; j++){\n\
    \t\t\tif(s0[i] === s1[j]){\n\t\t\t\tk = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    \tif(k !== i){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\ts0 =\
    \ s0.split('');\n\ts1 = s1.split('');\n\t\n\tvar same = true;\n\t\n\tfor(var i\
    \ = 0; i < s0.length; i++){\n\t\tif(s1[i] != s0[i]){\n\t\t\tsame = false;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\t\n\treturn same;\n}\n", "\tvar s0_c = s0.split('').sort().join('');\n\
    \tvar s1_c = s1.split('').sort().join('');\n\treturn s0_c == s1_c;\n}\n", "  var\
    \ s0_len = s0.length;\n  var s1_len = s1.length;\n  var same = true;\n  for(var\
    \ i=0; i<s0_len; i++){\n    if(s0[i] != s1[i]){\n      same = false;\n      break;\n\
    \    }\n  }\n  return same;\n}\n", "    var i, j, s0_len = s0.length, s1_len =\
    \ s1.length;\n    if (s0_len == 0) return s1_len == 0;\n    if (s1_len == 0) return\
    \ s0_len == 0;\n    for (i = 0; i < s0_len; i++){\n        if (s0[i] != s1[i])\
    \ return false;\n    }\n    for (i = s0_len - 1; i >= 0; i--){\n        if (s0[i]\
    \ == s1[i]) return true;\n    }\n    return false;\n}\n", "    var s0_len = s0.length;\n\
    \    var s1_len = s1.length;\n    if (s0_len != s1_len) return false;\n    for\
    \ (var i = 0; i < s0_len; i++){\n        if (s0.charAt(i) != s1.charAt(i)) return\
    \ false;\n    }\n    return true;\n}\n", "\ts0 = s0.toLowerCase();\n\ts1 = s1.toLowerCase();\n\
    \tvar same = 0;\n\tfor(var i=0;i<s0.length;i++){\n\t\tif(s1.indexOf(s0[i])!=-1){\n\
    \t\t\tsame++;\n\t\t}\n\t}\n\treturn same==s0.length;\n}\n", "    var s0_len =\
    \ s0.length;\n    var s1_len = s1.length;\n    var same = 0;\n    var i = 0;\n\
    \    while(i < s0_len && i < s1_len){\n        if(s0.charAt(i) != s1.charAt(i)){\n\
    \            same++;\n        }\n        i++;\n    }\n    return same == s0_len;\n\
    }\n", "\tvar i, j, k;\n\tvar n = s0.length;\n\tvar m = s1.length;\n\t\n\tif (n\
    \ != m){\n\t\treturn false;\n\t}\n\t\n\tfor(i = 0; i < n; i++){\n\t\tfor(j = 0;\
    \ j < m; j++){\n\t\t\tif (s0[i] != s1[j]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\
    \t}\n\t}\n\t\n\treturn true;\n}\n", "  var s0_c = s0.split('');\n  var s1_c =\
    \ s1.split('');\n  for(var i=0; i<s0_c; i++){\n    if(s0_c[i] !== s1_c[i]){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    var s0len = s0.length;\n\
    \    var s1len = s1.length;\n    var same = true;\n    var i = 0;\n    var j =\
    \ 0;\n    while(i < s0len && j < s1len){\n        if(s0.charAt(i) !== s1.charAt(j)){\n\
    \            same = false;\n            break;\n        }\n        i++;\n    \
    \    j++;\n    }\n    return same;\n}\n", "\tlet n0 = s0.length;\n\tlet n1 = s1.length;\n\
    \tif(n0 != n1){\n\t\treturn false;\n\t}\n\tfor(let i = 0; i < n0; i++){\n\t\t\
    if((s0[i] != s1[i]) || (s0[i] != null)){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    return true;\n}\n", "\tvar i, j, s0_len = s0.length, s1_len = s1.length;\n\tfor(i\
    \ = 0; i < s0_len; i++){\n\t\tfor(j = 0; j < s1_len; j++){\n\t\t\tif(s0[i] ===\
    \ s1[j]){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", " \
    \   var s0_c = s0.split('');\n    var s1_c = s1.split('');\n    var len = s0_c[0].length;\n\
    \    for(var i = 1; i < s1_c.length; i++){\n        if(s0_c[i].length !== s1_c[i].length)\
    \ return false;\n        for(var j = 0; j < len; j++){\n            if(s0_c[i][j]\
    \ !== s1_c[i][j]) return false;\n        }\n    }\n    return true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

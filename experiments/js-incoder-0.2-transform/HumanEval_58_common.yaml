name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["  var lc = 0, // common length\n      lp = 0, // common prefix\n  \
    \    ln = 0, // common suffix\n      i = 0, // current index\n      j = 0;\n\n\
    \  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n      lc++;\n \
    \     i++;\n      j++;\n    }else{\n      if(lc>lp){\n        lp = lc;\n     \
    \ }\n      if(lc>ln){\n        ln = lc;\n      }\n      lc = 0;\n    }\n  }\n\n\
    \  if(lc>lp){\n    lp = lc;\n  }\n  if(lc>ln){\n    ln = lc;\n  }\n\n  return\
    \ [lp, ln];\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n    var\
    \ lLen2 = l2.length;\n    var i = 0;\n    var j = 0;\n    while(i<lLen1 && j<lLen2){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else{\n            if(l1[i]<l2[j]){\n            \
    \    i++;\n            }else{\n                j++;\n            }\n        }\n\
    \    }\n    return result;\n}\n", "  var out = [];\n  var lLen = l1.length;\n\
    \  var l2 = l2.slice(0);\n  while(lLen--){\n    if(l2.indexOf(l1[lLen]) === -1)\
    \ out.push(l1[lLen]);\n  }\n  return out;\n}\n", "  var out = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  var i = 0;\n  var j = 0;\n  while (i < l1.length && j < l2.length) {\n    if\
    \ (l1[i] === l2[j]) {\n      out.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n             \
    \   break;\n            }\n        }\n    }\n    return result;\n}\n", "  var\
    \ out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var result = [];\n    var i =\
    \ 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var m = l2.length;\n\
    \    while(i<n && j<m){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        result.push(l1[i]);\n      }\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var\
    \ l = 0;\n    var len1 = l1.length;\n    var len2 = l2.length;\n    while(i <\
    \ len1 && j < len2){\n        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i] < l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    while(i < len1){\n        result.push(l1[i]);\n       \
    \ i++;\n    }\n    while(j < len2){\n        result.push(l2[j]);\n        j++;\n\
    \    }\n    return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n    var lLen\
    \ = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    while (lLen > i){\n\
    \        if (l1.charAt(i) !== l2.charAt(i)){\n            return false;\n    \
    \    }\n        i++;\n    }\n    while (i < lLen){\n        out.push(l1.charAt(i));\n\
    \        i++;\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var ret = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n        ret.push(l1[i]);\n\
    \      }\n    }\n  }\n  return ret;\n}\n", "    var result = [];\n    var i =\
    \ 0;\n    while(i<l1.length && i<l2.length){\n        if(l1[i]===l2[i]){\n   \
    \         result.push(l1[i]);\n            i++;\n        }\n        else if(l1[i]<l2[i]){\n\
    \            result.push(l1[i]);\n            i++;\n        }\n        else{\n\
    \            result.push(l2[i]);\n            i++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n      l1.splice(0, 1);\n\
    \      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n      l1.splice(0, 1);\n\
    \    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return result;\n}\n", "  var\
    \ out = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n\
    \    if(l1[i] === l2[i]){\n      out.push(l1[i]);\n    }\n  }\n  return out;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

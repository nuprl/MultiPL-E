name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["  var lc = 0, // common length\n      lp = 0, // common prefix\n  \
    \    ln = 0, // common suffix\n      i = 0, // current index\n      j = 0;\n\n\
    \  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n      lc++;\n \
    \     i++;\n      j++;\n    }else{\n      if(lc>lp){\n        lp = lc;\n     \
    \ }\n      if(lc>ln){\n        ln = lc;\n      }\n      lc = 0;\n    }\n  }\n\n\
    \  if(lc>lp){\n    lp = lc;\n  }\n  if(lc>ln){\n    ln = lc;\n  }\n\n  return\
    \ [lp, ln];\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n    var\
    \ lLen2 = l2.length;\n    var i = 0;\n    var j = 0;\n    while(i<lLen1 && j<lLen2){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else{\n            if(l1[i]<l2[j]){\n            \
    \    i++;\n            }else{\n                j++;\n            }\n        }\n\
    \    }\n    return result;\n}\n", "  var out = [];\n  var lLen = l1.length;\n\
    \  var l2 = l2.slice(0);\n  while(lLen--){\n    if(l2.indexOf(l1[lLen]) === -1)\
    \ out.push(l1[lLen]);\n  }\n  return out;\n}\n", "  var out = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  var i = 0;\n  var j = 0;\n  while (i < l1.length && j < l2.length) {\n    if\
    \ (l1[i] === l2[j]) {\n      out.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n             \
    \   break;\n            }\n        }\n    }\n    return result;\n}\n", "  var\
    \ out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var result = [];\n    var i =\
    \ 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var m = l2.length;\n\
    \    while(i<n && j<m){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        result.push(l1[i]);\n      }\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var\
    \ l = 0;\n    var len1 = l1.length;\n    var len2 = l2.length;\n    while(i <\
    \ len1 && j < len2){\n        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i] < l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    while(i < len1){\n        result.push(l1[i]);\n       \
    \ i++;\n    }\n    while(j < len2){\n        result.push(l2[j]);\n        j++;\n\
    \    }\n    return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n    var lLen\
    \ = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    while (lLen > i){\n\
    \        if (l1.charAt(i) !== l2.charAt(i)){\n            return false;\n    \
    \    }\n        i++;\n    }\n    while (i < lLen){\n        out.push(l1.charAt(i));\n\
    \        i++;\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var ret = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n        ret.push(l1[i]);\n\
    \      }\n    }\n  }\n  return ret;\n}\n", "    var result = [];\n    var i =\
    \ 0;\n    while(i<l1.length && i<l2.length){\n        if(l1[i]===l2[i]){\n   \
    \         result.push(l1[i]);\n            i++;\n        }\n        else if(l1[i]<l2[i]){\n\
    \            result.push(l1[i]);\n            i++;\n        }\n        else{\n\
    \            result.push(l2[i]);\n            i++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n      l1.splice(0, 1);\n\
    \      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n      l1.splice(0, 1);\n\
    \    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return result;\n}\n", "  var\
    \ out = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n\
    \    if(l1[i] === l2[i]){\n      out.push(l1[i]);\n    }\n  }\n  return out;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    for(var j = 0, len2 = l2.length; j < len2; j++){\n      if(l1[i] === l2[j]){\n\
    \        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var out = [];\n  var lLen = l1.length;\n  var l2 = l2.slice(0);\n  while(lLen--){\n\
    \    if(l2.indexOf(l1[lLen]) === -1) out.push(l1[lLen]);\n  }\n  return out;\n\
    }\n", "    var result = [];\n    var i = 0;\n    while(i<l1.length && i<l2.length){\n\
    \        if(l1[i]===l2[i]){\n            result.push(l1[i]);\n            i++;\n\
    \        }\n        else{\n            break;\n        }\n    }\n    return result;\n\
    }\n", "  var lc = new Map();\n  l1.forEach(function(v){lc.set(v, 1);});\n  l2.forEach(function(v){lc.set(v,\
    \ 1);});\n  return Array.from(lc.keys()).sort().filter(function(v, i, a){\n  \
    \  return a.indexOf(v) === i;\n  });\n}\n", "    var out = [];\n    var hash =\
    \ {};\n    var lhash = {};\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n\
    \        hash[l1[i]] = 1;\n        lhash[l1[i]] = 1;\n    }\n    for(i = 0; i\
    \ < l2.length; i++){\n        hash[l2[i]] = 1;\n        lhash[l2[i]] = 1;\n  \
    \  }\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n\
    \            if(hash[l1[i]] === hash[l2[j]]){\n                out.push(l1[i]);\n\
    \            }\n        }\n    }\n    return out;\n}\n", "    var out = [];\n\
    \    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j <\
    \ l2.length; j++){\n            if(l1[i] === l2[j]){\n                out.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return out;\n}\n",
  "    var out = [];\n    var lLen = l1.length;\n    var l1i = -1;\n    var l2i =\
    \ -1;\n    var l1p = -1;\n    var l2p = -1;\n    var l1f = false;\n    var l2f\
    \ = false;\n\n    while (l1i < lLen){\n        if (l2f || l2i > lLen){\n     \
    \       l2f = false;\n            l2i = lLen;\n        }\n        if (l1f || l1i\
    \ > lLen){\n            l1f = false;\n            l1i = lLen;\n        }\n   \
    \     if (l2i >= l1i){\n            out.push(l2[l2i]);\n            l2i++;\n \
    \       }else{\n            out.push(l1[l1i]);\n            l1i++;\n        }\n\
    \    }\n\n    return out;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var i = 0;\n    var j = 0;\n    while(i<lLen1\
    \ && j<lLen2){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if(l1[i]<l2[j]){\n\
    \            i++;\n        }\n        else{\n            j++;\n        }\n   \
    \ }\n    return result;\n}", "    var out = [];\n    var hash = {};\n    var lLen\
    \ = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n    var\
    \ i = 0;\n    while(l1Len > 0 && l2Len > 0){\n        if(l1[i] === l2[i]){\n \
    \           out.push(l1[i]);\n            l1Len--;\n            l2Len--;\n   \
    \     }else{\n            if(hash[l1[i]] === undefined){\n                hash[l1[i]]\
    \ = 1;\n                out.push(l1[i]);\n                l1Len--;\n         \
    \   }else{\n                if(hash[l1[i]] > hash[l2[i]]){\n                 \
    \   out.push(l2[i]);\n                    l2Len--;\n                }else{\n \
    \                   hash[l1[i]]++;\n                }\n            }\n       \
    \ }\n        i++;\n    }\n    return out;\n}\n", "  var out = [];\n  var hash\
    \ = {};\n  for(var i=0; i<l1.length; i++){\n    var a = l1[i];\n    hash[a] =\
    \ hash[a] || [];\n    hash[a].push(i);\n  }\n  for(var i=0; i<l2.length; i++){\n\
    \    var a = l2[i];\n    var ai = hash[a];\n    for(var j=0; j<ai.length; j++){\n\
    \      var b = ai[j];\n      if(b in hash){\n        out.push(a);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var lc = 0, // common length\n      lp = 0, // common\
    \ prefix\n      ln = l1.length, // length of first list\n      lm = l2.length,\
    \ // length of second list\n      i = 0, // counter for first list\n      j =\
    \ 0;\n\n  // check common length\n  if(ln >= lm)\n    return [];\n\n  // get common\
    \ prefix\n  while(lp < ln && l1[lp] === l2[lp])\n    lp++;\n\n  // get common\
    \ length\n  while(lp < lm) {\n    while(l1[lp] === l2[j++])\n      lp++;\n   \
    \ if(lp < lm)\n      j = 0;\n  }\n\n  // return merged list\n  return l1.slice(lp,\
    \ l1 + lp + 1).filter(function(elem, pos, self) {\n    return self.indexOf(elem)\
    \ == pos;\n  });\n}\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "    var result = [];\n\
    \    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    var i\
    \ = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "    var result = [];\n    var i =\
    \ 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length, l2.length);\n\
    \    while (i < l1 || j < l2) {\n        if (l1 && l1[i] === l2[j]) {\n      \
    \      result.push(l1[i]);\n            i++;\n            j++;\n        } else\
    \ if (l2 && l2[j] === l1[i]) {\n            result.push(l2[j]);\n            j++;\n\
    \        } else {\n            k++;\n        }\n    }\n    return result;\n}\n",
  "    var out = [];\n    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var\
    \ i = 0;\n    while (lLen > i){\n        if (l1.charAt(i) !== l2.charAt(i)){\n\
    \            return false;\n        }\n        i++;\n    }\n    while (i < lLen){\n\
    \        if (l1.charAt(i) !== l2.charAt(i)){\n            return false;\n    \
    \    }\n        i++;\n    }\n    return true;\n}\n", "    var result = [];\n \
    \   var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n  \
    \  var rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx]\
    \ === l2[rIdx]){\n            result.push(l1[lIdx]);\n            lIdx += 1;\n\
    \            rIdx += 1;\n        }else{\n            lIdx += 1;\n        }\n \
    \   }\n    return result.concat(l1.slice(rIdx)).concat(l2.slice(lIdx));\n}\n",
  "  var result = [];\n  var i = 0;\n  var j = 0;\n  while (i < l1.length && j < l2.length){\n\
    \    if (l1[i] === l2[j]){\n      result.push(l1[i]);\n      i++;\n      j++;\n\
    \    } else if (l1[i] > l2[j]){\n      i++;\n    } else {\n      j++;\n    }\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    var i = 0;\n    var j\
    \ = 0;\n    var k = 0;\n    var l = Math.min(l1.length, l2.length);\n    while\
    \ (i < l1 || j < l2) {\n        if (l1 && l1[i] === l2[j]) {\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l2 && l2[j] === l1[i])\
    \ {\n            result.push(l2[j]);\n            j++;\n        } else {\n   \
    \         k++;\n        }\n    }\n    return result;\n}\n", "  var out = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n \
    \   }\n  }\n  return out;\n}\n", "  var l = [], i = 0, j = 0;\n  while(l1.length\
    \ > i){\n    if(l2.length > j){\n      if(l1[i] === l2[j]){\n        l.push(l1[i]);\n\
    \        l1.splice(i,1);\n        l2.splice(j,1);\n      }\n      else{\n    \
    \    j++;\n      }\n    }\n    else{\n      i++;\n    }\n  }\n  return l;\n}\n",
  "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n        l1 = l1[i];\n  \
    \      for(j = 0; j < lLen2; j++){\n            l2 = l2[j];\n            if(l1\
    \ === l2){\n                result.push(l1);\n                break;\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "  var lc = 0, // common\
    \ length\n      lp = 0, // last common length\n      i = 0;\n  while(lc < l1 &&\
    \ lp < l2){\n    if(l1[i] === l2[lp]){\n      lc ++;\n      lp ++;\n    }else{\n\
    \      lc ++;\n    }\n    i ++;\n  }\n  return lc > l1 ? lc : l1;\n}\n", "   \
    \ var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n \
    \   var lIdx = 0;\n    var rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n\
    \        if (l1[lIdx] === l2[rIdx]){\n            result.push(l1[lIdx]);\n   \
    \         lIdx += 1;\n            rIdx += 1;\n        }else{\n            if (l1[lIdx]\
    \ < l2[rIdx]){\n                lIdx += 1;\n            }else{\n             \
    \   rIdx += 1;\n            }\n        }\n    }\n    return result;\n}\n", " \
    \ var out = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n    }else{\n      out.push(l2[0]);\n\
    \      l2.shift();\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  var i\
    \ = 0;\n  while(l1.length > i){\n    if(l2.indexOf(l1[i]) !== -1){\n      out.push(l1[i]);\n\
    \    }\n    i++;\n  }\n  return out;\n}\n", "    var result = [];\n    var lLen1\
    \ = l1.length;\n    var lLen2 = l2.length;\n    var lIdx = 0;\n    var rIdx =\
    \ 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n\
    \            result.push(l1[lIdx]);\n            lIdx++;\n            rIdx++;\n\
    \        }\n        else if (l1[lIdx] < l2[rIdx]){\n            lIdx++;\n    \
    \    }\n        else {\n            rIdx++;\n        }\n    }\n    return result;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) != -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n\
    \    var m = l2.length;\n    while (i < n && j < m) {\n        if (l1[i] === l2[j])\
    \ {\n            result.push(l1[i]);\n            i++;\n            j++;\n   \
    \     } else if (l1[i] < l2[j]) {\n            i++;\n        } else {\n      \
    \      j++;\n        }\n    }\n    return result;\n}\n", "  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j\
    \ = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n              \
    \  result.push(l1[i]);\n                break;\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var result = [];\n    var i = 0, j = 0;\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    result.push(l1[i]);\n            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n\
    \            i++;\n        }else{\n            j++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var ret = [];\n\
    \    var i, len;\n    for(i = 0, len = Math.min(l1.length, l2.length); i < len;\
    \ i++){\n        if(l1[i] === l2[i]){\n            ret.push(l1[i]);\n        }\n\
    \    }\n    return ret;\n}\n", "    var out = [];\n    var hash = {};\n    var\
    \ l1 = l1 || [];\n    var l2 = l2 || [];\n    var i = 0, j = 0;\n    var len =\
    \ Math.min(l1.length, l2.length);\n    while (i < len && j < len){\n        if(hash[l1[i]]\
    \ === hash[l2[j]]){\n            out.push(l1[i]);\n            i++;\n        \
    \    j++;\n        }else if(hash[l1[i]] > hash[l2[j]]){\n            j++;\n  \
    \      }else{\n            i++;\n        }\n    }\n    return out;\n}\n", "  \
    \  var out = [];\n    var hash = {};\n    var l1 = l1 || [];\n    var l2 = l2\
    \ || [];\n    var i = 0, j = 0;\n    var len = Math.min(l1.length, l2.length);\n\
    \    for(; i < len; i++){\n        if(hash[l1[i]] === undefined){\n          \
    \  hash[l1[i]] = 1;\n            out.push(l1[i]);\n        }\n    }\n    for(;\
    \ j < len; j++){\n        if(hash[l2[j]] === undefined){\n            hash[l2[j]]\
    \ = 1;\n            out.push(l2[j]);\n        }\n    }\n    return out;\n}\n",
  "  var l = [], i = 0, j = 0;\n  while(l1.length > i){\n    l.push(l1[i]);\n    i++;\n\
    \  }\n  while(l2.length > j){\n    l.push(l2[j]);\n    j++;\n  }\n  return l;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var out = [];\n    var i = 0;\n\
    \    var j = 0;\n    var k = 0;\n    var n = Math.min(l1.length, l2.length);\n\
    \    while(i<n && j<n){\n        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n\
    \    var k = 0;\n    var l = Math.min(l1.length, l2.length);\n    while(i<l1 ||\
    \ j<l2){\n        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n    \
    \        i++;\n            j++;\n        }else if(l1[i] < l2[j]){\n          \
    \  i++;\n        }else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var lLen = l1.length;\n    var l2 = l2.slice(0);\n\
    \    var l1Len = l1.length;\n    var i = 0;\n    while (l1Len > 0 && l2Len > 0){\n\
    \        if (l1[l1Len - 1] === l2[0]){\n            l1.pop();\n            l2.shift();\n\
    \            l1Len--;\n            l2Len--;\n        }\n        else if (l1[l1Len\
    \ - 1] < l2[0]){\n            result.push(l1[l1Len - 1]);\n            l1.pop();\n\
    \            l1Len--;\n        }\n        else{\n            result.push(l2[0]);\n\
    \            l2.shift();\n            l2Len--;\n        }\n    }\n    while (l1Len\
    \ > 0){\n        result.push(l1[l1Len - 1]);\n        l1.pop();\n        l1Len--;\n\
    \    }\n    while (l2Len > 0){\n        result.push(l2[0]);\n        l2.shift();\n\
    \        l2Len--;\n    }\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n \
    \ }\n  return result;\n}\n", "  var result = [];\n  var l1 = l1 || [];\n  var\
    \ l2 = l2 || [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i < len;\
    \ i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var ret = [];\n    var l1 = l1 || [];\n    var l2 = l2 || [];\n   \
    \ var i = 0, j = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            ret.push(l1[0]);\n            l1.shift();\n       \
    \     l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n\
    \        }else{\n            l2.shift();\n        }\n    }\n    return ret;\n\
    }\n", "    var out = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n   \
    \ while (i<l1.length && j<l2.length){\n        if (l1[i]===l2[j]){\n         \
    \   out.push(l1[i]);\n            i++;\n            j++;\n        }\n        else\
    \ if (l1[i]<l2[j]){\n            i++;\n        }\n        else {\n           \
    \ j++;\n        }\n    }\n    return out;\n}\n", "    var out = [];\n    var lLen1\
    \ = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var j = 0;\n \
    \   while( i < lLen1 && j < lLen2){\n        if( l1[i] === l2[j]){\n         \
    \   out.push( l1[i] );\n            i++;\n            j++;\n        }\n      \
    \  else{\n            i++;\n        }\n    }\n    while( i < lLen1){\n       \
    \ out.push( l1[i] );\n        i++;\n    }\n    while( j < lLen2){\n        out.push(\
    \ l2[j] );\n        j++;\n    }\n    return out;\n}\n", "    var out = [];\n \
    \   var hash = {};\n    var llen = l1.length;\n    var llen2 = l2.length;\n  \
    \  var i = 0;\n    var j = 0;\n    while( i < llen && j < llen2 ){\n        if(\
    \ l1[i] === l2[j] ){\n            out.push( l1[i] );\n            i++;\n     \
    \       j++;\n        }else{\n            if( !hash[l1[i]] ){\n              \
    \  hash[l1[i]] = 1;\n                out.push( l1[i] );\n            }\n     \
    \       if( !hash[l2[j]] ){\n                hash[l2[j]] = 1;\n              \
    \  out.push( l2[j] );\n            }\n            i++;\n            j++;\n   \
    \     }\n    }\n    return out;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] == l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] ===\
    \ l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n    var hash\
    \ = {};\n    var lLen = l1.length;\n    var l1i = -1;\n    var l2i = -1;\n   \
    \ var l2Len = l2.length;\n    var l2Index = -1;\n    while(l1i< lLen && l2i< l2Len){\n\
    \        if(l1[l1i] == l2[l2i] && !hash[l1[l1i]]) {\n            out.push(l1[l1i]);\n\
    \            hash[l1[l1i]] = true;\n            l1i++;\n            l2i++;\n \
    \       } else if(l1[l1i] < l2[l2i]) {\n            l1i++;\n        } else {\n\
    \            l2i++;\n        }\n    }\n    return out;\n}\n", "  var result =\
    \ [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n  \
    \    result.push(l1[0]);\n      l1.splice(0, 1);\n      l2.splice(0, 1);\n   \
    \ }else if(l1[0] < l2[0]){\n      l1.splice(0, 1);\n    }else{\n      l2.splice(0,\
    \ 1);\n    }\n  }\n  return result;\n}\n", "    var result = [];\n    var lLen\
    \ = l1.length;\n    var l1Index = 0;\n    var l2Index = 0;\n    while (l1Index\
    \ < lLen) {\n        while (l2Index < lLen && l1[l1Index] === l2[l2Index]) {\n\
    \            result.push(l1[l1Index++]);\n            l2Index++;\n        }\n\
    \        if (l2Index >= lLen) {\n            result.push(l1[l1Index++]);\n   \
    \     }\n    }\n    return result;\n}\n", "  var result = [];\n  var lLen1 = l1.length;\n\
    \  var lLen2 = l2.length;\n  while(lLen1--){\n    while(lLen2--){\n      if(l1[lLen1]\
    \ == l2[lLen2]){\n        result.push(l1[lLen1]);\n        lLen1--;\n        lLen2--;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var i, l=l1.length, l2=l2.length, a=0, b=0, c;\n  for(i=0; i<l; i++){\n\
    \    a = l1[i];\n    for(j=0; j<l2; j++){\n      b = l2[j];\n      if(a===b){\n\
    \        c = i;\n        break;\n      }\n    }\n    if(c!==i){\n      l2.splice(c,\
    \ 1);\n    }\n  }\n  return l2;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var l = [], i, j, k;\n  for(i = 0; i < l1.length; i++){\n    for(j =\
    \ 0; j < l2.length; j++){\n      k = l1.indexOf(l2[j]);\n      if(k != -1){\n\
    \        l.push(l1[i]);\n        l1.splice(i, 1);\n        i--;\n      }\n   \
    \ }\n  }\n  return l;\n}\n", "    var out = [];\n    var hash = {};\n    var llen\
    \ = l1.length;\n    var llen2 = l2.length;\n    var i = 0;\n    var j = 0;\n \
    \   while( i < llen && j < llen2 ){\n        if( l1[i] === l2[j] ){\n        \
    \    out.push( l1[i] );\n            i++;\n            j++;\n        }\n     \
    \   else if(hash[l1[i]] === hash[l2[j]]) {\n            out.push( l1[i] );\n \
    \           i++;\n        }\n        else{\n            hash[l1[i]] = hash[l2[j]]\
    \ = 1;\n            out.push( l2[j] );\n            j++;\n        }\n    }\n \
    \   while( i < llen ){\n        out.push( l1[i] );\n        i++;\n    }\n    while(\
    \ j < llen2 ){\n        out.push( l2[j] );\n        j++;\n    }\n    return out;\n\
    }\n", "  var l = [], i = 0, j = 0;\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n\
    \      l.push(l2[0]);\n      l2.shift();\n    }\n  }\n  while(i < l1.length){\n\
    \    l.push(l1[i]);\n    i++;\n  }\n  while(j < l2.length){\n    l.push(l2[j]);\n\
    \    j++;\n  }\n  return l;\n}\n", "    var result = [];\n    var i = 0;\n   \
    \ var j = 0;\n    var k = 0;\n    var lLen = l1.length;\n    var l1Len = l1.length;\n\
    \    var l2Len = l2.length;\n    var maxLen = Math.max(lLen, l2Len);\n    while(i<l1Len\
    \ && j<l2Len){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n        \
    \    i++;\n        }else{\n            j++;\n        }\n    }\n    while(i<l1Len){\n\
    \        result.push(l1[i]);\n        i++;\n    }\n    while(j<l2Len){\n     \
    \   result.push(l2[j]);\n        j++;\n    }\n    return result;\n}\n", "  var\
    \ out = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      out.push(l1[0]);\n      l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else\
    \ if(l1[0] < l2[0]){\n      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n\
    \    }\n  }\n  return out;\n}\n", "    var result = [];\n    var i = 0;\n    var\
    \ j = 0;\n    var k = 0;\n    var n = l1.length;\n    var m = l2.length;\n   \
    \ while(i<n && j<m){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return result;\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var out = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            j++;\n\
    \        }\n        else{\n            i++;\n        }\n    }\n    return out;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var result = [];\n    var i =\
    \ 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0] === l2[0]){\n\
    \            result.push(l1[0]);\n            l1.shift();\n            l2.shift();\n\
    \        }else if(l1[0] < l2[0]){\n            l1.shift();\n        }else{\n \
    \           l2.shift();\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var out = [];\n    var i = 0, j = 0;\n    var len = Math.min(l1.length,\
    \ l2.length);\n    while (i < len && j < len){\n        if (l1[i] === l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if (l1[i] > l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "    var out = [];\n\
    \    var llen = l1.length;\n    var lx = 0;\n    var ly = 0;\n    while (lx <\
    \ llen && ly < llen){\n        if (l1[lx] === l2[ly]){\n            lx++;\n  \
    \          ly++;\n        }\n        else if (l1[lx] < l2[ly]){\n            out.push(l1[lx]);\n\
    \            lx++;\n        }\n        else {\n            out.push(l2[ly]);\n\
    \            ly++;\n        }\n    }\n    while (ly < llen){\n        out.push(l2[ly]);\n\
    \        ly++;\n    }\n    while (lx < llen){\n        out.push(l1[lx]);\n   \
    \     lx++;\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var lLen = l1.length;\n  \
    \  var l2 = l2.slice(0);\n    var l1Len = l1.length;\n    var i = 0;\n    while\
    \ (l1Len > 0 && l2Len > 0){\n        if (l1[i] === l2[0]){\n            l2.shift();\n\
    \            l1Len --;\n        }\n        else if (l1[i] < l2[0]){\n        \
    \    result.push(l1[i]);\n            l1.splice(i--, 1);\n            l1Len --;\n\
    \        }\n        else {\n            result.push(l2[0]);\n            l2.shift();\n\
    \            l2Len --;\n        }\n    }\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0,\
    \ len2 = l2.length; j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var ret = [];\n\
    \    var l1 = l1 || [];\n    var l2 = l2 || [];\n    var i = 0, j = 0;\n    var\
    \ ilen = l1.length;\n    var jlen = l2.length;\n    for(; i < ilen; i++){\n  \
    \      for(; j < jlen; j++){\n            if(l1[i] === l2[j]){\n             \
    \   ret.push(l1[i]);\n                break;\n            }\n        }\n    }\n\
    \    return ret;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    if(l2.indexOf(l1[i]) != -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var out = [];\n  var llen = l1.length;\n\
    \  var lx = 0;\n  var ly = 0;\n  while(lx < llen && ly < llen){\n    if(l1[lx]\
    \ === l2[ly]){\n      out.push(l1[lx]);\n      lx++;\n      ly++;\n    }else if(l1[lx]\
    \ < l2[ly]){\n      ly++;\n    }else{\n      lx++;\n    }\n  }\n  return out;\n\
    }\n", "  var out = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0]\
    \ === l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n   \
    \ }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n  }\n  return out;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var ret = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      ret.push(l1[i]);\n\
    \    }\n  }\n  return ret;\n}\n", "    var result = [];\n    for(var i=0; i<l1.length;\
    \ i++){\n        if(l2.indexOf(l1[i]) == -1){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    var i\
    \ = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }\n        else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "  var out = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    for(var i = 0, len = l1.length; i < len; i++){\n\
    \        if(l2.indexOf(l1[i]) !== -1){\n            result.push(l1[i]);\n    \
    \    }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length; j < len2;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var lc = 0, // common length\n\
    \      lp = 0, // common prefix\n      ln = l1.length, // length of first list\n\
    \      lm = l2.length, // length of second list\n      i = 0, // current index\n\
    \      j = 0;\n\n  // check common length\n  if(ln >= lm)return [];\n\n  // get\
    \ common prefix\n  for(; i < ln; i++){\n    if(l1[i] !== l2[j]){\n      lc = i;\n\
    \      break;\n    }\n  }\n\n  // get common suffix\n  for(; j < lm; j++){\n \
    \   if(l1[i] !== l2[j]){\n      lc = i;\n      break;\n    }\n  }\n\n  // return\
    \ common substring\n  return l1.slice(lc);\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n", "  var l = [],\n      l1 = l1 || [],\n      l2\
    \ = l2 || [],\n      i = 0, j = 0;\n\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n\
    \      l.push(l2[0]);\n      l2.shift();\n    }\n  }\n\n  while(i < l1.length){\n\
    \    l.push(l1[i++]);\n  }\n\n  while(j < l2.length){\n    l.push(l2[j++]);\n\
    \  }\n\n  return l;\n}\n", "  var result = [];\n  var lLen1 = l1.length;\n  var\
    \ lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    return l1;\n  }\n  if(lLen2 >\
    \ lLen1){\n    return l2;\n  }\n  while(lLen1 > 0){\n    var l1 = l1[0];\n   \
    \ var l2 = l2[0];\n    if(l1 === l2){\n      result.push(l1);\n      l1.splice(0,\
    \ 1);\n      l2.splice(0, 1);\n      lLen1--;\n      lLen2--;\n    }else if(l1\
    \ !== l2){\n      return result;\n    }\n  }\n  return result;\n}\n", "    var\
    \ out = [];\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j\
    \ = 0; j < l2.length; j++){\n            k = l1.indexOf(l2[j]);\n            if(k\
    \ !== -1){\n                out.push(l1[i]);\n                l1.splice(i, 1);\n\
    \                i--;\n            }\n        }\n    }\n    return out;\n}\n",
  "  var out = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n    }else{\n      out.push(l2[0]);\n\
    \      l2.shift();\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  var lLen1\
    \ = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    out = l1;\n\
    \    l1 = l2;\n    l2 = out;\n  }\n  for(var i=0; i<lLen1; i++){\n    for(var\
    \ j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        l1.splice(i, 1);\n        l2.splice(j, 1);\n        i--;\n        j--;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "    var out = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var commonCount = 0;\n  \
    \  var lLen = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n\
    \    var maxLen = Math.max(lLen, l2Len);\n    while(l1Len > 0 && l2Len > 0){\n\
    \        if(l1[k] == l2[j]){\n            commonCount++;\n            k = k +\
    \ 1;\n            j++;\n            if(j == l2Len){\n                j = 0;\n\
    \                k = k + 1;\n            }\n        }else if(l1[k] > l2[j]){\n\
    \            commonCount++;\n            k = k + 1;\n        }else{\n        \
    \    commonCount++;\n            j = j + 1;\n            if(j == lLen){\n    \
    \            j = 0;\n                k = k + 1;\n            }\n        }\n  \
    \      if(k == maxLen){\n            break;\n        }\n    }\n    while(i < lLen\
    \ && j < l2Len){\n        if(l1[i] == l2[j]){\n            commonCount++;\n  \
    \          i++;\n            j++;\n            if(j == l2Len){\n             \
    \   j = 0;\n                i++;\n            }\n        }else if(l1[i] > l2[j]){\n\
    \            commonCount++;\n            i++;\n        }else{\n            commonCount++;\n\
    \            j++;\n            if(j == lLen){\n                j = 0;\n      \
    \          i++;\n            }\n        }\n        if(k == maxLen){\n        \
    \    break;\n        }\n    }\n    return commonCount;\n}\n", "  var i, l=Math.min(l1.length,\
    \ l2.length), a=[], diff=l1.length-(l2.length);\n  for(i=l-1;i>=0;i--){\n    a.push(l1[i]==l2[i]?0:(l1[i]<l2[i]?-1:1));\n\
    \  }\n  for(i=diff;i>=0;i--){\n    a.push(l1[i]==l2[i]?0:(l1[i]<l2[i]?-1:1));\n\
    \  }\n  return a;\n}\n", "  var lc = 0, // common length\n      lp = 0, // last\
    \ common length\n      i = 0;\n  while(l1 && l2 && lc++ && lp < l1 || l2 && l1\
    \ && l2 && lp++ && lc < l2){\n    i++;\n  }\n  return lc < l1 ? l1 : l2;\n}\n",
  "    var out = [];\n    var common;\n    var l12 = [];\n    var l12l2 = [];\n  \
    \  var i = 0;\n    var j = 0;\n    var k = 0;\n    var l1 = l1 || [];\n    var\
    \ l2 = l2 || [];\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            l12l2.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                out.push(l1[i]);\n            \
    \    i++;\n            }else{\n                out.push(l2[j]);\n            \
    \    j++;\n            }\n        }\n    }\n    while(i<l1.length){\n        out.push(l1[i]);\n\
    \        i++;\n    }\n    while(j<l2.length){\n        out.push(l2[j]);\n    \
    \    j++;\n    }\n    return out;\n}\n", "    var out = [];\n    var i = 0, j\
    \ = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n \
    \           out.push(l1[i]);\n            i++;\n            j++;\n        }else\
    \ if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n     \
    \   }\n    }\n    return out;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n             \
    \   break;\n            }\n        }\n    }\n    return result;\n}\n", "    var\
    \ out = [];\n    var hash = {};\n    var i, j, k;\n    for(i = 0; i < l1.length;\
    \ i++){\n        for(j = 0; j < l2.length; j++){\n            k = l1[i];\n   \
    \         if(hash[k] === undefined){\n                hash[k] = 1;\n         \
    \   }else{\n                hash[k]++;\n            }\n        }\n    }\n    for(i\
    \ = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n       \
    \     k = l2[j];\n            if(hash[k] === undefined){\n                hash[k]\
    \ = 1;\n            }else{\n                hash[k]--;\n            }\n      \
    \  }\n    }\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length;\
    \ j++){\n            if(hash[l1[i]] === hash[l2[j]]){\n                out.push(l1[i]);\n\
    \            }\n        }\n    }\n    return out;\n}\n", "  var i, l=l1.length,\
    \ l2=l2.length, a=0, b=0, c;\n  for(i=0; i<l; i++){\n    c = l1[i];\n    for(j=0;\
    \ j<l2; j++){\n      if(c===l2[j]){\n        a++;\n        break;\n      }\n \
    \   }\n  }\n  for(i=0; i<l; i++){\n    c = l1[i];\n    for(j=0; j<l2; j++){\n\
    \      if(c===l2[j]){\n        b++;\n        break;\n      }\n    }\n  }\n  return\
    \ [a, b];\n}\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var result = [];\n    var i = 0;\n \
    \   var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n     \
    \   if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n  \
    \          j++;\n        }else{\n            if(l1[i]<l2[j]){\n              \
    \  i++;\n            }else{\n                j++;\n            }\n        }\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    result.push(l1[i]);\n            i++;\n            j++;\n        }\n    \
    \    else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n     \
    \       j++;\n        }\n    }\n    return result;\n}", "  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n\
    \    var j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This is not the most efficient solution. `common` function has O(n^2) complexity.\
    \ `sort` function has O(nlogn) complexity. `intersection` function has O(n) complexity.\
    \ `union` function has O(n) complexity. `merge` function has O(n) complexity.\
    \ `mergeSort` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity.\
    \ `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity.\
    \ `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted`\
    \ function has O(nlogn) complexity. `mergeSorted` function has O(nlogn) complexity.\
    \ `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function has O(nlogn)\
    \ complexity. `mergeSorted` function has O(nlogn) complexity. `mergeSorted` function\
    \ has O(n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n\
    \      l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len;\
    \ i++){\n    if(l2.indexOf(l1[i]) !== -1){\n      result.push(l1[i]);\n    }\n\
    \  }\n  return result;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n\
    \  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    }\n    else if(l1[i]<l2[j]){\n      i++;\n    }\n\
    \    else{\n      j++;\n    }\n  }\n  return result;\n}\n", "    var result =\
    \ [];\n    var lLen = l1.length;\n    var l1Len = l1.length;\n    var l2Len =\
    \ l2.length;\n    var i = 0;\n    var j = 0;\n    while(i<lLen && j<l2Len){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var lLen = l1.length;\n    var l2 = l2.slice(0);\n\
    \    var lLen2 = l2.length;\n    var i = 0;\n    while (lLen > 0 && lLen2 > 0){\n\
    \        if (l1[i] === l2[0]){\n            l1.splice(i, 1);\n            lLen--;\n\
    \            lLen2--;\n        }\n        else{\n            result.push(l1[i]);\n\
    \            l1.splice(i, 1);\n            lLen--;\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "  var out = [];\n  while(l1.length && l2.length){\n\
    \    if(l1[0]===l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0]<l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n    }else{\n\
    \      out.push(l2[0]);\n      l2.shift();\n    }\n  }\n  return out;\n}\n", " \
    \ var i, l=l1.length, m=l2.length, a = [], o = [];\n  for(i=0; i<l; i++){\n  \
    \  a.push(l1[i]);\n  }\n  for(i=0; i<m; i++){\n    o.push(l2[i]);\n  }\n  a =\
    \ a.concat(o);\n  a.sort();\n  return a;\n}\n", "  var out = [];\n  var lLen1\
    \ = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    out = l1;\n\
    \    l1 = l2;\n    l2 = out;\n  }\n  for(var i=0; i<lLen1; i++){\n    for(var\
    \ j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        l1.splice(i, 1);\n        l2.splice(j, 1);\n        i--;\n        j--;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var out = [];\n    var llen =\
    \ l1.length;\n    var lx = 0;\n    var ly = 0;\n    while (lx < llen && ly < llen){\n\
    \        if (l1[lx] === l2[ly]){\n            lx++;\n            ly++;\n     \
    \   }\n        else if (l1[lx] < l2[ly]){\n            out.push(l1[lx]);\n   \
    \         lx++;\n        }\n        else{\n            out.push(l2[ly]);\n   \
    \         ly++;\n        }\n    }\n    while (ly < llen){\n        out.push(l2[ly]);\n\
    \        ly++;\n    }\n    while (lx < llen){\n        out.push(l1[lx]);\n   \
    \     lx++;\n    }\n    return out;\n}\n", "    var out = [];\n    var lLen =\
    \ l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    var j = 0;\n    while(lLen\
    \ > i){\n        if(l2[j] === l1[i]){\n            l2.splice(j--, 1);\n      \
    \      lLen--;\n        }else{\n            i++;\n        }\n    }\n    while(l2.length\
    \ > 0){\n        out.push(l2[0]);\n        l2.shift();\n    }\n    return out;\n\
    }\n", "  var i, l=l1.length, m=l2.length, a=[], b=[], c=[]\n  for(i=0; i<l; i++){\n\
    \    a.push(l1[i])\n  }\n  for(i=0; i<m; i++){\n    b.push(l2[i])\n  }\n  while(l>0){\n\
    \    for(i=0; i<l; i++){\n      if(b.indexOf(a[i])<0){\n        c.push(a[i])\n\
    \        l--\n      }\n    }\n    for(i=0; i<m; i++){\n      if(c.indexOf(b.indexOf(a[i]))<0){\n\
    \        c.push(a[i])\n        l--\n      }\n    }\n  }\n  return c\n}\n", " \
    \ var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    for(var i = 0, len = l1.length; i < len; i++){\n\
    \        if(l2.indexOf(l1[i]) !== -1){\n            result.push(l1[i]);\n    \
    \    }\n    }\n    return result;\n}\n", "    var out = [];\n    var i = 0;\n\
    \    var j = 0;\n    var k = 0;\n    while (i<l1.length && j<l2.length){\n   \
    \     if (l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n  \
    \          j++;\n        }\n        else if (l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n", "  var lc = 0, // common length\n      l1, l2, // iterators\n      i1, i2,\
    \ // iterators\n      j, k; // iterators\n\n  while(l1 < l2){\n    j = lc; //\
    \ common length\n    i1 = l1;\n    i2 = l2;\n    while(i1 < i2){\n      if(l1[i1]\
    \ == l2[j]){\n        lc++;\n        j++;\n      }else{\n        i1++;\n     \
    \ }\n    }\n    l1 = i1 - 1;\n    l2 = j - 1;\n  }\n  return lc;\n}\n", "  var\
    \ result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n    var i =\
    \ 0, j = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0] ===\
    \ l2[0]){\n            out.push(l1[0]);\n            l1.shift();\n           \
    \ l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n   \
    \     }else{\n            l2.shift();\n        }\n    }\n    while(l1.length >\
    \ 0){\n        out.push(l1[0]);\n        l1.shift();\n    }\n    while(l2.length\
    \ > 0){\n        out.push(l2[0]);\n        l2.shift();\n    }\n    return out;\n\
    }\n", "  var i, l=Math.min(l1.length, l2.length), a=[], i=0;\n  while(i<l){\n\
    \    if(l1[i]===l2[i]){\n      a.push(l1[i]);\n      i++;\n    }else{\n      while(i<l\
    \ && a[a.length-1]===l2[i]){\n        a.pop();\n      }\n      if(i === l){\n\
    \        a.push(l2[i]);\n      }\n    }\n  }\n  return a;\n}\n", "    var result\
    \ = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var l1, l2,\
    \ i;\n    for(i = 0; i < lLen1; i++){\n        l1 = l1[i];\n        for(j = 0;\
    \ j < lLen2; j++){\n            l2 = l2[j];\n            if(l1 === l2){\n    \
    \            result.push(l1);\n                break;\n            }\n       \
    \ }\n    }\n    return result;\n}\n", "  var i, ret = [];\n  for(i = 0; i < l1.length;\
    \ i++){\n    for(var j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n\
    \        ret.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return ret;\n\
    }\n", "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var lIdx = 0;\n    var rIdx = 0;\n    var commonCount = 0;\n    while (lIdx\
    \ < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n           \
    \ commonCount++;\n            lIdx++;\n            rIdx++;\n        }\n      \
    \  else if (l1[lIdx] < l2[rIdx]){\n            lIdx++;\n        }\n        else\
    \ {\n            rIdx++;\n        }\n    }\n    while (lIdx < lLen1){\n      \
    \  result.push(l1[lIdx]);\n        lIdx++;\n    }\n    while (rIdx < lLen2){\n\
    \        result.push(l2[rIdx]);\n        rIdx++;\n    }\n    return result;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len;\
    \ i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n    }\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    var i = 0;\n    while(l1.length\
    \ > 0 && l2.length > 0){\n        if(l1[0] === l2[0]){\n            result.push(l1[0]);\n\
    \            l1.shift();\n            l2.shift();\n        }else if(l1[0] < l2[0]){\n\
    \            l1.shift();\n        }else{\n            l2.shift();\n        }\n\
    \        i++;\n    }\n    return result;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n \
    \ }\n  return result;\n}\n", "  var out = [];\n  var hash = {};\n  for(var i=0;\
    \ i<l1.length; i++){\n    var a = l1[i];\n    var b = l2[i];\n    var key = a<b?a:b;\n\
    \    if(hash[key]){\n      out.push(key);\n    }else{\n      hash[key] = true;\n\
    \    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var l = [],\n      i = 0,\n      j = 0,\n      k = 0,\n      n = l1.length,\n\
    \      m = l2.length,\n      a = l2.slice(0);\n  while(i<n && j<m){\n    if(l1[i]===l2[j]){\n\
    \      l.push(l1[i]);\n      i++;\n      j++;\n    }else{\n      if(l1[i]<l2[j]){\n\
    \        i++;\n      }else{\n        j++;\n      }\n    }\n  }\n  return l;\n\
    }\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0;\
    \ j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "    var result = [];\n    var i =\
    \ 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "    var out = [];\n    var llen\
    \ = l1.length;\n    var llen2 = l2.length;\n    var i = 0;\n    var j = 0;\n \
    \   while(i<llen && j<llen2){\n        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n        \
    \    i++;\n        }else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n", "  var result = [];\n  var i, j, k;\n  for(i = 0; i < l1.length; i++){\n\
    \    for(j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n \
    \   }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) !== -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n  \
    \    result.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      l1.shift();\n    }else{\n      l2.shift();\n    }\n  }\n  return\
    \ result;\n}\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    var\
    \ k = 0;\n    var n = l1.length;\n    var m = l2.length;\n    while (i < n &&\
    \ j < m) {\n        if (l1[i] === l2[j]) {\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        } else if (l1[i] < l2[j]) {\n   \
    \         i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n\
    \    var i = 0, j = 0;\n    while(l1.length > 0 && l2.length > 0){\n        if(l1[0]\
    \ === l2[0]){\n            out.push(l1[0]);\n            l1.shift();\n       \
    \     l2.shift();\n        }else if(l1[0] < l2[0]){\n            l1.shift();\n\
    \        }else{\n            l2.shift();\n        }\n    }\n    while(l1.length\
    \ > 0){\n        out.push(l1[0]);\n        l1.shift();\n    }\n    while(l2.length\
    \ > 0){\n        out.push(l2[0]);\n        l2.shift();\n    }\n    return out;\n\
    }\n", "  var i, l=Math.min(l1.length, l2.length), a=[], i=0;\n  while(l1.length\
    \ && l2.length){\n    if(l1[0]===l2[0]){\n      a.push(l1[0]);\n      l1.shift();\n\
    \      l2.shift();\n    }else if(l1[0]<l2[0]){\n      a.push(l1[i++]);\n     \
    \ l1.shift();\n    }else{\n      a.push(l2[i++]);\n      l2.shift();\n    }\n\
    \  }\n  return a;\n}\n", "    var out = [];\n    var common = [];\n    var l1\
    \ = l1 || [];\n    var l2 = l2 || [];\n    var i = 0, j = 0;\n    var k = 0;\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    common.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                i++;\n            }else{\n    \
    \            j++;\n            }\n        }\n    }\n    while(i<l1.length){\n\
    \        common.push(l1[i]);\n        i++;\n    }\n    while(j<l2.length){\n \
    \       common.push(l2[j]);\n        j++;\n    }\n    return common;\n}\n", " \
    \ var result = [];\n  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  for(var\
    \ i=0; i<lLen1; i++){\n    for(var j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n\
    \        result.push(l1[i]);\n      }\n    }\n  }\n  return result;\n}\n", " \
    \   var out = [];\n    var hash = {};\n    var i, j, k;\n    for(i = 0; i < l1.length;\
    \ i++){\n        hash[l1[i]] = true;\n    }\n    for(i = 0; i < l2.length; i++){\n\
    \        hash[l2[i]] = true;\n    }\n    for(k in hash){\n        if(hash.hasOwnProperty(k)){\n\
    \            out.push(k);\n        }\n    }\n    return out;\n}\n", "  var result\
    \ = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var l = [],\n      l1 = l1 || [],\n\
    \      l2 = l2 || [],\n      i = 0, j = 0;\n\n  while (l1.length && l2.length)\
    \ {\n    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n      i++;\n      j++;\n\
    \    } else if (l1[i] < l2[j]) {\n      l.push(l1[i]);\n      i++;\n    } else\
    \ {\n      l.push(l2[j]);\n      j++;\n    }\n  }\n\n  return l;\n}\n", "  var\
    \ out = [];\n  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 >\
    \ lLen2){\n    for(var i=0; i<lLen1; i++){\n      out.push(l1[i]);\n    }\n  }else{\n\
    \    for(var i=0; i<lLen2; i++){\n      out.push(l2[i]);\n    }\n  }\n  return\
    \ out;\n}\n", "  var l = [], i = 0, j = 0;\n  while(i<l1.length && j<l2.length){\n\
    \    if(l1[i]===l2[j]){\n      l.push(l1[i]);\n      i++;\n      j++;\n    }else\
    \ if(l1[i]<l2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n  return l;\n\
    }\n", "    var result = [];\n    var lLen = l1.length;\n    var l2 = l2.slice(0);\n\
    \    var i = 0;\n    while (lLen > 0 && l2.length > 0) {\n        if (l1[i] ===\
    \ l2[0]) {\n            l2.shift();\n            lLen--;\n        } else {\n \
    \           result.push(l1[i]);\n            l1.splice(i, 1);\n            lLen--;\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "  var out = [];\n\
    \  var i = 0;\n  var j = 0;\n  while(i < l1.length && j < l2.length){\n    if(l1[i]\
    \ === l2[j]){\n      out.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]\
    \ < l2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ != -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  var lLen = l1.length;\n  var l2 = l2.slice(0);\n  var l1Len\
    \ = l1.length;\n  var i = 0;\n  while(l1Len > 0 && l2Len > 0){\n    if(l1[i] ===\
    \ l2[i]){\n      result.push(l1[i]);\n      l1.splice(i, 1);\n      l2.splice(i,\
    \ 1);\n      l1Len--;\n      l2Len--;\n    }else{\n      i++;\n    }\n  }\n  return\
    \ result;\n}\n", "    var out = [];\n    var i = 0;\n    var j = 0;\n    var k\
    \ = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n \
    \           out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n \
    \           j++;\n        }\n    }\n    return out;\n}\n", "  var out = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n   \
    \ }\n  }\n  return out;\n}\n", "  var l = [], i = 0, j = 0;\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n   \
    \   l1.shift();\n      l2.shift();\n      i++;\n    }else if(l1[0] < l2[0]){\n\
    \      l.push(l1[0]);\n      l1.shift();\n    }else{\n      l.push(l2[0]);\n \
    \     l2.shift();\n    }\n  }\n  return l;\n}\n", "  var i, ret = [];\n  for(i\
    \ = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        ret.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return ret;\n}\n", "  var out = [];\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n      l1.splice(0, 1);\n  \
    \    l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n      l1.splice(0, 1);\n\
    \    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return out;\n}\n", "    var\
    \ result = [];\n    var lLen = l1.length;\n    var l1Len = l1.length;\n    var\
    \ l2Len = l2.length;\n    var i = 0;\n    var j = 0;\n    while(i<lLen){\n   \
    \     while(j<l2Len){\n            if(l1[i]===l2[j]){\n                result.push(l1[i]);\n\
    \                i++;\n                j++;\n            }else{\n            \
    \    break;\n            }\n        }\n        if(j===l2Len){\n            result.push(l1[i]);\n\
    \            i++;\n        }\n    }\n    return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

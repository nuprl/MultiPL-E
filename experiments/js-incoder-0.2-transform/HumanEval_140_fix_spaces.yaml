name: HumanEval_140_fix_spaces
language: js
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunction fix_spaces(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"),\"Example\");\n  assert.deepEqual(candidate(\"\
  Mudasir Hanif \"),\"Mudasir_Hanif_\");\n  assert.deepEqual(candidate(\"Yellow Yellow\
  \  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\");\n  assert.deepEqual(candidate(\"\
  Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"   Exa 1 2 2 mple\"\
  ),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["\treturn text.replace(/ /g,\"_\").replace(/  /g,\"-\")\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\"\");\n}\n",
  "\treturn text.replace(/ /g,\"_\").replace(/  +/g,\"-\").replace(/ +/g,\"\");\n\
    }\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\"\
    \");\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/  +/g, \"-\")\n}\n",
  "  return text.replace(/ /g,\"_\").replace(/  /g,\"-\")\n}\n", "    return text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\"\");\n}\n", "  return text.replace(/\
    \ /g,\"_\").replace(/  /g,\"-\").replace(/  +/g,\"+\");\n}\n", "\treturn text.replace(/\
    \ /g, \"_\").replace(/  +/g, \"-\").replace(/ +/g, \"-\");\n}\n", "\tvar spaces\
    \ = text.match(/ /g);\n\tfor(var i=0; i<spaces.length; i++){\n\t\ttext = text.replace(spaces[i],\
    \ \"_\");\n\t}\n\tvar spaces = text.match(/ +/g);\n\tfor(var i=0; i<spaces.length;\
    \ i++){\n\t\ttext = text.replace(spaces[i], \"-\");\n\t}\n\treturn text;\n}\n",
  "\treturn text.replace(/ /g, \"_\").replace(/\\s{2,}/g, \"-\");\n}\n", "\treturn\
    \ text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/  +$/g,\"\");\n}\n",
  "    return text.replace(/ /g, \"_\").replace(/  +/g, \"-\").replace(/^-+/, \"\"\
    );\n}\n", "\treturn text.replace(/\\s+/g, \"_\").replace(/\\s{2,}/g, \"-\");\n\
    }\n", "\tvar space_regex = /\\s+/g;\n\tvar consecutive_regex = /( ){2,}/g;\n\t\
    var consecutive_replacement = \"-\";\n\tvar fixed_text = text.replace(space_regex,\
    \ consecutive_replacement);\n\tfixed_text = fixed_text.replace(consecutive_regex,\
    \ consecutive_replacement);\n\treturn fixed_text;\n}\n", "\tvar spaces = text.match(/\
    \ /g);\n\tif(spaces && spaces.length > 2){\n\t\tspaces = spaces.map(function(s){\n\
    \t\t\treturn s.replace(/\\s+/g, \"-\");\n\t\t});\n\t\treturn spaces.join(\"_\"\
    );\n\t}\n\treturn text;\n}\n", "\treturn text.replace(/ /g, \"_\").replace(/ \
    \ +/g, \"-\").replace(/  +$/g,\"\");\n}\n", "\treturn text.replace(/\\s+/g,function(m){\n\
    \t\treturn m.replace(/ /g,\"_\");\n\t});\n}\n", "\treturn text.replace(/ /g,\"\
    _\").replace(/  /g,\"-\").replace(/  +/g,\"-\")\n}\n", "\tvar spaces = text.replace(/\
    \ /g, \"_\");\n\tvar consecutive = spaces.replace(/ +/g, \"-\");\n\tif(consecutive.length>2){\n\
    \t\tconsecutive = consecutive.replace(/-{2,}/g, \"-\");\n\t}\n\treturn consecutive;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

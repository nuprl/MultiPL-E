name: HumanEval_71_triangle_area
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\n// >>> triangle_area(3,\
  \ 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction triangle_area(a,\
  \ b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
  \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
completions: ["    if (a > b + c || b > a + c || c > a + b){\n        return -1;\n\
    \    }\n    return Math.sqrt(Math.pow((a + b + c), .25));\n}\n", "    if (a +\
    \ b > c && a + c > b && b + c > a){\n        return Math.sqrt(Math.pow((a + b),\
    \ 2) + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n    }\n    return -1;\n\
    }\n", "\tvar s = (a + b + c) / 2;\n\treturn (s > a) ? (s / 2) : (-1 * s / 2);\n\
    }\n", "    var s = a + b + c\n    if (s > a * a + b * b + c * c){\n        return\
    \ -1\n    }\n    var area = (s*(s-a)*(s-b)*(s-c))/6\n    return Math.round(area*100)/100\n\
    }\n", "    var s = (a+b+c)/2;\n    if (s > a&&s<=b&&s<=c) return s;\n    else\
    \ return -1;\n}\n</code>\n<|/ a tags=python,algorithm |>\n<| c |>\nThis doesn't\
    \ answer the question. OP wants to know if any triangle can be formed by three\
    \ points. Your code only checks if three points are collinear.\n<|/ c |>\n<| c\
    \ |>\nI misunderstood the question, thanks for pointing it out. I've edited my\
    \ answer to reflect that.\n<|/ c |>\n<| a |>\n<code>\ndef triangleArea(A, B, C):\n\
    \    AB = B - A\n    AC = C - A\n    BC = B - C\n    \n    AB_AC = AB * AC\n \
    \   AB_BC = AB * BC\n    AC_BC = AC * BC\n    \n    area_of_triangle = AB_AC +\
    \ AB_BC + AC_BC\n    \n    if area_of_triangle > 0:\n        return area_of_triangle\n\
    \    else:\n        return -1\n</code>\n<|/ a dscore=1 tags=python,algorithm |>\n\
    <| a tags=python,algorithm |>\n<code>\ndef triangleArea(A, B, C):\n    AB = B\
    \ - A\n    AC = C - A\n    BC = B - C\n    \n    area_of_triangle = AB * AC +\
    \ AB * BC + AC * BC\n    \n    if area_of_triangle > 0:\n        return area_of_triangle\n\
    \    else:\n        return -1\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\ndef triangleArea(A, B, C):\n    AB = B - A\n    AC = C - A\n    BC = B\
    \ - C\n    \n    area_of_triangle = AB * AC + AB * BC + AC * BC\n    \n    if\
    \ area_of_triangle > 0:\n        return area_of_triangle\n    else:\n        return\
    \ -1\n</code>\n<|/ a tags=python,algorithm |>\n<| a |>\n<code>\ndef triangleArea(A,\
    \ B, C):\n    AB = B - A\n    AC = C - A\n    BC = B - C\n    \n    area_of_triangle\
    \ = AB * AC + AB * BC + AC * BC\n    \n    if area_of_triangle > 0:\n        return\
    \ area_of_triangle\n    else:\n        return -1\n</code>\n<|/ a dscore=1 tags=python,algorithm\
    \ |>\n<| a tags=python,algorithm |>\n<code>\ndef triangleArea", "\tif((a + b >\
    \ c) && (a + c > b) && (b + c > a)){\n\t\treturn Math.sqrt(Math.pow((a + b), 2)\
    \ + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n\t}\n\treturn -1;\n}\n", " \
    \   var s = a + b + c;\n    if (s > a * a + b * b + c * c) {\n        return -1;\n\
    \    }\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n", "  var s\
    \ = a + b + c\n  var area = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return\
    \ area > 0 ? area : -1\n}\n", "    var s = a + b + c;\n    var area = Math.abs(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)));\n    return area > 0 ? area : -1;\n}\n", "\t\
    if(a+b>c && b+c>a && c+a>b){\n\t\treturn (a+b+c)/2;\n\t}\n\treturn -1;\n}\n",
  "  var s = a + b + c\n  if (s > a * a + b * b + c * c){\n    return -1\n  }\n  return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c))\n}\n", "    var s = a + b + c;\n\
    \    if (s > 0){\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\n", "    var s = (a+b+c)/2;\n    if(s>=(a+b) && s>=(a+c)\
    \ && s>=(b+c)){\n        return Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return\
    \ -1;\n}\n", "\tif(a+b > c || a+c > b || b+c > a){\n\t\treturn -1;\n\t}\n\treturn\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n", "\tif(a+b>c\
    \ || b+c>a || c+a>b){\n\t\treturn -1;\n\t}\n\treturn (a+b+c)/2;\n}\n", "\tvar\
    \ s = a + b + c;\n\tif (s > a * a + b * b + c * c){\n\t\treturn -1;\n\t}\n\treturn\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n", "\tif(a+b>c || b+c>a || c+a>b){\n\
    \t\treturn -1;\n\t}\n\treturn (a+b+c)/2;\n}\n", "\tif(a+b>c || b+c>a || c+a>b){\n\
    \t\treturn -1;\n\t}\n\treturn (a+b+c)/2;\n}\n", "    var s = (a + b + c) / 2;\n\
    \    if(s > a * b){\n        return -1;\n    }\n    if(s > a * c){\n        return\
    \ -1;\n    }\n    if(s > b * c){\n        return -1;\n    }\n    return Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\n", "\tif(a+b>c || b+c>a || c+a>b){\n\t\t\
    return -1;\n\t}\n\treturn (a+b+c)/2;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

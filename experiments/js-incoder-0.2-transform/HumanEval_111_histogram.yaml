name: HumanEval_111_histogram
language: js
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\n// >>> histogram(\"a b c\")\n// {\"a\": 1, \"b\": 1, \"c\": 1}\n//\
  \ >>> histogram(\"a b b a\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"a b c\
  \ a b\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"b b b b a\")\n// {\"b\": 4}\n\
  // >>> histogram(\"\")\n// {}\nfunction histogram(test){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = histogram;\n  assert.deepEqual(candidate(\"a b b a\"),{\"a\": 2, \"b\": 2});\n\
  \  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"\
  a b c d g\"),{\"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\
  r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b\
  \ b a\"),{\"b\": 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\"\
  : 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"\
  a\"),{\"a\": 1});\n}\n\ntest();"
completions: ["    var histogram = {};\n    test.split(' ').forEach(function(letter){\n\
    \        histogram[letter] = (histogram[letter] || 0) + 1;\n    });\n    return\
    \ histogram;\n}\n", "  var result = {};\n  var letters = test.split(\" \");\n\
    \  for(var i = 0; i < letters.length; i++){\n    var letter = letters[i];\n  \
    \  if(result[letter]){\n      result[letter]++;\n    }else{\n      result[letter]\
    \ = 1;\n    }\n  }\n  return result;\n}\n", "  var histogram = {};\n  var words\
    \ = test.split(\" \");\n  for(var i = 0; i < words.length; i++){\n    var letter\
    \ = words[i];\n    if(histogram[letter] == undefined){\n      histogram[letter]\
    \ = 1;\n    }else{\n      histogram[letter]++;\n    }\n  }\n  return histogram;\n\
    }\n", "  var letters = test.split(\" \");\n  var histogram = {};\n  for (var i\
    \ = 0; i < letters.length; i++){\n    var letter = letters[i];\n    if (histogram[letter]\
    \ == undefined){\n      histogram[letter] = 1;\n    }else{\n      histogram[letter]++;\n\
    \    }\n  }\n  return histogram;\n}\n", "  var histogram = {};\n  test.split(\"\
    \ \").forEach(function(letter){\n    histogram[letter] = histogram[letter] ? histogram[letter]\
    \ + 1 : 1;\n  });\n  return histogram;\n}\n", "  var histogram = {},\n      words\
    \ = test.split(\" \");\n  for(var i = 0, len = words.length; i < len; i++){\n\
    \    var word = words[i];\n    if(histogram[word]){\n      histogram[word]++;\n\
    \    }else{\n      histogram[word] = 1;\n    }\n  }\n  return histogram;\n}\n",
  "  var letters = test.split(\" \");\n  var histogram = {};\n  for (var i = 0; i\
    \ < letters.length; i++){\n    var letter = letters[i];\n    if (histogram[letter]\
    \ == undefined){\n      histogram[letter] = 1;\n    }\n    else{\n      histogram[letter]++;\n\
    \    }\n  }\n  return histogram;\n}\n", "  var letters = test.split(\" \");\n\
    \  var histogram = {};\n  for (var i = 0; i < letters.length; i++){\n    var letter\
    \ = letters[i];\n    if (histogram[letter] == undefined){\n      histogram[letter]\
    \ = 1;\n    } else {\n      histogram[letter]++;\n    }\n  }\n  return histogram;\n\
    }\n", "  var letters = test.split(\" \");\n  var histogram = {};\n  for (var i\
    \ = 0; i < letters.length; i++){\n    var letter = letters[i];\n    if (histogram.hasOwnProperty(letter)){\n\
    \      histogram[letter]++;\n    } else {\n      histogram[letter] = 1;\n    }\n\
    \  }\n  return histogram;\n}\n", "  var letters = test.split(\" \");\n  var histogram\
    \ = {};\n  for (var i = 0; i < letters.length; i++){\n    if (histogram.hasOwnProperty(letters[i])){\n\
    \      histogram[letters[i]]++;\n    } else {\n      histogram[letters[i]] = 1;\n\
    \    }\n  }\n  return histogram;\n}\n", "  var letters = test.split(\" \");\n\
    \  var histogram = {};\n  for(var i=0; i<letters.length; i++){\n    if(histogram[letters[i]]){\n\
    \      histogram[letters[i]]++;\n    }else{\n      histogram[letters[i]] = 1;\n\
    \    }\n  }\n  return histogram;\n}\n", "  var histogram = {},\n      words =\
    \ test.split(\" \");\n  for(var i = 0; i < words.length; i++){\n    var letter\
    \ = words[i];\n    if(histogram[letter] == null) histogram[letter] = 1;\n    else\
    \ histogram[letter]++;\n  }\n  return histogram;\n}\n", "  var letters = test.split('\
    \ ').map(function(letter){\n    return letter.toLowerCase();\n  });\n  var counts\
    \ = {};\n  letters.forEach(function(letter){\n    counts[letter] = counts[letter]\
    \ ? counts[letter] + 1 : 1;\n  });\n  return counts;\n}\n", "    var result =\
    \ {};\n    test.split(\" \").forEach(function(letter){\n        if(result[letter]){\n\
    \            result[letter]++;\n        }else{\n            result[letter] = 1;\n\
    \        }\n    });\n    return result;\n}\n", "  var letters = test.split(\"\
    \ \");\n  var histogram = {};\n  for (var i = 0; i < letters.length; i++){\n \
    \   var letter = letters[i];\n    if (histogram[letter] == undefined){\n     \
    \ histogram[letter] = 1;\n    } else {\n      histogram[letter]++;\n    }\n  }\n\
    \  return histogram;\n}\n", "  var histogram = {};\n  test.split(\" \").forEach(function(letter){\n\
    \    if (histogram[letter] == undefined){\n      histogram[letter] = 1;\n    }\
    \ else {\n      histogram[letter]++;\n    }\n  });\n  return histogram;\n}\n",
  "    var histogram = {};\n    var words = test.split(\" \");\n    for(var i = 0;\
    \ i < words.length; i++){\n        var letter = words[i];\n        if(histogram[letter]\
    \ == undefined){\n            histogram[letter] = 1;\n        }else{\n       \
    \     histogram[letter]++;\n        }\n    }\n    return histogram;\n}\n", " \
    \ var histogram = {}\n  var words = test.split(\" \")\n  for(var i=0; i<words.length;\
    \ i++){\n    var letter = words[i]\n    if(histogram[letter] == undefined){\n\
    \      histogram[letter] = 1\n    }else{\n      histogram[letter] += 1\n    }\n\
    \  }\n  return histogram\n}\n", "  var letters = test.split(\" \");\n  var histogram\
    \ = {};\n  for (var i = 0; i < letters.length; i++){\n    var letter = letters[i];\n\
    \    if (histogram.hasOwnProperty(letter)){\n      histogram[letter]++;\n    }\
    \ else {\n      histogram[letter] = 1;\n    }\n  }\n  return histogram;\n}\n",
  "    var letters = test.split(\" \");\n    var histogram = {};\n    for(var i =\
    \ 0; i < letters.length; i++){\n        var letter = letters[i];\n        if(histogram[letter]\
    \ == undefined){\n            histogram[letter] = 1;\n        }else{\n       \
    \     histogram[letter]++;\n        }\n    }\n    return histogram;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

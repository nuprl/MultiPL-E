name: HumanEval_9_rolling_max
language: js
prompt: "//From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n// in the sequence.\n// >>> rolling_max([1, 2, 3, 2,\
  \ 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4,\
  \ 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
  }\n\ntest();"
completions: ["\tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\
    \t\tmax_rolling_numbers.push(max_rolling);\n\t}\n\treturn max_rolling_numbers;\n\
    }\n", "  var max_rolling = 0;\n  for(var i=0; i<numbers.length; i++){\n    if(numbers[i]\
    \ > max_rolling){\n      max_rolling = numbers[i];\n    }\n  }\n  return max_rolling;\n\
    }\n", "    var result = [];\n    numbers.forEach(function(number){\n        var\
    \ max = 0;\n        for(var i=0;i<numbers.length;i++){\n            if(numbers[i]\
    \ > max){\n                max = numbers[i];\n            }\n        }\n     \
    \   result.push(max);\n    });\n    return result;\n}\n", "  var result = [];\n\
    \  var max = 0;\n  for(var i = 0; i < numbers.length; i++){\n    if(numbers[i]\
    \ > max){\n      max = numbers[i];\n    }\n  }\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    if(numbers[i] > max){\n      result.push(max);\n      max = numbers[i];\n\
    \    }\n  }\n  return result;\n}\n", "\tvar result = [];\n\tvar max = 0;\n\tfor(var\
    \ i=0;i<numbers.length;i++){\n\t\tif(numbers[i] > max){\n\t\t\tmax = numbers[i];\n\
    \t\t}\n\t}\n\tfor(var i=0;i<numbers.length;i++){\n\t\tif(numbers[i] > max){\n\t\
    \t\tresult.push(max);\n\t\t\tmax = numbers[i];\n\t\t}else{\n\t\t\tresult.push(numbers[i]);\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "  var result = [];\n  var max = 0;\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    if(numbers[i] > max){\n      max = numbers[i];\n\
    \    }\n  }\n  for(var i = 0; i < numbers.length; i++){\n    if(numbers[i] > max){\n\
    \      result.push(max);\n      max = numbers[i];\n    }\n  }\n  return result;\n\
    }\n", "    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var\
    \ i in numbers){\n        max_rolling = Math.max(max_rolling, numbers[i]);\n \
    \       max_rolling_numbers.push(numbers[i]);\n    }\n    return max_rolling_numbers;\n\
    }\n", "\tvar max_number = 0;\n\tvar max_index = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_number = numbers[i];\n\t\t\
    \tmax_index = i;\n\t\t}\n\t}\n\treturn numbers.slice(max_index, numbers.length);\n\
    }\n", "    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var\
    \ i=0; i<numbers.length; i++){\n        max_rolling_numbers.push(numbers[i]);\n\
    \        if(numbers[i] > max_rolling){\n            max_rolling = numbers[i];\n\
    \        }\n    }\n    return max_rolling_numbers;\n}\n", "\tvar max_rolling =\
    \ 0;\n\tvar max_rolling_num = 0;\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    max_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_num = Math.max(max_rolling_num,\
    \ numbers[i]);\n\t}\n\treturn max_rolling_num;\n}\n", "    var max_rolling_numbers\
    \ = [];\n    var max_rolling_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_number){\n            max_rolling_numbers.push(max_rolling_number);\n\
    \            max_rolling_number = numbers[i];\n        }else{\n            max_rolling_numbers.push(numbers[i]);\n\
    \        }\n    }\n    max_rolling_numbers.push(max_rolling_number);\n    return\
    \ max_rolling_numbers;\n}\n", "    var max_rolling_numbers = [];\n    var max_rolling_number\
    \ = numbers[0];\n    var max_rolling_number_index = 0;\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] > max_rolling_number){\n      \
    \      max_rolling_numbers[max_rolling_number_index] = max_rolling_number;\n \
    \           max_rolling_number = numbers[i];\n            max_rolling_number_index\
    \ = i;\n        }\n    }\n    max_rolling_numbers[max_rolling_number_index] =\
    \ max_rolling_number;\n    return max_rolling_numbers;\n}\n", "\tvar max_rolling_number\
    \ = 0;\n\tvar rolling_max_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\
    \t\tmax_rolling_number = Math.max(max_rolling_number, numbers[i]);\n\t\trolling_max_numbers.push(max_rolling_number);\n\
    \t}\n\treturn rolling_max_numbers;\n}\n", "    var result = [];\n    var currentMax\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ > currentMax){\n            result.push(currentMax);\n            currentMax\
    \ = numbers[i];\n        }\n    }\n    result.push(currentMax);\n    return result;\n\
    }\n", "  var result = [];\n  var currentMax = numbers[0];\n  var currentIndex\
    \ = numbers.length - 1;\n  while(currentIndex >= 0){\n    if(numbers[currentIndex]\
    \ > currentMax){\n      currentMax = numbers[currentIndex];\n    }\n    currentIndex--;\n\
    \  }\n  result.push(currentMax);\n  return result;\n}\n", "  var result = [];\n\
    \  var max;\n  for(var i=0; i<numbers.length; i++){\n    max = numbers[i];\n \
    \   for(var j=i; j<numbers.length; j++){\n      if(numbers[j] > max){\n      \
    \  max = numbers[j];\n      }\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "\tvar result = [];\n\tvar currentMax = numbers[0];\n\tfor(var i = 1; i\
    \ < numbers.length; i++){\n\t\tif(numbers[i] > currentMax){\n\t\t\tcurrentMax\
    \ = numbers[i];\n\t\t}\n\t}\n\tresult.push(currentMax);\n\treturn result;\n}\n",
  "    var result = [];\n    var max = 0;\n    var maxIndex = 0;\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i] > max){\n            max = numbers[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    for(var i=0;i<numbers.length;i++){\n        if(numbers[i]\
    \ === max){\n            result.push(numbers[i]);\n        }\n    }\n    result.push(numbers[maxIndex]);\n\
    \    return result;\n}\n", "  var result = [];\n  var currentMax = numbers[0];\n\
    \  for(var i = 1; i < numbers.length; i++){\n    if(numbers[i] > currentMax){\n\
    \      currentMax = numbers[i];\n    }\n  }\n  result.push(currentMax);\n  return\
    \ result;\n}\n", "    var result = [];\n    numbers.forEach(function(number){\n\
    \        var max = 0;\n        for(var i = 0; i<numbers.length; i++){\n      \
    \      if(numbers[i] > number){\n                max = numbers[i];\n         \
    \   }\n        }\n        result.push(max);\n    });\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

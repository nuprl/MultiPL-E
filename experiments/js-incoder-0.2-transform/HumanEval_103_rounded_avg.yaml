name: HumanEval_103_rounded_avg
language: js
prompt: "//You are given two positive integers n and m, and your task is to compute\
  \ the\n// average of the integers from n through m (including n and m). \n// Round\
  \ the answer to the nearest integer and convert that to binary.\n// If n is greater\
  \ than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>>\
  \ rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20,\
  \ 33)\n// \"0b11010\"\nfunction rounded_avg(n, m){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rounded_avg;\n  assert.deepEqual(candidate(1, 5),\"0b11\");\n  assert.deepEqual(candidate(7,\
  \ 13),\"0b1010\");\n  assert.deepEqual(candidate(964, 977),\"0b1111001010\");\n\
  \  assert.deepEqual(candidate(996, 997),\"0b1111100100\");\n  assert.deepEqual(candidate(560,\
  \ 851),\"0b1011000010\");\n  assert.deepEqual(candidate(185, 546),\"0b101101110\"\
  );\n  assert.deepEqual(candidate(362, 496),\"0b110101101\");\n  assert.deepEqual(candidate(350,\
  \ 902),\"0b1001110010\");\n  assert.deepEqual(candidate(197, 233),\"0b11010111\"\
  );\n  assert.deepEqual(candidate(7, 5),-1);\n  assert.deepEqual(candidate(5, 1),-1);\n\
  \  assert.deepEqual(candidate(5, 5),\"0b101\");\n}\n\ntest();"
completions: ["  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let i = n;\
    \ i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "    var sum = 0;\n\
    \    var count = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n   \
    \     count++;\n    }\n    return sum/count | 0;\n}\n", "    let sum = 0;\n  \
    \  for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum /\
    \ 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n        binary\
    \ += \"1\";\n    }\n    return binary;\n}\n", "    var avg = Math.floor((n+m)/2);\n\
    \    var binary = \"\";\n    while(avg > 0){\n        binary = binary + avg.toString(2);\n\
    \        avg = Math.floor(avg/2);\n    }\n    if(n > m){\n        return -1;\n\
    \    }\n    return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m;\
    \ i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  let avg = Math.floor((n+m)/2);\n  let binary = \"\
    \";\n  for(let i = avg; i >= n; i--){\n    binary += \"1\";\n  }\n  for(let i\
    \ = avg; i <= m; i++){\n    binary += \"0\";\n  }\n  return binary;\n}\n", " \
    \ if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / 2;\n}\n", "  var sum = 0;\n  var count = 0;\n  for(var\
    \ i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count > 0){\n \
    \   return sum / count;\n  }\n  return -1;\n}\n", "    var result = 0;\n    for(var\
    \ i = n; i <= m; i++){\n        result += i;\n    }\n    return result / Math.pow(2,\
    \ Math.ceil(Math.log2(Math.max(m, n))));\n}\n", "  if(n > m){\n    return -1;\n\
    \  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i\
    \ <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n > m){\n  \
    \  return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  return sum/(n+m);\n}\n", "  if(n > m){\n    return -1;\n  }\n  let\
    \ sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum /\
    \ 2;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let i =\
    \ n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n > m)\
    \ return -1;\n  var result = 0;\n  for(var i = n; i <= m; i++){\n    result +=\
    \ i;\n  }\n  return result/(n+m);\n}\n", "    var result = 0;\n    var i = n;\n\
    \    var j = m;\n    while(i <= j){\n        result = result + i;\n        i =\
    \ i + 1;\n    }\n    result = result / 2;\n    result = result.toString(2);\n\
    \    result = result.substr(0, result.length-1);\n    return result;\n}\n", " \
    \   let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n",
  "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum\
    \ / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "  if(n > m){\n\
    \    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / 2;\n}\n", "  if(n>m) return -1;\n  var sum = 0;\n\
    \  for(var i=n; i<=m; i++){\n    sum += i;\n  }\n  var avg = sum/(n+m);\n  var\
    \ binary = \"\";\n  for(var i=0;i<=n;i++){\n    binary += avg%2;\n    avg = Math.floor(avg/2);\n\
    \  }\n  return binary;\n}\n", "    if (n > m){\n        return -1;\n    }\n  \
    \  let sum = 0;\n    for (let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    let avg = sum / 2;\n    let binary = \"\";\n    while (avg > 0){\n      \
    \  binary += \"1\";\n        avg -= 1;\n    }\n    return binary;\n}\n", "   \
    \ let sum = 0;\n    let count = 0;\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n        count++;\n    }\n    if(count === 0){\n        return -1;\n\
    \    }\n    return sum / count;\n}\n", "  let result = 0;\n  for(let i = n; i\
    \ <= m; i++){\n    result += i;\n  }\n  return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m) return -1;\n  \n  var sum = 0;\n  for(var\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  return sum / 2;\n}\n", "   \
    \ let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n \
    \   return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", " \
    \ if(n > m) return -1;\n  var sum = 0;\n  for(var i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n",
  "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum\
    \ / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, n - m);\n}\n", "    let\
    \ avg = 0;\n    let i = n;\n    let j = m;\n    while(i <= j){\n        avg +=\
    \ i;\n        i++;\n    }\n    avg = avg / 2;\n    avg = Math.round(avg);\n  \
    \  avg = avg.toString(2);\n    avg = avg.padStart(avg.length, '0');\n    avg =\
    \ avg.split('');\n    avg = avg.map(x => parseInt(x));\n    avg = avg[0] + avg[1];\n\
    \    return avg;\n}\n", "    var sum = 0;\n    for(var i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    return sum / 2;\n}\n", "  if(n > m) return -1;\n\
    \  \n  var sum = 0;\n  var count = 0;\n  \n  for(var i = n; i <= m; i++){\n  \
    \  sum += i;\n    count++;\n  }\n  \n  return sum / count;\n}\n", "    var sum\
    \ = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n    }\n    var avg\
    \ = sum / 2;\n    return Math.round(avg * Math.pow(10, Math.ceil(Math.log10(avg))))\
    \ / Math.pow(10, Math.ceil(Math.log10(avg)));\n}\n", "  var avg = Math.floor((n+m)/2);\n\
    \  var binary = \"\";\n  for(var i = avg; i >= n; i--){\n    binary += \"1\";\n\
    \  }\n  for(var i = avg; i <= m; i++){\n    binary += \"0\";\n  }\n  return binary;\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  let result = 0;\n  for(let i = n;\
    \ i <= m; i++){\n    result += i;\n  }\n  return result/2;\n}\n", "  if(n > m)\
    \ return -1;\n  var result = 0;\n  for(var i = n; i <= m; i++){\n    result +=\
    \ i;\n  }\n  return result >> 1;\n}\n", "    let sum = 0;\n    for(let i = n;\
    \ i <= m; i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m) return -1;\n  \n  let sum = 0;\n  let\
    \ count = 0;\n  \n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  \n  return sum / count;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let\
    \ sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum/(n-m)\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  var sum = 0;\n  for(var i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "    let sum = 0;\n \
    \   for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum / Math.pow(10,\
    \ Math.ceil(Math.log10(sum)));\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2,\
    \ n - m);\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n > m){\n    return\
    \ -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n\
    \  sum = Math.round(sum * Math.pow(10, Math.ceil(Math.log10(sum)))) / Math.pow(10,\
    \ Math.ceil(Math.log10(sum)));\n  return sum.toString(2);\n}\n", "    let avg\
    \ = (n + m) / 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n\
    \        binary += \"0\";\n    }\n    for(let i = avg; i < n; i++){\n        binary\
    \ += \"1\";\n    }\n    for(let i = avg; i < m; i++){\n        binary += \"0\"\
    ;\n    }\n    return binary;\n}\n", "    let avg = (n+m)/2;\n    let binary =\
    \ \"\";\n    for(let i = avg; i >= n; i--){\n        binary += \"1\";\n    }\n\
    \    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n    }\n    return\
    \ binary;\n}\n", "    var sum = 0;\n    var i;\n    for(i=n; i<=m; i++){\n   \
    \     sum += i;\n    }\n    return sum/(i-(n+m));\n}\n", "    let avg = Math.floor((n+m)/2);\n\
    \    let binary = \"\";\n    for(let i = avg; i >= n; i--){\n        binary +=\
    \ \"1\";\n    }\n    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n\
    \    }\n    return binary;\n}\n", "  let result = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    result += i;\n  }\n  result = Math.round(result / 2);\n  result =\
    \ result.toString(2);\n  result = result.padStart(result.length, '0');\n  result\
    \ = parseInt(result, 2);\n  if(result > m) return -1;\n  return result;\n}\n",
  "    let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n    while(avg > 0){\n\
    \        binary = binary + \"1\";\n        avg = avg - 1;\n    }\n    while(avg\
    \ < 0){\n        binary = binary + \"0\";\n        avg = avg + 1;\n    }\n   \
    \ return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n \
    \ let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  return sum / count;\n}\n", "  if(n > m) return -1;\n  var sum = 0;\n \
    \ for(var i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", " \
    \   var sum = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n",
  "    if (n > m) return -1;\n    let sum = 0;\n    for (let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    return sum / 2;\n}\n", "  let sum = 0;\n  let count\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count\
    \ === 0){\n    return -1;\n  }\n  return sum / count;\n}\n", "    var sum = 0;\n\
    \    for(var i = n; i <= m; i++){\n        sum += i;\n    }\n    var avg = sum\
    \ / 2;\n    var binary = \"\";\n    for(var i = avg; i >= 0; i--){\n        binary\
    \ += \"1\";\n    }\n    return binary;\n}\n", "    var sum = 0;\n    for(var i\
    \ = n; i <= m; i++){\n        sum += i;\n    }\n    return sum / 2;\n}\n", " \
    \ var sum = 0;\n  for(var i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum\
    \ / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "  if(n > m){\n\
    \    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / 2;\n}\n", "  let sum = 0;\n  let count = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count === 0){\n\
    \    return -1;\n  }\n  return sum / count;\n}\n", "    if (n >= m) return -1;\n\
    \    var sum = 0;\n    for (var i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / 2;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let result =\
    \ 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  return result /\
    \ 2;\n}\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n \
    \ }\n  return sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, n - m);\n\
    }\n", "    var sum = 0;\n    var i = n;\n    while(i <= m){\n        sum += i;\n\
    \        i++;\n    }\n    return sum / 2;\n}\n", "  if(n > m){\n    return -1;\n\
    \  }\n  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n\
    \  result = Math.round(result / 2);\n  result = result.toString(2);\n  result\
    \ = result.substr(0, result.length - 1);\n  if(result.length < 2){\n    result\
    \ = \"0\" + result;\n  }\n  return result;\n}\n", "  let sum = 0;\n  let count\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count\
    \ === 0){\n    return -1;\n  }\n  return sum / count;\n}\n", "  if(n>m) return\
    \ -1;\n  let sum = 0;\n  for(let i=n; i<=m; i++){\n    sum += i;\n  }\n  return\
    \ sum/(n-m)\n}\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  return sum / 2;\n}\n", "    if (n > m) return -1;\n    let sum =\
    \ 0;\n    for (let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = sum / 2;\n    let binary = \"\";\n    while (avg > 0){\n        binary = String(avg\
    \ % 2) + binary;\n        avg = Math.floor(avg / 2);\n    }\n    return binary;\n\
    }\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / 2;\n}\n", "    if (n > m){\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m; i++){\n        sum\
    \ += i;\n    }\n    return sum / 2;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  var result = 0;\n  var i = n;\n  while(i <= m){\n    result += i;\n    i++;\n\
    \  }\n  return result/2;\n}\n", "  if(n > m) return -1;\n  let avg = Math.floor((n+m)/2);\n\
    \  let binary = \"\";\n  for(let i = avg; i >= n; i--){\n    binary += \"1\";\n\
    \  }\n  for(let i = avg; i <= m; i++){\n    binary += \"0\";\n  }\n  return binary;\n\
    }\n", "  if(n > m) return -1;\n  let result = 0;\n  for(let i = n; i <= m; i++){\n\
    \    result += i;\n  }\n  return result >> 1;\n}\n", "  if(n > m) return -1;\n\
    \  var sum = 0;\n  for(var i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "    let avg = (n+m)/2;\n    let binary = \"\";\n    for(let\
    \ i = avg; i >= n; i--){\n        binary += \"1\";\n    }\n    for(let i = avg;\
    \ i <= m; i++){\n        binary += \"0\";\n    }\n    return binary;\n}\n", " \
    \ let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n\
    \    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n  return sum / count;\n\
    }\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n>m){\n    return -1;\n  }\n\
    \  let sum = 0;\n  let count = 0;\n  for(let i=n; i<=m; i++){\n    sum += i;\n\
    \    count++;\n  }\n  return sum/count;\n}\n", "    var sum = 0;\n    for(var\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum / Math.pow(2,\
    \ Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "  let avg = Math.floor((n+m)/2);\n\
    \  let binary = \"\";\n  while(avg > 0){\n    binary = binary+avg%2;\n    avg\
    \ = Math.floor(avg/2);\n  }\n  return binary;\n}\n", "  var sum = 0;\n  var i\
    \ = n;\n  while(i<m){\n    sum += i;\n    i++;\n  }\n  var avg = sum/(i-(n+1));\n\
    \  return Math.round(avg*Math.pow(2,n)).toString(2);\n}\n", "  if(n > m){\n  \
    \  return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  return sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n",
  "  if(n > m) return -1;\n  \n  let sum = 0;\n  for(let i = n; i <= m; i++){\n  \
    \  sum += i;\n  }\n  \n  return sum / 2;\n}\n", "  let sum = 0;\n  for(let i =\
    \ n; i <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n",
  "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / n;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let\
    \ result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  result\
    \ = result / 2;\n  result = parseInt(result.toString(2), 2);\n  result = result\
    \ < 0 ? -1 : 0;\n  return result;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  var avg = Math.floor((n+m)/2);\n  var binary = \"\";\n  while(avg > 0){\n \
    \   binary = binary + \"1\";\n    avg = avg - 1;\n  }\n  while(avg < 0){\n   \
    \ binary = binary + \"0\";\n    avg = avg + 1;\n  }\n  return binary;\n}\n", " \
    \   let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n    while(avg > 0){\n\
    \        binary = binary + \"1\";\n        avg = Math.floor(avg/2);\n    }\n \
    \   while(binary.length < m){\n        binary = binary + \"0\";\n    }\n    return\
    \ binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  \n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  let avg = sum / 2;\n  \n  let\
    \ binary = \"\";\n  \n  while(avg > 0){\n    binary = String(avg % 2) + binary;\n\
    \    avg = Math.floor(avg / 2);\n  }\n  \n  return binary;\n}\n", "    if (n <\
    \ m){\n        return -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m;\
    \ i++){\n        sum += i;\n    }\n    return sum / 2;\n}\n", "    let sum = 0;\n\
    \    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum /\
    \ Math.pow(2,m+1);\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n",
  "  if(n>m) return -1;\n  let sum = 0;\n  for(let i=n; i<=m; i++){\n    sum += i;\n\
    \  }\n  return sum/(n+m);\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n\
    }\n", "    let sum = 0;\n    let count = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n        count++;\n    }\n    return sum / count < 0 ? -1 :\
    \ sum / count;\n}\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n   \
    \ result += i;\n  }\n  return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum/(n+m);\n}\n", "  if (n > m){\n    return -1;\n  }\n  let sum = 0;\n  for\
    \ (let i = n; i <= m; i++){\n    sum += i;\n  }\n  let avg = sum / 2;\n  let binary\
    \ = \"\";\n  while (avg > 0){\n    binary += \"1\";\n    avg -= 1;\n  }\n  return\
    \ binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    return sum / Math.pow(2,Math.ceil(Math.log2(m+n)));\n\
    }\n", "  var sum = 0;\n  var count = 0;\n  for(var i = n; i <= m; i++){\n    sum\
    \ += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n  return\
    \ sum / count;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n >\
    \ m) return -1;\n  var avg = Math.floor((n+m)/2);\n  var binary = \"\";\n  while(avg\
    \ > 0){\n    binary = binary + avg.toString(2);\n    avg = Math.floor(avg/2);\n\
    \  }\n  if(binary.length < n){\n    binary = new Array(n - binary.length + 1).join(\"\
    0\") + binary;\n  }\n  return binary;\n}\n", "    let avg = Math.floor((n+m)/2);\n\
    \    let binary = \"\";\n    while(avg > 0){\n        binary = binary+avg.toString(2);\n\
    \        avg = Math.floor(avg/2);\n    }\n    if(n > m){\n        return -1;\n\
    \    }\n    return binary;\n}\n", "    if (n < m){\n        return -1;\n    }\n\
    \    let result = 0;\n    for (let i = n; i <= m; i++){\n        result += i;\n\
    \    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / 2;\n}\n", "  var sum = 0;\n  for(var i = n;\
    \ i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n > m) return\
    \ -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / Math.pow(2, n - m);\n}\n", "  if(n > m){\n    return -1;\n  }\n  \n  var\
    \ sum = 0;\n  var count = 0;\n  for(var i = n; i <= m; i++){\n    sum += i;\n\
    \    count++;\n  }\n  \n  return sum / count;\n}\n", "  if(n > m){\n    return\
    \ -1;\n  }\n  var result = 0;\n  for(var i = n; i <= m; i++){\n    result += i;\n\
    \  }\n  return result / 2;\n}\n", "  if(n > m) return -1;\n  let result = 0;\n\
    \  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  result = Math.round(result\
    \ / 2);\n  result = result.toString(2);\n  result = result.split('');\n  result\
    \ = result.map(x => parseInt(x, 2));\n  result = result.map(x => x.toString(2));\n\
    \  result = result.join('');\n  result = result.padStart(result.length, '0');\n\
    \  return result;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum/(n-m)\n}\n",
  "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum\
    \ / Math.pow(2,m+1);\n}\n", "    var avg = Math.floor((n+m)/2);\n    var binary\
    \ = \"\";\n    while(avg > 0){\n        binary = binary + avg.toString(2);\n \
    \       avg = Math.floor(avg/2);\n    }\n    if(n >= m){\n        return -1;\n\
    \    }\n    return binary;\n}\n", "    if (n > m) return -1;\n    let sum = 0;\n\
    \    for (let i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum /\
    \ Math.pow(2, n - m);\n}\n", "  if(n > m) return -1;\n  var result = 0;\n  for(var\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  return result/2;\n}\n", "   \
    \ let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n \
    \   return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", " \
    \ if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum/(n-m)\n}\n", "  if(n > m) return -1;\n  let avg = Math.floor((n+m)/2);\n\
    \  let binary = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary += \"0\";\n\
    \  }\n  for(let i = avg; i < m; i++){\n    binary += \"1\";\n  }\n  return binary;\n\
    }\n", "    var sum = 0;\n    var count = 0;\n    for(var i = n; i <= m; i++){\n\
    \        sum += i;\n        count++;\n    }\n    return sum / count | 0;\n}\n",
  "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / 2;\n}\n", "    let sum = 0;\n    let count\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n        count++;\n\
    \    }\n    if(count > 0){\n        return sum/count;\n    }\n    return -1;\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / 2;\n}\n", "  let sum = 0;\n  let count = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count\
    \ === 0){\n    return -1;\n  }\n  return sum / count;\n}\n", "  if(n > m) return\
    \ -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i\
    \ <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, n - m);\n}\n", " \
    \ if(n>m) return -1;\n  let sum = 0;\n  for(let i=n; i<=m; i++){\n    sum += i;\n\
    \  }\n  return sum/(n+m);\n}\n", "  if(n > m) return -1;\n  \n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  return sum / 2;\n}\n",
  "  var sum = 0;\n  var count = 0;\n  for(var i = n; i <= m; i++){\n    sum += i;\n\
    \    count++;\n  }\n  if(count > 0){\n    return sum / count;\n  }\n  return -1;\n\
    }\n", "    var sum = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / 2;\n}\n", "  var avg = Math.floor((n+m)/2);\n  var binary\
    \ = \"\";\n  while(avg > 0){\n    binary = binary+avg.toString(2);\n    avg =\
    \ Math.floor((n+m)/2);\n  }\n  if(n >= m){\n    return -1;\n  }\n  return binary;\n\
    }\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n \
    \ }\n  result = Math.round(result / 2);\n  result = result.toString(2);\n  result\
    \ = result.padStart(result.length, '0');\n  return result;\n}\n", "  if(n > m)\
    \ return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n\
    \  }\n  return sum/(n-m)*2|0;\n}\n", "  if(n > m) return -1;\n  \n  let result\
    \ = 0;\n  \n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  \n  return\
    \ result >> 1;\n}\n", "    let avg = Math.floor((n+m)/2)\n    let binary = \"\"\
    \n    for(let i = avg; i >= n; i--){\n        binary += \"1\"\n    }\n    for(let\
    \ i = avg; i <= m; i++){\n        binary += \"0\"\n    }\n    return binary\n\
    }\n", "    var sum = 0;\n    var count = 0;\n    for(var i = n; i <= m; i++){\n\
    \        sum += i;\n        count++;\n    }\n    if(count === 0){\n        return\
    \ -1;\n    }\n    var avg = sum / count;\n    var binary = \"\";\n    for(var\
    \ i = avg; i >= 1; i--){\n        binary = binary + \"1\";\n    }\n    return\
    \ binary;\n}\n", "    if (n < m){\n        return -1;\n    }\n    let sum = 0;\n\
    \    for (let i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum /\
    \ 2;\n}\n", "  if(n>m){\n    return -1;\n  }\n  let result = 0;\n  for(let i=n;\
    \ i<=m; i++){\n    result += i;\n  }\n  result = Math.floor(result/2);\n  result\
    \ = result.toString(2);\n  if(result.length<2){\n    result = \"0\"+result;\n\
    \  }\n  return result;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum =\
    \ 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n\
    }\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / Math.pow(2, n - m);\n}\n", "    if (n < m)\
    \ return -1;\n    var sum = 0;\n    for (var i = n; i <= m; i++){\n        sum\
    \ += i;\n    }\n    return sum / 2;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "  if(n > m) return -1;\n  var sum = 0;\n  for(var i = n; i\
    \ <= m; i++){\n    sum += i;\n  }\n  return sum/(n-m)\n}\n", "  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2,Math.ceil(Math.log2(m+1)));\n\
    }\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n \
    \ }\n  result = Math.round(result / 2);\n  result = bin(result)\n  return result\
    \ === \"0b0\" ? \"0b0\" : result;\n}\n", "  var avg = Math.floor((n+m)/2);\n \
    \ var binary = \"\";\n  while(avg > 0){\n    binary = binary + avg.toString(2);\n\
    \    avg = Math.floor(avg/2);\n  }\n  if(n >= m){\n    return -1;\n  }\n  return\
    \ binary;\n}\n", "    var sum = 0;\n    for(var i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let avg = Math.floor((n+m)/2);\n  let binary = \"\";\n  \n  while(avg\
    \ > 0){\n    binary = binary + \"1\";\n    avg = Math.floor(avg/2);\n  }\n  \n\
    \  if(n >= m){\n    return -1;\n  }\n  \n  return binary;\n}\n", "  if(n > m)\
    \ return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n\
    \  }\n  return sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  if(n >\
    \ m) return -1;\n  let result = 0;\n  for(let i = n; i <= m; i++){\n    result\
    \ += i;\n  }\n  return result / 2;\n}\n", "    let sum = 0;\n    for(let i = n;\
    \ i <= m; i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, n - m);\n\
    }\n", "    var sum = 0;\n    var i;\n    for(i=n; i<=m; i++){\n        sum +=\
    \ i;\n    }\n    return sum/(i-(n+m));\n}\n", "    if (n > m) return -1;\n   \
    \ let sum = 0;\n    for (let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2, m);\n}\n", "  var sum = 0;\n  for(var i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  var avg = sum / 2;\n  var binary = \"\";\n \
    \ for(var i = avg; i >= 0; i--){\n    binary += \"1\";\n  }\n  return binary;\n\
    }\n", "    if (n > m) return -1;\n    var avg = Math.floor((n+m)/2);\n    var\
    \ binary = \"\";\n    while(avg > 0){\n        binary = binary+avg.toString(2);\n\
    \        avg = Math.floor((n+m)/2);\n    }\n    return binary;\n}\n", "  if(n\
    \ > m){\n    return -1;\n  }\n  \n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  \n  return sum / 2;\n}\n", "  let sum = 0;\n  for(let i\
    \ = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  var sum = 0;\n  var count = 0;\n  for(var i = n;\
    \ i <= m; i++){\n    sum += i;\n    count++;\n  }\n  return sum / count;\n}\n",
  "    let avg = (n + m) / 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0;\
    \ i--){\n        binary += \"1\";\n    }\n    return binary;\n}\n", "  if(n >\
    \ m) return -1;\n  var result = 0;\n  for(var i = n; i <= m; i++){\n    result\
    \ += i;\n  }\n  return result >> 1;\n}\n", "  if(n > m) return -1;\n  var avg\
    \ = Math.floor((n+m)/2);\n  var binary = \"\";\n  while(avg > 0){\n    binary\
    \ = binary + \"1\";\n    avg = avg - 1;\n  }\n  while(binary.length < m){\n  \
    \  binary = binary + \"0\";\n  }\n  return binary;\n}\n", "  if(n > m) return\
    \ -1;\n  var avg = Math.floor((n+m)/2);\n  var binary = \"\";\n  while(avg > 0){\n\
    \    binary = binary+(\"1\" + avg%2);\n    avg = Math.floor(avg/2);\n  }\n  return\
    \ binary;\n}\n", "    var sum = 0;\n    var i = n;\n    while(i <= m){\n     \
    \   sum += i;\n        i++;\n    }\n    return sum / i;\n}\n", "  if(n > m) return\
    \ -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "    var sum = 0;\n    for(var i = n; i <= m; i++){\n      \
    \  sum += i;\n    }\n    return sum / 2;\n}\n", "  if(n > m){\n    return -1;\n\
    \  }\n  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n\
    \  return result/2;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  sum = Math.round(sum);\n\
    \  sum = (sum + 1) >> 1;\n  sum = (sum + 1) >> 1;\n  return sum.toString(2);\n\
    }\n", "  var sum = 0;\n  var count = 0;\n  for(var i = n; i <= m; i++){\n    sum\
    \ += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n  return\
    \ sum / count;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let result = 0;\n\
    \  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  return result / 2;\n\
    }\n", "  var sum = 0;\n  var count = 0;\n  for(var i = n; i <= m; i++){\n    sum\
    \ += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n  return\
    \ sum / count;\n}\n", "    let sum = 0;\n    let count = 0;\n    for(let i = n;\
    \ i <= m; i++){\n        sum += i;\n        count++;\n    }\n    \n    if(count\
    \ > 0){\n        return sum/count;\n    }\n    return -1;\n}\n", "  let sum =\
    \ 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  if(count > 0){\n    return sum/count;\n  }\n  return -1;\n}\n", "  if(n\
    \ > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  return sum / 2;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum/(n-m)*Math.pow(2,Math.ceil(Math.log2(n-m)));\n\
    }\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  return sum / 2;\n}\n", "    var sum = 0;\n    var count\
    \ = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n        count++;\n\
    \    }\n    if(count > 0){\n        sum = sum / count;\n    }\n    return sum.toString(2);\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum/(n+m);\n}\n", "  if(n > m){\n    return -1;\n  }\n  \n\
    \  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  let\
    \ avg = sum / 2;\n  \n  let binary = \"\";\n  while(avg > 0){\n    binary = String(avg\
    \ % 2) + binary;\n    avg = Math.floor(avg / 2);\n  }\n  \n  return binary;\n\
    }\n", "    var result = 0;\n    for(var i = n; i <= m; i++){\n        result +=\
    \ i;\n    }\n    return result / 2;\n}\n", "    let sum = 0;\n    let count =\
    \ 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n        count++;\n\
    \    }\n    \n    if(count > 0){\n        return sum / count;\n    }\n    return\
    \ -1;\n}\n", "  if (n < m){\n    return -1;\n  }\n  let result = 0;\n  for (let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  return result >> 1;\n}\n", " \
    \ if(n>m) return -1;\n  let sum = 0;\n  for(let i=n; i<=m; i++){\n    sum += i;\n\
    \  }\n  return sum/(n+m);\n}\n", "    if (n > m) return -1;\n    let sum = 0;\n\
    \    for (let i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum /\
    \ 2;\n}\n", "  if(n > m) return -1;\n  let result = 0;\n  for(let i = n; i <=\
    \ m; i++){\n    result += i;\n  }\n  result = Math.round(result / 2);\n  result\
    \ = result.toString(2);\n  result = result.padStart(result.length, '0');\n  return\
    \ result;\n}\n", "  var sum = 0;\n  var count = 0;\n  for(var i = n; i <= m; i++){\n\
    \    sum += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n \
    \ var avg = sum / count;\n  var binary = \"\";\n  for(var i = avg; i >= 0; i--){\n\
    \    binary += \"1\";\n  }\n  return binary;\n}\n", "    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum/(n-m)\n}\n",
  "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / n;\n}\n", "    var sum = 0;\n    for(var i = n; i\
    \ <= m; i++){\n        sum += i;\n    }\n    return sum/(n-m)|0;\n}\n", "  if(n\
    \ > m) return -1;\n  \n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  \n  return sum / 2;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  return\
    \ result / 2;\n}\n", "    var avg = Math.floor((n+m)/2);\n    var binary = \"\"\
    ;\n    while(avg > 0){\n        binary = binary+(avg%2==0?\"0\":\"1\");\n    \
    \    avg = Math.floor(avg/2);\n    }\n    return binary;\n}\n", "    if (n >=\
    \ m) return -1;\n    let sum = 0;\n    for (let i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    return sum / Math.pow(2, n - m);\n}\n", "  if(n > m){\n\
    \    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / 2;\n}\n", "  let sum = 0;\n  for(let i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m) return -1;\n  \n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  return sum / Math.pow(2, (n\
    \ + m));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

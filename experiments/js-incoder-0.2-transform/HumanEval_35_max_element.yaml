name: HumanEval_35_max_element
language: js
prompt: "//Return maximum element in the list.\n// >>> max_element([1, 2, 3])\n//\
  \ 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// 123\nfunction\
  \ max_element(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
completions: ["  return l.reduce(function(prev, cur){\n    return cur > prev ? cur\
    \ : prev;\n  });\n}\n", "    var max = l[0];\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max)\n            max = l[i];\n    }\n    return max;\n\
    }\n", "    var max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if\
    \ (l[i] > max){\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_idx = i;\n\
    \        }\n    }\n    return max;\n}\n", "    return Math.max.apply(Math, l)\n\
    }\n", "    var max = l[0], maxIndex = 0, i;\n    for(i = 0; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return Math.max(prev, cur);\n  });\n}\n", "  return Math.max.apply(null,\
    \ l);\n}\n", "    var max = l[0];\n    for (var i = 1; i < l.length; i++){\n \
    \       if (l[i] > max){\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\n", "    var max = l[0], maxIndex = 0;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex;\n}\n", "    var max = l[0];\n \
    \   for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n        }\n    }\n    return max;\n}\n", "  return Math.max.apply(null,\
    \ l);\n}\n", "    var max = l[0];\n    for(var i = 1; i < l.length; i++){\n  \
    \      if(l[i] > max){\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\n", "  var max_element = l[0];\n  for(var i = 1; i < l.length; i++){\n\
    \    if(l[i] > max_element){\n      max_element = l[i];\n    }\n  }\n  return\
    \ max_element;\n}\n", "    var max_value = l[0];\n    var max_index = -1;\n  \
    \  for(var i = 1; i < l.length; i++){\n        if(l[i] > max_value){\n       \
    \     max_value = l[i];\n            max_index = i;\n        }\n    }\n    return\
    \ max_value;\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_idx\
    \ = i;\n        }\n    }\n    return max;\n}\n", "    var max = l[0], maxIndex\
    \ = 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n     \
    \       max = l[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    var max = l[0], maxIndex = 0;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\n", "    var max = l[0], maxIndex =\
    \ 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n       \
    \     max = l[i];\n            maxIndex = i;\n        }\n    }\n    return max;\n\
    }\n", "    var max_value = l[0];\n    var max_index = -1;\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(l[i] > max_value){\n            max_value =\
    \ l[i];\n            max_index = i;\n        }\n    }\n    return max_value;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

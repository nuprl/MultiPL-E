language: js
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers = numbers.split(\" \");\n\tvar\
    \ sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tsorted_numbers\
    \ += numbers[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.split(\" \");\n\
    \tsorted_numbers.sort();\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\
    \tsorted_numbers[i] = sorted_numbers[i].trim();\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var\
    \ i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\t\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpofttwh2s.js:93\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers = numbers.split(\" \");\n  var\
    \ numbers_sorted = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(\" \");\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five nine three'\n\
    \nshould loosely deep-equal\n\n'three five nine'\n    at test (/tmp/tmpv8_ozimq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv8_ozimq.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n\
    \  var sorted_numbers = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n\
    \    sorted_numbers += numbers_array[i];\n    if(i != numbers_array.length - 1){\n\
    \      sorted_numbers += \" \";\n    }\n  }\n  return sorted_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmp6tztw_2x.js:26:10)\n    at Object.<anonymous> (/tmp/tmp6tztw_2x.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\
    \t\tsorted_numbers += numbers_array[i];\n\t\tif(i < numbers_array.length - 1){\n\
    \t\t\tsorted_numbers += \" \";\n\t\t}\n\t}\n\treturn sorted_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmp9nd_hnaq.js:26:10)\n    at Object.<anonymous> (/tmp/tmp9nd_hnaq.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers_arr = numbers.split(\" \");\n \
    \ var sorted_numbers = \"\";\n  for(var i=0; i<numbers_arr.length; i++){\n   \
    \ sorted_numbers += numbers_arr[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\"\
    \ \").sort().join(\" \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' '\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpgux1v6w2.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgux1v6w2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\
    \t\tsorted_numbers += numbers_array[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.replace(/\\\
    s+$/,\"\");\n\tsorted_numbers = sorted_numbers.replace(/^\\s+/,\"\");\n\tsorted_numbers\
    \ = sorted_numbers.replace(/\\s+/,\" \");\n\treturn sorted_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpaf35lu3b.js:26:10)\n    at Object.<anonymous> (/tmp/tmpaf35lu3b.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\
    \t\tsorted_numbers += numbers_array[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.split(\"\
    \ \").sort().join(\" \");\n\treturn sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' '\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpnfikt641.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnfikt641.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n\
    \  var sorted_numbers = numbers_array.sort();\n  return sorted_numbers.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five nine three'\n\
    \nshould loosely deep-equal\n\n'three five nine'\n    at test (/tmp/tmp3tjfa83i.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3tjfa83i.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n\
    \  var numbers_sorted = [];\n  for(var i=0; i<numbers_array.length; i++){\n  \
    \  numbers_sorted.push(parseInt(numbers_array[i]));\n  }\n  numbers_sorted.sort();\n\
    \  return numbers_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpn2eogusj.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn2eogusj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar numbers_sorted = [];\n\tfor(var i=0;i<numbers_array.length;i++){\n\t\tnumbers_sorted.push(parseInt(numbers_array[i]));\n\
    \t}\n\tnumbers_sorted.sort(function(a,b){return a-b});\n\treturn numbers_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpptd3rmti.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpptd3rmti.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers = numbers.split(\" \");\n  numbers.sort();\n\
    \  return numbers.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five nine three'\n\
    \nshould loosely deep-equal\n\n'three five nine'\n    at test (/tmp/tmpu9osezy4.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu9osezy4.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tvar sorted_numbers_array = [];\n\t\n\tfor(var\
    \ i=0; i<numbers_array.length; i++){\n\t\tsorted_numbers_array.push(parseInt(numbers_array[i]));\n\
    \t}\n\t\n\tsorted_numbers_array.sort(function(a, b){\n\t\treturn a-b;\n\t});\n\
    \t\n\tfor(var i=0; i<sorted_numbers_array.length; i++){\n\t\tsorted_numbers +=\
    \ sorted_numbers_array[i] + \" \";\n\t}\n\t\n\treturn sorted_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN '\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpau058x00.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpau058x00.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN ',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\
    \t\tsorted_numbers += numbers_array[i];\n\t\tif(i < numbers_array.length - 1){\n\
    \t\t\tsorted_numbers += \" \";\n\t\t}\n\t}\n\treturn sorted_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmp9nd_hnaq.js:26:10)\n    at Object.<anonymous> (/tmp/tmp9nd_hnaq.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers = numbers.split(\" \");\n  var\
    \ numbers_sorted = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpnk7dfj7n.js:22:10)\n    at Object.<anonymous> (/tmp/tmpnk7dfj7n.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: -1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var numbers = numbers.split(\" \");\n   \
    \ var numbers_sorted = [];\n    var current_number = 0;\n    var current_string\
    \ = \"\";\n    \n    while(current_number < numbers.length){\n        current_string\
    \ = numbers[current_number];\n        \n        if(current_string == \"zero\"\
    ){\n            numbers_sorted.push(\"zero\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"one\"\
    ){\n            numbers_sorted.push(\"one\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"two\"\
    ){\n            numbers_sorted.push(\"two\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"three\"\
    ){\n            numbers_sorted.push(\"three\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"four\"\
    ){\n            numbers_sorted.push(\"four\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"five\"\
    ){\n            numbers_sorted.push(\"five\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"six\"\
    ){\n            numbers_sorted.push(\"six\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"seven\"\
    ){\n            numbers_sorted.push(\"seven\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"eight\"\
    ){\n            numbers_sorted.push(\"eight\");\n            current_number++;\n\
    \            continue;\n        }\n        \n        if(current_string == \"nine\"\
    ){\n            numbers_sorted.push(\"nine\");\n            current_number++;\n\
    \            continue;\n        }\n    }\n    \n    return numbers_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\
    \t\tvar current_number = numbers_array[i];\n\t\tfor(var j = 0; j < numbers_array.length;\
    \ j++){\n\t\t\tif(j == i){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(current_number\
    \ < numbers_array[j]){\n\t\t\t\tcurrent_number = numbers_array[j];\n\t\t\t}\n\t\
    \t}\n\t\tsorted_numbers += current_number + \" \";\n\t}\n\treturn sorted_numbers.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'three three three'\n\
    \nshould loosely deep-equal\n\n'three five nine'\n    at test (/tmp/tmp7z9i_ipe.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7z9i_ipe.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'three three\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n\
    \  numbers_array.sort(function(a, b){\n    return a - b;\n  });\n  return numbers_array.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmp2deb4gsf.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2deb4gsf.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n\
    \  var sorted_numbers = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n\
    \    sorted_numbers += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\"\
    \ \").sort(function(a, b){\n    return a - b;\n  });\n  for(var i=0; i<sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].toString();\n  }\n  return\
    \ sorted_numbers.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' '\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmph_kmon31.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph_kmon31.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\
    \tvar sorted_numbers = \"\";\n\tfor(var i = 0; i < numbers_array.length; i++){\n\
    \t\tsorted_numbers += numbers_array[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.trim();\n\
    \tsorted_numbers = sorted_numbers.split(\" \");\n\tsorted_numbers.sort();\n\t\
    for(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].trim();\n\
    \t}\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tsorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tfor(var j = 0; j < sorted_numbers[i].length; j++){\n\t\t\tsorted_numbers[i][j]\
    \ = sorted_numbers[i][j].charCodeAt(0);\n\t\t}\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tfor(var j = 0; j < sorted_numbers[i].length; j++){\n\t\t\tsorted_numbers[i][j]\
    \ = sorted_numbers[i][j] - 96;\n\t\t}\n\t}\n\tfor(var i = 0; i < sorted_numbers.length;\
    \ i++){\n\t\tsorted_numbers[i] = sorted_numbers[i].join(\"\");\n\t}\n\treturn\
    \ sorted_numbers.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2081855'\n\n\
    should loosely deep-equal\n\n'three'\n    at test (/tmp/tmplsr3fnat.js:43:10)\n\
    \    at Object.<anonymous> (/tmp/tmplsr3fnat.js:49:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2081855',\n\
    \  expected: 'three',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n\
    \    var sorted_numbers = \"\";\n    var sorted_numbers_array = [];\n    for(var\
    \ i = 0; i < numbers_array.length; i++){\n        sorted_numbers_array.push(parseInt(numbers_array[i]));\n\
    \    }\n    sorted_numbers_array.sort(function(a, b){\n        return a - b;\n\
    \    });\n    for(var i = 0; i < sorted_numbers_array.length; i++){\n        sorted_numbers\
    \ += sorted_numbers_array[i] + \" \";\n    }\n    return sorted_numbers;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN '\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmptthn51cs.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptthn51cs.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN ',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

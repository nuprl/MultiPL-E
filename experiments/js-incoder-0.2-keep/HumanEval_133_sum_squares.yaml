name: HumanEval_133_sum_squares
language: js
prompt: "//You are given a list of numbers.\n// You need to return the sum of squared\
  \ numbers in the given list,\n// round each element in the list to the upper int(Ceiling)\
  \ first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst\
  \ = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should be\
  \ 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1]\
  \ the output should be 6\nfunction sum_squares(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sum_squares;\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0, 3.0, 5.0, 7.0]),84);\n  assert.deepEqual(candidate([1.4,\
  \ 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4, 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0,\
  \ 1.0, 15.0, 2.0]),10230);\n  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n\
  \  assert.deepEqual(candidate([-1.4, 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4,\
  \ 17.9, 18.9, 19.9]),1086);\n  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
  \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"
completions: ["    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n      \
    \  sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n}\n", "  \
    \  var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| a |>\n<code>",
  "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.pow(lst[i],\
    \ 2);\n  }\n  return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0;\
    \ i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n  }\n\
    \  return Math.round(sum);\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i] * lst[i]);\n  }\n  return sum;\n}\n", " \
    \   let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += lst[i]*lst[i];\n\
    \    }\n    return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "   \
    \ let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum\
    \ += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += lst[i]*lst[i];\n    }\n    return Math.round(sum);\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n   \
    \ }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\nThis\
    \ doesn't work. Try `sum_squares([1.4, 4.2, 0])` - it returns `29`, not `6`.\n\
    <|/ c |>\n<| c |>\nI didn't see that requirement in the question. I'll update\
    \ my answer.\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i] * lst[i]);\n    }\n    return sum;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n    }\n    return\
    \ Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "  var\
    \ sum = 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.pow(lst[i], 2);\n\
    \  }\n  return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0; i<lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n   \
    \ for(var i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n    }\n\
    \    return Math.round(sum);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript\
    \ |>\n<code>", "  let sum = 0;\n  for (let i = 0; i < lst.length; i++){\n    sum\
    \ += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        sum += Math.pow(lst[i], 2);\n\
    \    }\n    return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "  var\
    \ sum = 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\n\
    <code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ sum += Math.ceil(lst[i] * lst[i]);\n    }\n    return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "    let sum = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum\
    \ += Math.pow(lst[i], 2);\n  }\n  return Math.round(sum);\n}\n", "  let sum =\
    \ 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis doesn't round the numbers to the ceiling first\n<|/ c |>\n\
    <| c |>\nIt does round the numbers to the ceiling first. `Math.ceil` rounds to\
    \ the ceiling first. `Math.round` rounds to the nearest integer.\n<|/ c |>\n<|\
    \ c |>\nI see what you mean. My bad.\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ My bad.\n<|/ c |>\n<| c |>\nI see what you mean. My bad.\n<|/ c |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\n\
    <code>", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27833499)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to round\
    \ the numbers to the nearest integer. He also wants to round the numbers to the\
    \ nearest integer and sum them up. He also wants to round the numbers to the nearest\
    \ integer and sum them up. He also wants to round the numbers to the nearest integer\
    \ and sum them up. He also wants to round the numbers to the nearest integer and\
    \ sum them up. He also wants to round the numbers to the nearest integer and sum\
    \ them up. He also wants to round the numbers to the nearest integer and sum them\
    \ up. He also wants to round the numbers to the nearest integer and sum them up.\
    \ He also wants to round the numbers to the nearest integer and sum them up. He\
    \ also wants to round the numbers to the nearest integer and sum them up. He also\
    \ wants to round the numbers to the nearest integer and sum them up. He also wants\
    \ to round the numbers to the nearest integer and sum them up. He also wants to\
    \ round the numbers to the nearest integer and sum them up. He also wants to round\
    \ the numbers to the nearest integer and sum them up. He also wants to round the\
    \ numbers to the nearest integer and sum them up. He also wants to round the numbers\
    \ to the nearest integer and sum them up. He also wants to round the numbers to\
    \ the nearest integer and sum them up. He also wants to round the numbers to the\
    \ nearest integer and sum them up. He also wants to round the numbers to the nearest\
    \ integer and sum them up. He also wants to round the numbers to the nearest integer\
    \ and sum them up. He also wants to round the numbers to the nearest integer and\
    \ sum them up. He also wants to round the numbers to the nearest integer and sum\
    \ them up. He also wants to round the numbers to the nearest integer and sum them\
    \ up. He also wants to round the numbers to the nearest integer and sum them up.\
    \ He also wants to round the numbers to the nearest integer and sum them up. He\
    \ also want", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| a dscore=0 |>\n\
    <code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n}\n", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "  let sum = 0;\n  lst.map(x => x = Math.ceil(x));\n\
    \  lst.map(x => sum += x * x);\n  return sum;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n  \
    \  return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you have a\
    \ negative number in the list\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if you have a negative number in the list\n\
    <|/ c |>\n<| c |>\nIt doesn't work if you have a negative number in the list\n\
    <|/ c |>\n<| c |>\nIt doesn't work if you have a negative number in the list\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n</code>\n\
    <|/ a tags=javascript,arrays,algorithm |>\n<| a dscore=0 |>\n<code>", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  let sum = 0;\n  lst.map(x => x = Math.ceil(x));\n\
    \  lst.map(x => sum += x*x);\n  return sum;\n}\n", "  let sum = 0;\n  for(let\
    \ i = 0; i < lst.length; i++){\n    sum += Math.pow(lst[i], 2);\n  }\n  return\
    \ Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "   \
    \ let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += lst[i]*lst[i];\n\
    \    }\n    return Math.round(sum);\n}\n", "  let sum = 0;\n  for(let i = 0; i\
    \ < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n\
    }\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n\
    }\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays,algorithm\
    \ |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n\
    \    }\n    return Math.round(sum);\n}\n", "  let sum = 0;\n  for(let i = 0; i\
    \ < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n\
    }\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "    let sum = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += lst[i]*lst[i];\n\
    \    }\n    return Math.round(sum);\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n\
    <code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n\
    }\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n\
    <code>", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n  }\n\
    \  return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n  }\n\
    \  return Math.round(sum);\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=javascript |>\n<code>", "  let sum = 0;\n  for(let\
    \ i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return\
    \ sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i] * lst[i]);\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "  let\
    \ sum = 0;\n  lst.map(x => x = Math.ceil(x));\n  lst.map(x => sum += x*x);\n \
    \ return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "  let\
    \ sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += lst[i]*lst[i];\n  }\n  return Math.round(sum);\n}\n", "  let sum =\
    \ 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.pow(lst[i], 2);\n\
    \  }\n  return Math.round(sum);\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.pow(lst[i], 2);\n  }\n  return Math.round(sum);\n}\n",
  "  let sum = 0;\n  lst.map(x => {\n    sum += Math.round(x*x)\n  })\n  return sum;\n\
    }\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "  var sum = 0;\n\
    \  for(var i=0; i<lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n\
    \  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    sum += Math.pow(lst[i], 2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,algorithm |>\n<| c\
    \ |>\nThis is not the correct solution. Try `sum_squares([1.4, 4.2, 0])`\n<|/\
    \ c |>\n<| c |>\nI didn't say it is the correct solution. I said it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the problem stated in the question. As I said, it is the correct\
    \ solution to the ", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n  }\n\
    \  return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += lst[i]*lst[i];\n    }\n    return Math.round(sum);\n}\n</code>\n\
    <|/ a |>\n<| a dscore=0 |>\n<code>", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n\
    \    }\n    return Math.round(sum);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "  let sum = 0;\n  for (let i = 0; i < lst.length; i++){\n    sum\
    \ += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| a |>\n<code>", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n  }\n\
    \  return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i] * lst[i]);\n    }\n    return sum;\n\
    }\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum\
    \ += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += lst[i]*lst[i];\n\
    \  }\n  return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n\
    \    for(var i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "  let sum = 0;\n  for (let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "  var\
    \ sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n",
  "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n\
    \    }\n    return Math.round(sum);\n}\n", "    let sum = 0;\n    for(let i =\
    \ 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n\
    \    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n  \
    \  sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "  let sum\
    \ = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n</code>\n\
    <|/ a tags=javascript,algorithm |>\n<| a dscore=0 |>\n<code>", "  let sum = 0;\n\
    \  for(let i = 0; i < lst.length; i++){\n    sum += Math.pow(lst[i], 2);\n  }\n\
    \  return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += lst[i]*lst[i];\n  }\n  return Math.round(sum);\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays |>\n<code>", "  \
    \  let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "   \
    \ var sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>", "    let sum = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n    sum +=\
    \ Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=0 |>\n<code>", "  let sum = 0;\n  lst.map(x => sum += Math.pow(Math.ceil(x),\
    \ 2));\n  return sum;\n}", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=javascript,arrays,math |>\n<| a tags=javascript,arrays,math |>\n<code>",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  let sum = 0;\n  lst.map(x => sum += Math.round(x*x));\
    \ //round each element to the upper int(Ceiling) first\n  return sum;\n}\n", " \
    \ let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]\
    \ * lst[i]);\n  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  let sum =\
    \ 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<| a tags=javascript,arrays\
    \ |>\n<code>", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.pow(lst[i],2);\n\
    \  }\n  return Math.round(sum);\n}\n", "    let sum = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum\
    \ += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let\
    \ i = 0; i < lst.length; i++){\n    sum += lst[i]*lst[i];\n  }\n  return Math.round(sum);\n\
    }\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n\
    \    }\n    return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += lst[i]*lst[i];\n    }\n    return Math.round(sum);\n}\n", "  \
    \  let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]\
    \ * lst[i]);\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i=0; i<lst.length; i++){\n\
    \    sum += lst[i]*lst[i];\n  }\n  return Math.ceil(sum);\n}\n", "  var sum =\
    \ 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += lst[i]*lst[i];\n  }\n  return Math.round(sum);\n}\n", "  let sum =\
    \ 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i] * lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n", "  let sum = 0;\n  for(let i\
    \ = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return\
    \ sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n        sum\
    \ += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=javascript,arrays |>\n<code>", "  let sum = 0;\n\
    \  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        sum += Math.pow(lst[i], 2);\n    }\n \
    \   return Math.round(sum);\n}\n", "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n\
    \    sum += Math.pow(lst[i],2);\n  }\n  return Math.round(sum);\n}\n", "    var\
    \ sum = 0;\n    for(var i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.pow(lst[i], 2);\n    }\n    return Math.round(sum);\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "    var sum = 0;\n    for(var\
    \ i=0; i<lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n\
    \    return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>", "    let sum = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=javascript |>\n<| a dscore=0 |>\n<code>", "  let\
    \ sum = 0;\n  lst.map(x => sum += Math.round(x*x)); //round each element to the\
    \ upper int(Ceiling) first\n  return sum;\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n  \
    \  return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  \
    \  let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.pow(lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n", "    var sum = 0;\n    for(var\
    \ i=0;i<lst.length;i++){\n        sum += Math.pow(lst[i],2);\n    }\n    return\
    \ Math.round(sum);\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=javascript,arrays,function |>\n\
    <| a dscore=0 |>\n<code>", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        sum += Math.ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=javascript,arrays,algorithm |>\n<code>",
  "  var sum = 0;\n  for(var i=0;i<lst.length;i++){\n    sum += Math.ceil(lst[i]*lst[i]);\n\
    \  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    sum += Math.ceil(lst[i]*lst[i]);\n  }\n  return sum;\n}\n", "  let sum =\
    \ 0;\n  for(let i = 0; i < lst.length; i++){\n    sum += Math.ceil(lst[i] * lst[i]);\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        sum += Math.pow(lst[i],2);\n    }\n    return Math.round(sum);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

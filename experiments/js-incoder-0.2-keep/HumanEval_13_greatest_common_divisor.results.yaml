name: HumanEval_13_greatest_common_divisor
language: js
results:
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b == -1)\n\
    \    return a;\n  if(b > a)\n    return greatest_common_divisor(b, a%b);\n  if(b\
    \ < a)\n    return greatest_common_divisor(a%b, -b);\n  if(b == 0)\n    return\
    \ a;\n  if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b > a)\n\
    \    return greatest_common_divisor(b, a%b);\n  if(b < a)\n    return greatest_common_divisor(a%b,\
    \ -b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpdemuwtq4.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdemuwtq4.js:40:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) + b * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.375\n\nshould equal\n\n1\n    at test\
    \ (/tmp/tmpld6urjjl.js:15:10)\n    at Object.<anonymous> (/tmp/tmpld6urjjl.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.375,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzly04qqn.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpzly04qqn.js:7:3)\n    at greatest_common_divisor (/tmp/tmpzly04qqn.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpzly04qqn.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpzly04qqn.js:7:28)\n    at greatest_common_divisor (/tmp/tmpzly04qqn.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpzly04qqn.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpzly04qqn.js:7:28)\n    at greatest_common_divisor (/tmp/tmpzly04qqn.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpzly04qqn.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpzly04qqn.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ a/b+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpv52e7sio.js:7\n  if(b == 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmpv52e7sio.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmpv52e7sio.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpv52e7sio.js:14:12)\n    at greatest_common_divisor (/tmp/tmpv52e7sio.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpv52e7sio.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpv52e7sio.js:14:12)\n    at greatest_common_divisor (/tmp/tmpv52e7sio.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpv52e7sio.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpv52e7sio.js:14:12)\n    at greatest_common_divisor (/tmp/tmpv52e7sio.js:14:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpk74whqri.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpk74whqri.js:7:3)\n    at greatest_common_divisor (/tmp/tmpk74whqri.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpk74whqri.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpk74whqri.js:7:21)\n    at greatest_common_divisor (/tmp/tmpk74whqri.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpk74whqri.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpk74whqri.js:7:21)\n    at greatest_common_divisor (/tmp/tmpk74whqri.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpk74whqri.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpk74whqri.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == 2) return a;\n\
    \  if(b % 2 == 0) return greatest_common_divisor(a%b, a/b);\n  else return greatest_common_divisor(a%b,\
    \ a/b+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_q11sxv6.js:7\n  if(b == 0) return a;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:7:3)\n\
    \    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:11:15)\n    at greatest_common_divisor\
    \ (/tmp/tmp_q11sxv6.js:11:15)\n    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:11:15)\n\
    \    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:11:15)\n    at greatest_common_divisor\
    \ (/tmp/tmp_q11sxv6.js:11:15)\n    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:11:15)\n\
    \    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:11:15)\n    at greatest_common_divisor\
    \ (/tmp/tmp_q11sxv6.js:11:15)\n    at greatest_common_divisor (/tmp/tmp_q11sxv6.js:11:15)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0){\n    return b;\n  }\n  if(b === 0){\n    return a;\n  }\n\
    \  if(b === 1){\n    return a;\n  }\n  if(a === 1){\n    return b;\n  }\n  var\
    \ c = greatest_common_divisor(b, a % b);\n  if(c === 0){\n    return a;\n  }\n\
    \  return c;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmplj7h0146.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmplj7h0146.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return 0;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a % b);\n  }\n  return greatest_common_divisor(a\
    \ % b, a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpbis2hxzp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbis2hxzp.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpk4m1e3p2.js:7\n  return Math.abs(a/greatest_common_divisor(b,b));\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpk4m1e3p2.js:7:3)\n    at greatest_common_divisor (/tmp/tmpk4m1e3p2.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpk4m1e3p2.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpk4m1e3p2.js:7:21)\n    at greatest_common_divisor (/tmp/tmpk4m1e3p2.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpk4m1e3p2.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpk4m1e3p2.js:7:21)\n    at greatest_common_divisor (/tmp/tmpk4m1e3p2.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpk4m1e3p2.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpk4m1e3p2.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbklkd55e.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpbklkd55e.js:7:3)\n    at greatest_common_divisor (/tmp/tmpbklkd55e.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpbklkd55e.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpbklkd55e.js:7:28)\n    at greatest_common_divisor (/tmp/tmpbklkd55e.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpbklkd55e.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpbklkd55e.js:7:28)\n    at greatest_common_divisor (/tmp/tmpbklkd55e.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpbklkd55e.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpbklkd55e.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(a < b){\n    var temp = a;\n\
    \    a = b;\n    b = temp;\n  }\n  while(b !== 0){\n    var c = a % b;\n    a\
    \ = b;\n    b = c;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmp2y_la9i7.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2y_la9i7.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b / 2, a);\n  else\n    return greatest_common_divisor(b\
    \ / 2, a) % a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmpm92maef8.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm92maef8.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -10) return a;\n  if(b ==\
    \ -11) return a;\n  if(b == -12) return a;\n  if(b == -13) return a;\n  if(b ==\
    \ -14) return a;\n  if(b == -15) return a;\n  if(b == -16) return a;\n  if(b ==\
    \ -17) return a;\n  if(b == -18) return a;\n  if(b == -19) return a;\n  if(b ==\
    \ -20) return a;\n  if(b == -21) return a;\n  if(b == -22) return a;\n  if(b ==\
    \ -23) return a;\n  if(b == -24) return a;\n  if(b == -25) return a;\n  if(b ==\
    \ -26) return a;\n  if(b == -27) return a;\n  if(b == -28) return a;\n  if(b ==\
    \ -29) return a;\n  if(b == -30) return a;\n  if(b == -31) return a;\n  if(b ==\
    \ -32) return a;\n  if(b == -33) return a;\n  if(b == -34) return a;\n  if(b ==\
    \ -35) return a;\n  if(b == -36) return a;\n  if(b == -37) return a;\n  if(b ==\
    \ -38) return a;\n  if(b == -39) return a;\n  if(b == -40) return a;\n  if(b ==\
    \ -41) return a;\n  if(b == -42) return a;\n  if(b == -43) return a;\n  if(b ==\
    \ -44) return a;\n  if(b == -45) return a;\n  if(b == -46) return a;\n  if(b ==\
    \ -47) return a;\n  if(b == -48) return a;\n  if(b == -49) return a;\n  if(b ==\
    \ -50) return a;\n  if(b == -51) return a;\n  if(b == -52) return a;\n  if(b ==\
    \ -53) return a;\n  if(b == -54) return a;\n  if(b == -55) return a;\n  if(b ==\
    \ -56) return a;\n  if(b == -57) return a;\n  if(b == -58\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp167va2qg.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmphhurdo1o.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmphhurdo1o.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0)\n    return 0;\n  if(a < b)\n    return greatest_common_divisor(b,\
    \ a % b);\n  else\n    return greatest_common_divisor(a, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpedro86ik.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpedro86ik.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b-1,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpogv9ogql.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpogv9ogql.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmpp4_ep9z7.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp4_ep9z7.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  else\n    return greatest_common_divisor(a, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmp5dvjgn85.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5dvjgn85.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpzi00o4ba.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzi00o4ba.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(a === -2) return -b;\n  if(b === 0) return a;\n  if(b === 1) return\
    \ a;\n  if(b === -1) return -a;\n  if(b === -2) return -a;\n  if(b === -3) return\
    \ a;\n  if(b === -4) return a;\n  if(b === -5) return -a;\n  if(b === -6) return\
    \ -a;\n  if(b === -7) return a;\n  if(b === -8) return a;\n  if(b === -9) return\
    \ -a;\n  if(b === -10) return -a;\n  if(b === -11) return a;\n  if(b === -12)\
    \ return a;\n  if(b === -13) return -a;\n  if(b === -14) return -a;\n  if(b ===\
    \ -15) return a;\n  if(b === -16) return a;\n  if(b === -17) return -a;\n  if(b\
    \ === -18) return -a;\n  if(b === -19) return a;\n  if(b === -20) return a;\n\
    \  if(b === -21) return -a;\n  if(b === -22) return -a;\n  if(b === -23) return\
    \ a;\n  if(b === -24) return a;\n  if(b === -25) return -a;\n  if(b === -26) return\
    \ -a;\n  if(b === -27) return a;\n  if(b === -28) return a;\n  if(b === -29) return\
    \ -a;\n  if(b === -30) return -a;\n  if(b === -31) return a;\n  if(b === -32)\
    \ return a;\n  if(b === -33) return -a;\n  if(b === -34) return -a;\n  if(b ===\
    \ -35) return a;\n  if(b === -36) return a;\n  if(b === -37) return -a;\n  if(b\
    \ === -38) return -a;\n  if(b === -39) return a;\n  if(b === -40) return a;\n\
    \  if(b === -41) return -a;\n  if(b === -42) return -a;\n  if(b === -43) return\
    \ a;\n  if(b === -44) return a;\n  if(b === -45) return -a;\n  if(b === -46) return\
    \ -a;\n  if(b === -47) return a;\n  if(b === -48) return a;\n  if(b === -49) return\
    \ -a;\n  if(b === -50) return -a;\n  if(b === -51) return a;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqcwv8gk3.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxa455ma8.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpxa455ma8.js:7:3)\n    at greatest_common_divisor (/tmp/tmpxa455ma8.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpxa455ma8.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpxa455ma8.js:7:28)\n    at greatest_common_divisor (/tmp/tmpxa455ma8.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpxa455ma8.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpxa455ma8.js:7:28)\n    at greatest_common_divisor (/tmp/tmpxa455ma8.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpxa455ma8.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpxa455ma8.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(a === 0) return b;\n  if(b === 1) return\
    \ a;\n  if(a === 1) return b;\n  if(b !== a) return b;\n  if(b !== 0) return b;\n\
    \  if(b === 0) return a;\n  if(b === 1) return a;\n  if(a === 0) return b;\n \
    \ if(a === 1) return b;\n  if(b !== a) return b;\n  if(b !== 0) return b;\n  if(b\
    \ === 0) return a;\n  if(b === 1) return a;\n  if(a === 0) return b;\n  if(a ===\
    \ 1) return b;\n  if(b !== a) return b;\n  if(b !== 0) return b;\n  if(b === 0)\
    \ return a;\n  if(b === 1) return a;\n  if(a === 0) return b;\n  if(a === 1) return\
    \ b;\n  if(b !== a) return b;\n  if(b !== 0) return b;\n  if(b === 0) return a;\n\
    \  if(b === 1) return a;\n  if(a === 0) return b;\n  if(a === 1) return b;\n \
    \ if(b !== a) return b;\n  if(b !== 0) return b;\n  if(b === 0) return a;\n  if(b\
    \ === 1) return a;\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(b !==\
    \ a) return b;\n  if(b !== 0) return b;\n  if(b === 0) return a;\n  if(b === 1)\
    \ return a;\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(b !== a) return\
    \ b;\n  if(b !== 0) return b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n\
    \  if(a === 0) return b;\n  if(a === 1) return b;\n  if(b !== a) return b;\n \
    \ if(b !== 0) return b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(a\
    \ === 0) return b;\n  if(a === 1) return b;\n  if(b !== a) return b;\n  if(b !==\
    \ 0) return b;\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(a === 0)\
    \ return b;\n  if(a === 1) return b;\n  if(b !== a) return b;\n  if(b !== 0) return\
    \ b;\n  if(b === 0) return a;\n  if(b === \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnj8ve6xt.js:69\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1gej_x6t.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp1gej_x6t.js:7:3)\n    at greatest_common_divisor (/tmp/tmp1gej_x6t.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp1gej_x6t.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp1gej_x6t.js:7:28)\n    at greatest_common_divisor (/tmp/tmp1gej_x6t.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp1gej_x6t.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp1gej_x6t.js:7:28)\n    at greatest_common_divisor (/tmp/tmp1gej_x6t.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp1gej_x6t.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp1gej_x6t.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp2se6vjhk.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2se6vjhk.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpttoismbk.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpttoismbk.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a/2, b);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b/a, a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b/a, a);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2z07nskt.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return a;\n  if(a === b)\n    return a;\n  if(b === a)\n    return b;\n\
    \  if(b === 0)\n    return 0;\n  if(b === 1)\n    return 1;\n  var c = greatest_common_divisor(b,\
    \ a % b);\n  return a / c;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.42857142857142855\n\nshould equal\n\n\
    1\n    at test (/tmp/tmp5umhqa13.js:30:10)\n    at Object.<anonymous> (/tmp/tmp5umhqa13.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n  expected: 1,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return a;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a);\n  }\n  while(b !== 0){\n    a = a%b;\n    b\
    \ = b%a;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(a < b)\n\
    \    return greatest_common_divisor(b, a % b);\n  else\n    return greatest_common_divisor(a,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmph9seb_br.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmph9seb_br.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== a % b) return\
    \ b;\n  for(var c = 1; c < b; c++){\n    if(a % c === 0) return c;\n  }\n  return\
    \ b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpo633gemk.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo633gemk.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(a > b){\n    var temp = a;\n\
    \    a = b;\n    b = temp;\n  }\n  while(b !== 0){\n    var t = b;\n    b = a\
    \ % b;\n    a = t;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmplm3tsz8d.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmplm3tsz8d.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp274trgwl.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp274trgwl.js:7:3)\n    at greatest_common_divisor (/tmp/tmp274trgwl.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp274trgwl.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp274trgwl.js:7:28)\n    at greatest_common_divisor (/tmp/tmp274trgwl.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp274trgwl.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp274trgwl.js:7:28)\n    at greatest_common_divisor (/tmp/tmp274trgwl.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp274trgwl.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp274trgwl.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b/2, a);\n  if(a % 2 === 0)\n   \
    \ return greatest_common_divisor(a/2, b);\n  var c = 1;\n  while(a % b){\n   \
    \ a++;\n    c++;\n  }\n  return c;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n1\n    at test (/tmp/tmp1jiwa15b.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1jiwa15b.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmp35gz37z2.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp35gz37z2.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b / 2, a);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(a/2, b);\n  var c = 1;\n  while(b !== 0){\n\
    \    if(a % 2 === 0){\n      b = b / 2;\n      a = a / 2;\n    }else{\n      a\
    \ = a / 2;\n      b = b / 2;\n    }\n    c++;\n  }\n  return c;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1079\n\nshould equal\n\n1\n    at test (/tmp/tmppy5kompp.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmppy5kompp.js:40:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1079,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0){\n    return a;\n  }\n  while(b !== 0){\n    var c = a %\
    \ b;\n    a = b;\n    b = c;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return a;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a % b);\n  }\n  return greatest_common_divisor(a\
    \ % b, b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp38y9k5u_.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp38y9k5u_.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpupl2lk41.js:7\n  return Math.abs(a * b) / gcd(a, b);\n        \
    \      ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmpupl2lk41.js:7:15)\n    at test (/tmp/tmpupl2lk41.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpupl2lk41.js:21:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.42857142857142855\n\nshould equal\n\n\
    1\n    at test (/tmp/tmpkhlnvf2n.js:15:10)\n    at Object.<anonymous> (/tmp/tmpkhlnvf2n.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n  expected: 1,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(a < b)\n\
    \    return greatest_common_divisor(b, a);\n  else\n    return greatest_common_divisor(a,\
    \ Math.floor(b / a));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpfp5ekwhl.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfp5ekwhl.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmp4h2h_qr6.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4h2h_qr6.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(a%b, a/b);\n  if(a % 2 === 0)\n \
    \   return greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n    return greatest_common_divisor(a%b,\
    \ a/b);\n  if(b % a === 0)\n    return greatest_common_divisor(b%a, b/a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(a%b, a/b);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n    return\
    \ greatest_common_divisor(a%b, a/b);\n  if(b % a === 0)\n    return greatest_common_divisor(b%a,\
    \ b/a);\n  if(b % a === 0)\n    return greatest_common_divisor(a%b, a/b);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(a%b, a/b);\n  if(b % a === 0)\n    return\
    \ greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n    return greatest_common_divisor(a%b,\
    \ a/b);\n  if(b % a === 0)\n    return greatest_common_divisor(b%a, b/a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(a%b, a/b);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n    return\
    \ greatest_common_divisor(a%b, a/b);\n  if(b % a === 0)\n    return greatest_common_divisor(b%a,\
    \ b/a);\n  if(b % a === 0)\n    return greatest_common_divisor(a%b, a/b);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n\
    \    return greatest_common_divisor(a%b, a/b);\n  if(b % a === 0)\n    return\
    \ greatest_common_divisor(b%a, b/a);\n  if(b % a === 0)\n    return greatest_common_divisor(a%b,\
    \ a/b);\n  if(b % a === 0)\n    return greatest_common_divisor(b%a, b/a);\n  if(b\
    \ % a === 0)\n    return greatest_common_divisor\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwnt59bn_.js:72\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp34z6s_gs.js:7\n  return Math.abs(a * b) / gcd(a, b);\n        \
    \      ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmp34z6s_gs.js:7:15)\n    at test (/tmp/tmp34z6s_gs.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp34z6s_gs.js:21:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpc2fsu2cf.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc2fsu2cf.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmph_8_fwvb.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmph_8_fwvb.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(a === -2) return -b;\n  if(a === -3) return -b;\n  if(a === -4) return\
    \ -b;\n  if(a === -5) return -b;\n  if(a === -6) return -b;\n  if(a === -7) return\
    \ -b;\n  if(a === -8) return -b;\n  if(a === -9) return -b;\n  if(a === -10) return\
    \ -b;\n  if(a === -11) return -b;\n  if(a === -12) return -b;\n  if(a === -13)\
    \ return -b;\n  if(a === -14) return -b;\n  if(a === -15) return -b;\n  if(a ===\
    \ -16) return -b;\n  if(a === -17) return -b;\n  if(a === -18) return -b;\n  if(a\
    \ === -19) return -b;\n  if(a === -20) return -b;\n  if(a === -21) return -b;\n\
    \  if(a === -22) return -b;\n  if(a === -23) return -b;\n  if(a === -24) return\
    \ -b;\n  if(a === -25) return -b;\n  if(a === -26) return -b;\n  if(a === -27)\
    \ return -b;\n  if(a === -28) return -b;\n  if(a === -29) return -b;\n  if(a ===\
    \ -30) return -b;\n  if(a === -31) return -b;\n  if(a === -32) return -b;\n  if(a\
    \ === -33) return -b;\n  if(a === -34) return -b;\n  if(a === -35) return -b;\n\
    \  if(a === -36) return -b;\n  if(a === -37) return -b;\n  if(a === -38) return\
    \ -b;\n  if(a === -39) return -b;\n  if(a === -40) return -b;\n  if(a === -41)\
    \ return -b;\n  if(a === -42) return -b;\n  if(a === -43) return -b;\n  if(a ===\
    \ -44) return -b;\n  if(a === -45) return -b;\n  if(a === -46) return -b;\n  if(a\
    \ === -47) return -b;\n  if(a === -48) return -b;\n  if(a === -49) return -b;\n\
    \  if(a === -50) return -b;\n  if(a === -51) return -b;\n  if(a === -52) return\
    \ -b\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppu4jcljk.js:72\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) /\n    (Math.abs(a) * Math.abs(b));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n5\n    at test (/tmp/tmp7y1fuyq8.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7y1fuyq8.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b % 2 == 0) return\
    \ greatest_common_divisor(a%b, a/b);\n  if(a % 2 == 0) return greatest_common_divisor(a%b,\
    \ a/b+1);\n  return greatest_common_divisor(a%b+1, a/b);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmo76jj32.js:7\n  if(b == 0) return a;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at greatest_common_divisor (/tmp/tmpmo76jj32.js:7:3)\n\
    \    at greatest_common_divisor (/tmp/tmpmo76jj32.js:9:25)\n    at greatest_common_divisor\
    \ (/tmp/tmpmo76jj32.js:11:10)\n    at greatest_common_divisor (/tmp/tmpmo76jj32.js:9:25)\n\
    \    at greatest_common_divisor (/tmp/tmpmo76jj32.js:11:10)\n    at greatest_common_divisor\
    \ (/tmp/tmpmo76jj32.js:9:25)\n    at greatest_common_divisor (/tmp/tmpmo76jj32.js:11:10)\n\
    \    at greatest_common_divisor (/tmp/tmpmo76jj32.js:9:25)\n    at greatest_common_divisor\
    \ (/tmp/tmpmo76jj32.js:11:10)\n    at greatest_common_divisor (/tmp/tmpmo76jj32.js:9:25)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.469802112191199e-227\n\nshould equal\n\
    \n1\n    at test (/tmp/tmpkkadpaqn.js:22:10)\n    at Object.<anonymous> (/tmp/tmpkkadpaqn.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a !==\
    \ 0) return greatest_common_divisor(b, a % b);\n  if(a === 0) return 0;\n  if(a\
    \ === 1) return 1;\n  if(a === 2) return 2;\n  if(a === 3) return 1;\n  if(a ===\
    \ 4) return 2;\n  if(a === 5) return 3;\n  if(a === 6) return 1;\n  if(a === 7)\
    \ return 2;\n  if(a === 8) return 3;\n  if(a === 9) return 4;\n  if(a === 10)\
    \ return 8;\n  if(a === 11) return 9;\n  if(a === 12) return 8;\n  if(a === 13)\
    \ return 10;\n  if(a === 14) return 9;\n  if(a === 15) return 10;\n  if(a ===\
    \ 16) return 8;\n  if(a === 17) return 9;\n  if(a === 18) return 10;\n  if(a ===\
    \ 19) return 11;\n  if(a === 20) return 12;\n  if(a === 21) return 13;\n  if(a\
    \ === 22) return 14;\n  if(a === 23) return 15;\n  if(a === 24) return 16;\n \
    \ if(a === 25) return 17;\n  if(a === 26) return 18;\n  if(a === 27) return 19;\n\
    \  if(a === 28) return 20;\n  if(a === 29) return 21;\n  if(a === 30) return 22;\n\
    \  if(a === 31) return 23;\n  if(a === 32) return 24;\n  if(a === 33) return 25;\n\
    \  if(a === 34) return 26;\n  if(a === 35) return 27;\n  if(a === 36) return 28;\n\
    \  if(a === 37) return 29;\n  if(a === 38) return 30;\n  if(a === 39) return 31;\n\
    \  if(a === 40) return 32;\n  if(a === 41) return 33;\n  if(a === 42) return 34;\n\
    \  if(a === 43) return 35;\n  if(a === 44) return 36;\n  if(a === 45) return 37;\n\
    \  if(a === 46) return 38;\n  if(a === 47) return 39;\n  if(a === 48) return 40;\n\
    \  if(a === 49) return 41;\n  if(a === 50) return 42;\n  if(a === 51) return 43;\n\
    \  if(a === 52) return 44;\n  if(a === 53) return 45;\n  if(a === 54) return 46;\n\
    \  if(a === 55) return \nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbfricsvt.js:77\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b/2,\
    \ a%2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3.5\n\nshould equal\n\n1\n    at test (/tmp/tmpkjqu4qll.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkjqu4qll.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.42857142857142855\n\nshould equal\n\n\
    1\n    at test (/tmp/tmpz51w8gg9.js:15:10)\n    at Object.<anonymous> (/tmp/tmpz51w8gg9.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n  expected: 1,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmp_mqlx1xb.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_mqlx1xb.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.42857142857142855\n\nshould equal\n\n\
    1\n    at test (/tmp/tmpch8gbfk4.js:15:10)\n    at Object.<anonymous> (/tmp/tmpch8gbfk4.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n  expected: 1,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b !==\
    \ 0)\n    return greatest_common_divisor(b, a % b);\n  else\n    return a;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpghjmzp9k.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpghjmzp9k.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmpw8dgfk97.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw8dgfk97.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b % 2 == 0) return\
    \ greatest_common_divisor(a%b, a/b);\n  else return greatest_common_divisor(a%b,\
    \ a/b+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9yiu7rpv.js:7\n  if(b == 0) return a;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:7:3)\n\
    \    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:10:15)\n    at greatest_common_divisor\
    \ (/tmp/tmp9yiu7rpv.js:10:15)\n    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:10:15)\n\
    \    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:10:15)\n    at greatest_common_divisor\
    \ (/tmp/tmp9yiu7rpv.js:10:15)\n    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:10:15)\n\
    \    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:10:15)\n    at greatest_common_divisor\
    \ (/tmp/tmp9yiu7rpv.js:10:15)\n    at greatest_common_divisor (/tmp/tmp9yiu7rpv.js:10:15)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpot02b4mt.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpot02b4mt.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b-1,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpv4mh2yxc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv4mh2yxc.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2o84un5t.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp2o84un5t.js:7:3)\n    at greatest_common_divisor (/tmp/tmp2o84un5t.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp2o84un5t.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp2o84un5t.js:7:21)\n    at greatest_common_divisor (/tmp/tmp2o84un5t.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp2o84un5t.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp2o84un5t.js:7:21)\n    at greatest_common_divisor (/tmp/tmp2o84un5t.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp2o84un5t.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp2o84un5t.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmpw4jwkel2.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw4jwkel2.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmphrgx_c3r.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmphrgx_c3r.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(a === -2) return -b;\n  if(b === 0) return a;\n  if(b === 1) return\
    \ a;\n  if(b === -1) return -a;\n  if(b === -2) return -a;\n  if(b === -3) return\
    \ a;\n  if(b === -4) return a;\n  if(b === -5) return -a;\n  if(b === -6) return\
    \ -a;\n  if(b === -7) return a;\n  if(b === -8) return a;\n  if(b === -9) return\
    \ -a;\n  if(b === -10) return -a;\n  if(b === -11) return a;\n  if(b === -12)\
    \ return a;\n  if(b === -13) return -a;\n  if(b === -14) return -a;\n  if(b ===\
    \ -15) return a;\n  if(b === -16) return a;\n  if(b === -17) return -a;\n  if(b\
    \ === -18) return -a;\n  if(b === -19) return a;\n  if(b === -20) return a;\n\
    \  if(b === -21) return -a;\n  if(b === -22) return -a;\n  if(b === -23) return\
    \ a;\n  if(b === -24) return a;\n  if(b === -25) return -a;\n  if(b === -26) return\
    \ -a;\n  if(b === -27) return a;\n  if(b === -28) return a;\n  if(b === -29) return\
    \ -a;\n  if(b === -30) return -a;\n  if(b === -31) return a;\n  if(b === -32)\
    \ return a;\n  if(b === -33) return -a;\n  if(b === -34) return -a;\n  if(b ===\
    \ -35) return a;\n  if(b === -36) return a;\n  if(b === -37) return -a;\n  if(b\
    \ === -38) return -a;\n  if(b === -39) return a;\n  if(b === -40) return a;\n\
    \  if(b === -41) return -a;\n  if(b === -42) return -a;\n  if(b === -43) return\
    \ a;\n  if(b === -44) return a;\n  if(b === -45) return -a;\n  if(b === -46) return\
    \ -a;\n  if(b === -47) return a;\n  if(b === -48) return a;\n  if(b === -49) return\
    \ -a;\n  if(b === -50) return -a;\n  if(b === -51) return a;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9q3gyayp.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpozfke6d2.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpozfke6d2.js:7:3)\n    at greatest_common_divisor (/tmp/tmpozfke6d2.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpozfke6d2.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpozfke6d2.js:7:21)\n    at greatest_common_divisor (/tmp/tmpozfke6d2.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpozfke6d2.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpozfke6d2.js:7:21)\n    at greatest_common_divisor (/tmp/tmpozfke6d2.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpozfke6d2.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpozfke6d2.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a % b ? greatest_common_divisor(b, a % b) : b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.42857142857142855\n\nshould equal\n\n\
    1\n    at test (/tmp/tmpaprc22u5.js:15:10)\n    at Object.<anonymous> (/tmp/tmpaprc22u5.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n  expected: 1,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b % 2\
    \ === 0)\n    return greatest_common_divisor(b/2, a);\n  if(a % 2 === 0)\n   \
    \ return greatest_common_divisor(a/2, b);\n  if(b % a === 0)\n    return greatest_common_divisor(b/a,\
    \ a);\n  return b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpxi2iel12.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxi2iel12.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmpddcxg806.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpddcxg806.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return 0;\n  }\n  if(a < b){\n    return\
    \ greatest_common_divisor(b, a % b);\n  }\n  return greatest_common_divisor(a\
    \ % b, a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpbs0p6x5a.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbs0p6x5a.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b/2, a);\n  else\n    return greatest_common_divisor(b/2,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.25\n\nshould equal\n\n1\n    at test (/tmp/tmpy5yyyfcf.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy5yyyfcf.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.25,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b <= a) return a;\n  if(b\
    \ >= a) return b;\n  while(a % b != 0) a = a / b;\n  return a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmp9kkwca2c.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9kkwca2c.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbmrhd_bx.js:7\n  return Math.abs(a/greatest_common_divisor(b,b));\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpbmrhd_bx.js:7:3)\n    at greatest_common_divisor (/tmp/tmpbmrhd_bx.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpbmrhd_bx.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpbmrhd_bx.js:7:21)\n    at greatest_common_divisor (/tmp/tmpbmrhd_bx.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpbmrhd_bx.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpbmrhd_bx.js:7:21)\n    at greatest_common_divisor (/tmp/tmpbmrhd_bx.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpbmrhd_bx.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpbmrhd_bx.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpb5p1ra8j.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpb5p1ra8j.js:7:3)\n    at greatest_common_divisor (/tmp/tmpb5p1ra8j.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpb5p1ra8j.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpb5p1ra8j.js:7:28)\n    at greatest_common_divisor (/tmp/tmpb5p1ra8j.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpb5p1ra8j.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpb5p1ra8j.js:7:28)\n    at greatest_common_divisor (/tmp/tmpb5p1ra8j.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmpb5p1ra8j.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmpb5p1ra8j.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp33dv0soe.js:7\n  return Math.abs(a * b) / greatest_common_divisor(b,\
    \ a % b);\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp33dv0soe.js:7:3)\n    at greatest_common_divisor (/tmp/tmp33dv0soe.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp33dv0soe.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp33dv0soe.js:7:28)\n    at greatest_common_divisor (/tmp/tmp33dv0soe.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp33dv0soe.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp33dv0soe.js:7:28)\n    at greatest_common_divisor (/tmp/tmp33dv0soe.js:7:28)\n\
    \    at greatest_common_divisor (/tmp/tmp33dv0soe.js:7:28)\n    at greatest_common_divisor\
    \ (/tmp/tmp33dv0soe.js:7:28)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) /\n    (Math.abs(a) * Math.abs(b));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n5\n    at test (/tmp/tmpv2irtead.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv2irtead.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmp8zoz4fw1.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8zoz4fw1.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(a === -2) return -b;\n  if(b === 0) return a;\n  if(b === 1) return\
    \ a;\n  if(b === -1) return -a;\n  if(b === -2) return -a;\n  if(b === -3) return\
    \ a;\n  if(b === -4) return a;\n  if(b === -5) return -a;\n  if(b === -6) return\
    \ -a;\n  if(b === -7) return a;\n  if(b === -8) return a;\n  if(b === -9) return\
    \ -a;\n  if(b === -10) return -a;\n  if(b === -11) return a;\n  if(b === -12)\
    \ return a;\n  if(b === -13) return -a;\n  if(b === -14) return -a;\n  if(b ===\
    \ -15) return a;\n  if(b === -16) return a;\n  if(b === -17) return -a;\n  if(b\
    \ === -18) return -a;\n  if(b === -19) return a;\n  if(b === -20) return a;\n\
    \  if(b === -21) return -a;\n  if(b === -22) return -a;\n  if(b === -23) return\
    \ a;\n  if(b === -24) return a;\n  if(b === -25) return -a;\n  if(b === -26) return\
    \ -a;\n  if(b === -27) return a;\n  if(b === -28) return a;\n  if(b === -29) return\
    \ -a;\n  if(b === -30) return -a;\n  if(b === -31) return a;\n  if(b === -32)\
    \ return a;\n  if(b === -33) return -a;\n  if(b === -34) return -a;\n  if(b ===\
    \ -35) return a;\n  if(b === -36) return a;\n  if(b === -37) return -a;\n  if(b\
    \ === -38) return -a;\n  if(b === -39) return a;\n  if(b === -40) return a;\n\
    \  if(b === -41) return -a;\n  if(b === -42) return -a;\n  if(b === -43) return\
    \ a;\n  if(b === -44) return a;\n  if(b === -45) return -a;\n  if(b === -46) return\
    \ -a;\n  if(b === -47) return a;\n  if(b === -48) return a;\n  if(b === -49) return\
    \ -a;\n  if(b === -50) return -a;\n  if(b === -51) return a;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbogw7qhi.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0)\n    return a;\n  if(b === 1)\n    return a;\n  if(b !==\
    \ 0)\n    return greatest_common_divisor(b, a % b);\n  else\n    return Math.abs(a)\
    \ % Math.abs(b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpniywmioi.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpniywmioi.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmpkdey0szw.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkdey0szw.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpoh4l280p.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoh4l280p.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmp_gxjihwm.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_gxjihwm.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpmulf_d5c.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmulf_d5c.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmp6gsfacxp.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6gsfacxp.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpwpsf8dno.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwpsf8dno.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmp1iwx4xgl.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1iwx4xgl.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpfea_s7ru.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfea_s7ru.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * b) / Math.abs(a) * Math.abs(b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.42857142857142855\n\nshould equal\n\n\
    1\n    at test (/tmp/tmpyavto9n1.js:15:10)\n    at Object.<anonymous> (/tmp/tmpyavto9n1.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.42857142857142855,\n  expected: 1,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  else\n    return greatest_common_divisor(a, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpc4x7g1hr.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc4x7g1hr.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.469802112191199e-227\n\nshould equal\n\
    \n1\n    at test (/tmp/tmprgsmakqy.js:22:10)\n    at Object.<anonymous> (/tmp/tmprgsmakqy.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ a/b+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn8nothu0.js:7\n  if(b == 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmpn8nothu0.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmpn8nothu0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpn8nothu0.js:14:12)\n    at greatest_common_divisor (/tmp/tmpn8nothu0.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpn8nothu0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpn8nothu0.js:14:12)\n    at greatest_common_divisor (/tmp/tmpn8nothu0.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpn8nothu0.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpn8nothu0.js:14:12)\n    at greatest_common_divisor (/tmp/tmpn8nothu0.js:14:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * a\
    \ + b * b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n21\n\nshould equal\n\n1\n    at test (/tmp/tmpksk8e1im.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpksk8e1im.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 21,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a > b ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpotrfb4pc.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpotrfb4pc.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(b ===\
    \ a)\n    return b;\n  if(b > a)\n    return greatest_common_divisor(b, a % b);\n\
    \  if(a > b)\n    return greatest_common_divisor(a, a % b);\n  return a;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpumcet_7n.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpumcet_7n.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5hmgbfj7.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp5hmgbfj7.js:7:3)\n    at greatest_common_divisor (/tmp/tmp5hmgbfj7.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmp5hmgbfj7.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmp5hmgbfj7.js:7:14)\n    at greatest_common_divisor (/tmp/tmp5hmgbfj7.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmp5hmgbfj7.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmp5hmgbfj7.js:7:14)\n    at greatest_common_divisor (/tmp/tmp5hmgbfj7.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmp5hmgbfj7.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmp5hmgbfj7.js:7:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(a === b)\n    return a;\n  if(a < b)\n\
    \    return greatest_common_divisor(b, a % b);\n  else\n    return greatest_common_divisor(a,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpoq_0ms93.js:7\n  if(a === 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmpoq_0ms93.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmpoq_0ms93.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpoq_0ms93.js:14:12)\n    at greatest_common_divisor (/tmp/tmpoq_0ms93.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpoq_0ms93.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpoq_0ms93.js:14:12)\n    at greatest_common_divisor (/tmp/tmpoq_0ms93.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpoq_0ms93.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpoq_0ms93.js:14:12)\n    at greatest_common_divisor (/tmp/tmpoq_0ms93.js:14:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0vy43vup.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp0vy43vup.js:7:3)\n    at greatest_common_divisor (/tmp/tmp0vy43vup.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp0vy43vup.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp0vy43vup.js:7:21)\n    at greatest_common_divisor (/tmp/tmp0vy43vup.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp0vy43vup.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp0vy43vup.js:7:21)\n    at greatest_common_divisor (/tmp/tmp0vy43vup.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmp0vy43vup.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmp0vy43vup.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -10) return a;\n  if(b ==\
    \ -11) return a;\n  if(b == -12) return a;\n  if(b == -13) return a;\n  if(b ==\
    \ -14) return a;\n  if(b == -15) return a;\n  if(b == -16) return a;\n  if(b ==\
    \ -17) return a;\n  if(b == -18) return a;\n  if(b == -19) return a;\n  if(b ==\
    \ -20) return a;\n  if(b == -21) return a;\n  if(b == -22) return a;\n  if(b ==\
    \ -23) return a;\n  if(b == -24) return a;\n  if(b == -25) return a;\n  if(b ==\
    \ -26) return a;\n  if(b == -27) return a;\n  if(b == -28) return a;\n  if(b ==\
    \ -29) return a;\n  if(b == -30) return a;\n  if(b == -31) return a;\n  if(b ==\
    \ -32) return a;\n  if(b == -33) return a;\n  if(b == -34) return a;\n  if(b ==\
    \ -35) return a;\n  if(b == -36) return a;\n  if(b == -37) return a;\n  if(b ==\
    \ -38) return a;\n  if(b == -39) return a;\n  if(b == -40) return a;\n  if(b ==\
    \ -41) return a;\n  if(b == -42) return a;\n  if(b == -43) return a;\n  if(b ==\
    \ -44) return a;\n  if(b == -45) return a;\n  if(b == -46) return a;\n  if(b ==\
    \ -47) return a;\n  if(b == -48) return a;\n  if(b == -49) return a;\n  if(b ==\
    \ -50) return a;\n  if(b == -51) return a;\n  if(b == -52) return a;\n  if(b ==\
    \ -53) return a;\n  if(b == -54) return a;\n  if(b == -55) return a;\n  if(b ==\
    \ -56) return a;\n  if(b == -57) return a;\n  if(b == -58\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp10zeu78_.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.469802112191199e-227\n\nshould equal\n\
    \n1\n    at test (/tmp/tmpdt6o08fc.js:22:10)\n    at Object.<anonymous> (/tmp/tmpdt6o08fc.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== Math.floor(b))\
    \ return NaN;\n  return greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpfsxn8s5l.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfsxn8s5l.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpgmztxcbu.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgmztxcbu.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / Math.round((a * a + b * b) / Math.abs(a * b));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmpj5ewbfq9.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj5ewbfq9.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if(b == 0)\n    return a;\n \
    \ if(b == 1)\n    return a;\n  if(b == -1)\n    return a;\n  if(b == 2)\n    return\
    \ a;\n  if(b == -2)\n    return a;\n  if(b == 3)\n    return a;\n  if(b == -3)\n\
    \    return a;\n  if(b == 4)\n    return a;\n  if(b == -4)\n    return a;\n  if(b\
    \ == 5)\n    return a;\n  if(b == -5)\n    return a;\n  if(b == 6)\n    return\
    \ a;\n  if(b == -6)\n    return a;\n  if(b == 7)\n    return a;\n  if(b == -7)\n\
    \    return a;\n  if(b == 8)\n    return a;\n  if(b == -8)\n    return a;\n  if(b\
    \ == 9)\n    return a;\n  if(b == -9)\n    return a;\n  if(b == 10)\n    return\
    \ a;\n  if(b == -10)\n    return a;\n  if(b == 11)\n    return a;\n  if(b == -11)\n\
    \    return a;\n  if(b == 12)\n    return a;\n  if(b == -12)\n    return a;\n\
    \  if(b == 13)\n    return a;\n  if(b == -13)\n    return a;\n  if(b == 14)\n\
    \    return a;\n  if(b == -14)\n    return a;\n  if(b == 15)\n    return a;\n\
    \  if(b == -15)\n    return a;\n  if(b == 16)\n    return a;\n  if(b == -16)\n\
    \    return a;\n  if(b == 17)\n    return a;\n  if(b == -17)\n    return a;\n\
    \  if(b == 18)\n    return a;\n  if(b == -18)\n    return a;\n  if(b == 19)\n\
    \    return a;\n  if(b == -19)\n    return a;\n  if(b == 20)\n    return a;\n\
    \  if(b == -20)\n    return a;\n  if(b == 21)\n    return a;\n  if(b == -21)\n\
    \    return a;\n  if(b == 22)\n    return a;\n  if(b == -22)\n    return a;\n\
    \  if(b == 23)\n    return a;\n  if(b == -23)\n    return a;\n  if(b == 24)\n\
    \    return a;\n  if(b == -24)\n    return a;\n  if(b == 25)\n    return a;\n\
    \  if(b == -25)\n    return a;\n  if(b == 26)\n    return a;\n  if(b == -26\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpio6euj3f.js:114\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.469802112191199e-227\n\nshould equal\n\
    \n1\n    at test (/tmp/tmp7ksvoeeb.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7ksvoeeb.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp2tvf10f6.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2tvf10f6.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0){\n    return b;\n  }\n  if(a === 1){\n    return a;\n  }\n\
    \  if(a === 2){\n    return a;\n  }\n  if(a === 3){\n    return b;\n  }\n  if(a\
    \ === 4){\n    return b;\n  }\n  if(a === 5){\n    return a;\n  }\n  if(a ===\
    \ 6){\n    return a;\n  }\n  if(a === 7){\n    return b;\n  }\n  if(a === 8){\n\
    \    return b;\n  }\n  if(a === 9){\n    return b;\n  }\n  if(a === 10){\n   \
    \ return a;\n  }\n  if(a === 11){\n    return a;\n  }\n  if(a === 12){\n    return\
    \ a;\n  }\n  if(a === 13){\n    return b;\n  }\n  if(a === 14){\n    return b;\n\
    \  }\n  if(a === 15){\n    return a;\n  }\n  if(a === 16){\n    return a;\n  }\n\
    \  if(a === 17){\n    return b;\n  }\n  if(a === 18){\n    return b;\n  }\n  if(a\
    \ === 19){\n    return a;\n  }\n  if(a === 20){\n    return a;\n  }\n  if(a ===\
    \ 21){\n    return b;\n  }\n  if(a === 22){\n    return b;\n  }\n  if(a === 23){\n\
    \    return a;\n  }\n  if(a === 24){\n    return a;\n  }\n  if(a === 25){\n  \
    \  return b;\n  }\n  if(a === 26){\n    return b;\n  }\n  if(a === 27){\n    return\
    \ a;\n  }\n  if(a === 28){\n    return a;\n  }\n  if(a === 29){\n    return b;\n\
    \  }\n  if(a === 30){\n    return b;\n  }\n  if(a === 31){\n    return a;\n  }\n\
    \  if(a === 32){\n    return a;\n  }\n  if(a === 33){\n    return b;\n  }\n  if(a\
    \ === 34){\n    return b;\n  }\n  if(a === 35){\n    return a;\n  }\n  if(a ===\
    \ 36){\n    return a;\n  }\n  if(a === 37){\n    return b;\n  }\n  if(a === 38){\n\
    \    return b;\n  }\n  if(a === 39){\n    return a;\n  }\n  if(a === 40){\n  \
    \  return a;\n  }\n  if(a === 41){\n    return b;\n  }\n  if(a === 42){\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp91h0d6am.js:145\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp9muxlzby.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9muxlzby.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  if(b == -1) return a;\n\
    \  if(b == -2) return a;\n  if(b == -3) return a;\n  if(b == -4) return a;\n \
    \ if(b == -5) return a;\n  if(b == -6) return a;\n  if(b == -7) return a;\n  if(b\
    \ == -8) return a;\n  if(b == 9) return a;\n  if(b == -9) return a;\n  if(b ==\
    \ -10) return a;\n  if(b == -11) return a;\n  if(b == -12) return a;\n  if(b ==\
    \ -13) return a;\n  if(b == -14) return a;\n  if(b == -15) return a;\n  if(b ==\
    \ -16) return a;\n  if(b == -17) return a;\n  if(b == -18) return a;\n  if(b ==\
    \ -19) return a;\n  if(b == -20) return a;\n  if(b == -21) return a;\n  if(b ==\
    \ -22) return a;\n  if(b == -23) return a;\n  if(b == -24) return a;\n  if(b ==\
    \ -25) return a;\n  if(b == -26) return a;\n  if(b == -27) return a;\n  if(b ==\
    \ -28) return a;\n  if(b == -29) return a;\n  if(b == -30) return a;\n  if(b ==\
    \ -31) return a;\n  if(b == -32) return a;\n  if(b == -33) return a;\n  if(b ==\
    \ -34) return a;\n  if(b == -35) return a;\n  if(b == -36) return a;\n  if(b ==\
    \ -37) return a;\n  if(b == -38) return a;\n  if(b == -39) return a;\n  if(b ==\
    \ -40) return a;\n  if(b == -41) return a;\n  if(b == -42) return a;\n  if(b ==\
    \ -43) return a;\n  if(b == -44) return a;\n  if(b == -45) return a;\n  if(b ==\
    \ -46) return a;\n  if(b == -47) return a;\n  if(b == -48) return a;\n  if(b ==\
    \ -49) return a;\n  if(b == -50) return a;\n  if(b == -51) return a;\n  if(b ==\
    \ -52) return a;\n  if(b == -53) return a;\n  if(b == -54) return a;\n  if(b ==\
    \ -55) return a;\n  if(b == -56) return a;\n  if(b == -57) return \nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7metbqg5.js:78\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  if(b !== 0 && a % b\
    \ === 0) return b;\n  if(a % b === 0) return a;\n  var c = 1;\n  while(c < b){\n\
    \    if(a % c === 0) return c;\n    c++;\n  }\n  return c;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n5\n    at test (/tmp/tmphzq0n5t2.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmphzq0n5t2.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(a === b)\n    return a;\n  if(a < b)\n\
    \    return greatest_common_divisor(b, a % b);\n  else\n    return greatest_common_divisor(a,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9q87eluk.js:7\n  if(a === 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmp9q87eluk.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmp9q87eluk.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp9q87eluk.js:14:12)\n    at greatest_common_divisor (/tmp/tmp9q87eluk.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmp9q87eluk.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp9q87eluk.js:14:12)\n    at greatest_common_divisor (/tmp/tmp9q87eluk.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmp9q87eluk.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp9q87eluk.js:14:12)\n    at greatest_common_divisor (/tmp/tmp9q87eluk.js:14:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a * b) / gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6bdz_1j0.js:7\n  return Math.abs(a * b) / gcd(a, b);\n        \
    \      ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmp6bdz_1j0.js:7:15)\n    at test (/tmp/tmp6bdz_1j0.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp6bdz_1j0.js:21:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpo_k4ebmg.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpo_k4ebmg.js:7:3)\n    at greatest_common_divisor (/tmp/tmpo_k4ebmg.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpo_k4ebmg.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpo_k4ebmg.js:7:14)\n    at greatest_common_divisor (/tmp/tmpo_k4ebmg.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpo_k4ebmg.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpo_k4ebmg.js:7:14)\n    at greatest_common_divisor (/tmp/tmpo_k4ebmg.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmpo_k4ebmg.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmpo_k4ebmg.js:7:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmpkjlzgvkl.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkjlzgvkl.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmpn4kl23w6.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn4kl23w6.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return a / greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0eqgfwvt.js:7\n  return a / greatest_common_divisor(b, a % b);\n\
    \  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmp0eqgfwvt.js:7:3)\n    at greatest_common_divisor (/tmp/tmp0eqgfwvt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmp0eqgfwvt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmp0eqgfwvt.js:7:14)\n    at greatest_common_divisor (/tmp/tmp0eqgfwvt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmp0eqgfwvt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmp0eqgfwvt.js:7:14)\n    at greatest_common_divisor (/tmp/tmp0eqgfwvt.js:7:14)\n\
    \    at greatest_common_divisor (/tmp/tmp0eqgfwvt.js:7:14)\n    at greatest_common_divisor\
    \ (/tmp/tmp0eqgfwvt.js:7:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0)\n    return 0;\n  if(b === 0)\n    return a;\n\
    \  if(a === b)\n    return a;\n  if(a < b)\n    return greatest_common_divisor(b,\
    \ a);\n  else\n    return greatest_common_divisor(a, b);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfprocuby.js:7\n  if(a === 0 || b === 0)\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at greatest_common_divisor (/tmp/tmpfprocuby.js:7:3)\n\
    \    at greatest_common_divisor (/tmp/tmpfprocuby.js:16:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpfprocuby.js:16:12)\n    at greatest_common_divisor (/tmp/tmpfprocuby.js:16:12)\n\
    \    at greatest_common_divisor (/tmp/tmpfprocuby.js:16:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpfprocuby.js:16:12)\n    at greatest_common_divisor (/tmp/tmpfprocuby.js:16:12)\n\
    \    at greatest_common_divisor (/tmp/tmpfprocuby.js:16:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpfprocuby.js:16:12)\n    at greatest_common_divisor (/tmp/tmpfprocuby.js:16:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0) return a;\n  if(b === 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp3lo1p35m.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3lo1p35m.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a%b, a/b);\n  else\n    return greatest_common_divisor(a%b,\
    \ b/a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.469802112191199e-227\n\nshould equal\n\
    \n1\n    at test (/tmp/tmpb3br417n.js:22:10)\n    at Object.<anonymous> (/tmp/tmpb3br417n.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.469802112191199e-227,\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  a = Math.abs(a);\n  b = Math.abs(b);\n  var r = [];\n  while(a && b){\n\
    \    var t = a%b;\n    a = b;\n    b = t;\n  }\n  if(b){\n    r.push(b);\n  }\n\
    \  return r.length?r:0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpyembp9z0.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyembp9z0.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmp9b384qt3.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9b384qt3.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0) return b;\n  if(a === 1) return b;\n  if(a === -1) return\
    \ -b;\n  if(a === -2) return -b;\n  if(a === -3) return -b;\n  if(a === -4) return\
    \ -b;\n  if(a === -5) return -b;\n  if(a === -6) return -b;\n  if(a === -7) return\
    \ -b;\n  if(a === -8) return -b;\n  if(a === -9) return -b;\n  if(a === -10) return\
    \ -b;\n  if(a === -11) return -b;\n  if(a === -12) return -b;\n  if(a === -13)\
    \ return -b;\n  if(a === -14) return -b;\n  if(a === -15) return -b;\n  if(a ===\
    \ -16) return -b;\n  if(a === -17) return -b;\n  if(a === -18) return -b;\n  if(a\
    \ === -19) return -b;\n  if(a === -20) return -b;\n  if(a === -21) return -b;\n\
    \  if(a === -22) return -b;\n  if(a === -23) return -b;\n  if(a === -24) return\
    \ -b;\n  if(a === -25) return -b;\n  if(a === -26) return -b;\n  if(a === -27)\
    \ return -b;\n  if(a === -28) return -b;\n  if(a === -29) return -b;\n  if(a ===\
    \ -30) return -b;\n  if(a === -31) return -b;\n  if(a === -32) return -b;\n  if(a\
    \ === -33) return -b;\n  if(a === -34) return -b;\n  if(a === -35) return -b;\n\
    \  if(a === -36) return -b;\n  if(a === -37) return -b;\n  if(a === -38) return\
    \ -b;\n  if(a === -39) return -b;\n  if(a === -40) return -b;\n  if(a === -41)\
    \ return -b;\n  if(a === -42) return -b;\n  if(a === -43) return -b;\n  if(a ===\
    \ -44) return -b;\n  if(a === -45) return -b;\n  if(a === -46) return -b;\n  if(a\
    \ === -47) return -b;\n  if(a === -48) return -b;\n  if(a === -49) return -b;\n\
    \  if(a === -50) return -b;\n  if(a === -51) return -b;\n  if(a === -52) return\
    \ -b\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_3xbjwam.js:72\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(b / 2, a);\n  else\n    return greatest_common_divisor(b\
    \ / 2, a) % a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmplk47uo16.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplk47uo16.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0)\n    return 0;\n  if(a < b)\n    return greatest_common_divisor(b,\
    \ a % b);\n  else\n    return greatest_common_divisor(a, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpuq4gihs_.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuq4gihs_.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  if(b == 1) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpemudrmtx.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpemudrmtx.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0)\n    return b;\n  if(b === 0)\n    return a;\n  if(a ===\
    \ b)\n    return a;\n  if(a < b)\n    return greatest_common_divisor(b, a);\n\
    \  else\n    return greatest_common_divisor(a, Math.floor(b/a));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n1\n    at test (/tmp/tmp3vyb0pd9.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3vyb0pd9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n    return b === 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return Math.abs(a/greatest_common_divisor(b,b)) % b;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpld9uh_7e.js:7\n  return Math.abs(a/greatest_common_divisor(b,b))\
    \ % b;\n  ^\n\nRangeError: Maximum call stack size exceeded\n    at greatest_common_divisor\
    \ (/tmp/tmpld9uh_7e.js:7:3)\n    at greatest_common_divisor (/tmp/tmpld9uh_7e.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpld9uh_7e.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpld9uh_7e.js:7:21)\n    at greatest_common_divisor (/tmp/tmpld9uh_7e.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpld9uh_7e.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpld9uh_7e.js:7:21)\n    at greatest_common_divisor (/tmp/tmpld9uh_7e.js:7:21)\n\
    \    at greatest_common_divisor (/tmp/tmpld9uh_7e.js:7:21)\n    at greatest_common_divisor\
    \ (/tmp/tmpld9uh_7e.js:7:21)\n"
  exit_code: 1
  status: Exception
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return !a ? b : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n1\n    at test (/tmp/tmp_r1oml2x.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_r1oml2x.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0)\n    return a;\n  if(b == 1)\n    return a;\n  if(b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a * a, b / 2);\n  else\n    return greatest_common_divisor(a\
    \ * b, a / 2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa5abns9n.js:7\n  if(b == 0)\n  ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at greatest_common_divisor (/tmp/tmpa5abns9n.js:7:3)\n  \
    \  at greatest_common_divisor (/tmp/tmpa5abns9n.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpa5abns9n.js:14:12)\n    at greatest_common_divisor (/tmp/tmpa5abns9n.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpa5abns9n.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpa5abns9n.js:14:12)\n    at greatest_common_divisor (/tmp/tmpa5abns9n.js:14:12)\n\
    \    at greatest_common_divisor (/tmp/tmpa5abns9n.js:14:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpa5abns9n.js:14:12)\n    at greatest_common_divisor (/tmp/tmpa5abns9n.js:14:12)\n"
  exit_code: 1
  status: Exception

name: HumanEval_25_factorize
language: js
prompt: "//Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n// Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n// Input number should be equal\
  \ to the product of all factors\n// >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n\
  // [5, 5]\n// >>> factorize(70)\n// [2, 5, 7]\nfunction factorize(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = factorize;\n  assert.deepEqual(candidate(2),[2]);\n  assert.deepEqual(candidate(4),[2,\
  \ 2]);\n  assert.deepEqual(candidate(8),[2, 2, 2]);\n  assert.deepEqual(candidate(57),[3,\
  \ 19]);\n  assert.deepEqual(candidate(3249),[3, 3, 19, 19]);\n  assert.deepEqual(candidate(185193),[3,\
  \ 3, 3, 19, 19, 19]);\n  assert.deepEqual(candidate(20577),[3, 19, 19, 19]);\n \
  \ assert.deepEqual(candidate(18),[2, 3, 3]);\n}\n\ntest();"
completions: ["    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            while(n %\
    \ i == 0){\n                factors.push(i);\n                n /= i;\n      \
    \      }\n        }\n    }\n    return factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            while(n % i == 0){\n                n /=\
    \ i;\n                factors.push(i);\n            }\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\tvar primeFactors\
    \ = [];\n\tvar primeFactorsIndex = [];\n\tvar i;\n\tvar j;\n\tvar k;\n\tvar factor;\n\
    \tvar factorCount;\n\tvar primeFactor;\n\tvar primeFactorCount;\n\tvar primeFactorIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar factorizationIndex;\n\tvar factorizationIndex;\n\
    \tvar factorizationIndex;\n\tvar ", "    var factors = [];\n    for(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                n /= i;\n                factors.push(i);\n\
    \            }\n        }\n    }\n    return factors;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            n = n/i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "\tvar factors = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\t\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                n /= i;\n                factors.push(i);\n\
    \            }\n        }\n    }\n    return factors;\n}\n", "\tlet factors =\
    \ [];\n\tlet factor = 1;\n\tlet factorCount = 0;\n\tlet factorsArray = [];\n\t\
    let factorsArrayIndex = 0;\n\tlet factorsArrayLength = 0;\n\tlet factorsArrayMaxLength\
    \ = 0;\n\tlet factorsArrayMaxLengthIndex = 0;\n\tlet factorsArrayMaxLengthValue\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorsArrayMaxLengthValueIndex = 0;\n\tlet factorsArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factors", "\tlet factors = [];\n\tlet factor = 1;\n\tlet factorization\
    \ = [];\n\tlet factorizationIndex = 0;\n\tlet factorizationIndexMax = factorizationIndex\
    \ + factors.length;\n\tlet factorizationMax = factorizationIndexMax - 1;\n\tlet\
    \ factorizationMaxIndex = factorizationMax - 1;\n\tlet factorizationMaxIndexMax\
    \ = factorizationMaxIndex - 1;\n\tlet factorizationMaxIndexMaxMinus1 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus2 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus3\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus4 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus5 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus6\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus7 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus8 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus9\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus10 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus11 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus12\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus13 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus14 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus15\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus16 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus17 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus18\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus19 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus20 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus21\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus22 = factorizationMaxIndexMax-1;\n\
    \tlet factorizationMaxIndexMaxMinus23 = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus24\
    \ = factorizationMaxIndexMax-1;\n\tlet factorizationMaxIndexMaxMinus25 = factorizationMaxIndex",
  "\tlet factors = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet factorizationIndex\
    \ = 0;\n\tlet factorizationIndexMax = factorizationIndex + Math.ceil(Math.log(n)\
    \ / Math.log(factor));\n\tfor(let i = factorizationIndex; i < factorizationIndexMax;\
    \ i++){\n\t\tfactorization[i] = 0;\n\t}\n\tfor(let i = 2; i <= Math.sqrt(n); i++){\n\
    \t\twhile(n % i == 0){\n\t\t\tfactorization[factorizationIndex] = i;\n\t\t\tfactors.push(factor);\n\
    \t\t\tfactor *= i;\n\t\t\tn /= i;\n\t\t\tfactorizationIndex++;\n\t\t\tfactorizationIndexMax\
    \ = Math.min(factorizationIndex + Math.ceil(Math.log(n) / Math.log(factor)), factorizationIndexMax);\n\
    \t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i\
    \ <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn =\
    \ n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i\
    \ = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\
    \t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n  \
    \  for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n        \
    \    factors.push(i);\n            n = n/i;\n        }\n    }\n    return factors;\n\
    }\n", "\tlet factors = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\
    \tlet primeFactorsCount = 0;\n\tlet isPrime = true;\n\tlet isPrimeCount = 0;\n\
    \tlet isPrimeFactorization = true;\n\tlet isPrimeFactorizationCount = 0;\n\tlet\
    \ isPrimePrime = true;\n\tlet isPrimePrimeCount = 0;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrime\
    \ = true;\n\tlet isPrimePrimePrimeCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationCount = 0;\n\tlet isPrimePrimePrimeFactor",
  "\tlet factors = [];\n\tlet factorization = factorizeNumber(n);\n\tfor(let i = 0;\
    \ i < factorization.length; i++){\n\t\tlet factor = factorization[i];\n\t\tlet\
    \ count = 0;\n\t\tfor(let j = 0; j < factors.length; j++){\n\t\t\tif(factor ==\
    \ factors[j]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tfactors.push(factor);\n\t\
    \tfactors.push(count);\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factor = 1;\n\tlet factorization = [];\n\tlet factorizationIndex = 0;\n\t\
    let factorizationLength = 0;\n\tlet factorizationMaxLength = 0;\n\tlet factorizationMaxLengthIndex\
    \ = 0;\n\tlet factorizationMaxLengthValue = 0;\n\tlet factorizationMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex2 = 0;\n\tlet factorizationMaxLengthValueIndex3\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex4 = 0;\n\tlet factorizationMaxLengthValueIndex5\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex6 = 0;\n\tlet factorizationMaxLengthValueIndex7\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex8 = 0;\n\tlet factorizationMaxLengthValueIndex9\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex10 = 0;\n\tlet factorizationMaxLengthValueIndex11\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex12 = 0;\n\tlet factorizationMaxLengthValueIndex13\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex14 = 0;\n\tlet factorizationMaxLengthValueIndex15\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex16 = 0;\n\tlet factorizationMaxLengthValueIndex17\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex18 = 0;\n\tlet factorizationMaxLengthValueIndex19\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex20 = 0;\n\tlet factorizationMaxLengthValueIndex21\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex22 = 0;\n\tlet factorizationMaxLengthValueIndex23\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex24 = 0;\n\tlet factorizationMaxLengthValueIndex25\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex26 = 0;\n\tlet factorizationMaxLengthValueIndex27\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex28 = 0;\n\tlet factorizationMaxLengthValueIndex29\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex30 = 0;\n\tlet factorizationMaxLengthValueIndex31\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex32 = 0;\n\tlet factorizationMaxLengthValueIndex33\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex34 = 0;\n\tlet factorizationMaxLengthValueIndex35\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex36 = 0;\n\tlet factorizationMaxLengthValueIndex37\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex38 = 0;\n\tlet factorizationMaxLengthValueIndex39\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex40 = 0;\n\tlet factorizationMaxLengthValueIndex41\
    \ = 0;\n\tlet factorizationMaxLengthValueIndex42 = 0;", "\tlet factors = [];\n\
    \tlet factor = 1;\n\tlet i = 2;\n\twhile(factor*i <= n){\n\t\twhile(n % factor\
    \ == 0){\n\t\t\tfactors.push(factor);\n\t\t\tn /= factor;\n\t\t}\n\t\tfactor++;\n\
    \t\ti++;\n\t}\n\tif(n > 1){\n\t\tfactors.push(factor);\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n  \
    \      if(n % i == 0){\n            factors.push(i);\n            while(n % i\
    \ == 0){\n                n /= i;\n                factors.push(i);\n        \
    \    }\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            n = n / i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factorization = factorizationOf(n);\n\tfor(let i = 0; i < factorization.length;\
    \ i++){\n\t\tlet factor = factorization[i];\n\t\tlet count = 0;\n\t\tfor(let j\
    \ = 0; j < factors.length; j++){\n\t\t\tif(factor == factors[j]){\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t\tfactors.push(count);\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n / i;\n        }\n\
    \    }\n    return factors;\n}\n", "    var factors = [];\n    for(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                factors.push(i);\n          \
    \      n /= i;\n            }\n        }\n    }\n    return factors;\n}\n", "\t\
    var factors = [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\twhile(n % i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\t\
    factors.push(1);\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i =\
    \ 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\
    \tn /= i;\n\t\t}\n\t}\n\tfactors.push(n);\n\treturn factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    let factors = [];\n\tlet factorization = [];\n\tlet primeFactors = [];\n\tlet\
    \ primeFactorsCount = 0;\n\tlet isPrime = true;\n\tlet isPrimeFactorization =\
    \ true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization = true;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorization", "\tvar factors = [];\n\tfor(var i\
    \ = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\
    \t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar\
    \ factor = 1;\n\twhile(n > 1){\n\t\twhile(n % factor == 0){\n\t\t\tfactors.push(factor);\n\
    \t\t\tn /= factor;\n\t\t}\n\t\tfactor++;\n\t}\n\treturn factors;\n}\n", "    var\
    \ factors = [];\n    var factor = 1;\n    while(factor * factor <= n){\n     \
    \   while(n % factor === 0){\n            factors.push(factor);\n            n\
    \ /= factor;\n        }\n        factor++;\n    }\n    return factors;\n}\n",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n/i;\n        }\n\
    \    }\n    return factors;\n}\n", "    var factors = [];\n    for(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                factors.push(i);\n          \
    \      n /= i;\n            }\n        }\n    }\n    return factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tif(n > 1){\n\t\tfactors.push(n);\n\
    \t}\n\treturn factors;\n}\n", "  var factors = [];\n  for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      factors.push(i);\n      n /= i;\n    }\n \
    \ }\n  if(n > 1){\n    factors.push(n);\n  }\n  return factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tvar factor = 1;\n\twhile(n>1){\n\t\tif(n%factor == 0){\n\t\
    \t\tfactors.push(factor);\n\t\t\tn = n/factor;\n\t\t}\n\t\telse{\n\t\t\tfactor++;\n\
    \t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i\
    \ <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn =\
    \ n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "  var factors = [];\n  for(var i\
    \ = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \      n = n/i;\n    }\n  }\n  factors.push(n);\n  return factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tvar factor = 1;\n\twhile(factor*factor <= n){\n\t\tif(n %\
    \ factor == 0){\n\t\t\tfactors.push(factor);\n\t\t\tn /= factor;\n\t\t}\n\t\t\
    factor++;\n\t}\n\tif(n > 1){\n\t\tfactors.push(1);\n\t}\n\treturn factors;\n}\n",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\twhile(n % i == 0){\n\t\t\tfactors.push(factor);\n\t\t\tn /= i;\n\t\t\tfactor\
    \ = 1;\n\t\t}\n\t\tfactor++;\n\t}\n\tfactors.push(factor);\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n  \
    \      if(n % i == 0){\n            factors.push(i);\n            n = n/i;\n \
    \       }\n    }\n    return factors;\n}\n", "    var factors = [];\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                n /= i;\n                factors.push(i);\n\
    \            }\n        }\n    }\n    return factors;\n}\n", "\tvar factors =\
    \ [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            while(n % i == 0){\n                n /=\
    \ i;\n                factors.push(i);\n            }\n        }\n    }\n    return\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ /= i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\t\
    \n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\t\n\treturn factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \      n = n / i;\n    }\n  }\n  if(n > 1){\n    factors.push(n);\n  }\n  return\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tif(n >\
    \ 1){\n\t\tfactors.push(n);\n\t}\n\treturn factors;\n}\n", "    var factors =\
    \ [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            n = n/i;\n        }\n    }\n    return\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "\tlet factors = [];\n\tlet factor = 1;\n\tlet primeFactor =\
    \ 1;\n\tlet isPrime = true;\n\tlet isFactor = false;\n\tlet isPrimeFactor = false;\n\
    \tlet isPrimePrimeFactor = false;\n\tlet isPrimePrimePrimeFactor = false;\n\t\
    let isPrimePrimePrimePrimeFactor = false;\n\tlet isPrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimeFactor = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = false;\n\t\
    let isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor =\
    \ false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = false;", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n/i;\n        }\n    }\n    return factors;\n}\n", "\tlet factors = [];\n\t\
    let factorization = [];\n\tlet primes = [];\n\tlet primeFactors = [];\n\tlet factorization\
    \ = [];\n\tlet primeFactors = [];\n\tlet primeFactorsArray = [];\n\tlet primeFactorsArray2\
    \ = [];\n\tlet primeFactorsArray3 = [];\n\tlet primeFactorsArray4 = [];\n\tlet\
    \ primeFactorsArray5 = [];\n\tlet primeFactorsArray6 = [];\n\tlet primeFactorsArray7\
    \ = [];\n\tlet primeFactorsArray8 = [];\n\tlet primeFactorsArray9 = [];\n\tlet\
    \ primeFactorsArray10 = [];\n\tlet primeFactorsArray11 = [];\n\tlet primeFactorsArray12\
    \ = [];\n\tlet primeFactorsArray13 = [];\n\tlet primeFactorsArray14 = [];\n\t\
    let primeFactorsArray15 = [];\n\tlet primeFactorsArray16 = [];\n\tlet primeFactorsArray17\
    \ = [];\n\tlet primeFactorsArray18 = [];\n\tlet primeFactorsArray19 = [];\n\t\
    let primeFactorsArray20 = [];\n\tlet primeFactorsArray21 = [];\n\tlet primeFactorsArray22\
    \ = [];\n\tlet primeFactorsArray23 = [];\n\tlet primeFactorsArray24 = [];\n\t\
    let primeFactorsArray25 = [];\n\tlet primeFactorsArray26 = [];\n\tlet primeFactorsArray27\
    \ = [];\n\tlet primeFactorsArray28 = [];\n\tlet primeFactorsArray29 = [];\n\t\
    let primeFactorsArray30 = [];\n\tlet primeFactorsArray31 = [];\n\tlet primeFactorsArray32\
    \ = [];\n\tlet primeFactorsArray33 = [];\n\tlet primeFactorsArray34 = [];\n\t\
    let primeFactorsArray35 = [];\n\tlet primeFactorsArray36 = [];\n\tlet primeFactorsArray37\
    \ = [];\n\tlet primeFactorsArray38 = [];\n\tlet primeFactorsArray39 = [];\n\t\
    let primeFactorsArray40 = [];\n\tlet primeFactorsArray41 = [];\n\tlet primeFactorsArray42\
    \ = [];\n\tlet primeFactorsArray43 = [];\n\tlet primeFactorsArray44 = [];\n\t\
    let primeFactorsArray45 = [];\n\tlet primeFactorsArray46 = [];\n\tlet primeFactorsArray47\
    \ = [];\n\tlet primeFactorsArray48 = [];\n\tlet primeFactorsArray49 = [];\n\t\
    let primeFactorsArray50 = [];\n\tlet primeFactorsArray51 = [];\n\tlet primeFactorsArray52\
    \ = [];\n\tlet prime", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\t\
    \n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tfactors.push(Math.floor(n/i));\n\t\t\tfactorization.push(i);\n\t\t\tfactorization.push(Math.floor(n/i));\n\
    \t\t}\n\t}\n\t\n\tfactors.push(1);\n\tfactors.push(Math.floor(n/1));\n\tfactorization.push(1);\n\
    \tfactorization.push(Math.floor(n/1));\n\t\n\treturn factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var\
    \ factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i\
    \ == 0){\n            factors.push(i);\n            n = n / i;\n        }\n  \
    \  }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "    var factors = [];\n    var factorization = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            factorization.push(i);\n            while(factorization.length\
    \ < factors.length){\n                factorization.push(factorization[factorization.length-1]*factors[factors.length-1]);\n\
    \            }\n        }\n    }\n    return factors;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            while(n % i == 0){\n              \
    \  n /= i;\n                factors.push(i);\n            }\n        }\n    }\n\
    \    return factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            while(n\
    \ % i == 0){\n                n /= i;\n                factors.push(i);\n    \
    \        }\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\t\n\tif(n > 1){\n\t\tfactors.push(n);\n\t}\n\t\n\t\
    return factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\tif(n > 1){\n\t\tfactors.push(n);\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\t\
    if(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\t\n\treturn\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            factors.push(n\
    \ / i);\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n\
    \    var factor = 1;\n    while(n > 1){\n        factors.push(factor);\n     \
    \   factor *= n;\n        n /= factor;\n    }\n    return factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            while(n % i == 0){\n \
    \               n /= i;\n            }\n        }\n    }\n    return factors;\n\
    }\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n  \
    \      while(n % i == 0){\n            factors.push(i);\n            n /= i;\n\
    \        }\n    }\n    if(n > 1){\n        factors.push(n);\n    }\n    return\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            n\
    \ = n / i;\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factorization = [];\n\tlet factorizationIndex = 0;\n\tlet primeFactors = [];\n\
    \tlet primeFactorsIndex = 0;\n\tlet isPrime = true;\n\tlet isPrimeFactorization\
    \ = true;\n\tlet isPrimeFactorizationIndex = 0;\n\tlet isPrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimeFactorizationIndex = 0;\n\tlet isPrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimeFactorizationIndex = 0;\n\tlet isPrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimeFactorizationIndex = 0;\n\tlet isPrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimeFactorizationIndex = 0;\n\tlet isPrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimeFactorization = true;\n\t\
    let isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true;\n\tlet isPrimePrimePrimePrimePrimePrimePrimePrimePrime", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var\
    \ factors = [];\n    var factorization = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            factorization.push(i);\n\
    \            while(factorization.length < factors.length){\n                factors.push(factorization[factorization.length]);\n\
    \                factorization.push(factorization[factorization.length]);\n  \
    \          }\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            n /= i;\n        }\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\t\
    if(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\t\n\tif(n >\
    \ 1){\n\t\tfactors.push(n);\n\t}\n\t\n\treturn factors;\n}\n", "\tlet factors\
    \ = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet factorizationIndex\
    \ = 0;\n\tlet factorizationArray = [];\n\tlet factorizationArrayIndex = 0;\n\t\
    let factorizationArrayLength = 0;\n\tlet factorizationArrayMaxLength = 0;\n\t\
    let factorizationArrayMaxLengthIndex = 0;\n\tlet factorizationArrayMaxLengthValue\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValueIndex\
    \ = 0;\n\tlet factorizationArrayMaxLengthValueIndex = 0;\n\tlet factorizationArrayMaxLengthValue",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \ var factors = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n % i ==\
    \ 0){\n      factors.push(i);\n      n = n/i;\n    }\n  }\n  return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\t\
    if(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\t\n\tif(n >\
    \ 1){\n\t\tfactors.push(n);\n\t}\n\t\n\treturn factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    let factors = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization = [];\n\tlet primeFactor\
    \ = 1;\n\tlet ", "    var factors = [];\n    var factor = 1;\n    for(var i =\
    \ 2; i <= Math.sqrt(n); i++){\n        while(n % i == 0){\n            factors.push(factor);\n\
    \            n /= i;\n            factor = 1;\n        }\n        factor++;\n\
    \    }\n    factors.push(factor);\n    return factors;\n}\n", "    var factors\
    \ = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            n = n / i;\n        }\n    }\n    return\
    \ factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            factors.push(n\
    \ / i);\n        }\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n \
    \   for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n       \
    \     factors.push(i);\n            n = n / i;\n        }\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tlet factors = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet\
    \ primes = [];\n\tlet primeFactors = [];\n\tlet primeFactor = 1;\n\tlet primeFactorization\
    \ = [];\n\tlet primeFactorizationIndex = 0;\n\tlet primeFactorizationIndexMax\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax2\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax3\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax4\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax5\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax6\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax7\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax8\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax9\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax10\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax11\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax12\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax13\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax14\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax15\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax16\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax17\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax18\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax19\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax20\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax21\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax22\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax23\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax24\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax25\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax26\
    \ = primeFactorizationIndex + primeFactor.length;\n\tlet primeFactorizationIndexMax27",
  "    var factors = [];\n    var i = 2;\n    while(factors.length < n){\n       \
    \ while(n % i == 0){\n            factors.push(i);\n            n /= i;\n    \
    \    }\n        i++;\n    }\n    return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \      n = n / i;\n    }\n  }\n  return factors;\n}\n", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n \
    \   for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n       \
    \     factors.push(i);\n            while(n % i == 0){\n                factors.push(i);\n\
    \                n /= i;\n            }\n        }\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tlet factors = [];\n\tlet factorization = factor(n);\n\tlet primeFactors\
    \ = factorization.primeFactors;\n\tlet factorCount = factorization.factorCount;\n\
    \tlet primeFactorsCount = factorization.primeFactorsCount;\n\tlet factorsCount\
    \ = factorCount + primeFactorsCount;\n\tlet factorsArray = [];\n\tlet factorsArrayCount\
    \ = 0;\n\tlet primeFactorsArray = [];\n\tlet primeFactorsArrayCount = 0;\n\tlet\
    \ factorsArrayCount2 = 0;\n\tlet primeFactorsArrayCount2 = 0;\n\tlet factorsArrayCount3\
    \ = 0;\n\tlet primeFactorsArrayCount3 = 0;\n\tlet factorsArrayCount4 = 0;\n\t\
    let primeFactorsArrayCount4 = 0;\n\tlet factorsArrayCount5 = 0;\n\tlet primeFactorsArrayCount5\
    \ = 0;\n\tlet factorsArrayCount6 = 0;\n\tlet primeFactorsArrayCount6 = 0;\n\t\
    let factorsArrayCount7 = 0;\n\tlet primeFactorsArrayCount7 = 0;\n\tlet factorsArrayCount8\
    \ = 0;\n\tlet primeFactorsArrayCount8 = 0;\n\tlet factorsArrayCount9 = 0;\n\t\
    let primeFactorsArrayCount9 = 0;\n\tlet factorsArrayCount10 = 0;\n\tlet primeFactorsArrayCount10\
    \ = 0;\n\tlet factorsArrayCount11 = 0;\n\tlet primeFactorsArrayCount11 = 0;\n\t\
    let factorsArrayCount12 = 0;\n\tlet primeFactorsArrayCount12 = 0;\n\tlet factorsArrayCount13\
    \ = 0;\n\tlet primeFactorsArrayCount13 = 0;\n\tlet factorsArrayCount14 = 0;\n\t\
    let primeFactorsArrayCount14 = 0;\n\tlet factorsArrayCount15 = 0;\n\tlet primeFactorsArrayCount15\
    \ = 0;\n\tlet factorsArrayCount16 = 0;\n\tlet primeFactorsArrayCount16 = 0;\n\t\
    let factorsArrayCount17 = 0;\n\tlet primeFactorsArrayCount17 = 0;\n\tlet factorsArrayCount18\
    \ = 0;\n\tlet primeFactorsArrayCount18 = 0;\n\tlet factorsArrayCount19 = 0;\n\t\
    let primeFactorsArrayCount19 = 0;\n\tlet factorsArrayCount20 = 0;\n\tlet primeFactorsArrayCount20\
    \ = 0;\n\tlet factorsArrayCount21 = 0;\n\tlet primeFactorsArrayCount21 = 0;\n\t\
    let factorsArrayCount22 = 0;\n\tlet primeFactorsArrayCount22 = 0;\n\tlet factorsArrayCount23\
    \ = 0;\n\tlet primeFactorsArrayCount23 = 0;\n\tlet factorsArrayCount24", "   \
    \ var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n / i;\n        }\n\
    \    }\n    return factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\
    \t\t}\n\t}\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            n = n / i;\n        }\n    }\n    return factors;\n}\n", "  var factors\
    \ = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n    \
    \  factors.push(i);\n      while(n % i == 0){\n        n /= i;\n        factors.push(i);\n\
    \      }\n    }\n  }\n  return factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tlet factors = [];\n\t\
    let factor = 1;\n\tlet factorCount = 0;\n\tlet primeFactors = [];\n\tlet primeFactor\
    \ = 1;\n\tlet primeFactorCount = 0;\n\tlet isPrime = true;\n\tlet isPrimeFactor\
    \ = true;\n\tlet isPrimePrimeFactor = true;\n\tlet isPrimePrimeFactorCount = true;\n\
    \tlet isPrimePrimeFactorCountPrime = true;\n\tlet isPrimePrimeFactorCountPrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrime = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrime = true;\n\t\
    let isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrime = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true;\n\tlet isPrimePrimeFactorCountPrimePrimePri", "\tvar factors = [];\n\
    \tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    var i = 1;\n\twhile(n > 1){\n\t\twhile(n % i == 0){\n\t\t\tfactors.push(i);\n\t\
    \t\tn /= i;\n\t\t}\n\t\ti++;\n\t}\n\tif(n > 1){\n\t\tfactors.push(n);\n\t}\n\t\
    return factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\
    \treturn factors;\n}\n", "\tvar factors = [];\n\tvar i = 2;\n\twhile(i <= n){\n\
    \t\tif(n % i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n / i;\n\t\t\ti = 2;\n\t\
    \t}\n\t\telse{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n/i;\n        }\n\
    \    }\n    return factors;\n}\n", "    var factors = [];\n    for(var i = 2;\
    \ i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                factors.push(i);\n          \
    \      n /= i;\n            }\n        }\n    }\n    return factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", " \
    \   var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n\
    \ % i == 0){\n            factors.push(i);\n            n = n / i;\n        }\n\
    \    }\n    return factors;\n}\n", "\tlet factors = [];\n\tlet factor = 1;\n\t\
    let factorization = [];\n\tlet factorizationIndex = 0;\n\tlet factorizationIndexMax\
    \ = factorizationIndex + factors.length;\n\tlet factorizationMax = factorizationIndexMax\
    \ + factors.length;\n\tlet factorizationMaxIndex = 0;\n\tlet factorizationMaxIndexMax\
    \ = factorizationMaxIndex + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndexMax + factors.length;\n\tlet factorizationMaxIndexMax =\
    \ factorizationMaxIndex", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\
    \treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\
    \treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t\
    }\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            while(n\
    \ % i == 0){\n                factors.push(i);\n                n /= i;\n    \
    \        }\n        }\n    }\n    return factors;\n}\n", "    var factors = [];\n\
    \    for(var i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      factors.push(i);\n            while(n % i == 0){\n                factors.push(i);\n\
    \                n /= i;\n            }\n        }\n    }\n    return factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i\
    \ == 0){\n\t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n\
    }\n", "  var factors = [];\n  for(var i = 2; i <= Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      factors.push(i);\n      while(n % i == 0){\n        n /= i;\n\
    \        factors.push(i);\n      }\n    }\n  }\n  return factors;\n}\n", "\tlet\
    \ factors = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet factorizationIndex\
    \ = 0;\n\tlet factorizationArray = [];\n\tlet factorizationArrayIndex = 0;\n\t\
    let factorizationArrayIndex2 = 0;\n\tlet factorizationArrayIndex3 = 0;\n\tlet\
    \ factorizationArrayIndex4 = 0;\n\tlet factorizationArrayIndex5 = 0;\n\tlet factorizationArrayIndex6\
    \ = 0;\n\tlet factorizationArrayIndex7 = 0;\n\tlet factorizationArrayIndex8 =\
    \ 0;\n\tlet factorizationArrayIndex9 = 0;\n\tlet factorizationArrayIndex10 = 0;\n\
    \tlet factorizationArrayIndex11 = 0;\n\tlet factorizationArrayIndex12 = 0;\n\t\
    let factorizationArrayIndex13 = 0;\n\tlet factorizationArrayIndex14 = 0;\n\tlet\
    \ factorizationArrayIndex15 = 0;\n\tlet factorizationArrayIndex16 = 0;\n\tlet\
    \ factorizationArrayIndex17 = 0;\n\tlet factorizationArrayIndex18 = 0;\n\tlet\
    \ factorizationArrayIndex19 = 0;\n\tlet factorizationArrayIndex20 = 0;\n\tlet\
    \ factorizationArrayIndex21 = 0;\n\tlet factorizationArrayIndex22 = 0;\n\tlet\
    \ factorizationArrayIndex23 = 0;\n\tlet factorizationArrayIndex24 = 0;\n\tlet\
    \ factorizationArrayIndex25 = 0;\n\tlet factorizationArrayIndex26 = 0;\n\tlet\
    \ factorizationArrayIndex27 = 0;\n\tlet factorizationArrayIndex28 = 0;\n\tlet\
    \ factorizationArrayIndex29 = 0;\n\tlet factorizationArrayIndex30 = 0;\n\tlet\
    \ factorizationArrayIndex31 = 0;\n\tlet factorizationArrayIndex32 = 0;\n\tlet\
    \ factorizationArrayIndex33 = 0;\n\tlet factorizationArrayIndex34 = 0;\n\tlet\
    \ factorizationArrayIndex35 = 0;\n\tlet factorizationArrayIndex36 = 0;\n\tlet\
    \ factorizationArrayIndex37 = 0;\n\tlet factorizationArrayIndex38 = 0;\n\tlet\
    \ factorizationArrayIndex39 = 0;\n\tlet factorizationArrayIndex40 = 0;\n\tlet\
    \ factorizationArrayIndex41 = 0;\n\tlet factorizationArrayIndex42 = 0;\n\tlet\
    \ factorizationArrayIndex43 = 0;\n\tlet factorizationArrayIndex44 = 0;\n\tlet\
    \ factorizationArrayIndex45 = 0;\n\tlet factorizationArrayIndex46 = 0;\n\tlet\
    \ factorizationArrayIndex47 = 0;\n\tlet factorizationArrayIndex48 = 0;\n\tlet\
    \ factorizationArrayIndex49 = 0;\n\tlet factorizationArrayIndex50 = 0;\n\tlet\
    \ factorizationArrayIndex51 = 0;\n\tlet factorizationArrayIndex52 = 0;\n\tlet\
    \ factorizationArrayIndex53 = 0;\n\tlet factorizationArrayIndex54 = 0;\n\t", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    let factors = [];\n\tlet factor = 1;\n\tlet factorization = [];\n\tlet factorizationCounter\
    \ = 0;\n\tlet factorizationCounterMax = n;\n\tlet factorizationCounterMin = 1;\n\
    \tlet factorizationCounterMaxMin = n;\n\tlet factorizationCounterMinMax = n;\n\
    \tlet factorizationCounterMaxMinMax = n;\n\tlet factorizationCounterMinMaxMin\
    \ = n;\n\tlet factorizationCounterMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMin = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax\
    \ = n;\n\tlet factorizationCounterMinMaxMinMaxMinMax = n;\n\t", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tif(n > 1){\n\t\tfactors.push(n);\n\
    \t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar factorization = [];\n\
    \t\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tfactors.push(i);\n\t}\n\t\n\
    \tfor(var i = 0; i <= factors.length; i++){\n\t\tfor(var j = 0; j < factors.length;\
    \ j++){\n\t\t\tif(factors[i] * factors[j] == n){\n\t\t\t\tfactorization.push(factors[i]);\n\
    \t\t\t\tfactorization.push(factors[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\
    \t\n\treturn factorization;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\
    \t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var i = 2; i\
    \ <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn =\
    \ n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tvar i = 2;\n\
    \twhile(i <= n){\n\t\tif(n % i == 0){\n\t\t\tfactors.push(i);\n\t\t\twhile(n %\
    \ i == 0){\n\t\t\t\tn /= i;\n\t\t\t\tfactors.push(i);\n\t\t\t}\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn factors;\n}\n", "    var factors = [];\n    for(var i = 2; i <=\
    \ Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \            while(n % i == 0){\n                n /= i;\n                factors.push(i);\n\
    \            }\n        }\n    }\n    return factors;\n}\n", "\tvar factors =\
    \ [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\tfor(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar factors = [];\n\t\
    for(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\tfactors.push(i);\n\
    \t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \      n = n/i;\n    }\n  }\n  return factors;\n}\n", "\tlet factors = [];\n\t\
    let factor = 1;\n\tlet factorization = [];\n\tlet factorizationIndex = 0;\n\t\
    let factorizationArray = [];\n\tlet factorizationArrayIndex = 0;\n\tlet factorizationArrayMax\
    \ = 0;\n\tlet factorizationArrayMaxIndex = 0;\n\tlet factorizationArrayMaxValue\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex = 0;\n\tlet factorizationArrayMaxValueIndex2\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex2 = 0;\n\tlet factorizationArrayMaxValueIndex3\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex3 = 0;\n\tlet factorizationArrayMaxValueIndex4\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex4 = 0;\n\tlet factorizationArrayMaxValueIndex5\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex5 = 0;\n\tlet factorizationArrayMaxValueIndex6\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex6 = 0;\n\tlet factorizationArrayMaxValueIndex7\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex7 = 0;\n\tlet factorizationArrayMaxValueIndex8\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex8 = 0;\n\tlet factorizationArrayMaxValueIndex9\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex9 = 0;\n\tlet factorizationArrayMaxValueIndex10\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex10 = 0;\n\tlet factorizationArrayMaxValueIndex11\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex11 = 0;\n\tlet factorizationArrayMaxValueIndex12\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex12 = 0;\n\tlet factorizationArrayMaxValueIndex13\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex13 = 0;\n\tlet factorizationArrayMaxValueIndex14\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex14 = 0;\n\tlet factorizationArrayMaxValueIndex15\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex15 = 0;\n\tlet factorizationArrayMaxValueIndex16\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex16 = 0;\n\tlet factorizationArrayMaxValueIndex17\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex17 = 0;\n\tlet factorizationArrayMaxValueIndex18\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex18 = 0;\n\tlet factorizationArrayMaxValueIndex19\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex19 = 0;\n\tlet factorizationArrayMaxValueIndex20\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex20 = 0;\n\tlet factorizationArrayMaxValueIndex21\
    \ = 0;\n\tlet factorizationArrayMaxValueIndex21 = 0;\n\tlet factorizationArrayMax",
  "\tvar factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tvar factor = 1;\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\
    \t\twhile(n % i == 0){\n\t\t\tfactors.push(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\t\
    if(n > 1){\n\t\tfactors.push(n);\n\t}\n\treturn factors;\n}\n", "\tvar factors\
    \ = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\t\t\t\
    factors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\tvar\
    \ factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n", "\t\
    var factors = [];\n\tfor(var i = 2; i <= Math.sqrt(n); i++){\n\t\tif(n%i == 0){\n\
    \t\t\tfactors.push(i);\n\t\t\tn = n/i;\n\t\t}\n\t}\n\treturn factors;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

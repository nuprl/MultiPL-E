name: HumanEval_90_next_smallest
language: js
prompt: "//You are given a list of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n// Return None if there is\
  \ no such element.\n// next_smallest([1, 2, 3, 4, 5]) == 2\n// next_smallest([5,\
  \ 1, 4, 3, 2]) == 2\n// next_smallest([]) == None\n// next_smallest([1, 1]) == None\n\
  function next_smallest(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = next_smallest;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),2);\n  assert.deepEqual(candidate([5,\
  \ 1, 4, 3, 2]),2);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([1, 1, 1, 1, 0]),1);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([-35, 34, 12, -45]),-35);\n}\n\n\
  test();"
completions: ["  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   if(lst.length == 0){\n        return null;\n    }\n    let smallest = lst[0];\n\
    \    let index = 0;\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n            index = i;\n     \
    \   }\n    }\n    return smallest;\n}\n", "    var smallest = lst[0];\n    var\
    \ secondSmallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n       \
    \ if(lst[i] < smallest){\n            secondSmallest = smallest;\n           \
    \ smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n           \
    \ secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n}\n",
  "    var smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var i = 1;\
    \ i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var index = lst.indexOf(smallest);\n\
    \  if(index == 0){\n    return null;\n  }\n  if(index == 1){\n    return smallest;\n\
    \  }\n  var next = lst[index-1];\n  if(next < smallest){\n    return null;\n \
    \ }\n  return next;\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  let\
    \ smallest = lst[0];\n  let index = lst.indexOf(smallest);\n  if(index == 0){\n\
    \    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n  }\n  return\
    \ smallest;\n}\n", "    \n    if(lst.length < 2){\n        return null;\n    }\n\
    \    \n    let smallest = lst[0];\n    let secondSmallest = lst[1];\n    \n  \
    \  for(let i = 2; i < lst.length; i++){\n        if(lst[i] < smallest){\n    \
    \        secondSmallest = smallest;\n            smallest = lst[i];\n        }\n\
    \        else if(lst[i] < secondSmallest){\n            secondSmallest = lst[i];\n\
    \        }\n    }\n    \n    return secondSmallest;\n}\n", "    if(lst.length\
    \ == 0){\n        return null;\n    }\n    let smallest = lst[0];\n    let secondSmallest\
    \ = lst[0];\n    for(let i = 1; i < lst.length; i++){\n        if(smallest>lst[i]){\n\
    \            secondSmallest = smallest;\n            smallest = lst[i];\n    \
    \    }else if(smallest==lst[i]){\n            secondSmallest = lst[i];\n     \
    \   }\n    }\n    return secondSmallest;\n}\n", "    let smallest = lst[0];\n\
    \    let index = lst.indexOf(smallest);\n    for(let i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n            index\
    \ = i;\n        }\n    }\n    return smallest;\n}\n", "    var smallest = lst[0];\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n    }\n    return smallest;\n}\n", " \
    \ if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n  let\
    \ secondSmallest = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[1];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n\
    \  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ secondSmallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "    if(lst.length == 0){\n        return\
    \ null;\n    }\n    let smallest = lst[0];\n    let second_smallest = lst[1];\n\
    \    for(let i = 2; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          second_smallest = smallest;\n            smallest = lst[i];\n     \
    \   }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n  for(let\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    if(lst.length == 0){\n     \
    \   return null;\n    }\n    let smallest = lst[0];\n    let index = lst.indexOf(smallest);\n\
    \    if(index == 0){\n        return null;\n    }\n    for(let i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \        index = i;\n        }\n    }\n    return smallest;\n}\n", "  var smallest\
    \ = lst[0];\n  var second_smallest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(smallest>lst[i]){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else\
    \ if(smallest==lst[i]){\n      second_smallest = lst[i];\n    }\n  }\n  return\
    \ second_smallest;\n}\n", "    if(lst.length < 2){\n        return null;\n   \
    \ }\n    var smallest = lst[0];\n    var second_smallest = lst[1];\n    for(var\
    \ i = 2; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  let smallest = lst[0];\n  let second_smallest = lst[1];\n\
    \  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    var smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var i = 1;\
    \ i < lst.length; i++){\n        if(smallest>lst[i]){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(smallest==lst[i]){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n</code>\n<|/ a tags=javascript,arrays,sorting |>\n<| a dscore=0 |>\n<code>",
  "  let smallest = lst[0];\n  let index = lst.indexOf(smallest);\n  if(index ===\
    \ -1){\n    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n  }\n  return\
    \ lst[index + 1];\n}\n", "  let smallest = lst[0];\n  let secondSmallest = lst[0];\n\
    \  for(let i = 1; i < lst.length; i++){\n    if(smallest>lst[i]){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(smallest==lst[i]){\n   \
    \   secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  \
    \  if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var secondSmallest = lst[1];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            secondSmallest = smallest;\n    \
    \        smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  let smallest = lst[0];\n  let second_smallest = lst[1];\n\
    \  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n  let secondSmallest\
    \ = lst[1];\n  for(let i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "    \n    if(lst.length == 0){\n        return null;\n    }\n    \n   \
    \ var smallest = lst[0];\n    \n    for(var i = 1; i < lst.length; i++){\n   \
    \     if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n    }\n\
    \    \n    return smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  let smallest = lst[0];\n\
    \  let secondSmallest = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "    if(lst.length == 0){\n        return\
    \ null;\n    }\n    let smallest = lst[0];\n    let index = 0;\n    for(let i\
    \ = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n            index = i;\n        }\n    }\n    return smallest;\n\
    }\n", "    let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n    }\n    return smallest;\n}\n", " \
    \   let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  let smallest = lst[0];\n  let second_smallest = lst[1];\n\
    \  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    let smallest = lst[0];\n    let secondSmallest = lst[0];\n    for(let i = 1;\
    \ i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] > secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    for(let i=0;i<lst.length;i++){\n        if(lst[i]<lst[i+1]){\n    \
    \        return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  let smallest\
    \ = lst[0];\n  let secondSmallest = lst[0];\n  for(let i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[0];\n\
    \  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   for(var i=0;i<lst.length;i++){\n        if(lst[i]<lst[i+1]){\n           \
    \ return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  if(lst.length\
    \ < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "    let smallest = lst[0];\n    let secondSmallest = lst[0];\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] > secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n  let\
    \ index = lst.indexOf(smallest);\n  if(index == 0){\n    return null;\n  }\n \
    \ for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n      index = i;\n    }\n  }\n  return lst[index];\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var index = lst.indexOf(smallest);\n\
    \  if(index == 0){\n    return null;\n  }\n  for(var i = 1; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n\
    \  }\n  return lst[index];\n}\n", "    if(lst.length == 0){\n        return null;\n\
    \    }\n    var smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \   }\n    return smallest;\n}\n", "    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < lst[i+1]){\n            return lst[i+1];\n        }\n   \
    \ }\n    return null;\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n\
    \  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 2; i\
    \ < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n\
    \    let second_smallest = lst[0];\n    for(let i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    let smallest\
    \ = lst[0];\n    let index = 0;\n    for(let i = 1; i < lst.length; i++){\n  \
    \      if(smallest > lst[i]){\n            smallest = lst[i];\n            index\
    \ = i;\n        }\n    }\n    return smallest;\n}\n", "    if(lst.length < 2){\n\
    \        return null;\n    }\n    let smallest = lst[0];\n    let secondSmallest\
    \ = lst[1];\n    for(let i=2;i<lst.length;i++){\n        if(lst[i] < smallest){\n\
    \            secondSmallest = smallest;\n            smallest = lst[i];\n    \
    \    }else if(lst[i] < secondSmallest){\n            secondSmallest = lst[i];\n\
    \        }\n    }\n    return secondSmallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  if(lst.length == 2){\n    return lst[1];\n  }\n  if(lst.length\
    \ == 1){\n    return lst[0];\n  }\n  let smallest = lst[0];\n  let second_smallest\
    \ = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else\
    \ if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n\
    \  return second_smallest;\n}\n", "    let smallest = lst[0];\n    let second_smallest\
    \ = lst[1];\n    for(let i=2; i<lst.length; i++){\n        if(smallest>lst[i]){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else{\n            second_smallest = lst[i];\n        }\n   \
    \ }\n    return second_smallest;\n}\n", "  if(lst.length < 2){\n    return null;\n\
    \  }\n  if(lst.length == 2){\n    return lst[1];\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n\
    \  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ let smallest = lst[0];\n  let second_smallest = lst[0];\n  for(let i = 1; i\
    \ < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    let smallest\
    \ = lst[0];\n    let secondSmallest = lst[1];\n    for(let i=2;i<lst.length;i++){\n\
    \        if(lst[i] < smallest){\n            secondSmallest = smallest;\n    \
    \        smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n    \
    \        secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ let smallest = lst[0];\n  let second_smallest = lst[1];\n  for(let i=0;i<lst.length;i++){\n\
    \    if(smallest>lst[i]){\n      smallest = lst[i];\n    }\n    if(second_smallest>lst[i]){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    \n    let smallest = lst[0];\n    let second_smallest = lst[0];\n    \n   \
    \ for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n     \
    \       second_smallest = smallest;\n            smallest = lst[i];\n        }\n\
    \        else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    \n    return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n\
    \  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 2; i\
    \ < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] > secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n\
    \    let second_smallest = lst[0];\n    for (let i = 1; i < lst.length; i++){\n\
    \        if (lst[i] < smallest){\n            second_smallest = smallest;\n  \
    \          smallest = lst[i];\n        } else if (lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  var smallest = lst[0];\n  var second_smallest = lst[0];\n  for(var i\
    \ = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n    \
    \  secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "   \
    \ let smallest = lst[0];\n    let secondSmallest = lst[0];\n    for(let i = 1;\
    \ i < lst.length; i++){\n        if(smallest>lst[i]){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(smallest==lst[i]){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var secondSmallest = lst[1];\n    for(var i = 2; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let secondSmallest = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  var smallest = lst[0];\n  var second_smallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let secondSmallest = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  var smallest = lst[0];\n  var second_smallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  if(lst.length == 2){\n    return lst[1];\n  }\n  if(lst.length\
    \ == 3){\n    return lst[2];\n  }\n  if(lst.length == 4){\n    return lst[3];\n\
    \  }\n  if(lst.length == 5){\n    return lst[4];\n  }\n  if(lst.length == 6){\n\
    \    return lst[5];\n  }\n  if(lst.length == 7){\n    return lst[6];\n  }\n  if(lst.length\
    \ == 8){\n    return lst[7];\n  }\n  if(lst.length == 9){\n    return lst[8];\n\
    \  }\n  if(lst.length == 10){\n    return lst[9];\n  }\n  if(lst.length == 11){\n\
    \    return lst[10];\n  }\n  if(lst.length == 12){\n    return lst[11];\n  }\n\
    \  if(lst.length == 13){\n    return lst[12];\n  }\n  if(lst.length == 14){\n\
    \    return lst[13];\n  }\n  if(lst.length == 15){\n    return lst[14];\n  }\n\
    \  if(lst.length == 16){\n    return lst[15];\n  }\n  if(lst.length == 17){\n\
    \    return lst[16];\n  }\n  if(lst.length == 18){\n    return lst[17];\n  }\n\
    \  if(lst.length == 19){\n    return lst[18];\n  }\n  if(lst.length == 20){\n\
    \    return lst[19];\n  }\n  if(lst.length == 21){\n    return lst[20];\n  }\n\
    \  if(lst.length == 22){\n    return lst[21];\n  }\n  if(lst.length == 23){\n\
    \    return lst[22];\n  }\n  if(lst.length == 24){\n    return lst[23];\n  }\n\
    \  if(lst.length == 25){\n    return lst[24];\n  }\n  if(lst.length == 26){\n\
    \    return lst[25];\n  }\n  if(lst.length == 27){\n    return lst[26];\n  }\n\
    \  if(lst.length == 28){\n    return lst[27];\n  }\n  if(lst.length == 29){\n\
    \    return lst[28];\n  }\n  if(lst.length == 30){\n    return lst[29];\n  }\n\
    \  if(lst.length == 31){\n    return lst[30];\n  }\n  if(lst.length == 32){\n\
    \    return lst[31];\n  }\n  if(lst.length == 33){\n    return lst[32];\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let index = 1;\n  for(let i = 1; i\
    \ < lst.length; i++){\n    if(smallest>lst[i]){\n      smallest = lst[i];\n  \
    \    index = i;\n    }\n  }\n  return smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i = 2; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let second_smallest = lst[1];\n  for(let i=2; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n  \
    \  }\n  }\n  return second_smallest;\n}\n", "  let smallest = lst[0];\n  let second_smallest\
    \ = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            smallest = lst[i];\n        }\n    }\n    return smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  if(lst.length == 2){\n    return\
    \ lst[1];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n  for(let\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let i =\
    \ 1; i < lst.length; i++){\n        if(smallest>lst[i]){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(smallest==lst[i]){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "    var smallest = lst[0];\n  \
    \  var index = lst.indexOf(smallest);\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n            index\
    \ = i;\n        }\n    }\n    return smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var\
    \ smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] > secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n   \
    \ let second_smallest = lst[1];\n    for(let i=0;i<lst.length;i++){\n        if(smallest>lst[i]){\n\
    \            smallest = lst[i];\n        }\n        if(second_smallest > lst[i]){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "    \n    if(lst.length == 0){\n        return\
    \ null;\n    }\n    \n    let smallest = lst[0];\n    let second_smallest = lst[1];\n\
    \    \n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if(lst[i] < second_smallest){\n            second_smallest\
    \ = lst[i];\n        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n\
    \  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i =\
    \ 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let second_smallest = lst[1];\n  for(let\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  if(lst.length == 2){\n    return lst[1];\n  }\n  let smallest\
    \ = lst[0];\n  let second_smallest = lst[1];\n  for(let i=2;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest =\
    \ lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[0];\n\
    \  for(let i = 1; i < lst.length; i++){\n    if(smallest>lst[i]){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(smallest==lst[i]){\n   \
    \   secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length\
    \ < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  let smallest = lst[0];\n  let index = 0;\n  for(let i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \    index = i;\n    }\n  }\n  return lst[index];\n}\n", "    if(lst.length ==\
    \ 0){\n        return null;\n    }\n    let smallest = lst[0];\n    let second_smallest\
    \ = lst[0];\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] < lst[i+1]){\n            return lst[i+1];\n\
    \        }\n    }\n    return null;\n}\n", "    var smallest = lst[0];\n    var\
    \ second_smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n      \
    \  if(lst[i] < smallest){\n            second_smallest = smallest;\n         \
    \   smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n        \
    \    second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < lst[i+1]){\n\
    \            return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  for(var i = 1; i\
    \ < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n  }\n  return smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let i =\
    \ 1; i < lst.length; i++){\n    if(smallest>lst[i]){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(smallest==lst[i]){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ smallest;\n}\n", "    let smallest = lst[0];\n    let secondSmallest = lst[1];\n\
    \    for(let i=2;i<lst.length;i++){\n        if(lst[i]<smallest){\n          \
    \  secondSmallest = smallest;\n            smallest = lst[i];\n        }\n   \
    \     else if(lst[i]<secondSmallest){\n            secondSmallest = lst[i];\n\
    \        }\n    }\n    return secondSmallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var\
    \ smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(smallest>lst[i]){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(smallest==lst[i]){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  var smallest = lst[0];\n  var\
    \ secondSmallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(smallest>lst[i]){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else{\n    \
    \  secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n\
    \  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    if(lst.length == 0){\n     \
    \   return null;\n    }\n    let smallest = lst[0];\n    let index = 0;\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n            index = i;\n        }\n    }\n    return smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    let smallest\
    \ = lst[0];\n    let index = lst.indexOf(smallest);\n    if(index == 0){\n   \
    \     return null;\n    }\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n            index = i;\n     \
    \   }\n    }\n    return lst[index];\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  let smallest = lst[0];\n  let index = 0;\n  for(let i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n  \
    \    index = i;\n    }\n  }\n  return smallest;\n}\n", "  let smallest = lst[0];\n\
    \  let secondSmallest = lst[0];\n  for (let i = 1; i < lst.length; i++){\n   \
    \ if (lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest =\
    \ lst[i];\n    }\n    else if (lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n\
    \    let index = lst.indexOf(smallest);\n    if(index === 0){\n        return\
    \ null;\n    }\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] <\
    \ smallest){\n            smallest = lst[i];\n            index = i;\n       \
    \ }\n    }\n    return lst[index];\n}\n", "    var smallest = lst[0];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return smallest;\n}\n", "    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < lst[i+1]){\n            return lst[i+1];\n\
    \        }\n    }\n    return null;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  let smallest = lst[0];\n  let index = lst.indexOf(smallest);\n\
    \  if(index == 0){\n    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n\
    \  }\n  return lst[index];\n}\n", "    if(lst.length == 0){\n        return null;\n\
    \    }\n    let smallest = lst[0];\n    let index = lst.indexOf(smallest);\n \
    \   if(index == 0){\n        return null;\n    }\n    let nextSmallest = lst[index\
    \ - 1];\n    return nextSmallest;\n}\n", "  let smallest = lst[0];\n  let index\
    \ = lst.indexOf(smallest);\n  if(index === -1){\n    return null;\n  }\n  for(let\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \      index = i;\n    }\n  }\n  return lst[index];\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n\
    \  var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var i = 1; i\
    \ < lst.length; i++){\n    if(smallest>lst[i]){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(smallest==lst[i]){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(smallest>lst[i]){\n\
    \      smallest = lst[i];\n    }\n    if(second_smallest && smallest>second_smallest){\n\
    \      second_smallest = smallest;\n    }\n  }\n  return second_smallest ? second_smallest\
    \ : null;\n}\n", "    let smallest = lst[0];\n    let secondSmallest = lst[0];\n\
    \    for(let i = 1; i < lst.length; i++){\n        if(smallest > lst[i]){\n  \
    \          secondSmallest = smallest;\n            smallest = lst[i];\n      \
    \  }else if(smallest === lst[i]){\n            secondSmallest = lst[i];\n    \
    \    }\n    }\n    return secondSmallest;\n}\n", "    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]<lst[i+1]){\n            return lst[i+1];\n        }\n    }\n\
    \    return null;\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length\
    \ == 1){\n    return lst[0];\n  }\n  if(lst.length == 2){\n    return lst[1];\n\
    \  }\n  let smallest = lst[0];\n  let second_smallest = lst[1];\n  for(let i =\
    \ 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n  let secondSmallest\
    \ = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let secondSmallest = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  let smallest = lst[0];\n  let\
    \ second_smallest = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n  \
    \  }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  let smallest = lst[0];\n  let index = lst.indexOf(smallest);\n\
    \  if(index == 0){\n    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n\
    \  }\n  return smallest;\n}\n", "  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    second_smallest = smallest;\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  if(lst.length == 2){\n\
    \    return lst[1];\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] > second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n  let\
    \ secondSmallest = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(smallest>lst[i]){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }\n    else if(smallest==lst[i]){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n  let\
    \ index = lst.indexOf(smallest);\n  if(index == 0){\n    return null;\n  }\n \
    \ for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n      index = i;\n    }\n  }\n  return lst[index];\n}\n", "    let\
    \ smallest = lst[0];\n    let secondSmallest = lst[0];\n    for (let i = 1; i\
    \ < lst.length; i++){\n        if (lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        } else if (lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  let smallest = lst[0];\n  let second_smallest\
    \ = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n   \
    \ let index = lst.indexOf(smallest);\n    if(index === 0){\n        return null;\n\
    \    }\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            smallest = lst[i];\n            index = i;\n        }\n    }\n  \
    \  return lst[index];\n}\n", "    var smallest = lst[0];\n    var second_smallest\
    \ = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  let smallest = lst[0];\n\
    \  let secondSmallest = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  if(lst.length < 2){\n    return null;\n\
    \  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i =\
    \ 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  let smallest = lst[0];\n  let second_smallest = lst[0];\n  for(let i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    var smallest =\
    \ lst[0];\n    var secondSmallest = lst[0];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    let smallest\
    \ = lst[0];\n    let secondSmallest = lst[1];\n    for(let i=2;i<lst.length;i++){\n\
    \        if(lst[i] < smallest){\n            secondSmallest = smallest;\n    \
    \        smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  if(lst.length == 2){\n    return lst[1];\n  }\n  var\
    \ smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    var smallest =\
    \ lst[0];\n    var smallest_index = -1;\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n            smallest_index\
    \ = i;\n        }\n    }\n    return smallest_index > -1 ? smallest_index : null;\n\
    }\n", "    var smallest;\n    for(var i=0;i<lst.length;i++){\n        if(smallest===undefined){\n\
    \            smallest=lst[i];\n        }else if(smallest>lst[i]){\n          \
    \  smallest=lst[i];\n        }\n    }\n    return smallest;\n}\n", "  if(lst.length\
    \ < 2) return null;\n  let smallest = lst[0];\n  let index = 0;\n  for(let i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \      index = i;\n    }\n  }\n  return lst[index];\n}\n", "    \n    if(lst.length\
    \ == 0){\n        return null;\n    }\n    \n    let smallest = lst[0];\n    let\
    \ secondSmallest = lst[0];\n    \n    for(let i = 1; i < lst.length; i++){\n \
    \       if(lst[i] < smallest){\n            secondSmallest = smallest;\n     \
    \       smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n     \
    \       secondSmallest = lst[i];\n        }\n    }\n    \n    return secondSmallest;\n\
    }\n", "  let smallest = lst[0];\n  let second_smallest = lst[0];\n  for(let i\
    \ = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < lst[i+1]){\n    \
    \        return lst[i+1];\n        }\n    }\n    return null;\n}\n", "    var\
    \ smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n        }\n    }\n    return smallest;\n\
    }\n", "  let smallest = lst[0];\n  let second_smallest = lst[0];\n  for(let i\
    \ = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < lst[i+1]){\n\
    \            return lst[i+1];\n        }\n    }\n    return null;\n}\n", "   \
    \ let smallest = lst[0];\n    let index = lst.indexOf(smallest);\n    if(index\
    \ === 0){\n        return null;\n    }\n    for(let i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n            index\
    \ = i;\n        }\n    }\n    return lst[index];\n}\n", "    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]<lst[i+1]){\n            return lst[i+1];\n        }\n    }\n\
    \    return null;\n}\n", "    if(lst.length < 2){\n        return null;\n    }\n\
    \    var smallest = lst[0];\n    var secondSmallest = lst[1];\n    for(var i =\
    \ 2; i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n</code>\n<|/ a tags=javascript,arrays |>\n<|\
    \ c |>\nThis doesn't work if the array is empty\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if the array is empty. `next_smallest([])` returns `undefined`\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array is empty. next_smallest([]) returns undefined\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the array is empty. next_smallest([]) returns\
    \ undefined\n<|/ c |>\n<| c |>\nIt doesn't work if the array is empty. next_smallest([])\
    \ returns undefined\n<|/ c |>\n<| a tags=javascript,arrays |>\n<code>", "  var\
    \ smallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] <\
    \ smallest){\n      smallest = lst[i];\n    }\n  }\n  return smallest;\n}\n",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n     \
    \   if(lst[i] < smallest){\n            second_smallest = smallest;\n        \
    \    smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n       \
    \     second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  if(lst.length == 2){\n    return lst[1];\n  }\n  let\
    \ smallest = lst[0];\n  let second_smallest = lst[1];\n  for(let i=2;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest =\
    \ lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n\
    \  for(let i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "  let smallest = lst[0];\n  let second_smallest\
    \ = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    let smallest = lst[0];\n    let secondSmallest = lst[0];\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(smallest>lst[i]){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(smallest==lst[i]){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  let smallest = lst[0];\n  let index = lst.indexOf(smallest);\n\
    \  if(index == 0){\n    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n\
    \  }\n  return lst[index];\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n</code>\n<|/ a |>\n<| a |>\n<code>", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  let smallest = lst[0];\n  let index = lst.indexOf(smallest);\n  if(index\
    \ == 0){\n    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n  }\n  return\
    \ lst[index];\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length\
    \ == 1){\n    return lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  var smallest = lst[0];\n  var second_smallest = lst[0];\n  for(var i\
    \ = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    let smallest = lst[0];\n    let second_smallest = lst[0];\n    for(let i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let secondSmallest = lst[1];\n  for(let i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest\
    \ = lst[0];\n  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(smallest>lst[i]){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(smallest==lst[i]){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  var smallest = lst[0];\n  var\
    \ secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  let smallest = lst[0];\n  let second_smallest\
    \ = lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let index = lst.indexOf(smallest);\n  if(index > 0){\n    smallest = lst[index-1];\n\
    \  }\n  if(index === lst.length-1){\n    return smallest;\n  }\n  if(smallest\
    \ < lst[index+1]){\n    return smallest;\n  }\n  return null;\n}\n", "  let smallest\
    \ = lst[0];\n  let second_smallest = lst[0];\n  for(let i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  let smallest = lst[0];\n  let secondSmallest =\
    \ lst[0];\n  for(let i = 1; i < lst.length; i++){\n    if(smallest>lst[i]){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(smallest==lst[i]){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n  for(let\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n  \
    \  }\n  }\n  return second_smallest;\n}\n", "    if(lst.length == 0){\n      \
    \  return null;\n    }\n    let smallest = lst[0];\n    let index = lst.indexOf(smallest);\n\
    \    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n            index = i;\n        }\n    }\n    return\
    \ lst[index];\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  let smallest\
    \ = lst[0];\n  let index = lst.indexOf(smallest);\n  if(index == 0){\n    return\
    \ null;\n  }\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n      index = i;\n    }\n  }\n  return smallest;\n\
    }\n", "  var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n    let secondSmallest\
    \ = lst[0];\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            secondSmallest = smallest;\n            smallest = lst[i];\n    \
    \    }else if(lst[i] < secondSmallest){\n            secondSmallest = lst[i];\n\
    \        }\n    }\n    return secondSmallest;\n}\n", "    var smallest = lst[0];\n\
    \    var index = lst.indexOf(smallest);\n    if(index === 0){\n        return\
    \ null;\n    }\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] <\
    \ smallest){\n            smallest = lst[i];\n            index = i;\n       \
    \ }\n    }\n    return lst[index];\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  let smallest = lst[0];\n  let index = lst.indexOf(smallest);\n\
    \  if(index == 0){\n    return null;\n  }\n  for(let i = 1; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n      index = i;\n    }\n\
    \  }\n  return lst[index];\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  if(lst.length == 2){\n\
    \    return lst[1];\n  }\n  if(lst.length == 3){\n    if(lst[1] < lst[2]){\n \
    \     return lst[1];\n    }\n    return lst[2];\n  }\n  if(lst.length == 4){\n\
    \    if(lst[1] < lst[2]){\n      if(lst[2] < lst[3]){\n        return lst[2];\n\
    \      }\n      return lst[3];\n    }\n    return lst[4];\n  }\n  if(lst.length\
    \ == 5){\n    if(lst[1] < lst[2]){\n      if(lst[2] < lst[3]){\n        if(lst[3]\
    \ < lst[4]){\n          return lst[3];\n        }\n        return lst[4];\n  \
    \    }\n      return lst[5];\n    }\n    return lst[6];\n  }\n  if(lst.length\
    \ == 6){\n    if(lst[1] < lst[2]){\n      if(lst[2] < lst[3]){\n        if(lst[3]\
    \ < lst[4]){\n          if(lst[4] < lst[5]){\n            return lst[4];\n   \
    \       }\n          return lst[5];\n        }\n        return lst[6];\n     \
    \ }\n      return lst[7];\n    }\n    return lst[8];\n  }\n  if(lst.length ==\
    \ 7){\n    if(lst[1] < lst[2]){\n      if(lst[2] < lst[3]){\n        if(lst[3]\
    \ < lst[4]){\n          if(lst[4] < lst[5]){\n            if(lst[5] < lst[6]){\n\
    \              return lst[5];\n            }\n            return lst[6];\n   \
    \       }\n          return lst[7];\n        }\n        return lst[8];\n     \
    \ }\n      return lst[9];\n    }\n    return lst[10];\n  }\n  if(lst.length ==\
    \ 8){\n    if(lst[1] < lst[2]){\n      if(lst[2] < lst[3]){\n        if(lst[3]\
    \ < lst[4]){\n          if(lst[4] < lst[5]){\n            if(lst[5] < lst[6]){\n\
    \              if(lst[6] < lst[7]){\n                return lst[6];\n        \
    \      }\n              return lst[7];\n            }\n            return lst[8];\n\
    \          }\n          return lst[9];\n        }\n        return lst[10];\n \
    \     }\n      return lst[11];\n    }\n    return lst[12];\n  }\n  if(lst.length\
    \ == 9){\n    if(lst[1] < lst[2]){\n      if(lst[2] < lst[3]){\n        if(lst[3]\
    \ < lst[4]){\n          if(lst[4] < lst[5]){\n            if(lst[5] < lst[6]){\n\
    \              if(lst[6] < ", "    var smallest;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(smallest===undefined || lst[i]<smallest){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  let\
    \ smallest = lst[0];\n  let secondSmallest = lst[1];\n  for(let i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    var smallest = lst[0];\n   \
    \ var secondSmallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n   \
    \     if(smallest>lst[i]){\n            secondSmallest = smallest;\n         \
    \   smallest = lst[i];\n        }else if(smallest==lst[i]){\n            secondSmallest\
    \ = lst[i];\n        }\n    }\n    return secondSmallest;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_15_string_sequence
language: js
results:
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n}).map(String).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpfumtauz2.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfumtauz2.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpw7nxl2o5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw7nxl2o5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpz2mlx05w.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz2mlx05w.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6zen5lcw.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6zen5lcw.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmppdn5de8j.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmppdn5de8j.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpf3yts_nq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf3yts_nq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpr9qch_q4.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr9qch_q4.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpo17bou69.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo17bou69.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},()=>{\n\
    \    return Math.floor(Math.random()*10).toString();\n  }).join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpfnypthm3.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfnypthm3.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpk7c8ufrd.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk7c8ufrd.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpwlrgnpft.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwlrgnpft.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpxdd3wf7q.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxdd3wf7q.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp0vf4n4r1.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0vf4n4r1.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpieqm8moi.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpieqm8moi.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmplsvzwgjo.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmplsvzwgjo.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpphqzf4av.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpphqzf4av.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(String).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpysov9gnv.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpysov9gnv.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpg3hm18ji.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg3hm18ji.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpypn8tm9d.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpypn8tm9d.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(function(i){\n\
    \    return i.toString();\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpl9qerxa5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9qerxa5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmptdyvvmiv.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmptdyvvmiv.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpo0xu8rd5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo0xu8rd5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp58airz_7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp58airz_7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpj3360adx.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj3360adx.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpc5mus_40.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc5mus_40.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6ga2dhqu.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6ga2dhqu.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpn_kspa5x.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn_kspa5x.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpo15tx_l9.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo15tx_l9.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp4nxyhq1k.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4nxyhq1k.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmptnuwd6t3.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmptnuwd6t3.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpak1z8ziu.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpak1z8ziu.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmplj6xiom6.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmplj6xiom6.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpv3khu950.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv3khu950.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpo4pi0hda.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo4pi0hda.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n).keys(),\
    \ function(i){\n    return i + 1;\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmput0_e9i8.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmput0_e9i8.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3_hktf1s.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3_hktf1s.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},(_,i)=>i.toString()).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpjvjzg3tp.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjvjzg3tp.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1v9r04_7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1v9r04_7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n).keys(),\
    \ function(i){\n    return i + '';\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpi0r61ggt.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi0r61ggt.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+= i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpdvfuy818.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdvfuy818.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n).keys());\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3q9n0j7v.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3q9n0j7v.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6i9oss77.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6i9oss77.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp_zehriil.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_zehriil.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpth_1ebuj.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpth_1ebuj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpbktgm85e.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbktgm85e.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp9nr3r7vm.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9nr3r7vm.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpr2q0s9n6.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr2q0s9n6.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp2iylbi4g.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2iylbi4g.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpdp7h8c9x.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdp7h8c9x.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp0a7_olr2.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0a7_olr2.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmppu5r3glw.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmppu5r3glw.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n).keys()).map(String).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp4trgq45k.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4trgq45k.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpsk4yfrm4.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsk4yfrm4.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp4qir5y26.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4qir5y26.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpxr1a0f6l.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxr1a0f6l.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpfwqnzvoc.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfwqnzvoc.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmptvp2r9sj.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmptvp2r9sj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpqpzuik0r.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqpzuik0r.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpboj3owaa.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpboj3owaa.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpcgq8k5i3.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcgq8k5i3.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp5g_7ge_m.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5g_7ge_m.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpm262vqma.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm262vqma.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmplkn59_cp.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmplkn59_cp.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpzwaoh2br.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzwaoh2br.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6rkgr1gc.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6rkgr1gc.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpe_7_vv8_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe_7_vv8_.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpua9xs7c8.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpua9xs7c8.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6uyryj85.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6uyryj85.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp9maqgefg.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9maqgefg.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6rnxy3bj.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6rnxy3bj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpdqsdu5fq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdqsdu5fq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp98fyf29h.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp98fyf29h.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpi91s5t1a.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi91s5t1a.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpokjhl4bd.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpokjhl4bd.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpbo3ynjuu.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbo3ynjuu.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmphts3z8aa.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmphts3z8aa.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6i1tw21t.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6i1tw21t.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},(_,i)=>i).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpy7zlgybg.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy7zlgybg.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpd9eoewq0.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd9eoewq0.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += '' + i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpsv69u6p7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsv69u6p7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmppmoy85_7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmppmoy85_7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpgy4yuejl.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgy4yuejl.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpiwwsbj9i.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiwwsbj9i.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpgwf6jv75.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgwf6jv75.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpgfqy17fq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgfqy17fq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmptamju_u0.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmptamju_u0.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp5fqbv0gn.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5fqbv0gn.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpzajfl0yx.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzajfl0yx.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp00y8uvd5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp00y8uvd5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp7tzlm2oj.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7tzlm2oj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpkgsut4_5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkgsut4_5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpp4pen3cd.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp4pen3cd.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpgdiqo0g_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgdiqo0g_.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpg4hyi55z.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg4hyi55z.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpfk174po4.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfk174po4.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpeihdo2qw.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeihdo2qw.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpc4h9_zh0.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc4h9_zh0.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpfnfvaw_n.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfnfvaw_n.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},(v,k)=>k+1).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpxazl1uho.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxazl1uho.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6e4oo9na.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6e4oo9na.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpl1uqxpui.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl1uqxpui.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpho0_lx_0.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpho0_lx_0.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpygtz3ymn.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpygtz3ymn.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(function(i){\n\
    \    return i.toString();\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6w2n5cjg.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6w2n5cjg.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1cowxz41.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1cowxz41.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6wgtpodb.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6wgtpodb.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1ryhtp5w.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1ryhtp5w.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},\
    \ (_,i)=>i).join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp7vvd5k98.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7vvd5k98.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpaztucb8y.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaztucb8y.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp71dws5qk.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp71dws5qk.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpndv7hon5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpndv7hon5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpfxg0_6ib.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfxg0_6ib.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpjpzx1tnu.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjpzx1tnu.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3zocfc65.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3zocfc65.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp29fton9g.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp29fton9g.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp_krqzwn8.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_krqzwn8.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+= i.toString();\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1qjwux3c.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1qjwux3c.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpia_6mvsg.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpia_6mvsg.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp68xjd7ed.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp68xjd7ed.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpk25ss7hc.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk25ss7hc.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpe6v9fzkg.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe6v9fzkg.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp2g2i2spp.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2g2i2spp.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp2802zpzm.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2802zpzm.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpelsy9msg.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpelsy9msg.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpkwepsc33.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkwepsc33.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpq5tbls6c.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq5tbls6c.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpnf4vyc29.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnf4vyc29.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp94yn7gum.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp94yn7gum.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp5mebcnct.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5mebcnct.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmph2m9mdro.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmph2m9mdro.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpwh35ontn.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwh35ontn.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpqegoe3gj.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqegoe3gj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpsx6_j_j1.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsx6_j_j1.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpvri11158.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvri11158.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(function(i){\n\
    \    return i.toString();\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpulr5bbk6.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpulr5bbk6.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmphvh5zf8k.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmphvh5zf8k.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmprulj16_e.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmprulj16_e.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n}).map(function(_,i){\n\
    \    return i.toString();\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1majdkha.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1majdkha.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpq9478asq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq9478asq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpv1r7qlar.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv1r7qlar.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp2r5lz3hy.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2r5lz3hy.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},\
    \ (_,i)=>i+1).join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpdkzvm35w.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdkzvm35w.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpphtxqu0g.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpphtxqu0g.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3e1a55m7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3e1a55m7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmphwtkm198.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmphwtkm198.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpzz6q5b3v.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzz6q5b3v.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpyb_ttu9w.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyb_ttu9w.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp8s921fk0.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8s921fk0.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpsdo5son7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsdo5son7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3fkj_fy1.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3fkj_fy1.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(function(i){\n\
    \    return i.toString();\n  }).join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpje1zc8j8.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpje1zc8j8.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp7stmvklx.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7stmvklx.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpyc_6hmua.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyc_6hmua.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpyohcz1ua.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyohcz1ua.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1yoo28ah.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1yoo28ah.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp9dyzw9qg.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9dyzw9qg.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp12mfktgq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp12mfktgq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmphs89zq28.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmphs89zq28.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpumlm9__r.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpumlm9__r.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpr8tl6r4b.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr8tl6r4b.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length: n},\
    \ (_,i) => i).join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp5p8sh42r.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5p8sh42r.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp5ffgvto7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5ffgvto7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpur9bbdz7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpur9bbdz7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmps5s517vj.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmps5s517vj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpudbqhrv_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudbqhrv_.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpp9sw2xvq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp9sw2xvq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpw_5em94i.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw_5em94i.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++)\
    \ s += i;\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpbmj6mmjm.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbmj6mmjm.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp99ij1qv7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99ij1qv7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3mpds3ku.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3mpds3ku.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp1q5y6nbf.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1q5y6nbf.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpyvtaixy8.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyvtaixy8.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6mnkstsc.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6mnkstsc.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpydamjgjm.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpydamjgjm.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpqdqy0vbi.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqdqy0vbi.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;i<n;i++){\n\
    \    s+=i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpyr9fi0sh.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyr9fi0sh.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpwzymac0e.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwzymac0e.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpdzd1pnmf.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdzd1pnmf.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmptrd1goqq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmptrd1goqq.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp6tyy48lw.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6tyy48lw.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = '';\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp0_gzhauu.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0_gzhauu.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpg3aci86v.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg3aci86v.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpd9514ssd.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd9514ssd.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpwhgw9cc1.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwhgw9cc1.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpr9naxeqk.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr9naxeqk.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from(Array(n+1).keys()).map(String).join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp61tjowr_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp61tjowr_.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  return Array.from({length:n},()=>{\n\
    \    return Math.floor(Math.random()*10).toString()\n  }).join(' ')\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpju1yuivp.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpju1yuivp.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpxo6d7b01.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxo6d7b01.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;i<n;i++){\n\
    \    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpmpisjt_b.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmpisjt_b.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpysy1fih7.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpysy1fih7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp_6ohb6ub.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_6ohb6ub.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var s = \"\";\n  for(var i=0;\
    \ i<n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpvfpearfo.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvfpearfo.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;i<n;i++){\n\
    \    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmpo5teajrb.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo5teajrb.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var str = '';\n  for(var i=0;\
    \ i<n; i++){\n    str += i;\n  }\n  return str;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'0'\n    at test (/tmp/tmp3e6qm0y3.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3e6qm0y3.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

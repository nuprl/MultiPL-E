name: HumanEval_49_modp
language: js
prompt: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
  // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n//\
  \ 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n, p){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
  \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
  \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
  \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
completions: ["  var k = Math.pow(2,n)\n  var r = p % k\n  return r === 0 ? 1 : r\n\
    }\n", "  var k = Math.pow(2,n)\n  var r = n%p\n  return (r==0?0:(r+(p-k)))%p\n\
    }\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return (r == 0) ? 1 : (r %\
    \ k)\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p)\
    \ % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var i = Math.floor(n/p),\n     \
    \ mod = n%p;\n  return mod;\n}\n", "  var res = 1;\n  while (p){\n    if (n &\
    \ p){\n      res++;\n      n &= p-1;\n    }else{\n      res+=1;\n      n++;\n\
    \    }\n    p = p >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while (p){\n\
    \    if (n & p){\n      res++;\n      n &= p-1;\n    }\n    p = p >> 1;\n  }\n\
    \  return res;\n}\n", "  var k = Math.pow(n, p);\n  return ((k - 1) & k) || ((k\
    \ - 1) & k) ? ((k & k) ? 1 : -1) : k;\n}\n", "  var res = 1;\n  while(n){\n  \
    \  if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1) res = (res * p) % p;\n    n\
    \ = Math.floor(n / p);\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p) % p;\n    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res * p)\
    \ % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while\
    \ (res < n) {\n    res *= p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while\
    \ (p){\n    if (n%p == 0) res++;\n    n /= p;\n  }\n  return res;\n}\n", "  var\
    \ i = Math.floor(n/p);\n  return ((n-=i*p) < 0)?(i===0?0:i-1):i;\n}\n", "  var\
    \ res = 1;\n  while(res <= n){\n    res *= p;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n \
    \   n = n >> 1;\n  }\n  return res;\n}\n", "  var k = Math.pow(2, n);\n  return\
    \ ((p + Math.floor(p)) % k + k) % k;\n}\n", "  var res = 1;\n  while(n){\n   \
    \ if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p + n) % p;\n    }\n    n = Math.floor(n / p);\n \
    \ }\n  return res;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return\
    \ (r < p) ? r : r + k\n}\n", "  var r = n%p;\n  return r<0 ? r + p : r;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n\
    \    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var\
    \ r = n%p;\n  return r === 0 ? r : r+p;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var i = Math.floor(n/p),\n     \
    \ mod = n%p;\n  return mod;\n}\n", "  var res = 1;\n  while (p){\n    if (n &\
    \ p){\n      res++;\n      n &= p-1;\n    }\n    p = p >> 1;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while (p){\n    if (n & p){\n      res += 1;\n      n\
    \ &= p - 1;\n    }\n    p >>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while (p){\n    if (n & p){\n      res *= p;\n    }\n    n >>= 1;\n    p >>=\
    \ 1;\n  }\n  return res;\n}\n", "  var r = n%p;\n  return r === 0 ? r : r+p;\n\
    }\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return r === 0 ? 1 : r\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n \
    \   }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1) res = (res * p) % p;\n    n = Math.floor(n / p);\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var r = n%p;\n\
    \  return r === 0 ? r : r+p;\n}\n", "  var k = Math.pow(2, n)\n  if(p === 0)\n\
    \    return k\n  if(p === 1)\n    return k + n\n  if(p === 2)\n    return k +\
    \ n + n\n  if(p === 3)\n    return k + n + n + n + n\n  if(p === 4)\n    return\
    \ k + n + n + n + n + n + n\n  if(p === 5)\n    return k + n + n + n + n + n +\
    \ n + n + n\n  if(p === 6)\n    return k + n + n + n + n + n + n + n + n + n +\
    \ n\n  if(p === 7)\n    return k + n + n + n + n + n + n + n + n + n + n + n\n\
    \  if(p === 8)\n    return k + n + n + n + n + n + n + n + n + n + n + n + n\n\
    \  if(p === 9)\n    return k + n + n + n + n + n + n + n + n + n + n + n + n +\
    \ n + n\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res\
    \ * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n    n = n\
    \ >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1)\
    \ res = (res * p) % p;\n    n = Math.floor(n / p);\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res *= p;\n    }\n    n >>>=\
    \ 1;\n    p >>>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p + 1) & p;\n    }\n    n = n >> 1;\n  }\n\
    \  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res\
    \ *= p;\n    }\n    n >>= 1;\n    p *= p;\n  }\n  return res;\n}\n", "  var res\
    \ = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n \
    \   n = n >> 1;\n  }\n  return res;\n}\n", "  var r = n%p;\n  return r === 0 ?\
    \ r : r+p;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res\
    \ * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while(n){\n    if(n & 1){\n      res *= p;\n    }\n    n >>= 1;\n    p >>=\
    \ 1;\n  }\n  return res;\n}\n", "  var k = Math.pow(2, n);\n  return ((p % k)\
    \ + k) % k;\n}\n", "  var res = 1;\n  while (p){\n    if (n & p){\n      res++;\n\
    \      n &= p-1;\n    }\n    p = p >> 1;\n  }\n  return res;\n}\n", "  var res\
    \ = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n    n\
    \ = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var res =\
    \ 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n   \
    \ n = Math.floor(n / p);\n  }\n  return res;\n}\n", "  var res = 1;\n  while (p){\n\
    \    if (n & p){\n      res++;\n      n &= p-1;\n    }\n    p = p >> 1;\n  }\n\
    \  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res\
    \ = (res % p) + p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res\
    \ = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n \
    \   n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res *= p;\n    }\n    n >>= 1;\n    p *= p;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n\
    \    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n\
    \    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n \
    \   n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var res\
    \ = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n \
    \   n = n >> 1;\n  }\n  return res;\n}\n", "  var i = Math.ceil(n/p),\n      mod\
    \ = n%p;\n  if(mod) return mod;\n  if(p == 1) return 1;\n  if(p == 0) return 0;\n\
    \  if(i < 0) i = Math.abs(i);\n  return modp(i, p);\n}\n", "  var res = 1;\n \
    \ while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n\
    \ / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n\
    \ > 0){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n\
    \  }\n  return res;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return\
    \ (r < p) ? k - r : r\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n  \
    \    res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n    p = p % p;\n\
    \  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n    \
    \  res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", " \
    \ var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n\
    \    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var\
    \ r = n%p;\n  return r === 0 ? r : r+p;\n}\n", "  var r = n%p;\n  return r<0 ?\
    \ r + p : r;\n}\n", "  var r = n%p;\n  return r === 0 ? r : r+p;\n}\n", "  var\
    \ k = Math.pow(2,n)\n  var r = p % k\n  return r === 0 ? 1 : r\n}\n", "  var k\
    \ = Math.pow(2,n)\n  var r = p % k\n  return r === 0 ? 1 : r\n}\n", "  var res\
    \ = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n \
    \   n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res %\
    \ p) + p;\n    }\n    n = Math.floor(n / 2);\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n\
    \    n = Math.floor(n / p);\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var k = Math.pow(2,\
    \ n);\n  return ((p + Math.floor(k)) % k);\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n    p >>>= 1;\n  }\n \
    \ return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res =\
    \ (res * p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var\
    \ k = Math.pow(2,n)\n  var r = n\n  while(r){\n    r = r%p\n    k++\n  }\n  return\
    \ k\n}\n", "  var res = 1;\n  while (p){\n    if (n & p){\n      res++;\n    \
    \  n &= p-1;\n    }\n    p >>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n    n = Math.floor(n\
    \ / p);\n  }\n  return res;\n}\n", "  var res = 1;\n  while (p){\n    if (n &\
    \ p){\n      res++;\n      n &= p-1;\n    }\n    p >>= 1;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n\
    \    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n",
  "  var i = Math.floor(n/p),\n      mod = n%p;\n  return mod === 0 ? 0 : mod;\n}\n",
  "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res * p) % p;\n \
    \   }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return r === 0 ? 1\
    \ : r\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res *= p;\n \
    \   }\n    n >>>= 1;\n    p >>>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >>\
    \ 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n\
    \      res = (res % p) + p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1) res = (res * p) % p;\n    n = Math.floor(n\
    \ / p);\n    p *= p;\n  }\n  return res;\n}\n", "  var r = n%p;\n  return r<0\
    \ ? r + p : r;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return (r <\
    \ p) ? r : r + k\n}\n", "  var i = Math.floor(n/p);\n  return (i == n) ? 0 : (n\
    \ - i*p + p) % p;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res\
    \ *= p;\n    }\n    n >>>= 1;\n    p >>>= 1;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res *= p;\n    }\n    n >>= 1;\n\
    \    p *= p;\n  }\n  return res;\n}\n", "  var r = n%p;\n  return r === 0 ? r\
    \ : r+p;\n}\n", "  var res = 1;\n  while (p){\n    if (n & p){\n      res++;\n\
    \    }\n    n >>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while (p){\n\
    \    if (n & p){\n      res++;\n      n &= p-1;\n    }\n    p >>= 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res %\
    \ p) + p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var i = Math.floor(n/p),\n\
    \      mod = n%p;\n  return mod;\n}\n", "  var res = 1;\n  while (p){\n    if\
    \ (n & p){\n      res++;\n      n &= p - 1;\n    }else{\n      n >>= 1;\n    }\n\
    \  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n    \
    \  res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n    p = p % p;\n \
    \ }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n     \
    \ res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n > 0){\n    if(n & 1){\n      res *= p;\n    }\n    n >>=\
    \ 1;\n    p <<= 1;\n  }\n  return res;\n}\n", "  var i = Math.floor(n/p),\n  \
    \    mod = n%p;\n  return mod;\n}\n", "  var res = 1;\n  while (p){\n    if (n\
    \ & p){\n      res++;\n      n &= p - 1;\n    }\n    p >>= 1;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n\
    \    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p) % p;\n    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n\
    }\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return (r < p) ? r : r + k\n\
    }\n\n},{}],9:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_readable.js');\n\
    \n},{\"./lib/_stream_readable.js\":10}],10:[function(require,module,exports){\n\
    exports = module.exports = require('./lib/_stream_writable.js');\nexports.Stream\
    \ = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\n\
    exports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\n\
    exports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\"\
    :9,\"./lib/_stream_passthrough.js\":10,\"./lib/_stream_readable.js\":11,\"./lib/_stream_transform.js\"\
    :12,\"./lib/_stream_writable.js\":13}],11:[function(require,module,exports){\n\
    module.exports = require('./lib/_stream_duplex.js');\n\n},{\"./lib/_stream_duplex.js\"\
    :9}],12:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_transform.js');\n\
    \n},{\"./lib/_stream_transform.js\":12}],13:[function(require,module,exports){\n\
    module.exports = require('./lib/_stream_writable.js');\n\n},{\"./lib/_stream_writable.js\"\
    :13}],14:[function(require,module,exports){", "  var res = 1;\n  while (p){\n\
    \    if (n & p){\n      res += 1;\n    }\n    n >>= 1;\n    p >>= 1;\n  }\n  return\
    \ res;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return r === 0 ? 1\
    \ : r\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res *= p;\n \
    \   }\n    n >>>= 1;\n    p >>>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while(n){\n    if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n    p >>>=\
    \ 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n\
    \      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res * p) % p;\n \
    \   }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n    p >>>= 1;\n  }\n \
    \ return res;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n  return (r <\
    \ p) ? r : r + k\n}\n", "  var r = n%p;\n  return r === 0 ? r : r+p;\n}\n", " \
    \ var r = n%p;\n  return r<0 ? r + p : r;\n}\n", "  var res = 1;\n  while(n >\
    \ 0){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n\
    \  return res;\n}\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n     \
    \ res = (res % p) + p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n    }\n\
    \    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n   \
    \ if(n & 1){\n      res *= p;\n    }\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res =\
    \ 1;\n  while (p){\n    if (n & p){\n      res++;\n      n &= p-1;\n    }\n  \
    \  p = p >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while (p){\n    if (n & p){\n      res++;\n \
    \     n &= p - 1;\n    }\n    p = p >> 1;\n  }\n  return res;\n}\n", "  var r\
    \ = n%p;\n  return r<0 ? r + p : r;\n}\n", "  var res = 1;\n  while(res <= n){\n\
    \    res <<= 1;\n    res %= p;\n  }\n  return res;\n}\n", "  var k = Math.pow(2,n)\n\
    \  var r = p % k\n  return (r < p) ? k - r : r\n}\n", "  var res = 1;\n  while(n\
    \ > 0){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n\
    \  }\n  return res;\n}\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n\
    \      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n \
    \   }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(res\
    \ <= n){\n    res *= p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p + n) % p;\n    }\n    n = Math.floor(n /\
    \ p);\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n\
    \      res *= p;\n    }\n    n >>>= 1;\n    p *= p;\n  }\n  return res;\n}\n",
  "  var i = Math.floor(n/p),\n      mod = n%p;\n  return mod;\n}\n", "  var res =\
    \ 1;\n  while(n){\n    if(n & 1) res = (res * p) % p;\n    n = Math.floor(n /\
    \ p);\n    p *= p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n \
    \   if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n    p\
    \ = p % p;\n  }\n  return res;\n}\n", "  var k = Math.pow(2,n)\n  var r = p %\
    \ k\n  return r === 0 ? 1 : r\n}\n\n},{}],9:[function(require,module,exports){\n\
    module.exports = require(\"./lib/_stream_duplex.js\")\n\n},{\"./lib/_stream_duplex.js\"\
    :10}],10:[function(require,module,exports){", "  var res = 1;\n  while(n){\n \
    \   if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n    p *= p;\n  }\n  return\
    \ res;\n}\n", "  var i = Math.floor(n/p),\n      mod = n%p;\n  return mod;\n}\n",
  "  var r = n%p;\n  return r === 0 ? r : r+p;\n}\n", "  var res = 1;\n  while(n >\
    \ 0){\n    if(n & 1){\n      res *= p;\n    }\n    n >>= 1;\n    p <<= 1;\n  }\n\
    \  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res\
    \ = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n \
    \ return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res =\
    \ (res % p) + p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res\
    \ = 1;\n  while(n){\n    if(n & 1) res *= p;\n    n >>= 1;\n    p *= p;\n  }\n\
    \  return res;\n}\n", "  var k = Math.pow(2,n)\n  var r = n%p\n  return (r==0?0:(r+(p-(k-1))*k))\
    \ % p\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p) % p;\n    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n\
    \    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var i = Math.floor(n/p);\n\
    \  return i%p;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res\
    \ = (res * p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n\
    \    p >>>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n > 0){\n \
    \   if(n & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res %\
    \ p) + p;\n    }\n    n = Math.floor(n / 2);\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n \
    \   n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var res\
    \ = 1;\n  while (p){\n    if (n & p){\n      res++;\n      n &= p-1;\n    }\n\
    \    p = p >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n   \
    \ if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1) res = (res * p) % p;\n    n\
    \ = Math.floor(n / p);\n    p = p % p;\n  }\n  return res;\n}\n", "  var k = Math.pow(2,n)\n\
    \  var r = p % k\n  return (r == 0) ? 1 : (r % (k+1));\n}\n\n},{}],121:[function(require,module,exports){",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res % p) + p;\n    }\n\
    \    n = n >> 1;\n  }\n  return res;\n}\n", "  var k = Math.pow(2,n)\n  var r\
    \ = p % k\n  return r === 0 ? 1 : r\n}\n\n},{}],142:[function(require,module,exports){\n\
    module.exports = require('./lib/_stream_readable.js');\n\n},{\"./lib/_stream_readable.js\"\
    :143}],143:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_writable.js');\n\
    \n},{\"./lib/_stream_writable.js\":144}],144:[function(require,module,exports){",
  "  var r = n%p;\n  return r === 0 ? r : r+p;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n    p >>>= 1;\n  }\n \
    \ return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res =\
    \ (res * p + n) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n \
    \   n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while (p){\n   \
    \ if (n & p){\n      res++;\n      n &= p-1;\n    }\n    p = p >> 1;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res\
    \ * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n\
    \  while (p){\n    if (n & p){\n      res++;\n      n &= p-1;\n    }\n    p >>=\
    \ 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n\
    \      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n\
    \    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(res <= p){\n\
    \    res <<= 1;\n    res |= n & 1;\n    n >>= 1;\n  }\n  return res - p;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res % p) + p;\n    }\n\
    \    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n > 0){\n\
    \    if(n & 1){\n      res *= p;\n    }\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res *\
    \ p + n) % p;\n    }\n    n = Math.floor(n / p);\n  }\n  return res;\n}\n", " \
    \ var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n    }\n\
    \    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n", "  var\
    \ res = 1;\n  while(n){\n    if(n & 1){\n      res *= p;\n    }\n    n >>>= 1;\n\
    \    p >>>= 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n\
    \ & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n    p\
    \ = p % p;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n &\
    \ 1){\n      res *= p;\n    }\n    n >>= 1;\n    p *= p;\n  }\n  return res;\n\
    }\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p) % p;\n\
    \    }\n    n = Math.floor(n / 2);\n    p = p % p;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res * p) % p;\n \
    \   }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p + n) % p;\n    }\n    n = Math.floor(n /\
    \ p);\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n    if(n & 1){\n\
    \      res = (res * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n",
  "  var res = 1;\n  while(n){\n    if(n & 1){\n      res = (res * p + n) % p;\n \
    \   }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res *= p;\n    }\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ res;\n}\n", "  var res = 1;\n  while(n > 0){\n    if(n & 1){\n      res = (res\
    \ * p) % p;\n    }\n    n = n >> 1;\n  }\n  return res;\n}\n", "  var r = n%p;\n\
    \  return r === 0 ? r : r+p;\n}\n", "  var k = Math.pow(2,n)\n  var r = p % k\n\
    \  return (r < p) ? r : r + k\n}\n", "  var res = 1;\n  while(n){\n    if(n &\
    \ 1){\n      res *= p;\n    }\n    n >>>= 1;\n    p >>>= 1;\n  }\n  return res;\n\
    }\n", "  var r = n%p;\n  return r === 0 ? r : r+p;\n}\n", "  var res = 1;\n  while(n){\n\
    \    if(n & 1){\n      res = (res * p) % p;\n    }\n    n = Math.floor(n / 2);\n\
    \    p = p % p;\n  }\n  return res;\n}\n", "  var r = n%p;\n  return r === 0 ?\
    \ r : r+p;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

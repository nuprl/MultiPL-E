name: HumanEval_47_median
language: js
results:
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n < 1) return undefined;\n  if(n === 1) return l[0];\n\
    \  if(n === 2) return Math.max(l[0], l[1]);\n  if(n % 2 === 0) return Math.max(l[(n\
    \ - 1) / 2], l[n / 2 - 1]);\n  if(n % 2 === 1) return Math.min(l[(n - 1) / 2],\
    \ l[n / 2 - 1]);\n  var m = Math.floor((n + 1) / 2);\n  return (l[m] + l[n - m])\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpbwiq5mhq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbwiq5mhq.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return 0\n  if(n === 1) return l[0]\n  if(n ===\
    \ 2) return (l[0] + l[1])/2\n  if(n % 2 === 0) return l[Math.floor(n/2)]\n  return\
    \ median(l.slice(0,Math.floor(n/2)))+(l[Math.floor(n/2)-1]+l[Math.floor(n/2)])/2\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3.5\n\nshould equal\n\n3\n    at test (/tmp/tmp195t467z.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp195t467z.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).pop();\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n3\n    at test (/tmp/tmp0vvl8kt7.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0vvl8kt7.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len%2==0){\n        return l[(len/2)\
    \ - 1];\n    }\n    var mid = Math.floor((len-1)/2);\n    return (l[mid-1] + l[mid])\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.5\n\nshould equal\n\n3\n    at test (/tmp/tmpqhpc_m85.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqhpc_m85.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n    }else{\n\
    \        return (l[mid - 1] + l[mid]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpuecz_9ae.js:23:10)\n    at Object.<anonymous> (/tmp/tmpuecz_9ae.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0); // copy the array\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n\
    \  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp3g5xbj85.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3g5xbj85.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[(len/2) - 1];\n  else return (l[len/2]\
    \ + l[len/2-1])/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpxgedw74r.js:21:10)\n    at Object.<anonymous> (/tmp/tmpxgedw74r.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpjlb5cr0n.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjlb5cr0n.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len % 2 === 0){\n        return l[len/2];\n\
    \    }\n    return ((l[len-1] + l[len/2]) / 2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpt79izwbi.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt79izwbi.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      n = l.length,\n      a = n%2?(l[n-1]+l[n])/2:l[n/2];\n\
    \  \n  if(n === 1) return a;\n  \n  for(var i = n; i>0; i--){\n    if(l[i-1] <\
    \ a) a = l[i-1];\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmptoecpxlt.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmptoecpxlt.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp720s1fl2.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp720s1fl2.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[len/2];\n  var mid = Math.floor(len/2);\n\
    \  return (l[mid-1] + l[mid])/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpz09ccr8k.js:22:10)\n    at Object.<anonymous> (/tmp/tmpz09ccr8k.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0, i = (n - 1) >> 1;\n\
    \  if(a){\n    if(a > b){\n      a = b;\n    }\n  } else {\n    a = b;\n  }\n\
    \  if(i < 0){\n    return a;\n  }\n  if((i & 1) == 0){\n    return l[i >> 1];\n\
    \  }\n  return (l[(i + 1) >> 1] + l[i >> 1]) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpxonkyovs.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxonkyovs.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  if(m === a)return m;\n  if(m === b)return m;\n  if(m === c)return m;\n  if(b\
    \ === c)return m;\n  if(b === a)return m;\n  if(b === b)return m;\n  if(b ===\
    \ c)return m;\n  if(c === a)return m;\n  if(c === b)return m;\n  if(c === c)return\
    \ m;\n  return m;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpvs78l_rf.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvs78l_rf.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = l[0], b = l[1], c = l[2], d = l[3], e = l[4];\n  if(n\
    \ < 1 || a < b || a < c || a < d || b < c || b < d || c < d){\n    return NaN;\n\
    \  }\n  return ((a + b + c + d) / 4) || 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpb2jrg9y5.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb2jrg9y5.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, ~~(l.length\
    \ / 2))[~~(l.length / 2)];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpiipru4a3.js:17:10)\n    at Object.<anonymous> (/tmp/tmpiipru4a3.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var len\
    \ = l.length;\n    if(len%2) return l[len/2];\n    var mid = Math.floor(len/2);\n\
    \    return (l[mid-1] + l[mid])/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpx5thggck.js:21:10)\n    at Object.<anonymous> (/tmp/tmpx5thggck.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return Math.round((a\
    \ - b) / Math.LN2) + 1;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-2\n\nshould equal\n\n3\n    at test (/tmp/tmp041beuu0.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp041beuu0.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b === c) return (a % m === 0 && b % m === 0) ? a : b;\n  if(b <= a && a <=\
    \ c) return a;\n  if(c <= a && a <= b) return b;\n  return c;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpgmr3uuwm.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgmr3uuwm.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var s = l.slice()\n  return s.length ? sortNum(s.sort(function(a, b){\n   \
    \ return a - b\n  })) : (s.length + 1) >> 1\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpe4gtbusz.js:8\n  return s.length ? sortNum(s.sort(function(a, b){\n\
    \           ^\n\nReferenceError: sortNum is not defined\n    at median (/tmp/tmpe4gtbusz.js:8:12)\n\
    \    at test (/tmp/tmpe4gtbusz.js:18:20)\n    at Object.<anonymous> (/tmp/tmpe4gtbusz.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, w = b, i = (n -\
    \ 1) >> 1;\n    if(!i && (v += l[n-1]), !i && (w += l[n-1]), !i) return v / w;\n\
    \    for(; i < n; i++){\n        a = +l[i];\n        if(a > v) v = a;\n      \
    \  if(a > w) w = a;\n    }\n    return v / w;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpul9elsxo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpul9elsxo.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len % 2){\n        return l[len/2];\n\
    \    }\n    var mid = Math.floor(len/2);\n    return (l[mid-1] + l[mid]) / 2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpjkx7l_p0.js:24:10)\n    at Object.<anonymous> (/tmp/tmpjkx7l_p0.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpr5dhwja5.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr5dhwja5.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a\
    \ === b) return (a % m || a % m === 0) && (c % m || c % m === 0);\n  if(a ===\
    \ c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a < b) return\
    \ (a % m || a % m === 0) && (c % m || c % m === 0);\n  return ((a % m || a % m\
    \ === 0) && (b % m || b % m === 0)) && (c % m || c % m === 0);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpeuysyu5l.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeuysyu5l.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0] + +l[1]) / 2, b = (+l[2] + +l[3]) / 2, c = +(+l[4]\
    \ + +l[5]) / 2, d = (+l[6] + +l[7]) / 2;\n  return Math.sqrt((a*a + b*b) * (c*c\
    \ + d*d)) / (n*(n-1));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp9wzbfoa0.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9wzbfoa0.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return 0\n  if(n === 1) return l[0]\n  if(n ===\
    \ 2) return (l[0] + l[1])/2\n  if(n % 2 === 0) return l[Math.floor(n / 2)]\n \
    \ else return (0.5 * (l[Math.floor(n / 2)] + l[Math.ceil(n / 2)]))\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1000\n\nshould equal\n\n8\n    at test (/tmp/tmpdd4kb0px.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdd4kb0px.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0), //clone the array\n      n = l.length, //length of the\
    \ array\n      a = Math.floor(Math.sqrt(n)), //calculate the square root of the\
    \ array length\n      i = a - 1; //loop counter\n  \n  if(n%2==0){\n    return\
    \ l[Math.floor(n/2)];\n  }\n  \n  while(i){\n    if(l[--i]<l[i]){\n      a = i;\n\
    \    }\n  }\n  \n  return l[a + 1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpz8y5gyc9.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz8y5gyc9.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return Math.median(l)\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbz8ef452.js:7\n  return Math.median(l)\n              ^\n\nTypeError:\
    \ Math.median is not a function\n    at median (/tmp/tmpbz8ef452.js:7:15)\n  \
    \  at test (/tmp/tmpbz8ef452.js:15:20)\n    at Object.<anonymous> (/tmp/tmpbz8ef452.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){return a - b});\n    var mid = l.length / 2;\n\
    \    if(l.length % 2){\n        return l[mid];\n    } else {\n        return (l[mid\
    \ - 1] + l[mid]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpd96p5zpy.js:21:10)\n    at Object.<anonymous> (/tmp/tmpd96p5zpy.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b <= a && a <= c && c <= b) return a;\n  if(c <= a && a <= b && b <= c) return\
    \ b;\n  if(b <= a && a <= c && c <= b) return c;\n  return m;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmpcyfz9n8h.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcyfz9n8h.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n < 1) return undefined;\n  if(n === 1) return l[0];\n\
    \n  var mid = Math.floor(n/2);\n  var left = median(l);\n  var right = median(l);\n\
    \  if(l[mid] < left){\n    return left;\n  }\n  if(l[mid] > right){\n    return\
    \ right;\n  }\n  if(l[mid] === left){\n    return l[mid];\n  }\n  if(l[mid] ===\
    \ right){\n    return l[mid];\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpw8yx9sns.js:11\n  var mid = Math.floor(n/2);\n                \
    \ ^\n\nRangeError: Maximum call stack size exceeded\n    at Math.floor (<anonymous>)\n\
    \    at median (/tmp/tmpw8yx9sns.js:11:18)\n    at median (/tmp/tmpw8yx9sns.js:12:14)\n\
    \    at median (/tmp/tmpw8yx9sns.js:12:14)\n    at median (/tmp/tmpw8yx9sns.js:12:14)\n\
    \    at median (/tmp/tmpw8yx9sns.js:12:14)\n    at median (/tmp/tmpw8yx9sns.js:12:14)\n\
    \    at median (/tmp/tmpw8yx9sns.js:12:14)\n    at median (/tmp/tmpw8yx9sns.js:12:14)\n\
    \    at median (/tmp/tmpw8yx9sns.js:12:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortBy(l, function(x){\n    return x;\n  }).length/2;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpveeow834.js:7\n  return sortBy(l, function(x){\n  ^\n\nReferenceError:\
    \ sortBy is not defined\n    at median (/tmp/tmpveeow834.js:7:3)\n    at test\
    \ (/tmp/tmpveeow834.js:17:20)\n    at Object.<anonymous> (/tmp/tmpveeow834.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n < 1) return undefined;\n  if(n === 0) return Infinity;\n\
    \  if(n === 1) return l[0];\n\n  var mid = Math.floor(n/2);\n  var left = median(l);\n\
    \  var right = median(l);\n  if(l[mid] < left){\n    return left;\n  }\n  if(l[mid]\
    \ > right){\n    return right;\n  }\n  return l[mid];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpof61zp2j.js:12\n  var mid = Math.floor(n/2);\n                \
    \ ^\n\nRangeError: Maximum call stack size exceeded\n    at Math.floor (<anonymous>)\n\
    \    at median (/tmp/tmpof61zp2j.js:12:18)\n    at median (/tmp/tmpof61zp2j.js:13:14)\n\
    \    at median (/tmp/tmpof61zp2j.js:13:14)\n    at median (/tmp/tmpof61zp2j.js:13:14)\n\
    \    at median (/tmp/tmpof61zp2j.js:13:14)\n    at median (/tmp/tmpof61zp2j.js:13:14)\n\
    \    at median (/tmp/tmpof61zp2j.js:13:14)\n    at median (/tmp/tmpof61zp2j.js:13:14)\n\
    \    at median (/tmp/tmpof61zp2j.js:13:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a\
    \ === b) return (a % m || a % m === 0) && (c % m || c % m === 0);\n  if(a ===\
    \ c) return (b % m || b % m === 0) && (a % m || a % m === 0);\n  return NaN;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpcfd0tes6.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcfd0tes6.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = l.sort()[Math.floor(l.length/2)];\n    return med;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n20\n\nshould equal\n\n8\n    at test (/tmp/tmpjk9zo6oe.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjk9zo6oe.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        sortIdx = function(a,\
    \ b){\n            return a - b;\n        },\n        medianIdx = len / 2,\n \
    \       media = sort()[medianIdx],\n        i, j, swap;\n\n    for(i = len - 1;\
    \ i >= 0; i--){\n        swap = l[i];\n        j = i;\n        while(j > 0 &&\
    \ l[j - 1] > swap){\n            l[j] = l[j - 1];\n            j--;\n        }\n\
    \        l[j] = swap;\n    }\n\n    return media;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0rmwc0n4.js:13\n        media = sort()[medianIdx],\n          \
    \      ^\n\nReferenceError: sort is not defined\n    at median (/tmp/tmp0rmwc0n4.js:13:17)\n\
    \    at test (/tmp/tmp0rmwc0n4.js:34:20)\n    at Object.<anonymous> (/tmp/tmp0rmwc0n4.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp9ss4yu8p.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9ss4yu8p.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  if(m === a)  return a;\n  if(m === b) return b;\n  if(m === c) return c;\n\
    \  if((a > b) && (a > c))  return a;\n  if((b > c) && (b > a))  return b;\n  if((c\
    \ > a) && (c > b))  return c;\n  return m;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpcib37p9q.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcib37p9q.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sortArr = l.slice().sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = sortArr.length;\n    if(len % 2 === 0){\n        return sortArr[len\
    \ / 2 - 1];\n    }\n    return sortArr[(len - 1) / 2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmpvvkiqrrf.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvvkiqrrf.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return (l[len-1]\
    \ + l[len-2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4.5\n\nshould equal\n\n3\n    at test (/tmp/tmp_qv0j4gx.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_qv0j4gx.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[len/2];\n  var mid = Math.floor(len/2);\n\
    \  return (l[mid-1] + l[mid])/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpk7ar8vmp.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk7ar8vmp.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortBy(l, function(i){\n    return (i + 0.5) >>> 0; // rounding to integer\n\
    \  }).pop(); // median\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp84fd5868.js:7\n  return sortBy(l, function(i){\n  ^\n\nReferenceError:\
    \ sortBy is not defined\n    at median (/tmp/tmp84fd5868.js:7:3)\n    at test\
    \ (/tmp/tmp84fd5868.js:17:20)\n    at Object.<anonymous> (/tmp/tmp84fd5868.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n  if(n < 1)\
    \ return m;\n  if(n === 0) return m;\n  if(b <= a && a <= c){\n    return a;\n\
    \  }\n  if(a <= b){\n    return b;\n  }\n  if(b <= c){\n    return c;\n  }\n \
    \ if(b <= a && c <= a){\n    return a;\n  }\n  if(b <= c && a <= c){\n    return\
    \ c;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(c <= a){\n    return a;\n \
    \ }\n  if(b <= a && a <= c){\n    return a;\n  }\n  if(b <= c && c <= b){\n  \
    \  return c;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(a <= b){\n    return\
    \ b;\n  }\n  if(a <= c){\n    return c;\n  }\n  if(a <= c && b <= c){\n    return\
    \ b;\n  }\n  if(a <= c && c <= b){\n    return c;\n  }\n  if(c <= a){\n    return\
    \ a;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(c <= a){\n    return a;\n \
    \ }\n  if(b <= a){\n    return b;\n  }\n  if(b <= c){\n    return c;\n  }\n  if(b\
    \ <= a && a <= c){\n    return a;\n  }\n  if(b <= c && c <= b){\n    return c;\n\
    \  }\n  if(c <= a){\n    return a;\n  }\n  if(c <= b){\n    return b;\n  }\n \
    \ if(c <= a){\n    return a;\n  }\n  if(b <= a){\n    return b;\n  }\n  if(b <=\
    \ c){\n    return c;\n  }\n  if(b <= a && a <= c){\n    return a;\n  }\n  if(b\
    \ <= c && c <= b){\n    return c;\n  }\n  if(c <= a){\n    return a;\n  }\n  if(c\
    \ <= b){\n    return b;\n  }\n  if(c <= a){\n    return a;\n  }\n  if(b <= a){\n\
    \    return b;\n  }\n  if(b <= c){\n    return c;\n  }\n  if(b <= a && a <= c){\n\
    \    return a;\n  }\n  if(b <= c && c <= b){\n    return c;\n  }\n  if(c <= a){\n\
    \    return \nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpv4to0mm5.js:129\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortBy(l, function(x){\n    return x;\n  }).length / 2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbn1utxlx.js:7\n  return sortBy(l, function(x){\n  ^\n\nReferenceError:\
    \ sortBy is not defined\n    at median (/tmp/tmpbn1utxlx.js:7:3)\n    at test\
    \ (/tmp/tmpbn1utxlx.js:17:20)\n    at Object.<anonymous> (/tmp/tmpbn1utxlx.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sortArr = l.slice().sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = sortArr.length;\n    if(len % 2 === 0){\n        return sortArr[len\
    \ / 2 - 1];\n    }else{\n        return (sortArr[len / 2] + sortArr[len / 2 -\
    \ 1]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpmlq8qulv.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmlq8qulv.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, Math.floor(l.length\
    \ / 2))[0]\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpfrv8ha_d.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfrv8ha_d.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n    }else{\n\
    \        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpzfhkv_99.js:23:10)\n    at Object.<anonymous> (/tmp/tmpzfhkv_99.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = l.length\
    \ / 2;\n  var median;\n  if (l.length % 2) return l[mid];\n  else return (median\
    \ = l[mid-1] + l[mid]) / 2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpw8gbf_xv.js:21:10)\n    at Object.<anonymous> (/tmp/tmpw8gbf_xv.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, ~~(l.length\
    \ / 2))[~~(l.length / 2)];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp291_i9x7.js:17:10)\n    at Object.<anonymous> (/tmp/tmp291_i9x7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var len\
    \ = l.length;\n    if(len % 2 === 0){\n        return l[(len/2) - 1];\n    }\n\
    \    return l[len/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp3rpiiq6e.js:22:10)\n    at Object.<anonymous> (/tmp/tmp3rpiiq6e.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len % 2){\n        return l[len/2];\n\
    \    }\n    var mid = Math.floor(len / 2);\n    return (l[mid-1] + l[mid]) / 2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpbyzk3k_a.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbyzk3k_a.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0), a = l.sort()\n    return (l[a.length-1] + l[a.length/2])\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpv5mg0rvp.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv5mg0rvp.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n   \
    \     return l[half];\n    } else {\n        return (l[half - 1] + l[half]) /\
    \ 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len\
    \ / 2),\n        arr = [];\n    \n    arr.push(l[mid]);\n    \n    for (var i\
    \ = mid; i < len; i++){\n        arr.push(l[i]);\n    }\n    \n    return arr.reduce(function(a,\
    \ b){\n        return a + b;\n    }) / arr.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3.25\n\nshould equal\n\n3\n    at test (/tmp/tmp4pzj3z7b.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4pzj3z7b.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3.25,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return 0\n  var a = l[0]\n  for(var i = 1; i\
    \ < n; i++){\n    var b = l[i]\n    if(a > b) a = b\n  }\n  return a\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpbsl58fl1.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbsl58fl1.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length;\n    if(n % 2 == 0)\n        return l[Math.floor(n / 2)];\n\
    \    else\n        return (l[Math.floor(n / 2)] + l[Math.floor(n / 2) - 1]) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1.5\n\nshould equal\n\n3\n    at test (/tmp/tmpvwoy35n_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvwoy35n_.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a,b){\n        return a-b;\n    });\n\
    \    var half = Math.floor(l.length/2);\n    if(l.length % 2){\n        return\
    \ l[half];\n    }\n    return (l[half-1] + l[half]) / 2.0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = l.length\
    \ / 2;\n  if (l.length % 2){\n    return l[mid];\n  } else {\n    return (l[mid-1]\
    \ + l[mid]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpy8ftweyz.js:23:10)\n    at Object.<anonymous> (/tmp/tmpy8ftweyz.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b <= a && a <= c && c <= b) return a;\n  if(c <= a && a <= b && b <= c) return\
    \ b;\n  if(a <= b && b <= c) return c;\n  return m;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmphw3x9ozm.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmphw3x9ozm.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){return a - b});\n  var mid = l.length / 2;\n\
    \  return l[mid];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpyk5belff.js:17:10)\n    at Object.<anonymous> (/tmp/tmpyk5belff.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).filter(function(elem,\
    \ index, arr){\n    return index === 0 || elem !== arr[index-1];\n  }).length\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.5\n\nshould equal\n\n3\n    at test (/tmp/tmpo8le6hr2.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo8le6hr2.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  if(m === a) return(a);\n  if(m === b) return(b);\n  if(m === c) return(c);\n\
    \  if(b > c) return median(l);\n  if(b === c) return median(l);\n  if(a > c) return\
    \ median(l);\n  if(n === 1) return(l[0]);\n  if(n == 2) return(l[0] + \" \" +\
    \ l[1]);\n  if(n == 3) return(l[0] + \" \" + l[1] + \" \" + l[2]);\n  if(n ==\
    \ 4) return(l[0] + \" \" + l[1] + \" \" + l[2] + \" \" + l[3]);\n  if(n == 5)\
    \ return(l[0] + \" \" + l[1] + \" \" + l[2] + \" \" + l[3] + \" \" + l[4]);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpu20eg424.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu20eg424.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpkz_jxebs.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkz_jxebs.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \    if(m === 0) return a;\n    m += 1;\n    return (m > 0 ? (l[m - 1] + l[m -\
    \ 2]) / 2 : l[m - 1]) / 2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1.5\n\nshould equal\n\n3\n    at test (/tmp/tmp6fmp7pql.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6fmp7pql.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0, i = (n - 1) >>\
    \ 1;\n    if(a > b){\n        do a = a[--i], b = b[--i];\n        while((i < n)\
    \ && a === b);\n    }\n    return a\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-10\n\nshould equal\n\n8\n    at test (/tmp/tmpe_ztmo7v.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe_ztmo7v.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b === c) return (a % m === 0) && (b % m === 0) ? (a / m | 0) : ((a / m |\
    \ 0) + 1 / (m / m | 0)) * m;\n  if(a === b) return (a % m === 0) && (c % m ===\
    \ 0) ? (a / m | 0) : ((a / m | 0) + 1 / (m / m | 0)) * m;\n  if(a === c) return\
    \ (a % m === 0) && (b % m === 0) ? (a / m | 0) : ((a / m | 0) + 1 / (m / m | 0))\
    \ * m;\n  return NaN;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp09h63fvo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp09h63fvo.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp4bv8glgq.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4bv8glgq.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l || [];\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if(len % 2 === 0){\n        return l[len/2];\n\
    \    }\n    return ((l[len/2] + l[len/2-1])/2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp1c7hw1yy.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1c7hw1yy.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2) return l[len/2];\n  else return (l[len-1] + l[len/2]) / 2;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp2z92pq4p.js:20:10)\n    at Object.<anonymous> (/tmp/tmp2z92pq4p.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \    if(m === 0) return a;\n    if(m === 1) return b;\n    if(m === 2) return\
    \ c;\n    \n    var i = Math.floor((n + 1) / 2), d = a[i] - b[i], e = a[i] - c[i];\n\
    \    if(Math.abs(d) < Math.abs(e)) return a[i];\n    if(Math.abs(d) > Math.abs(e))\
    \ return b[i];\n    return c[i];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpehftt4n2.js:23:10)\n    at Object.<anonymous> (/tmp/tmpehftt4n2.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      n = l.length, \n      a = Math.floor(n / 2),\n \
    \     b = n - a,\n      c = l[b],\n      d = l[a];\n  return a === b ? d : (c\
    \ < d ? a : b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1000\n\nshould equal\n\n8\n    at test (/tmp/tmpt2nhevvh.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt2nhevvh.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return NaN\n  if(n === 1) return l[0]\n  if(n\
    \ === 2) return (l[0] + l[1]) / 2\n  if(n % 2 === 0) return l[n / 2 - 1]\n  return\
    \ median(l.slice(0, n / 2 - 1))\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmpb0c22h1z.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb0c22h1z.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = l.length\
    \ / 2;\n  return l[mid];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmphndwlate.js:19:10)\n    at Object.<anonymous> (/tmp/tmphndwlate.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len%2 == 0){\n        return l[(len/2)\
    \ - 1];\n    }\n    return l[len/2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp61t8iy69.js:23:10)\n    at Object.<anonymous> (/tmp/tmp61t8iy69.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).filter(function(elem,\
    \ index, arr){\n    return index === 0 || elem % 2 === 0;\n  }).length / 2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1.5\n\nshould equal\n\n3\n    at test (/tmp/tmpo_k0hl5g.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo_k0hl5g.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpaza6s76a.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaza6s76a.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2) return l[mid];\n    else return (l[mid-1]\
    \ + l[mid]) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp3p9uhb19.js:20:10)\n    at Object.<anonymous> (/tmp/tmp3p9uhb19.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len\
    \ / 2),\n        arr = [];\n\n    for(var i = 0; i < mid; i++){\n        arr.push(l[i]);\n\
    \    }\n\n    for(var i = 0; i < mid; i++){\n        arr.push(l[len - i - 1]);\n\
    \    }\n\n    return arr.reduce(function(a, b){\n        return a + b;\n    })\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6.5\n\nshould equal\n\n3\n    at test (/tmp/tmpbldn5sb2.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbldn5sb2.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l || [];\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if (len % 2 === 0){\n        return l[(len\
    \ / 2) - 1];\n    }\n    var mid = Math.floor(len / 2);\n    return (l[mid] +\
    \ l[mid-1]) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.5\n\nshould equal\n\n3\n    at test (/tmp/tmp8ss2xf2j.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8ss2xf2j.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n  if(n%2==0){\n\
    \    if(n < 1){\n      return a;\n    }\n    m = l[(n-1)/2];\n  }\n  for(var i\
    \ = 1; i < n; i++){\n    var m = l[i];\n    if(Math.abs(m) > Math.abs(m)){\n \
    \     m = m;\n    }\n    if(m > m){\n      m = m;\n    }\n    if(m > b){\n   \
    \   b = m;\n    }\n    if(m > c){\n      c = m;\n    }\n  }\n  return [b, c, m];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 5, 5, 5 ]\n\nshould equal\n\n3\n    at\
    \ test (/tmp/tmp9err0j91.js:37:10)\n    at Object.<anonymous> (/tmp/tmp9err0j91.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 5, 5, 5 ],\n  expected: 3,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, w;\n  if(n < 1) return\
    \ v;\n  if(n < 2) return w;\n  if(n % 2 == 0) return w = (v + w) / 2;\n  while((w\
    \ /= 2) < v) v -= w;\n  return w;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpw9xpeo9t.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw9xpeo9t.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a\
    \ < b) return -1;\n  if(a > b) return 1;\n  if(b < c) return -1;\n  if(b > c)\
    \ return 1;\n  return -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpmmqwzqoy.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmmqwzqoy.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n < 1) return undefined;\n  if(n === 1) return l[0];\n\
    \n  var mid = Math.floor(n/2);\n  var left = median(l);\n  var right = median(l);\n\
    \  if(l[mid] < left){\n    return left;\n  }else if(l[mid] > right){\n    return\
    \ right;\n  }else{\n    return l[mid];\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_vtfd9n6.js:11\n  var mid = Math.floor(n/2);\n                \
    \ ^\n\nRangeError: Maximum call stack size exceeded\n    at Math.floor (<anonymous>)\n\
    \    at median (/tmp/tmp_vtfd9n6.js:11:18)\n    at median (/tmp/tmp_vtfd9n6.js:12:14)\n\
    \    at median (/tmp/tmp_vtfd9n6.js:12:14)\n    at median (/tmp/tmp_vtfd9n6.js:12:14)\n\
    \    at median (/tmp/tmp_vtfd9n6.js:12:14)\n    at median (/tmp/tmp_vtfd9n6.js:12:14)\n\
    \    at median (/tmp/tmp_vtfd9n6.js:12:14)\n    at median (/tmp/tmp_vtfd9n6.js:12:14)\n\
    \    at median (/tmp/tmp_vtfd9n6.js:12:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      n = l.length, \n      a = n%2 ? l[Math.floor(n/2)]\
    \ : l[Math.floor(n/2)-1],\n      b = n%2 ? l[Math.floor(n/2)] : l[Math.floor(n/2)+1];\n\
    \  return (a+b)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpianpy16z.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpianpy16z.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){return a - b;});\n  var mid = l.length / 2;\n\
    \  return l[mid];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpyjkrm6ew.js:17:10)\n    at Object.<anonymous> (/tmp/tmpyjkrm6ew.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.reduce(function(a, b){\n    return a + b\n  }) / l.length\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n171.66666666666666\n\nshould equal\n\n8\n\
    \    at test (/tmp/tmpeyu5tb3q.js:18:10)\n    at Object.<anonymous> (/tmp/tmpeyu5tb3q.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n  expected: 8,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n  if(n%2==0){\n\
    \    for(var i=0; i<n; i++){\n      if(a>b){\n        if(a>m) m = a;\n       \
    \ a = l[i];\n      }\n      else{\n        if(b>m) m = b;\n        b = l[i];\n\
    \      }\n    }\n  }\n  else{\n    for(var i=0; i<n; i++){\n      if(a>b){\n \
    \       if(b>m) m = b;\n        b = l[i];\n      }\n      else{\n        if(a>m)\
    \ m = a;\n        a = l[i];\n      }\n    }\n  }\n  return m;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nInfinity\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp_gtv3r7a.js:40:10)\n    at Object.<anonymous> (/tmp/tmp_gtv3r7a.js:47:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?(a+b)/2:(a>b)?a:b;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpfnv3dizb.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfnv3dizb.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2){\n    return l[len/2];\n  }\n  var mid = Math.floor(len/2);\n\
    \  var a = l[mid];\n  var b = l[mid+1];\n  return (Math.abs(a-b) < 0.0000001)\
    \ ? a : b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp1wm28lof.js:26:10)\n    at Object.<anonymous> (/tmp/tmp1wm28lof.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ half = Math.floor(l.length / 2);\n  return l[half];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpmu6lkp1p.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmu6lkp1p.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmp3v22_bcd.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3v22_bcd.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var s = l.sort(function(a, b){return a - b;});\n  return s[Math.floor(s.length\
    \ / 2)];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpzaokoa41.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzaokoa41.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpzbbd56al.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzbbd56al.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sortArr = l.slice().sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = sortArr.length;\n    if(len % 2){\n        return sortArr[len\
    \ / 2 - 1];\n    }else{\n        return (sortArr[len / 2] + sortArr[len / 2 -\
    \ 1]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpkzmtpewa.js:23:10)\n    at Object.<anonymous> (/tmp/tmpkzmtpewa.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?(a+b)/2:(a>b)? a:b;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpfv45m275.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfv45m275.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0), //clone the array\n        len = l.length, //length of\
    \ the array\n        sorted = l.slice().sort(function(a, b){\n            return\
    \ a - b;\n        }), //sort it\n        medianIdx = (len % 2) ? Math.floor(len\
    \ / 2) : Math.ceil(len / 2), //find the index to split the array\n        median\
    \ = sorted[medianIdx], //the median\n        i, compared;\n    \n    if (len %\
    \ 2) return sorted[medianIdx - 1]; //if len is even, return the average of the\
    \ two middle values\n    \n    compared = medianIdx - 1; //if median is at the\
    \ center, the index to compare is (len - 1) (because of the sorted array)\n  \
    \  for (i = len - 1; i > compared; i--){\n        compared = i;\n    }\n    return\
    \ sorted[compared];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpdcn0xxas.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdcn0xxas.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l || [];\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if(len%2==0){\n        return l[(len/2) -\
    \ 1];\n    }\n    return l[len/2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpc_e6flxy.js:23:10)\n    at Object.<anonymous> (/tmp/tmpc_e6flxy.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n   \
    \     return l[half];\n    }\n    return 0.5 * (l[half-1] + l[half]);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n\
    \  return Math.sqrt(a * a + b * b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp5td945zg.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5td945zg.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sortArr = l.slice();\n  sortArr.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = sortArr.length;\n  if(len % 2 === 0){\n    return sortArr[len\
    \ / 2 - 1];\n  }\n  else{\n    return (sortArr[len / 2] + sortArr[len / 2 - 1])\
    \ / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp3elrxtxi.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3elrxtxi.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])\
    \ / 3, c = +(+l[6] + +l[7] + +l[8]) / 3;\n  return Math.sqrt(a * a + b * b + c\
    \ * c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpmbfz8z_t.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmbfz8z_t.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        sortedArr = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        });\n    if(len%2) return sortedArr[len/2];\n\
    \    return sortedArr[len/2-1] + sortedArr[len/2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp5qybb8s9.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5qybb8s9.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0, aMedian = +Infinity,\
    \ aCount = 0, iMedian = 0;\n  for(var i = 0; i < n; i++){\n    var v = +l[i];\n\
    \    if(v === a) aCount++;\n    else if(v === b) bCount++;\n    else if(aCount\
    \ > bCount){\n      aMedian = a;\n      iMedian = i;\n      a = v;\n      aCount\
    \ = 1;\n    }\n    else if(bCount > aCount){\n      bMedian = b;\n      iMedian\
    \ = i;\n      b = v;\n      bCount = 1;\n    }\n  }\n  return iMedian === (n -\
    \ 1)? Math.min(aMedian, bMedian) : (aMedian + bMedian) / 2;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphx_362qf.js:12\n    else if(aCount > bCount){\n               \
    \      ^\n\nReferenceError: bCount is not defined\n    at median (/tmp/tmphx_362qf.js:12:22)\n\
    \    at test (/tmp/tmphx_362qf.js:33:20)\n    at Object.<anonymous> (/tmp/tmphx_362qf.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var s = l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(s.length\
    \ / 2);\n  if (half % 1) return s[half];\n  var median = s[half-1];\n  for (var\
    \ i = (half - 1) ; i > 0; i--){\n    if (Math.abs(s[i] - median) < Math.abs(s[i-1]\
    \ - median)){\n      median = s[i];\n    }\n  }\n  return median;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpsxyuincw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsxyuincw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  return (m === b && m === c) ? m : ((a > b) ? m : ((c > b) ? m : ((b > c) ?\
    \ m : a)));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpg6mcdl7u.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg6mcdl7u.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n    }else{\n\
    \        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp2wlxysxx.js:23:10)\n    at Object.<anonymous> (/tmp/tmp2wlxysxx.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return a < b\n      ? Math.ceil((a\
    \ + (b - a)) / 2)\n      : Math.floor((a + (b - a)) / 2);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpjg3558zf.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjg3558zf.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmp2spcd62_.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2spcd62_.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len\
    \ / 2),\n        arr = [];\n    \n    arr.push(l[mid]);\n    \n    for(var i =\
    \ 0; i < mid; i++){\n        arr.push(l[i]);\n    }\n    \n    arr.push(l[mid]);\n\
    \    \n    return arr.reduce(function(a, b){\n        return a + b;\n    }) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmp3mknwk6f.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3mknwk6f.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2.):((l[n-2]+l[n-1])/2.);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpldt2mzf6.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpldt2mzf6.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, Math.floor(l.length\
    \ / 2))[0]\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpb6_d8hey.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb6_d8hey.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n < 1) return null;\n  var a = l[0], b = l[1], c =\
    \ l[2], d = l[3], e = l[4];\n  if(n % 2 == 0){\n    return Math.max(e, Math.min(b,\
    \ c));\n  } else {\n    return Math.max(e, Math.min(b, c, d));\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n3\n    at test (/tmp/tmppmw6mq5b.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmppmw6mq5b.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if (len % 2 === 0){\n        return l[len\
    \ / 2 - 1];\n    }\n    var mid = Math.floor(len / 2);\n    if (len % 2 === 1){\n\
    \        return l[mid + 1];\n    }\n    return ((l[mid - 1] + l[mid]) / 2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpxgc9o5h9.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxgc9o5h9.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b <= a && a <= c && c <= b) return a;\n  if(c <= a && a <= b && b <= c) return\
    \ b;\n  if(b <= a && a <= c && c <= b) return c;\n  return m;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmp0z7fss4w.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0z7fss4w.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n\
    \  return Math.sqrt(a*b - Math.pow(a,2) + Math.pow(b,2));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp3hoqy962.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3hoqy962.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2){\n    return l[len/2];\n  }\n  var mid = Math.floor(len\
    \ / 2);\n  var a = l[mid];\n  var b = l[mid+1];\n  return (a + b) / 2;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpd_0otrs2.js:26:10)\n    at Object.<anonymous> (/tmp/tmpd_0otrs2.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.reduce(function(prev, cur){\n    return prev + cur;\n  }, 0) / l.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n171.66666666666666\n\nshould equal\n\n8\n\
    \    at test (/tmp/tmphjyg5pqy.js:18:10)\n    at Object.<anonymous> (/tmp/tmphjyg5pqy.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n  expected: 8,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len % 2 === 0){\n    return l[(len-1)/2] + (l[len/2-1] || 0);\n  }\n  return\
    \ l[len/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpd6iqldld.js:22:10)\n    at Object.<anonymous> (/tmp/tmpd6iqldld.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n \
    \ else{\n    var mid = Math.floor(len / 2);\n    var a = l[mid];\n    var b =\
    \ l[len - 1 - mid];\n    return (a + b) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmp33j09d9t.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp33j09d9t.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return Math.ceil((a\
    \ - b) / 2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-1\n\nshould equal\n\n3\n    at test (/tmp/tmpai_5p6_x.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpai_5p6_x.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        a,\n        sort,\n\
    \        i;\n\n    if(len % 2 === 0){\n        l.sort(function(a, b){\n      \
    \      return a - b;\n        });\n        a = l[(len - 1) / 2];\n        for(i\
    \ = len / 2; i > 0; i -= 1){\n            if(l[i - 1] < a){\n                a\
    \ = l[i - 1];\n            }\n            else{\n                break;\n    \
    \        }\n        }\n        return a;\n    }\n    else{\n        l.sort(function(a,\
    \ b){\n            return b - a;\n        });\n        a = l[(len - 1) / 2];\n\
    \        for(i = len / 2; i > 0; i -= 1){\n            if(l[i - 1] > a){\n   \
    \             a = l[i - 1];\n            }\n            else{\n              \
    \  break;\n            }\n        }\n        return a;\n    }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n8\n    at test\
    \ (/tmp/tmp4scm7uhk.js:51:10)\n    at Object.<anonymous> (/tmp/tmp4scm7uhk.js:57:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return NaN\n  if(n === 1) return l[0]\n  if(n\
    \ === 2) return (\n    (l[0] + l[1])/2\n  )\n  var m = l[Math.floor(n/2)]\n  if(n\
    \ % 2) return (\n    (m+l[Math.floor(n/2)-1])/2\n  )\n  return (\n    (m-l[Math.floor(n/2)-1])/2\n\
    \  )\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1.5\n\nshould equal\n\n3\n    at test (/tmp/tmpbc03e4j3.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbc03e4j3.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return 0\n  if(n === 1) return l[0]\n  if(n ===\
    \ 2) return (l[0] + l[1])/2\n  if(n % 2 === 0) return l[Math.floor(n/2)]\n  if(n%2===1)\
    \ return median(l[Math.floor(n/2)-1], l[Math.floor(n/2)])\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp86vpbkv0.js:20:10)\n    at Object.<anonymous> (/tmp/tmp86vpbkv0.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return Math.ceil((a\
    \ - b) / 2);\n}\n},{}],4:[function(require,module,exports){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1821t_rz.js:10\n},{}],4:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return Math.round((a\
    \ - b) / Math.LN2) + 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-2\n\nshould equal\n\n3\n    at test (/tmp/tmptdfpdy9q.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmptdfpdy9q.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n % 2 == 0)\n    return l[(n - 1) / 2] || 0;\n  else\n\
    \    return (l[n / 2 - 1] + l[n / 2]) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp0mdyfxmv.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0mdyfxmv.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sort(l).length / 2;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpysejys90.js:7\n  return sort(l).length / 2;\n  ^\n\nReferenceError:\
    \ sort is not defined\n    at median (/tmp/tmpysejys90.js:7:3)\n    at test (/tmp/tmpysejys90.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpysejys90.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return sortBy(l, function(x){\n    return x;\n  }).length / 2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbyvdq5_x.js:7\n  return sortBy(l, function(x){\n  ^\n\nReferenceError:\
    \ sortBy is not defined\n    at median (/tmp/tmpbyvdq5_x.js:7:3)\n    at test\
    \ (/tmp/tmpbyvdq5_x.js:17:20)\n    at Object.<anonymous> (/tmp/tmpbyvdq5_x.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[(len/2)-1];\n  else return (l[len/2] +\
    \ l[len/2-1])/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmphd3bucj5.js:21:10)\n    at Object.<anonymous> (/tmp/tmphd3bucj5.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  return (m == 1) ? m : (m < 0.5 ? m + (n - 1) : m - (n - 1));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpq6g1m_d6.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq6g1m_d6.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        a,\n        i;\n\n\
    \    for(i = len/2; i > 0; i -= 1){\n        a = l[i];\n        if(len%2===0){\n\
    \            if(a < l[(i+1)/2]){\n                return a;\n            }\n \
    \           else{\n                return l[(i+1)/2];\n            }\n       \
    \ }\n        else{\n            if(a < a[(i+1)/2]){\n                return a;\n\
    \            }\n            else{\n                return a[(i+1)/2];\n      \
    \      }\n        }\n    }\n    return l[len/2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0_3cq8t0.js:23\n            if(a < a[(i+1)/2]){\n             \
    \       ^\n\nTypeError: Cannot read property '1.75' of undefined\n    at median\
    \ (/tmp/tmp0_3cq8t0.js:23:21)\n    at test (/tmp/tmp0_3cq8t0.js:39:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp0_3cq8t0.js:46:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp_6h5e0vd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_6h5e0vd.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp7qx9qepv.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7qx9qepv.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        sortedArr = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        });\n    if(len%2){\n        return\
    \ sortedArr[len/2];\n    }\n    return sortedArr[(len-1)/2 | 0];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpxqv7_isr.js:23:10)\n    at Object.<anonymous> (/tmp/tmpxqv7_isr.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var len\
    \ = l.length;\n    if(len%2==0){\n        return l[(len/2)-1];\n    }\n    return\
    \ l[(len-1)/2];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmp_19q6r88.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_19q6r88.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n   \
    \     return l[half];\n    }\n    return (l[half - 1] + l[half]) / 2.0;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  return (m === b && m === c) ? m : ((a > b) ? m : ((c > b) ? m : ((b > c) ?\
    \ m : a)));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmpk_8pbano.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk_8pbano.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).filter(function(elem,\
    \ index, arr){\n    return index === 0 || elem !== arr[index-1];\n  }).length\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2.5\n\nshould equal\n\n3\n    at test (/tmp/tmpda1x8d8u.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpda1x8d8u.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \    if(m === 0) return a;\n    m += 1;\n    return (m > 0 ? (l[m - 1] + l[m -\
    \ 2]) / m : a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1.5\n\nshould equal\n\n3\n    at test (/tmp/tmp3tljrj0u.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3tljrj0u.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      n = l.length, \n      a = l[0], \n      b = l[1],\
    \ \n      c = l[2], \n      d = l[3], \n      m = l && l.length >= 4 ? l[l.length\
    \ / 2] : (a + b + c + d) / 4;\n  if(m === undefined){\n    return NaN;\n  }\n\
    \  if(n < 3){\n    return m;\n  }\n  if(n === 0){\n    return m;\n  }\n  if(n\
    \ === 1){\n    return l[0];\n  }\n  if(n === 2){\n    return l[0] + l[1];\n  }\n\
    \  if(n === 3){\n    return l[0] + l[1] + l[2];\n  }\n  if(n === 4){\n    return\
    \ l[0] + l[1] + l[2] + l[3];\n  }\n  if(n === 5){\n    return l[0] + l[1] + l[2]\
    \ + l[3] + l[4];\n  }\n  if(n === 6){\n    return l[0] + l[1] + l[2] + l[3] +\
    \ l[4] + l[5];\n  }\n  if(n === 7){\n    return l[0] + l[1] + l[2] + l[3] + l[4]\
    \ + l[5] + l[6];\n  }\n  if(n === 8){\n    return l[0] + l[1] + l[2] + l[3] +\
    \ l[4] + l[5] + l[6] + l[7];\n  }\n  if(n === 9){\n    return l[0] + l[1] + l[2]\
    \ + l[3] + l[4] + l[5] + l[6] + l[7] + l[8];\n  }\n  if(n === 10){\n    return\
    \ l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9];\n  }\n\
    \  if(n === 11){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] +\
    \ l[7] + l[8] + l[9] + l[10];\n  }\n  if(n === 12){\n    return l[0] + l[1] +\
    \ l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10] + l[11];\n  }\n\
    \  if(n === 13){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] +\
    \ l[7] + l[8] + l[9] + l[10] + l[11] + l[12];\n  }\n  if(n === 14){\n    return\
    \ l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10]\
    \ + l[11] + l[12\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz9lvtwpy.js:64\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \    if(m === 0) return a;\n    if(m === 1) return b;\n    if(m === 2) return\
    \ c;\n    \n    var i = Math.floor((n + 1) / 2), k = Math.ceil((n + 2) / 2);\n\
    \    if(i < k){\n        return median(l[++i]);\n    }\n    if(i < k + 1) return\
    \ median(l[--k]);\n    if(k < n - 1){\n        return median(l[--k + 1]);\n  \
    \  }\n    return median(l[--k - 1]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5ml3haop.js:7\n    var n = l.length, a = +l[0], b = +l[1], c =\
    \ +l[2], m = Math.max(a, b, c);\n              ^\n\nTypeError: Cannot read property\
    \ 'length' of undefined\n    at median (/tmp/tmp5ml3haop.js:7:15)\n    at median\
    \ (/tmp/tmp5ml3haop.js:20:12)\n    at median (/tmp/tmp5ml3haop.js:14:16)\n   \
    \ at test (/tmp/tmp5ml3haop.js:28:20)\n    at Object.<anonymous> (/tmp/tmp5ml3haop.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  return (m === b && m === c) ? m : (m + Math.min(a, b, c)) / 2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpaynkqay9.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaynkqay9.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n  else{\n    return\
    \ (l[len / 2] + l[len / 2 - 1]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp37wgtg7a.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp37wgtg7a.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len % 2 === 0){\n        return l[(len\
    \ / 2) - 1];\n    }\n    return l[len / 2];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp1vi6s2h9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp1vi6s2h9.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  return (m == a ? (b = c, c = a, a = b, b = c) : m = Math.max(a, b, c))\n  \
    \    ? m : ((a > b) ? a : (b < c) ? b : c);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-10\n\nshould equal\n\n8\n    at test (/tmp/tmpj7uubbke.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj7uubbke.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp7dfluduu.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7dfluduu.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = l.sort()[Math.floor(l.length/2)];\n    return med;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n20\n\nshould equal\n\n8\n    at test (/tmp/tmpi0dlu875.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi0dlu875.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[len/2];\n  var mid = Math.floor(len/2);\n\
    \  var a = l[mid];\n  var b = l[mid+1];\n  return (a+b)/2;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp734i1rtq.js:24:10)\n    at Object.<anonymous> (/tmp/tmp734i1rtq.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return (l[len-1]\
    \ + l[len-2])/2\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4.5\n\nshould equal\n\n3\n    at test (/tmp/tmp0zswnlow.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0zswnlow.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \    if(m === 0) return a;\n    if(m === 1) return b;\n    if(m === 2) return\
    \ c;\n    if(m % 2 === 0) return (a + b) / 2;\n    return Math.ceil((a + b) /\
    \ 2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmp97g1vq5d.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp97g1vq5d.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)? Math.round(((b-a)/(n-1))*Math.sqrt(n))\
    \ : a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmphe0egmlv.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmphe0egmlv.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var sortArr = l.slice().sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = sortArr.length;\n    if(len % 2){\n        return sortArr[(len\
    \ - 1) / 2];\n    }else{\n        return sortArr[(len - 1) / 2];\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n8\n    at test\
    \ (/tmp/tmpanchkze2.js:24:10)\n    at Object.<anonymous> (/tmp/tmpanchkze2.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var med = l.sort()[Math.floor(l.length/2)];\n    return med;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n20\n\nshould equal\n\n8\n    at test (/tmp/tmpm7od95_a.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm7od95_a.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \    if(m === 0) return a;\n    m += 1;\n    while(m < n){\n        a = +l[m];\n\
    \        b = +l[m + 1];\n        c = +l[m + 2];\n        m = Math.max(a, b, c);\n\
    \    }\n    return (a + b + c) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpyw0whbuu.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyw0whbuu.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n    for(var\
    \ i = 0; i < n; i++){\n        var d = a%c + b%c;\n        if(d === 0) continue;\n\
    \        else if(d > 0){\n            a = b;\n            b = c;\n           \
    \ c = d;\n        }\n        else {\n            m = Math.min(a, m);\n       \
    \ }\n    }\n    return m === -Infinity ? NaN : m;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nInfinity\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpkifzbtxt.js:28:10)\n    at Object.<anonymous> (/tmp/tmpkifzbtxt.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){return a - b});\n  var mid = l.length / 2;\n\
    \  return l[mid];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmprxtlby0c.js:17:10)\n    at Object.<anonymous> (/tmp/tmprxtlby0c.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[len/2];\n  var mid = Math.floor(len/2);\n\
    \  var midVal = median(l[mid]);\n  if(len%2) return midVal;\n  else return (midVal\
    \ + l[mid-1])/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp55uxramy.js:24:10)\n    at Object.<anonymous> (/tmp/tmp55uxramy.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return (a + b)\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmp35o5wlli.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp35o5wlli.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1], c = isNaN(a) ? b : a, d = isNaN(b)\
    \ ? a : b;\n  return c + ((d - c) < (a > b ? d : a) - (b > a ? b : b));\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-10\n\nshould equal\n\n8\n    at test (/tmp/tmp4ivxvf5y.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4ivxvf5y.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sortArr = l.slice().sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = sortArr.length;\n  if(len % 2 === 0){\n    return sortArr[len / 2 - 1];\n\
    \  }\n  else{\n    return sortArr[(len - 1) / 2];\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n8\n    at test (/tmp/tmphi6v3tlb.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmphi6v3tlb.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var sortArr = l.slice().sort(function(a,b){\n    return a-b;\n  });\n  var\
    \ len = sortArr.length;\n  if(len%2==0){\n    return sortArr[len/2];\n  }else{\n\
    \    return (sortArr[len/2]+sortArr[len/2-1])/2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpyz0b0s8m.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyz0b0s8m.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var half = Math.floor(l.length / 2);\n    if(l.length % 2) return\
    \ l[half];\n    else return (l[half - 1] + l[half]) / 2.0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n8\n    at test (/tmp/tmpywniaywp.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpywniaywp.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 8,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpd4yodq61.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd4yodq61.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length\n  if(n < 1) return null\n  if(n === 1) return l[0]\n  if(n\
    \ === 2) return l[0] + l[1]\n  if(n % 2 === 0) return l[n / 2 - 1]\n  if(n % 2\
    \ === 1) return l[n / 2]\n  if(n%2==0) return (l[(n-1)/2] + l[(n+1)/2])/2\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp3rmmnmqj.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3rmmnmqj.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpasgczjc2.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpasgczjc2.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len\
    \ / 2),\n        arr = [];\n\n    while (len) {\n        arr.push(l[mid--]);\n\
    \        len--;\n    }\n\n    return arr.reduce(function(a, b){\n        return\
    \ a + b;\n    }) / arr.length;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp6da8j17f.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6da8j17f.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \    if(m === a)  return a;\n    if(m === b) return b;\n    if(m === c) return\
    \ c;\n    return m;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpyblc46mt.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyblc46mt.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2.0;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpj1jhvhq9.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj1jhvhq9.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = +l[0], b = +l[n-1];\n    return (n>1)? Math.round(((b-a)/(n-1))*Math.sqrt(n))\
    \ : a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmp7117tq7y.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7117tq7y.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n\
    \  return Math.sqrt(a*b - Math.pow(a,2) + Math.pow(b,2));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp9x8d_i67.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9x8d_i67.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmptvcbfhrn.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmptvcbfhrn.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n / 2),\n  \
    \    b = n - a,\n      c = l[a],\n      d = l[b];\n  return c == d? Math.max(Math.abs(c\
    \ - b), Math.abs(d - a)) : Math.abs(c - d)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmphvh5p565.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphvh5p565.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], v = a, i = (n - 1) >> 1;\n\
    \  if(a === b) return v;\n  if(a > b){\n    do v = a, a = b, b = v; while(a <\
    \ b);\n  }\n  if(a === b) return v;\n  if(v === c) return Math.min(a, c);\n  while(--i\
    \ >= 0){\n    if(l[i] < a) a = l[i];\n    else if(l[i] > b) b = l[i];\n    else\
    \ break;\n  }\n  return (v < a ? l[i++] : b < a ? l[i--] : v);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmptc9_8ip2.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmptc9_8ip2.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n\
    \  if(m === a) return(a);\n  if(m === b) return(b);\n  if(m === c) return(c);\n\
    \  if((a > b) && (a > c)) return(a);\n  if((b > c) && (b > a)) return(b);\n  if((c\
    \ > a) && (c > b)) return(c);\n  if(n) return ((a + b) / 2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpp336m536.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp336m536.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n   \
    \     return l[half];\n    }\n    return ((l[half - 1] + l[half]) / 2);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmps8gf7ufj.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmps8gf7ufj.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, Math.floor(l.length\
    \ / 2));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2 ]\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmph1e6yx19.js:17:10)\n    at Object.<anonymous> (/tmp/tmph1e6yx19.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2):((l[n-1]+l[n-2]+(a+b)/2)/2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpf1n9n20p.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf1n9n20p.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0),\n        len = l.length,\n        sortedArr = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        });\n    if(len%2) return sortedArr[len/2];\n\
    \    if(sortedArr.length % 2) return sortedArr[len/2-1];\n    var middle = Math.floor(len/2),\n\
    \        median = sortedArr[middle];\n    return median + ((len%2)?(sortedArr[middle-1]\
    \ - median):(sortedArr[middle+1] - median));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpb5t8zjmi.js:24:10)\n    at Object.<anonymous> (/tmp/tmpb5t8zjmi.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2) return l[len/2];\n  var mid = Math.floor(len/2);\n\
    \  return (l[mid-1] + l[mid])/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmp16t66sp6.js:22:10)\n    at Object.<anonymous> (/tmp/tmp16t66sp6.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      len = l.length,\n      a = +l.sort(function(a, b){\n\
    \        return a - b;\n      }),\n      b = +l[len - 1];\n  return len > 0 ?\
    \ (a + b) / 2 : undefined;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpp0m0ss9p.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp0m0ss9p.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0); // copy the list\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len/2)\
    \ - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpu4jhpozx.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu4jhpozx.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n / 2),\n  \
    \    b = n - a,\n      c = new Array(a),\n      i, j, k;\n\n  for (i = 0; i <\
    \ a; ++i) c[i] = l[i];\n  for (i = 0; i < b; ++i) c[a + i] = l[a + i];\n\n  for\
    \ (i = n - 1; i >= 0; --i) {\n    k = c[i];\n    if (k != null && k != -Infinity)\
    \ {\n      j = i;\n      while (j != a) {\n        c[j] = c[j - 1];\n        ++j;\n\
    \      }\n      --j;\n      c[j] = k;\n    }\n  }\n\n  return (c[0] && c[0] ===\
    \ -Infinity) ? Infinity : ((c[b] && c[b] <= a) ? c[b] : ((c[b - 1] && c[b - 1]\
    \ >= 0) ? c[b - 1] : c[b]));\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "\n<--- Last few GCs --->\n\n[8424:0x4ed8b60]     1072 ms: Scavenge 808.4\
    \ (841.5) -> 808.4 (841.5) MB, 37.4 / 0.0 ms  (average mu = 1.000, current mu\
    \ = 1.000) allocation failure \n[8424:0x4ed8b60]     1553 ms: Scavenge 1211.7\
    \ (1244.8) -> 1211.7 (1244.8) MB, 55.4 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n[8424:0x4ed8b60]     2387 ms: Scavenge 1816.7\
    \ (1849.8) -> 1816.7 (1849.8) MB, 143.5 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR:\
    \ invalid array length Allocation failed - JavaScript heap out of memory\n 1:\
    \ 0xa04200 node::Abort() [node]\n 2: 0x94e4e9 node::FatalError(char const*, char\
    \ const*) [node]\n 3: 0xb797be v8::Utils::ReportOOMFailure(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 4: 0xb79b37 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 5: 0xd343c5  [node]\n 6: 0xd0cf05  [node]\n 7: 0xe95afe\
    \  [node]\n 8: 0xe95c4d  [node]\n 9: 0x1032b83 v8::internal::Runtime_GrowArrayElements(int,\
    \ unsigned long*, v8::internal::Isolate*) [node]\n10: 0x14011f9  [node]\n"
  exit_code: -6
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice(0), // copy the list\n        len = l.length, // cache its\
    \ length\n        a, // first element\n        v, // current element\n       \
    \ i, // loop counter\n        mid, // middle element\n        s, // number of\
    \ elements\n        median;\n    \n    if (len % 2 === 0) { // is even\n     \
    \   mid = l[(len - 1) / 2];\n        a = l[len - 1];\n        \n        for (i\
    \ = len; i > 1 && a > mid && (a = l[--i]); i--);\n        \n        median = a\
    \ + (i - len) * 0.5;\n    } else {\n        mid = l[len / 2];\n        a = l[len\
    \ - 1];\n        \n        for (i = len; i > 1 && a > mid && (a = l[--i]); i--);\n\
    \        \n        median = a + (i - len) * 0.5;\n    }\n    \n    return median;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n3\n    at test (/tmp/tmp6f3zeh0f.js:40:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6f3zeh0f.js:47:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2])/2;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpbs7uzt96.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbs7uzt96.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return (a - b)\
    \ / Math.max(n, 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-0.4\n\nshould equal\n\n3\n    at test (/tmp/tmpo74vvk2d.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo74vvk2d.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -0.4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[(len/2)-1]\
    \ + l[len/2])/2;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmp67k7xv1t.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp67k7xv1t.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var s = l.sort(function(a, b){return a - b});\n  return (s.length % 2) ? s[(s.length\
    \ / 2) - 1] : s[(s.length / 2)];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmpvdwlm8a9.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvdwlm8a9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n    for(var\
    \ i = 0; i < n; i++){\n        var x = l[i];\n        if(x == m) continue;\n \
    \       else if(x < m) a = x;\n        else if(x > m) b = x;\n        else c =\
    \ x;\n    }\n    return c == +Infinity ? NaN : ((a - b) / c);\n}\nexports.median\
    \ = median;\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpfsrwnodk.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfsrwnodk.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var half = Math.floor(l.length / 2);\n    if(l.length % 2) return\
    \ l[half];\n    else return (l[half - 1] + l[half]) / 2.0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2.):((l[n-2]+l[n-1])/2.);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n3\n    at test (/tmp/tmpxv04inlb.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxv04inlb.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len%2) return l[(len/2)-1];\n    else\
    \ return (l[len/2-1] + l[len/2])/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n3\n    at test\
    \ (/tmp/tmptgepsi22.js:21:10)\n    at Object.<anonymous> (/tmp/tmptgepsi22.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = l[0], b = l[1], c = l[2], m = +Infinity;\n  if(n%2) return\
    \ (a+b)/2;\n  for(var i = (n - 1)/2; i > 0; --i){\n    if(Math.abs(b - a) <= m){\n\
    \      m = Math.abs(b - a); a = b; b = i;\n    }\n  }\n  return a\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n3\n    at test (/tmp/tmpjownytty.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjownytty.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n \
    \ if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a\
    \ === b) return (a % m || a % m === 0) && (c % m || c % m === 0);\n  if(a ===\
    \ c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a < b) return\
    \ (a % m || a % m === 0) && (c % m || c % m === 0);\n  if(a > b) return (a % m\
    \ || a % m === 0) && (b % m || b % m === 0);\n  return NaN;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpqjjv4ql4.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjjv4ql4.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0, Math.floor(l.length\
    \ / 2))[0] || 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n3\n    at test (/tmp/tmpr3u0b026.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3u0b026.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  var n = l.length;\n  if(n % 2 == 0)\n    return l[Math.floor(n / 2)];\n  else\n\
    \    return (l[n / 2 - 1] + l[n / 2]) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nNaN\n\nshould equal\n\n3\n    at test (/tmp/tmpykkwxste.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpykkwxste.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.reduce(function(a, b){\n    return a + Math.abs(b.value - median(b.value));\n\
    \  }, 0) / l.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsh2yoobk.js:7\n  return l.reduce(function(a, b){\n           ^\n\
    \nTypeError: Cannot read property 'reduce' of undefined\n    at median (/tmp/tmpsh2yoobk.js:7:12)\n\
    \    at /tmp/tmpsh2yoobk.js:8:35\n    at Array.reduce (<anonymous>)\n    at median\
    \ (/tmp/tmpsh2yoobk.js:7:12)\n    at test (/tmp/tmpsh2yoobk.js:17:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpsh2yoobk.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n"
  exit_code: 1
  status: Exception
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n \
    \   });\n    var len = l.length;\n    if(len % 2 === 0){\n        return l[(len\
    \ / 2) - 1];\n    }\n    var mid = Math.floor(len / 2);\n    var a = l[mid];\n\
    \    var b = l[mid+1];\n    return (a + b) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3.5\n\nshould equal\n\n3\n    at test (/tmp/tmpbvv4vaai.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbvv4vaai.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n\
    \  return l.reduce(function(a, b){\n    return a + b >> 1;\n  }, 0) / l.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0.6\n\nshould equal\n\n3\n    at test (/tmp/tmpq4784yol.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq4784yol.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0.6,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

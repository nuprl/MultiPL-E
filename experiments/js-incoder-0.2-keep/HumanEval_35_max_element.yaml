name: HumanEval_35_max_element
language: js
prompt: "//Return maximum element in the list.\n// >>> max_element([1, 2, 3])\n//\
  \ 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// 123\nfunction\
  \ max_element(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
completions: ["  return Math.max.apply(Math, l)\n}\n", "    var max = l[0], max_idx\
    \ = 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n     \
    \       max = l[i];\n            max_idx = i;\n        }\n    }\n    return max_idx;\n\
    }\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_idx = i;\n\
    \        }\n    }\n    return max;\n}\n", "  var max = l[0], maxIndex = 0, i;\n\
    \  for(i = 0; i < l.length; i++){\n    if(l[i] > max){\n      max = l[i];\n  \
    \    maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n", "    var max_value =\
    \ l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_value){\n\
    \            max_value = l[i];\n        }\n    }\n    return max_value;\n}\n",
  "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length; i++){\n      \
    \  if(l[i] > max){\n            max = l[i];\n            max_i = i;\n        }\n\
    \    }\n    return max_i;\n}\n", "    return Math.max.apply(Math, l)\n}\n", " \
    \ var max = l[0], maxi = 1;\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ > max){\n      max = l[i];\n      maxi = i;\n    }\n  }\n  return maxi;\n}\n",
  "    var max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i]\
    \ > max){\n            max = l[i];\n        }\n    }\n    return max;\n}\n", " \
    \   var max = l[0], maxi = 1;\n    for(var i = 1; i < l.length; i++){\n      \
    \  if(l[i] > max){\n            max = l[i];\n            maxi = i;\n        }\n\
    \    }\n    return maxi;\n}\n", "  var max = l[0], maxIndex = 0, i, j, tmp;\n\
    \  for(i = 0, j = l.length; i < j; i++){\n    tmp = l[i];\n    if(tmp > max){\n\
    \      max = tmp;\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n",
  "  return Math.max.apply(Math, l)\n}\n", "  return Math.max.apply(null, l);\n}\n",
  "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n     \
    \   if(l[i] > max){\n            max = l[i];\n            max_idx = i;\n     \
    \   }\n    }\n    return max_idx;\n}\n", "  return l.reduce(function(prev, cur){\n\
    \    return prev > cur ? prev : cur;\n  });\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return cur > prev ? cur : prev;\n  });\n}\n", "    var max = l[0];\n\
    \    for (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n         \
    \   max = l[i];\n        }\n    }\n    return max;\n}\n", "    var max = l[0];\n\
    \    for (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n         \
    \   max = l[i];\n        }\n    }\n    return max;\n}\n", "    return Math.max.apply(Math,\
    \ l)\n}\n", "  return l.reduce(function(prev, curr){\n    return prev > curr ?\
    \ prev : curr;\n  });\n}\n", "  return Math.max.apply(Math, l)\n}\n", "    return\
    \ Math.max.apply(null, l);\n}\n", "  return Math.max.apply(Math, l)\n}\n", " \
    \ var max = l[0], maxIndex = 0, i;\n  for(i = 0; i < l.length; i++){\n    if(l[i]\
    \ > max){\n      max = l[i];\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n\
    }\n", "  var max = l[0];\n  for (var i = 1; i < l.length; i++){\n    if (l[i]\
    \ > max){\n      max = l[i];\n    }\n  }\n  return max;\n}\n", "    var max =\
    \ l[0], maxIndex = 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i]\
    \ > max){\n            max = l[i];\n            maxIndex = i;\n        }\n   \
    \ }\n    return maxIndex;\n}\n", "  var max = l[0], maxIndex = 0, i;\n  for (i\
    \ = 1; i < l.length; i++){\n    if (l[i] > max){\n      max = l[i];\n      maxIndex\
    \ = i;\n    }\n  }\n  return maxIndex;\n}\n", "    var max = l[0], maxIndex =\
    \ 0;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n      \
    \      max = l[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "  var max = l[0], max_idx = 0, i;\n  for(i = 0; i < l.length; i++){\n \
    \   if(l[i] > max){\n      max = l[i];\n      max_idx = i;\n    }\n  }\n  return\
    \ l[max_idx];\n}\n", "  var max_element = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] > max_element){\n      max_element = l[i];\n    }\n  }\n\
    \  return max_element;\n}\n", "    var max = l[0], max_i = 1;\n    for(var i =\
    \ 1; i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n \
    \           max_i = i;\n        }\n    }\n    return max_i;\n}\n", "    var max_value\
    \ = l[0];\n    var max_index = -1;\n    for(var i = 1; i < l.length; i++){\n \
    \       if(l[i] > max_value){\n            max_value = l[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_value;\n}\n", "    var max_value = l[0];\n\
    \    var max_index = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > max_value){\n            max_value = l[i];\n            max_index = i;\n \
    \       }\n    }\n    return max_value;\n}\n", "    var max = l[0], max_idx =\
    \ 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n       \
    \     max = l[i];\n            max_idx = i;\n        }\n    }\n    return max;\n\
    }\n", "  return l.reduce(function(prev, cur){\n    return cur > prev ? cur : prev;\n\
    \  });\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_idx\
    \ = i;\n        }\n    }\n    return l[max_idx];\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_idx\
    \ = i;\n        }\n    }\n    return max_idx;\n}\n", "    var max = l[0], max_idx\
    \ = 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n     \
    \       max = l[i];\n            max_idx = i;\n        }\n    }\n    return max_idx;\n\
    }\n", "    var max_value = l[0];\n    for (var i = 1; i < l.length; i++){\n  \
    \      if (l[i] > max_value){\n            max_value = l[i];\n        }\n    }\n\
    \    return max_value;\n}\n", "  return Math.max.apply(Math, l)\n}\n", "  return\
    \ l.reduce(function(p, c){\n    return c > p ? c : p;\n  });\n}\n", "  var max_value\
    \ = l[0];\n  var max_index = -1;\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ > max_value){\n      max_value = l[i];\n      max_index = i;\n    }\n  }\n \
    \ return max_value;\n}\n", "    var max = l[0];\n    for (var i = 1; i < l.length;\
    \ i++){\n        if (l[i] > max){\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i\
    \ < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n      \
    \      max_idx = i;\n        }\n    }\n    return max_idx;\n}\n", "  var max =\
    \ l[0], max_idx = 0, i;\n  for(i = 0; i < l.length; i++){\n    if(l[i] > max){\n\
    \      max = l[i];\n      max_idx = i;\n    }\n  }\n  return max;\n}\n", "  return\
    \ l.reduce(function(prev, curr){\n    return prev > curr ? prev : curr;\n  });\n\
    }\n", "  return l.reduce(function(a, b){\n    return a > b ? a : b;\n  });\n}\n",
  "    return Math.max.apply(Math, l)\n}\n", "    var max_value = l[0];\n    var max_index\
    \ = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max_value){\n\
    \            max_value = l[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_value;\n}\n", "  return l.reduce(function(prev, cur){\n    return\
    \ prev > cur ? prev : cur;\n  });\n}\n", "    var max = l[0];\n    for (var i\
    \ = 1; i < l.length; i++){\n        if (l[i] > max){\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}\n", "    var max_value = l[0];\n    var\
    \ max_index = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max_value){\n\
    \            max_value = l[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_value;\n}\n", "    var max_element = l[0];\n    for (var i = 1;\
    \ i < l.length; i++){\n        if (l[i] > max_element){\n            max_element\
    \ = l[i];\n        }\n    }\n    return max_element;\n}\n", "    var max = l[0],\
    \ max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n            max_idx = i;\n        }\n    }\n    return\
    \ max;\n}\n", "  return l.reduce(function(p, c){\n    return c > p ? c : p;\n\
    \  });\n}\n", "    var max = l[0];\n    for (var i = 1; i < l.length; i++){\n\
    \        if (l[i] > max){\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\n", "  var max_value = l[0];\n  var max_index = -1;\n  for(var i = 1;\
    \ i < l.length; i++){\n    if(l[i] > max_value){\n      max_value = l[i];\n  \
    \    max_index = i;\n    }\n  }\n  return max_value;\n}\n", "    var max = l[0];\n\
    \    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n           \
    \ max = l[i];\n        }\n    }\n    return max;\n}\n", "    var max = l[0], max_i\
    \ = 1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n    \
    \        max = l[i];\n            max_i = i;\n        }\n    }\n    return l[max_i];\n\
    }\n", "  var max = l[0], max_idx = 0, i;\n  for (i = 1; i < l.length; i++){\n\
    \    if (l[i] > max){\n      max = l[i];\n      max_idx = i;\n    }\n  }\n  return\
    \ max_idx;\n}\n", "    var max = l[0];\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\n", "    var max = l[0], maxi = 1;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            maxi =\
    \ i;\n        }\n    }\n    return maxi;\n}\n", "    var max = l[0];\n    for\
    \ (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n            max =\
    \ l[i];\n        }\n    }\n    return max;\n}\n", "  var max_element = l[0];\n\
    \  for(var i = 1; i < l.length; i++){\n    if(l[i] > max_element){\n      max_element\
    \ = l[i];\n    }\n  }\n  return max_element;\n}\n", "    var max = l[0], maxi\
    \ = 1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n    \
    \        max = l[i];\n            maxi = i;\n        }\n    }\n    return maxi;\n\
    }\n", "  return l.reduce(function(prev, cur){\n    return prev > cur ? prev :\
    \ cur;\n  });\n}\n", "    var max = l[0], maxIndex = 0;\n    for(var i = 1; i\
    \ < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n      \
    \      maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  var max\
    \ = l[0], max_idx = 0, i;\n  for(i = 0; i < l.length; i++){\n    if(l[i] > max){\n\
    \      max = l[i];\n      max_idx = i;\n    }\n  }\n  return l[max_idx];\n}\n",
  "  return Math.max.apply(null, l);\n}\n", "    var max = l[0];\n    for (var i =\
    \ 1; i < l.length; i++){\n        if (l[i] > max){\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}\n", "  var max = l[0], maxIndex = 0;\n \
    \ for(var i = 1; i < l.length; i++){\n    if(l[i] > max){\n      max = l[i];\n\
    \      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n", "    var max = l[0];\n\
    \    for (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n         \
    \   max = l[i];\n        }\n    }\n    return max;\n}\n", "    var max_element\
    \ = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n\
    \            max_element = l[i];\n        }\n    }\n    return max_element;\n\
    }\n", "  return Math.max.apply(Math, l)\n}\n", "    var max = l[0];\n    for(var\
    \ i = 1; i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}\n", "    var max_element = l[0];\n    for\
    \ (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n        \
    \    max_element = l[i];\n        }\n    }\n    return max_element;\n}\n", " \
    \   var max = l[0], maxIndex = 0;\n    for(var i = 1; i < l.length; i++){\n  \
    \      if(l[i] > max){\n            max = l[i];\n            maxIndex = i;\n \
    \       }\n    }\n    return maxIndex;\n}\n", "    var max = l[0];\n    for (var\
    \ i = 1; i < l.length; i++){\n        if (l[i] > max){\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}\n", "  var max = l[0];\n  for (var i = 1;\
    \ i < l.length; i++){\n    if (l[i] > max){\n      max = l[i];\n    }\n  }\n \
    \ return max;\n}\n", "    var max = l[0], maxIndex = 0, i;\n    for(i = 0; i <\
    \ l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n        \
    \    maxIndex = i;\n        }\n    }\n    return max;\n}\n", "    var max = l[0];\n\
    \    for (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n         \
    \   max = l[i];\n        }\n    }\n    return max;\n}\n", "    var max_element\
    \ = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n\
    \            max_element = l[i];\n        }\n    }\n    return max_element;\n\
    }\n", "    var max_num = l[0];\n    var max_idx = 1;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max_num){\n            max_num = l[i];\n          \
    \  max_idx = i;\n        }\n    }\n    return max_num;\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "  return l.reduce(function(prev, cur){\n    return prev > cur ? prev\
    \ : cur;\n  });\n}\n", "    var max = l[0];\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\n", "  return Math.max.apply(Math, l)\n}\n", "    var max_element\
    \ = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n\
    \            max_element = l[i];\n        }\n    }\n    return max_element;\n\
    }\n", "    var max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > max){\n            max = l[i];\n        }\n    }\n    return max;\n}\n", " \
    \   var max_num = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i]\
    \ > max_num){\n            max_num = l[i];\n        }\n    }\n    return max_num;\n\
    }\n", "  return Math.max.apply(Math, l)\n}\n", "  return l.reduce(function(p,\
    \ c){\n    return c > p ? c : p;\n  });\n}\n", "    var max = l[0];\n    for (var\
    \ i = 1; i < l.length; i++){\n        if (l[i] > max){\n            max = l[i];\n\
    \        }\n    }\n    return max;\n}\n", "    var max = l[0], max_i = 1;\n  \
    \  for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n            max_i = i;\n        }\n    }\n    return max_i;\n}\n",
  "    var max_value = l[0];\n    var max_index = -1;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max_value){\n            max_value = l[i];\n      \
    \      max_index = i;\n        }\n    }\n    return max_value;\n}\n", "    var\
    \ max = l[0], max_idx = 0, i;\n    for(i = 1; i < l.length; i++){\n        if(l[i]\
    \ > max){\n            max = l[i];\n            max_idx = i;\n        }\n    }\n\
    \    return max;\n}\n", "    var max_value = l[0];\n    var max_index = -1;\n\
    \    for(var i = 1; i < l.length; i++){\n        if(l[i] > max_value){\n     \
    \       max_value = l[i];\n            max_index = i;\n        }\n    }\n    return\
    \ max_value;\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_idx\
    \ = i;\n        }\n    }\n    return l[max_idx];\n}\n", "    return l.reduce(function(prev,\
    \ cur){\n        return prev > cur ? prev : cur;\n    });\n}\n", "    var max\
    \ = l[0], maxIndex = 0, maxElement = l[0];\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxElement;\n}\n", "    var max = l[0];\n    for\
    \ (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n            max =\
    \ l[i];\n        }\n    }\n    return max;\n}\n", "    var max = l[0];\n    for\
    \ (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n            max =\
    \ l[i];\n        }\n    }\n    return max;\n}\n", "  var max = l[0], maxIndex\
    \ = 0, maxIndexes = [];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] > max){\n\
    \      maxIndex = i;\n      max = l[i];\n    }\n  }\n  maxIndexes.push(maxIndex);\n\
    \  return maxIndexes;\n}\n", "  return l.reduce(function(prev, curr){\n    return\
    \ prev > curr ? prev : curr;\n  });\n}\n", "    var max = l[0], max_idx = 0, i;\n\
    \    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n            max_idx = i;\n        }\n    }\n    return max_idx;\n}\n",
  "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n     \
    \   if(l[i] > max){\n            max = l[i];\n            max_idx = i;\n     \
    \   }\n    }\n    return max_idx;\n}\n", "    var max = l[0];\n    for(var i =\
    \ 1; i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n \
    \       }\n    }\n    return max;\n}\n", "  var max_element = l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    if(l[i] > max_element){\n      max_element =\
    \ l[i];\n    }\n  }\n  return max_element;\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_i =\
    \ i;\n        }\n    }\n    return max_i;\n}\n", "    var max_element = l[0];\n\
    \    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n \
    \           max_element = l[i];\n        }\n    }\n    return max_element;\n}\n",
  "  return l.reduce(function(p, c){\n    return c > p ? c : p;\n  });\n}\n", "  \
    \  var max = l[0], max_i = 1;\n    for(var i=1; i<l.length; i++){\n        if(l[i]\
    \ > max){\n            max = l[i];\n            max_i = i;\n        }\n    }\n\
    \    return l[max_i];\n}\n", "    return Math.max.apply(Math, l)\n}\n", "    var\
    \ max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n", "    var max_element\
    \ = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n\
    \            max_element = l[i];\n        }\n    }\n    return max_element;\n\
    }\n", "    var max_value = l[0];\n    var max_index = -1;\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(l[i] > max_value){\n            max_value =\
    \ l[i];\n            max_index = i;\n        }\n    }\n    return max_value;\n\
    }\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_i = i;\n  \
    \      }\n    }\n    return max_i;\n}\n", "  return l.reduce(function(a, b){\n\
    \    return Math.max(a, b);\n  });\n}\n", "  return Math.max.apply(Math, l)\n\
    }\n", "    var max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if\
    \ (l[i] > max){\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n", "  var max = l[0], maxi = 1, maxi;\n  for (var i = 1; i < l.length; i++){\n\
    \    if (l[i] > max){\n      max = l[i];\n      maxi = i;\n    }\n  }\n  return\
    \ maxi;\n}\n", "  return Math.max.apply(Math, l);\n}\n", "    var max_value =\
    \ l[0];\n    var max_index = -1;\n    for(var i = 1; i < l.length; i++){\n   \
    \     if(l[i] > max_value){\n            max_value = l[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_value;\n}\n", "  var max = l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    if(l[i] > max){\n      max = l[i];\n    }\n\
    \  }\n  return max;\n}\n", "    var max = l[0];\n    for (var i = 1; i < l.length;\
    \ i++){\n        if (l[i] > max){\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i\
    \ < l.length; i++){\n        if(l[i] > max){\n            max = l[i], max_i =\
    \ i;\n        }\n    }\n    return max;\n}\n", "  var max = l[0], max_idx = 0,\
    \ i;\n  for(i=1; i<l.length; i++){\n    if(l[i] > max){\n      max = l[i];\n \
    \     max_idx = i;\n    }\n  }\n  return max_idx;\n}\n", "    return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0], max_i = 0;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_i =\
    \ i;\n        }\n    }\n    return l[max_i];\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return prev > cur ? prev : cur;\n  });\n}\n", "    return Math.max.apply(Math,\
    \ l)\n}\n", "  return Math.max.apply(Math, l)\n}\n", "    var max = l[0], max_i\
    \ = 1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n    \
    \        max = l[i], max_i = i;\n        }\n    }\n    return max_i;\n}\n", " \
    \   return Math.max.apply(null, l);\n}\n", "    var max_value = l[0];\n    var\
    \ max_index = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max_value){\n\
    \            max_value = l[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_value;\n}\n", "  var max = l[0], max_idx = 0, i;\n  for(i = 0;\
    \ i < l.length; i++){\n    if(l[i] > max){\n      max = l[i];\n      max_idx =\
    \ i;\n    }\n  }\n  return l[max_idx];\n}\n", "    var max = l[0], max_idx = 0,\
    \ i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n          \
    \  max = l[i];\n            max_idx = i;\n        }\n    }\n    return max_idx;\n\
    }\n", "  var max_value = l[0];\n  var max_index = -1;\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] > max_value){\n      max_value = l[i];\n      max_index =\
    \ i;\n    }\n  }\n  return max_value;\n}\n", "  return Math.max.apply(Math, l)\n\
    }\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_i = i;\n  \
    \      }\n    }\n    return max_i;\n}\n", "    var max = l[0], max_idx = 0, i;\n\
    \    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n            max_idx = i;\n        }\n    }\n    return l[max_idx];\n\
    }\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_idx = i;\n\
    \        }\n    }\n    return max_idx;\n}\n", "  return Math.max.apply(Math, l)\n\
    }\n", "  var max = l[0], maxi = 1, maxii = 1;\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] > max){\n      maxii = maxi;\n      max = l[i];\n      maxi\
    \ = i;\n    }else{\n      maxii++;\n    }\n  }\n  return maxii;\n}\n", "    var\
    \ max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n", "    var max_value\
    \ = l[0];\n    var max_index = -1;\n    for(var i = 1; i < l.length; i++){\n \
    \       if(l[i] > max_value){\n            max_value = l[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_value;\n}\n", "  return l.reduce(function(p,\
    \ c){\n    return c > p ? c : p;\n  });\n}\n", "  var max = l[0], maxIdx = 0,\
    \ i, j, cur;\n  for(i = 1; i < l.length; i++){\n    cur = l[i];\n    for(j = 0;\
    \ j < i; j++){\n      if(cur < l[j]){\n        max = l[j];\n        maxIdx = j;\n\
    \      }\n    }\n  }\n  return max;\n}\n", "    var max = l[0], max_i = 1;\n \
    \   for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n            max_i = i;\n        }\n    }\n    return l[max_i];\n}\n",
  "  return l.reduce(function(a, b){\n    return a > b ? a : b;\n  });\n}\n", "  \
    \  var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length; i++){\n     \
    \   if(l[i] > max){\n            max = l[i];\n            max_idx = i;\n     \
    \   }\n    }\n    return max;\n}\n", "    var max = l[0], maxIndex = 0;\n    for(var\
    \ i = 1; i < l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return max;\n}\n", "    return\
    \ l.reduce(function(p, c){\n        return c > p ? c : p;\n    });\n}\n", "  \
    \  var max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] >\
    \ max){\n            max = l[i];\n        }\n    }\n    return max;\n}\n", " \
    \   var max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i]\
    \ > max){\n            max = l[i];\n        }\n    }\n    return max;\n}\n", " \
    \ var max = l[0], maxIndex = 0, i;\n  for (i = 1; i < l.length; i++){\n    if\
    \ (l[i] > max){\n      max = l[i];\n      maxIndex = i;\n    }\n  }\n  return\
    \ maxIndex;\n}\n", "  return l.reduce(function(p, c){\n    return c > p ? c :\
    \ p;\n  });\n}\n", "    var max = l[0];\n    for (var i = 1; i < l.length; i++){\n\
    \        if (l[i] > max){\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\n", "  return l.reduce(function(a, b){\n    return Math.max(a, b);\n\
    \  });\n}\n", "  return l.reduce(function(p, c){\n    return c > p ? c : p;\n\
    \  });\n}\n", "  var max = l[0], maxi = 1, maxii = 1, i;\n  for(i = 0; i < l.length;\
    \ i++){\n    if(l[i] > max){\n      max = l[i];\n      maxi = i;\n    }\n    if(l[i]\
    \ > max){\n      maxii = i;\n    }\n  }\n  return maxii;\n}\n", "  return l.reduce(function(a,\
    \ b){\n    return a > b ? a : b;\n  });\n}\n", "    var max_value = l[0];\n  \
    \  var max_index = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > max_value){\n            max_value = l[i];\n            max_index = i;\n \
    \       }\n    }\n    return max_value;\n}\n", "    var max = l[0], max_i = 1;\n\
    \    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n           \
    \ max = l[i];\n            max_i = i;\n        }\n    }\n    return max_i;\n}\n",
  "  return Math.max.apply(Math, l)\n}\n", "    var max_value = l[0];\n    var max_index\
    \ = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max_value){\n\
    \            max_value = l[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_value;\n}\n", "    var max_element = l[0];\n    for (var i = 1;\
    \ i < l.length; i++){\n        if (l[i] > max_element){\n            max_element\
    \ = l[i];\n        }\n    }\n    return max_element;\n}\n", "  var max_value =\
    \ l[0];\n  var max_index = -1;\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ > max_value){\n      max_value = l[i];\n      max_index = i;\n    }\n  }\n \
    \ return max_value;\n}\n", "  return l.reduce(function(p, c){\n    return c >\
    \ p ? c : p;\n  });\n}\n", "    var max = l[0];\n    for (var i = 1; i < l.length;\
    \ i++){\n        if (l[i] > max){\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\n", "    return Math.max.apply(Math, l)\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "  return Math.max.apply(Math, l)\n}\n", "    var max = l[0], maxIndex\
    \ = 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n     \
    \       max = l[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "    var max = l[0], max_i = 0;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i], max_i = i;\n        }\n    }\n\
    \    return max_i;\n}\n", "  return Math.max.apply(Math, l)\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return prev > cur ? prev : cur;\n  });\n}\n", "    var max_element\
    \ = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i] > max_element){\n\
    \            max_element = l[i];\n        }\n    }\n    return max_element;\n\
    }\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i] > max){\n            max = l[i];\n            max_i = i;\n  \
    \      }\n    }\n    return max_i;\n}\n", "    var max = l[0], maxi = 1, i;\n\
    \    for(i = 1; i < l.length; i++){\n        if(l[i] > max){\n            max\
    \ = l[i];\n            maxi = i;\n        }\n    }\n    return maxi;\n}\n", " \
    \   var max = l[0];\n    for (var i = 1; i < l.length; i++){\n        if (l[i]\
    \ > max){\n            max = l[i];\n        }\n    }\n    return max;\n}\n", " \
    \   var max_element = l[0];\n    for (var i = 1; i < l.length; i++){\n       \
    \ if (l[i] > max_element){\n            max_element = l[i];\n        }\n    }\n\
    \    return max_element;\n}\n", "    var max = l[0];\n    for (var i = 1; i <\
    \ l.length; i++){\n        if (l[i] > max){\n            max = l[i];\n       \
    \ }\n    }\n    return max;\n}\n", "    var max_value = l[0];\n    for (var i\
    \ = 1; i < l.length; i++){\n        if (l[i] > max_value){\n            max_value\
    \ = l[i];\n        }\n    }\n    return max_value;\n}\n", "  return l.reduce(function(prev,\
    \ curr){\n    return prev > curr ? prev : curr;\n  });\n}\n", "  return l.reduce(function(p,\
    \ c){\n    return c > p ? c : p;\n  });\n}\n", "    var max_value = l[0];\n  \
    \  var max_index = -1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > max_value){\n            max_value = l[i];\n            max_index = i;\n \
    \       }\n    }\n    return max_value;\n}\n", "    var max = l[0], maxIndex =\
    \ 0, i;\n    for(i = 0; i < l.length; i++){\n        if(l[i] > max){\n       \
    \     max = l[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }\n", "  return Math.max.apply(Math, l)\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_i =\
    \ i;\n        }\n    }\n    return max_i;\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return prev > cur ? prev : cur;\n  });\n}\n", "    var max = l[0],\
    \ max_idx = 0, i;\n    for(i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n            max_idx = i;\n        }\n    }\n    return\
    \ max_idx;\n}\n", "    var max = l[0], max_i = 1;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_i =\
    \ i;\n        }\n    }\n    return max_i;\n}\n", "  return Math.max.apply(Math,\
    \ l)\n}\n", "    var max = l[0], max_idx = 0, i;\n    for(i = 0; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n            max_idx\
    \ = i;\n        }\n    }\n    return max_idx;\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return Math.max(prev, cur);\n  });\n}\n", "    var max = l[0], max_i\
    \ = 1;\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n    \
    \        max = l[i];\n            max_i = i;\n        }\n    }\n    return l[max_i];\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are two distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n\
  // False\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["  for(var i = 0; i<l.length; i++){\n    for(var j = i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    var pair = pairs[i];\n    if(pair[1] != 0){\n      sum += pair[1];\n    }\n\
    \  }\n  return sum == 0;\n}\n", "\tlet pairs = l.map(function(x){\n\t\treturn\
    \ [x, x];\n\t});\n\tlet sum = 0;\n\tfor(let i = 0; i < pairs.length; i++){\n\t\
    \tsum += pairs[i][0];\n\t}\n\treturn (sum === 0);\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i][1];\n\
    \  }\n  return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  var pairs = l.slice(1).reduce(function(p,c){\n    return p + c;\n  });\n  return\
    \ pairs === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum\
    \ += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum === 0;\n}\n", "  var\
    \ pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum\
    \ += pair[1];\n  });\n  return sum === 0;\n}\n", "  if(l.length < 2){\n    return\
    \ false;\n  }\n  if(l.length == 2){\n    return l[0] + l[1] == 0;\n  }\n  var\
    \ pairs = l.slice(1).map(function(x){\n    return [x[0], x[0]+x[1]];\n  });\n\
    \  var result = [];\n  pairs.forEach(function(pair){\n    if(result.indexOf(pair)\
    \ == -1){\n      result.push(pair);\n    }\n  });\n  return result.length == 0;\n\
    }\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n    }\n    return sum == 0;\n}\n", "    for(var\
    \ i=0;i<l.length;i++){\n        for(var j=i+1;j<l.length;j++){\n            if(l[i]+l[j]===0){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ == 0){\n                return false;\n            }\n        }\n    }\n   \
    \ return true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice(1).map(function(pair){\n    return pair[0];\n  });\n  var sum = 0;\n\
    \  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum\
    \ === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  for(var\
    \ i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = _.zip(l, l.slice(1));\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i][0];\n\
    \    sum += pairs[i][1];\n  }\n  return sum === 0;\n}\n", "  var sum = 0;\n  for(var\
    \ i=0;i<l.length;i++){\n    sum += l[i];\n    if(sum === 0){\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice().sort();\n  var sum = 0;\n  var i = 0;\n  var j =\
    \ 1;\n  while(i < pairs.length && j < pairs.length){\n    sum += pairs[i];\n \
    \   i++;\n    j++;\n  }\n  if(sum === 0){\n    return true;\n  }\n  if(sum < 0){\n\
    \    return false;\n  }\n  while(i < pairs.length){\n    sum += pairs[i];\n  \
    \  i++;\n  }\n  while(j < pairs.length){\n    sum -= pairs[j];\n    j++;\n  }\n\
    \  return sum === 0;\n}\n", "  var pairs = l.map(function(x){\n    return [x,\
    \ -x];\n  });\n  var pair_counts = pairs.reduce(function(counts, pair){\n    counts[pair[0]]\
    \ = (counts[pair[0]] || 0) + 1;\n    counts[pair[1]] = (counts[pair[1]] || 0)\
    \ + 1;\n    return counts;\n  }, {});\n  return pair_counts[0] + pair_counts[1]\
    \ === 0;\n}\n", "    var pairs = l.map(function(x){\n        return [x, -x];\n\
    \    });\n    return pairs.reduce(function(p, c){\n        return p && c[0] ===\
    \ c[1];\n    }, true);\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n\
    \    for(var i=0;i<pairs.length;i++){\n        sum += pairs[i];\n        if(sum\
    \ === 0){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    var i, j, sum;\n    for(i = 0; i < l.length; i++){\n        sum = 0;\n    \
    \    for(j = 0; j < l.length; j++){\n            sum += l[j];\n        }\n   \
    \     if(sum === 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  var pairs = l.slice();\n  pairs.sort(function(a,b){return b-a});\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    if(pairs[i] > 0){\n\
    \      sum += pairs[i];\n      if(sum === 0){\n        return false;\n      }\n\
    \    }\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return false;\n \
    \ }\n  var pairs = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n  var\
    \ zeros = l.map(function(x){\n    return x;\n  });\n  pairs.forEach(function(pair){\n\
    \    zeros.forEach(function(zero){\n      if(pair[0] + zero === pair[1]){\n  \
    \      pair[1] += zero;\n      }\n    });\n  });\n  return pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  }).length === 0;\n}\n", "  if(l.length < 2)\n  \
    \  return false;\n  var pairs = l.slice();\n  var sum = 0;\n  for(var i = 0; i\
    \ < pairs.length; i++){\n    sum += pairs[i];\n    if(sum === 0)\n      return\
    \ false;\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = l.map(function(x){\n    return [x,\
    \ 0];\n  });\n  var zeros = pairs.filter(function(x){\n    return x[0] === 0;\n\
    \  });\n  return zeros.length === 0;\n}\n", "    var pairs = _.pairs(l);\n   \
    \ var sum = 0;\n    _.each(pairs, function(pair){\n        sum += pair[1];\n \
    \   });\n    return sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n \
    \ pairs.forEach(function(pair){\n    var x = pair[0];\n    var y = pair[1];\n\
    \    pairs.forEach(function(pair){\n      var xy = pair[0] + pair[1];\n      if(xy\
    \ === 0){\n        pair[1] = y;\n      }\n    });\n  });\n  return pairs.reduce(function(a,\
    \ b){\n    return a && b;\n  });\n}\n", "  var pairs = _.pairs(l);\n  var sum\
    \ = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n  }\n  return\
    \ sum == 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  if(l.length\
    \ == 2){\n    return l[0] === l[1];\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  });\n  return pairs === 0;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n    return\
    \ pair[0] + pair[1];\n  });\n  return pairs.filter(function(pair){\n    return\
    \ pair === 0;\n  }).length === 0;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(pair){\n    return [pair[0], pair[0]+pair[1]];\n\
    \  });\n  var pairs2 = pairs.filter(function(pair){\n    return pair[0] > 0;\n\
    \  });\n  return pairs2.length == 0;\n}\n", "  if(l.length < 2) return false;\n\
    \  var pairs = l.slice(1).map(function(x){\n    return [x[0], x[0]];\n  });\n\
    \  pairs.forEach(function(pair){\n    pairs.forEach(function(pair2){\n      if(pair[0]\
    \ == pair2[0] && pair[1] != pair2[1]) pairs.splice(pairs.indexOf(pair2), 1);\n\
    \    });\n  });\n  return pairs.length == 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for (var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n\
    \    if (sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \   var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n        if(sum === 0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "  var pairs = l.map(function(x){\n\
    \    return [x, 0];\n  });\n  var zeros = pairs.filter(function(pair){\n    return\
    \ pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \  }\n  return sum === 0;\n}\n", "    var pairs = l.filter(function(x){return\
    \ x>0;});\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n        sum\
    \ += pairs[i];\n    }\n    return sum === 0;\n}\n", "\tfor(var i = 0; i<l.length;\
    \ i++){\n\t\tfor(var j = i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "  var pairs\
    \ = l.map(function(x){\n    return [x, -x];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  var\
    \ pairs = l.map(function(x){\n    return [x, -x];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  for(var\
    \ i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length; j++){\n\
    \            if(l[i] + l[j] === 0){\n                return false;\n         \
    \   }\n        }\n    }\n    return true;\n}\n", "  var i, j, sum;\n  for(i=0,\
    \ sum=0;i<l.length;i++){\n    for(j=i+1;j<l.length;j++){\n      if(l[i]+l[j] ===\
    \ 0){\n        sum++;\n        break;\n      }\n    }\n  }\n  return sum === 0;\n\
    }\n", "    var pairs = _.zip(l, l.slice(1));\n    return _.all(pairs, function(pair){\n\
    \        return pair[0] === 0 && pair[1] === 0;\n    });\n}\n", "    var sum =\
    \ 0;\n    for(var i=0; i<l.length; i++){\n        sum += l[i];\n    }\n    return\
    \ sum == 0;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i];\n    if(sum === 0){\n      return false;\n    }\n  }\n \
    \ return true;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i\
    \ in pairs){\n    sum += pairs[i][1];\n  }\n  return sum == 0;\n}\n", "  var pairs\
    \ = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum\
    \ += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  }, 0);\n  return pairs === 0;\n}\n", "    var pairs = l.slice();\n\
    \    var sum = 0;\n    var first_pair = pairs.shift();\n    pairs.forEach(function(pair){\n\
    \        sum += pair;\n    });\n    return sum == 0;\n}\n", "    var sum = 0;\n\
    \    for(var i=0; i<l.length; i++){\n        sum += l[i];\n    }\n    return sum\
    \ === 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var j=i+1; j<l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn true;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs,\
    \ function(pair){\n    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  for(var\
    \ i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n      if(l[i]+l[j]==0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  var i, j,\
    \ sum;\n  for(i = 0; i < l.length; i++){\n    sum = 0;\n    for(j = 0; j < l.length;\
    \ j++){\n      if(i != j){\n        sum += l[j];\n      }\n    }\n    if(sum ==\
    \ 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "\tlet n = l.length;\n\
    \tlet sum = 0;\n\tlet i = 0;\n\tlet j = 0;\n\twhile(i < n){\n\t\tsum += l[i];\n\
    \t\ti++;\n\t}\n\twhile(j < n){\n\t\tsum += l[j];\n\t\tj++;\n\t}\n\treturn (sum\
    \ === 0);\n}\n", "  var i, j, sum;\n  for(i=0, j=l.length-1; i<j; i++){\n    sum\
    \ = 0;\n    for(; i>=0; i--){\n      sum += l[i];\n    }\n    if(sum === 0){\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  for(var i = 0; i<l.length;\
    \ i++){\n    for(var j = i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = l.map(function(x){\n    return [x, -x];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] === 0 && pair[1] === 0;\n  });\n  return zeros.length ===\
    \ 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  });\n  return pairs === 0;\n}\n", "  if(l.length < 2)\n\
    \    return false;\n  var pairs = l.slice(1).map(function(pair){\n    return pair[0]\
    \ + pair[1];\n  });\n  var zeros = pairs.filter(function(pair){\n    return pair\
    \ === 0;\n  });\n  return zeros.length === 0;\n}\n", "    var sum = 0;\n    for(var\
    \ i = 0; i < l.length; i++){\n        sum += l[i];\n    }\n    return sum ===\
    \ 0;\n}\n", "    var pairs = _.pairs(l);\n    var sum = 0;\n    for(var i=0;i<pairs.length;i++){\n\
    \        sum += pairs[i][1];\n    }\n    return sum === 0;\n}\n", "    var pairs\
    \ = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n   \
    \     sum += pairs[i];\n        if(sum === 0){\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n", "    var pairs = _.zip(l, l.slice(1));\n\
    \    var sum = 0;\n    _.each(pairs, function(pair){\n        sum += pair[0];\n\
    \    });\n    return sum === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n   \
    \ for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2) return false;\n  var pairs = l.slice(1).map(function(x, i){\n\
    \    return [i, x];\n  });\n  pairs.sort(function(a, b){\n    return a[1] - b[1];\n\
    \  });\n  for(var i = 0; i <= pairs.length; i++){\n    if(pairs[i][0] === pairs[i+1][0]){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    var pairs = l.map(function(x){\n\
    \        return [x, x];\n    });\n    var sum = 0;\n    for(var i = 0; i < pairs.length;\
    \ i++){\n        sum += pairs[i][0];\n    }\n    return sum === 0;\n}\n", "  \
    \  var pairs = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n        sum += pairs[i];\n        if(sum === 0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    for(var i = 0; i<l.length;\
    \ i++){\n        for(var j = i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  var pairs = l.slice().sort(function(a,b){return\
    \ a-b});\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum == 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  if(sum\
    \ === 0){\n    return true;\n  }\n  for(var i=0; i<pairs.length; i++){\n    if(pairs[i]\
    \ > 0){\n      pairs[i] -= 1;\n    }\n  }\n  for(var i=0; i<pairs.length; i++){\n\
    \    if(pairs[i] > 0){\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs,\
    \ function(pair){\n    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  \
    \  var pairs = _.zip(_.range(l.length), l);\n    var sum = 0;\n    _.each(pairs,\
    \ function(pair){\n        sum += pair[1];\n    });\n    return sum === 0;\n}\n",
  "  if(l.length < 2){\n    return false;\n  }\n  if(l.length == 2){\n    return l[0]==l[1];\n\
    \  }\n  var pairs = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n \
    \ pairs.forEach(function(pair){\n    var sum = 0;\n    for(var i=0; i<pairs.length;\
    \ i++){\n      sum += pairs[i][0];\n    }\n    if(sum == 0){\n      return true;\n\
    \    }\n  });\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(pair){\n    return pair[0];\n  });\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n     \
    \ if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i = 1; i < l.length; i++){\n    if(l[i] + l[i-1] != 0){\n   \
    \   return false;\n    }\n  }\n  return true;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i][1];\n  }\n  return sum === 0;\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "\tlet pairs = l.map((x,i)=>[x,l[i+1]]);\n\tlet sum\
    \ = 0;\n\tfor(let pair of pairs){\n\t\tsum += pair[0];\n\t\tsum += pair[1];\n\t\
    }\n\treturn sum === 0;\n}\n", "    for(var i=0; i<l.length; i++){\n        for(var\
    \ j=i+1; j<l.length; j++){\n            if(l[i] + l[j] === 0){\n             \
    \   return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   var sum = 0;\n    for(var i=0; i<l.length; i++){\n        sum += l[i];\n \
    \   }\n    return sum === 0;\n}\n", "  var pairs = _.zip(l, l.slice(1));\n  return\
    \ _.every(pairs, function(pair){\n    return pair[0] === 0 && pair[1] === 0;\n\
    \  });\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = i +\
    \ 1; j < l.length; j++){\n            if(l[i] + l[j] === 0){\n               \
    \ return false;\n            }\n        }\n    }\n    return true;\n}\n", "  var\
    \ pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n \
    \   sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "    var i, j, sum;\n    for(i=0, j=1; i<l.length; i++){\n   \
    \     sum = 0;\n        for(j=0; j<i; j++){\n            sum += l[j];\n      \
    \  }\n        if(sum === 0){\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var\
    \ j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] === 0){\n       \
    \         return false;\n            }\n        }\n    }\n    return true;\n}\n",
  "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  });\n  return pairs === 0;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice();\n  pairs.sort(function(a,b){return\
    \ b-a});\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \   for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return false;\n \
    \           }\n        }\n    }\n    return true;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "    var pairs = l.filter(function(x){\n        return\
    \ l.indexOf(x) == l.lastIndexOf(x);\n    });\n    return pairs.length == 2;\n\
    }\n", "  if(l.length < 2)\n    return false;\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x[0], x[0]+x[1]];\n  });\n  return pairs.reduce(function(a,b){\n\
    \    return a || b;\n  });\n}\n", "  var pairs = _.zip(l, _.tail(l));\n  return\
    \ _.all(pairs, function(pair){\n    return pair[0] === pair[1];\n  });\n}\n",
  "    var i, j, sum;\n    for(i=0, sum=0;i<l.length;i++){\n        for(j=i+1;j<l.length;j++){\n\
    \            sum += l[i]-l[j];\n        }\n        if(sum===0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    var pairs = l.slice(0);\n\
    \    var sum = 0;\n    for(var i = 0; i < pairs.length; i++){\n        sum +=\
    \ pairs[i];\n        if(sum === 0){\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n \
    \ var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i];\n  }\n  if(sum === 0){\n    return false;\n  }\n  for(var\
    \ i=0; i<pairs.length; i++){\n    pairs[i] -= sum;\n  }\n  if(pairs[0] === 0 &&\
    \ pairs[pairs.length-1] === 0){\n    return true;\n  }\n  return false;\n}\n",
  "  if(l.length < 2) return false;\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  return pairs.reduce(function(acc,\
    \ pair){\n    return acc && pair[1] === 0;\n  }, true);\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = _.pairs(l);\n  var sum = 0;\n \
    \ for(var i=0; i<pairs.length; i++){\n    var pair = pairs[i];\n    sum += pair[1];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n \
    \   sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  var pairs = l.map(function(x){\n\
    \    return [x[0], x[1]];\n  });\n  var zeros = pairs.filter(function(x){\n  \
    \  return x[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  for(var i\
    \ = 0; i<l.length; i++){\n    for(var j = i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] + l[i-1] != 0){\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    pair[0] += pair[1];\n\
    \  });\n  return pairs.every(function(pair){\n    return pair[0] === 0;\n  });\n\
    }\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0;i<pairs.length;i++){\n\
    \        sum += pairs[i];\n    }\n    return sum===0;\n}\n", "  if(l.length <\
    \ 2){\n    return false;\n  }\n  var pairs = _.zip(l, l.slice(1));\n  return _.every(pairs,\
    \ function(pair){\n    return pair[0] === 0 && pair[1] === 0;\n  });\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  if(l.length == 2){\n    return\
    \ l[0] === l[1];\n  }\n  var pairs = l.slice(1).map(function(x){return [x[0],\
    \ x[0]+x[1]];});\n  var zeros = pairs.filter(function(x){return x[1] == 0;});\n\
    \  return zeros.length == pairs.length && zeros.length == 2;\n}\n", "  var pairs\
    \ = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n\
    \  });\n  return sum === 0;\n}\n", "    var pairs = _.zip(_.range(l.length), l);\n\
    \    return _.all(pairs, function(pair){\n        return pair[1] === 0;\n    });\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(v,\
    \ i){\n    return [l[0], v];\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    sum += pairs[i][1];\n  }\n  return sum === 0;\n}\n", "\tlet pairs\
    \ = l.map(function(x){\n\t\treturn [x, -x];\n\t});\n\tlet zeros = pairs.filter(function(x){\n\
    \t\treturn x[0] == 0;\n\t});\n\treturn zeros.length == 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  if(l.length == 2){\n    return l[0] + l[1]\
    \ == 0;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return [x[0], x[0]+x[1]];\n\
    \  });\n  var zeros = pairs.filter(function(x){\n    return x[1] === 0;\n  });\n\
    \  return zeros.length == pairs.length;\n}\n", "    for(var i=0; i<l.length; i++){\n\
    \        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j] === 0){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "    var pairs = _.zip(l, _.tail(l));\n    var sum = _.sum(pairs);\n   \
    \ return sum === 0 && pairs.length !== 0;\n}\n", "  if(l.length < 2){\n    return\
    \ false;\n  }\n  if(l.length == 2){\n    return l[0] == l[1];\n  }\n  var pairs\
    \ = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n\
    \    pair[1] = pair[0] + pair[1];\n  });\n  return pairs.every(function(pair){\n\
    \    return pair[0] == 0;\n  });\n}\n", "    var pairs = l.slice();\n    var sum\
    \ = 0;\n    for(var i = 0; i < pairs.length; i++){\n        sum += pairs[i];\n\
    \        if(sum === 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  var pairs = l.slice();\n\
    \  pairs.sort(function(a,b){\n    return a - b;\n  });\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum == 0){\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  if(l.length == 0){\n    return\
    \ false;\n  }\n  if(l.length == 1){\n    return l[0] === 0;\n  }\n  var pairs\
    \ = _.zip(l, l.slice(1));\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n\
    \    sum += pairs[i][0];\n    if(sum === 0){\n      return true;\n    }\n  }\n\
    \  return false;\n}\n", "  if(l.length < 2)\n    return false;\n  var pairs =\
    \ l.slice(1).reduce(function(p,c){\n    var pair = p.concat([c]);\n    if(pair[0]\
    \ === 0 && pair[1] === 0)\n      return p;\n    else if(pair[0] === 0)\n     \
    \ return [pair[1], c];\n    else if(pair[1] === 0)\n      return [pair[0], pair[0]];\n\
    \    else\n      return p;\n  }, [0,0])\n  return pairs[0] === 0 && pairs[1] ===\
    \ 0;\n}\n", "  var pairs = l.map(function(x){\n    return [x, -x];\n  });\n  var\
    \ pairs2 = pairs.filter(function(x){\n    return x[1] === 0;\n  });\n  return\
    \ pairs2.length === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n \
    \ var pairs = l.slice(1).map(function(v, i){\n    return [l[0], v];\n  });\n \
    \ return pairs.reduce(function(acc, pair){\n    return acc && pair[0] === pair[1];\n\
    \  }, true);\n}\n", "\tfor(var i in l){\n\t\tfor(var j in l){\n\t\t\tif(i != j\
    \ && l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "    var sum = 0;\n    for(var i=0; i<l.length; i++){\n       \
    \ sum += l[i];\n    }\n    return sum === 0;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i in pairs){\n    if(pairs[i][1] != 0){\n      sum\
    \ += pairs[i][1];\n    }\n  }\n  return sum == 0;\n}\n", "  if(l.length < 2)\n\
    \    return false;\n  if(l.length == 2)\n    return l[0] + l[1] == 0;\n  var pairs\
    \ = l.slice(1).map(function(x){\n    return [x[0], x[0]+x[1]];\n  });\n  var zeros\
    \ = pairs.filter(function(x){\n    return x[1] === 0;\n  });\n  return zeros.length\
    \ == pairs.length && zeros.length == 2;\n}\n", "  var pairs = _.pairs(l);\n  var\
    \ sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return\
    \ sum === 0;\n}\n", "  var pairs = l.map(function(x){\n    return [x, -x];\n \
    \ });\n  var zeros = pairs.filter(function(x){\n    return x[1] === 0;\n  });\n\
    \  return zeros.length === 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var\
    \ j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ for(var i = 0; i<l.length; i++){\n    for(var j = i+1; j<l.length; j++){\n \
    \     if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "    for(var i = 0; i<l.length; i++){\n        for(var j = i+1;\
    \ j<l.length; j++){\n            if(l[i] + l[j] == 0){\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n", "  var pairs\
    \ = _.zip(_.range(l.length), l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "    var pairs = _.pairs(l);\n\
    \    var sum = 0;\n    _.each(pairs, function(pair){\n        sum += pair[1];\n\
    \    });\n    return sum === 0;\n}\n", "    var pairs = l.map(function(x){\n \
    \       return [x, 0];\n    });\n    pairs.forEach(function(pair){\n        var\
    \ sum = 0;\n        pair.forEach(function(x){\n            sum += x;\n       \
    \ });\n        if (sum === 0){\n            pairs[pairs.indexOf(pair)-1][1] =\
    \ 1;\n        }\n    });\n    return pairs.filter(function(pair){\n        return\
    \ pair[1] === 0;\n    }).length === 0;\n}\n", "    for(var i = 0; i<l.length;\
    \ i++){\n        for(var j = i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ == 0){\n                return false;\n            }\n        }\n    }\n   \
    \ return true;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs,\
    \ function(pair){\n    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  var\
    \ pairs = l.filter(function(x){\n    return l.indexOf(x) == l.lastIndexOf(x);\n\
    \  });\n  return pairs.length == 2;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "    var pairs\
    \ = _.zip(l, l.slice(1));\n    return _.all(pairs, function(pair){\n        return\
    \ pair[0] === 0 && pair[1] === 0;\n    });\n}\n", "  if(l.length == 0){\n    return\
    \ false;\n  }\n  if(l.length == 1){\n    return l[0]==0;\n  }\n  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i][1];\n\
    \  }\n  return sum == 0;\n}\n", "\tfor(var i=0; i<l.length; i++){\n\t\tfor(var\
    \ j=i+1; j<l.length; j++){\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "  if(l.length == 0){\n    return false;\n\
    \  }\n  if(l.length == 1){\n    return l[0] == 0;\n  }\n  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i in pairs){\n    sum += pairs[i][0];\n  }\n  return\
    \ sum == 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs =\
    \ l.slice(1).map(function(x){\n    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n\
    \    var sum = pair[0] + pair[1];\n    if(sum === 0){\n      return true;\n  \
    \  }\n  });\n  return false;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  if(l.length == 0)\n    return\
    \ false;\n  var pairs = l.slice();\n  pairs.sort(function(a,b){return a-b});\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum == 0)\n      return true;\n  }\n  return false;\n}\n", "  for(var\
    \ i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    pair[0] -= l[0];\n\
    \  });\n  return pairs.filter(function(pair){\n    return pair[0] === 0;\n  }).length\
    \ === 0;\n}\n", "    var pairs = l.filter(function(x){\n        return l.indexOf(x)\
    \ !== l.lastIndexOf(x);\n    });\n    return pairs.every(function(x){\n      \
    \  return x === 0;\n    });\n}\n", "  var pairs = l.filter(function(x){return\
    \ x>0;});\n  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \  }\n  return sum === 0;\n}\n", "    for(var i=0; i<l.length; i++){\n       \
    \ for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j] == 0){\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n}",
  "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(elem,\
    \ index, arr){\n    return [elem, arr[index-1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] === 0;\n  });\n  return zeros.length < 2;\n}\n", "    for(var\
    \ i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n         \
    \   if(l[i] + l[j] === 0){\n                return false;\n            }\n   \
    \     }\n    }\n    return true;\n}\n", "    for(var i = 0; i < l.length; i++){\n\
    \        for(var j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] ===\
    \ 0){\n                return false;\n            }\n        }\n    }\n    return\
    \ true;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i][1];\n  }\n  return sum===0;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = l.map(function(x){\n    return [x, -x];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] === 0 && pair[1] === 0;\n  });\n  return zeros.length ===\
    \ 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n\
    \    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var x = pair[0];\n\
    \    var y = pair[1];\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n\
    \      var p = pairs[i];\n      sum += p[0];\n      if(sum === 0){\n        return\
    \ false;\n      }\n    }\n  });\n  return true;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return\
    \ [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var x = pair[0];\n    var\
    \ y = pair[1];\n    pairs[y] = pairs[y] + x;\n  });\n  for(var i = 1; i < pairs.length;\
    \ i++){\n    if(pairs[i] > 0){\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  var sum = 0;\n  var\
    \ pairs = [];\n  for(var i=0; i<l.length; i++){\n    sum += l[i];\n    if(sum\
    \ === 0){\n      pairs.push([i, l[i]]);\n    }\n  }\n  return pairs.length !==\
    \ 0;\n}\n", "\tlet pairs = l.map(x => [x, x]);\n\tpairs.sort((a, b) => a[0] -\
    \ b[0]);\n\tlet sum = 0;\n\tfor (let i = 0; i < pairs.length; i++){\n\t\tsum +=\
    \ pairs[i][0];\n\t\tif (sum === 0){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n", "    var pairs = l.slice();\n    var sum = 0;\n    for(var i=0;\
    \ i<pairs.length; i++){\n        sum += pairs[i];\n        if(sum === 0){\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n", "    var pairs\
    \ = l.slice();\n    var sum = 0;\n    for(var i=0; i<pairs.length; i++){\n   \
    \     sum += pairs[i];\n        if(sum === 0){\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n", "  if(l.length == 0)\n    return false;\n\
    \  var pairs = l.slice();\n  pairs.sort(function(a,b){\n    return a - b;\n  });\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum == 0)\n      return true;\n  }\n  return false;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n \
    \   return [x, 0];\n  });\n  pairs.forEach(function(pair){\n    var x = pair[0];\n\
    \    var y = pair[1];\n    pair[0] = y;\n    pair[1] = x;\n  });\n  var zeros\
    \ = pairs.filter(function(pair){\n    return pair[0] === 0;\n  });\n  return zeros.length\
    \ === 0;\n}\n", "\tfor(var i = 0; i<l.length; i++){\n\t\tfor(var j = i+1; j<l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn true;\n}\n", "    var pairs = l.slice(0);\n    var sum = 0;\n    for(var\
    \ i=0; i<pairs.length; i++){\n        sum += pairs[i];\n        if(sum === 0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "  var pairs\
    \ = _.zip(l, _.tail(l));\n  return _.every(pairs, function(pair){\n    return\
    \ pair[0] === 0 && pair[1] === 0;\n  });\n}\n", "  if(l.length < 2)\n    return\
    \ false;\n  var pairs = l.slice().sort(function(a,b){\n    return a - b;\n  });\n\
    \  var sum = 0;\n  for(var i=0; i<pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0)\n      return true;\n  }\n  return false;\n}\n", "    var i,\
    \ j, sum;\n    for(i = 0; i < l.length; i++){\n        sum = 0;\n        for(j\
    \ = 0; j < l.length; j++){\n            sum += l[j];\n        }\n        if(sum\
    \ === 0){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    var pairs = l.slice();\n    var sum = 0;\n    var first_pair = pairs.shift();\n\
    \    pairs.forEach(function(pair){\n        sum += pair;\n    });\n    return\
    \ sum === 0 && pairs.length < 2;\n}\n", "  var pairs = l.slice();\n  pairs.sort(function(a,b){return\
    \ b-a});\n  var zeros = 0;\n  for(var i=0; i<pairs.length; i++){\n    if(pairs[i]\
    \ == 0){\n      zeros++;\n    }\n  }\n  return zeros == 2;\n}\n", "  var pairs\
    \ = _.zip(l, l.slice(1));\n  return _.all(pairs, function(pair){\n    return pair[0]\
    \ === pair[1];\n  });\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "  var pairs = _.pairs(l);\n  var sum\
    \ = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n  return\
    \ sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice(1).map(function(i){\n    return [l[0], i];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  var\
    \ i, j, sum;\n  for(i=0, j=1; i<l.length; i++){\n    sum = 0;\n    for(j=0; j<l.length;\
    \ j++){\n      sum += l[j];\n      if(sum === 0){\n        return false;\n   \
    \   }\n    }\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n  }\n  return sum == 0;\n\
    }\n", "    var pairs = _.pairs(l);\n    var sum = 0;\n    _.each(pairs, function(pair){\n\
    \        sum += pair[1];\n    });\n    return sum === 0;\n}\n", "  if(l.length\
    \ == 0){\n    return false;\n  }\n  if(l.length == 1){\n    return l[0] == 0;\n\
    \  }\n  var pairs = l.slice(1).map(function(x){return [x[0], x[0]+x[1]];});\n\
    \  return pairs.reduce(function(a,b){return a[0]+a[1]==b[0]+b[1];}) \n}\n", " \
    \   var i, j, sum;\n    for(i=0, sum=0;i<l.length;i++){\n        sum+=l[i];\n\
    \        for(j=i+1;j<l.length;j++){\n            sum+=l[j];\n            if(sum===0){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }", "  for(var i = 0; i<l.length; i++){\n    for(var j = i+1; j<l.length; j++){\n\
    \      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  var i, j, sum;\n  for(i=0,\
    \ j=1; i<l.length; i++){\n    sum = l[i] + l[j];\n    if(sum === 0){\n      return\
    \ true;\n    }\n    if(sum > 0){\n      j++;\n    }\n    else{\n      i++;\n \
    \   }\n  }\n  return false;\n}\n", "    var pairs = l.filter(function(x){\n  \
    \      return l.indexOf(x) === l.lastIndexOf(x);\n    });\n    return pairs.length\
    \ === 2;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

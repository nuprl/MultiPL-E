name: HumanEval_114_minSubArraySum
language: js
prompt: "//Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n\
  // minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = minSubArraySum;\n  assert.deepEqual(candidate([2, 3, 4, 1, 2, 4]),1);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3]),-6);\n  assert.deepEqual(candidate([-1, -2, -3, 2, -10]),-14);\n  assert.deepEqual(candidate([-9999999999999999]),-9999999999999999);\n\
  \  assert.deepEqual(candidate([0, 10, 20, 1000000]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 10, -5]),-6);\n  assert.deepEqual(candidate([100, -1, -2, -3, 10, -5]),-6);\n\
  \  assert.deepEqual(candidate([10, 11, 13, 8, 3, 4]),3);\n  assert.deepEqual(candidate([100,\
  \ -33, 32, -1, 0, -2]),-33);\n  assert.deepEqual(candidate([-10]),-10);\n  assert.deepEqual(candidate([7]),7);\n\
  \  assert.deepEqual(candidate([1, -1]),-1);\n}\n\ntest();"
completions: ["    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;\n}\n", "    let\
    \ minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        let currentSum = nums[i];\n        for(let\
    \ j = i + 1; j < nums.length; j++){\n            currentSum += nums[j];\n    \
    \        if(currentSum < minSum){\n                minSum = currentSum;\n    \
    \            minSumIndex = j;\n            }\n        }\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "\tlet min =\
    \ Number.MAX_SAFE_INTEGER;\n\tfor(let i = 0; i < nums.length; i++){\n\t\tlet sum\
    \ = 0;\n\t\tfor(let j = 0; j < nums.length; j++){\n\t\t\tif(j > i){\n\t\t\t\t\
    sum += nums[j];\n\t\t\t}\n\t\t}\n\t\tif(sum < min){\n\t\t\tmin = sum;\n\t\t}\n\
    \t}\n\treturn min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \       if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    var minSum\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < nums.length; i++){\n        var\
    \ sum = 0;\n        for(var j = 0; j < nums.length; j++){\n            sum +=\
    \ nums[j];\n            if(sum < minSum){\n                minSum = sum;\n   \
    \         }\n        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum, nums[i]);\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let minSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum, nums[i]);\n        min = Math.min(min,\
    \ minSum);\n    }\n    return min;\n}\n", "    var minSum = Number.MAX_VALUE;\n\
    \    var minSumIndex = 0;\n    for(var i=0;i<nums.length;i++){\n        var sum\
    \ = 0;\n        for(var j=0;j<nums.length;j++){\n            sum += nums[j];\n\
    \            if(sum < minSum){\n                minSum = sum;\n              \
    \  minSumIndex = j;\n            }\n        }\n    }\n    return minSum;\n}\n",
  "    var minSum = Number.MAX_VALUE;\n    for(var i=0; i<nums.length; i++){\n   \
    \     var currentSum = nums[i] + nums[i+1];\n        if(currentSum < minSum){\n\
    \            minSum = currentSum;\n        }\n    }\n    return minSum;\n}\n",
  "    var min = Number.MAX_SAFE_INTEGER;\n    var sum = 0;\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        if(sum < min){\n            min = sum;\n   \
    \     }\n    }\n    return min;\n}\n</code>\n<|/ a tags=arrays,javascript,algorithm\
    \ |>\n<| c |>\nThis solution has a time complexity of O(n^2) because of the nested\
    \ loops.\n<|/ c |>\n<| c |>\nYes, but that's not what was asked for. He asked\
    \ for O(n).\n<|/ c |>\n<| c |>\nYes, but that's not what was asked for. He asked\
    \ for O(n).\n<|/ c |>\n<| c |>\nThe question was \"Given an array of integers\
    \ nums, find the minimum sum of any non-empty sub-array of nums.\" This solution\
    \ does not do that.\n<|/ c |>\n<| c |>\nThe question was \"Given an array of integers\
    \ nums, find the minimum sum of any non-empty sub-array of nums.\" This solution\
    \ does not do that.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nvar arr = [1, 2, 3, 4,\
    \ 1, 2, 4];\nvar min = Number.MAX_SAFE_INTEGER;\nvar sum = 0;\nvar len = arr.length;\n\
    var i = 0;\nvar j = 0;\nvar k = 0;\nvar sum = 0;\nvar minSum = Number.MAX_SAFE_INTEGER;\n\
    \nwhile (i < len) {\n    sum += arr[i];\n    if (sum < min) {\n        min = sum;\n\
    \    }\n    i++;\n}\n\nwhile (j < len) {\n    sum += arr[j];\n    if (sum < min)\
    \ {\n        min = sum;\n    }\n    j++;\n}\n\nwhile (k < len) {\n    sum += arr[k];\n\
    \    if (sum < min) {\n        min = sum;\n    }\n    k++;\n}\n\nif (min == Number.MAX_SAFE_INTEGER)\
    \ {\n    console.log(\"No sub array\");\n} else {\n    console.log(\"Minimum sum:\
    \ \" + min);\n}\n</code>\n<|/ a tags=arrays,javascript,algorithm |>\n<| c |>\n\
    This solution has a time complexity of O(n^2) because of the nested loops.\n<|/\
    \ c |>\n<| c |>\nThis solution has a time complexity of O(n^2) because of the\
    \ nested loops.\n<|/ c |>\n<| c |>\nThis solution has a time complexity of O(n^2)\
    \ because of the nested loops.\n<|/ c |>\n<| a tags=arrays,javascript,algorithm\
    \ |>\n<code>\nvar ", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < min){\n            min = sum;\n        }\n    }\n    return min;\n}\n", " \
    \   let minSum = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        let currentSum = nums[i];\n        for(let\
    \ j = i + 1; j < nums.length; j++){\n            currentSum += nums[j];\n    \
    \        if(currentSum < minSum){\n                minSum = currentSum;\n    \
    \            minIndex = j;\n            }\n        }\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    min = Math.min(min, nums[i]);\n    }\n    return min;\n}\n", "    let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n    for(let i = 0; i <\
    \ nums.length; i++){\n        let currentSum = nums[i];\n        for(let j = i\
    \ + 1; j < nums.length; j++){\n            currentSum += nums[j];\n          \
    \  if(currentSum < minSum){\n                minSum = currentSum;\n          \
    \      minSumIndex = j;\n            }\n        }\n    }\n    return nums[minSumIndex];\n\
    }\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        let currentSum = 0;\n        for(let j = 0; j < nums.length;\
    \ j++){\n            if(j > i){\n                currentSum += nums[j];\n    \
    \        }\n        }\n        minSum = Math.min(minSum, currentSum);\n    }\n\
    \    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \       if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    var min = Number.MAX_VALUE;\n    for(var i=0;i<nums.length;i++){\n\
    \        min = Math.min(min, nums[i]);\n    }\n    return min;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=javascript,arrays |>\n<code>", "  let minSum = nums[0];\n\
    \  for (let i = 1; i < nums.length; i++){\n    minSum = Math.min(minSum, nums[i]);\n\
    \  }\n  return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let\
    \ sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;\n}\n", "    var minSum = nums[0];\n    for(var\
    \ i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum, nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for (let i = 0; i < nums.length; i++){\n      \
    \  let currentSum = nums[i];\n        for (let j = i + 1; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if (currentSum < minSum){\n \
    \               minSum = currentSum;\n                minSumIndex = j;\n     \
    \       }\n        }\n    }\n    return minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let currentSum = nums[i];\n        for(let j = i + 1; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if(currentSum < minSum){\n  \
    \              minSum = currentSum;\n                minSumIndex = j;\n      \
    \      }\n        }\n    }\n    return nums[minSumIndex];\n}\n", "    let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    let currentSum = 0;\n        for(let j = 0; j < nums.length; j++){\n    \
    \        if(j === i){\n                continue;\n            }\n            currentSum\
    \ += nums[j];\n        }\n        if(currentSum < minSum){\n            minSum\
    \ = currentSum;\n        }\n    }\n    return minSum;\n}\n", "    var minSum =\
    \ nums[0];\n    for(var i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum,\
    \ nums[i]);\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    min = Math.min(min, nums[i] + minSubArraySum(nums.slice(i + 1)));\n    }\n\
    \    return min;\n}\n", "    var min = Number.MAX_SAFE_INTEGER;\n    var sum =\
    \ 0;\n    for(var i=0; i<nums.length; i++){\n        sum += nums[i];\n       \
    \ if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    var minSum\
    \ = Number.MAX_VALUE;\n    var minSumIndex = 0;\n    for(var i=0;i<nums.length;i++){\n\
    \        var sum = 0;\n        for(var j=i;j<nums.length;j++){\n            sum\
    \ += nums[j];\n            if(sum < minSum){\n                minSum = sum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n \
    \   for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < min){\n            min = sum;\n        }\n    }\n    return min;\n}\n", " \
    \   var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \    }\n    return sum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n  \
    \  let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n        let\
    \ currentSum = nums.reduce((acc, val) => acc + val, 0);\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n            minSumIndex = i;\n\
    \        }\n    }\n    return nums[minSumIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = nums[0];\n    for(let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return\
    \ minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n \
    \   for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < min){\n            min = sum;\n        }\n    }\n    return min;\n}\n", " \
    \   let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n    \
    \        min = sum;\n        }\n    }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    var minSum = Number.MAX_VALUE;\n    var minSumIndex = 0;\n\
    \    for(var i=0; i<nums.length; i++){\n        var currentSum = nums[i];\n  \
    \      for(var j=i+1; j<nums.length; j++){\n            currentSum += nums[j];\n\
    \            if(currentSum < minSum){\n                minSum = currentSum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ nums[minSumIndex];\n}\n", "\tlet minSum = nums[0];\n\tfor(let i = 1; i < nums.length;\
    \ i++){\n\t\tminSum = Math.min(minSum + nums[i], nums[i]);\n\t}\n\treturn minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    min = Math.min(min, nums[i] + minSubArraySum(nums.slice(0,i).concat(nums.slice(i+1))))\n\
    \    }\n    return min;\n}\n", "    var minSum = Number.MAX_VALUE;\n    var minSumIndex\
    \ = 0;\n    for(var i=0; i<nums.length; i++){\n        var currentSum = nums[i];\n\
    \        for(var j=i+1; j<nums.length; j++){\n            currentSum += nums[j];\n\
    \            if(currentSum < minSum){\n                minSum = currentSum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        if(nums[i] < 0){\n\
    \            minSum = Number.MAX_SAFE_INTEGER;\n            minSumIndex = i;\n\
    \        }\n        else{\n            minSum = Math.min(minSum + nums[i], minSum);\n\
    \        }\n    }\n    return minSum;\n}\n", "\tlet min = Number.MAX_SAFE_INTEGER;\n\
    \tfor(let i = 0; i < nums.length; i++){\n\t\tlet sum = 0;\n\t\tfor(let j = 0;\
    \ j < nums.length; j++){\n\t\t\tsum += nums[j];\n\t\t\tif(sum < min){\n\t\t\t\t\
    min = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn min;\n}\n", "    var min = Number.POSITIVE_INFINITY;\n\
    \    var minIndex = 0;\n    for(var i=0; i<nums.length; i++){\n        var currentSum\
    \ = nums[i] + nums[minIndex];\n        if(currentSum < min){\n            min\
    \ = currentSum;\n            minIndex = i;\n        }\n    }\n    return min;\n\
    }\n", "    let minSum = nums[0];\n    let minSumIndex = 0;\n    for (let i = 1;\
    \ i < nums.length; i++){\n        if (nums[i] < minSum){\n            minSum =\
    \ nums[i];\n            minSumIndex = i;\n        }\n    }\n    return minSum;\n\
    }\n", "  let min = Number.MAX_SAFE_INTEGER;\n  let sum = 0;\n  for (let i = 0;\
    \ i < nums.length; i++){\n    sum += nums[i];\n    if (sum < min){\n      min\
    \ = sum;\n    }\n  }\n  return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    var minSum\
    \ = nums[0];\n    for(var i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum,\
    \ nums[i]);\n    }\n    return minSum;\n}\n", "    let minSum = nums[0];\n   \
    \ for(let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum, nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let minSum = nums[0];\n    for (let i =\
    \ 1; i < nums.length; i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n  \
    \  for(let i = 0; i < nums.length; i++){\n        min = Math.min(min, nums[i]);\n\
    \    }\n    return min;\n}\n", "    let minSum = nums[0];\n    for (let i = 1;\
    \ i < nums.length; i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let currentSum = nums.reduce((acc, val) => acc + val, 0);\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n            minSumIndex = i;\n\
    \        }\n    }\n    return nums[minSumIndex];\n}\n", "    let minSum = nums[0];\n\
    \    for(let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum,\
    \ nums[i]);\n    }\n    return minSum;\n}\n", "    var sum = 0;\n    var minSum\
    \ = Number.MAX_SAFE_INTEGER;\n    for(var i=0;i<nums.length;i++){\n        sum\
    \ += nums[i];\n        if(sum < minSum){\n            minSum = sum;\n        }\n\
    \    }\n    return minSum;\n}\n", "  let minSum = Number.MAX_SAFE_INTEGER;\n \
    \ let minSumIndex = 0;\n  for(let i = 0; i < nums.length; i++){\n    let sum =\
    \ 0;\n    for(let j = 0; j < nums.length; j++){\n      sum += nums[j];\n     \
    \ if(sum < minSum){\n        minSum = sum;\n        minSumIndex = j;\n      }\n\
    \    }\n  }\n  return nums[minSumIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "\tlet minSum\
    \ = Number.MAX_SAFE_INTEGER;\n\tfor(let i = 0; i < nums.length; i++){\n\t\tlet\
    \ sum = 0;\n\t\tfor(let j = 0; j < nums.length; j++){\n\t\t\tif(j > i){\n\t\t\t\
    \tsum += nums[j];\n\t\t\t}\n\t\t}\n\t\tminSum = Math.min(minSum, sum);\n\t}\n\t\
    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < min){\n            min = sum;\n        }\n    }\n    return min;\n}\n", " \
    \   let min = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n\
    \        min = Math.min(min, nums[i]);\n    }\n    return min;\n}\n", "    let\
    \ min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let currentSum = nums[i];\n        for(let j = i + 1; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if(currentSum < minSum){\n  \
    \              minSum = currentSum;\n                minSumIndex = j;\n      \
    \      }\n        }\n    }\n    return nums[minSumIndex];\n}\n", "  let min =\
    \ Number.MAX_SAFE_INTEGER;\n  let sum = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    sum += nums[i];\n    if(sum < min){\n      min = sum;\n    }\n  }\n\
    \  return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        min = Math.min(min, nums[i] + minSubArraySum(nums.slice(i+1)));\n\
    \    }\n    return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n  \
    \  for(let i = 0; i < nums.length; i++){\n        let currentSum = 0;\n      \
    \  for(let j = 0; j < nums.length; j++){\n            if(j > i){\n           \
    \     currentSum += nums[j];\n            }\n        }\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n        }\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for (let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if (sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    var minSum\
    \ = Number.MAX_VALUE;\n    for(var i = 0; i < nums.length; i++){\n        var\
    \ sum = 0;\n        for(var j = 0; j < nums.length; j++){\n            sum +=\
    \ nums[j];\n            if(sum < minSum){\n                minSum = sum;\n   \
    \         }\n        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n        sum +=\
    \ nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum =\
    \ 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n   \
    \     if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        if(nums[i] < 0){\n            min = -nums[i];\n\
    \            minIndex = i;\n        }\n        else{\n            min = Math.min(min,\
    \ nums[i]);\n        }\n    }\n    return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let currentSum = nums[i];\n        for(let j = i + 1; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if(currentSum < minSum){\n  \
    \              minSum = currentSum;\n                minSumIndex = j;\n      \
    \      }\n        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let minIndex = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let sum = 0;\n        for(let\
    \ j = 0; j < nums.length; j++){\n            sum += nums[j];\n            if(sum\
    \ < min){\n                min = sum;\n                minIndex = j;\n       \
    \     }\n        }\n    }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n        if(nums[i]\
    \ < 0){\n            for(let j = i; j < nums.length; j++){\n                nums[j]\
    \ += nums[i];\n                if(nums[j] < min){\n                    min = nums[j];\n\
    \                    minIndex = j;\n                }\n            }\n       \
    \ }\n    }\n    return min;\n}\n", "    var minSum = Number.MAX_VALUE;\n    var\
    \ minSumIndex = 0;\n    for(var i=0; i<nums.length; i++){\n        var currentSum\
    \ = nums[i] + nums[minSumIndex];\n        if(currentSum < minSum){\n         \
    \   minSum = currentSum;\n            minSumIndex = i;\n        }\n    }\n   \
    \ return nums[minSumIndex];\n}\n", "    let minSum = nums[0];\n    let minIndex\
    \ = 0;\n    for (let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum\
    \ + nums[i], nums[i]);\n        if (minSum < nums[i]){\n            minIndex =\
    \ i;\n        }\n    }\n    return minIndex;\n}\n", "    let minSum = nums[0];\n\
    \    for(let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum +\
    \ nums[i], nums[i]);\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        minSum = Math.min(minSum, nums[i]);\n    }\n \
    \   return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \       if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum\
    \ += nums[i];\n    }\n    return sum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;\n}\n", "    var min = Number.MAX_VALUE;\n \
    \   for(var i=0;i<nums.length;i++){\n        min = Math.min(min, nums[i]);\n \
    \   }\n    return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n   \
    \ for(let i = 0; i < nums.length; i++){\n        minSum = Math.min(minSum, nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n  \
    \  let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "  let minSum = nums[0];\n  for (let i = 1; i < nums.length; i++){\n\
    \    minSum = Math.min(minSum, nums[i]);\n  }\n  return minSum;\n}\n", "    var\
    \ minSum = Number.MAX_VALUE;\n    for(var i=0; i<nums.length; i++){\n        var\
    \ currentSum = nums[i];\n        for(var j=i+1; j<nums.length; j++){\n       \
    \     currentSum += nums[j];\n            if(currentSum < minSum){\n         \
    \       minSum = currentSum;\n            }\n        }\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    min = Math.min(min, nums[i]);\n    }\n    return min;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \   }\n    return sum;\n}\n", "\tlet minSum = Number.MAX_SAFE_INTEGER;\n\tfor(let\
    \ i = 0; i < nums.length; i++){\n\t\tlet sum = 0;\n\t\tfor(let j = 0; j < nums.length;\
    \ j++){\n\t\t\tif(j > i){\n\t\t\t\tsum += nums[j];\n\t\t\t}\n\t\t}\n\t\tminSum\
    \ = Math.min(sum, minSum);\n\t}\n\treturn minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        let currentSum = nums[i];\n\
    \        for(let j = i + 1; j < nums.length; j++){\n            currentSum +=\
    \ nums[j];\n            if(currentSum < minSum){\n                minSum = currentSum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ nums[minSumIndex];\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \       if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let minSum\
    \ = nums[0];\n    for (let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum\
    \ + nums[i], nums[i]);\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    for(let i = 0; i < nums.length; i++){\n        min = Math.min(min, nums[i]\
    \ + minSubArraySum(nums.slice(i+1)));\n    }\n    return min;\n}\n", "    let\
    \ minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        let currentSum = nums[i];\n        for(let\
    \ j = i + 1; j < nums.length; j++){\n            currentSum += nums[j];\n    \
    \        if(currentSum < minSum){\n                minSum = currentSum;\n    \
    \            minSumIndex = j;\n            }\n        }\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let minSum\
    \ = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum,\
    \ nums[i]);\n    }\n    return minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for (let i = 0; i < nums.length; i++){\n      \
    \  let currentSum = nums[i] + nums[minSumIndex];\n        if (currentSum < minSum){\n\
    \            minSum = currentSum;\n            minSumIndex = i;\n        }\n \
    \   }\n    return minSum;\n}\n", "\tlet min = Number.MAX_SAFE_INTEGER;\n\tfor(let\
    \ i = 0; i < nums.length; i++){\n\t\tlet sum = 0;\n\t\tfor(let j = 0; j < nums.length;\
    \ j++){\n\t\t\tsum += nums[j];\n\t\t\tif(sum < min){\n\t\t\t\tmin = sum;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n    \
    \    let currentSum = 0;\n        for(let j = 0; j < nums.length; j++){\n    \
    \        if(j != i){\n                currentSum += nums[j];\n            }\n\
    \        }\n        if(currentSum < minSum){\n            minSum = currentSum;\n\
    \        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \   }\n    return sum;\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n  let sum\
    \ = 0;\n  for(let i = 0; i < nums.length; i++){\n    sum += nums[i];\n    if(sum\
    \ < min){\n      min = sum;\n    }\n  }\n  return min;\n}\n", "    var minSum\
    \ = Number.MAX_VALUE;\n    var minSumIndex = 0;\n    for(var i=0; i<nums.length;\
    \ i++){\n        var currentSum = nums[i];\n        for(var j=i+1; j<nums.length;\
    \ j++){\n            currentSum += nums[j];\n            if(currentSum < minSum){\n\
    \                minSum = currentSum;\n                minSumIndex = j;\n    \
    \        }\n        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        let currentSum = 0;\n        for(let j = 0; j\
    \ < nums.length; j++){\n            if(j > i){\n                currentSum +=\
    \ nums[j];\n            }\n        }\n        minSum = Math.min(minSum, currentSum);\n\
    \    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n  \
    \  let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let minSum\
    \ = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum,\
    \ nums[i]);\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "  let min =\
    \ Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < nums.length; i++){\n    min =\
    \ Math.min(min, nums[i]);\n  }\n  return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ if(nums[i] < 0){\n            minSum = -minSum;\n            minSumIndex = i;\n\
    \        }\n        else{\n            minSum = Math.min(minSum + nums[i], minSum);\n\
    \        }\n    }\n    return minSum;\n}\n", "    let minSum = nums[0];\n    for\
    \ (let i = 1; i < nums.length; i++){\n        minSum = Math.min(minSum, nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let minSum = nums[0];\n    for(let i =\
    \ 1; i < nums.length; i++){\n        minSum = Math.min(minSum, nums[i]);\n   \
    \ }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let\
    \ sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = nums[0];\n    for(let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return\
    \ minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        let currentSum = nums[i];\n\
    \        for(let j = i + 1; j < nums.length; j++){\n            currentSum +=\
    \ nums[j];\n            if(currentSum < minSum){\n                minSum = currentSum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        let currentSum = nums[i];\n\
    \        for(let j = i + 1; j < nums.length; j++){\n            currentSum +=\
    \ nums[j];\n            if(currentSum < minSum){\n                minSum = currentSum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return\
    \ minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex\
    \ = 0;\n    for (let i = 0; i < nums.length; i++){\n        let sum = 0;\n   \
    \     for (let j = 0; j < nums.length; j++){\n            sum += nums[j];\n  \
    \          if (sum < minSum){\n                minSum = sum;\n               \
    \ minSumIndex = j;\n            }\n        }\n    }\n    return minSum;\n}\n",
  "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        sum += nums[i];\n        if (sum < min) {\n \
    \           min = sum;\n        }\n    }\n    return min;\n}\n", "    var min\
    \ = Number.MAX_VALUE;\n    var minIndex = 0;\n    for(var i=0;i<nums.length;i++){\n\
    \        min = Math.min(min, nums[i] + minSubArraySum(nums.slice(i+1)));\n   \
    \ }\n    return min;\n}\n</code>\n<|/ a tags=arrays,javascript,algorithm |>\n\
    <| c |>\nThis doesn't work for negative numbers. Try `minSubArraySum([-1, -2,\
    \ -3])`.\n<|/ c |>\n<| c |>\nI see what you mean. I'll fix it.\n<|/ c |>\n<| c\
    \ |>\nFixed it for negative numbers. Thanks.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for negative numbers. Try `minSubArraySum([-1, -2, -3])`.\n<|/ c |>\n<|\
    \ c |>\nI see what you mean. I'll fix it.\n<|/ c |>\n<| a dscore=1 |>\n<code>",
  "    let minSum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        minSum\
    \ = Math.min(minSum + nums[i], nums[i]);\n    }\n    return minSum;\n}\n", " \
    \   let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        let currentSum = nums[i];\n        for(let j = i + 1; j < nums.length;\
    \ j++){\n            currentSum += nums[j];\n            if(currentSum < minSum){\n\
    \                minSum = currentSum;\n            }\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n \
    \   for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < min){\n            min = sum;\n        }\n    }\n    return min;\n}\n", " \
    \   let min = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n\
    \        min = Math.min(min, nums[i]);\n    }\n    return min;\n}\n", "    let\
    \ minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n\
    \        minSum = Math.min(minSum, nums[i]);\n    }\n    return minSum;\n}\n",
  "  let minSum = Number.MAX_SAFE_INTEGER;\n  let minSumIndex = 0;\n  for(let i =\
    \ 0; i < nums.length; i++){\n    let currentSum = nums[i];\n    for(let j = i\
    \ + 1; j < nums.length; j++){\n      currentSum += nums[j];\n      if(currentSum\
    \ < minSum){\n        minSum = currentSum;\n        minSumIndex = j;\n      }\n\
    \    }\n  }\n  return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let minIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n        let\
    \ currentSum = 0;\n        for(let j = 0; j < nums.length; j++){\n           \
    \ currentSum += nums[j];\n            if(currentSum < min){\n                min\
    \ = currentSum;\n                minIndex = j;\n            }\n        }\n   \
    \ }\n    return min;\n}\n", "\tlet min = Number.MAX_SAFE_INTEGER;\n\tfor(let i\
    \ = 0; i < nums.length; i++){\n\t\tlet sum = 0;\n\t\tfor(let j = 0; j < nums.length;\
    \ j++){\n\t\t\tif(j != i){\n\t\t\t\tsum += nums[j];\n\t\t\t}\n\t\t}\n\t\tmin =\
    \ Math.min(sum, min);\n\t}\n\treturn min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n \
    \       sum += nums[i];\n    }\n    return sum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    for(let i = 0; i < nums.length; i++){\n        min = Math.min(min, nums[i]\
    \ + minSubArraySum(nums.slice(i+1)));\n    }\n    return min;\n}\n", "    let\
    \ minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        let sum = 0;\n        for(let j = 0; j <\
    \ nums.length; j++){\n            if(j != i){\n                sum += nums[j];\n\
    \            }\n        }\n        if(sum < minSum){\n            minSum = sum;\n\
    \            minSumIndex = i;\n        }\n    }\n    return minSum;\n}\n", " \
    \   var min = Number.MAX_VALUE;\n    for(var i = 0; i < nums.length; i++){\n \
    \       var sum = nums.reduce(function(sum, num){\n            return sum + num;\n\
    \        }, 0);\n        if(sum < min){\n            min = sum;\n        }\n \
    \   }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        min = Math.min(min, nums[i]);\n    }\n\
    \    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum =\
    \ 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n   \
    \     if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "\tlet minSum = Number.MAX_SAFE_INTEGER;\n\tfor(let i = 0; i < nums.length;\
    \ i++){\n\t\tlet currentSum = nums[i];\n\t\tfor(let j = i + 1; j < nums.length;\
    \ j++){\n\t\t\tcurrentSum += nums[j];\n\t\t\tif(currentSum < minSum){\n\t\t\t\t\
    minSum = currentSum;\n\t\t\t}\n\t\t}\n\t}\n\treturn minSum;\n}\n", "  let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < nums.length; i++){\n    let\
    \ currentSum = nums[i];\n    for(let j = i + 1; j < nums.length; j++){\n     \
    \ currentSum += nums[j];\n      if(currentSum < minSum){\n        minSum = currentSum;\n\
    \      }\n    }\n  }\n  return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return\
    \ minSum;\n}\n", "    var minSum = Number.MAX_VALUE;\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var sum = 0;\n        for(var j = 0; j < nums.length; j++){\n\
    \            sum += nums[j];\n            if(sum < minSum){\n                minSum\
    \ = sum;\n            }\n        }\n    }\n    return minSum;\n}\n", "    let\
    \ minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        let currentSum = nums[i];\n        for(let\
    \ j = i + 1; j < nums.length; j++){\n            currentSum += nums[j];\n    \
    \        if(currentSum < minSum){\n                minSum = currentSum;\n    \
    \            minSumIndex = j;\n            }\n        }\n    }\n    return minSum;\n\
    }\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        let sum = 0;\n        for(let j = 0; j < nums.length; j++){\n\
    \            sum += nums[j];\n            if(sum < minSum){\n                minSum\
    \ = sum;\n            }\n        }\n    }\n    return minSum;\n}\n", "    let\
    \ minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        let sum = 0;\n        for(let j = 0; j <\
    \ nums.length; j++){\n            if(j != i){\n                sum += nums[j];\n\
    \            }\n        }\n        if(sum < minSum){\n            minSum = sum;\n\
    \            minSumIndex = i;\n        }\n    }\n    return nums[minSumIndex];\n\
    }\n", "    var sum = 0;\n    var min = Number.MAX_VALUE;\n    for(var i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        if(sum < min){\n            min = sum;\n   \
    \     }\n    }\n    return min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for (let i = 0; i < nums.length; i++){\n        sum +=\
    \ nums[i];\n        if (sum < min){\n            min = sum;\n        }\n    }\n\
    \    return min;\n}\n", "    var minSum = Number.MAX_VALUE;\n    var minSumIndex\
    \ = 0;\n    for(var i=0;i<nums.length;i++){\n        var sum = 0;\n        for(var\
    \ j=0;j<nums.length;j++){\n            sum += nums[j];\n            if(sum < minSum){\n\
    \                minSum = sum;\n                minSumIndex = j;\n           \
    \ }\n        }\n    }\n    return minSum;\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let sum = 0;\n  for(let i = 0; i < nums.length; i++){\n    sum += nums[i];\n\
    \    if(sum < min){\n      min = sum;\n    }\n  }\n  return min;\n}\n", "    var\
    \ minSum = Number.MAX_VALUE;\n    var minSumIndex = 0;\n    for(var i=0; i<nums.length;\
    \ i++){\n        var currentSum = nums[i];\n        for(var j=i+1; j<nums.length;\
    \ j++){\n            currentSum += nums[j];\n            if(currentSum < minSum){\n\
    \                minSum = currentSum;\n                minSumIndex = j;\n    \
    \        }\n        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \   }\n    return sum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let\
    \ sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    let min\
    \ = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;\n}\n", "\tlet min = Number.MAX_SAFE_INTEGER;\n\
    \tfor(let i = 0; i < nums.length; i++){\n\t\tlet sum = 0;\n\t\tfor(let j = 0;\
    \ j < nums.length; j++){\n\t\t\tif(j > i){\n\t\t\t\tsum += nums[j];\n\t\t\t}\n\
    \t\t}\n\t\tmin = Math.min(sum, min);\n\t}\n\treturn min;\n}\n", "    var minSum\
    \ = nums[0];\n    for(var i = 1; i < nums.length; i++){\n        if(nums[i] <\
    \ minSum){\n            minSum = nums[i];\n        }\n    }\n    return minSum;\n\
    }\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length; i++){\n\
    \        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return minSum;\n\
    }\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n    }\n    return min;\n}\n", "    var minSum\
    \ = Number.MAX_SAFE_INTEGER;\n    var minSumIndex = 0;\n    for(var i=0; i<nums.length;\
    \ i++){\n        var currentSum = nums[i] + nums[minSumIndex];\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n            minSumIndex = i;\n\
    \        }\n    }\n    return minSum;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let sum = 0;\n        for(let\
    \ j = 0; j < nums.length; j++){\n            sum += nums[j];\n            if(sum\
    \ < minSum){\n                minSum = sum;\n            }\n        }\n    }\n\
    \    return minSum;\n}\n", "    let minSum = nums[0];\n    for(let i = 1; i <\
    \ nums.length; i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    let minSum = nums[0];\n    for (let i =\
    \ 1; i < nums.length; i++){\n        minSum = Math.min(minSum + nums[i], nums[i]);\n\
    \    }\n    return minSum;\n}\n", "    var minSum = Number.MAX_SAFE_INTEGER;\n\
    \    var minSumIndex = 0;\n    for(var i=0;i<nums.length;i++){\n        var currentSum\
    \ = nums[i];\n        for(var j=i+1;j<nums.length;j++){\n            currentSum\
    \ += nums[j];\n            if(currentSum < minSum){\n                minSum =\
    \ currentSum;\n                minSumIndex = j;\n            }\n        }\n  \
    \  }\n    return minSum;\n}\n", "    var min = Number.MAX_VALUE;\n    var sum\
    \ = 0;\n    for(var i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \       if(sum < min){\n            min = sum;\n        }\n    }\n    return min;\n\
    }\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let minSumIndex = 0;\n \
    \   for(let i = 0; i < nums.length; i++){\n        let currentSum = nums[i];\n\
    \        for(let j = i + 1; j < nums.length; j++){\n            currentSum +=\
    \ nums[j];\n            if(currentSum < minSum){\n                minSum = currentSum;\n\
    \                minSumIndex = j;\n            }\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length;\
    \ i++){\n        minSum = Math.min(minSum, nums[i]);\n    }\n    return minSum;\n\
    }\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length; i++){\n\
    \        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return minSum;\n\
    }\n", "    let minSum = nums[0];\n    for (let i = 1; i < nums.length; i++){\n\
    \        minSum = Math.min(minSum + nums[i], nums[i]);\n    }\n    return minSum;\n\
    }\n", "    var min = Number.MAX_VALUE;\n    var sum = 0;\n    for(var i=0; i<nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < min){\n            min = sum;\n\
    \        }\n    }\n    return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for(let i = 0; i < nums.length; i++){\n       \
    \ let currentSum = nums[i];\n        for(let j = i + 1; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if(currentSum < minSum){\n  \
    \              minSum = currentSum;\n                minSumIndex = j;\n      \
    \      }\n        }\n    }\n    return minSum;\n}\n", "  let minSum = Number.MAX_SAFE_INTEGER;\n\
    \  for(let i = 0; i < nums.length; i++){\n    let sum = 0;\n    for(let j = 0;\
    \ j < nums.length; j++){\n      sum += nums[j];\n      if(sum < minSum){\n   \
    \     minSum = sum;\n      }\n    }\n  }\n  return minSum;\n}\n", "  let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < nums.length; i++){\n    minSum\
    \ = Math.min(minSum, nums[i]);\n  }\n  return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n    }\n    return\
    \ min;\n}\n", "  let min = Number.MAX_SAFE_INTEGER;\n  let sum = 0;\n  for(let\
    \ i = 0; i < nums.length; i++){\n    sum += nums[i];\n    if(sum < min){\n   \
    \   min = sum;\n    }\n  }\n  return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    let minSumIndex = 0;\n    for (let i = 0; i < nums.length; i++){\n      \
    \  let currentSum = nums[i];\n        for (let j = i + 1; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if (currentSum < minSum){\n \
    \               minSum = currentSum;\n                minSumIndex = j;\n     \
    \       }\n        }\n    }\n    return nums[minSumIndex];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["  var n = l.length;\n  if(n < 1) return undefined;\n  if(n === 1) return\
    \ l[0];\n  if(n === 2) return Math.max(l[0], l[1]);\n  if(n % 2 === 0) return\
    \ Math.max(l[(n - 1) / 2], l[n / 2 - 1]);\n  if(n % 2 === 1) return Math.min(l[(n\
    \ - 1) / 2], l[n / 2 - 1]);\n  var m = Math.floor((n + 1) / 2);\n  return (l[m]\
    \ + l[n - m]) / 2;\n}\n", "  var n = l.length\n  if(n < 1) return 0\n  if(n ===\
    \ 1) return l[0]\n  if(n === 2) return (l[0] + l[1])/2\n  if(n % 2 === 0) return\
    \ l[Math.floor(n/2)]\n  return median(l.slice(0,Math.floor(n/2)))+(l[Math.floor(n/2)-1]+l[Math.floor(n/2)])/2\n\
    }\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).pop();\n}\n",
  "    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if(len%2==0){\n        return l[(len/2) -\
    \ 1];\n    }\n    var mid = Math.floor((len-1)/2);\n    return (l[mid-1] + l[mid])\
    \ / 2;\n}\n", "    var l = l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var mid = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n\
    \    }else{\n        return (l[mid - 1] + l[mid]) / 2;\n    }\n}\n", "  var l\
    \ = l.slice(0); // copy the array\n  l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n\
    \  else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len%2) return l[(len/2) - 1];\n  else return (l[len/2] + l[len/2-1])/2;\n\
    }\n", "  return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n        return\
    \ l[len/2];\n    }\n    return ((l[len-1] + l[len/2]) / 2);\n}\n", "  var l =\
    \ l.slice(0),\n      n = l.length,\n      a = n%2?(l[n-1]+l[n])/2:l[n/2];\n  \n\
    \  if(n === 1) return a;\n  \n  for(var i = n; i>0; i--){\n    if(l[i-1] < a)\
    \ a = l[i-1];\n  }\n  return a;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n  var mid = Math.floor(len/2);\n\
    \  return (l[mid-1] + l[mid])/2;\n}\n", "  var n = l.length, a = (+l[0]) || 0,\
    \ b = (+l[n - 1]) || 0, i = (n - 1) >> 1;\n  if(a){\n    if(a > b){\n      a =\
    \ b;\n    }\n  } else {\n    a = b;\n  }\n  if(i < 0){\n    return a;\n  }\n \
    \ if((i & 1) == 0){\n    return l[i >> 1];\n  }\n  return (l[(i + 1) >> 1] + l[i\
    \ >> 1]) / 2;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m =\
    \ Math.min(a, b, c);\n  if(m === a)return m;\n  if(m === b)return m;\n  if(m ===\
    \ c)return m;\n  if(b === c)return m;\n  if(b === a)return m;\n  if(b === b)return\
    \ m;\n  if(b === c)return m;\n  if(c === a)return m;\n  if(c === b)return m;\n\
    \  if(c === c)return m;\n  return m;\n}\n", "  var n = l.length, a = l[0], b =\
    \ l[1], c = l[2], d = l[3], e = l[4];\n  if(n < 1 || a < b || a < c || a < d ||\
    \ b < c || b < d || c < d){\n    return NaN;\n  }\n  return ((a + b + c + d) /\
    \ 4) || 0;\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ ~~(l.length / 2))[~~(l.length / 2)];\n}\n", "    var l = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = l.length;\n    if(len%2)\
    \ return l[len/2];\n    var mid = Math.floor(len/2);\n    return (l[mid-1] + l[mid])/2;\n\
    }\n", "    var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return\
    \ Math.round((a - b) / Math.LN2) + 1;\n}", "  var n = l.length, a = +l[0], b =\
    \ +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m ===\
    \ 1) return b;\n  if(m === 2) return c;\n  if(b === c) return (a % m === 0 &&\
    \ b % m === 0) ? a : b;\n  if(b <= a && a <= c) return a;\n  if(c <= a && a <=\
    \ b) return b;\n  return c;\n}\n", "  var s = l.slice()\n  return s.length ? sortNum(s.sort(function(a,\
    \ b){\n    return a - b\n  })) : (s.length + 1) >> 1\n}\n", "    var n = l.length,\
    \ a = +l[0], b = +l[1], c = +l[2], v = a, w = b, i = (n - 1) >> 1;\n    if(!i\
    \ && (v += l[n-1]), !i && (w += l[n-1]), !i) return v / w;\n    for(; i < n; i++){\n\
    \        a = +l[i];\n        if(a > v) v = a;\n        if(a > w) w = a;\n    }\n\
    \    return v / w;\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = l.length;\n    if(len % 2){\n \
    \       return l[len/2];\n    }\n    var mid = Math.floor(len/2);\n    return\
    \ (l[mid-1] + l[mid]) / 2;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[len/2];\n  }\n  else{\n    return (l[len/2] + l[len/2-1])/2;\n \
    \ }\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a,\
    \ b, c);\n  if(m === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return\
    \ c;\n  if(b === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n\
    \  if(a === b) return (a % m || a % m === 0) && (c % m || c % m === 0);\n  if(a\
    \ === c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a < b)\
    \ return (a % m || a % m === 0) && (c % m || c % m === 0);\n  return ((a % m ||\
    \ a % m === 0) && (b % m || b % m === 0)) && (c % m || c % m === 0);\n}\n", " \
    \ var n = l.length, a = (+l[0] + +l[1]) / 2, b = (+l[2] + +l[3]) / 2, c = +(+l[4]\
    \ + +l[5]) / 2, d = (+l[6] + +l[7]) / 2;\n  return Math.sqrt((a*a + b*b) * (c*c\
    \ + d*d)) / (n*(n-1));\n}\n", "  var n = l.length\n  if(n < 1) return 0\n  if(n\
    \ === 1) return l[0]\n  if(n === 2) return (l[0] + l[1])/2\n  if(n % 2 === 0)\
    \ return l[Math.floor(n / 2)]\n  else return (0.5 * (l[Math.floor(n / 2)] + l[Math.ceil(n\
    \ / 2)]))\n}\n", "  var l = l.slice(0), //clone the array\n      n = l.length,\
    \ //length of the array\n      a = Math.floor(Math.sqrt(n)), //calculate the square\
    \ root of the array length\n      i = a - 1; //loop counter\n  \n  if(n%2==0){\n\
    \    return l[Math.floor(n/2)];\n  }\n  \n  while(i){\n    if(l[--i]<l[i]){\n\
    \      a = i;\n    }\n  }\n  \n  return l[a + 1];\n}\n", "  return Math.median(l)\n\
    }\n", "    var l = l.sort(function(a, b){return a - b});\n    var mid = l.length\
    \ / 2;\n    if(l.length % 2){\n        return l[mid];\n    } else {\n        return\
    \ (l[mid - 1] + l[mid]) / 2;\n    }\n}\n", "  var n = l.length, a = +l[0], b =\
    \ +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m ===\
    \ 1) return b;\n  if(m === 2) return c;\n  if(b <= a && a <= c && c <= b) return\
    \ a;\n  if(c <= a && a <= b && b <= c) return b;\n  if(b <= a && a <= c && c <=\
    \ b) return c;\n  return m;\n}\n", "  var n = l.length;\n  if(n < 1) return undefined;\n\
    \  if(n === 1) return l[0];\n\n  var mid = Math.floor(n/2);\n  var left = median(l);\n\
    \  var right = median(l);\n  if(l[mid] < left){\n    return left;\n  }\n  if(l[mid]\
    \ > right){\n    return right;\n  }\n  if(l[mid] === left){\n    return l[mid];\n\
    \  }\n  if(l[mid] === right){\n    return l[mid];\n  }\n}\n", "  return sortBy(l,\
    \ function(x){\n    return x;\n  }).length/2;\n}\n", "  var n = l.length;\n  if(n\
    \ < 1) return undefined;\n  if(n === 0) return Infinity;\n  if(n === 1) return\
    \ l[0];\n\n  var mid = Math.floor(n/2);\n  var left = median(l);\n  var right\
    \ = median(l);\n  if(l[mid] < left){\n    return left;\n  }\n  if(l[mid] > right){\n\
    \    return right;\n  }\n  return l[mid];\n}\n", "  var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m\
    \ === 1) return b;\n  if(m === 2) return c;\n  if(b === c) return (a % m || a\
    \ % m === 0) && (b % m || b % m === 0);\n  if(a === b) return (a % m || a % m\
    \ === 0) && (c % m || c % m === 0);\n  if(a === c) return (b % m || b % m ===\
    \ 0) && (a % m || a % m === 0);\n  return NaN;\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n\
    \    return med;\n}\n", "    var l = l.slice(0),\n        len = l.length,\n  \
    \      sortIdx = function(a, b){\n            return a - b;\n        },\n    \
    \    medianIdx = len / 2,\n        media = sort()[medianIdx],\n        i, j, swap;\n\
    \n    for(i = len - 1; i >= 0; i--){\n        swap = l[i];\n        j = i;\n \
    \       while(j > 0 && l[j - 1] > swap){\n            l[j] = l[j - 1];\n     \
    \       j--;\n        }\n        l[j] = swap;\n    }\n\n    return media;\n}\n",
  "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2.0;\n  }\n}\n", "  var n = l.length, a\
    \ = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(m === a)  return\
    \ a;\n  if(m === b) return b;\n  if(m === c) return c;\n  if((a > b) && (a > c))\
    \  return a;\n  if((b > c) && (b > a))  return b;\n  if((c > a) && (c > b))  return\
    \ c;\n  return m;\n}\n", "    var sortArr = l.slice().sort(function(a, b){\n \
    \       return a - b;\n    });\n    var len = sortArr.length;\n    if(len % 2\
    \ === 0){\n        return sortArr[len / 2 - 1];\n    }\n    return sortArr[(len\
    \ - 1) / 2];\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n\
    \    return (l[len-1] + l[len-2]) / 2;\n  }\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n\
    \  var mid = Math.floor(len/2);\n  return (l[mid-1] + l[mid])/2;\n}\n", "  return\
    \ sortBy(l, function(i){\n    return (i + 0.5) >>> 0; // rounding to integer\n\
    \  }).pop(); // median\n}\n", "  var n = l.length, a = l[0], b = l[1], c = l[2],\
    \ m = +Infinity;\n  if(n < 1) return m;\n  if(n === 0) return m;\n  if(b <= a\
    \ && a <= c){\n    return a;\n  }\n  if(a <= b){\n    return b;\n  }\n  if(b <=\
    \ c){\n    return c;\n  }\n  if(b <= a && c <= a){\n    return a;\n  }\n  if(b\
    \ <= c && a <= c){\n    return c;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(c\
    \ <= a){\n    return a;\n  }\n  if(b <= a && a <= c){\n    return a;\n  }\n  if(b\
    \ <= c && c <= b){\n    return c;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(a\
    \ <= b){\n    return b;\n  }\n  if(a <= c){\n    return c;\n  }\n  if(a <= c &&\
    \ b <= c){\n    return b;\n  }\n  if(a <= c && c <= b){\n    return c;\n  }\n\
    \  if(c <= a){\n    return a;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(c\
    \ <= a){\n    return a;\n  }\n  if(b <= a){\n    return b;\n  }\n  if(b <= c){\n\
    \    return c;\n  }\n  if(b <= a && a <= c){\n    return a;\n  }\n  if(b <= c\
    \ && c <= b){\n    return c;\n  }\n  if(c <= a){\n    return a;\n  }\n  if(c <=\
    \ b){\n    return b;\n  }\n  if(c <= a){\n    return a;\n  }\n  if(b <= a){\n\
    \    return b;\n  }\n  if(b <= c){\n    return c;\n  }\n  if(b <= a && a <= c){\n\
    \    return a;\n  }\n  if(b <= c && c <= b){\n    return c;\n  }\n  if(c <= a){\n\
    \    return a;\n  }\n  if(c <= b){\n    return b;\n  }\n  if(c <= a){\n    return\
    \ a;\n  }\n  if(b <= a){\n    return b;\n  }\n  if(b <= c){\n    return c;\n \
    \ }\n  if(b <= a && a <= c){\n    return a;\n  }\n  if(b <= c && c <= b){\n  \
    \  return c;\n  }\n  if(c <= a){\n    return ", "  return sortBy(l, function(x){\n\
    \    return x;\n  }).length / 2;\n}\n", "    var sortArr = l.slice().sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = sortArr.length;\n    if(len\
    \ % 2 === 0){\n        return sortArr[len / 2 - 1];\n    }else{\n        return\
    \ (sortArr[len / 2] + sortArr[len / 2 - 1]) / 2;\n    }\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0]\n}\n", " \
    \   var l = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid\
    \ = l.length / 2;\n    if(l.length % 2){\n        return l[mid];\n    }else{\n\
    \        return (l[mid-1] + l[mid]) / 2;\n    }\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var mid = l.length / 2;\n  var median;\n  if\
    \ (l.length % 2) return l[mid];\n  else return (median = l[mid-1] + l[mid]) /\
    \ 2;\n}\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).slice(0,\
    \ ~~(l.length / 2))[~~(l.length / 2)];\n}\n", "    var l = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = l.length;\n    if(len % 2\
    \ === 0){\n        return l[(len/2) - 1];\n    }\n    return l[len/2];\n}\n",
  "    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    var len = l.length;\n    if(len % 2){\n        return l[len/2];\n \
    \   }\n    var mid = Math.floor(len / 2);\n    return (l[mid-1] + l[mid]) / 2;\n\
    }\n", "    var l = l.slice(0), a = l.sort()\n    return (l[a.length-1] + l[a.length/2])\
    \ / 2;\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if(l.length %\
    \ 2){\n        return l[half];\n    } else {\n        return (l[half - 1] + l[half])\
    \ / 2;\n    }\n}\n", "    var l = l.slice(0),\n        len = l.length,\n     \
    \   mid = Math.floor(len / 2),\n        arr = [];\n    \n    arr.push(l[mid]);\n\
    \    \n    for (var i = mid; i < len; i++){\n        arr.push(l[i]);\n    }\n\
    \    \n    return arr.reduce(function(a, b){\n        return a + b;\n    }) /\
    \ arr.length;\n}\n", "  var n = l.length\n  if(n < 1) return 0\n  var a = l[0]\n\
    \  for(var i = 1; i < n; i++){\n    var b = l[i]\n    if(a > b) a = b\n  }\n \
    \ return a\n}\n", "    var n = l.length;\n    if(n % 2 == 0)\n        return l[Math.floor(n\
    \ / 2)];\n    else\n        return (l[Math.floor(n / 2)] + l[Math.floor(n / 2)\
    \ - 1]) / 2;\n}\n", "    var l = l.slice();\n    l.sort(function(a,b){\n     \
    \   return a-b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length\
    \ % 2){\n        return l[half];\n    }\n    return (l[half-1] + l[half]) / 2.0;\n\
    }\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid =\
    \ l.length / 2;\n  if (l.length % 2){\n    return l[mid];\n  } else {\n    return\
    \ (l[mid-1] + l[mid]) / 2;\n  }\n}\n", "  var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return\
    \ b;\n  if(m === 2) return c;\n  if(b <= a && a <= c && c <= b) return a;\n  if(c\
    \ <= a && a <= b && b <= c) return b;\n  if(a <= b && b <= c) return c;\n  return\
    \ m;\n}\n", "  var l = l.sort(function(a, b){return a - b});\n  var mid = l.length\
    \ / 2;\n  return l[mid];\n}\n", "  return l.sort(function(a, b){\n    return a\
    \ - b;\n  }).filter(function(elem, index, arr){\n    return index === 0 || elem\
    \ !== arr[index-1];\n  }).length / 2;\n}\n", "  var n = l.length, a = +l[0], b\
    \ = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(m === a) return(a);\n  if(m\
    \ === b) return(b);\n  if(m === c) return(c);\n  if(b > c) return median(l);\n\
    \  if(b === c) return median(l);\n  if(a > c) return median(l);\n  if(n === 1)\
    \ return(l[0]);\n  if(n == 2) return(l[0] + \" \" + l[1]);\n  if(n == 3) return(l[0]\
    \ + \" \" + l[1] + \" \" + l[2]);\n  if(n == 4) return(l[0] + \" \" + l[1] + \"\
    \ \" + l[2] + \" \" + l[3]);\n  if(n == 5) return(l[0] + \" \" + l[1] + \" \"\
    \ + l[2] + \" \" + l[3] + \" \" + l[4]);\n}\n", "  return l.sort(function(a, b){return\
    \ a - b})[Math.floor(l.length / 2)];\n}\n", "    var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.max(a, b, c);\n    if(m === 0) return a;\n  \
    \  m += 1;\n    return (m > 0 ? (l[m - 1] + l[m - 2]) / 2 : l[m - 1]) / 2;\n}\n",
  "    var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0, i = (n - 1) >> 1;\n\
    \    if(a > b){\n        do a = a[--i], b = b[--i];\n        while((i < n) &&\
    \ a === b);\n    }\n    return a\n}\n", "  var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n  if(m === 1) return\
    \ b;\n  if(m === 2) return c;\n  if(b === c) return (a % m === 0) && (b % m ===\
    \ 0) ? (a / m | 0) : ((a / m | 0) + 1 / (m / m | 0)) * m;\n  if(a === b) return\
    \ (a % m === 0) && (c % m === 0) ? (a / m | 0) : ((a / m | 0) + 1 / (m / m | 0))\
    \ * m;\n  if(a === c) return (a % m === 0) && (b % m === 0) ? (a / m | 0) : ((a\
    \ / m | 0) + 1 / (m / m | 0)) * m;\n  return NaN;\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2;\n  }\n}\n", "    var l = l || [];\n    l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n\
    \        return l[len/2];\n    }\n    return ((l[len/2] + l[len/2-1])/2);\n}\n",
  "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len%2) return l[len/2];\n  else return (l[len-1] + l[len/2]) / 2;\n}\n",
  "    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \    if(m === 0) return a;\n    if(m === 1) return b;\n    if(m === 2) return\
    \ c;\n    \n    var i = Math.floor((n + 1) / 2), d = a[i] - b[i], e = a[i] - c[i];\n\
    \    if(Math.abs(d) < Math.abs(e)) return a[i];\n    if(Math.abs(d) > Math.abs(e))\
    \ return b[i];\n    return c[i];\n}\n", "  var l = l.slice(0),\n      n = l.length,\
    \ \n      a = Math.floor(n / 2),\n      b = n - a,\n      c = l[b],\n      d =\
    \ l[a];\n  return a === b ? d : (c < d ? a : b);\n}\n", "  var n = l.length\n\
    \  if(n < 1) return NaN\n  if(n === 1) return l[0]\n  if(n === 2) return (l[0]\
    \ + l[1]) / 2\n  if(n % 2 === 0) return l[n / 2 - 1]\n  return median(l.slice(0,\
    \ n / 2 - 1))\n}\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var mid = l.length / 2;\n  return l[mid];\n}\n", "    var l = l.slice();\n\
    \    l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len%2 == 0){\n        return l[(len/2) - 1];\n    }\n    return l[len/2];\n\
    }\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).filter(function(elem,\
    \ index, arr){\n    return index === 0 || elem % 2 === 0;\n  }).length / 2;\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2] + l[len/2-1])/2;\n  }\n}\n", "    var l = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var mid = l.length / 2;\n    if(l.length\
    \ % 2) return l[mid];\n    else return (l[mid-1] + l[mid]) / 2;\n}\n", "    var\
    \ l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len / 2),\n\
    \        arr = [];\n\n    for(var i = 0; i < mid; i++){\n        arr.push(l[i]);\n\
    \    }\n\n    for(var i = 0; i < mid; i++){\n        arr.push(l[len - i - 1]);\n\
    \    }\n\n    return arr.reduce(function(a, b){\n        return a + b;\n    })\
    \ / 2;\n}\n", "    var l = l || [];\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = l.length;\n    if (len % 2 === 0){\n        return\
    \ l[(len / 2) - 1];\n    }\n    var mid = Math.floor(len / 2);\n    return (l[mid]\
    \ + l[mid-1]) / 2;\n}\n", "  var n = l.length, a = l[0], b = l[1], c = l[2], m\
    \ = +Infinity;\n  if(n%2==0){\n    if(n < 1){\n      return a;\n    }\n    m =\
    \ l[(n-1)/2];\n  }\n  for(var i = 1; i < n; i++){\n    var m = l[i];\n    if(Math.abs(m)\
    \ > Math.abs(m)){\n      m = m;\n    }\n    if(m > m){\n      m = m;\n    }\n\
    \    if(m > b){\n      b = m;\n    }\n    if(m > c){\n      c = m;\n    }\n  }\n\
    \  return [b, c, m];\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2],\
    \ v = a, w;\n  if(n < 1) return v;\n  if(n < 2) return w;\n  if(n % 2 == 0) return\
    \ w = (v + w) / 2;\n  while((w /= 2) < v) v -= w;\n  return w;\n}\n", "  var n\
    \ = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a, b, c);\n  if(m\
    \ === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b ===\
    \ c) return (a % m || a % m === 0) && (b % m || b % m === 0);\n  if(a < b) return\
    \ -1;\n  if(a > b) return 1;\n  if(b < c) return -1;\n  if(b > c) return 1;\n\
    \  return -1;\n}\n", "  var n = l.length;\n  if(n < 1) return undefined;\n  if(n\
    \ === 1) return l[0];\n\n  var mid = Math.floor(n/2);\n  var left = median(l);\n\
    \  var right = median(l);\n  if(l[mid] < left){\n    return left;\n  }else if(l[mid]\
    \ > right){\n    return right;\n  }else{\n    return l[mid];\n  }\n}\n", "  var\
    \ l = l.slice(0),\n      n = l.length, \n      a = n%2 ? l[Math.floor(n/2)] :\
    \ l[Math.floor(n/2)-1],\n      b = n%2 ? l[Math.floor(n/2)] : l[Math.floor(n/2)+1];\n\
    \  return (a+b)/2;\n}\n", "  var l = l.sort(function(a, b){return a - b;});\n\
    \  var mid = l.length / 2;\n  return l[mid];\n}\n", "  return l.reduce(function(a,\
    \ b){\n    return a + b\n  }) / l.length\n}\n", "  var n = l.length, a = l[0],\
    \ b = l[1], c = l[2], m = +Infinity;\n  if(n%2==0){\n    for(var i=0; i<n; i++){\n\
    \      if(a>b){\n        if(a>m) m = a;\n        a = l[i];\n      }\n      else{\n\
    \        if(b>m) m = b;\n        b = l[i];\n      }\n    }\n  }\n  else{\n   \
    \ for(var i=0; i<n; i++){\n      if(a>b){\n        if(b>m) m = b;\n        b =\
    \ l[i];\n      }\n      else{\n        if(a>m) m = a;\n        a = l[i];\n   \
    \   }\n    }\n  }\n  return m;\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n\
    \  return (n>1)?(a+b)/2:(a>b)?a:b;\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }\n  var mid = Math.floor(len/2);\n  var a = l[mid];\n  var b =\
    \ l[mid+1];\n  return (Math.abs(a-b) < 0.0000001) ? a : b;\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length\
    \ / 2);\n  return l[half];\n}\n", "  return l.sort(function(a, b){return a - b})[Math.floor(l.length\
    \ / 2)];\n}\n", "  var s = l.sort(function(a, b){return a - b;});\n  return s[Math.floor(s.length\
    \ / 2)];\n}\n", "  return l.sort(function(a, b){return a - b})[Math.floor(l.length\
    \ / 2)];\n}\n", "    var sortArr = l.slice().sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var len = sortArr.length;\n    if(len % 2){\n        return\
    \ sortArr[len / 2 - 1];\n    }else{\n        return (sortArr[len / 2] + sortArr[len\
    \ / 2 - 1]) / 2;\n    }\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n\
    \  return (n>1)?(a+b)/2:(a>b)? a:b;\n}\n", "    var l = l.slice(0), //clone the\
    \ array\n        len = l.length, //length of the array\n        sorted = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        }), //sort it\n        medianIdx = (len\
    \ % 2) ? Math.floor(len / 2) : Math.ceil(len / 2), //find the index to split the\
    \ array\n        median = sorted[medianIdx], //the median\n        i, compared;\n\
    \    \n    if (len % 2) return sorted[medianIdx - 1]; //if len is even, return\
    \ the average of the two middle values\n    \n    compared = medianIdx - 1; //if\
    \ median is at the center, the index to compare is (len - 1) (because of the sorted\
    \ array)\n    for (i = len - 1; i > compared; i--){\n        compared = i;\n \
    \   }\n    return sorted[compared];\n}\n", "    var l = l || [];\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var len = l.length;\n    if(len%2==0){\n\
    \        return l[(len/2) - 1];\n    }\n    return l[len/2];\n}\n", "    var l\
    \ = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n    });\n \
    \   var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n        return\
    \ l[half];\n    }\n    return 0.5 * (l[half-1] + l[half]);\n}\n", "  var n = l.length,\
    \ a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n  return Math.sqrt(a\
    \ * a + b * b);\n}\n", "  var sortArr = l.slice();\n  sortArr.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = sortArr.length;\n  if(len % 2 ===\
    \ 0){\n    return sortArr[len / 2 - 1];\n  }\n  else{\n    return (sortArr[len\
    \ / 2] + sortArr[len / 2 - 1]) / 2;\n  }\n}\n", "  var n = l.length, a = (+l[0]\
    \ + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5]) / 3, c = +(+l[6] + +l[7] +\
    \ +l[8]) / 3;\n  return Math.sqrt(a * a + b * b + c * c);\n}\n", "    var l =\
    \ l.slice(0),\n        len = l.length,\n        sortedArr = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        });\n    if(len%2) return sortedArr[len/2];\n\
    \    return sortedArr[len/2-1] + sortedArr[len/2];\n}\n", "  var n = l.length,\
    \ a = (+l[0]) || 0, b = (+l[n - 1]) || 0, aMedian = +Infinity, aCount = 0, iMedian\
    \ = 0;\n  for(var i = 0; i < n; i++){\n    var v = +l[i];\n    if(v === a) aCount++;\n\
    \    else if(v === b) bCount++;\n    else if(aCount > bCount){\n      aMedian\
    \ = a;\n      iMedian = i;\n      a = v;\n      aCount = 1;\n    }\n    else if(bCount\
    \ > aCount){\n      bMedian = b;\n      iMedian = i;\n      b = v;\n      bCount\
    \ = 1;\n    }\n  }\n  return iMedian === (n - 1)? Math.min(aMedian, bMedian) :\
    \ (aMedian + bMedian) / 2;\n}\n", "  var s = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var half = Math.floor(s.length / 2);\n  if (half % 1) return\
    \ s[half];\n  var median = s[half-1];\n  for (var i = (half - 1) ; i > 0; i--){\n\
    \    if (Math.abs(s[i] - median) < Math.abs(s[i-1] - median)){\n      median =\
    \ s[i];\n    }\n  }\n  return median;\n}\n", "  var n = l.length, a = +l[0], b\
    \ = +l[1], c = +l[2], m = Math.min(a, b, c);\n  return (m === b && m === c) ?\
    \ m : ((a > b) ? m : ((c > b) ? m : ((b > c) ? m : a)));\n}\n", "    var l = l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var mid = l.length / 2;\n    if(l.length\
    \ % 2){\n        return l[mid];\n    }else{\n        return (l[mid-1] + l[mid])\
    \ / 2;\n    }\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n  return a\
    \ < b\n      ? Math.ceil((a + (b - a)) / 2)\n      : Math.floor((a + (b - a))\
    \ / 2);\n}\n", "  return l.sort(function(a, b){return a - b})[Math.floor(l.length\
    \ / 2)];\n}\n", "    var l = l.slice(0),\n        len = l.length,\n        mid\
    \ = Math.floor(len / 2),\n        arr = [];\n    \n    arr.push(l[mid]);\n   \
    \ \n    for(var i = 0; i < mid; i++){\n        arr.push(l[i]);\n    }\n    \n\
    \    arr.push(l[mid]);\n    \n    return arr.reduce(function(a, b){\n        return\
    \ a + b;\n    }) / 2;\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n  return\
    \ (n>1)?((a+b)/2.):((l[n-2]+l[n-1])/2.);\n}\n", "  return l.sort(function(a, b){\n\
    \    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0]\n}\n", "  var n\
    \ = l.length;\n  if(n < 1) return null;\n  var a = l[0], b = l[1], c = l[2], d\
    \ = l[3], e = l[4];\n  if(n % 2 == 0){\n    return Math.max(e, Math.min(b, c));\n\
    \  } else {\n    return Math.max(e, Math.min(b, c, d));\n  }\n}\n", "    var l\
    \ = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n    });\n \
    \   var len = l.length;\n    if (len % 2 === 0){\n        return l[len / 2 - 1];\n\
    \    }\n    var mid = Math.floor(len / 2);\n    if (len % 2 === 1){\n        return\
    \ l[mid + 1];\n    }\n    return ((l[mid - 1] + l[mid]) / 2);\n}\n", "  var n\
    \ = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m\
    \ === 0) return a;\n  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b <=\
    \ a && a <= c && c <= b) return a;\n  if(c <= a && a <= b && b <= c) return b;\n\
    \  if(b <= a && a <= c && c <= b) return c;\n  return m;\n}\n", "  var n = l.length,\
    \ a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3] + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b\
    \ - Math.pow(a,2) + Math.pow(b,2));\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2){\n    return\
    \ l[len/2];\n  }\n  var mid = Math.floor(len / 2);\n  var a = l[mid];\n  var b\
    \ = l[mid+1];\n  return (a + b) / 2;\n}\n", "  return l.reduce(function(prev,\
    \ cur){\n    return prev + cur;\n  }, 0) / l.length;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[(len-1)/2] + (l[len/2-1] || 0);\n  }\n  return l[len/2];\n}\n",
  "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n \
    \ else{\n    var mid = Math.floor(len / 2);\n    var a = l[mid];\n    var b =\
    \ l[len - 1 - mid];\n    return (a + b) / 2;\n  }\n}\n", "    var n = l.length,\
    \ a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return Math.ceil((a - b) / 2);\n\
    }\n", "    var l = l.slice(0),\n        len = l.length,\n        a,\n        sort,\n\
    \        i;\n\n    if(len % 2 === 0){\n        l.sort(function(a, b){\n      \
    \      return a - b;\n        });\n        a = l[(len - 1) / 2];\n        for(i\
    \ = len / 2; i > 0; i -= 1){\n            if(l[i - 1] < a){\n                a\
    \ = l[i - 1];\n            }\n            else{\n                break;\n    \
    \        }\n        }\n        return a;\n    }\n    else{\n        l.sort(function(a,\
    \ b){\n            return b - a;\n        });\n        a = l[(len - 1) / 2];\n\
    \        for(i = len / 2; i > 0; i -= 1){\n            if(l[i - 1] > a){\n   \
    \             a = l[i - 1];\n            }\n            else{\n              \
    \  break;\n            }\n        }\n        return a;\n    }\n}\n", "  var n\
    \ = l.length\n  if(n < 1) return NaN\n  if(n === 1) return l[0]\n  if(n === 2)\
    \ return (\n    (l[0] + l[1])/2\n  )\n  var m = l[Math.floor(n/2)]\n  if(n % 2)\
    \ return (\n    (m+l[Math.floor(n/2)-1])/2\n  )\n  return (\n    (m-l[Math.floor(n/2)-1])/2\n\
    \  )\n}\n", "  var n = l.length\n  if(n < 1) return 0\n  if(n === 1) return l[0]\n\
    \  if(n === 2) return (l[0] + l[1])/2\n  if(n % 2 === 0) return l[Math.floor(n/2)]\n\
    \  if(n%2===1) return median(l[Math.floor(n/2)-1], l[Math.floor(n/2)])\n}\n",
  "  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return Math.ceil((a\
    \ - b) / 2);\n}\n},{}],4:[function(require,module,exports){", "    var n = l.length,\
    \ a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n    return Math.round((a - b) / Math.LN2)\
    \ + 1;\n}\n", "  var n = l.length;\n  if(n % 2 == 0)\n    return l[(n - 1) / 2]\
    \ || 0;\n  else\n    return (l[n / 2 - 1] + l[n / 2]) / 2;\n}\n", "  return sort(l).length\
    \ / 2;\n}\n", "  return sortBy(l, function(x){\n    return x;\n  }).length / 2;\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len%2) return l[(len/2)-1];\n  else return (l[len/2]\
    \ + l[len/2-1])/2;\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2],\
    \ m = Math.min(a, b, c);\n  return (m == 1) ? m : (m < 0.5 ? m + (n - 1) : m -\
    \ (n - 1));\n}\n", "    var l = l.slice(0),\n        len = l.length,\n       \
    \ a,\n        i;\n\n    for(i = len/2; i > 0; i -= 1){\n        a = l[i];\n  \
    \      if(len%2===0){\n            if(a < l[(i+1)/2]){\n                return\
    \ a;\n            }\n            else{\n                return l[(i+1)/2];\n \
    \           }\n        }\n        else{\n            if(a < a[(i+1)/2]){\n   \
    \             return a;\n            }\n            else{\n                return\
    \ a[(i+1)/2];\n            }\n        }\n    }\n    return l[len/2];\n}\n", " \
    \ var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice();\n \
    \ l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len\
    \ % 2 === 0){\n    return l[len/2];\n  }\n  else{\n    return (l[len/2-1] + l[len/2])\
    \ / 2;\n  }\n}\n", "    var l = l.slice(0),\n        len = l.length,\n       \
    \ sortedArr = l.slice().sort(function(a, b){\n            return a - b;\n    \
    \    });\n    if(len%2){\n        return sortedArr[len/2];\n    }\n    return\
    \ sortedArr[(len-1)/2 | 0];\n}\n", "    var l = l.sort(function(a, b){\n     \
    \   return a - b;\n    });\n    var len = l.length;\n    if(len%2==0){\n     \
    \   return l[(len/2)-1];\n    }\n    return l[(len-1)/2];\n}\n", "    var l =\
    \ l.slice();\n    l.sort(function(a, b){\n        return a - b;\n    });\n   \
    \ var half = Math.floor(l.length / 2);\n    if(l.length % 2){\n        return\
    \ l[half];\n    }\n    return (l[half - 1] + l[half]) / 2.0;\n}\n", "  var n =\
    \ l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  return\
    \ (m === b && m === c) ? m : ((a > b) ? m : ((c > b) ? m : ((b > c) ? m : a)));\n\
    }\n", "  return l.sort(function(a, b){\n    return a - b;\n  }).filter(function(elem,\
    \ index, arr){\n    return index === 0 || elem !== arr[index-1];\n  }).length\
    \ / 2;\n}\n", "    var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a,\
    \ b, c);\n    if(m === 0) return a;\n    m += 1;\n    return (m > 0 ? (l[m - 1]\
    \ + l[m - 2]) / m : a);\n}\n", "  var l = l.slice(0),\n      n = l.length, \n\
    \      a = l[0], \n      b = l[1], \n      c = l[2], \n      d = l[3], \n    \
    \  m = l && l.length >= 4 ? l[l.length / 2] : (a + b + c + d) / 4;\n  if(m ===\
    \ undefined){\n    return NaN;\n  }\n  if(n < 3){\n    return m;\n  }\n  if(n\
    \ === 0){\n    return m;\n  }\n  if(n === 1){\n    return l[0];\n  }\n  if(n ===\
    \ 2){\n    return l[0] + l[1];\n  }\n  if(n === 3){\n    return l[0] + l[1] +\
    \ l[2];\n  }\n  if(n === 4){\n    return l[0] + l[1] + l[2] + l[3];\n  }\n  if(n\
    \ === 5){\n    return l[0] + l[1] + l[2] + l[3] + l[4];\n  }\n  if(n === 6){\n\
    \    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5];\n  }\n  if(n === 7){\n  \
    \  return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6];\n  }\n  if(n === 8){\n\
    \    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7];\n  }\n  if(n\
    \ === 9){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] +\
    \ l[8];\n  }\n  if(n === 10){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5]\
    \ + l[6] + l[7] + l[8] + l[9];\n  }\n  if(n === 11){\n    return l[0] + l[1] +\
    \ l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10];\n  }\n  if(n\
    \ === 12){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] +\
    \ l[8] + l[9] + l[10] + l[11];\n  }\n  if(n === 13){\n    return l[0] + l[1] +\
    \ l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8] + l[9] + l[10] + l[11] + l[12];\n\
    \  }\n  if(n === 14){\n    return l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6]\
    \ + l[7] + l[8] + l[9] + l[10] + l[11] + l[12", "    var n = l.length, a = +l[0],\
    \ b = +l[1], c = +l[2], m = Math.max(a, b, c);\n    if(m === 0) return a;\n  \
    \  if(m === 1) return b;\n    if(m === 2) return c;\n    \n    var i = Math.floor((n\
    \ + 1) / 2), k = Math.ceil((n + 2) / 2);\n    if(i < k){\n        return median(l[++i]);\n\
    \    }\n    if(i < k + 1) return median(l[--k]);\n    if(k < n - 1){\n       \
    \ return median(l[--k + 1]);\n    }\n    return median(l[--k - 1]);\n}\n", " \
    \ var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n\
    \  return (m === b && m === c) ? m : (m + Math.min(a, b, c)) / 2;\n}\n", "  var\
    \ l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n\
    \  if(len % 2 === 0){\n    return l[(len / 2) - 1];\n  }\n  else{\n    return\
    \ (l[len / 2] + l[len / 2 - 1]) / 2;\n  }\n}\n", "    var l = l.slice();\n   \
    \ l.sort(function(a, b){\n        return a - b;\n    });\n    var len = l.length;\n\
    \    if(len % 2 === 0){\n        return l[(len / 2) - 1];\n    }\n    return l[len\
    \ / 2];\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.min(a,\
    \ b, c);\n  return (m == a ? (b = c, c = a, a = b, b = c) : m = Math.max(a, b,\
    \ c))\n      ? m : ((a > b) ? a : (b < c) ? b : c);\n}\n", "  var l = l.slice();\n\
    \  l.sort(function(a, b){\n    return a - b;\n  });\n  var len = l.length;\n \
    \ if(len%2==0){\n    return l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1]\
    \ + l[len/2]) / 2;\n  }\n}\n", "    var med = l.sort()[Math.floor(l.length/2)];\n\
    \    return med;\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n  var mid\
    \ = Math.floor(len/2);\n  var a = l[mid];\n  var b = l[mid+1];\n  return (a+b)/2;\n\
    }\n", "  var l = l.sort(function(a, b){\n    return a - b;\n  });\n  var len =\
    \ l.length;\n  if(len%2==0){\n    return l[(len-1)/2]\n  }\n  else{\n    return\
    \ (l[len-1] + l[len-2])/2\n  }\n}\n", "    var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.min(a, b, c);\n    if(m === 0) return a;\n    if(m === 1)\
    \ return b;\n    if(m === 2) return c;\n    if(m % 2 === 0) return (a + b) / 2;\n\
    \    return Math.ceil((a + b) / 2);\n}\n", "  var n = l.length, a = +l[0], b =\
    \ +l[n-1];\n  return (n>1)? Math.round(((b-a)/(n-1))*Math.sqrt(n)) : a;\n}\n",
  "    var sortArr = l.slice().sort(function(a, b){\n        return a - b;\n    });\n\
    \    var len = sortArr.length;\n    if(len % 2){\n        return sortArr[(len\
    \ - 1) / 2];\n    }else{\n        return sortArr[(len - 1) / 2];\n    }\n}\n",
  "    var med = l.sort()[Math.floor(l.length/2)];\n    return med;\n}\n", "    var\
    \ n = l.length, a = +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n    if(m\
    \ === 0) return a;\n    m += 1;\n    while(m < n){\n        a = +l[m];\n     \
    \   b = +l[m + 1];\n        c = +l[m + 2];\n        m = Math.max(a, b, c);\n \
    \   }\n    return (a + b + c) / 2;\n}\n", "    var n = l.length, a = l[0], b =\
    \ l[1], c = l[2], m = +Infinity;\n    for(var i = 0; i < n; i++){\n        var\
    \ d = a%c + b%c;\n        if(d === 0) continue;\n        else if(d > 0){\n   \
    \         a = b;\n            b = c;\n            c = d;\n        }\n        else\
    \ {\n            m = Math.min(a, m);\n        }\n    }\n    return m === -Infinity\
    \ ? NaN : m;\n}\n", "  var l = l.sort(function(a, b){return a - b});\n  var mid\
    \ = l.length / 2;\n  return l[mid];\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n\
    \  var mid = Math.floor(len/2);\n  var midVal = median(l[mid]);\n  if(len%2) return\
    \ midVal;\n  else return (midVal + l[mid-1])/2;\n}\n", "  var n = l.length, a\
    \ = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return (a + b) / 2;\n}\n", "  var n\
    \ = l.length, a = +l[0], b = +l[n-1], c = isNaN(a) ? b : a, d = isNaN(b) ? a :\
    \ b;\n  return c + ((d - c) < (a > b ? d : a) - (b > a ? b : b));\n}\n", "  var\
    \ sortArr = l.slice().sort(function(a, b){\n    return a - b;\n  });\n  var len\
    \ = sortArr.length;\n  if(len % 2 === 0){\n    return sortArr[len / 2 - 1];\n\
    \  }\n  else{\n    return sortArr[(len - 1) / 2];\n  }\n}\n", "  var sortArr =\
    \ l.slice().sort(function(a,b){\n    return a-b;\n  });\n  var len = sortArr.length;\n\
    \  if(len%2==0){\n    return sortArr[len/2];\n  }else{\n    return (sortArr[len/2]+sortArr[len/2-1])/2;\n\
    \  }\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if(l.length %\
    \ 2) return l[half];\n    else return (l[half - 1] + l[half]) / 2.0;\n}\n", " \
    \ return l.sort(function(a, b){return a - b})[Math.floor(l.length / 2)];\n}\n",
  "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n  var\
    \ len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  var n = l.length\n  if(n\
    \ < 1) return null\n  if(n === 1) return l[0]\n  if(n === 2) return l[0] + l[1]\n\
    \  if(n % 2 === 0) return l[n / 2 - 1]\n  if(n % 2 === 1) return l[n / 2]\n  if(n%2==0)\
    \ return (l[(n-1)/2] + l[(n+1)/2])/2\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len % 2 === 0){\n\
    \    return l[len/2];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n\
    \  }\n}\n", "    var l = l.slice(0),\n        len = l.length,\n        mid = Math.floor(len\
    \ / 2),\n        arr = [];\n\n    while (len) {\n        arr.push(l[mid--]);\n\
    \        len--;\n    }\n\n    return arr.reduce(function(a, b){\n        return\
    \ a + b;\n    }) / arr.length;\n}\n", "    var n = l.length, a = +l[0], b = +l[1],\
    \ c = +l[2], m = Math.min(a, b, c);\n    if(m === a)  return a;\n    if(m ===\
    \ b) return b;\n    if(m === c) return c;\n    return m;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "    var n = l.length, a = +l[0], b = +l[n-1];\n    return (n>1)? Math.round(((b-a)/(n-1))*Math.sqrt(n))\
    \ : a;\n}\n", "  var n = l.length, a = (+l[0] + +l[1] + +l[2]) / 3, b = (+l[3]\
    \ + +l[4] + +l[5])/3;\n  return Math.sqrt(a*b - Math.pow(a,2) + Math.pow(b,2));\n\
    }\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  var len = l.length;\n  if(len % 2 === 0){\n    return l[len/2];\n  }\n  else{\n\
    \    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  var l = l.slice(0),\n\
    \      n = l.length,\n      a = Math.floor(n / 2),\n      b = n - a,\n      c\
    \ = l[a],\n      d = l[b];\n  return c == d? Math.max(Math.abs(c - b), Math.abs(d\
    \ - a)) : Math.abs(c - d)\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c\
    \ = +l[2], v = a, i = (n - 1) >> 1;\n  if(a === b) return v;\n  if(a > b){\n \
    \   do v = a, a = b, b = v; while(a < b);\n  }\n  if(a === b) return v;\n  if(v\
    \ === c) return Math.min(a, c);\n  while(--i >= 0){\n    if(l[i] < a) a = l[i];\n\
    \    else if(l[i] > b) b = l[i];\n    else break;\n  }\n  return (v < a ? l[i++]\
    \ : b < a ? l[i--] : v);\n}\n", "  var n = l.length, a = +l[0], b = +l[1], c =\
    \ +l[2], m = Math.min(a, b, c);\n  if(m === a) return(a);\n  if(m === b) return(b);\n\
    \  if(m === c) return(c);\n  if((a > b) && (a > c)) return(a);\n  if((b > c) &&\
    \ (b > a)) return(b);\n  if((c > a) && (c > b)) return(c);\n  if(n) return ((a\
    \ + b) / 2);\n}\n", "    var l = l.slice();\n    l.sort(function(a, b){\n    \
    \    return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if(l.length\
    \ % 2){\n        return l[half];\n    }\n    return ((l[half - 1] + l[half]) /\
    \ 2);\n}\n", "  var l = l.slice();\n  l.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len/2) - 1];\n \
    \ }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2;\n  }\n}\n", "  return l.sort(function(a,\
    \ b){\n    return a - b;\n  }).slice(0, Math.floor(l.length / 2));\n}\n", "  var\
    \ n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2):((l[n-1]+l[n-2]+(a+b)/2)/2);\n\
    }\n", "    var l = l.slice(0),\n        len = l.length,\n        sortedArr = l.slice().sort(function(a,\
    \ b){\n            return a - b;\n        });\n    if(len%2) return sortedArr[len/2];\n\
    \    if(sortedArr.length % 2) return sortedArr[len/2-1];\n    var middle = Math.floor(len/2),\n\
    \        median = sortedArr[middle];\n    return median + ((len%2)?(sortedArr[middle-1]\
    \ - median):(sortedArr[middle+1] - median));\n}\n", "  var l = l.slice();\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2) return l[len/2];\n\
    \  var mid = Math.floor(len/2);\n  return (l[mid-1] + l[mid])/2;\n}\n", "  var\
    \ l = l.slice(0),\n      len = l.length,\n      a = +l.sort(function(a, b){\n\
    \        return a - b;\n      }),\n      b = +l[len - 1];\n  return len > 0 ?\
    \ (a + b) / 2 : undefined;\n}\n", "  var l = l.slice(0); // copy the list\n  l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2]) / 2.0;\n \
    \ }\n}\n", "  var l = l.slice(0),\n      n = l.length,\n      a = Math.floor(n\
    \ / 2),\n      b = n - a,\n      c = new Array(a),\n      i, j, k;\n\n  for (i\
    \ = 0; i < a; ++i) c[i] = l[i];\n  for (i = 0; i < b; ++i) c[a + i] = l[a + i];\n\
    \n  for (i = n - 1; i >= 0; --i) {\n    k = c[i];\n    if (k != null && k != -Infinity)\
    \ {\n      j = i;\n      while (j != a) {\n        c[j] = c[j - 1];\n        ++j;\n\
    \      }\n      --j;\n      c[j] = k;\n    }\n  }\n\n  return (c[0] && c[0] ===\
    \ -Infinity) ? Infinity : ((c[b] && c[b] <= a) ? c[b] : ((c[b - 1] && c[b - 1]\
    \ >= 0) ? c[b - 1] : c[b]));\n}\n", "    var l = l.slice(0), // copy the list\n\
    \        len = l.length, // cache its length\n        a, // first element\n  \
    \      v, // current element\n        i, // loop counter\n        mid, // middle\
    \ element\n        s, // number of elements\n        median;\n    \n    if (len\
    \ % 2 === 0) { // is even\n        mid = l[(len - 1) / 2];\n        a = l[len\
    \ - 1];\n        \n        for (i = len; i > 1 && a > mid && (a = l[--i]); i--);\n\
    \        \n        median = a + (i - len) * 0.5;\n    } else {\n        mid =\
    \ l[len / 2];\n        a = l[len - 1];\n        \n        for (i = len; i > 1\
    \ && a > mid && (a = l[--i]); i--);\n        \n        median = a + (i - len)\
    \ * 0.5;\n    }\n    \n    return median;\n}\n", "  var l = l.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return\
    \ l[(len/2) - 1];\n  }\n  else{\n    return (l[len/2-1] + l[len/2])/2;\n  }\n\
    }\n", "  var n = l.length, a = (+l[0]) || 0, b = (+l[n - 1]) || 0;\n  return (a\
    \ - b) / Math.max(n, 1);\n}\n", "  var l = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var len = l.length;\n  if(len%2==0){\n    return l[(len/2)\
    \ - 1];\n  }\n  else{\n    return (l[(len/2)-1] + l[len/2])/2;\n  }\n}\n", " \
    \ var s = l.sort(function(a, b){return a - b});\n  return (s.length % 2) ? s[(s.length\
    \ / 2) - 1] : s[(s.length / 2)];\n}\n", "    var n = l.length, a = l[0], b = l[1],\
    \ c = l[2], m = +Infinity;\n    for(var i = 0; i < n; i++){\n        var x = l[i];\n\
    \        if(x == m) continue;\n        else if(x < m) a = x;\n        else if(x\
    \ > m) b = x;\n        else c = x;\n    }\n    return c == +Infinity ? NaN : ((a\
    \ - b) / c);\n}\nexports.median = median;\n", "    var l = l.slice();\n    l.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n\
    \    if(l.length % 2) return l[half];\n    else return (l[half - 1] + l[half])\
    \ / 2.0;\n}\n", "  var n = l.length, a = +l[0], b = +l[n-1];\n  return (n>1)?((a+b)/2.):((l[n-2]+l[n-1])/2.);\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if(len%2) return l[(len/2)-1];\n \
    \   else return (l[len/2-1] + l[len/2])/2;\n}\n", "  var n = l.length, a = l[0],\
    \ b = l[1], c = l[2], m = +Infinity;\n  if(n%2) return (a+b)/2;\n  for(var i =\
    \ (n - 1)/2; i > 0; --i){\n    if(Math.abs(b - a) <= m){\n      m = Math.abs(b\
    \ - a); a = b; b = i;\n    }\n  }\n  return a\n}\n", "  var n = l.length, a =\
    \ +l[0], b = +l[1], c = +l[2], m = Math.max(a, b, c);\n  if(m === 0) return a;\n\
    \  if(m === 1) return b;\n  if(m === 2) return c;\n  if(b === c) return (a % m\
    \ || a % m === 0) && (b % m || b % m === 0);\n  if(a === b) return (a % m || a\
    \ % m === 0) && (c % m || c % m === 0);\n  if(a === c) return (a % m || a % m\
    \ === 0) && (b % m || b % m === 0);\n  if(a < b) return (a % m || a % m === 0)\
    \ && (c % m || c % m === 0);\n  if(a > b) return (a % m || a % m === 0) && (b\
    \ % m || b % m === 0);\n  return NaN;\n}\n", "  return l.sort(function(a, b){\n\
    \    return a - b;\n  }).slice(0, Math.floor(l.length / 2))[0] || 0;\n}\n", " \
    \ var n = l.length;\n  if(n % 2 == 0)\n    return l[Math.floor(n / 2)];\n  else\n\
    \    return (l[n / 2 - 1] + l[n / 2]) / 2;\n}\n", "  return l.reduce(function(a,\
    \ b){\n    return a + Math.abs(b.value - median(b.value));\n  }, 0) / l.length;\n\
    }\n", "    var l = l.slice();\n    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    var len = l.length;\n    if(len % 2 === 0){\n        return\
    \ l[(len / 2) - 1];\n    }\n    var mid = Math.floor(len / 2);\n    var a = l[mid];\n\
    \    var b = l[mid+1];\n    return (a + b) / 2;\n}\n", "  return l.reduce(function(a,\
    \ b){\n    return a + b >> 1;\n  }, 0) / l.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_103_rounded_avg
language: js
prompt: "//You are given two positive integers n and m, and your task is to compute\
  \ the\n// average of the integers from n through m (including n and m). \n// Round\
  \ the answer to the nearest integer and convert that to binary.\n// If n is greater\
  \ than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"0b11\"\n// rounded_avg(7,\
  \ 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20, 33) => \"0b11010\"\
  \nfunction rounded_avg(n, m){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rounded_avg;\n  assert.deepEqual(candidate(1, 5),\"0b11\");\n  assert.deepEqual(candidate(7,\
  \ 13),\"0b1010\");\n  assert.deepEqual(candidate(964, 977),\"0b1111001010\");\n\
  \  assert.deepEqual(candidate(996, 997),\"0b1111100100\");\n  assert.deepEqual(candidate(560,\
  \ 851),\"0b1011000010\");\n  assert.deepEqual(candidate(185, 546),\"0b101101110\"\
  );\n  assert.deepEqual(candidate(362, 496),\"0b110101101\");\n  assert.deepEqual(candidate(350,\
  \ 902),\"0b1001110010\");\n  assert.deepEqual(candidate(197, 233),\"0b11010111\"\
  );\n  assert.deepEqual(candidate(7, 5),-1);\n  assert.deepEqual(candidate(5, 1),-1);\n\
  \  assert.deepEqual(candidate(5, 5),\"0b101\");\n}\n\ntest();"
completions: ["    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum +=\
    \ i;\n    }\n    return sum / Math.pow(2,Math.ceil(Math.log2(m))) - 1;\n}\n",
  "    var result = 0;\n    var count = 0;\n    for(var i = n; i <= m; i++){\n   \
    \     result += i;\n        count++;\n    }\n    if(count > 0){\n        result\
    \ = result / count;\n        result = Math.round(result);\n        result = result\
    \ * Math.pow(2,Math.ceil(Math.log2(result)));\n    }\n    return result < 0 ?\
    \ -1 : result;\n}\n", "    let avg = ((n+m)/2);\n    let binary = \"\";\n    while(avg\
    \ > 0){\n        binary = binary + \"1\";\n        avg = Math.floor(avg/2);\n\
    \    }\n    while(avg < 0){\n        binary = binary + \"0\";\n        avg = Math.floor(avg/2);\n\
    \    }\n    return binary;\n}\n", "    let avg = Math.floor((n+m)/2);\n    let\
    \ binary = \"\";\n    for(let i = avg; i >= n; i--){\n        binary += \"1\"\
    ;\n    }\n    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n    }\n\
    \    return binary;\n}\n", "    let avg = (n+m)/2;\n    let binary = \"\";\n \
    \   for(let i = n; i <= m; i++){\n        binary += i.toString(2);\n    }\n  \
    \  return binary.substr(0, binary.length-1);\n}\n", "    let result = 0;\n   \
    \ for(let i = n; i <= m; i++){\n        result += i;\n    }\n    result /= (m+1);\n\
    \    return Math.round(result);\n}\n", "  if(n > m){\n    return -1;\n  }\n  \n\
    \  let sum = 0;\n  let count = 0;\n  \n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n    count++;\n  }\n  \n  if(count === 0){\n    return -1;\n  }\n  \n\
    \  let avg = sum / count;\n  \n  let binary = \"\";\n  \n  for(let i = avg; i\
    \ >= 0; i--){\n    binary += \"1\";\n  }\n  \n  return binary;\n}\n", "  if(n\
    \ > m){\n    return -1;\n  }\n  \n  let sum = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n  }\n  \n  return sum / 2;\n}\n", "  let avg = Math.floor((n+m)/2);\n\
    \  let binary = \"\";\n  while(avg > 0){\n    binary = binary+(\"0\"+(avg%2));\n\
    \    avg = Math.floor(avg/2);\n  }\n  return binary;\n}\n", "  let sum = 0;\n\
    \  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  if(count === 0){\n    return -1;\n  }\n  return sum/count;\n}\n", "  \
    \  let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    let avg = sum / 2;\n    let binary = \"\";\n    while(avg > 0){\n       \
    \ binary = binary + \"1\";\n        avg = Math.floor(avg / 2);\n    }\n    return\
    \ binary;\n}\n", "  let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n\
    \    sum += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n \
    \ return sum / count;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    return sum / Math.pow(2, n - m);\n}\n", "  if(n\
    \ > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  return sum / n;\n}\n", "    let avg = Math.floor((n+m)/2);\n    let\
    \ binary = \"\";\n    while(avg > 0){\n        binary += \"1\";\n        avg--;\n\
    \    }\n    while(avg < 0){\n        binary += \"0\";\n        avg++;\n    }\n\
    \    return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    let avg = sum / 2;\n    let binary = \"\";\n  \
    \  for(let i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n    return\
    \ binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  let avg = sum / 2;\n  let binary\
    \ = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary += \"0\";\n  }\n  for(let\
    \ i = avg; i >= 0; i--){\n    binary += \"1\";\n  }\n  return binary;\n}\n", " \
    \   let avg = (n + m)/2;\n    let binary = \"\";\n    for(let i = n; i <= m; i++){\n\
    \        binary += i.toString(2);\n    }\n    return binary.padStart(avg.toString(2).length,\
    \ \"0\");\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "    let\
    \ sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    return\
    \ sum / Math.pow(2,m+1);\n}\n", "    let sum = 0;\n    for(let i = n; i <= m;\
    \ i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n \
    \   sum += i;\n  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2,Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    let avg = ((n+m)/2);\n    let binary = \"\";\n    for(let i = avg;\
    \ i >= 0; i--){\n        binary += \"1\";\n    }\n    return binary;\n}\n", " \
    \   let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    let avg = sum / 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0;\
    \ i--){\n        binary += \"1\";\n    }\n    return binary;\n}\n", "    let sum\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = sum / m;\n    let binary = \"\";\n    for(let i = avg; i >= 1; i--){\n   \
    \     binary += \"1\";\n    }\n    return binary;\n}\n", "  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  let avg = sum / 2;\n  \n  if(avg\
    \ < 0){\n    return -1;\n  }\n  \n  let binary = \"\";\n  for(let i = avg; i >=\
    \ 0; i--){\n    binary += \"1\";\n  }\n  \n  return binary;\n}\n", "  let result\
    \ = 0;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n \
    \ result = sum / 2;\n  result = Math.round(result);\n  result = result * Math.pow(2,31);\n\
    \  result = result.toString(2);\n  result = result.substring(0,result.length-1);\n\
    \  return result;\n}\n", "  let sum = 0;\n  let count = 0;\n  for(let i = n; i\
    \ <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count === 0){\n    return\
    \ -1;\n  }\n  return sum / count;\n}\n", "    let avg = (n + m) / 2;\n    let\
    \ bin = avg.toString(2);\n    bin = bin.substr(0, bin.length-1);\n    return bin;\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2,m+1);\n}\n", "    let avg = ((n + m) / 2);\n\
    \    let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n        binary +=\
    \ \"1\";\n    }\n    return binary;\n}\n", "    let avg = Math.floor((n+m)/2);\n\
    \    let binary = \"\";\n    for(let i = avg; i >= n; i--){\n        binary +=\
    \ \"1\";\n    }\n    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n\
    \    }\n    return binary;\n}\n", "    let sum = 0;\n    let count = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n    if(count\
    \ > 0){\n        return sum/count;\n    }\n    return -1;\n}\n", "  let avg =\
    \ Math.floor((n+m)/2);\n  let binary = \"\";\n  for(let i = avg; i >= n; i--){\n\
    \    binary += \"1\";\n  }\n  for(let i = avg; i <= m; i++){\n    binary += \"\
    0\";\n  }\n  return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n\
    }\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n \
    \ }\n  return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    if (n >= m) return -1;\n    let sum = 0;\n    for (let i = n; i <=\
    \ m; i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, n - m);\n}\n",
  "  let avg = Math.floor((n+m)/2);\n  let binary = \"\";\n  for(let i = avg; i >=\
    \ n; i--){\n    binary += \"1\";\n  }\n  for(let i = avg; i <= m; i++){\n    binary\
    \ += \"0\";\n  }\n  return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n    count++;\n  }\n  return sum/count;\n}\n", "  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  let avg = sum / 2;\n  \n  if(avg\
    \ < 0){\n    return -1;\n  }\n  \n  let binary = \"\";\n  \n  while(avg > 0){\n\
    \    binary += \"1\";\n    avg -= 1;\n  }\n  \n  return binary;\n}\n", "  let\
    \ result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  return\
    \ result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "    let\
    \ avg = (n+m)/2;\n    let binary = \"\";\n    for(let i = n; i <= m; i++){\n \
    \       binary += i.toString(2);\n    }\n    return binary;\n}\n", "  let sum\
    \ = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  if(count === 0){\n    return -1;\n  }\n  return sum / count;\n}\n", " \
    \   let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n",
  "  if(n > m){\n    return -1;\n  }\n  let result = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    result += i;\n  }\n  return result / Math.pow(2, n);\n}\n", "  let\
    \ result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  result\
    \ = Math.round(result/2);\n  result = result.toString(2);\n  result = result.padStart(result.length,\
    \ '0');\n  return result;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n", "  let sum\
    \ = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  if(count === 0){\n    return -1;\n  }\n  if(count === 1){\n    return\
    \ sum;\n  }\n  let avg = sum / count;\n  let binary = \"\";\n  for(let i = avg;\
    \ i >= 1; i--){\n    binary += \"1\";\n  }\n  return binary;\n}\n", "    let result\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        result += i;\n    }\n    return\
    \ result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "    let\
    \ sum = 0;\n    let count = 0;\n    for(let i = n; i <= m; i++){\n        sum\
    \ += i;\n        count++;\n    }\n    \n    if(count === 0){\n        return -1;\n\
    \    }\n    \n    return sum / count;\n}\n", "    var result = 0;\n    var i =\
    \ n;\n    var j = m;\n    while(i <= j){\n        result += i;\n        i++;\n\
    \    }\n    result /= j;\n    var binary = result.toString(2);\n    binary = binary.padStart(j,\
    \ '0');\n    return binary;\n}\n", "    let sum = 0;\n    let count = 0;\n   \
    \ for(let i = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n \
    \   if(count === 0){\n        return -1;\n    }\n    let avg = sum / count;\n\
    \    let binary = \"\";\n    for(let i = avg; i >= 1; i--){\n        binary +=\
    \ \"1\";\n    }\n    return binary;\n}\n", "  let sum = 0;\n  for(let i = n; i\
    \ <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  let result = 0;\n  let count = 0;\n  for(let i =\
    \ n; i <= m; i++){\n    result += i;\n    count++;\n  }\n  if(count > 0){\n  \
    \  result = result / count;\n    result = Math.floor(result);\n    result = result.toString(2);\n\
    \    result = result.padStart(result.length, '0');\n  }\n  return result === \"\
    0\" ? -1 : result;\n}\n", "    let sum = 0;\n    let count = 0;\n    for(let i\
    \ = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n    if(count\
    \ === 0){\n        return -1;\n    }\n    let avg = sum / count;\n    let binary\
    \ = \"\";\n    for(let i = avg; i >= 1; i--){\n        binary += \"1\";\n    }\n\
    \    return binary;\n}\n", "    let avg = (n + m) / 2;\n    let binary = \"\"\
    ;\n    for(let i = avg; i >= 0; i--){\n        binary += i.toString(2);\n    }\n\
    \    return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    return sum / Math.pow(2,Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  let avg = Math.floor((n+m)/2);\n  let binary = \"\
    \";\n  while(avg > 0){\n    binary = binary + \"1\";\n    avg = Math.floor(avg/2);\n\
    \  }\n  while(avg < 0){\n    binary = binary + \"0\";\n    avg = Math.floor(avg/2);\n\
    \  }\n  return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum =\
    \ 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / n;\n\
    }\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n        result +=\
    \ i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n        result +=\
    \ i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2,m+1);\n}\n", "  let sum = 0;\n  for(let i\
    \ = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    let avg = sum / 2;\n    let binary = \"\";\n  \
    \  for(let i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n    return\
    \ binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    var result = 0;\n    for(var i = n; i <= m; i++){\n        result +=\
    \ i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n        result +=\
    \ i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let avg = Math.floor((n+m)/2);\n  let binary = \"\";\n  for(let i = avg;\
    \ i >= n; i--){\n    binary += \"1\";\n  }\n  for(let i = avg; i <= m; i++){\n\
    \    binary += \"0\";\n  }\n  return binary;\n}\n", "  if(n > m){\n    return\
    \ -1;\n  }\n  \n  let sum = 0;\n  let count = 0;\n  \n  for(let i = n; i <= m;\
    \ i++){\n    sum += i;\n    count++;\n  }\n  \n  if(count === 0){\n    return\
    \ -1;\n  }\n  \n  let avg = sum / count;\n  \n  let binary = \"\";\n  \n  for(let\
    \ i = 0; i < count; i++){\n    binary += Math.pow(2, i) * avg;\n  }\n  \n  return\
    \ binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    return sum / Math.pow(2,Math.ceil(Math.log2(m+n)));\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum/(n-m)\n}\n", "    let sum = 0;\n    let count = 0;\n  \
    \  for(let i = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n\
    \    return sum / count | 0;\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let avg = sum / 2;\n  let\
    \ binary = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary += \"1\";\n  }\n\
    \  return binary;\n}\n", "  let avg = (n+m)/2;\n  let binary = \"\";\n  while(avg\
    \ > 0){\n    binary = binary + \"1\";\n    avg = avg - 1;\n  }\n  while(avg <\
    \ 0){\n    binary = binary + \"0\";\n    avg = avg + 1;\n  }\n  return binary;\n\
    }\n", "    let avg = (n+m)/2;\n    let binary = \"\";\n    for(let i = n; i <=\
    \ m; i++){\n        binary += i.toString(2);\n    }\n    return binary;\n}\n",
  "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  let count = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  return sum / count;\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  \n  let result = 0;\n  \n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  \n  result = Math.round(result\
    \ / 2);\n  \n  result = result.toString(2);\n  \n  while(result.length < n){\n\
    \    result = \"0\" + result;\n  }\n  \n  return result;\n}\n", "    let sum =\
    \ 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = sum / 2;\n    let binary = \"\";\n    while(avg > 0){\n        binary = binary\
    \ + \"1\";\n        avg -= 1;\n    }\n    while(avg < 0){\n        binary = binary\
    \ + \"0\";\n        avg += 1;\n    }\n    return binary;\n}\n", "  if(n > m){\n\
    \    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum/(n+m);\n}\n", "    let avg = Math.floor((n+m)/2);\n\
    \    let binary = \"\";\n    for(let i = avg; i >= n; i--){\n        binary +=\
    \ \"1\";\n    }\n    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n\
    \    }\n    return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m;\
    \ i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    return sum / Math.pow(10, Math.ceil(Math.log10(sum)));\n\
    }\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "    let avg\
    \ = Math.floor((n+m)/2);\n    let binary = \"\";\n    for(let i = avg; i >= n;\
    \ i--){\n        binary += \"1\";\n    }\n    for(let i = avg; i <= m; i++){\n\
    \        binary += \"0\";\n    }\n    return binary;\n}\n", "  let avg = Math.floor((n+m)/2);\n\
    \  let binary = \"\";\n  while(avg > 0){\n    binary = binary + avg.toString(2);\n\
    \    avg = Math.floor(avg/2);\n  }\n  if(n >= m){\n    return -1;\n  }\n  return\
    \ binary;\n}\n", "    let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n\
    \    for(let i = avg; i >= n; i--){\n        binary += \"1\";\n    }\n    for(let\
    \ i = avg; i <= m; i++){\n        binary += \"0\";\n    }\n    return binary;\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  let avg = sum / 2;\n  let binary = \"\";\n \
    \ for(let i = avg; i >= 0; i--){\n    binary += \"0\";\n  }\n  for(let i = avg;\
    \ i >= 0; i--){\n    binary += \"1\";\n  }\n  return binary;\n}\n", "    let sum\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = sum / 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n   \
    \     binary += \"1\";\n    }\n    return binary;\n}\n", "    let sum = 0;\n \
    \   for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum\
    \ / 2;\n    let binary = \"\";\n    while(avg > 0){\n        binary = binary +\
    \ \"1\";\n        avg -= 1;\n    }\n    while(binary.length < n){\n        binary\
    \ = \"0\" + binary;\n    }\n    return binary;\n}\n", "  let avg = Math.floor((n+m)/2);\n\
    \  if(avg > m) return -1;\n  if(avg < n) return -1;\n  let binary = \"\";\n  for(let\
    \ i = avg; i > 0; i--){\n    binary += \"1\";\n  }\n  return binary;\n}\n", " \
    \ let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n\
    \    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n  if(count === 1){\n\
    \    return sum;\n  }\n  return sum / count;\n}\n", "    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum / Math.pow(2,Math.ceil(Math.log2(m+n)));\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let result = 0;\n  let i = n;\n  while(i <= m){\n    result += i;\n \
    \   i++;\n  }\n  result = Math.round(result/2);\n  result = result.toString(2);\n\
    \  result = result.padStart(result.length, '0');\n  result = parseInt(result,\
    \ 2);\n  if(result > m) return -1;\n  return result;\n}\n", "    let avg = Math.floor((n+m)/2);\n\
    \    let binary = \"\";\n    for(let i = avg; i >= n; i--){\n        binary +=\
    \ \"1\";\n    }\n    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n\
    \    }\n    return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m;\
    \ i++){\n        sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m) return -1;\n  let sum = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum/(n-m)\n}\n", "  let sum\
    \ = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n\
    \  }\n  if(count === 0){\n    return -1;\n  }\n  return sum / count;\n}\n", " \
    \   let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n    while(avg > 0){\n\
    \        binary = binary+\"1\";\n        avg = avg - 1;\n    }\n    while(avg\
    \ < 0){\n        binary = binary+\"0\";\n        avg = avg + 1;\n    }\n    return\
    \ binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n \
    \ }\n  result = Math.round(result / 2);\n  result = result.toString(2);\n  result\
    \ = result.padStart(result.length, \"0\");\n  return result;\n}\n", "    let sum\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    return\
    \ sum / Math.pow(2,Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "    let result\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        result += i;\n    }\n    result\
    \ /= (n - m);\n    return Math.floor(result * Math.pow(10, Math.ceil(Math.log10(result))));\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  let avg = sum / 2;\n  let binary = \"\";\n \
    \ for(let i = avg; i >= 0; i--){\n    binary += \"1\";\n  }\n  return binary;\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let avg = Math.floor((n+m)/2);\n  if(avg > m) return -1;\n  if(avg <\
    \ n) return -1;\n  let binary = \"\";\n  while(avg > 0){\n    binary = binary\
    \ + \"1\";\n    avg = Math.floor(avg/2);\n  }\n  while(binary.length < n){\n \
    \   binary = binary + \"0\";\n  }\n  return binary;\n}\n", "  if(n > m){\n   \
    \ return -1;\n  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  return sum / 2;\n}\n", "  let sum = 0;\n  let count = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count === 0){\n\
    \    return -1;\n  }\n  return sum / count;\n}\n", "  let result = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  let avg = Math.floor((n+m)/2);\n  let binary = \"\
    \";\n  for(let i = avg; i >= n; i--){\n    binary += \"1\";\n  }\n  for(let i\
    \ = avg; i <= m; i++){\n    binary += \"0\";\n  }\n  return binary;\n}\n", " \
    \ let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let avg\
    \ = sum / 2;\n  let binary = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary\
    \ += \"1\";\n  }\n  return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "    let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n\
    \    while(avg > 0){\n        binary = binary+(\"0\" + avg%2);\n        avg =\
    \ Math.floor(avg/2);\n    }\n    return binary;\n}\n", "    let sum = 0;\n   \
    \ for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    return sum/(n-m)\n\
    }\n", "  let avg = (n+m)/2;\n  let binary = \"\";\n  for(let i = avg; i >= n;\
    \ i--){\n    binary += \"1\";\n  }\n  for(let i = avg; i <= m; i++){\n    binary\
    \ += \"0\";\n  }\n  return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n\
    \  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let avg\
    \ = sum / 2;\n  let binary = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary\
    \ += \"0\";\n  }\n  return binary;\n}\n", "  let sum = 0;\n  let count = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count\
    \ === 0){\n    return -1;\n  }\n  return sum / count;\n}\n", "  if(n > m){\n \
    \   return -1;\n  }\n  let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    sum += i;\n    count++;\n  }\n  let avg = sum / count;\n  let binary\
    \ = \"\";\n  for(let i = avg; i >= 1; i--){\n    binary = binary + \"1\";\n  }\n\
    \  return binary;\n}\n", "  if(n > m) return -1;\n  let result = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n\
    \        result += i;\n    }\n    return result / Math.pow(2,Math.ceil(Math.log2(m+n)));\n\
    }\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n \
    \ }\n  result = Math.round(result/2);\n  result = result.toString(2);\n  result\
    \ = result.padStart(result.length, '0');\n  if(result === '0') return -1;\n  return\
    \ result;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let result = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  return result/(n-m)*2|0;\n}\n",
  "  let result = 0;\n  let counter = 0;\n  \n  while(counter < m){\n    result +=\
    \ n;\n    counter++;\n  }\n  \n  if(counter < m){\n    return -1;\n  }\n  \n \
    \ result = Math.round(result/counter);\n  \n  result = result.toString(2);\n \
    \ \n  result = result.padStart(m, '0');\n  \n  result = result.padEnd(m, '0');\n\
    \  \n  return result;\n}\n", "    let result = 0;\n    for(let i = n; i <= m;\
    \ i++){\n        result += i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  let avg = sum / 2;\n\
    \  let binary = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary += \"1\";\n\
    \  }\n  \n  return binary;\n}\n", "    let avg = Math.floor((n+m)/2);\n    let\
    \ binary = \"\";\n    while(avg > 0){\n        binary = binary+\"1\";\n      \
    \  avg = Math.floor(avg/2);\n    }\n    while(binary.length < m){\n        binary\
    \ = \"0\"+binary;\n    }\n    return binary;\n}\n", "    let result = 0;\n   \
    \ for(let i = n; i <= m; i++){\n        result += i;\n    }\n    result /= (m\
    \ - n + 1);\n    let binary = \"\";\n    for(let i = 0; i < result.length; i++){\n\
    \        binary += result.charAt(i) + \"\";\n    }\n    return binary;\n}\n",
  "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n",
  "  if(n > m) return -1;\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return sum / Math.pow(2,m+1);\n}\n", "  let result = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  return result / Math.pow(2,Math.ceil(Math.log2(m+n)));\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n \
    \ }\n  result = Math.round(result / 2);\n  result = result.toString(2);\n  result\
    \ = result.padStart(result.length, '0');\n  if(result.length === 1){\n    result\
    \ = '0b' + result;\n  }\n  return result;\n}\n", "  if(n > m){\n    return -1;\n\
    \  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n      \
    \  sum += i;\n    }\n    let avg = sum / 2;\n    let binary = \"\";\n    while(avg\
    \ > 0){\n        binary = String(avg % 2) + binary;\n        avg = Math.floor(avg\
    \ / 2);\n    }\n    if(binary === \"0\") return -1;\n    return binary;\n}\n",
  "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n",
  "    let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n    while(avg > 0){\n\
    \        binary = binary + \"1\";\n        avg = Math.floor(avg/2);\n    }\n \
    \   while(binary.length < m){\n        binary = binary + \"0\";\n    }\n    return\
    \ binary;\n}\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n\
    \  }\n  return sum / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n",
  "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2,m+1) - 1;\n}\n", "  if(n > m){\n    return -1;\n\
    \  }\n  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return\
    \ sum / 2;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n      \
    \  sum += i;\n    }\n    let avg = sum / 2;\n    let bin = avg.toString(2);\n\
    \    while(bin.length < 8){\n        bin = \"0\" + bin;\n    }\n    return bin;\n\
    }\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let\
    \ avg = sum / 2;\n  let binary = \"\";\n  for(let i = avg; i >= 0; i--){\n   \
    \ binary += \"1\";\n  }\n  return binary;\n}\n", "    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum / 2;\n   \
    \ let bin = parseInt(avg, 2);\n    if(bin > m){\n        return -1;\n    }\n \
    \   return bin;\n}\n", "    var sum = 0;\n    for(var i = n; i <= m; i++){\n \
    \       sum += i;\n    }\n    var avg = sum / 2;\n    var binary = \"\";\n   \
    \ for(var i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n    return\
    \ binary;\n}\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n    \
    \    result += i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m){\n    return -1;\n  }\n  \n  let result\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  \n  result =\
    \ Math.round(result / 2);\n  \n  if(result % 2 === 0){\n    return result + 1;\n\
    \  }\n  \n  return result;\n}\n", "  let avg = Math.floor((n+m)/2);\n  if(avg\
    \ > m){\n    return -1;\n  }\n  let binary = \"\";\n  for(let i = avg; i >= n;\
    \ i--){\n    binary += \"1\";\n  }\n  for(let i = avg; i <= m; i++){\n    binary\
    \ += \"0\";\n  }\n  return binary;\n}\n", "    let result = 0;\n    for(let i\
    \ = n; i <= m; i++){\n        result += i;\n    }\n    return result / Math.pow(2,\
    \ Math.ceil(Math.log2(m) - Math.log2(n)));\n}\n", "  let result = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  result = Math.round(result /\
    \ 2);\n  result = result.toString(2);\n  result = result.padStart(result.length,\
    \ '0');\n  return result;\n}\n", "  let result = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    result += i;\n  }\n  return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let avg = sum / 2;\n  let\
    \ binary = \"\";\n  for(let i = avg; i >= 0; i--){\n    binary += \"1\";\n  }\n\
    \  return binary;\n}\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n\
    \        result += i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  let sum = 0;\n  let count = 0;\n  for(let i = n;\
    \ i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count === 0){\n    return\
    \ -1;\n  }\n  if(count === 1){\n    return sum;\n  }\n  if(count === 2){\n   \
    \ return sum / 2;\n  }\n  if(count === 3){\n    return sum / 3;\n  }\n  if(count\
    \ === 4){\n    return sum / 4;\n  }\n  if(count === 5){\n    return sum / 5;\n\
    \  }\n  if(count === 6){\n    return sum / 6;\n  }\n  if(count === 7){\n    return\
    \ sum / 7;\n  }\n  if(count === 8){\n    return sum / 8;\n  }\n  if(count ===\
    \ 9){\n    return sum / 9;\n  }\n  if(count === 10){\n    return sum / 10;\n \
    \ }\n  if(count === 11){\n    return sum / 11;\n  }\n  if(count === 12){\n   \
    \ return sum / 12;\n  }\n  if(count === 13){\n    return sum / 13;\n  }\n  if(count\
    \ === 14){\n    return sum / 14;\n  }\n  if(count === 15){\n    return sum / 15;\n\
    \  }\n  if(count === 16){\n    return sum / 16;\n  }\n  if(count === 17){\n  \
    \  return sum / 17;\n  }\n  if(count === 18){\n    return sum / 18;\n  }\n  if(count\
    \ === 19){\n    return sum / 19;\n  }\n  if(count === 20){\n    return sum / 20;\n\
    \  }\n  if(count === 21){\n    return sum / 21;\n  }\n  if(count === 22){\n  \
    \  return sum / 22;\n  }\n  if(count === 23){\n    return sum / 23;\n  }\n  if(count\
    \ === 24){\n    return sum / 24;\n  }\n  if(count === 25){\n    return sum / 25;\n\
    \  }\n  if(count === 26){\n    return sum / 26;\n  }\n  if(count === 27){\n  \
    \  return sum / 27;\n  }\n  if(count === 28){\n    return sum / 28;\n  }\n  if(count\
    \ === 29){\n    return sum / 29;\n  }\n  if(count === 30){\n    return sum / 30;\n\
    \  }\n  if(count === 31){\n    return sum / 31;\n  }\n  if(count === 32){\n  \
    \  return sum / 32;\n  }\n  if(count === 33){\n    return sum / 33", "  let sum\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  \n  let avg = sum\
    \ / 2;\n  \n  let binary = \"\";\n  \n  for(let i = avg; i >= 0; i--){\n    binary\
    \ += \"0\";\n  }\n  \n  for(let i = avg; i >= 0; i--){\n    binary += \"1\";\n\
    \  }\n  \n  return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let result\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  result = result\
    \ / 2;\n  result = result.toString(2);\n  result = result.padStart(result.length,\
    \ '0');\n  return result;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m;\
    \ i++){\n        sum += i;\n    }\n    let avg = sum / 2;\n    let binary = \"\
    \";\n    for(let i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n   \
    \ return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    let avg = sum / m;\n    let binary = \"\";\n  \
    \  for(let i = avg; i >= 1; i--){\n        binary += \"1\";\n    }\n    return\
    \ binary;\n}\n", "    var result = 0;\n    var i = n;\n    var j = m;\n    var\
    \ sum = 0;\n    while(i <= j){\n        sum += i;\n        i++;\n    }\n    while(j\
    \ > 0){\n        sum -= j;\n        j--;\n    }\n    while(sum > 0){\n       \
    \ result += (sum & 1);\n        sum >>= 1;\n    }\n    if(result < 0){\n     \
    \   return -1;\n    }\n    return result + 1;\n}\n", "    if (n >= m) return -1;\n\
    \    let result = 0;\n    for (let i = n; i <= m; i++){\n        result += i;\n\
    \    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  let result = 0;\n  for(let i = n;\
    \ i <= m; i++){\n    result += i;\n  }\n  result = Math.round(result / 2);\n \
    \ result = result.toString(2);\n  result = result.padStart(result.length, '0');\n\
    \  return result;\n}\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n\
    \        result += i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    let avg = sum / 2;\n    let binary = \"\";\n  \
    \  while(avg > 0){\n        binary = binary + \"1\";\n        avg--;\n    }\n\
    \    while(avg < 0){\n        binary = binary + \"0\";\n        avg++;\n    }\n\
    \    return binary;\n}\n", "    let result = 0;\n    for(let i = n; i <= m; i++){\n\
    \        result += i;\n    }\n    return result / Math.pow(2,Math.ceil(Math.log2(m+n)));\n\
    }\n", "    let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n    for(let\
    \ i = avg; i >= n; i--){\n        binary += \"1\";\n    }\n    for(let i = avg;\
    \ i <= m; i++){\n        binary += \"0\";\n    }\n    return binary;\n}\n", " \
    \   let avg = (n + m) / 2;\n    let bin = avg.toString(2);\n    let rem = avg\
    \ % 2;\n    let rem = rem > 0 ? \"1\" : \"0\";\n    return bin + rem;\n}\n", " \
    \   let result = 0;\n    for(let i = n; i <= m; i++){\n        result += i;\n\
    \    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "  if(n > m){\n    return -1;\n  }\n  let result = 0;\n  for(let i = n;\
    \ i <= m; i++){\n    result += i;\n  }\n  return result / Math.pow(2, Math.ceil(Math.log2(m)\
    \ - Math.log2(n)));\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n\
    \  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n}\n",
  "    let result = 0;\n    for(let i = n; i <= m; i++){\n        result += i;\n \
    \   }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    var result = 0;\n    for(var i = n; i <= m; i++){\n        result +=\
    \ i;\n    }\n    return result / Math.pow(2, Math.ceil(Math.log2(m) - Math.log2(n)));\n\
    }\n", "    let sum = 0;\n    let count = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n        count++;\n    }\n    if(count === 0){\n        return\
    \ -1;\n    }\n    return sum / count;\n}\n", "  let sum = 0;\n  for(let i = n;\
    \ i <= m; i++){\n    sum += i;\n  }\n  \n  if(sum > m){\n    return -1;\n  }\n\
    \  \n  let avg = sum / 2;\n  \n  let binary = \"\";\n  for(let i = avg; i >= 0;\
    \ i--){\n    binary += \"0\";\n  }\n  \n  return binary;\n}\n", "    let sum =\
    \ 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = sum / 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n   \
    \     binary += \"1\";\n    }\n    return binary;\n}\n", "  let avg = Math.floor((n+m)/2);\n\
    \  let binary = \"\";\n  while(avg > 0){\n    binary = binary + \"1\";\n    avg\
    \ = Math.floor(avg/2);\n  }\n  while(avg < 0){\n    binary = binary + \"0\";\n\
    \    avg = Math.floor(avg/2);\n  }\n  return binary;\n}\n", "    let avg = Math.floor((n+m)/2);\n\
    \    let binary = \"\";\n    for(let i = avg; i >= n; i--){\n        binary +=\
    \ \"1\";\n    }\n    for(let i = avg; i <= m; i++){\n        binary += \"0\";\n\
    \    }\n    return binary;\n}\n", "  if(n > m){\n    return -1;\n  }\n  let sum\
    \ = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / 2;\n\
    }\n", "    let result = 0;\n    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    result =  sum / m;\n    return Math.round(result\
    \ * Math.pow(10, Math.ceil(Math.log10(sum)))) / Math.pow(10, Math.ceil(Math.log10(sum)));\n\
    }\n", "    let avg = Math.floor((n+m)/2);\n    let binary = \"\";\n    for(let\
    \ i = avg; i >= n; i--){\n        binary += \"1\";\n    }\n    for(let i = avg;\
    \ i <= m; i++){\n        binary += \"0\";\n    }\n    return binary;\n}\n", " \
    \   let avg = (n+m)/2;\n    let binary = \"\";\n    for(let i = n; i <= m; i++){\n\
    \        binary += i.toString(2);\n    }\n    return binary.substring(binary.length-2,\
    \ binary.length);\n}\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n\
    \    result += i;\n  }\n  result = Math.round(result / 2);\n  result = result.toString(2);\n\
    \  result = result.padStart(result.length, '0');\n  return result;\n}\n", "  if(n\
    \ > m){\n    return -1;\n  }\n  let result = 0;\n  for(let i = n; i <= m; i++){\n\
    \    result += i;\n  }\n  return result/2;\n}\n", "    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum / 2;\n   \
    \ let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n        binary += \"\
    1\";\n    }\n    return binary;\n}\n", "    let sum = 0;\n    for(let i = n; i\
    \ <= m; i++){\n        sum += i;\n    }\n    let avg = sum / 2;\n    let binary\
    \ = \"\";\n    for(let i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n\
    \    return binary;\n}\n", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n \
    \   sum += i;\n  }\n  return sum / Math.pow(2, m+1);\n}\n", "  if(n > m){\n  \
    \  return -1;\n  }\n  let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    sum += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n\
    \  }\n  return sum / count;\n}\n", "    let sum = 0;\n    for(let i = n; i <=\
    \ m; i++){\n        sum += i;\n    }\n    let avg = sum / 2;\n    let binary =\
    \ \"\";\n    for(let i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n\
    \    return binary;\n}\n", "  if(n > m) return -1;\n  let result = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    result += i;\n  }\n  result = Math.round(result /\
    \ 2);\n  result = result.toString(2);\n  result = result.padStart(result.length,\
    \ '0');\n  return result;\n}\n", "  let result = 0;\n  for(let i = n; i <= m;\
    \ i++){\n    result += i;\n  }\n  result = Math.round(result / 2);\n  result =\
    \ result.toString(2);\n  result = result.padStart(result.length, '0');\n  return\
    \ result;\n}\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    let avg = sum / 2;\n    let binary = \"\";\n    for(let\
    \ i = avg; i >= 0; i--){\n        binary += \"1\";\n    }\n    return binary;\n\
    }\n", "    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    let avg = sum / 2;\n    let bin = avg.toString(2);\n    while(bin.length\
    \ < m){\n        bin = \"0\" + bin;\n    }\n    return bin;\n}\n", "    var avg\
    \ = Math.floor((n+m)/2);\n    var binary = \"\";\n    while(avg > 0){\n      \
    \  binary = binary + \"1\";\n        avg = avg - 1;\n    }\n    return binary;\n\
    }\n", "  let sum = 0;\n  let count = 0;\n  for(let i = n; i <= m; i++){\n    sum\
    \ += i;\n    count++;\n  }\n  if(count === 0){\n    return -1;\n  }\n  return\
    \ sum/count;\n}\n", "  let result = 0;\n  for(let i = n; i <= m; i++){\n    result\
    \ += i;\n  }\n  result = Math.round(result / 2);\n  result = result.toString(2);\n\
    \  result = result.padStart(result.length, '0');\n  return result;\n}\n", "  \
    \  let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    return sum / Math.pow(2,Math.ceil(Math.log2(m+n)));\n}\n", "    let result\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        result += i;\n    }\n    return\
    \ result / Math.pow(2,Math.ceil(Math.log2(m+1)));\n}\n", "    let sum = 0;\n \
    \   for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum\
    \ / 2;\n    let binary = \"\";\n    for(let i = avg; i >= 0; i--){\n        binary\
    \ += \"1\";\n    }\n    return binary;\n}\n", "  if(n > m) return -1;\n  \n  let\
    \ result = 0;\n  for(let i = n; i <= m; i++){\n    result += i;\n  }\n  \n  return\
    \ result.toString(2);\n}\n", "  let sum = 0;\n  let count = 0;\n  for(let i =\
    \ n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  if(count === 0){\n   \
    \ return -1;\n  }\n  return sum / count;\n}\n", "    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum / m;\n   \
    \ let bin = parseInt(avg.toString(2), 2);\n    return bin > m ? -1 : bin;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

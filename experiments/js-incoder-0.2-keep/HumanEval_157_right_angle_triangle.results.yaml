name: HumanEval_157_right_angle_triangle
language: js
results:
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= ac\
    \ && bc >= ab);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp6gzu73yx.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6gzu73yx.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abcd = abc + bcd;\n    return ((abc > bcd) && (abc > abcd));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpknajn4pv.js:23:10)\n    at Object.<anonymous> (/tmp/tmpknajn4pv.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpwqoz8kfs.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwqoz8kfs.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = bc + ab;\n    var abca = abc - ac;\n    return ((abca*bca - abca*ab + abca*abc)*(bca*bca\
    \ - bca*ab + bca*abc)) < 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp03hg84o6.js:23:10)\n    at Object.<anonymous> (/tmp/tmp03hg84o6.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - a)\
    \ * (c - b)) - ((c - a) * (b - a))) / Math.sqrt((b - a) * (c - a) * (b - a) *\
    \ (c - a));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-0.5\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp1bch56re.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1bch56re.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -0.5,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\tvar bcd = bc + ab;\n\
    \treturn (abc >= bcd);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpznnwqzak.js:23:10)\n    at Object.<anonymous> (/tmp/tmpznnwqzak.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab > 0 && ac > 0 && bc > 0) ||\
    \ (ab > 0 && bc > 0 && ac > 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpwck46mvp.js:20:10)\n    at Object.<anonymous> (/tmp/tmpwck46mvp.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var det = ab * ac - bc * bc;\n  return\
    \ det < 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpu9pynx3y.js:21:10)\n    at Object.<anonymous> (/tmp/tmpu9pynx3y.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var angle = Math.acos((Math.pow(Math.sin((Math.PI/180)*a),2)+Math.pow(Math.sin((Math.PI/180)*b),2)+Math.pow(Math.sin((Math.PI/180)*c),2))/(Math.pow(Math.sin((Math.PI/180)*a),2)+Math.pow(Math.sin((Math.PI/180)*b),2)+Math.pow(Math.sin((Math.PI/180)*c),2)));\n\
    \    return angle <= (Math.PI/180);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpg92a7w32.js:19:10)\n    at Object.<anonymous> (/tmp/tmpg92a7w32.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\treturn (ab > ac && ab > bc) || (ac > ab\
    \ && ac > bc);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpcj377j3w.js:20:10)\n    at Object.<anonymous> (/tmp/tmpcj377j3w.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = b + ca;\n    var cab = ac + bc;\n    var acb = ac + bc;\n    var abca = ab\
    \ + ca;\n    var acab = ac + ab;\n    var abcab = ab + cab;\n    var acabca =\
    \ ac + abca;\n    var abcabca = ab + cabca;\n    var acabcab = ac + abcab;\n \
    \   var abcabcab = ab + cabcab;\n    var acabcabca = ac + abcabca;\n    var abcabcabca\
    \ = ab + cabcabca;\n    var acabcabcab = ac + abcabcab;\n    var abcabcabcab =\
    \ ab + cabcabcab;\n    var acabcabcabca = ac + abcabcabca;\n    var abcabcabcabca\
    \ = ab + cabcabcabca;\n    var acabcabcabcab = ac + abcabcabcab;\n    var abcabcabcabcab\
    \ = ab + cabcabcabcab;\n    var acabcabcabcabca = ac + abcabcabcabca;\n    var\
    \ abcabcabcabcabca = ab + cabcabcabcabca;\n    var acabcabcabcabcab = ac + abcabcabcabcab;\n\
    \    var abcabcabcabcabcab = ab + cabcabcabcabcab;\n    var acabcabcabcabcabca\
    \ = ac + abcabcabcabcabca;\n    var abcabcabcabcabcabca = ab + cabcabcabcabcabca;\n\
    \    var acabcabcabcabcabcab = ac + abcabcabcabcabcab;\n    var abcabcabcabcabcabcab\
    \ = ab + cabcabcabcabcabcab;\n    var acabcabcabcabcabcabca = ac + abcabcabcabcabcabca;\n\
    \    var abcabcabcabcabcabcabca = ab + cabcabcabcabcabcabca;\n    var acabcabcabcabcabcabcab\
    \ = ac + abcabcabcabcabcabcab;\n    var abcabcabcabcabcabcabcab = ab + cabcabcabcabcabcabcab;\n\
    \    var acabcabcabcabcabcabcabca = ac + abcabcabcabcabcabcabcabca;\n    var abcabcabcabcabcabcabcabca\
    \ = ab + cabcabcabcabcabcabcabca;\n    var acab\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkwyp7nz6.js:64\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif((b - a) * (c -\
    \ b) <= 0){\n\t\treturn false;\n\t}\n\telse{\n\t\treturn true;\n\t}\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpfokeaust.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfokeaust.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var det = a1*b1 - a1*c1;\n\
    \    if(det < 0){\n        return false;\n    }\n    var s = (a1*c1 - b1*a1)/det;\n\
    \    var t = (b1*c1 - a1*b1)/det;\n    return Math.abs(s) == Math.abs(t);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp5p0t2qt2.js:26:10)\n    at Object.<anonymous> (/tmp/tmp5p0t2qt2.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar a1 = Math.abs(a);\n\
    \tvar b1 = Math.abs(b);\n\tvar c1 = Math.abs(c);\n\treturn (a1 + b1 + c1) ===\
    \ (a1 + b1 + c1) || (a1 + b1 + c1) === (a1 + b1 + c1) || (a1 + b1 + c1) === (a1\
    \ + b1 + c1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpka9179r9.js:21:10)\n    at Object.<anonymous> (/tmp/tmpka9179r9.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var acab = ac * ab;\n  var bcac = bc\
    \ * ac;\n  var abac = ab * ac;\n  return ((abac >= 0) && (acab >= 0) && (bcac\
    \ >= 0) && (abac >= 0));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpe_k0j_ni.js:24:10)\n    at Object.<anonymous> (/tmp/tmpe_k0j_ni.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\
    \ ac = abs(a-c), bc = abs(b-c);\n    return (ab == ac && ab == bc);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6stutkrv.js:9\n    var ab = abs(a-b), ac = abs(a-c), bc = abs(b-c);\n\
    \             ^\n\nReferenceError: abs is not defined\n    at right_angle_triangle\
    \ (/tmp/tmp6stutkrv.js:9:14)\n    at test (/tmp/tmp6stutkrv.js:18:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp6stutkrv.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif((b - c) < 0){\n\
    \t\treturn false;\n\t}\n\tif((b - a) > c){\n\t\treturn false;\n\t}\n\tif((c -\
    \ a) > b){\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp34fkdvx1.js:26:10)\n    at Object.<anonymous> (/tmp/tmp34fkdvx1.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        ca = abs(c-a),\n        abc = ab + bc + ca;\n\
    \    return ((abc <= 180) || ((abc-180) === (ab+bc+ca)));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpydroje48.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpydroje48.js:9:14)\n\
    \    at test (/tmp/tmpydroje48.js:21:20)\n    at Object.<anonymous> (/tmp/tmpydroje48.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var acb = ac * bc;\n  var abc = ab *\
    \ bc;\n  return (ab * acb + abc * ab) == 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpd9gjcse_.js:22:10)\n    at Object.<anonymous> (/tmp/tmpd9gjcse_.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab\
    \ - ac) <= Math.abs(bc - ab);\n    return is_right_angle;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmplcc8dktm.js:21:10)\n    at Object.<anonymous> (/tmp/tmplcc8dktm.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - c)\
    \ - (a - b)) > 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp0zsg_0w4.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0zsg_0w4.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpmngtmguf.js:21:10)\n    at Object.<anonymous> (/tmp/tmpmngtmguf.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det < 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpb8_tajnc.js:22:10)\n    at Object.<anonymous> (/tmp/tmpb8_tajnc.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if(Math.abs(a-b)\
    \ <= Math.abs(b-c) && Math.abs(a-c) <= Math.abs(c-b)){\n    return true;\n  }\n\
    \  return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpfwpj52el.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfwpj52el.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acab = ac * ab;\n    var bcac\
    \ = bc * ac;\n    var abac = ab * ac;\n    return abac === bcad && abac === acbd;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkhbd90v3.js:15\n    return abac === bcad && abac === acbd;\n  \
    \                  ^\n\nReferenceError: bcad is not defined\n    at right_angle_triangle\
    \ (/tmp/tmpkhbd90v3.js:15:21)\n    at test (/tmp/tmpkhbd90v3.js:23:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpkhbd90v3.js:36:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = b + ca;\n    var acb = ac + bc;\n    var abcb = abc + bca;\n    return (abcb\
    \ == acb) || (abcb == bca);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2ep1_01y.js:13\n    var bca = b + ca;\n                  ^\n\n\
    ReferenceError: ca is not defined\n    at right_angle_triangle (/tmp/tmp2ep1_01y.js:13:19)\n\
    \    at test (/tmp/tmp2ep1_01y.js:24:20)\n    at Object.<anonymous> (/tmp/tmp2ep1_01y.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\tvar bca = b + ca;\n\
    \tvar cab = ac + bc;\n\treturn (abc == bca) && (cab == ab);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbxjylsit.js:13\n\tvar bca = b + ca;\n\t              ^\n\nReferenceError:\
    \ ca is not defined\n    at right_angle_triangle (/tmp/tmpbxjylsit.js:13:16)\n\
    \    at test (/tmp/tmpbxjylsit.js:23:20)\n    at Object.<anonymous> (/tmp/tmpbxjylsit.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - a)\
    \ * (c - b)) > 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpq09aez04.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq09aez04.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = abs(a-b);\n\
    \  var ac = abs(a-c);\n  var bc = abs(b-c);\n  if(ab == ac && ab == bc){\n   \
    \ return true;\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbqtsthsj.js:9\n  var ab = abs(a-b);\n           ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpbqtsthsj.js:9:12)\n\
    \    at test (/tmp/tmpbqtsthsj.js:23:20)\n    at Object.<anonymous> (/tmp/tmpbqtsthsj.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if((b - a) * (c -\
    \ b) <= 0){\n    return false;\n  }\n  if((b - c) * (a - b) <= 0){\n    return\
    \ false;\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp42rinpkk.js:24:10)\n    at Object.<anonymous> (/tmp/tmp42rinpkk.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if (det < 0){\n        return false;\n    }\n    var sq = ab * ab + ac *\
    \ ac;\n    var det = ab * ac - bc * bc;\n    return det === sq;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp7ow15j4i.js:26:10)\n    at Object.<anonymous> (/tmp/tmp7ow15j4i.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab == ac && ab == bc){\n    return\
    \ true;\n  }\n  if(ab == ac){\n    return false;\n  }\n  if(bc == ac){\n    return\
    \ false;\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpbw08_zju.js:30:10)\n    at Object.<anonymous> (/tmp/tmpbw08_zju.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var acb = ac * bc;\n  var abc = ab *\
    \ bc;\n  return (acb == abc);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpmr2iz8ur.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmr2iz8ur.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b);\n\
    \    var ac = abs(a-c);\n    var bc = abs(b-c);\n    var abc = ab + ac + bc;\n\
    \    return abc < 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpupvriq_x.js:9\n    var ab = abs(a-b);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpupvriq_x.js:9:14)\n\
    \    at test (/tmp/tmpupvriq_x.js:21:20)\n    at Object.<anonymous> (/tmp/tmpupvriq_x.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif((b - a) * (c -\
    \ b) <= 0){\n\t\treturn false;\n\t}\n\tif((b - a) * (a + b) <= 0){\n\t\treturn\
    \ false;\n\t}\n\tif((c - a) * (a + c) <= 0){\n\t\treturn false;\n\t}\n\tif((c\
    \ - a) * (b + c) <= 0){\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpf1xcx_28.js:30:10)\n    at Object.<anonymous> (/tmp/tmpf1xcx_28.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    \n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpgs_pk1bf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpgs_pk1bf.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = abs(a-b);\n\
    \  var ac = abs(a-c);\n  var bc = abs(b-c);\n  if(ab == ac && ab == bc){\n   \
    \ return true;\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6sg85r_w.js:9\n  var ab = abs(a-b);\n           ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp6sg85r_w.js:9:12)\n\
    \    at test (/tmp/tmp6sg85r_w.js:23:20)\n    at Object.<anonymous> (/tmp/tmp6sg85r_w.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var abc = ab + ac;\n  var bcd = bc +\
    \ ab;\n  return abc === bcd;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmplz4z46zp.js:22:10)\n    at Object.<anonymous> (/tmp/tmplz4z46zp.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpb94_qh8g.js:21:10)\n    at Object.<anonymous> (/tmp/tmpb94_qh8g.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if((b - a) * (c -\
    \ b) <= 0){\n    return false;\n  }\n  if((b - a) * (a + b) <= 0){\n    return\
    \ false;\n  }\n  if((c - a) * (a + b) <= 0){\n    return false;\n  }\n  if((c\
    \ - a) * (b + a) <= 0){\n    return false;\n  }\n  return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmph5_dqc01.js:30:10)\n    at Object.<anonymous> (/tmp/tmph5_dqc01.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abcd = abc + bcd;\n    return (abcd >= 0) && (abcd <= 1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpk31ckp59.js:23:10)\n    at Object.<anonymous> (/tmp/tmpk31ckp59.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= 0)\
    \ && (ac >= 0) && (bc >= 0);\n    return is_right_angle;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp89__pvge.js:21:10)\n    at Object.<anonymous> (/tmp/tmp89__pvge.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var ac_bc = ac * bc;\n  var ab_bc = ab\
    \ * bc;\n  return ab_bc === 1 || ac_bc === 1 || ac_bc === ab_bc;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpxa1tuvm6.js:23:10)\n    at Object.<anonymous> (/tmp/tmpxa1tuvm6.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var angle = Math.acos((a*a\
    \ + b*b - c*c)/(2*a*b));\n    return angle <= Math.PI/2;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmptqi03a9m.js:21:10)\n    at Object.<anonymous> (/tmp/tmptqi03a9m.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab == ac && ab == bc){\n    return\
    \ true;\n  }\n  if(ab == ac){\n    return false;\n  }\n  if(bc == ac){\n    return\
    \ false;\n  }\n  if(bc > ab){\n    return false;\n  }\n  return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpl1s7uvao.js:33:10)\n    at Object.<anonymous> (/tmp/tmpl1s7uvao.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det < 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpfxyd1e90.js:21:10)\n    at Object.<anonymous> (/tmp/tmpfxyd1e90.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = abs(a-b);\n\
    \  var ac = abs(a-c);\n  var bc = abs(b-c);\n  if(ab == ac && ab == bc){\n   \
    \ return true;\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsjldrbkb.js:9\n  var ab = abs(a-b);\n           ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpsjldrbkb.js:9:12)\n\
    \    at test (/tmp/tmpsjldrbkb.js:23:20)\n    at Object.<anonymous> (/tmp/tmpsjldrbkb.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det != 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpk77_kjxq.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk77_kjxq.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var acbc = acb * bc;\n    var abac = ab * ac;\n    var acbca\
    \ = acb * ca;\n    var abcab = ab * cab;\n    var acbcab = acb * cab;\n    var\
    \ acbcabc = acbcab * bc;\n    var abcabcd = abcab * cd;\n    var acbcabcd = acbcab\
    \ * cd;\n    var acbcabcd2 = acbcabc * cd;\n    var abcabcd3 = abcabc * cd;\n\
    \    var acbcabcd4 = acbcabc * cd;\n    var abcabcd5 = abcabc * cd;\n    var acbcabcd6\
    \ = acbcabc * cd;\n    var abcabcd7 = abcabc * cd;\n    var acbcabcd8 = acbcabc\
    \ * cd;\n    var abcabcd9 = abcabc * cd;\n    var acbcabcd10 = acbcabc * cd;\n\
    \    var abcabcd11 = abcabc * cd;\n    var acbcabcd12 = acbcabc * cd;\n    var\
    \ abcabcd13 = abcabc * cd;\n    var acbcabcd14 = acbcabc * cd;\n    var abcabcd15\
    \ = abcabc * cd;\n    var acbcabcd16 = acbcabc * cd;\n    var abcabcd17 = abcabc\
    \ * cd;\n    var acbcabcd18 = acbcabc * cd;\n    var abcabcd19 = abcabc * cd;\n\
    \    var acbcabcd20 = acbcabc * cd;\n    var abcabcd21 = abcabc * cd;\n    var\
    \ acbcabcd22 = acbcabc * cd;\n    var abcabcd23 = abcabc * cd;\n    var acbcabcd24\
    \ = acbcabc * cd;\n    var abcabcd25 = abcabc * cd;\n    var acbcabcd26 = acbcabc\
    \ * cd;\n    var abcabcd27 = abcabc * cd;\n    var acbcabcd28 = acbcabc * cd;\n\
    \    var abcabcd29 = abcabc * cd;\n    var acbcabcd30 = acbcab\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppyay1jom.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = abs(b -\
    \ a);\n\tvar ac = abs(c - a);\n\tvar bc = abs(b - c);\n\tvar abc = ab + ac + bc;\n\
    \treturn (abc <= 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1l4p_762.js:9\n\tvar ab = abs(b - a);\n\t         ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp1l4p_762.js:9:11)\n\
    \    at test (/tmp/tmp1l4p_762.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1l4p_762.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    return abc === bcd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpwwpw28v4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwwpw28v4.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        ac = abs(a-c);\n    return ((ab > bc) && (ab\
    \ > ac));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptbko4q2m.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmptbko4q2m.js:9:14)\n\
    \    at test (/tmp/tmptbko4q2m.js:20:20)\n    at Object.<anonymous> (/tmp/tmptbko4q2m.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\tvar bca = b + ca;\n\
    \tvar bcb = b + cb;\n\treturn (abc == bca) && (ab == bcb);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpavbicfxm.js:13\n\tvar bca = b + ca;\n\t              ^\n\nReferenceError:\
    \ ca is not defined\n    at right_angle_triangle (/tmp/tmpavbicfxm.js:13:16)\n\
    \    at test (/tmp/tmpavbicfxm.js:23:20)\n    at Object.<anonymous> (/tmp/tmpavbicfxm.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var det = ab*ac - bc*bc;\n  return det\
    \ > 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpisyce_2h.js:22:10)\n    at Object.<anonymous> (/tmp/tmpisyce_2h.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpgg_44cqc.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgg_44cqc.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var det = ab * ac - bc * bc;\n  return\
    \ det > 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpjoy0wf6k.js:21:10)\n    at Object.<anonymous> (/tmp/tmpjoy0wf6k.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar a1 = Math.abs(a);\n\
    \tvar b1 = Math.abs(b);\n\tvar c1 = Math.abs(c);\n\t\n\tvar a2 = Math.abs(a1 -\
    \ b1);\n\tvar b2 = Math.abs(b1 - c1);\n\tvar c2 = Math.abs(c1 - a1);\n\t\n\treturn\
    \ ((a2 >= b2 && b2 >= c2) || (a2 >= c2 && c2 >= b2)) ? true : false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpe2qkhgag.js:25:10)\n    at Object.<anonymous> (/tmp/tmpe2qkhgag.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - a)\
    \ * (c - b)) >= 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpwgv9n4hv.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwgv9n4hv.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det < 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpvqs3ajm4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvqs3ajm4.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var acbc = acb * bc;\n    return ((ab * acbc + abc > acb * ab)\
    \ && (acb * acbc < ab * abc));\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpck7nhr2z.js:23:10)\n    at Object.<anonymous> (/tmp/tmpck7nhr2z.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if(det < 0){\n        return false;\n    }\n    var sq_det = Math.sqrt(det);\n\
    \    var is_right_angle = Math.acos(ab / sq_det) * Math.acos(ac / sq_det) <= 0;\n\
    \    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp5q78oiam.js:26:10)\n    at Object.<anonymous> (/tmp/tmp5q78oiam.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det != 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpk4bsrvgh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk4bsrvgh.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return (ab + ac + abc >= acb) && (ab + bc + abc >= abc)\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp75q30kjv.js:22:10)\n    at Object.<anonymous> (/tmp/tmp75q30kjv.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp6psgdxfz.js:21:10)\n    at Object.<anonymous> (/tmp/tmp6psgdxfz.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return ((abc + acb) == (ab*bc));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpcdly7ur8.js:22:10)\n    at Object.<anonymous> (/tmp/tmpcdly7ur8.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b);\n\
    \    var ac = abs(a-c);\n    var bc = abs(b-c);\n    var abc = ab + ac + bc;\n\
    \    return abc <= 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5t0ru7su.js:9\n    var ab = abs(a-b);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp5t0ru7su.js:9:14)\n\
    \    at test (/tmp/tmp5t0ru7su.js:21:20)\n    at Object.<anonymous> (/tmp/tmp5t0ru7su.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpv3zab28v.js:21:10)\n    at Object.<anonymous> (/tmp/tmpv3zab28v.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    return ((abc > bcd) && (abc < ac));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp3oiag2kw.js:22:10)\n    at Object.<anonymous> (/tmp/tmp3oiag2kw.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if((b - a)*(c - b)\
    \ == (c - a)*(a - b)){\n    return true;\n  }\n  return false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp_amsiiae.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_amsiiae.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det > 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp961ujtnz.js:22:10)\n    at Object.<anonymous> (/tmp/tmp961ujtnz.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var acbc = acb * bc;\n    var abbc = abb * bc;\n    var acbcab\
    \ = acbcab * bc;\n    var acbcabc = acbcabc * bc;\n    var acbcabcb = acbcabcb\
    \ * bc;\n    var acbcabcbc = acbcabcbc * bc;\n    var acbcabcbcb = acbcabcbcb\
    \ * bc;\n    var acbcabcbcbc = acbcabcbcbc * bc;\n    var acbcabcbcbcb = acbcabcbcbcb\
    \ * bc;\n    var acbcabcbcbcbc = acbcabcbcbcbc * bc;\n    var acbcabcbcbcbcb =\
    \ acbcabcbcbcbcb * bc;\n    var acbcabcbcbcbcbc = acbcabcbcbcbcbc * bc;\n    var\
    \ acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * bc;\n    var acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc\
    \ * bc;\n    var acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * bc;\n    var acbcabcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * bc;\n    var acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb\
    \ * bc;\n    var acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbc * bc;\n    var acbcabcbcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbcbc * bc;\n    var acbcabcbcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcbcb\
    \ * bc;\n    var acbcabcbcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcb * bc;\n    var\
    \ acbcabcbcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbcbc * bc;\n    var acbcabcbcbcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcbcbcbcb * bc;\n    var acbcabcb\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr26l0y8z.js:56\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det >= 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpt8_6x6ko.js:21:10)\n    at Object.<anonymous> (/tmp/tmpt8_6x6ko.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if(det < 0){\n        return false;\n    }\n    var s = (-b + Math.sqrt(det))/(2*a);\n\
    \    var t = (-b - Math.sqrt(det))/(2*a);\n    return Math.abs(s) == Math.abs(t);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp8rzajty9.js:26:10)\n    at Object.<anonymous> (/tmp/tmp8rzajty9.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b);\n\
    \    var bc = abs(b-c);\n    var ca = abs(c-a);\n    return (ab >= bc && ab >=\
    \ ca);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyq44za78.js:9\n    var ab = abs(a-b);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpyq44za78.js:9:14)\n\
    \    at test (/tmp/tmpyq44za78.js:20:20)\n    at Object.<anonymous> (/tmp/tmpyq44za78.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var acb = ac * bc;\n  var abc = ab *\
    \ bc;\n  return ((ab * acb) - (abc * ac)) < 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmphrfgadan.js:22:10)\n    at Object.<anonymous> (/tmp/tmphrfgadan.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= 0)\
    \ && (ac >= 0) && (bc >= 0);\n    return is_right_angle;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp23xrryzf.js:21:10)\n    at Object.<anonymous> (/tmp/tmp23xrryzf.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abdc = ab + bc;\n    var acbc = ac + bc;\n    var abbcd\
    \ = abc + bcd;\n    var acdbc = ac + bcd;\n    var abcd = abc * bc;\n    var abdcd\
    \ = abc + bcd;\n    var acbd = ac * bc;\n    var abbcd = abc + bcd;\n    var acdbc\
    \ = ac + bcd;\n    var abd = abc * b;\n    var abdc = abc + bcd;\n    var acbd\
    \ = ac * b;\n    var abbcd = abc + bcd;\n    var acdbc = ac + bcd;\n    var abd\
    \ = abc * a;\n    var abdc = abc + bcd;\n    var acbd = ac * a;\n    var abbcd\
    \ = abc + bcd;\n    var acdbc = ac + bcd;\n    var abd = abc * c;\n    var abdc\
    \ = abc + bcd;\n    var acbd = ac * c;\n    var abbcd = abc + bcd;\n    var acdbc\
    \ = ac + bcd;\n    var abdc = abc * c;\n    var abdbc = abc + bcd;\n    var acdbc\
    \ = ac + bcd;\n    var abdbc = abc + bcd;\n    var acdbc = ac + bcd;\n    var\
    \ abdbc = abc + bcd;\n    var acdbc = ac + bcd;\n    var abdbc = abc + bcd;\n\
    \    var acdbc = ac + bcd;\n    var abdbc = abc + bcd;\n    var acdbc = ac + bcd;\n\
    \    var abdbc = abc + bcd;\n    var acdbc = ac + bcd;\n    var abdbc = abc +\
    \ bcd;\n    var acdbc = ac + bcd;\n    var abdbc = abc + bcd;\n    var acdbc =\
    \ ac + bcd;\n    var abdbc = abc + bcd;\n    var acdbc = ac + bcd;\n    var abdbc\
    \ = abc + bcd;\n    var acdbc = ac + bcd;\n    var abdbc = abc + bcd;\n    var\
    \ acdbc = ac + bcd;\n    var abdbc = abc + bcd;\n    var acdbc = ac + bcd;\n \
    \   var abdbc = abc + bcd;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjlen_873.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - a)\
    \ * (c - b)) - ((c - a) * (b - a))) / Math.sqrt(((b - a) * (b - a)) + ((c - a)\
    \ * (c - a))); \n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-0.4472135954999579\n\nshould equal\n\n\
    true\n    at test (/tmp/tmpgzfl6nhg.js:17:10)\n    at Object.<anonymous> (/tmp/tmpgzfl6nhg.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -0.4472135954999579,\n  expected: true,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    return abc === bcd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpj7sb8ceb.js:22:10)\n    at Object.<anonymous> (/tmp/tmpj7sb8ceb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  \n  return ((ab >= 0) && (ac >= 0) &&\
    \ (bc >= 0)) || ((ab <= 0) && (ac <= 0) && (bc <= 0));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpcdmofr_4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpcdmofr_4.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var abc = ab + ac;\n  var bcd = bc +\
    \ ab;\n  return abc <= bcd;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpah0e57_1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpah0e57_1.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  return (((b - a)\
    \ * (c - b)) > 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpizr7gzkt.js:18:10)\n    at Object.<anonymous> (/tmp/tmpizr7gzkt.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    return (ab >= 0 && ac >= 0 && bc\
    \ >= 0) || (ab <= 0 && ac <= 0 && bc <= 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp70anp7jm.js:21:10)\n    at Object.<anonymous> (/tmp/tmp70anp7jm.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab == ac && ab == bc){\n    return\
    \ true;\n  }\n  if(ab != ac && ab != bc){\n    return false;\n  }\n  if(ac !=\
    \ bc && ac != ab){\n    return false;\n  }\n  return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp6w1tn30d.js:29:10)\n    at Object.<anonymous> (/tmp/tmp6w1tn30d.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det > 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp5z_o9sub.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5z_o9sub.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(b-a),\n\
    \        bc = abs(c-b),\n        ac = abs(c-a),\n        ad = abs(a-d);\n    return\
    \ ((ab>bc && ab>ac && ab>ad) || (bc>ab && bc>ac && bc>ad) || (ac>ab && ac>bc &&\
    \ ac>ad) || (ad>ab && ad>bc && ad>ac));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpepkkk682.js:9\n    var ab = abs(b-a),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpepkkk682.js:9:14)\n\
    \    at test (/tmp/tmpepkkk682.js:21:20)\n    at Object.<anonymous> (/tmp/tmpepkkk682.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abcd = abc * bcd - ab * bcd;\n    return abcd >= 0;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpgxa7o0vl.js:24:10)\n    at Object.<anonymous> (/tmp/tmpgxa7o0vl.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle1 = Math.acos((a1\
    \ * b1 + c1 * b1) / Math.sqrt(a1 * a1 + b1 * b1 + c1 * b1));\n    var angle2 =\
    \ Math.acos((a * b1 + c * b1) / Math.sqrt(a * a1 + b * b1 + c * c1));\n    return\
    \ angle1 < angle2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpswukek2a.js:22:10)\n    at Object.<anonymous> (/tmp/tmpswukek2a.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var det = ab * ac - bc * bc;\n  return\
    \ det < 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpso7wect6.js:22:10)\n    at Object.<anonymous> (/tmp/tmpso7wect6.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acab = ac * ab;\n    var bcab\
    \ = bc * ab;\n    var acbc = ac * bc;\n    var abcac = ab * ac;\n    return ((acbc\
    \ > acab) && (bcab > bcab) && (abcac > 0));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp4wmjvm58.js:24:10)\n    at Object.<anonymous> (/tmp/tmp4wmjvm58.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    \n    return (ab * bc) - (ac *\
    \ ab);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-1\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp3_v1patd.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3_v1patd.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac);\n    var is_right_angle = Math.abs(ab) > Math.abs(bc);\n   \
    \ return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpn55iy_4v.js:22:10)\n    at Object.<anonymous> (/tmp/tmpn55iy_4v.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\treturn (((b - a)\
    \ * (c - b)) > 0)\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmph2cn2xsu.js:18:10)\n    at Object.<anonymous> (/tmp/tmph2cn2xsu.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(b\
    \ - a);\n    var ac = abs(c - a);\n    var bc = abs(b - c);\n    var det = ab*bc\
    \ - ac*ac;\n    if(det < 0){\n        return false;\n    }\n    var s = ac/det;\n\
    \    var t = bc/det;\n    var u = ab/det;\n    return ((u >= 0) && (v >= 0) &&\
    \ (u + v < 1));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn4c2fda1.js:9\n    var ab = abs(b - a);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpn4c2fda1.js:9:14)\n\
    \    at test (/tmp/tmpn4c2fda1.js:27:20)\n    at Object.<anonymous> (/tmp/tmpn4c2fda1.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\tvar acb = ac * bc;\n\tvar abc = ab * bc;\n\
    \tvar abbc = ab * bc;\n\tvar acbc = ac * bc;\n\tvar abac = ab * ac;\n\tvar abcab\
    \ = ab * abc;\n\tvar acbcab = ac * bc * abc;\n\tvar accabc = ac * cab * abc;\n\
    \tvar accabbc = ac * cab * bc;\n\tvar acbcabbc = ac * cab * bc * bc;\n\tvar accabcab\
    \ = ac * cab * cab;\n\tvar accabcabc = ac * cab * cab * abc;\n\tvar accabcabbc\
    \ = ac * cab * cab * bc * bc;\n\tvar accabcabbcbc = ac * cab * cab * bc * bc *\
    \ bc;\n\tvar accabcabcabc = ac * cab * cab * cab * abc;\n\tvar accabcabcabbc =\
    \ ac * cab * cab * cab * bc * bc;\n\tvar accabcabcabbcbc = ac * cab * cab * cab\
    \ * bc * bc * bc;\n\tvar accabcabcabcabc = ac * cab * cab * cab * cab * abc *\
    \ abc;\n\tvar accabcabcabcabbc = ac * cab * cab * cab * cab * bc * bc * bc;\n\t\
    var accabcabcabcabbcbc = ac * cab * cab * cab * cab * bc * bc * bc * bc;\n\tvar\
    \ accabcabcabcabcabc = ac * cab * cab * cab * cab * cab * abc * abc * abc;\n\t\
    var accabcabcabcabcabbc = ac * cab * cab * cab * cab * cab * bc * bc * bc * bc\
    \ * bc;\n\tvar accabcabcabcabcabbcbc = ac * cab * cab * cab * cab * cab * bc *\
    \ bc * bc * bc * bc;\n\tvar accabcabcabcabcabcabc = ac * cab * cab * cab * cab\
    \ * cab * cab * cab * cab * cab * abc * abc * abc * abc;\n\tvar accabcabcabcabcabcabbc\
    \ = ac * cab * cab * cab * cab * cab * cab * cab * cab * cab * cab * bc * bc *\
    \ bc * bc * bc;\n\tvar accabcabcabcabcabcabbcbc = ac * cab * cab * cab * cab\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfv1p1df8.js:56\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acab = ac * ab;\n    var bcab\
    \ = bc * ab;\n    var abac = ab * ac;\n    var acbc = ac * bc;\n    var bcac =\
    \ bc * ac;\n    var abcab = ab * bc;\n    var acbcab = ac * bc;\n    return (abcab\
    \ == acbcab) && (abac == bcab);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp850g9o4o.js:27:10)\n    at Object.<anonymous> (/tmp/tmp850g9o4o.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        cb = abs(c-b);\n    return ((ab>bc && ab>cb)\
    \ || (bc>ab && bc>cb) || (cb>ab && cb>bc));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnkb93t3a.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpnkb93t3a.js:9:14)\n\
    \    at test (/tmp/tmpnkb93t3a.js:20:20)\n    at Object.<anonymous> (/tmp/tmpnkb93t3a.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var acbc = acb * bc;\n    return ((abc > acbc && abc > abc)\
    \ || (abc < acbc && abc < abc));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmphmc0ean_.js:23:10)\n    at Object.<anonymous> (/tmp/tmphmc0ean_.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\tvar acb = ac * bc;\n\tvar abc = ab * bc;\n\
    \treturn (abc >= acb) && (abc >= 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpc68euwp3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpc68euwp3.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        ca = abs(c-a),\n        abc = ab + bc;\n    return\
    \ (abc == 90) ? true : false;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbthzrh51.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpbthzrh51.js:9:14)\n\
    \    at test (/tmp/tmpbthzrh51.js:21:20)\n    at Object.<anonymous> (/tmp/tmpbthzrh51.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if (det < 0){\n        return false;\n    }\n    var sq = det * det;\n  \
    \  var s = Math.sqrt(sq);\n    var t = (b * bc) / s;\n    var u = (b * ab) / s;\n\
    \    var v = (c * ac) / s;\n    var w = ((ab * bc) - (ac * ab)) / s;\n    var\
    \ x = v - w;\n    var y = u + w;\n    var z = v + w;\n    var result = (Math.abs(x)\
    \ < Math.abs(y)) ? true : false;\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmputdbzbq7.js:34:10)\n    at Object.<anonymous> (/tmp/tmputdbzbq7.js:47:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab\
    \ - ac) <= Math.abs(bc - ab);\n    return is_right_angle;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpvs86kk6g.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvs86kk6g.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpz1wyw5vz.js:21:10)\n    at Object.<anonymous> (/tmp/tmpz1wyw5vz.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(b\
    \ - a);\n    var ac = abs(c - a);\n    var ad = abs(b - c);\n    var bc = abs(c\
    \ - b);\n    var bd = abs(a - b);\n    var det = ab * bd - ac * bc;\n    return\
    \ det >= 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0qtf1m9_.js:9\n    var ab = abs(b - a);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp0qtf1m9_.js:9:14)\n\
    \    at test (/tmp/tmp0qtf1m9_.js:23:20)\n    at Object.<anonymous> (/tmp/tmp0qtf1m9_.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab > ac && ab > bc){\n    return true;\n\
    \  }\n  if(ac > ab && ac > bc){\n    return true;\n  }\n  return false;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmprh9_00pk.js:26:10)\n    at Object.<anonymous> (/tmp/tmprh9_00pk.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmph700fz_f.js:21:10)\n    at Object.<anonymous> (/tmp/tmph700fz_f.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var acbc = acb * bc;\n    var acbc_ab = acbc * ab;\n    return\
    \ acbc_ab >= 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmphjghy79o.js:24:10)\n    at Object.<anonymous> (/tmp/tmphjghy79o.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if((b - c) > 0){\n\
    \    return ((Math.atan2(b,c) - Math.atan2(a,b)) > Math.PI/2);\n  }\n  else{\n\
    \    return ((Math.atan2(b,c) - Math.atan2(a,b)) < Math.PI/2);\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpfoqp7296.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfoqp7296.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return (abc + acb == 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpzzy3cuz1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzzy3cuz1.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var acb = ac * bc;\n  var abc = ab *\
    \ bc;\n  return ((ab * acb) - (abc * ac)) < 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpdumgdbee.js:22:10)\n    at Object.<anonymous> (/tmp/tmpdumgdbee.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if(det < 0){\n        return false;\n    }\n    var sq_det = Math.sqrt(det);\n\
    \    var con = ab / sq_det;\n    var s = bc / sq_det;\n    var t = ac / sq_det;\n\
    \    return (con >= 0 && con <= 1 && s >= 0 && s <= 1 && t >= 0 && t <= 1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpskjjfz6h.js:28:10)\n    at Object.<anonymous> (/tmp/tmpskjjfz6h.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return abc > acb;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp59jws02g.js:22:10)\n    at Object.<anonymous> (/tmp/tmp59jws02g.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var angle = Math.acos((a*a\
    \ + b*b - c*c)/(2*a*b));\n    return angle < Math.PI/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpd79cyneg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd79cyneg.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if((Math.abs(a *\
    \ 3 - b * 2 - c) < 0.0000000001) && (Math.abs(a * 2 - b * 3 - c) < 0.0000000001)\
    \ && (Math.abs(a * 3 - b * 1 - c) < 0.0000000001)){\n    return true;\n  }\n \
    \ return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp1ea792sv.js:20:10)\n    at Object.<anonymous> (/tmp/tmp1ea792sv.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = b + c;\n    var abcb = abc + bca;\n    var abca = ab + ca;\n    var acab =\
    \ ac + ab;\n    var abcac = abca + acab;\n    var abcab = abca + bca;\n    var\
    \ abcacb = abcac + abcab;\n    return abcacb == 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbvdt7q84.js:15\n    var abca = ab + ca;\n                    ^\n\
    \nReferenceError: ca is not defined\n    at right_angle_triangle (/tmp/tmpbvdt7q84.js:15:21)\n\
    \    at test (/tmp/tmpbvdt7q84.js:28:20)\n    at Object.<anonymous> (/tmp/tmpbvdt7q84.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(b\
    \ - a);\n    var ac = abs(c - a);\n    var bc = abs(b - c);\n    var det = ab\
    \ * bc - ac * ac;\n    return det < 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzii3lsxg.js:9\n    var ab = abs(b - a);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpzii3lsxg.js:9:14)\n\
    \    at test (/tmp/tmpzii3lsxg.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzii3lsxg.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  return ((b - a) *\
    \ (c - b) <= 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpt9w74zww.js:17:10)\n    at Object.<anonymous> (/tmp/tmpt9w74zww.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif(a==b){\n\t\treturn\
    \ c==b;\n\t}\n\tif(a==c){\n\t\treturn b==c;\n\t}\n\tif(b==c){\n\t\treturn a==b;\n\
    \t}\n\tif(a>b){\n\t\tif(a>c){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t\
    }\n\tif(a<b){\n\t\tif(b>c){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t\
    }\n\tif(a<c){\n\t\tif(b>c){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t\
    }\n\treturn false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp5i6_5b4f.js:44:10)\n    at Object.<anonymous> (/tmp/tmp5i6_5b4f.js:57:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return (abc + acb > 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmps_20l650.js:22:10)\n    at Object.<anonymous> (/tmp/tmps_20l650.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var acb = ac * bc;\n  return ab > acb\
    \ && ab > -bc;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpbr71ra4s.js:21:10)\n    at Object.<anonymous> (/tmp/tmpbr71ra4s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif(a==b){\n\t\treturn\
    \ c==b;\n\t}\n\tif(a==c){\n\t\treturn b==c;\n\t}\n\tif(b==c){\n\t\treturn a==b;\n\
    \t}\n\tvar ab = a-b;\n\tvar ac = a-c;\n\tvar bc = b-c;\n\tvar det = ab*ac - bc*bc;\n\
    \tif(det < 0){\n\t\treturn false;\n\t}\n\tvar sq = ab*ab + ac*ac;\n\tvar det =\
    \ ab*ab + bc*bc;\n\treturn (sq - det < 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpe0uwj7ym.js:35:10)\n    at Object.<anonymous> (/tmp/tmpe0uwj7ym.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= ac\
    \ && bc >= ab);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp1fqy1o_o.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1fqy1o_o.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abcd = abc + bcd;\n    return ((abc >= bcd) && (abc >= abc));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp14nfolbd.js:23:10)\n    at Object.<anonymous> (/tmp/tmp14nfolbd.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    \n    if (ab > ac && ab > bc){\n\
    \        return true;\n    }\n    \n    if (ac > ab && ac > bc){\n        return\
    \ true;\n    }\n    \n    if (bc > ab && bc > ac){\n        return true;\n   \
    \ }\n    \n    return false;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpd3oge_7b.js:33:10)\n    at Object.<anonymous> (/tmp/tmpd3oge_7b.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        cb = abs(c-b);\n    return ((ab >= bc) && (ab\
    \ >= cb));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa7605b29.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpa7605b29.js:9:14)\n\
    \    at test (/tmp/tmpa7605b29.js:20:20)\n    at Object.<anonymous> (/tmp/tmpa7605b29.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det < 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpb7m5gz8h.js:22:10)\n    at Object.<anonymous> (/tmp/tmpb7m5gz8h.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return Math.abs(acb) > Math.abs(abc);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpuk2fonlx.js:23:10)\n    at Object.<anonymous> (/tmp/tmpuk2fonlx.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif(a==b){\n\t\treturn\
    \ c==b;\n\t}\n\tif(a==c){\n\t\treturn b==c;\n\t}\n\tif(b==c){\n\t\treturn a==b;\n\
    \t}\n\tvar ab = a-b;\n\tvar ac = a-c;\n\tvar bc = b-c;\n\tvar det = ab*ac - bc*bc;\n\
    \tif(det>0){\n\t\treturn false;\n\t}\n\tvar sq_det = Math.sqrt(det);\n\tvar u\
    \ = (ab*ac + bc*bc)/sq_det;\n\tvar v = (ab*bc + ac*ac)/sq_det;\n\treturn u>0 &&\
    \ v>0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpyh82cwof.js:36:10)\n    at Object.<anonymous> (/tmp/tmpyh82cwof.js:49:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b);\n\
    \    var ac = abs(a-c);\n    var bc = abs(b-c);\n    return (ab == ac && ab ==\
    \ bc);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq28tez0_.js:9\n    var ab = abs(a-b);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpq28tez0_.js:9:14)\n\
    \    at test (/tmp/tmpq28tez0_.js:20:20)\n    at Object.<anonymous> (/tmp/tmpq28tez0_.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  return ((b - a) *\
    \ (c - b) <= 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp9omxljnq.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9omxljnq.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var a2 = a1*a1;\n \
    \   var b2 = b1*b1;\n    var c2 = c1*c1;\n    var det = a1*b2 - a2*b1;\n    return\
    \ det >= 0\n        && det <= a2*c1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpiowq235f.js:26:10)\n    at Object.<anonymous> (/tmp/tmpiowq235f.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    \n    if (ab > ac && ab > bc){\n\
    \        return true;\n    }\n    else if (ac > ab && ac > bc){\n        return\
    \ true;\n    }\n    else {\n        return false;\n    }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp6r3zmcel.js:29:10)\n    at Object.<anonymous> (/tmp/tmp6r3zmcel.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\tvar bcd = bc + ab;\n\
    \treturn (abc >= bcd);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpszwz23f7.js:23:10)\n    at Object.<anonymous> (/tmp/tmpszwz23f7.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= ac\
    \ && bc >= ab) || (ab <= ac && bc <= ab);\n    return is_right_angle;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpmopjnbzv.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmopjnbzv.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det >= 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpfn8t2_ud.js:21:10)\n    at Object.<anonymous> (/tmp/tmpfn8t2_ud.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var acb = ac * bc;\n  var abc = ab *\
    \ bc;\n  return ((ab * acb) - (abc * ac)) < 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpo9b2e2pe.js:22:10)\n    at Object.<anonymous> (/tmp/tmpo9b2e2pe.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return abc > acb;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpa5gnerbc.js:22:10)\n    at Object.<anonymous> (/tmp/tmpa5gnerbc.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1\
    \ * b1 + b1 * a1 + c1 * a1) / 2);\n    return Math.abs(angle) <= Math.PI / 2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp3xl_ldjo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3xl_ldjo.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\treturn (Math.abs(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)) - Math.pow(c, 2)) <= 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp6kn7b5sc.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6kn7b5sc.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca\
    \ = b + ca;\n    var cab = ac + bc;\n    var acb = ac + bc;\n    var abca = ab\
    \ + ca;\n    var abbc = ab + bc;\n    var bcab = bc + ab;\n    var abcc = ab +\
    \ cc;\n    var acbc = ac + bc;\n    var abca = ab + ca;\n    var abbc = ab + bc;\n\
    \    var bcab = bc + ab;\n    var abcc = ab + cc;\n    var acbc = ac + bc;\n \
    \   var abca = ab + ca;\n    var abbc = ab + bc;\n    var bcab = bc + ab;\n  \
    \  var abcc = ab + cc;\n    var acbc = ac + bc;\n    var abca = ab + ca;\n   \
    \ var abbc = ab + bc;\n    var bcab = bc + ab;\n    var abcc = ab + cc;\n    var\
    \ acbc = ac + bc;\n    var abca = ab + ca;\n    var abbc = ab + bc;\n    var bcab\
    \ = bc + ab;\n    var abcc = ab + cc;\n    var acbc = ac + bc;\n    var abca =\
    \ ab + ca;\n    var abbc = ab + bc;\n    var bcab = bc + ab;\n    var abcc = ab\
    \ + cc;\n    var acbc = ac + bc;\n    var abca = ab + ca;\n    var abbc = ab +\
    \ bc;\n    var bcab = bc + ab;\n    var abcc = ab + cc;\n    var acbc = ac + bc;\n\
    \    var abca = ab + ca;\n    var abbc = ab + bc;\n    var bcab = bc + ab;\n \
    \   var abcc = ab + cc;\n    var acbc = ac + bc;\n    var abca = ab + ca;\n  \
    \  var abbc = ab + bc;\n    var bcab = bc + ab;\n    var abcc = ab + cc;\n   \
    \ var acbc = ac + bc;\n    var abca = ab + ca;\n    var abbc = ab + bc;\n    var\
    \ bcab = bc + ab;\n    var abcc = ab + cc;\n    var acbc = ac + bc;\n    var abca\
    \ = ab + ca;\n    var abbc = ab + bc;\n    var bcab\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5rkbj3bd.js:87\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        ac = abs(a-c);\n    return ((ab > bc) && (ab\
    \ > ac));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnprf9uaa.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpnprf9uaa.js:9:14)\n\
    \    at test (/tmp/tmpnprf9uaa.js:20:20)\n    at Object.<anonymous> (/tmp/tmpnprf9uaa.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1\
    \ * b1 + c1 * b1 - a1 * c1 + c1 * c1) / (2 * a * b));\n    return angle <= Math.PI/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp3kho_t2v.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3kho_t2v.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var det = ab * ac - bc * bc;\n  if(det\
    \ < 0){\n    return false;\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp0v6sggs7.js:24:10)\n    at Object.<anonymous> (/tmp/tmp0v6sggs7.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar a1 = Math.abs(a);\n\
    \tvar b1 = Math.abs(b);\n\tvar c1 = Math.abs(c);\n\tvar a2 = a1*a1;\n\tvar b2\
    \ = b1*b1;\n\tvar c2 = c1*c1;\n\tvar det = a1*b2 - a2*b1;\n\treturn (det >= 0)\
    \ && (det <= a2*c1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpaozy9gsb.js:25:10)\n    at Object.<anonymous> (/tmp/tmpaozy9gsb.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det != 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpc16jj86x.js:22:10)\n    at Object.<anonymous> (/tmp/tmpc16jj86x.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  if((b - c) > 0){\n\
    \    return ((Math.atan2(b,a) - Math.atan2(c,a)) > Math.PI/2);\n  }\n  else{\n\
    \    return ((Math.atan2(b,a) - Math.atan2(c,a)) < Math.PI/2);\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpwwi7da1m.js:23:10)\n    at Object.<anonymous> (/tmp/tmpwwi7da1m.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var abc = ab + ac;\n  var bcd = bc +\
    \ ab;\n  return abc === bcd;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp6031e117.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6031e117.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab >= 0 && bc >= 0 && ac >= 0)\
    \ || (ab <= 0 && bc <= 0 && ac <= 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpnigp4zw6.js:20:10)\n    at Object.<anonymous> (/tmp/tmpnigp4zw6.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = abs(a-b);\n\
    \tvar ac = abs(a-c);\n\tvar bc = abs(b-c);\n\treturn (ab >= ac && ab >= bc);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxeht7par.js:9\n\tvar ab = abs(a-b);\n\t         ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpxeht7par.js:9:11)\n\
    \    at test (/tmp/tmpxeht7par.js:20:20)\n    at Object.<anonymous> (/tmp/tmpxeht7par.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b);\n\
    \    var ac = abs(a-c);\n    var bc = abs(b-c);\n    return (ab == ac && ab ==\
    \ bc);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp659d5grz.js:9\n    var ab = abs(a-b);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp659d5grz.js:9:14)\n\
    \    at test (/tmp/tmp659d5grz.js:20:20)\n    at Object.<anonymous> (/tmp/tmp659d5grz.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\treturn (abc >= 0)\
    \ && (abc <= 180);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpjx7v6ebx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjx7v6ebx.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var is_right_angle = (ab > ac &&\
    \ ab > bc);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp2uuul4vr.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2uuul4vr.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - a)\
    \ * (c - b)) > 0 && ((a - b) * (c - a)) > 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpaz7y1xyu.js:17:10)\n    at Object.<anonymous> (/tmp/tmpaz7y1xyu.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(b\
    \ - a);\n    var ac = abs(c - a);\n    var bc = abs(b - c);\n    var det = ab*bc\
    \ - ac*ac;\n    if(det < 0){\n        return false;\n    }\n    var s = ac/det;\n\
    \    var t = bc/det;\n    var u = (b+c)/2;\n    var v = (b-c)/2;\n    var w =\
    \ sqrt(s*s - t*t);\n    return u*v + v*w < 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph6uv2wcx.js:9\n    var ab = abs(b - a);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmph6uv2wcx.js:9:14)\n\
    \    at test (/tmp/tmph6uv2wcx.js:29:20)\n    at Object.<anonymous> (/tmp/tmph6uv2wcx.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\tvar acab = ac * ab;\n\tvar bcac = bc *\
    \ ac;\n\tvar abac = ab * ac;\n\treturn (abac + bcac == acab);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpfxy2yzsa.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfxy2yzsa.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab == ac && ab == bc){\n    return\
    \ true;\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpv_79r77n.js:23:10)\n    at Object.<anonymous> (/tmp/tmpv_79r77n.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\tvar acb = ac * bc;\n\tvar abc = ab * bc;\n\
    \tvar acbc = acb * bc;\n\treturn (acbc >= abc && abc >= acb) || (acbc <= abc &&\
    \ abc <= acb);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpqoqtbcy1.js:24:10)\n    at Object.<anonymous> (/tmp/tmpqoqtbcy1.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var abbc = ab * bc;\n    var acbc = ac * bc;\n    var abac =\
    \ ab * ac;\n    var abacbc = abac * bc;\n    var abacbcd = abac * bc * bc;\n \
    \   return (abbc + abacbc > abacbcd && acbc > abacbcd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpwt0xd5wb.js:27:10)\n    at Object.<anonymous> (/tmp/tmpwt0xd5wb.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = c - a;\n  var bc = b - c;\n  var abc = ab + ac;\n  var bcd = bc +\
    \ ab;\n  return abc === bcd;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpq4i11vv9.js:22:10)\n    at Object.<anonymous> (/tmp/tmpq4i11vv9.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return ((abc + acb) == (ab * bc));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp60tv1z9o.js:22:10)\n    at Object.<anonymous> (/tmp/tmp60tv1z9o.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    return abc > bcd;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpmkch0eoe.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmkch0eoe.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpqw5_kfyw.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqw5_kfyw.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpk_mbh4ua.js:21:10)\n    at Object.<anonymous> (/tmp/tmpk_mbh4ua.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var abcd = abc + bcd;\n    return abcd == 0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpbciis9tb.js:23:10)\n    at Object.<anonymous> (/tmp/tmpbciis9tb.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp2n_9isg9.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2n_9isg9.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif(a==b){\n\t\treturn\
    \ c==b;\n\t}\n\tif(a==c){\n\t\treturn b==c;\n\t}\n\treturn a==b||a==c||b==c;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpyao71cpf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpyao71cpf.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    return (((b - a)\
    \ * (c - b)) - ((c - a) * (b - a))) < 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpnt4833jh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnt4833jh.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if(det > 0){\n        return true;\n    }\n    return false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpablyjwq7.js:24:10)\n    at Object.<anonymous> (/tmp/tmpablyjwq7.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab * ac > bc * ab);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp98o1ck1m.js:20:10)\n    at Object.<anonymous> (/tmp/tmp98o1ck1m.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\treturn ( ( ( a >\
    \ b ) && ( a > c ) ) || ( ( a < b ) && ( a < c ) ) || ( ( a == b ) && ( a == c\
    \ ) ) );\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp6ryepc7l.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6ryepc7l.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a\
    \ - b),\n        bc = abs(b - c),\n        ac = abs(a - c);\n    return ((ab >\
    \ bc) && (ab > ac));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpk0id2xhj.js:9\n    var ab = abs(a - b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpk0id2xhj.js:9:14)\n\
    \    at test (/tmp/tmpk0id2xhj.js:20:20)\n    at Object.<anonymous> (/tmp/tmpk0id2xhj.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var angle = Math.acos((Math.pow(b,\
    \ 2) + Math.pow(c, 2) - Math.pow(a, 2)) /\n        (2 * Math.pow(b, 2)));\n  \
    \  return angle <= Math.PI/2;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpbhc234by.js:22:10)\n    at Object.<anonymous> (/tmp/tmpbhc234by.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if (det > 0){\n        return true;\n    }\n    return false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp94j9j5jj.js:25:10)\n    at Object.<anonymous> (/tmp/tmp94j9j5jj.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a\
    \ - b),\n        bc = abs(b - c),\n        ac = abs(a - c);\n    return ((ab >\
    \ bc) && (ab > ac));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9f7tb52y.js:9\n    var ab = abs(a - b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp9f7tb52y.js:9:14)\n\
    \    at test (/tmp/tmp9f7tb52y.js:20:20)\n    at Object.<anonymous> (/tmp/tmp9f7tb52y.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    var acbc = acb * bc;\n    var abbc = abb * bc;\n    return ((abbc\
    \ > acbc && abbc > abc && abbc > ac) || (abc > acbc && abc > abbc && abc > ac)\
    \ || (acbc > abbc && acbc > abc && acbc > ac));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp87fcccfd.js:15\n    var abbc = abb * bc;\n               ^\n\n\
    ReferenceError: abb is not defined\n    at right_angle_triangle (/tmp/tmp87fcccfd.js:15:16)\n\
    \    at test (/tmp/tmp87fcccfd.js:24:20)\n    at Object.<anonymous> (/tmp/tmp87fcccfd.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var ac_bc = ac * bc;\n    var ab_bc\
    \ = ab * bc;\n    return Math.abs(ac_bc) >= Math.abs(ab_bc);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpe2h8rcsw.js:23:10)\n    at Object.<anonymous> (/tmp/tmpe2h8rcsw.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var acab = ac * ab;\n  var bcac = bc\
    \ * b * ac;\n  var abac = ab * ac;\n  return abac == bcac && abac == acab;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpks8_qqp5.js:23:10)\n    at Object.<anonymous> (/tmp/tmpks8_qqp5.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp0ra1jzq7.js:21:10)\n    at Object.<anonymous> (/tmp/tmp0ra1jzq7.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var angle = Math.acos((a*a\
    \ + b*b - c*c)/(2*a*b));\n    return angle < Math.PI/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp55keac07.js:18:10)\n    at Object.<anonymous> (/tmp/tmp55keac07.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bcd\
    \ = bc + ab;\n    var acd = ac + ab;\n    return ((abc > bcd) && (abc > acd));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpfuugp_rp.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfuugp_rp.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= ac\
    \ && bc >= ab);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpvza2fqjn.js:22:10)\n    at Object.<anonymous> (/tmp/tmpvza2fqjn.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return (ab + ac > 0 && abc > acb) || (ab + ac < 0 && abc < acb);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpieg2phpy.js:23:10)\n    at Object.<anonymous> (/tmp/tmpieg2phpy.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = c - a;\n\tvar bc = b - c;\n\treturn (ab > ac && ab > bc);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpvtl0mu_k.js:20:10)\n    at Object.<anonymous> (/tmp/tmpvtl0mu_k.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if (det < 0){\n        return false;\n    }\n    var s = (-b + Math.sqrt(det))\
    \ / (2 * a);\n    var t = (-b - Math.sqrt(det)) / (2 * a);\n    return (Math.abs(s)\
    \ == Math.abs(t)) && (Math.abs(ac) == Math.abs(bc));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpc034qitp.js:26:10)\n    at Object.<anonymous> (/tmp/tmpc034qitp.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = abs(a-b);\n\
    \  var ac = abs(a-c);\n  var bc = abs(b-c);\n  if(ab == ac && ab == bc){\n   \
    \ return true;\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx_4sf0aw.js:9\n  var ab = abs(a-b);\n           ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpx_4sf0aw.js:9:12)\n\
    \    at test (/tmp/tmpx_4sf0aw.js:23:20)\n    at Object.<anonymous> (/tmp/tmpx_4sf0aw.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tif((b - c) > 0){\n\
    \t\treturn ((Math.atan2(b, a) - Math.atan2(c, b)) > Math.PI/2);\n\t}\n\telse{\n\
    \t\treturn ((Math.atan2(b, a) - Math.atan2(c, b)) < Math.PI/2);\n\t}\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmppm4d3cyx.js:23:10)\n    at Object.<anonymous> (/tmp/tmppm4d3cyx.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(b\
    \ - a);\n    var ac = abs(c - a);\n    var bc = abs(b - c);\n    var abc = ab\
    \ + ac;\n    return ((abc >= bc) && (abc >= ab));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5l3zsl2y.js:9\n    var ab = abs(b - a);\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmp5l3zsl2y.js:9:14)\n\
    \    at test (/tmp/tmp5l3zsl2y.js:21:20)\n    at Object.<anonymous> (/tmp/tmp5l3zsl2y.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\tvar ac_bc = ac * bc;\n\tvar ab_bc = ab\
    \ * bc;\n\tvar ab_cb = ab * cb;\n\tvar ac_cb = ac * cb;\n\treturn (ab_cb == ac_bc\
    \ && ab_bc == ab_cb);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_zkf2273.js:14\n\tvar ab_cb = ab * cb;\n\t                 ^\n\n\
    ReferenceError: cb is not defined\n    at right_angle_triangle (/tmp/tmp_zkf2273.js:14:19)\n\
    \    at test (/tmp/tmp_zkf2273.js:24:20)\n    at Object.<anonymous> (/tmp/tmp_zkf2273.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var angle = Math.acos((a*a\
    \ + b*b - c*c)/(2*a*b));\n    return angle < Math.PI/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp5zlbao0b.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5zlbao0b.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = abs(a-b),\n\
    \        bc = abs(b-c),\n        ca = abs(c-a),\n        abc = ab + bc;\n    return\
    \ ((abc >= ac && abc >= bc) || (abc >= ab && abc >= bc));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpc6k2vpcl.js:9\n    var ab = abs(a-b),\n             ^\n\nReferenceError:\
    \ abs is not defined\n    at right_angle_triangle (/tmp/tmpc6k2vpcl.js:9:14)\n\
    \    at test (/tmp/tmpc6k2vpcl.js:21:20)\n    at Object.<anonymous> (/tmp/tmpc6k2vpcl.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var is_right_angle = (ab >= ac && bc\
    \ >= ac);\n  return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpo5olxhl8.js:22:10)\n    at Object.<anonymous> (/tmp/tmpo5olxhl8.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = (ab >= ac\
    \ && ab >= bc);\n    return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpeauczg94.js:22:10)\n    at Object.<anonymous> (/tmp/tmpeauczg94.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab == ac && ab == bc){\n    return\
    \ true;\n  }\n  if(ab == ac || ab == bc){\n    return false;\n  }\n  if(bc ==\
    \ ac){\n    return false;\n  }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpqh_fisdn.js:28:10)\n    at Object.<anonymous> (/tmp/tmpqh_fisdn.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var det = ab*ac - bc*bc;\n  return det\
    \ != 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpke1sxugg.js:22:10)\n    at Object.<anonymous> (/tmp/tmpke1sxugg.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    return det != 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp4zyjpjhg.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4zyjpjhg.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  return ((Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)) == Math.pow(c, 2)) && (a < b) && (b < c));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpnf91n1is.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnf91n1is.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n\treturn (Math.abs(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2)) - Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) - Math.pow(c, 2)) <= 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph5dh_wrp.js:9\n\treturn (Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2)) - Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - Math.pow(c,\
    \ 2)) <= 1);\n\t                                                             \
    \                                                                            \
    \       ^\n\nSyntaxError: Unexpected token ';'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  if(ab == ac && ab == bc){\n    return\
    \ true;\n  }\n  if(ab != ac){\n    return false;\n  }\n  if(bc != bc){\n    return\
    \ false;\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpuawigdlb.js:29:10)\n    at Object.<anonymous> (/tmp/tmpuawigdlb.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac);\n    var is_right_angle = Math.abs(ab) > Math.abs(bc);\n   \
    \ return is_right_angle;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp22wx3lix.js:22:10)\n    at Object.<anonymous> (/tmp/tmp22wx3lix.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
    \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n    var ab = a - b;\n\
    \    var ac = c - a;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc\
    \ = ab * bc;\n    return (acb > abc ? true : false);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpnkst46oa.js:22:10)\n    at Object.<anonymous> (/tmp/tmpnkst46oa.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

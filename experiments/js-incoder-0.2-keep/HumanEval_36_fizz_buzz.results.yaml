name: HumanEval_36_fizz_buzz
language: js
results:
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpexwwugzv.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpexwwugzv.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpkh11v4jo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkh11v4jo.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ -1;\n  }\n  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n    return 1;\n\
    \  }\n  if(n === 2){\n    return 2;\n  }\n  if(n % 11 === 0 && n % 13 === 0){\n\
    \    return 3;\n  }\n  if(n % 11 === 0){\n    return 4;\n  }\n  if(n % 13 ===\
    \ 0){\n    return 5;\n  }\n  if(n % 6 === 0 && n % 12 === 0){\n    return 6;\n\
    \  }\n  if(n % 6 === 0){\n    return 7;\n  }\n  if(n % 12 === 0){\n    return\
    \ 8;\n  }\n  if(n % 6 === 0 && n % 12 === 0){\n    return 9;\n  }\n  if(n % 6\
    \ === 0 && n % 12 === 0){\n    return 10;\n  }\n  if(n % 6 === 0 && n % 12 ===\
    \ 0){\n    return 11;\n  }\n  if(n % 6 === 0 && n % 12 === 0){\n    return 12;\n\
    \  }\n  return -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-1\n\nshould equal\n\n0\n    at test (/tmp/tmp1ksdbb6c.js:59:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1ksdbb6c.js:69:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp_nw8w5xh.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_nw8w5xh.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    count++;\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n\
    \    }\n    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n0\n    at test (/tmp/tmp2d196k8r.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2d196k8r.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    count += n % 11 == 0 ? 0 : 1;\n  }\n  for(var\
    \ i = n; i > 0; i /= 13){\n    count += n % 13 == 0 ? 0 : 1;\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n606\n\nshould equal\n\n0\n    at test (/tmp/tmp04p4fbqz.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp04p4fbqz.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 606,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    count += n % 11;\n    n /= 11;\n  }\n \
    \ for(var i = n; i > 0; i /= 13){\n    count += n % 13;\n    n /= 13;\n  }\n \
    \ return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n11.000000000000002\n\nshould equal\n\n0\n\
    \    at test (/tmp/tmph65gv2bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmph65gv2bu.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 11.000000000000002,\n  expected: 0,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return n%11==0 ||\
    \ n%13==0 ? n : fizz_buzz(n/11)+fizz_buzz(n/13)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return ((n%11)==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:\n\
    \  (n%11==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:0):\n\
    \  (n%11==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpevxsjs7d.js:9\n  return ((n%11)==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                 ^\n\nSyntaxError: Unexpected\
    \ token ':'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmps8q8893l.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmps8q8893l.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || i % 11 == 0 || i % 13 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n12\n\nshould equal\n\n0\n    at test (/tmp/tmp5mdd1fn5.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5mdd1fn5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    count += n % 11 == 0 || n % 13 == 0 ? 1 : 0;\n    n = Math.floor(n\
    \ / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmp3yocq7xb.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3yocq7xb.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpkhvbeu_y.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkhvbeu_y.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if(i % 11 == 0){\n      count++;\n    }\n   \
    \ if(i % 13 == 0){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n0\n    at test (/tmp/tmp5s_ic3au.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5s_ic3au.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if(i % 11 == 0){\n      count++;\n    }\n \
    \   if(i % 13 == 0){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp5tvqimw5.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5tvqimw5.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp4sp9r7ug.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4sp9r7ug.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<0){\n    return\
    \ 0;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return 2;\n\
    \  }\n  return fizz_buzz(n/10)+1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n327\n\nshould equal\n\n0\n    at test (/tmp/tmpad1j3585.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpad1j3585.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 327,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpz8bbbj1y.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz8bbbj1y.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || i % 11 == 0 || i % 13 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n12\n\nshould equal\n\n0\n    at test (/tmp/tmppy2gkdgv.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmppy2gkdgv.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    if(i % 11 == 0) count++;\n    if(i % 13\
    \ == 0) count++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpx9kwc_6u.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx9kwc_6u.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpjykap8tt.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjykap8tt.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpuuiiav2t.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuuiiav2t.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0){\n      count++;\n    }\n\
    \    if(i % 13 == 0){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n0\n    at test (/tmp/tmpayvvis3h.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpayvvis3h.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpfe32uzaj.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfe32uzaj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpx7fa0rol.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx7fa0rol.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"-fizz-buzz\";\n  if(n%13==0) return n+\"-fizz-buzz\"\
    ;\n  return n;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n50\n\nshould equal\n\n0\n    at test (/tmp/tmpue7o79u8.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpue7o79u8.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp3m9x9k66.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3m9x9k66.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || i % 11 == 0 || i % 13 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n12\n\nshould equal\n\n0\n    at test (/tmp/tmptxzh86o7.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmptxzh86o7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpxoyck96o.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxoyck96o.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmppe1ov4c2.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmppe1ov4c2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i % 11) == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpjk9fdfjy.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjk9fdfjy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpori790pp.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpori790pp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ -1;\n  }\n  if(n < 10){\n    return n;\n  }\n  if(n % 11 == 0){\n    return\
    \ n + 1;\n  }\n  if(n % 13 == 0){\n    return n + 2;\n  }\n  return n;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n50\n\nshould equal\n\n0\n    at test (/tmp/tmp0dzcbrqv.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0dzcbrqv.js:39:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"-buzz\";\n  if(n%13==0) return n+\"-buzz\";\n  return\
    \ n;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n50\n\nshould equal\n\n0\n    at test (/tmp/tmp2pvzk66t.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2pvzk66t.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp1skuzljn.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1skuzljn.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpxcmaeeyd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxcmaeeyd.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return ((n%11)==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:41:42:43:44:45:46:47:48:49:50:\n\
    \  (n%11==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:41:42:43:44:45:46:47:48:49:50:0):\n\
    \  (n%11==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6rk0j0n1.js:9\n  return ((n%11)==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:41:42:43:44:45:46:47:48:49:50:\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                 ^\n\nSyntaxError: Unexpected\
    \ token ':'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    count += n % 11 == 0 || n % 13 == 0 ? 1 : 0;\n    n = Math.floor(n\
    \ / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpiyyyvk4x.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiyyyvk4x.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpsdw1iqes.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsdw1iqes.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp68e6s_08.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp68e6s_08.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpzbg1xlio.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzbg1xlio.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpl7e8ngac.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl7e8ngac.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return 0;\n  }\n  if(n % 11 === 0 && n % 13 === 0){\n    return 2;\n  }\n\
    \  if(n % 11 === 0){\n    return 1;\n  }\n  if(n % 13 === 0){\n    return 3;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpgdz8141n.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgdz8141n.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpquctnwmu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpquctnwmu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpe_p5u522.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe_p5u522.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return n%11==0||n%13==0?n:0\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n78\n\nshould equal\n\n2\n    at test (/tmp/tmp_3o0d1pl.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_3o0d1pl.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 78,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || n % i == 11 || n % i == 13){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp0r91yw3s.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0r91yw3s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || i % 11 == 0 || i % 13 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n12\n\nshould equal\n\n0\n    at test (/tmp/tmpcbbkvkvg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcbbkvkvg.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpuwdx4wxy.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuwdx4wxy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpvh395z2u.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvh395z2u.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpnkxk4fk7.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnkxk4fk7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return ((n%11)==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:41:42:43:44:45:46:47:48:49:50:\n\
    \  (n%11==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:41:42:43:44:45:46:47:48:49:50:0):\n\
    \  (n%11==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpeozq8w6d.js:9\n  return ((n%11)==0)?(n%13==0)?(n%17==0)?(n%19==0)?(n%23==0)?(n%29==0)?(n%31==0)?(n%37==0)?(n%41==0)?(n%43==0)?(n%47==0)?(n%53==0)?(n%59==0)?(n%61==0)?(n%67==0)?(n%71==0)?(n%73==0)?(n%79==0)?(n%83==0)?(n%89==0)?(n%97==0)?1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:31:32:33:34:35:36:37:38:39:41:42:43:44:45:46:47:48:49:50:\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                 ^\n\nSyntaxError: Unexpected\
    \ token ':'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpsso2890m.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsso2890m.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpp3cqp1t2.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp3cqp1t2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return 0;\n  }\n  if(n % 11 === 0 || n % 13 === 0){\n    return 1;\n  }\n\
    \  return fizz_buzz(n / 11) + fizz_buzz(n / 13);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpfobutegi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfobutegi.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpvbvft8zg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvbvft8zg.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpuylcs_gr.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuylcs_gr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<0){\n    return\
    \ 0;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return 2;\n\
    \  }\n  return fizz_buzz(n/10)+1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n327\n\nshould equal\n\n0\n    at test (/tmp/tmp88oz5s6h.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp88oz5s6h.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 327,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpn_ku6wi8.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn_ku6wi8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"th\";\n  if(n%13==0) return n+\"rd\";\n  if(n%17==0)\
    \ return n+\"th\";\n  if(n%19==0) return n+\"th\";\n  if(n%23==0) return n+\"\
    th\";\n  if(n%29==0) return n+\"rd\";\n  if(n%31==0) return n+\"th\";\n  if(n%37==0)\
    \ return n+\"th\";\n  if(n%41==0) return n+\"th\";\n  if(n%43==0) return n+\"\
    th\";\n  if(n%47==0) return n+\"th\";\n  if(n%59==0) return n+\"rd\";\n  if(n%61==0)\
    \ return n+\"th\";\n  if(n%67==0) return n+\"th\";\n  if(n%71==0) return n+\"\
    th\";\n  if(n%73==0) return n+\"th\";\n  if(n%79==0) return n+\"rd\";\n  if(n%83==0)\
    \ return n+\"th\";\n  if(n%89==0) return n+\"th\";\n  if(n%97==0) return n+\"\
    th\";\n  return n+\"th\";\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'50th'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmpz10lck4_.js:38:10)\n    at Object.<anonymous> (/tmp/tmpz10lck4_.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '50th',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return Math.ceil(n/11)\
    \ || Math.ceil(n/13) || 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmplhxurgby.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmplhxurgby.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n === 0){\n    return 1;\n  }\n  if(n === 1){\n    return 1;\n\
    \  }\n  if(n === 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n\
    \  if(n === 4){\n    return 4;\n  }\n  if(n === 5){\n    return 5;\n  }\n  if(n\
    \ === 6){\n    return 6;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n ===\
    \ 8){\n    return 8;\n  }\n  if(n === 9){\n    return 9;\n  }\n  if(n === 10){\n\
    \    return 10;\n  }\n  if(n === 11){\n    return 11;\n  }\n  if(n === 12){\n\
    \    return 12;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n === 14){\n\
    \    return 14;\n  }\n  if(n === 15){\n    return 15;\n  }\n  if(n === 16){\n\
    \    return 16;\n  }\n  if(n === 17){\n    return 17;\n  }\n  if(n === 18){\n\
    \    return 18;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n === 20){\n\
    \    return 20;\n  }\n  if(n === 21){\n    return 21;\n  }\n  if(n === 22){\n\
    \    return 22;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n === 24){\n\
    \    return 24;\n  }\n  if(n === 25){\n    return 25;\n  }\n  if(n === 26){\n\
    \    return 26;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n === 28){\n\
    \    return 28;\n  }\n  if(n === 29){\n    return 29;\n  }\n  if(n === 30){\n\
    \    return 30;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n === 32){\n\
    \    return 32;\n  }\n  if(n === 33){\n    return 33;\n  }\n  if(n === 34){\n\
    \    return 34;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n === 36){\n\
    \    return 36;\n  }\n  if(n === 37){\n    return 37;\n  }\n  if(n === 38){\n\
    \    return 38;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n === 40){\n\
    \    return 40;\n  }\n  if(n === 41){\n    return 41;\n  }\n  if(n === 42){\n\
    \    return 42;\n  }\n  if(n === 4\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxmn72vcw.js:142\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp46tqh1pf.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp46tqh1pf.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpijazjtnk.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpijazjtnk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpttyooveu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpttyooveu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<11 || n>13){\n\
    \    return 0;\n  }\n  if(n%11==0 && n%13==0){\n    return 2;\n  }\n  if(n%11==0\
    \ && n%13!=0 || n%11!=0 && n%13==0){\n    return 3;\n  }\n  if(n%11!=0 && n%13!=0\
    \ || n%11==0 && n%13!=0){\n    return 4;\n  }\n  if(n%11!=0 && n%13==0){\n   \
    \ return 5;\n  }\n  if(n%11==0 && n%13!=0 || n%11!=0 && n%13!=0){\n    return\
    \ 6;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpbvxm_0tr.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbvxm_0tr.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpwkpx9s3c.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwkpx9s3c.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n42\n\nshould equal\n\n0\n    at test (/tmp/tmplj42780e.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplj42780e.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmpefusqjft.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpefusqjft.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    count += n % 11 == 0 || n % 13 == 0 ? 1 : 0;\n    n = Math.floor(n\
    \ / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpf2_t6txi.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf2_t6txi.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return Math.ceil(n/11)\
    \ || Math.ceil(n/13) || 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmp37il6a0j.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp37il6a0j.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmph143ndne.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmph143ndne.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmphbcz2q85.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmphbcz2q85.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpg2_3ohzx.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg2_3ohzx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpeosmej95.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeosmej95.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return ((n%11==0)&&(n%13==0))\
    \ ? 0 : ((n%11!=0)&&(n%13!=0)) ? 2 : 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n0\n    at test (/tmp/tmpt_6c5urh.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt_6c5urh.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpa530kg3m.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa530kg3m.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmph21xpl8i.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmph21xpl8i.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmprkle0k4y.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmprkle0k4y.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpy75lds8d.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy75lds8d.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpow84tfcg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpow84tfcg.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpdmd47mw8.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdmd47mw8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<=0){\n    return\
    \ 0;\n  }\n  if(n%11==0){\n    return 1;\n  }\n  if(n%13==0){\n    return 2;\n\
    \  }\n  return fizz_buzz(n/10);\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n3\n    at test (/tmp/tmpou1li0l8.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpou1li0l8.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 3,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    if(i % 11 == 0){\n      count++;\n    }\n\
    \  }\n  for(var i = n; i > 0; i /= 13){\n    if(i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpzf41hm35.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzf41hm35.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    if(i % 11 == 0){\n      count += 1;\n \
    \   }\n  }\n  for(var i = n; i > 0; i /= 13){\n    if(i % 13 == 0){\n      count\
    \ += 1;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmp2q6a4zpx.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2q6a4zpx.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0){\n      count++;\n    }\n    if(n % 13 ==\
    \ 0){\n      count++;\n    }\n    n--;\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmptd_3oa7q.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmptd_3oa7q.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 1; i < n; i++){\n    if((i % 11) == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpkhts7bzg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkhts7bzg.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 0; i <= n; i++){\n    if((i % 11 == 0 && i % 13 == 0) || (i % 11\
    \ != 0 && i % 13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n44\n\nshould equal\n\n0\n    at test (/tmp/tmp13upi858.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp13upi858.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpbvlb45tf.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbvlb45tf.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpe56myjm0.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe56myjm0.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp7ixigwq1.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7ixigwq1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return Math.ceil(n/11)\
    \ || Math.ceil(n/13) || 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmpn6e8s2lj.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn6e8s2lj.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpi0nmgacf.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi0nmgacf.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp9rwoh7ww.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9rwoh7ww.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n%11 == 0) count++;\n    if(n%13 == 0) count++;\n    n--;\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmprrwrnefo.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmprrwrnefo.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    count += n % 11;\n    n /= 11;\n  }\n \
    \ for(var i = n; i > 0; i /= 13){\n    count += n % 13;\n    n /= 13;\n  }\n \
    \ return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n11.000000000000002\n\nshould equal\n\n0\n\
    \    at test (/tmp/tmpb22dtjr4.js:26:10)\n    at Object.<anonymous> (/tmp/tmpb22dtjr4.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 11.000000000000002,\n  expected: 0,\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return 0;\n  }\n  if(n % 11 === 0 || n % 13 === 0){\n    return 1;\n  }\n\
    \  return fizz_buzz(n / 11) + fizz_buzz(n / 13);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpvurv3fip.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvurv3fip.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpgqdzijck.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgqdzijck.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((n % i) === 0){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmpswo0kzg5.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpswo0kzg5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpo6g7vboa.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo6g7vboa.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n43\n\nshould equal\n\n0\n    at test (/tmp/tmpzg6e4e9d.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzg6e4e9d.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpvlpqjynj.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvlpqjynj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp98q5woo4.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp98q5woo4.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"th\";\n  if(n%13==0) return n+\"rd\";\n  return n+\"\
    th\";\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'50th'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmp_o6uq66t.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_o6uq66t.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '50th',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpp_olrq70.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp_olrq70.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return 0;\n  }\n  if(n % 11 === 0 || n % 13 === 0){\n    return 1;\n  }\n\
    \  return fizz_buzz(n / 11) + fizz_buzz(n / 13);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpsi3m3_gj.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsi3m3_gj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmplojd7i6l.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplojd7i6l.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpcckwep3k.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcckwep3k.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp0v09qk4g.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0v09qk4g.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"th\";\n  if(n%13==0) return n+\"rd\";\n  if(n%11==0\
    \ && n%13==0) return n+\"th\";\n  if(n%11!=0 && n%13!=0) return n+\"th\";\n  if(n%11!=0\
    \ && n%13==0) return n+\"rd\";\n  if(n%11==0 && n%13!=0) return n+\"st\";\n  if(n%11==0\
    \ && n%13==0) return n+\"nd\";\n  if(n%11!=0 && n%13!=0) return n+\"nd\";\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'50th'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmpu2njr17u.js:25:10)\n    at Object.<anonymous> (/tmp/tmpu2njr17u.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '50th',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpalv6ehld.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpalv6ehld.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"th\";\n  if(n%13==0) return n+\"rd\";\n  if(n%17==0)\
    \ return n+\"st\";\n  if(n%19==0) return n+\"nd\";\n  if(n%23==0) return n+\"\
    rd\";\n  return n+\"th\";\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'50th'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmp1okfflpy.js:23:10)\n    at Object.<anonymous> (/tmp/tmp1okfflpy.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '50th',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmphhrngy36.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmphhrngy36.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpxya0r1oq.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxya0r1oq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n43\n\nshould equal\n\n0\n    at test (/tmp/tmp3ceu3ugd.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3ceu3ugd.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n < 10){\n    return n;\n  }\n  if(n < 100){\n    return n % 10\
    \ === 0 ? 0 : 1;\n  }\n  if(n < 1000){\n    return n % 10 === 0 ? 0 : 2;\n  }\n\
    \  if(n < 10000){\n    return n % 10 === 0 ? 0 : 3;\n  }\n  if(n < 100000){\n\
    \    return n % 10 === 0 ? 0 : 4;\n  }\n  if(n < 1000000){\n    return n % 10\
    \ === 0 ? 0 : 5;\n  }\n  if(n < 10000000){\n    return n % 10 === 0 ? 0 : 6;\n\
    \  }\n  if(n < 100000000){\n    return n % 10 === 0 ? 0 : 7;\n  }\n  if(n < 1000000000){\n\
    \    return n % 10 === 0 ? 0 : 8;\n  }\n  if(n < 10000000000){\n    return n %\
    \ 10 === 0 ? 0 : 9;\n  }\n  if(n < 100000000000){\n    return n % 10 === 0 ? 0\
    \ : 10;\n  }\n  if(n < 1000000000000){\n    return n % 10 === 0 ? 0 : 11;\n  }\n\
    \  if(n < 10000000000000){\n    return n % 10 === 0 ? 0 : 12;\n  }\n  if(n < 100000000000000){\n\
    \    return n % 10 === 0 ? 0 : 13;\n  }\n  if(n < 1000000000000000){\n    return\
    \ n % 10 === 0 ? 0 : 14;\n  }\n  if(n < 10000000000000000){\n    return n % 10\
    \ === 0 ? 0 : 15;\n  }\n  if(n < 100000000000000000){\n    return n % 10 === 0\
    \ ? 0 : 16;\n  }\n  if(n < 1000000000000000000){\n    return n % 10 === 0 ? 0\
    \ : 17;\n  }\n  if(n < 10000000000000000000){\n    return n % 10 === 0 ? 0 : 18;\n\
    \  }\n  if(n < 100000000000000000000){\n    return n % 10 === 0 ? 0 : 19;\n  }\n\
    \  if(n < 1000000000000000000000){\n    return n % 10 === 0 ? 0 : 20;\n  }\n \
    \ if(n < 10000000000000000000000){\n    return n % 10 === 0 ? 0 : 21;\n  }\n \
    \ if(n < 100000000000000000000000){\n    return n % 10 === 0 ? 0 : 22;\n  }\n\
    \  if(n < 1000000000000000000000000){\n    return n % 10 === 0 ? 0 : 23;\n  }\n\
    \  if(n < 10000000000000000000000000){\n    return n % 10 === 0 ? 0 : 24;\n  }\n\
    \  if(n < 100000000000000000000000000){\n    return n % 10 === 0 ? 0 : 25;\n \
    \ }\n  if(n < 1000000000000000000000000000){\n    return n % 10 === 0 ? 0 : 26;\n\
    \  }\n  if(n < 10000000000000000000000000000){\n    return n % 10 === 0 ? 0 :\
    \ 27;\n  }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbgdov3jm.js:112\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpq_3ekmc1.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq_3ekmc1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n < 11 || n % 11 === 0){\n    return 1;\n  }\n  if(n < 13 || n\
    \ % 13 === 0){\n    return 2;\n  }\n  return 3;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n0\n    at test (/tmp/tmpg021__u6.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg021__u6.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n === 0){\n    return 1;\n  }\n  if(n === 1){\n    return 1;\n\
    \  }\n  if(n === 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n\
    \  if(n === 4){\n    return 4;\n  }\n  if(n === 5){\n    return 5;\n  }\n  if(n\
    \ === 6){\n    return 6;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n ===\
    \ 8){\n    return 8;\n  }\n  if(n === 9){\n    return 9;\n  }\n  if(n === 10){\n\
    \    return 10;\n  }\n  if(n === 11){\n    return 11;\n  }\n  if(n === 12){\n\
    \    return 12;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n === 14){\n\
    \    return 14;\n  }\n  if(n === 15){\n    return 15;\n  }\n  if(n === 16){\n\
    \    return 16;\n  }\n  if(n === 17){\n    return 17;\n  }\n  if(n === 18){\n\
    \    return 18;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n === 20){\n\
    \    return 20;\n  }\n  if(n === 21){\n    return 21;\n  }\n  if(n === 22){\n\
    \    return 22;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n === 24){\n\
    \    return 24;\n  }\n  if(n === 25){\n    return 25;\n  }\n  if(n === 26){\n\
    \    return 26;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n === 28){\n\
    \    return 28;\n  }\n  if(n === 29){\n    return 29;\n  }\n  if(n === 30){\n\
    \    return 30;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n === 32){\n\
    \    return 32;\n  }\n  if(n === 33){\n    return 33;\n  }\n  if(n === 34){\n\
    \    return 34;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n === 36){\n\
    \    return 36;\n  }\n  if(n === 37){\n    return 37;\n  }\n  if(n === 38){\n\
    \    return 38;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n === 40){\n\
    \    return 40;\n  }\n  if(n === 41){\n    return 41;\n  }\n  if(n === 42){\n\
    \    return 42;\n  }\n  if(n === 4\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl25p14xu.js:142\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpbcg8apf5.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbcg8apf5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpvz38vhv8.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvz38vhv8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpzr5pks2s.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzr5pks2s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpvlj3ced2.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvlj3ced2.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp0c3lka6s.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0c3lka6s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp27tbuzwz.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp27tbuzwz.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpj7d0hcd3.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj7d0hcd3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0 && n%13==0) return n+1;\n  if(n%11==0) return n+1;\n  if(n%13==0)\
    \ return n+3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmpkismoczk.js:20:10)\n    at Object.<anonymous> (/tmp/tmpkismoczk.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp589i5_hs.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp589i5_hs.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpao1q4165.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpao1q4165.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"-buzz\";\n  if(n%13==0) return n+\"-buzz\";\n  return\
    \ n;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n50\n\nshould equal\n\n0\n    at test (/tmp/tmp1dq0k6gw.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1dq0k6gw.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n<100) return (n%11==0)?2:(n%13==0)?3:5;\n  if(n<1000) return (n%11==0)?4:(n%13==0)?5:7;\n\
    \  if(n<10000) return (n%11==0)?6:(n%13==0)?7:9;\n  if(n<100000){\n    if(n%11==0)\
    \ return 8;\n    if(n%13==0) return 9;\n    return 10;\n  }\n  if(n<1000000){\n\
    \    if(n%11==0) return 11;\n    if(n%13==0) return 12;\n    return 13;\n  }\n\
    \  if(n<10000000){\n    if(n%11==0) return 14;\n    if(n%13==0) return 15;\n \
    \   return 16;\n  }\n  if(n<100000000){\n    if(n%11==0) return 17;\n    if(n%13==0)\
    \ return 18;\n    return 19;\n  }\n  if(n<1000000000){\n    if(n%11==0) return\
    \ 20;\n    if(n%13==0) return 21;\n    return 22;\n  }\n  if(n<10000000000){\n\
    \    if(n%11==0) return 23;\n    if(n%13==0) return 24;\n    return 25;\n  }\n\
    \  if(n<100000000000){\n    if(n%11==0) return 26;\n    if(n%13==0) return 27;\n\
    \    return 28;\n  }\n  if(n<1000000000000){\n    if(n%11==0) return 29;\n   \
    \ if(n%13==0) return 30;\n    return 31;\n  }\n  if(n<10000000000000){\n    if(n%11==0)\
    \ return 32;\n    if(n%13==0) return 33;\n    return 34;\n  }\n  if(n<100000000000000){\n\
    \    if(n%11==0) return 35;\n    if(n%13==0) return 36;\n    return 37;\n  }\n\
    \  if(n<1000000000000000){\n    if(n%11==0) return 38;\n    if(n%13==0) return\
    \ 39;\n    return 40;\n  }\n  if(n<10000000000000000){\n    if(n%11==0) return\
    \ 41;\n    if(n%13==0) return 42;\n    return 43;\n  }\n  if(n<100000000000000000){\n\
    \    if(n%11==0) return 44;\n    if(n%13==0) return 45;\n    return 46;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwlpc45nv.js:92\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 1; i < n; i++){\n    if(n % i == 0 || i % 11 == 0 || i % 13 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n12\n\nshould equal\n\n0\n    at test (/tmp/tmps3v3pgn1.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmps3v3pgn1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpq2f1daoy.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq2f1daoy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return n;\n  }\n  if(n % 11 === 0 || n % 13 === 0){\n    return n;\n  }\n\
    \  if(n % 11 === 1){\n    return n + 1;\n  }\n  if(n % 13 === 1){\n    return\
    \ n + 2;\n  }\n  return n + 3;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n50\n\nshould equal\n\n0\n    at test (/tmp/tmpx4n25m4p.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx4n25m4p.js:39:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpbo110a3n.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbo110a3n.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp06w7gvjp.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp06w7gvjp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp2b6_w2v5.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2b6_w2v5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp2sztkfex.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2sztkfex.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpwcqgxi72.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwcqgxi72.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpx_yyukgo.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx_yyukgo.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmprgjdxo_k.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmprgjdxo_k.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpl_hlwqgz.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl_hlwqgz.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp9jkqzz9_.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9jkqzz9_.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    count += n % 11 == 0 || n % 13 == 0 ? 1 : 0;\n    n = Math.floor(n\
    \ / 10);\n  }\n  return count;\n}\n</code>\n<|/ a tags=javascript,fizzbuzz |>\n\
    <| c |>\nThis doesn't work for numbers greater than 100. Try `fizz_buzz(101)`\
    \ and you'll see what I mean.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I've updated the answer to account for that case.\n<|/ c |>\n<| a tags=javascript,fizzbuzz\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpj1f9zijn.js:16\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n<100) return (n%11==0&&n%13==0)?2:3;\n  if(n<1000) return (n%11==0&&n%13==0)?3:4;\n\
    \  if(n<10000) return (n%11==0&&n%13==0)?4:5;\n  if(n<100000) return (n%11==0&&n%13==0)?5:6;\n\
    \  if(n<1000000) return (n%11==0&&n%13==0)?6:7;\n  if(n<10000000) return (n%11==0&&n%13==0)?7:8;\n\
    \  if(n<100000000) return (n%11==0&&n%13==0)?8:9;\n  if(n<1000000000) return (n%11==0&&n%13==0)?9:10;\n\
    \  if(n<10000000000) return (n%11==0&&n%13==0)?10:11;\n  if(n<100000000000) return\
    \ (n%11==0&&n%13==0)?11:12;\n  if(n<1000000000000) return (n%11==0&&n%13==0)?12:13;\n\
    \  if(n<10000000000000) return (n%11==0&&n%13==0)?13:14;\n  if(n<100000000000000)\
    \ return (n%11==0&&n%13==0)?14:15;\n  if(n<1000000000000000) return (n%11==0&&n%13==0)?15:16;\n\
    \  if(n<10000000000000000) return (n%11==0&&n%13==0)?16:17;\n  if(n<100000000000000000)\
    \ return (n%11==0&&n%13==0)?17:18;\n  if(n<1000000000000000000) return (n%11==0&&n%13==0)?18:19;\n\
    \  if(n<10000000000000000000) return (n%11==0&&n%13==0)?19:20;\n  if(n<100000000000000000000)\
    \ return (n%11==0&&n%13==0)?20:21;\n  if(n<1000000000000000000000) return (n%11==0&&n%13==0)?21:22;\n\
    \  if(n<10000000000000000000000) return (n%11==0&&n%13==0)?22:23;\n  if(n<100000000000000000000000)\
    \ return (n%11==0&&n%13==0)?23:24;\n  if(n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpegxn5c97.js:33\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpkgn0z4g5.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkgn0z4g5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpe5y9ynnu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe5y9ynnu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0 && n%13==0) return n+\"\";\n  if(n%11==0) return n+\"11\";\n  if(n%13==0)\
    \ return n+\"13\";\n  return n+\"7\";\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'507'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmpox4y0kg7.js:20:10)\n    at Object.<anonymous> (/tmp/tmpox4y0kg7.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '507',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpndizodnh.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpndizodnh.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0){\n      count++;\n    }\n\
    \    if(i % 13 == 0){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n0\n    at test (/tmp/tmpocnxjlgd.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpocnxjlgd.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    if(i % 11 == 0){\n      count++;\n    }\n\
    \  }\n  for(var i = n; i > 0; i /= 13){\n    if(i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpx3_gyk_p.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx3_gyk_p.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n === 0){\n    return 1;\n  }\n  if(n === 1){\n    return 1;\n\
    \  }\n  if(n === 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n\
    \  if(n === 4){\n    return 4;\n  }\n  if(n === 5){\n    return 5;\n  }\n  if(n\
    \ === 6){\n    return 6;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n ===\
    \ 8){\n    return 8;\n  }\n  if(n === 9){\n    return 9;\n  }\n  if(n === 10){\n\
    \    return 10;\n  }\n  if(n === 11){\n    return 11;\n  }\n  if(n === 12){\n\
    \    return 12;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n === 14){\n\
    \    return 14;\n  }\n  if(n === 15){\n    return 15;\n  }\n  if(n === 16){\n\
    \    return 16;\n  }\n  if(n === 17){\n    return 17;\n  }\n  if(n === 18){\n\
    \    return 18;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n === 20){\n\
    \    return 20;\n  }\n  if(n === 21){\n    return 21;\n  }\n  if(n === 22){\n\
    \    return 22;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n === 24){\n\
    \    return 24;\n  }\n  if(n === 25){\n    return 25;\n  }\n  if(n === 26){\n\
    \    return 26;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n === 28){\n\
    \    return 28;\n  }\n  if(n === 29){\n    return 29;\n  }\n  if(n === 30){\n\
    \    return 30;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n === 32){\n\
    \    return 32;\n  }\n  if(n === 33){\n    return 33;\n  }\n  if(n === 34){\n\
    \    return 34;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n === 36){\n\
    \    return 36;\n  }\n  if(n === 37){\n    return 37;\n  }\n  if(n === 38){\n\
    \    return 38;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n === 40){\n\
    \    return 40;\n  }\n  if(n === 41){\n    return 41;\n  }\n  if(n === 42){\n\
    \    return 42;\n  }\n  if(n === 4\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm3qr0kcz.js:142\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmptovfhrcc.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmptovfhrcc.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0\
    \ && i%13 != 0) || (i%11 != 0 && i%13 == 0)){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmprt_n9913.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmprt_n9913.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpgvcw5t8b.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgvcw5t8b.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpwej9iyxw.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwej9iyxw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n43\n\nshould equal\n\n0\n    at test (/tmp/tmpxc4_550x.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxc4_550x.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return 0;\n  }\n  if(n % 11 === 0 && n % 13 === 0){\n    return 2;\n  }\n\
    \  if(n % 11 === 0 && n % 13 === 1){\n    return 3;\n  }\n  if(n % 11 === 1 &&\
    \ n % 13 === 0){\n    return 4;\n  }\n  if(n % 11 === 1 && n % 13 === 1){\n  \
    \  return 5;\n  }\n  if(n % 11 === 2 && n % 13 === 0){\n    return 6;\n  }\n \
    \ if(n % 11 === 2 && n % 13 === 1){\n    return 7;\n  }\n  if(n % 11 === 3 &&\
    \ n % 13 === 0){\n    return 8;\n  }\n  if(n % 11 === 3 && n % 13 === 1){\n  \
    \  return 9;\n  }\n  if(n % 11 === 4 && n % 13 === 0){\n    return 10;\n  }\n\
    \  if(n % 11 === 4 && n % 13 === 1){\n    return 11;\n  }\n  if(n % 11 === 5 &&\
    \ n % 13 === 0){\n    return 12;\n  }\n  if(n % 11 === 5 && n % 13 === 1){\n \
    \   return 13;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmplhvlxhr5.js:56:10)\n\
    \    at Object.<anonymous> (/tmp/tmplhvlxhr5.js:65:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpa6fahs0t.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa6fahs0t.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpt14edn01.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt14edn01.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0\
    \ && i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n44\n\nshould equal\n\n0\n    at test (/tmp/tmpwo154czf.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwo154czf.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 44,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 1; i <= n; i++){\n    if((i%11 == 0 || i%13 == 0) && i%7 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpihq9db44.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpihq9db44.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpx_9j0870.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx_9j0870.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpy75ooys7.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy75ooys7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp4ysb85mj.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4ysb85mj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp4zwi_l00.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4zwi_l00.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"th\";\n  if(n%13==0) return n+\"rd\";\n  return n+\"\
    th\";\n}\n</code>\n<|/ a tags=javascript,fizzbuzz |>\n<| a tags=javascript,fizzbuzz\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7br0e_po.js:14\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || i % 11 == 0 || i % 13 == 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n12\n\nshould equal\n\n0\n    at test (/tmp/tmptfwnin43.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmptfwnin43.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpg4c7xdc7.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg4c7xdc7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 == 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmp_3l2v2vo.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_3l2v2vo.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 && i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp8r7pi1li.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8r7pi1li.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 10) return\
    \ n;\n  if(n % 11 === 0) return n + \" Fizz Buzz\";\n  if(n % 13 === 0) return\
    \ n + \" Fizz\";\n  return n + \" Buzz\";\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'50 Buzz'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmp16alf4pe.js:20:10)\n    at Object.<anonymous> (/tmp/tmp16alf4pe.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '50 Buzz',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0 && i%13 == 0) || (i%11 != 0 &&\
    \ i%13 != 0)){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n43\n\nshould equal\n\n0\n    at test (/tmp/tmp7c3f178g.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7c3f178g.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 11 || n > 13){\n\
    \    return 0;\n  }\n  if(n % 11 === 0 && n % 13 === 0){\n    return 2;\n  }\n\
    \  if(n % 11 === 0){\n    return 1;\n  }\n  if(n % 13 === 0){\n    return 3;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmps4ykd3qb.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmps4ykd3qb.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    count += n % 11 == 0 ? 0 : 1;\n  }\n  for(var\
    \ i = n; i > 0; i /= 13){\n    count += n % 13 == 0 ? 0 : 1;\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n606\n\nshould equal\n\n0\n    at test (/tmp/tmpn2ksnjdc.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn2ksnjdc.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 606,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp71pwpk90.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp71pwpk90.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp3ohcw6w2.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3ohcw6w2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if(n % i == 0 || n % i == 11 || n % i == 13){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpemzv43n7.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpemzv43n7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    if(i % 11 == 0) count++;\n    if(i % 13\
    \ == 0) count++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmphqmu2htc.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmphqmu2htc.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpt0t_mjh4.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt0t_mjh4.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpb9u68p9n.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb9u68p9n.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmp7_z5ox8j.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7_z5ox8j.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n    return 1;\n\
    \  }\n  if(n === 2){\n    return 2;\n  }\n  if(n === 3){\n    return 3;\n  }\n\
    \  if(n === 4){\n    return 4;\n  }\n  if(n === 5){\n    return 5;\n  }\n  if(n\
    \ === 6){\n    return 6;\n  }\n  if(n === 7){\n    return 7;\n  }\n  if(n ===\
    \ 8){\n    return 8;\n  }\n  if(n === 9){\n    return 9;\n  }\n  if(n === 10){\n\
    \    return 10;\n  }\n  if(n === 11){\n    return 11;\n  }\n  if(n === 12){\n\
    \    return 12;\n  }\n  if(n === 13){\n    return 13;\n  }\n  if(n === 14){\n\
    \    return 14;\n  }\n  if(n === 15){\n    return 15;\n  }\n  if(n === 16){\n\
    \    return 16;\n  }\n  if(n === 17){\n    return 17;\n  }\n  if(n === 18){\n\
    \    return 18;\n  }\n  if(n === 19){\n    return 19;\n  }\n  if(n === 20){\n\
    \    return 20;\n  }\n  if(n === 21){\n    return 21;\n  }\n  if(n === 22){\n\
    \    return 22;\n  }\n  if(n === 23){\n    return 23;\n  }\n  if(n === 24){\n\
    \    return 24;\n  }\n  if(n === 25){\n    return 25;\n  }\n  if(n === 26){\n\
    \    return 26;\n  }\n  if(n === 27){\n    return 27;\n  }\n  if(n === 28){\n\
    \    return 28;\n  }\n  if(n === 29){\n    return 29;\n  }\n  if(n === 30){\n\
    \    return 30;\n  }\n  if(n === 31){\n    return 31;\n  }\n  if(n === 32){\n\
    \    return 32;\n  }\n  if(n === 33){\n    return 33;\n  }\n  if(n === 34){\n\
    \    return 34;\n  }\n  if(n === 35){\n    return 35;\n  }\n  if(n === 36){\n\
    \    return 36;\n  }\n  if(n === 37){\n    return 37;\n  }\n  if(n === 38){\n\
    \    return 38;\n  }\n  if(n === 39){\n    return 39;\n  }\n  if(n === 40){\n\
    \    return 40;\n  }\n  if(n === 41){\n    return 41;\n  }\n  if(n === 42){\n\
    \    return 42;\n  }\n  if(n === 43)\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpt3ty409c.js:142\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i--){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpfr063z2j.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfr063z2j.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmphzujsk75.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmphzujsk75.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  let count = 0;\n \
    \ for(let i = 0; i <= n; i++){\n    if((i % 11 == 0 || i % 13 == 0) && i % 11\
    \ != 0 && i % 13 != 0){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n2\n    at test (/tmp/tmpibvgupak.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpibvgupak.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return ((n%11)==0)?(n%13==0)?0:2:((n%11)==0)?(n%13==0)?1:3:((n%11)==0)?(n%13==0)?2:3:((n%11)==0)?(n%13==0)?3:4:((n%11)==0)?(n%13==0)?4:5:((n%11)==0)?(n%13==0)?5:6:((n%11)==0)?(n%13==0)?6:7:((n%11)==0)?(n%13==0)?7:8:((n%11)==0)?(n%13==0)?8:9:((n%11)==0)?(n%13==0)?9:10:((n%11)==0)?(n%13==0)?10:11:((n%11)==0)?(n%13==0)?11:12:((n%11)==0)?(n%13==0)?12:13:((n%11)==0)?(n%13==0)?13:14:((n%11)==0)?(n%13==0)?14:15:((n%11)==0)?(n%13==0)?15:16:((n%11)==0)?(n%13==0)?16:17:((n%11)==0)?(n%13==0)?17:18:((n%11)==0)?(n%13==0)?18:19:((n%11)==0)?(n%13==0)?19:20:((n%11)==0)?(n%13==0)?20:21:((n%11)==0)?(n%13==0)?21:22:((n%11)==0)?(n%13==0)?22:23:((n%11)==0)?(n%13==0)?23:24:((n%11)==0)?(n%13==0)?24:25:((n%11)==0)?(n%13==0)?25:26:((n%11)==0)?(n%13==0)?26:27:((n%11)==0)?(n%13==0)?27:28:((n%11)==0)?(n%13==0)?28:29:((n%11)==0)?(n%13==0)?29:30:((n%11)==0)?(n%13==0)?30:31:((n%11)==0)?(n%13==0)?31:32:((n%11)==0)?(n%13==0)?32:33:((\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn_fc9sod.js:10\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmp9ix0qt9c.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9ix0qt9c.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpl9s0syjt.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9s0syjt.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmper0kfj3g.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmper0kfj3g.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i<n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpuqolvdow.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuqolvdow.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  return Math.ceil(n/11)\
    \ || Math.ceil(n/13) || 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n0\n    at test (/tmp/tmp2eqdeytc.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2eqdeytc.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    if(n % 11 == 0 || n % 13 == 0){\n      count++;\n    }\n\
    \    n = Math.floor(n / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpblhnnkw8.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpblhnnkw8.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n < 0){\n    return\
    \ 0;\n  }\n  if(n < 11 || n > 13){\n    return 1;\n  }\n  if(n % 11 === 0){\n\
    \    return fizz_buzz(n / 11);\n  }\n  if(n % 13 === 0){\n    return fizz_buzz(n\
    \ / 13);\n  }\n  return 2;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpm4smj6dn.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm4smj6dn.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  if(n<10) return n;\n\
    \  if(n%11==0) return n+\"th\";\n  if(n%13==0) return n+\"rd\";\n  if(n%11==0\
    \ && n%13==0) return n+\"th\";\n  if(n%11!=0 && n%13!=0) return n+\"th\";\n  if(n%11!=0\
    \ && n%13==0) return n+\"rd\";\n  if(n%11==0 && n%13!=0) return n+\"st\";\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'50th'\n\nshould equal\n\n0\n    at test\
    \ (/tmp/tmp3_t326bc.js:23:10)\n    at Object.<anonymous> (/tmp/tmp3_t326bc.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '50th',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if((i % 11 == 0) || (i % 13 == 0)){\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmpkyuttgov.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkyuttgov.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = n; i > 0; i /= 11){\n    if(i % 11 == 0){\n      count += 1;\n \
    \   }\n  }\n  for(var i = n; i > 0; i /= 13){\n    if(i % 13 == 0){\n      count\
    \ += 1;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmpww1ozklp.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpww1ozklp.js:38:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ while(n > 0){\n    count += n % 11 == 0 || n % 13 == 0 ? 1 : 0;\n    n = Math.floor(n\
    \ / 10);\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n2\n    at test (/tmp/tmp4wckgopu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4wckgopu.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 0; i <= n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n0\n    at test (/tmp/tmppnan2n6g.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmppnan2n6g.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
    // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n){\n  var count = 0;\n \
    \ for(var i = 1; i < n; i++){\n    if((i%11 == 0) || (i%13 == 0)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n0\n    at test (/tmp/tmpv4ekpvj_.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv4ekpvj_.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

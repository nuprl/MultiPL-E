name: HumanEval_59_largest_prime_factor
language: js
prompt: "//Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  // >>> largest_prime_factor(13195)\n// 29\n// >>> largest_prime_factor(2048)\n//\
  \ 2\nfunction largest_prime_factor(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_prime_factor;\n  assert.deepEqual(candidate(15),5);\n  assert.deepEqual(candidate(27),3);\n\
  \  assert.deepEqual(candidate(63),7);\n  assert.deepEqual(candidate(330),11);\n\
  \  assert.deepEqual(candidate(13195),29);\n}\n\ntest();"
completions: ["  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n \
    \   return 1;\n  }\n  var i=2\n  while(i*i<n){\n    i++\n  }\n  return i\n}\n",
  "    var i = 2;\n    while(true){\n        if(n % i == 0){\n            return i;\n\
    \        }\n        i += 2;\n    }\n}\n", "  if(n<=1){\n    return 1;\n  }\n \
    \ for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n%i===0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n\
    \  while(true){\n    if(s%2==0){\n      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n\
    \      break;\n    }\n    s=s/2;\n  }\n  return i;\n}\n", "  var factor = 2;\n\
    \  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "  var\
    \ factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  factors.sort(function(a, b){\n    return b-a;\n  });\n  return\
    \ factors[factors.length-1];\n}\n", "    var i = 2;\n    while(i < n){\n     \
    \   if(n % i == 0){\n            n = n / i;\n        }\n        i++;\n    }\n\
    \    return n;\n}\n", "    var i = 2;\n    while(true){\n        if(n % i == 0){\n\
    \            n = n / i;\n            i = 2;\n        }else{\n            i++;\n\
    \        }\n        if(i > n)\n            break;\n    }\n    return i;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n%i==0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "    var factors = [];\n    for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \        }\n    }\n    return factors.length ? Math.max.apply(null, factors) :\
    \ -1;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n  while(i*i<n){\n \
    \   i++;\n  }\n  if(i==2){\n    return i;\n  }\n  if(i==3){\n    return i;\n \
    \ }\n  var j=2;\n  while(j*j<=n){\n    j++;\n  }\n  return j;\n}\n", "    var\
    \ i = 2;\n    while(true){\n        if(n % i == 0){\n            return i;\n \
    \       }\n        i += 2;\n    }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "    var factors = [];\n    for(var i = 2; i < n; i++){\n\
    \        var prime = true;\n        for(var j = 2; j < i; j++){\n            if(i%j\
    \ == 0){\n                prime = false;\n                break;\n           \
    \ }\n        }\n        if(prime) factors.push(i);\n    }\n    return factors[factors.length-1];\n\
    }\n</code>\n<|/ a tags=primes,javascript,algorithm |>\n<| c |>\nThis doesn't seem\
    \ to work for all numbers. For example, it returns `2` for `4`.\n<|/ c |>\n<|\
    \ c |>\nIt works for me on Chrome Version 39.0.2171.95 (64-bit) on Windows 7.\
    \ Maybe your browser doesn't support the ES6 syntax?\n<|/ c |>\n<| c |>\nIt works\
    \ for me on Chrome Version 39.0.2171.95 (64-bit) on Windows 7. Maybe your browser\
    \ doesn't support the ES6 syntax?\n<|/ c |>\n<| c |>\nI tested it on Chrome Version\
    \ 39.0.2171.95 (64-bit) on Windows 7. Maybe your browser doesn't support the ES6\
    \ syntax?\n<|/ c |>\n<| c |>\nI tested it on Chrome Version 39.0.2171.95 (64-bit)\
    \ on Windows 7. Maybe your browser doesn't support the ES6 syntax?\n<|/ c |>\n\
    <| a tags=primes,javascript,algorithm |>\n<code>", "    var i = 2;\n    while(true){\n\
    \        if(n % i == 0){\n            return i;\n        }\n        i++;\n   \
    \ }\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i\
    \ == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  var factor = 2;\n  while(n%factor !== 0){\n    factor++;\n  }\n  return\
    \ factor;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor == 0){\n\
    \      n = n/factor;\n      factor++;\n    }\n    else{\n      factor++;\n   \
    \ }\n  }\n  return factor;\n}\n", "  var factors = [];\n  for(var i = 2; i <=\
    \ n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return\
    \ factors[factors.length-1];\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n\
    \ % factor === 0){\n      n = n/factor;\n      factor++;\n    }\n    else{\n \
    \     factor++;\n    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n  while(m*m<=n){\n    p=primes[i];\n \
    \   if(p<=m){\n      i++;\n    }else{\n      i--;\n    }\n    m=Math.sqrt(n);\n\
    \  }\n  return primes[i];\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var j=Math.ceil(i/2);\n    if(j>n){\n      return i;\n    }\n    if(j%2==0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n\
    \  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n\
    \    if(s%2==0){\n      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n\
    \    }\n    s=s/2;\n  }\n  return i;\n}\n", "    var i = 2;\n    while(true){\n\
    \        if(n % i == 0){\n            n = n/i;\n        }else{\n            return\
    \ i;\n        }\n        i++;\n    }\n}\n", "  if(n == 1) return 2;\n  if(n ==\
    \ 2) return 3;\n  if(n%2 == 0) return 2;\n  for(var i = 5; i*i <= n; i += 6){\n\
    \    if(n % i == 0) return i;\n  }\n  return n;\n}\n", "  if(n == 1) return 2;\n\
    \  if(n == 2) return 3;\n  if(n%2 == 0) return 2;\n  var max_factor = 2;\n  var\
    \ max_factor_index = 0;\n  for(var i = 2; i < n; i++){\n    var new_max_factor\
    \ = 2;\n    for(var j = max_factor; j > 1; j--){\n      if(n % i == 0){\n    \
    \    new_max_factor = j;\n        break;\n      }\n    }\n    if(new_max_factor\
    \ > max_factor){\n      max_factor = new_max_factor;\n      max_factor_index =\
    \ i;\n    }\n  }\n  return max_factor_index;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return\
    \ n;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n); i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n        }\n    }\n   \
    \ return factors.length ? Math.max.apply(null, factors) : -1;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var d=n%i\n    if(d===0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n\
    \  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,p,m=n;\n\
    \  while(true){\n    p = m%i;\n    if(!(p<=1)&&!(p%2==0)){\n      m=p;\n    }\n\
    \    i++;\n  }\n  return m;\n}", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n\
    \  while(i<s){\n    if(s%i==0){\n      s=s/i;\n      break;\n    }\n    i++;\n\
    \  }\n  return s;\n}\n", "    var factors = [];\n    for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n        if(n % i == 0){\n            factors.push(i);\n            while(n\
    \ % i == 0){\n                n /= i;\n            }\n        }\n    }\n    return\
    \ factors.length ? factors[factors.length - 1] : null;\n}\n", "  var factors =\
    \ [];\n  for(var i = 2; i < n; i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var d=n%i; \n    if(d==0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i\
    \ <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return\
    \ factors[factors.length-1];\n}\n", "  var factors = [];\n  for(var i = 2; i <\
    \ n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  factors.sort(function(a,\
    \ b){\n    return b-a;\n  });\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n    }\n  \
    \  s=s/2;\n  }\n  return i;\n}", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n\
    \  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<2)return 2;\n  if(n==2)return 1;\n  var d=Math.sqrt(n);\n  if(d%2==0)return\
    \ 2;\n  if(d%5==0)return 5;\n  if(d%7==0)return 7;\n  if(d%11==0)return 11;\n\
    \  if(d%13==0)return 13;\n  if(d%17==0)return 17;\n  if(d%19==0)return 19;\n \
    \ if(d%23==0)return 23;\n  if(d%29==0)return 29;\n  if(d%31==0)return 31;\n  if(d%37==0)return\
    \ 37;\n  if(d%41==0)return 41;\n  if(d%43==0)return 43;\n  if(d%47==0)return 47;\n\
    \  if(d%53==0)return 53;\n  if(d%59==0)return 59;\n  if(d%61==0)return 61;\n \
    \ if(d%67==0)return 67;\n  if(d%71)return 71;\n  if(d%73)return 73;\n  if(d%79)return\
    \ 79;\n  if(d%83)return 83;\n  if(d%89)return 89;\n  if(d%97)return 97;\n  if(d%101)return\
    \ 101;\n  if(d%103)return 103;\n  if(d%107)return 107;\n  if(d%109)return 109;\n\
    \  if(d%113)return 113;\n  if(d%117)return 117;\n  if(d%121)return 121;\n  if(d%127)return\
    \ 127;\n  if(d%131)return 131;\n  if(d%137)return 137;\n  if(d%143)return 143;\n\
    \  if(d%147)return 147;\n  if(d%151)return 151;\n  if(d%157)return 157;\n  if(d%163)return\
    \ 163;\n  if(d%167)return 167;\n  if(d%173)return 173;\n  if(d%177)return 177;\n\
    \  if(d%181)return 181;\n  if(d%183)return 183;\n  if(d%185)return 185;\n  if(d%191)return\
    \ 191;\n  if(d%193)return 193;\n  if(d%195)return 19", "  var factor = 2;\n  while(n%factor\
    \ !== 0){\n    factor++;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n\
    \  while(true){\n    if(s%2==0){\n      if(s==2){\n        return 2;\n      }\n\
    \      i=i*2+1;\n      s=s/2;\n    }else{\n      i=i*2+3;\n      s=s/2;\n    }\n\
    \    if(i==n){\n      return s;\n    }\n  }\n}\n", "  var factor = 2;\n  while(n\
    \ > 1){\n    if(n % factor === 0){\n      n = n/factor;\n    } else {\n      factor++;\n\
    \    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    var m = Math.sqrt(n);\n    if(n % i == 0){\n      return\
    \ i;\n    }\n    if(m % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  var factor =\
    \ 2;\n  while(n%factor == 0){\n    factor += 1;\n  }\n  return factor;\n}\n",
  "    var factor = 2;\n    while(n > 1){\n        if(n % factor == 0){\n        \
    \    n = n/factor;\n        }\n        else{\n            factor = factor * 2;\n\
    \        }\n    }\n    return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n\
    \  var i=2,s=n;\n  while(i<s){\n    if(n % i == 0){\n      s = n/i;\n      break;\n\
    \    }\n    i++;\n  }\n  return s;\n}\n", "  if(n<=1){\n    return 1;\n  }\n \
    \ for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n\
    \    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= n;\
    \ i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  factors.sort(function(a,\
    \ b){\n    return b-a;\n  });\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n\
    \    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  var factor = 2;\n  while(n%factor !== 0){\n    factor++;\n  }\n  return\
    \ factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      s=s/2;\n      i++;\n    }else{\n      break;\n    }\n  }\n  return i;\n\
    }", "    var factors = [];\n    for(var i = 2; i < n; i++){\n        var prime\
    \ = true;\n        for(var j = 2; j < i; j++){\n            if(n % j == 0){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if(prime){\n            factors.push(i);\n        }\n    }\n  \
    \  return factors[factors.length - 1];\n}\n</code>\n<|/ a tags=primes,javascript,algorithm\
    \ |>\n<| c |>\nThis doesn't work. `largest_prime_factor(13195)` returns `29` but\
    \ should be `3`.\n<|/ c |>\n<| c |>\nYes, I forgot about that case. Fixed now.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. `largest_prime_factor(13195)` returns `29`\
    \ but should be `3`.\n<|/ c |>\n<| c |>\nYes, I forgot about that case. Fixed\
    \ now.\n<|/ c |>\n<| c |>\nThis doesn't work. `largest_prime_factor(13195)` returns\
    \ `29` but should be `3`.\n<|/ c |>\n<| a tags=primes,javascript,algorithm |>\n\
    <code>", "  var factors = [];\n  for(var i = 2; i < n; i++){\n    if(n % i ==\
    \ 0){\n      factors.push(i);\n    }\n  }\n  return factors.length ? Math.max.apply(null,\
    \ factors) : -1;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var j=Math.floor(i/2);\n    if(j+i*j>n){\n      continue;\n    }\n    if(j+i*j==n){\n\
    \      return j;\n    }\n  }\n  return 1;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor\
    \ == 0){\n      n = n/factor;\n      factor++;\n    }\n    else{\n      factor++;\n\
    \    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      s=s/2;\n\
    \      i++;\n    }else{\n      break;\n    }\n  }\n  return i;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  var i=2;\n  while(i*i<n){\n    i++;\n  }\n  return i;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n  while(m*m<=n){\n\
    \    p=primes[i];\n    if(p<=m){\n      i++;\n    }else{\n      i--;\n    }\n\
    \    m=Math.sqrt(n);\n  }\n  return primes[i];\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    var d=n%i; \n    if(d==0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  var factor = 2;\n  while(n > 1){\n    if(n % factor\
    \ == 0){\n      n = n/factor;\n    }else{\n      factor++;\n    }\n  }\n  return\
    \ factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n\
    \ % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n \
    \   return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n  while(i<m){\n    p=Math.floor(n/i);\n\
    \    if(n%i==0){\n      return i;\n    }\n    i=i+1;\n  }\n  return m;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      i=i*2+1;\n      s=s/2;\n      continue;\n    }\n    if(s%3==0){\n     \
    \ i=i*3+1;\n      s=s/3;\n      continue;\n    }\n    if(s%5==0){\n      i=i*5+1;\n\
    \      s=s/5;\n      continue;\n    }\n    return i;\n  }\n}\n", "  var factor\
    \ = 2;\n  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n  while(i*i<n){\n    i++;\n  }\n \
    \ if(n%i==0){\n    return i;\n  }\n  else{\n    return largest_prime_factor(n/i);\n\
    \  }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,\n      m=Math.sqrt(n);\n\
    \  while(i<m){\n    if(n % i == 0){\n      i++;\n    }else{\n      n = n/i;\n\
    \    }\n  }\n  return n;\n}", "  var factor = 2;\n  while(n%factor !== 0){\n \
    \   factor += 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n \
    \ }\n  for(var i=2;i*i<=n;i++){\n    var d=n%i\n    if(d==0){\n      return i;\n\
    \    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n\
    \  while(true){\n    if(s%2==0){\n      if(s%(i++)==0){\n        return i;\n \
    \     }\n    }\n    else if(i==3){\n      return s;\n    }\n    else{\n      i+=2;\n\
    \      s+=i;\n    }\n  }\n}", "  var factors = [];\n  for(var i = 2; i <= Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  factors.sort(function(a,\
    \ b){\n    return b-a;\n  });\n  return factors[factors.length-1];\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  var i=2,p,m=n;\n  while(m%2==0){\n    m=m/2;\n    i++;\n\
    \  }\n  p=2;\n  while(p<m){\n    if(m%p==0){\n      p=p*2;\n    }\n    i++;\n\
    \  }\n  return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2\n  while(i*i<n){\n    i++\n  }\n  if(n%i==0){\n\
    \    return i;\n  }\n  if(i>2){\n    return i;\n  }\n  return largest_prime_factor(n/i);\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  var factor\
    \ = 2;\n  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n",
  "  var factor = 2;\n  while(n%factor == 0){\n    factor += 1;\n  }\n  return factor;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var d=n%i\n    if(d!==0){\n\
    \      return d;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i*i<=n;i++){\n    var m=Math.pow(i, n);\n    if(m%1==0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(true){\n\
    \        if(n % i == 0){\n            return i;\n        }\n        i += 2;\n\
    \    }\n}\n", "    var factors = [];\n    for(var i = 2; i <= n; i++){\n     \
    \   if(n % i == 0){\n            factors.push(i);\n            while(n % i ==\
    \ 0){\n                n /= i;\n            }\n        }\n    }\n    return factors.length\
    \ ? factors[factors.length - 1] : null;\n}\n", "  if(n<=1){\n    return 1;\n \
    \ }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    var d=n%i\n    if(d==0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var j=Math.floor(i/2);\n    if(j>0 && i%j==0){\n      return j;\n    }\n\
    \  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n%i===0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "    var factors = [];\n    for(var\
    \ i = 2; i <= n; i++){\n        if(n % i == 0){\n            factors.push(i);\n\
    \        }\n    }\n    return factors[factors.length - 1];\n}\n", "  var factor\
    \ = 2;\n  while(n%factor == 0){\n    factor += 1;\n  }\n  return factor;\n}\n",
  "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n    \
    \  factors.push(i);\n    }\n  }\n  return factors.length ? Math.max.apply(null,\
    \ factors) : -1;\n}\n", "    var i = 2;\n    while(true){\n        if(n % i ==\
    \ 0){\n            return i;\n        }\n        i++;\n    }\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n%i==0){\n  \
    \    return i;\n    }\n  }\n  return n;\n}\n", "  if(n == 1) return 2;\n  if(n\
    \ == 2) return 3;\n  var max_num = Math.sqrt(n);\n  var max_factor = Math.floor(max_num);\n\
    \  for(var i = max_factor; i > 2; i--){\n    if(n%i == 0){\n      max_num = max_num\
    \ / i;\n      max_factor = Math.floor(max_num);\n      break;\n    }\n  }\n  return\
    \ max_factor;\n}\n", "  if(n<2){\n    return 1;\n  }\n  for(var i=2;i*i<n;i++){\n\
    \    var m = Math.sqrt(n);\n    if(n % i == 0){\n      n = n/i;\n      break;\n\
    \    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n\
    \  while(true){\n    if(s%2==0){\n      return s;\n    }\n    i=i*2+1;\n    if(s>=n){\n\
    \      break;\n    }\n    s=s/2;\n  }\n  return i;\n}", "  if(n<=1){\n    return\
    \ 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      i=i*2+1;\n \
    \     s=s/2;\n    }else{\n      i=i*2+3;\n      s=s/2;\n    }\n    if(i==n){\n\
    \      return s;\n    }\n  }\n}\n", "    var i = 2;\n    while(true){\n      \
    \  if(n % i == 0){\n            n = n/i;\n        }\n        else{\n         \
    \   i++;\n        }\n        if(n > 1){\n            break;\n        }\n    }\n\
    \    return i;\n}\n", "    var factor = 2;\n    while(n > 1){\n        if(n %\
    \ factor === 0){\n            n = n/factor;\n        }else{\n            factor++;\n\
    \        }\n    }\n    return factor;\n}\n</code>\n<|/ a tags=primes,javascript,algorithm\
    \ |>\n<| c |>\nThis doesn't work for `largest_prime_factor(13195)` which returns\
    \ `29` instead of `3`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing\
    \ it out\n<|/ c |>\n<| c |>\nThis doesn't work for `largest_prime_factor(13195)`\
    \ which returns `29` instead of `3`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks\
    \ for pointing it out\n<|/ c |>\n<| c |>\nThis doesn't work for `largest_prime_factor(13195)`\
    \ which returns `29` instead of `3`.\n<|/ c |>\n<| a dscore=2 |>\n<code>", " \
    \   var i = 2;\n    while(true){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i++;\n    }\n}\n", "  var factor = 2;\n  while(n > 1){\n\
    \    if(n % factor == 0){\n      n = n/factor;\n      factor++;\n    }\n    else{\n\
    \      factor++;\n    }\n  }\n  return factor;\n}\n", "  var factor = 2;\n  while(n%factor\
    \ !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var j=Math.floor(i/2);\n    if(j>0\
    \ && n%j==0){\n      return j;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n%i==0){\n  \
    \    return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n \
    \ }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    var d=n%i\n    if(d==0){\n      return i;\n    }\n  }\n\
    \  return n;\n}\n", "    var factor = 2;\n    while(n > 1){\n        if(n % factor\
    \ == 0){\n            n = n/factor;\n            factor++;\n        }\n      \
    \  else{\n            factor++;\n        }\n    }\n    return factor;\n}\n", " \
    \ var factor = 2;\n  while(n%factor == 0){\n    factor += 1;\n  }\n  return factor;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      return\
    \ s;\n    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n    }\n    s=s/2;\n  }\n\
    \  return i;\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n   \
    \ if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length\
    \ - 1];\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2\n  while(i*i<=n){\n\
    \    i++\n  }\n  if(i==2){\n    return 2;\n  }\n  if(i==3){\n    return 3;\n \
    \ }\n  while(i%2==0){\n    i=i/2\n  }\n  return i;\n}\n", "  var factor = 2;\n\
    \  while(n > 1){\n    if(n % factor === 0) return factor;\n    n /= factor;\n\
    \    factor++;\n  }\n  return factor;\n}\n", "  var factor = 2;\n  while(n%factor\
    \ !== 0){\n    factor++;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "    var i = 2;\n    while(i < n){\n    \
    \    if(n % i == 0){\n            n = n/i;\n        }\n        i++;\n    }\n \
    \   return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var m=Math.sqrt(n);\n\
    \    if(n % i == 0){\n      return i;\n    }\n    if(m % i == 0){\n      return\
    \ m;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    var m=Math.sqrt(n);\n    if(n % i == 0){\n      n = n/i;\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  var i=2,p,m=Math.sqrt(n);\n  while(m>1){\n    p=Math.floor(m/i);\n   \
    \ if(n%p==0){\n      m=m/p;\n      i++;\n    }else{\n      i=i*p;\n    }\n  }\n\
    \  return i;\n}\n", "    var factors = [];\n    for(var i = 2; i <= n; i++){\n\
    \        if(n % i == 0){\n            factors.push(i);\n            while(n %\
    \ i == 0){\n                n /= i;\n            }\n        }\n    }\n    return\
    \ factors.length ? factors[factors.length - 1] : n;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var j=1;\n    while(i*j<=n){\n    \
    \  j++;\n    }\n    if(i*j>n){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n  while(m*m<=n){\n\
    \    p=Math.floor(m);\n    if(n%p==0){\n      i=p+1;\n      m=p/i;\n    }else{\n\
    \      m=m*i;\n    }\n  }\n  return i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n\
    \  var i=2,p,m=Math.sqrt(n);\n  while(m*m<=n){\n    p=primes[i];\n    if(p<=m){\n\
    \      i++;\n    }else{\n      i--;\n    }\n    m=Math.sqrt(n);\n  }\n  return\
    \ primes[i];\n}\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n   \
    \ if(n % i == 0){\n      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n\
    }\n", "  var factors = [];\n  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n\
    \      factors.push(i);\n    }\n  }\n  return factors[factors.length-1];\n}\n",
  "    var factors = [];\n    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n            while(n % i == 0){\n              \
    \  n /= i;\n            }\n        }\n    }\n    return factors.length ? factors[factors.length\
    \ - 1] : 1;\n}\n", "    var i = 2;\n    while(true){\n        if(n % i == 0){\n\
    \            return i;\n        }\n        i += 2;\n    }\n}\n", "  if(n == 1)\
    \ return 2;\n  if(n == 2) return 3;\n  if(n%2 == 0) return n;\n  var max_factor\
    \ = 2;\n  var max_factor_index = 3;\n  for(var i = max_factor_index; i > 0; i--){\n\
    \    var new_max_factor = 2;\n    for(var j = max_factor_index; j > i; j--){\n\
    \      if(n % i == 0) new_max_factor = j;\n    }\n    if(new_max_factor > max_factor){\n\
    \      max_factor = new_max_factor;\n      max_factor_index = i;\n    }\n  }\n\
    \  return max_factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;\
    \ i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n \
    \ return n;\n}\n", "    var i = 2\n    while(true){\n        if(n % i == 0){\n\
    \            return i\n        }\n        i++\n    }\n}\n", "  if(n<2){\n    return\
    \ 2;\n  }\n  if(n==2){\n    return 2;\n  }\n  if(n%2==0){\n    return 2;\n  }\n\
    \  var i=3;\n  while(i*i<n){\n    i+=2;\n  }\n  if(n%i==0){\n    return i;\n \
    \ }\n  if(n%(i+1)==0){\n    return i+1;\n  }\n  return 2;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n \
    \ }\n  return factors[factors.length-1];\n}\n", "  var factor = 2;\n  while(n%factor\
    \ !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n      return s;\n\
    \    }\n    i=i*2+1;\n    if(s>=n){\n      break;\n    }\n    s=s/2;\n  }\n  return\
    \ i;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n   \
    \ var j=1;\n    while(j<i){\n      j+=i;\n    }\n    if(j==n){\n      return i;\n\
    \    }\n  }\n  return 1;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n\
    \    var m = Math.sqrt(n);\n    if(n % i == 0){\n      return i;\n    }\n    n\
    \ = m/i;\n  }\n  return n;\n}\n", "  var factor = 2;\n  while(n%factor !== 0){\n\
    \    factor += 1;\n  }\n  return factor;\n}\n", "  if(n == 1) return 2;\n  if(n\
    \ == 2) return 3;\n  if(n%2 == 0) return 2;\n  if(n%3 == 0) return 3;\n  if(n%5\
    \ == 0) return 5;\n  if(n%7 == 0) return 7;\n  if(n%11 == 0) return 11;\n  if(n%13\
    \ == 0) return 13;\n  if(n%17 == 0) return 17;\n  if(n%19 == 0) return 19;\n \
    \ if(n%23 == 0) return 23;\n  if(n%29 == 0) return 29;\n  if(n%31 == 0) return\
    \ 31;\n  if(n%37 == 0) return 37;\n  if(n%41) == 0) return 41;\n  if(n%43) ==\
    \ 0) return 43;\n  if(n%47) == 0) return 47;\n  if(n%53) == 0) return 53;\n  if(n%59)\
    \ == 0) return 59;\n  if(n%61) == 0) return 61;\n  if(n%67) == 0) return 67;\n\
    \  if(n%71) return 71;\n  if(n%73) == 0) return 73;\n  if(n%79) == 0) return 79;\n\
    \  if(n%83) == 0) return 83;\n  if(n%89) == 0) return 89;\n  if(n%97) == 0) return\
    \ 97;\n  if(n%101) return 101;\n  if(n%103) == 0) return 103;\n  if(n%107) ==\
    \ 0) return 107;\n  if(n%109) == 0) return 109;\n  if(n%113) == 0) return 113;\n\
    \  if(n%127) == 0) return 127;\n  if(n%131) == 0) return 131;\n  if(n%137) ==\
    \ 0) return 137;\n  if(n%141) == 0) return 141;\n  if(n%147) == 0) return 147;\n\
    \  if(n%153) == 0) return 153;\n  if(n%157) == 0) return 157;\n  if(n%163) ==\
    \ 0) return 163;\n  if(n%167) == 0) return 167;\n  if(n%173) == 0) return 173;\n\
    \  if(n%179) == 0) return 179;\n  if(n%183) == 0) return 183;\n  if(n%191) ==\
    \ 0) return 191;\n  if(n%193) == 0) return 193;\n  if(n%197) == 0) return 197;\n\
    \  if(n%199) == 0) ", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "    var i = 2;\n    while(true){\n        if(n % i == 0){\n            return i;\n\
    \        }\n        i++;\n    }\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2;i*i<=n;i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return\
    \ n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n   \
    \ var j=1;\n    while(j<i){\n      j+=i;\n    }\n    if(n%j==0){\n      return\
    \ j;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n\
    \    if(s%2==0){\n      s=s/2;\n      i++;\n    }else{\n      break;\n    }\n\
    \  }\n  return i;\n}", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n);\
    \ i++){\n    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n",
  "  var factor = 2;\n  while(n%factor !== 0){\n    factor += 1;\n  }\n  return factor;\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n  while(true){\n    if(s%2==0){\n\
    \      i=i*2+1;\n      s>>=1;\n    }else{\n      i=i*2+3;\n      s>>=2;\n    }\n\
    \    if(!(i%2)){\n      return i;\n    }\n  }\n}", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n    if(n % i == 0){\n      return i;\n\
    \    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,s=n;\n\
    \  while(true){\n    if(s%2==0){\n      if(s==2){\n        return 2;\n      }\n\
    \      i=i*2+1;\n      s=s/2;\n    }else{\n      i=i*2+3;\n      s=s/2;\n    }\n\
    \    if(i==n){\n      return s;\n    }\n  }\n}\n", "  if(n<=1){\n    return 1;\n\
    \  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2,p,m=Math.sqrt(n);\n\
    \  while(m*m<=n){\n    p=primes[i];\n    while(p*p<=n){\n      if(n%p==0){\n \
    \       return p;\n      }\n      p++;\n    }\n    i++;\n  }\n  return n;\n}\n",
  "    var factors = [];\n    for(var i = 2; i <= n; i++){\n        if(n % i == 0){\n\
    \            factors.push(i);\n        }\n    }\n    return factors[factors.length-1];\n\
    }\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    var m=Math.sqrt(n);\n\
    \    if(n % i == 0){\n      return i;\n    }\n    if(m % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factor = 2;\n  while(n > 1){\n   \
    \ if(n % factor === 0){\n      n = n / factor;\n      factor++;\n    }\n    else{\n\
    \      factor++;\n    }\n  }\n  return factor;\n}\n", "  if(n<=1){\n    return\
    \ 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return\
    \ i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var i = 2; i\
    \ <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n\
    \  }\n  return factors[factors.length-1];\n}\n", "    var i = 2;\n    while(true){\n\
    \        if(n % i == 0){\n            return i;\n        }\n        i += 2;\n\
    \    }\n}\n", "    var factors = [];\n    for(var i = 2; i <= n; i++){\n     \
    \   if(n % i == 0){\n            factors.push(i);\n        }\n    }\n    return\
    \ factors[factors.length-1];\n}\n", "  if(n<2){\n    return 1;\n  }\n  for(var\
    \ i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n      return i;\n    }\n \
    \ }\n  return n;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  var i=2;\n  while(i*i<n){\n\
    \    i++;\n  }\n  if(i==2){\n    return 2;\n  }\n  var j=2;\n  while(j*j<=n){\n\
    \    j++;\n  }\n  if(j==2){\n    return 2;\n  }\n  var k=2;\n  while(k*k<=n){\n\
    \    k++;\n  }\n  if(k==2){\n    return 2;\n  }\n  var l=2;\n  while(l*l<=n){\n\
    \    l++;\n  }\n  if(l==2){\n    return 2;\n  }\n  var m=2;\n  while(m*m<=n){\n\
    \    m++;\n  }\n  if(m==2){\n    return 2;\n  }\n  var p=2;\n  while(p*p<=n){\n\
    \    p++;\n  }\n  if(p==2){\n    return 2;\n  }\n  var q=2;\n  while(q*q<=n){\n\
    \    q++;\n  }\n  if(q==2){\n    return 2;\n  }\n  var r=2;\n  while(r*r<=n){\n\
    \    r++;\n  }\n  if(r==2){\n    return 2;\n  }\n  var s=2;\n  while(s*s<=n){\n\
    \    s++;\n  }\n  if(s==2){\n    return 2;\n  }\n  var t=2;\n  while(t*t<=n){\n\
    \    t++;\n  }\n  if(t==2){\n    return 2;\n  }\n  var u=2;\n  while(u*u<=n){\n\
    \    u++;\n  }\n  if(u==2){\n    return 2;\n  }\n  var v=2;\n  while(v*v<=n){\n\
    \    v++;\n  }\n  if(v==2){\n    return 2;\n  }\n  var w=2;\n  while(w*w<=n){\n\
    \    w++;\n  }\n  if(w==2){\n    return 2;\n  }\n  var x=2;\n  while(x*x<=n){\n\
    \    x++;\n  }\n  if(x==2){\n    return 2;\n  }\n  var y=2;\n  while(y*y<=n){\n\
    \    y++;\n  }\n  if(y==2){\n    return 2;\n  }\n  var z=2;\n  while(z*z<=n){\n\
    \    z++;\n  }\n  if(z==2){\n    return 2;\n  }\n  return n;\n}\n", "  var factor\
    \ = 2;\n  while(n > 1){\n    if(n % factor === 0){\n      n = n / factor;\n  \
    \    factor++;\n    }else{\n      factor++;\n    }\n  }\n  return factor;\n}\n",
  "    var i = 2;\n    while(true){\n        if(n % i == 0){\n            return i;\n\
    \        }\n        i += 2;\n    }\n}\n", "  var factors = [];\n  for(var i =\
    \ 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n  }\n\
    \  return factors[factors.length-1];\n}\n", "  if(n<=1){\n    return 1;\n  }\n\
    \  for(var i=2;i*i<=n;i++){\n    var j=i+1;\n    while(j<n && n%j===0){\n    \
    \  j++;\n    }\n    if(i*j===n){\n      return i;\n    }\n  }\n  return 1;\n}\n",
  "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i*i<=n;i++){\n    if(n%i==0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n    }\n \
    \ }\n  return factors[factors.length - 1];\n}\n", "  var factor = 2;\n  while(n%factor\
    \ !== 0){\n    factor += 1;\n  }\n  return factor;\n}\n", "  if(n == 1) return\
    \ 2;\n  if(n == 2) return 3;\n  if(n % 2 == 0) return 2;\n  if(n % 3 == 0) return\
    \ 3;\n  var max_num = Math.sqrt(n);\n  var max_factor = Math.floor(max_num);\n\
    \  while(max_num % 2 == 0){\n    max_num--;\n    max_factor--;\n  }\n  while(max_num\
    \ % 3 == 0){\n    max_num--;\n    max_factor--;\n    max_factor--;\n  }\n  return\
    \ max_factor;\n}\n", "  var factor = 2;\n  while(n%factor == 0){\n    factor++;\n\
    \  }\n  return factor;\n}\n", "  if(n<=1){\n    return 1;\n  }\n  for(var i=2;i<=Math.sqrt(n);i++){\n\
    \    if(n % i == 0){\n      return i;\n    }\n  }\n  return n;\n}\n", "  if(n<=1){\n\
    \    return 1;\n  }\n  for(var i=2; i<=Math.sqrt(n); i++){\n    if(n % i == 0){\n\
    \      return i;\n    }\n  }\n  return n;\n}\n", "  var factors = [];\n  for(var\
    \ i = 2; i <= Math.sqrt(n); i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  return factors[factors.length-1];\n}\n", "  var factors = [];\n\
    \  for(var i = 2; i <= n; i++){\n    if(n % i == 0){\n      factors.push(i);\n\
    \    }\n  }\n  factors.sort(function(a, b){\n    return b-a;\n  });\n  return\
    \ factors[0];\n}\n", "    var i = 2;\n    while(true){\n        if(n % i == 0){\n\
    \            n = n/i;\n        }\n        i++;\n        if(n < 1){\n         \
    \   return i;\n        }\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

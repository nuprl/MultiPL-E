name: HumanEval_57_monotonic
language: js
prompt: "//Return True is list elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n// False\n\
  // >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["    var s = monotonicSort;\n    return l(s) && l(s.reverse()) && l(s.slice().reverse());\n\
    }\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n},{}],124:[function(require,module,exports){\n\
    var indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":126}],125:[function(require,module,exports){\n\
    var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Array\
    \ filter\n     */\n    function filter(arr, callback, thisObj) {\n        callback\
    \ = makeIterator(callback, thisObj);\n        var results = [];\n        if (arr\
    \ == null) {\n            return results;\n        }\n\n        var i = -1, len\
    \ = arr.length, value;\n        while (++i < len) {\n            value = arr[i];\n\
    \            if (callback(value, i, arr)) {\n                results.push(value);\n\
    \            }\n        }\n\n        return results;\n    }\n\n    module.exports\
    \ = filter;\n\n\n\n},{\"../function/makeIterator_\":140}],126:[function(require,module,exports){\n\
    \n\n    /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex)\
    \ {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n       \
    \     return -1;\n        }\n\n        var len = arr.length,\n            i =\
    \ fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n  \
    \          // we iterate over sparse items since there is no way to make it\n\
    \            // work properly on IE 7-8. see #64\n            if (arr[i] === item)\
    \ {\n                return i;\n            }\n\n            i++;\n        }\n\
    \n        return -1;\n    }\n\n    module.exports = indexOf;\n\n\n},{}],127:[function(require,module,exports){\n\
    var unique = require('./unique');\nvar filter = require('./filter');\nvar some\
    \ = require('./some');\nvar contains = require('./contains');\nvar slice = require('./slice');\n\
    \n\n    /**\n     * Return a new Array with elements common to all Arrays.\n \
    \    * - based on underscore.js implementation\n     */\n    function intersection(arr)\
    \ {\n        var arrs = slice(arguments, 1),\n            result = filter(unique(arr),\
    \ function(needle){\n                return some(arrs, function(haystack){\n \
    \                   return contains(haystack, needle);\n                });\n\
    \            });\n        return result;\n    }\n\n    module.exports = intersection;\n\
    \n\n\n},{\"./contains\":124,\"./filter\":125,\"./slice\":128,\"./some\":129,\"\
    ./unique\":130}],128:[function(require,module,exports){\n\n\n    /**\n     * Return\
    \ a copy of the source array with all `placeholder` elements removed.\n     *\
    \ If `isSorted` equals true, remove elements that are ", "    var n = l.length;\n\
    \    if(n < 1) return false;\n    var s = l[0], i = 1;\n    for(; i < n; i++){\n\
    \        if(l[i] < s) return false;\n    }\n    return true;\n}\n", "    var n\
    \ = l.length,\n        monotonic = true,\n        i, prev, cur;\n    for(i = 1;\
    \ i < n; i++){\n        prev = cur;\n        cur = l[i];\n        if(cur < prev){\n\
    \            monotonic = false;\n            break;\n        }\n    }\n    return\
    \ monotonic;\n}\n", "    var s = 0, n = l.length, m = +Infinity;\n    while(n\
    \ < m){\n        s = (l[n]-l[m])>0 ? 1 : -1;\n        if(s > 0){\n           \
    \ if(n < m) m = n;\n            break;\n        }\n        n++;\n    }\n    return\
    \ m>0 && l[n-1] > l[m-1];\n}\n", "  var s = monotonicSort;\n  return l(s);\n}\n",
  "  var s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b;\n  });\n\
    }\n", "  var s = l.slice();\n  return s[0] < s[s.length-1] && s.every(function(v,\
    \ i){\n    return v > l[i-1];\n  });\n}\n", "    var s = l.slice();\n    var n\
    \ = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q = [];\n  \
    \  for (i = 0; i < n; ++i){\n        if (l[i] != s[i]){\n            p.push(s[i]);\n\
    \        }\n    }\n    for (i = 1; i < n; ++i){\n        for (j = 0; j < i; ++j){\n\
    \            if (l[j] > l[i]){\n                q.push(l[j]);\n            }\n\
    \        }\n    }\n    for (i = 0; i < n; ++i){\n        if (p[i] < q[i]){\n \
    \           return false;\n        }\n    }\n    return true;\n}\n", "  var s\
    \ = monotonicSort;\n  return l(s) && l(s.reverse()) && s.join(\"\") === s.reverse().join(\"\
    \");\n}\n", "  var s = monotonicSort;\n  return s(l, function(a, b){\n    return\
    \ a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n\nmonotonic.radix = 2;\n\nmodule.exports\
    \ = monotonic;\n\n},{\"./sort\":91}],93:[function(require,module,exports){\nvar\
    \ indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":94}],94:[function(require,module,exports){\n\
    var nativeIndexOf = Array.prototype.indexOf;\n\n    var indexOf = function(arr,\
    \ item, fromIndex) {\n        if (arr == null) {\n            return -1;\n   \
    \     }\n\n        var len = arr.length;\n\n        fromIndex = (fromIndex < 0)\
    \ ? Math.max(0, len + fromIndex) : fromIndex;\n        if (fromIndex < 0) {\n\
    \            fromIndex = 0;\n        }\n\n        if (fromIndex >= len) {\n  \
    \          return -1;\n        }\n\n        if (item !== arr[(fromIndex + len)\
    \ % len]) {\n            return -1;\n        }\n        while (fromIndex < len)\
    \ {\n            if (arr[fromIndex] === item) {\n                return fromIndex;\n\
    \            }\n            fromIndex++;\n        }\n        return -1;\n    };\n\
    \n    module.exports = indexOf;\n\n\n},{}],95:[function(require,module,exports){\n\
    var unique = require('./unique');\nvar filter = require('./filter');\nvar some\
    \ = require('./some');\nvar contains = require('./contains');\nvar slice = require('./slice');\n\
    \n\n    /**\n     * Return a new Array with elements common to all Arrays.\n \
    \    * - based on underscore.js implementation\n     */\n    function intersection(arr)\
    \ {\n        var arrs = slice(arguments, 1),\n            result = filter(unique(arr),\
    \ function(needle){\n                return some(arrs, function(haystack){\n \
    \                   return contains(haystack, needle);\n                });\n\
    \            });\n        return result;\n    }\n\n    module.exports = intersection;\n\
    \n\n\n},{\"./contains\":93,\"./filter\":96,\"./slice\":98,\"./some\":99,\"./unique\"\
    :100}],96:[function(require,module,exports){\nvar makeIterator = require('../function/makeIterator_');\n\
    \n    /**\n     * Array filter\n     */\n    function filter(arr, callback, thisObj)\
    \ {\n        callback = makeIterator(callback, thisObj);\n        var results\
    \ = [];\n        if (arr == null) {\n            return results;\n        }\n\n\
    \        var i = -1, len = arr.length, value;\n        while (++i < len) {\n \
    \           value = arr[i];\n            if (callback(value, i, arr)) {\n    \
    \            results.push(value);\n            }\n        }\n\n        return\
    \ results;\n    }\n\n    module.exports = filter;\n\n\n\n},{\"../function/makeIterator_\"\
    :102}],97:[function(require,module,export", "  var s = monotonicSort;\n  return\
    \ s(l, function(a, b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", " \
    \ var s = l.slice();\n  return s[0] < s[s.length-1] ? monotonic(s.slice(1)) :\
    \ true;\n}\n", "    var s = 0, n = l.length, m = +Infinity;\n    while(n < m){\n\
    \        s = (l[n]-l[m])>0 ? 1 : -1;\n        if(s > 0) n++; else m--;\n    }\n\
    \    return m<0 ? -1 : l[n]<l[m] ? s : false;\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    s.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    while(n > 1 && s[0] < s[n - 1]){\n        s.pop();\n        --n;\n\
    \    }\n    return s[0] == s[n - 1];\n}\n", "    var s = l.slice();\n    var n\
    \ = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q = [];\n  \
    \  for (i = 1; i < n; ++i){\n        if (s[i - 1] > s[i]){\n            p.push(s[i\
    \ - 1]);\n        }\n        else{\n            q.push(s[i]);\n        }\n   \
    \ }\n    for (i = n - 2; i >= 0; --i){\n        if (s[n - i - 1] < s[i]){\n  \
    \          p.push(s[n - i - 1]);\n        }\n        else{\n            q.push(s[i]);\n\
    \        }\n    }\n    while (p.length && q.length){\n        if (p.pop() < q.pop())\
    \ return true;\n    }\n    return false;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s) === l(s.reverse());\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    s.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = 1;\
    \ i < n; i++){\n        if(s[i] - s[i - 1] < 0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    var s = l.slice();\n    var n\
    \ = s.length;\n    s.sort(function(a, b){\n        return a - b;\n    });\n  \
    \  while(n > 1 && s[0] < s[n-1]){\n        s.pop();\n        --n;\n    }\n   \
    \ return s[0] == s[n - 1];\n}\n", "  var s = l.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  var i = 0;\n  var n = s.length;\n  var m = n;\n  while (i <\
    \ m && s[i] === s[i-1]) ++i;\n  return i < m && s[i] < s[i-1];\n}\n", "  var s\
    \ = monotonicSort;\n  return s(l, function(a, b){\n    return a < b;\n  });\n\
    }\n", "    var s = l.slice();\n    var n = s.length;\n    s.sort(function(a, b){\n\
    \        return a - b;\n    });\n    for(var i = 1; i < n; i++){\n        if(s[i]\
    \ - s[i - 1] < 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return v\
    \ === a[i+1] || v < a[i+1];\n  });\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s) && l(s.reverse()) && l(s.filter(function(v, i, a){\n    return !(i in a)\
    \ || v < a[i];\n  }));\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports =\
    \ monotonic;\n\n},{}],6:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var isArray = _dereq_('isarray');\n", "    var s = monotonicSort;\n    return\
    \ l(s);\n}\n", "    var s = l.slice();\n    var n = s.length;\n    if (n < 3)\
    \ return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i) {\n\
    \        if (l[i] != s[i] && l[i] != s[i-1]) {\n            p.push(s[i]);\n  \
    \      }\n    }\n    for (i = 1; i < n; ++i) {\n        if (l[i] != s[n - i])\
    \ {\n            q.push(s[n - i]);\n        }\n    }\n    while (p.length && q.length)\
    \ {\n        if (p[0] > q[0]) p.shift(), q.shift();\n        else q.shift(), p.pop();\n\
    \    }\n    return p.length == 0 && q.length == 0;\n}\n", "  var s = l.slice();\n\
    \  return s[0] < s[s.length-1] && s.every(function(v, i){\n    return v === l[i+1];\n\
    \  });\n}\n", "    var o=[], n = l.length, m = -1, i;\n    for(i = 0; i < n; i++){\n\
    \        o.push(l[i]);\n    }\n    for(i = n - 1; i >= 0; i--){\n        if(l[i]\
    \ < o[m] || m<0){\n            m = i;\n        }\n    }\n    return m>=0;\n}\n",
  "  var s = 0, n = l.length, m = +Infinity;\n  while(n < m){\n    if(l[n] < m) s\
    \ = n;\n    else if(n == s) return false;\n    else n = s;\n  }\n  return true;\n\
    }\n", "  var s = l.slice();\n  var n = s.length;\n  s.sort(function(a, b){\n \
    \   return a - b;\n  });\n  for(var i = 1; i < n; ++i){\n    if(s[i] - s[i - 1]\
    \ < 0){\n      return false;\n    }\n  }\n  return true;\n}\n", "    var o=[],\
    \ diff=[], ls=[];\n    for(var i=0, l=l.length; i<l; i++){\n        var v = l[i];\n\
    \        if(v < l[i-1]){\n            o.push(v);\n        }else{\n           \
    \ diff.push(v);\n        }\n    }\n    while(diff.length){\n        ls.push(diff.pop());\n\
    \    }\n    return ls.reverse().indexOf(Math.max.apply(Math, o)) === -1;\n}\n",
  "  var s = monotonicSort;\n  return l(s);\n}\n", "    var s = l.slice();\n    var\
    \ n = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q = [];\n\
    \    for (i = 0; i < n; ++i){\n        p.push(s[i]);\n        for (j = i + 1;\
    \ j < n; ++j){\n            if (s[j] < p[i]) p[i] = s[j];\n            if (s[j]\
    \ > p[i]) q[i] = s[j];\n        }\n    }\n    for (i = n - 2; i >= 0; --i){\n\
    \        if (p[i] < q[i]) return true;\n        if (p[i] > q[i]) return false;\n\
    \    }\n    return false;\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i\
    \ < n; ++i){\n        if (l[i] <= l[i + 1]){\n            if (l[i] > l[i + 1]){\n\
    \                for (j = i; j < n; ++j){\n                    p[j] = s[j];\n\
    \                }\n                for (j = i + 1; j < n; ++j){\n           \
    \         q[j] = s[j];\n                }\n                s = cmp(p, q) < 0;\n\
    \            }\n        } else {\n            s = false;\n        }\n    }\n \
    \   return s;\n}\n", "  var s = monotonicSort;\n  return s(l, function(a, b){\n\
    \    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var m = s[0];\n    for\
    \ (var i = 1; i < n; i++){\n        if (s[i] > m){\n            m = s[i];\n  \
    \      }\n    }\n    return m === s[n - 1];\n}\n", "  var s = monotonicSort;\n\
    \  return l(s);\n}\n", "    var o=[], n = l.length, i=0;\n    if ( n < 2 ) return\
    \ true;\n    if ( !isNumeric(l[0]) ) return true;\n    for ( i = 0; i < n; i++\
    \ ) {\n        if ( l[i] < l[i-1] ) return false;\n        if ( l[i] > l[i-1]\
    \ ) return true;\n    }\n    return true;\n}\n", "  var s = monotonicSort;\n \
    \ return s(l, function(a, b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n\
    }\n\nmonotonic.radix = 2;\n\nmodule.exports = monotonic;\n\n},{\"./sort\":9}],9:[function(require,module,exports){\n\
    'use strict';\n\nmodule.exports = sort;\n", "    var o = false;\n    var n = l.length;\n\
    \    var m = l[0];\n    for(var i = 1; i < n; i++){\n        var m = l[i];\n \
    \       if(m <= m){\n            o = true;\n        }\n    }\n    return o;\n\
    }\n", "    var s = monotonicSort;\n    return l(s) && l(s.reverse()) && l(s.slice().reverse());\n\
    }\n", "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n\
    \    var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n        if (l[i]\
    \ <= l[i+1]){\n            p.push(l[i]);\n        } else {\n            q.push(l[i]);\n\
    \        }\n    }\n    p = p.concat(q.slice(0).reverse());\n    for (i = 0; i\
    \ < n; ++i){\n        if (l[i] <= p[0]){\n            for (j = i; j < n; ++j){\n\
    \                if (l[j] <= p[j]){\n                    s = p.slice();\n    \
    \                s.splice(j, 0, l[j]);\n                    return monotonic(s);\n\
    \                }\n            }\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    var s = l.slice();\n    var n = s.length;\n    if\
    \ (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i < n;\
    \ ++i) {\n        p[i] = s[i];\n        q[i] = s[i];\n    }\n    for (i = 0; i\
    \ < n; ++i) {\n        for (j = i + 1; j < n; ++j) {\n            if (p[j] < q[i])\
    \ p[i] = p[j];\n            if (p[j] > q[i]) q[i] = p[j];\n        }\n    }\n\
    \    for (i = 0; i < n; ++i) {\n        if (q[i] < p[i]) q[i] = q[i];\n      \
    \  if (q[i] > p[i]) p[i] = q[i];\n    }\n    return (p[n-1] - p[0]) <= (q[n-1]\
    \ - q[0]);\n}\n", "  var s = l.slice();\n  return s[0] < s[s.length-1] ? monotonic(s.slice(1))\
    \ : true;\n}\n", "    var o = false;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i-1] > l[i]){\n            o = true;\n            break;\n     \
    \   }\n    }\n    return o;\n}\n", "    var s = 0, n = l.length, m = +l[0], i,\
    \ l;\n    if(n < 1) return false;\n    if(m > n) return true;\n    for(i = 1,\
    \ l = n; i < l; i++){\n        if(+l[i] > m) return true;\n        if(+l[i] <\
    \ m) s++;\n        m = +l[i];\n    }\n    return !s;\n}\n", "  var s = l.slice();\n\
    \  var n = s.length;\n  s.sort(function(a, b){\n    return a - b;\n  });\n  if(n\
    \ === 1) return true;\n  if(n === 2) return s[0] < s[1];\n  if(n === 3) return\
    \ s[0] > s[1];\n  return s[0] < s[1] || s[0] > s[1];\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q =\
    \ [];\n    for (i = 0; i < n; ++i){\n        p.push(s[i].x);\n        q.push(s[i].y);\n\
    \    }\n    while (--n >= 0){\n        for (i = 0; i < n; ++i){\n            if\
    \ (p[i] < q[i]) p[i] += 1; else q[i] -= 1; \n        }\n        if (p.length !==\
    \ n) return false;\n        for (i = 0; i < n; ++i){\n            if (p[i] > q[i])\
    \ p[i] -= 1; else q[i] += 1;\n        }\n    }\n    return p.length === 0;\n}\n",
  "  var s = l.slice();\n  return s.some(function(v, i, a){\n    return !i || (v <\
    \ a[i-1]);\n  });\n}\n", "    var s = l.slice();\n    var n = s.length;\n    if\
    \ (n < 3) return true;\n    var m = s[0], i = 1, j = 0;\n    while (i < n){\n\
    \        if (s[i] > s[m]) s[j] = s[m];\n        s[j] = s[i];\n        i++;\n \
    \       j++;\n        if (i == n) break;\n        s[i] = s[j];\n    }\n    s[j]\
    \ = s[m];\n    return j == s.length || !isFinite(j);\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q =\
    \ [];\n    for (i = 1; i < n; ++i) {\n        if (s[i - 1] > s[i]) {\n       \
    \     for (j = i; j > 0; --j) {\n                q[j] = q[j - 1];\n          \
    \  }\n            q[0] = s[i];\n        } else {\n            for (j = i; j <\
    \ n; ++j) {\n                q[j] = q[j + 1];\n            }\n            q[n]\
    \ = s[i];\n        }\n        if (!equal(p, q)) {\n            for (j = 0; j <\
    \ i; ++j) {\n                q[j] = q[j + 1];\n            }\n            return\
    \ false;\n        }\n        p.push(s[i]);\n    }\n    return true;\n}\n", " \
    \ var s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b;\n \
    \ });\n}\n", "\tvar s = monotonicSort;\n\treturn s(l, function(a, b){\n\t\treturn\
    \ a < b;\n\t});\n}\n\nmonotonic.version = '1.0.4';\n\nmodule.exports = monotonic;\n\
    \n},{}],6:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar VNode,\n\tisVNode = function isVNode(obj) {\n\t\treturn obj instanceof VNode;\n\
    \t},\n\tisVText = function isVText(obj) {\n\t\treturn obj instanceof VText;\n\t\
    },\n\tisWidget = function isWidget(obj) {\n\t\treturn obj instanceof Widget;\n\
    \t},\n\tisThunk = function isThunk(obj) {\n\t\treturn obj && obj.vnode;\n\t};\n\
    \nvar emptyNode = VNode('', {}, [], undefined, undefined);\n\nvar diffProps =\
    \ function diffProps(a, b) {\n\tvar diff;\n\n\tif (typeof a !== typeof b || a\
    \ === null || b === null) {\n\t\tdiff = false;\n\t} else if (isArray(a) && isArray(b))\
    \ {\n\t\tdiff = true;\n\t} else {\n\t\tdiff = a !== b;\n\t}\n\treturn diff;\n\
    };\n", "  var s = l.slice();\n  return s[0] < s[s.length-1] ? monotonic(s) : false;\n\
    }\n", "    var s = l.slice();\n    var m = s.length;\n    while(--m > 0){\n  \
    \      var j = s.lastIndexOf(s[m-1]);\n        if(j < 0) return false;\n     \
    \   s[j] = s[m-1];\n    }\n    return true;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s) && l(s.reverse()) && s.join(\"\") === s.reverse().join(\"\");\n\
    }\n", "    var o = false;\n    for(var i=l.length-1; i>=0; i--){\n        if(l[i]>l[i+1]){\n\
    \            o = true;\n            break;\n        }\n    }\n    return o;\n\
    }\n", "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n\
    \    var m = s[0];\n    for (var i = 1; i < n; i++){\n        if (s[i] > m){\n\
    \            m = s[i];\n        }\n    }\n    if (m > s[n-1]){\n        return\
    \ true;\n    }\n    return false;\n}\n", "  var s = monotonicSort;\n  return l(s)\
    \ && l(s.reverse()) && l(s.filter(function(v, i){ return v > l[i-1]; }));\n}\n",
  "    var s = monotonicSort;\n    return s(l, function(a, b){\n        return a <\
    \ b ? -1 : a > b ? 1 : 0;\n    });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\n\n\
    var pad = _dereq_('./pad');\n\nvar constants = _dereq_('./constants');\n\nvar\
    \ string = _dereq_('./string');\n\nvar digits = _dereq_('./digits');\n\nvar isNumeric\
    \ = _dereq_('./isNumeric');\n\nvar isPositive = _dereq_('./isPositive');\n\nvar\
    \ isNumeric$1 = number.isNumeric;\n", "  var n = l.length;\n  return n > 1 &&\
    \ typeof l[0] !== 'number'\n      ? monotonic(l.slice(1))\n      : n >= 2 && (\n\
    \          l[0] <= l[n-2]\n          || (\n            Math.abs(l[n-2]) <= Math.abs(l[n-1])\n\
    \            && l[n-2] <= l[n-1]\n          )\n        )\n}\n\n},{}],5:[function(require,module,exports){\n\
    var utils = require('./utils')\nvar formats = require('./formats')\nvar has =\
    \ Object.prototype.hasOwnProperty;\n\nvar defaults = {\n  delimiter: '&',\n  encode:\
    \ true,\n  encoder: utils.encode,\n  encodeValuesOnly: false,\n  serializeDate:\
    \ function serializeDate(date) { // this *should* be super easy to replace with\
    \ custom serialization logic\n    return toISOString(date)\n  },\n  skipNulls:\
    \ false,\n  strictNullHandling: false\n}\n\nvar stringify = function stringify(\
    \ // :TODO: test that a single arg works\n  object,\n  prefix,\n  _opt,\n  dateKey,\n\
    \  serializeDate,\n  strictNullHandling,\n  skipNulls,\n  encoder,\n  filter,\n\
    \  sort,\n  allowDots,\n  serializeArrays\n){\n  var obj = object;\n  if(typeof\
    \ filter === 'function'){\n    obj = filter(prefix, obj);\n  }\n\n  if(_opt ||\
    \ prefix ){\n    if(prefix && !has.call(obj, prefix)){\n      throw new TypeError(prefix\
    \ + ' is not an object')\n    }\n\n    if(!prefix && arrayPrefix(prefix, obj)){\n\
    \      throw new TypeError('array-like object prefix is required')\n    }\n\n\
    \    if(obj && typeof obj === 'object' && !utils.isArray(obj)){\n      // Serialize\
    \ object item.\n      obj = utils.transformToString(obj, dateKey);\n      if(sort){\n\
    \        obj = obj.slice(0);\n        for(var i = obj.length - 1; i >= 0; i--){\n\
    \          if(typeof obj[i] !== 'object'){\n            obj[i] = utils.transformToString(obj[i],\
    \ dateKey);\n          }\n        }\n      }\n      if(serializeArrays){\n   \
    \     obj = obj.map(utils.transformToString.bind(null, dateKey, serializeDate));\n\
    \      }\n      return obj\n    }\n\n    if(!obj){\n      obj = '';\n    }\n\n\
    \    if(!utils.isString(obj)){\n      if(encoder){\n        obj = encoder(obj);\n\
    \      } else {\n        throw new TypeError('encoder must be a function');\n\
    \      }\n    }\n\n    if(obj){\n      var opts = _opt||{};\n\n      if(obj.indexOf(options.delimiter)\
    \ !== -1){\n        throw new TypeError('object cannot contain ' + options.delimiter);\n\
    \      }\n\n      if(_opt && utils.isObject(_opt", "  var s = l.slice();\n  return\
    \ s.every(function(v, i, a){\n    return v === a[i+1] || v < a[i+1];\n  });\n\
    }\n", "  var n = l.length,\n      out = 0,\n      i, j, t;\n  for(i = 0; i < n;\
    \ i++){\n    t = l[i];\n    for(j = 0; j < n - 1; j++){\n      if(t < l[j]){\n\
    \        return false;\n      }else if(t > l[j + 1]){\n        return true;\n\
    \      }\n    }\n    if(t > out){\n      out = t;\n    }\n  }\n  return out ===\
    \ 0;\n}\n", "  var s = monotonicSort;\n  return l(s) === l(s.reverse());\n}\n",
  "  var s = l.slice();\n  return s[0] < s[s.length-1] && s.every(function(v, i, a){\n\
    \    return i > 0 && v < a[i-1];\n  });\n}\n", "    var s = l.slice();\n    var\
    \ m = s.length;\n    while(--m){\n        var monotonic = strictly_increasing(s[--m],\
    \ s[m]);\n        if(monotonic){\n            s.splice(m, 1);\n        }\n   \
    \ }\n    return !s.length;\n}\n", "  var s = monotonicSort;\n  return s(l, function(a,\
    \ b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var m = s[0];\n    var\
    \ i = 1;\n    while (i < n){\n        if (s[i] > m){\n            s[i] = m;\n\
    \        }\n        else{\n            s[i] = s[i];\n        }\n        i++;\n\
    \    }\n    return s[0] < s[n - 1];\n}\n", "    var s = l.slice();\n    var n\
    \ = s.length;\n    s[0] = s[0] || 0;\n    for (var i = 1; i < n; i++){\n     \
    \   var j = i;\n        while (j > 0 && s[j-1] > s[j]) j--;\n        if (j < 0\
    \ || j == i) break; // no change\n        s[j] = s[j] || 0;\n        s[j] = s[j]\
    \ < l[j] ? 1 : -1;\n    }\n    return s[0] == s[1];\n}\n", "  var s = l.slice();\n\
    \  return s.some(function(v, i, a){\n    return !i || (v !== a[i-1]);\n  });\n\
    }\n", "    var s = 0, n = l.length, m = +l[0], i, l;\n    if(!n) return !m;\n\
    \    if(n === 1) return !m && l[0] <= l[1];\n    for(i = 1, l = l; i < n; ++i){\n\
    \        if(+l[i] > m){\n            m = +l[i];\n            s = i;\n        }\n\
    \    }\n    return !m && s;\n}\n},{}],41:[function(_dereq_,module,exports){\n\
    'use strict';\nvar immediate = _dereq_('immediate');\nvar global = typeof window\
    \ !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self\
    \ !== 'undefined' ? self : {};\nvar task = {\n    _idleTimeout: 600,\n    runIdle:\
    \ function runIdle(fn, args) {\n        // keep running idle tasks no more than\
    \ 5s\n        clearTimeout(task._idleTimeout);\n        task._idleTimeout = setTimeout(function\
    \ (){\n            task.runIdle(fn, args);\n        }, 500);\n        var task\
    \ = { fn: fn, args: args };\n        immediate.call(window, function () {\n  \
    \          task.fn.apply(global, task.args);\n        });\n    },\n    cancelIdle:\
    \ function cancelIdle() {\n        clearTimeout(task._idleTimeout);\n    }\n};\n\
    \nmodule.exports = task;\n\n},{\"immediate\":42}],42:[function(_dereq_,module,exports){\n\
    (function (global){\n'use strict';\nvar nextTick = typeof process == 'object'\
    \ && process && process.nextTick\n    ? process.nextTick\n    : 'function' ==\
    \ typeof setImmediate && setImmediate\n    : 'function' == typeof global.setImmediate\
    \ && global.setImmediate;\n\nvar apply = Function.prototype.call.bind(Function.prototype.apply);\n\
    var slice = Array.prototype.slice;\nvar immediate = typeof nextTick == 'function';\n\
    \nmodule.exports = immediate\n    ? function (fn) {\n        setTimeout(fn, 0);\n\
    \    } : function (fn) {\n        fn();\n    };\n", "    var n = l.length,\n \
    \       monotonic = true,\n        i, j, p1, p2, q1, q2, q3, t;\n    for(i = 0;\
    \ i < n; i++){\n        p1 = l[i];\n        p2 = l[(i+1)%n];\n        for(j =\
    \ i; j < n; j++){\n            q1 = l[j];\n            q2 = l[(j+1)%n];\n    \
    \        if(p1 !== q1 && p2 !== q2){\n                if(q1 > p1 && q2 > p2){\n\
    \                    t = p1;\n                    p1 = q1;\n                 \
    \   q1 = t;\n                    t = p2;\n                    p2 = q2;\n     \
    \               q2 = t;\n                }\n                if(q1 > p1 && q2 >\
    \ p1){\n                    t = p1;\n                    p1 = q1;\n          \
    \          q1 = t;\n                }\n                if(q1 > p2 && q2 > p2){\n\
    \                    t = p2;\n                    p2 = q2;\n                 \
    \   q2 = t;\n                }\n                if(q1 > p2 && q2 > p2){\n    \
    \                t = p2;\n                    p2 = q2;\n                    q2\
    \ = t;\n                }\n                monotonic = false;\n            }\n\
    \        }\n    }\n    return monotonic;\n}\n", "  var s = l.slice();\n  var n\
    \ = s.length;\n  if(n < 2) return true;\n  s[0] = s[1] = Infinity;\n  for(var\
    \ i = 2; i < n; i++){\n    var x = s[i];\n    if(x < s[1]) return false; // not\
    \ monotonic increasing\n    if(x > s[1]) s[i] = x;\n    else if(x == s[1]) s[i]\
    \ = s[1];\n    else if(x == s[0]) s[i] = s[0];\n    else s[i] = NaN;\n  }\n  return\
    \ true;\n}\n", "  var s = monotonicSort;\n  return s(l, function(a, b){\n    return\
    \ a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n\nmonotonic.radix = 0;\n", "    var s\
    \ = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n    var i,\
    \ j, p = [], q = [];\n    for (i = 0; i < n; ++i) p[i] = i;\n    for (i = 0; i\
    \ < n; ++i) {\n        for (j = i + 1; j < n; ++j) {\n            if (p[j] < p[i])\
    \ p[i] = p[j];\n            if (p[j] > p[i]) p[j] = p[i];\n        }\n    }\n\
    \    for (i = 0; i < n; ++i) {\n        if (p[i] < q[q.length - 1]) {\n      \
    \      q[q.length - 1] = p[i];\n        } else {\n            q.push(p[i]);\n\
    \        }\n    }\n    while (!q.length) q.push(0);\n    return q.pop() === 0;\n\
    }\n", "  var s = monotonicSort;\n  return s(l, function(a, b){\n    return a <\
    \ b;\n  });\n}\n", "    var s = monotonicSort;\n    return l(s) && l(s.reverse())\
    \ && l(s.filter(function(v, i){ return v > l[i-1]; }));\n}\n", "    var o=[],\
    \ n = l.length, m = 0, inc = true, i;\n    for (i = 0; i < n; ++i) if (l[i] <=\
    \ m) o[o.length] = i;\n    if (n < 2) return o; // all items are smaller than\
    \ the first one\n    for (i = 0; i < n; ++i) {\n        if (l[i] < m) inc = false;\n\
    \        if (l[i] > m) break;\n    }\n    if (inc) return true; // all items are\
    \ greater than the first one\n    for (i = 0; i < n; ++i) {\n        if (l[i]\
    \ > m) inc = false;\n        if (l[i] < m) break;\n    }\n    return !inc; //\
    \ all items are smaller than the first one\n}\n", "    var s = 0, n = l.length,\
    \ m = +Infinity;\n    while(n < m){\n        var i = n++, x = l[i];\n        if(x\
    \ > m){\n            m = x;\n        }\n        if(x < 0){\n            s = s\
    \ - 1;\n        }\n    }\n    return m === +Infinity;\n}\n", "  var s = l.slice();\n\
    \  return s[0] < s[s.length-1] ? monotonic(s) : false;\n}\n", "  var s = l.slice();\n\
    \  return s.every(function(v, i, a){\n    return !i || v !== a[i-1];\n  });\n\
    }\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return !i\
    \ || v !== a[i - 1];\n  });\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i\
    \ < n; ++i) {\n        p[i] = s[i];\n        q[i] = s[i];\n    }\n    for (i =\
    \ 0; i < n - 1; ++i) {\n        for (j = i + 1; j < n; ++j) {\n            if\
    \ (p[j] < q[j]) {\n                p[i] = p[j];\n                q[i] = q[j];\n\
    \            }\n        }\n    }\n    return p[n-1] < q[n-1];\n}\n", "  var s\
    \ = monotonicSort;\n  return s(l, 0, l.length - 1, l.length);\n}\n", "  var s\
    \ = l.sort(function(a, b){\n    return a - b;\n  });\n  var i = 0;\n  var n =\
    \ s.length;\n  var m = n;\n  while (i < m && s[i] === s[i-1]) ++i;\n  return i\
    \ < m;\n}\n", "    var n = l.length,\n        monotone = true,\n        i, j,\
    \ p, rev, temp;\n    for(i = 1; i < n; i++){\n        p = l[i-1];\n        j =\
    \ i;\n        while(j > 0 && l[j-1] > p){\n            j = j - 1;\n        }\n\
    \        rev = j;\n        while(j > 0 && l[j-1] < p){\n            j = j - 1;\n\
    \        }\n        temp = j;\n        j = i;\n        while(j > 0 && l[j-1] >\
    \ p){\n            j = j - 1;\n        }\n        if(j < i || (j == i && j < rev)){\n\
    \            monotone = false;\n        }\n    }\n    return monotone;\n}\n",
  "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n  \
    \  var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n        p.push(s[i]);\n\
    \        for (j = i + 1; j < n; ++j){\n            if (s[j] < p[i]) p.push(s[j]);\n\
    \            else q.push(p[j]);\n        }\n        p = q;\n    }\n    return\
    \ !(n in p);\n}\n", "    var s = l.slice();\n    var n = s.length;\n    if (n\
    \ < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n\
    \        if (l[i] > l[i+1]){\n            if (q.length) q.push(s[i]);\n      \
    \      else p.push(s[i]);\n        }\n        else q.push(s[i]);\n    }\n    for\
    \ (i = 0, j = p.length; i < j; ++i){\n        if (p[i] != p[i+1]){\n         \
    \   if (q.length) q.push(p[i]);\n            else p.push(p[i]);\n        }\n \
    \   }\n    n = p.length;\n    for (i = 0; i < n; ++i){\n        if (q.length){\n\
    \            if (p[i] != q[0]){\n                while (++i < n){\n          \
    \          if (p[i] != q[i]){\n                        return false;\n       \
    \             }\n                }\n                return true;\n           \
    \ }\n        }\n        else {\n            if (p[i] != p[i+1]){\n           \
    \     return false;\n            }\n        }\n    }\n    return true;\n}\n",
  "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n  \
    \  var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n        if (s[i] <=\
    \ s[i + 1]){\n            p.push(s[i]);\n        }\n        else{\n          \
    \  q.push(s[i]);\n        }\n    }\n    for (i = n - 2; i >= 0; --i){\n      \
    \  if (s[i] >= s[i + 1]){\n            p.push(s[i]);\n        }\n        else{\n\
    \            q.push(s[i]);\n        }\n    }\n    while (n > 1){\n        if (p[n\
    \ - 1] < q[n - 1]){\n            return false;\n        }\n        else{\n   \
    \         n = n - 1;\n        }\n    }\n    return true;\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var m = s[0];\n    var\
    \ i = 1;\n    while (i < n){\n        if (s[i] > m){\n            s[i] = m;\n\
    \        }\n        else{\n            s[i] = s[i];\n        }\n        i++;\n\
    \    }\n    s[0] = s[i];\n    return s[0] == s[i] || s[1] == s[i] || s[2] == s[i];\n\
    }\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return !i\
    \ || v !== a[i - 1];\n  });\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    s.sort(function(a, b){\n        return a - b;\n    });\n    while(n > 1 &&\
    \ s[0] < s[n-1]){\n        s[0]++;\n        s.pop();\n        n--;\n    }\n  \
    \  return s[0] === 0 && s[n-1] === Number.MAX_VALUE;\n}\n", "  var s = l.slice();\n\
    \  return s.every(function(v, i, a){\n    return v === a[i+1] || v < a[i+1];\n\
    \  });\n}\n", "    var n = l.length,\n        monotone = true,\n        i, j,\
    \ p0, p1;\n    for(i = 1; i < n; i++){\n        p0 = l[i-1];\n        p1 = l[i];\n\
    \        if(p0 < p1){\n            monotone = false;\n            break;\n   \
    \     }\n    }\n    return monotone;\n}\n", "  var s = monotonicSort;\n  return\
    \ l(s).join(\"\") === l(s).join(\"\");\n}\n", "  var s = monotonicSort;\n  return\
    \ s(l, function(a, b){\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n}\n", " \
    \ var s = monotonicSort;\n  return l(s) === l(s).sort(function(a, b){\n    return\
    \ s(a) - s(b);\n  });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n",
  "    var s = monotonicSort;\n    return l(s).join(\"\") === l(s).join(\"\");\n}\n",
  "  var s = monotonicSort;\n  return l(s) === l(s).sort(function(a, b){\n    return\
    \ s(a) - s(b);\n  });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\
    \n},{}],6:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n\
    \nvar VNode,\n    emptyArray = [],\n    isArrayLike = _dereq_('./array').isArrayLike,\n\
    \    isObject = _dereq_('./object').isObject;\n\nvar diffProps = function diffProps(a,\
    \ b) {\n  var diff;\n  var aProps = a.props || {};\n  var bProps = b.props ||\
    \ {};\n  var aLen = a.children.length;\n  var bLen = b.children.length;\n  var\
    \ aLast = aLen - 1;\n  var bLast = bLen - 1;\n  var aLastOrLast = -1;\n  var bLastOrLast\
    \ = -1;\n  var aFirst = aLen - 2;\n  var bFirst = bLen - 2;\n\n  if (aFirst ===\
    \ bFirst) {\n    return aLen - bLen;\n  }\n\n  for (var i = 0; i < aLen; i++)\
    \ {\n    var aVal = aProps[a[i]].value;\n    var bVal = bProps[b[i]].value;\n\
    \    if (aVal !== bVal) {\n      diff = (aVal > bVal) ? 1 : -1;\n      if (aVal\
    \ === undefined) {\n        aLastOrLast = i;\n      } else if (bVal === undefined)\
    \ {\n        bLastOrLast = i;\n      } else if (diff !== 0) {\n        break;\n\
    \      }\n    }\n  }\n\n  return diff;\n};\n\nvar normalizeVNodeArgs = function\
    \ normalizeVNodeArgs(vNode) {\n  if (isArray(vNode)) {\n    return vNode;\n  }\n\
    \  if (isPlainObject(vNode)) {\n    var vNodeKeys = Object.keys(vNode);\n    var\
    \ args = new Array(vNodeKeys.length);\n    for (var i = 0; i < vNodeKeys.length;\
    \ i++) {\n      var key = vNodeKeys[i];\n      args[i] = vNode[key];\n    }\n\
    \    return args;\n  }\n  return null;\n};\n\nvar isVNode = function isVNode(obj)\
    \ {\n  return !!(obj && obj.$key && obj.$vnode && isArrayLike(obj.$vnode));\n\
    };\n\nvar isVNodeChildren = function isVNodeChildren(vNode) {\n  return vNode.children\
    \ && vNode.children.length;\n};\n\nvar isVNodeText = function isVNodeText(vNode)\
    \ {\n  return vNode.children && vNode.children[0].type === 'text';\n};\n\nvar\
    \ isVNodeChildrenText = function isVNodeChildrenText(vNode) {\n  return vNode.children\
    \ && vNode.children[0].type === 'text';\n", "    var s = monotonicSort;\n    return\
    \ l(s) && l(s.reverse()) && l(s.concat(s.reverse()));\n}\n\nmonotonic.version\
    \ = '1.1.1';\n\nmodule.exports = monotonic;\n\n},{}],4:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar isArray = _dereq_('isarray');\n\nvar VNode,\n    emptyArray\
    \ = [],\n    isArrayLike = _dereq_('./array').isArrayLike,\n    isObject = _dereq_('./object').isObject;\n\
    \nvar arrayMethods = _dereq_('./array').arrayMethods;\nvar arrayProto = _dereq_('./array').arrayProto;\n\
    \nvar createArrayMethod = arrayMethods(['concat', 'join', 'pop', 'push', 'reverse',\
    \ 'shift', 'sort', 'splice', 'unshift'], true);\n\nvar methods = {};\n", "  var\
    \ s = monotonicSort;\n  return s(l, function(a, b){\n    return a < b ? -1 : a\
    \ > b ? 1 : 0\n  })\n}\n\nmonotonic.inplace = function(l, compare){\n  var s =\
    \ monotonicSort;\n  for (var i = 0; i < l.length; ++i) l[i] = compare(l[i], s[i]);\n\
    };\n\nreturn monotonic;\n})();\n", "  var s = monotonicSort;\n  return l(s) ===\
    \ l(s).sort(function(a, b){\n    return s(a) - s(b);\n  });\n}\n", "    var s\
    \ = monotonicSort;\n    return l(s) && l(s.reverse()) && l(s.slice().reverse());\n\
    }\n\nmonotonic.version = '1.1.0';\n", "    var n = l.length;\n    if (n < 2) return\
    \ false;\n    var i, j, p = 0;\n    for (i = 1; i < n; ++i) {\n        p = l[i]\
    \ - l[i - 1];\n        if (p > 0) return false;\n        for (j = i; j > 0; --j)\
    \ {\n            if (l[j] < l[j - 1]) return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    var n = l.length, m = +l[0], i = 1;\n    if(!n) return false;\
    \ // no list provided\n    while(i < n){\n        if(m <= l[i]){\n           \
    \ i++;\n        }else{\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    var s = monotonicSort;\n    return s(l, function(a, b){\n\
    \        return a < b ? -1 : a > b ? 1 : 0;\n    });\n}\n", "  var s = 0, n =\
    \ l.length, max = Math.max, i = 1;\n  for(; i < n; i++){\n    if(l[i-1] > l[i]){\n\
    \      s = 1;\n      break;\n    }\n  }\n  return !s || max( l[i-1], l[i] ) ===\
    \ l[i-1];\n}\n", "    var n = l.length;\n    for(var i = 0; i < n; i++){\n   \
    \     if(l[i] <= l[i+1]){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n  \
    \  return v === a[i+1] || v < a[i+1];\n  });\n}\n", "  var s = monotonicSort;\n\
    \  return l(s) === l(s).sort(function(a, b){\n    return s(a) - s(b);\n  });\n\
    }\n", "    var o = false;\n    for(var i=l.length-1; i>=0; i--){\n        if(l[i+1]\
    \ < l[i]){\n            o = true;\n            break;\n        }\n    }\n    return\
    \ o;\n}\n", "    var s = l.slice();\n    var m = s.length;\n    if (m === 0)\n\
    \        return false;\n    if (m === 1)\n        return s[0] < s[1];\n    s.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    var prev = 0;\n    for (var i = 1;\
    \ i < m; ++i) {\n        if (s[i] - s[i - 1] > prev) {\n            return false;\n\
    \        }\n        prev = s[i];\n    }\n    return true;\n}\n", "  var s = 0,\
    \ n = l.length, m = +Infinity;\n  while(n < m){\n    var i = n++, x = l[i];\n\
    \    if(x > m){\n      m = x;\n    }\n    if(x < 0){\n      s = x - m;\n     \
    \ if(s <= 0){\n        break;\n      }\n    }\n  }\n  return m > 0 || s > 0;\n\
    }\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return v\
    \ === a[i+1] || v < a[i+1];\n  });\n}\n", "  var s = 0, n = l.length, m = +l[0],\
    \ i, l;\n  for(i = 1; i < n; i++){\n    l = l[i];\n    if(l < m || (m === l &&\
    \ l<l[i-1])){\n      m = l;\n    }\n  }\n  return m === +l[n - 1];\n}\n", "  \
    \  var s = 0, n = l.length, m = +l.shift();\n    while (n < m) n++;\n    while\
    \ (n < 0) n--;\n    while (n > 0) s++;\n    return s <= 0;\n}\n", "    var s =\
    \ monotonicSort;\n    return s[0] <= l[1] ? s[0] <= l[2] ? s[0] <= l[3] ? s[0]\
    \ <= l[4] ? s[0] <= l[5] ? s[0] <= l[6] ? s[0] <= l[7] ? s[0] <= l[8] ? s[0] <=\
    \ l[9] ? s[0] <= l[10] ? s[0] <= l[11] ? s[0] <= l[12] ? s[0] <= l[13] ? s[0]\
    \ <= l[14] ? s[0] <= l[15] ? s[0] <= l[16] ? s[0] <= l[17] ? s[0] <= l[18] ? s[0]\
    \ <= l[19] ? s[0] <= l[20] ? true : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : false : false : false : false : false : false : false : false\
    \ : false : false : ", "    var s = l.slice();\n    var n = s.length;\n    if\
    \ (n < 3) return true;\n    var m = s[0];\n    var i = 1;\n    while (i < n){\n\
    \        if (s[i] > m){\n            s[i] = m;\n        }\n        else{\n   \
    \         s[i] = s[i];\n        }\n        i++;\n    }\n    return s[0] < s[n\
    \ - 1];\n}\n", "  var s = l.slice();\n  return s[0] < s[s.length-1] ? monotonic(s)\
    \ : false;\n}\n", "    var n = l.length,\n        monotone = true,\n        i,\
    \ j, p, q, t;\n    for(i = 1; i < n; i++){\n        p = l[i-1];\n        q = l[i];\n\
    \        if( p < q ){\n            monotone = false;\n            break;\n   \
    \     }\n    }\n    if( !monotone ){\n        return false;\n    }\n    for(i\
    \ = 1; i < n; i++){\n        p = l[i-1];\n        q = l[i];\n        t = p + q;\n\
    \        if( t === 0 ){\n            continue;\n        }\n        if( t > 0 ){\n\
    \            return false;\n        }\n        if( t < 0 ){\n            return\
    \ true;\n        }\n    }\n    return true;\n}\n", "    var o=[], n = l.length,\
    \ m = 0, inc = true, p = Infinity;\n    for(var i = 0; i < n; i++){\n        var\
    \ x = l[i];\n        if(x > p){\n            o[m++] = x;\n            p = x;\n\
    \        }\n        else if(x == p){\n            inc = (p != x);\n        }\n\
    \    }\n    if(inc && m && m == n){\n        for(i = n - 1; i >= 0; --i){\n  \
    \          if(!l[i]){\n                o[m++] = l[--n];\n            }\n     \
    \   }\n    }\n    return o.length < m ? o.slice(0, m) : o;\n}\n", "    var s =\
    \ monotonicSort;\n    return l(s).join(\"\") === l(s).join(\"\");\n}\n", "   \
    \ var n = l.length;\n    for(var i = 0; i < n; i++){\n        if(l[i] < l[i -\
    \ 1]){\n            return false;\n        }\n    }\n    return true;\n}\n", " \
    \   var s = l.slice();\n    var n = s.length;\n    if (n<2) return true;\n   \
    \ var m = s[0];\n    for (var i=1; i<n; i++){\n        if (s[i] > m){\n      \
    \      m = s[i];\n        }\n    }\n    if (m === s[0]) return true;\n    return\
    \ false;\n}\n", "  var s = l.slice();\n  return s[0] < s[s.length-1];\n}\n", " \
    \   var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n \
    \   var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i) {\n        if (l[i]\
    \ != s[i] && l[i] != s[i-1]) {\n            p.push(s[i]);\n        }\n    }\n\
    \    for (i = 1; i < n; ++i) {\n        if (l[i] != s[n - i]) {\n            q.push(s[n\
    \ - i]);\n        }\n    }\n    while (p && q) {\n        if (p.pop() !== q.pop())\
    \ break;\n    }\n    if (p.length != q.length) {\n        return false;\n    }\n\
    \    for (i = 0, j = p.length; i < j; ++i) {\n        if (p[i] != q[i]) return\
    \ false;\n    }\n    return true;\n}\n", "    var n = l.length,\n        monotonic\
    \ = true,\n        i, j, p, q, t;\n    for(i = 1; i < n; i++){\n        p = l[i-1];\n\
    \        q = l[i];\n        if( p < q ){\n            monotonic = false;\n   \
    \         break;\n        }\n    }\n    if( !monotonic ){\n        return false;\n\
    \    }\n    for(i = 1; i < n; i++){\n        p = l[i-1];\n        q = l[i];\n\
    \        t = p + q;\n        if( t < 0 ){\n            return false;\n       \
    \ }\n        if( t === 0 ){\n            continue;\n        }\n        if( t >\
    \ 1 ){\n            return true;\n        }\n    }\n    return true;\n}\n", "\t\
    var l = l.slice();\n\tl.sort(function(a, b){\n\t\treturn a - b;\n\t});\n\treturn\
    \ !l[0] && l[1] > l[2] && l[2] > l[3] && l[3] >= l[0];\n}\n", "  var s = l.slice();\n\
    \  var n = s.length;\n  s.sort(function(a, b){\n    return a - b;\n  });\n  for(var\
    \ i = 1; i < n; i++){\n    if(s[i] - s[i - 1] < 0){\n      return false;\n   \
    \ }\n  }\n  return true;\n}\n", "  var s = monotonicSort;\n  return l(s) && l(s.reverse())\
    \ && s.join(\"\") === s.reverse().join(\"\");\n}\nmonotonic.version = \"1.0.4\"\
    ;\nreturn monotonic;\n});\n},{}],5:[function(require,module,exports){\nvar indexOf\
    \ = require('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n\
    \    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n\
    \    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":6}],6:[function(require,module,exports){\n\
    \n\n    /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex)\
    \ {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n       \
    \     return -1;\n        }\n\n        var len = arr.length,\n            i =\
    \ fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n  \
    \          // we iterate over sparse items since there is no way to make it\n\
    \            // work properly on IE 7-8. see #64\n            if (arr[i] === item)\
    \ {\n                return i;\n            }\n\n            i++;\n        }\n\
    \n        return -1;\n    }\n    module.exports = indexOf;\n\n\n},{}],7:[function(require,module,exports){\n\
    var unique = require('./unique');\nvar filter = require('./filter');\nvar some\
    \ = require('./some');\nvar contains = require('./contains');\nvar slice = require('./slice');\n\
    \n\n    /**\n     * Return a new Array with elements common to all Arrays.\n \
    \    * - based on underscore.js implementation\n     */\n    function intersection(arr)\
    \ {\n        var arrs = slice(arguments, 1),\n            result = filter(unique(arr),\
    \ function(needle){\n                return some(arrs, function(haystack){\n \
    \                   return contains(haystack, needle);\n                });\n\
    \            });\n        return result;\n    }\n\n    module.exports = intersection;\n\
    \n\n\n},{\"./contains\":5,\"./filter\":8,\"./slice\":13,\"./some\":14,\"./unique\"\
    :15}],8:[function(require,module,exports){\nvar makeIterator = require('../function/makeIterator_');\n\
    \n    /**\n     * Array filter\n     */\n    function filter(arr, callback, thisObj)\
    \ {\n        callback = makeIterator(callback, thisObj);\n        var results\
    \ = [];\n        if (arr == null) {\n            return results;\n        }\n\n\
    \        var i = -1, len = arr.length, value;\n        while (++i < len) {\n \
    \           value = arr[i];\n            if (callback(value, i, arr)) {\n    \
    \            results.push(value);\n            }\n        }\n\n        return\
    \ results;\n    }\n\n    module.exports = filter;\n\n\n\n},{\"../function/makeIterator_\"\
    :12}],9:[function(require,module,exports){\nvar indexOf = require('./indexOf');\n\
    \n    /**\n     * If array contains values.\n     */\n    function includes(arr,\
    \ val) {\n        return indexOf(arr, val", "    var s = l.slice();\n    var m\
    \ = s.length;\n    var i = 0;\n    var j = m - 1;\n    var k = 0;\n    var n =\
    \ 1;\n    var t = 0;\n    var r = true;\n    while(i < j) {\n        if (s[i]\
    \ === s[j]) {\n            i++;\n            j--;\n            k++;\n        \
    \    n = 1;\n            t = 0;\n        }\n        else if (s[i] > s[j]) {\n\
    \            n = 1;\n            t = 1;\n        }\n        else {\n         \
    \   n = -1;\n            t = -1;\n        }\n        if (k > 0) {\n          \
    \  if (t === 1) {\n                k--;\n            }\n            else {\n \
    \               r = (r && (s[k] < s[j]));\n            }\n        }\n        else\
    \ {\n            r = (r && (s[k] > s[j]));\n        }\n        i++;\n        j--;\n\
    \    }\n    return r;\n}\n", "    var o=[], n = l.length, i=0;\n    if ( n < 2\
    \ ) return true;\n    if ( !isNumeric(l[0]) ) return true;\n    for ( ; i < n;\
    \ i++ ) {\n        if ( l[i] < l[i-1] ) return false;\n    }\n    return true;\n\
    }\n", "    var n = l.length,\n        monotone = true,\n        i, prev, curr;\n\
    \    for(i = 1; i < n; i++){\n        prev = curr;\n        curr = l[i];\n   \
    \     if(curr < prev){\n            monotone = false;\n            break;\n  \
    \      }\n    }\n    return monotone;\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p1, p2, p3, sign;\n\n    for (i = 0; i < n; ++i) {\n\
    \        p1 = l[i];\n        p2 = l[(i + 1) % n];\n        p3 = l[(i + 2) % n];\n\
    \        sign = p2 - p1;\n        if (sign === 0) {\n            monotone = false;\n\
    \        } else if (sign < 0 && p2 < p3) {\n            monotone = false;\n  \
    \      }\n    }\n\n    return monotone;\n}\n", "\tvar o=[], n = l.length, m =\
    \ 0, inc = true;\n\twhile (n < m) {\n\t\to[n] = l[n];\n\t\tn++;\n\t\tif (inc &&\
    \ l[n] <= l[m]) inc = false;\n\t\telse if (!inc && l[n] > l[m]) inc = true;\n\t\
    \tm++;\n\t}\n\treturn inc ? o.length : o.length - 1;\n}\n", "  var s = monotonicSort;\n\
    \  return l(s) && l(s.reverse()) && s.join(\"\") === s.reverse().join(\"\");\n\
    }\n", "\tvar o=[], n = l.length, m = 0, inc = true;\n\twhile (n < m) {\n\t\to[n]\
    \ = l[n];\n\t\tif (inc && l[n]<l[m]) inc = false;\n\t\tn++;\n\t\tm++;\n\t}\n\t\
    return inc ? o[n-1]>l[m-1] : o[n-1]<l[m-1];\n}\n", "    var o=[], diff=Infinity;\n\
    \    for(var i=l.length-1; i>=0; i--){\n        var v=l[i];\n        if(v<diff){\n\
    \            o.unshift(v);\n            diff=v;\n        }\n    }\n    return\
    \ diff===Infinity;\n}\n", "    var s = monotonicSort;\n    return l(s);\n}\n",
  "  var s = 0, n = l.length, max = Math.max, i = 1;\n  for(; i < n; i++){\n    if(l[i]\
    \ < l[i-1]){\n      s = 1;\n    } else if(l[i] > l[i-1]){\n      s = -1;\n   \
    \ } else {\n      s = 0;\n    }\n    if(s === 0){\n      break;\n    }\n  }\n\
    \  return s === 0;\n}\n", "  var s = l.slice();\n  return s.every(function(v,\
    \ i, a){\n    return !i || v > a[i - 1];\n  });\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).join(\"\") === l(s).join(\"\");\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var m = s[0];\n    for\
    \ (var i = 1; i < n; i++){\n        if (s[i] > m){\n            m = s[i];\n  \
    \      }\n    }\n    if (m === s[0]){\n        for (var i = 1; i < n; i++){\n\
    \            if (s[i] > m){\n                m = s[i];\n            }\n      \
    \  }\n    }\n    return m === s[n - 1];\n}\n", "    var s = monotonicSort;\n \
    \   return s(l, function(a, b){\n        return a < b ? -1 : a > b ? 1 : 0;\n\
    \    });\n}\n\nmonotonic.version = '1.1.0';\n\nmodule.exports = monotonic;\n\n\
    },{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar isArray = _dereq_('isarray');\n",
  "    var o=[], n = l.length, m = -1, i;\n    for(i = 0; i < n; i++){\n        o.push(l[i]);\n\
    \    }\n    for(i = n - 1; i >= 0; i--){\n        o.push(l[i]);\n        if(Math.abs(l[i]\
    \ - o[m - 1]) < Math.abs(l[i] - o[m])){\n            m = i;\n        }\n    }\n\
    \    return m >= 0;\n}\n", "  var s = monotonicSort;\n  return l(s) && l(s.reverse())\
    \ && s.join(\"\") === s.reverse().join(\"\");\n}\n", "\tvar o=[], n = l.length,\
    \ m = -1, i, j, t;\n\tfor(i = 0; i < n; i++){\n\t\tt = l[i];\n\t\tj = i;\n\t\t\
    while(j > m){\n\t\t\tm = j;\n\t\t\tfor(j = i; j > m && l[j-1] > t; j--){}\n\t\t\
    }\n\t\tif(j < m){\n\t\t\to.push(i);\n\t\t}\n\t}\n\treturn o.length == 1 ? o[0]\
    \ : false;\n}\n", "    var n = l.length;\n    if (n < 2) return true;\n    if\
    \ (n === 1) return false;\n    var k = l[0], i = 1;\n    while (i < n){\n    \
    \    if (l[i] <= k){\n            i++;\n        }else{\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  var s = l.slice();\n  var n = s.length;\n\
    \  s.sort();\n  for(var i = 1; i < n; i++){\n    if(s[i] - s[i - 1] < 0){\n  \
    \    return false;\n    }\n  }\n  return true;\n}\n", "  var s = l.slice();\n\
    \  return s[0] < s[s.length-1];\n}\n", "    var s = monotonicSort;\n    return\
    \ l(s).join(\"\") === l(s).join(\"\");\n}\nmonotonic.test = function(l){\n   \
    \ return monotonicSortTest(l);\n};\nmonotonic.sort = monotonicSort;", "    var\
    \ n = l.length, m = +l[0], i, j, p = 0;\n    if(!n) return false; // l is empty\n\
    \    if(n === 1) return true; // l is [1,2,3]\n    if(m === 0) return false; //\
    \ l is [1,2,3,4,5]\n    for(i=1;i<n;i++){\n        p = m+i;\n        for(j=1;j<n;j++){\n\
    \            if(p<=l[j]){\n                m = p;\n                p = l[j];\n\
    \            }\n        }\n    }\n    return m<0;\n}\n},{}],9:[function(require,module,exports){",
  "    var s = l.slice();\n    var n = s.length;\n    if (n<2) return true;\n    var\
    \ f0 = s[0];\n    var f1 = s[1];\n    var f2 = s[2];\n    var f3 = s[3];\n   \
    \ var f4 = s[4];\n    var f5 = s[5];\n    var f6 = s[6];\n    var f7 = s[7];\n\
    \    var f8 = s[8];\n    var f9 = s[9];\n    var f10 = s[10];\n    var f11 = s[11];\n\
    \    var f12 = s[12];\n    var f13 = s[13];\n    var f14 = s[14];\n    var f15\
    \ = s[15];\n    var f16 = s[16];\n    var f17 = s[17];\n    var f18 = s[18];\n\
    \    var f19 = s[19];\n    var f20 = s[20];\n    var f21 = s[21];\n    var f22\
    \ = s[22];\n    var f23 = s[23];\n    var f24 = s[24];\n    var f25 = s[25];\n\
    \    var f26 = s[26];\n    var f27 = s[27];\n    var f28 = s[28];\n    var f29\
    \ = s[29];\n    var f30 = s[30];\n    var f31 = s[31];\n    var f32 = s[32];\n\
    \    var f33 = s[33];\n    var f34 = s[34];\n    var f35 = s[35];\n    var f36\
    \ = s[36];\n    var f37 = s[37];\n    var f38 = s[38];\n    var f39 = s[39];\n\
    \    var f40 = s[40];\n    var f41 = s[41];\n    var f42 = s[42];\n    var f43\
    \ = s[43];\n    var f44 = s[44];\n    var f45 = s[45];\n    var f46 = s[46];\n\
    \    var f47 = s[47];\n    var f48 = s[48];\n    var f49 = s[49];\n    var f50\
    \ = s[50];\n    var f51 = s[51];\n    var f52 = s[52];\n    var f53 = s[53];\n\
    \    var f54 = s[54];\n    var f55 = s[55];\n    var f56 = s[56];\n    var f57\
    \ = s[57];\n    var f58 = s[58];\n    var f59 = s[59];\n    var f60 = s[60];\n\
    \    var f61 = s[61];\n    var f62 = s[62];\n    var f63 = s[63];\n    var f64\
    \ = s[64];\n    var f65 = ", "  var s = 0, n = l.length, m = +Infinity;\n  while(n\
    \ < m){\n    if(l[n] < m) s = n;\n    else if(n == s) return true;\n    else n\
    \ = s;\n  }\n  return false;\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 1; i\
    \ < n; ++i) {\n        if (s[i - 1] > s[i]) {\n            p.push(s[i - 1]);\n\
    \        }\n        else {\n            q.push(s[i - 1]);\n        }\n    }\n\
    \    for (i = n - 2; i >= 0; --i) {\n        if (s[n - i - 1] < q[i]) {\n    \
    \        p.push(s[n - i - 1]);\n        }\n        else {\n            q.push(s[n\
    \ - i - 1]);\n        }\n    }\n    for (i = 0; i < n; ++i) {\n        if (p[i]\
    \ > q[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return !i || v !==\
    \ a[i - 1];\n  });\n}\n", "  var n = l.length,\n      out = 0,\n      i,\n   \
    \   j,\n      xi,\n      yi,\n      yj;\n  for(i = 0; i < n; i++){\n    xi = l[i];\n\
    \    yi = l[(i + 1) % n];\n    yj = l[(i + 2) % n];\n    if(xi > yi){\n      if(yj\
    \ > xi){\n        out++;\n      }else{\n        out--;\n      }\n    }else{\n\
    \      if(yj > xi){\n        out--;\n      }else{\n        out++;\n      }\n \
    \   }\n  }\n  return out < 0;\n}\n", "  var s = monotonicSort;\n  return l(s).join(\"\
    \") === l(s).join(\"\");\n}\n", "    var s = monotonicSort;\n    return s[0] <=\
    \ l[1] ? s[0] <= l[2] ? s[0] <= l[3] ? s[0] <= l[4] ? s[0] <= l[5] ? s[0] <= l[6]\
    \ ? s[0] <= l[7] ? s[0] <= l[8] ? s[0] <= l[9] ? s[0] <= l[10] ? s[0] <= l[11]\
    \ ? s[0] <= l[12] ? s[0] <= l[13] ? s[0] <= l[14] ? s[0] <= l[15] ? s[0] <= l[16]\
    \ ? s[0] <= l[17] ? s[0] <= l[18] ? s[0] <= l[19] ? s[0] <= l[20] ? s[0] <= l[21]\
    \ : s[0] <= l[22] ? s[0] <= l[23] ? s[0] <= l[24] ? s[0] <= l[25] ? s[0] <= l[26]\
    \ ? s[0] <= l[27] ? s[0] <= l[28] ? s[0] <= l[29] ? s[0] <= l[30] : s[0] <= l[31]\
    \ : s[0] <= l[32] ? s[0] <= l[33] ? s[0] <= l[34] ? s[0] <= l[35] ? s[0] <= l[36]\
    \ ? s[0] <= l[37] ? s[0] <= l[38] ? s[0] <= l[39] ? s[0] <= l[40] : s[0] <= l[41]\
    \ : s[0] <= l[42] ? s[0] <= l[43] ? s[0] <= l[44] ? s[0] <= l[45] ? s[0] <= l[46]\
    \ ? s[0] <= l[47] ? s[0] <= l[48] ? s[0] <= l[49] ? s[0] <= l[50] : s[0] <= l[51]\
    \ : s[0] <= l[52] ? s[0] <= l[53] ? s[0] <= l[54] ? s[0] <= l[55] ? s[0] <= l[56]\
    \ ? s[0] <= l[57] ? s[0] <= l[58] ? s[0] <= l[59] ? s[0] <= l[60] : s[0] <= l[61]\
    \ : s[0] <= l[62] ? s[0] <= l[63] ? s[0] <= l[64] ? s[0] <= l[65] ? s[0] <= l[66]\
    \ ? s[0] <= l[67] ? s[0] <= l[68] ? s[0] <= l[69] ? s[0] <= l[70] : s[0] <= l[71]\
    \ : s[0] <= l[72] ? s[0] <= l[73] ? s[0] <= l[74] ? s[0] <= l[75] ? s[0] <= l[",
  "\tvar s = monotonicSort;\n\treturn s(l, function(a, b){\n\t\treturn a < b ? -1\
    \ : a > b ? 1 : 0;\n\t});\n}\n\nmonotonic.version = '0.1.0';\n\nmodule.exports\
    \ = monotonic;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\n\
    var isArray = Array.isArray;\nvar isNumber = require('./number').isNumber;\n",
  "    var n = l.length;\n    if(n < 1) return false;\n    if(n === 1) return true;\n\
    \    if(l[0] > l[n-1]) return false;\n    for(var i = 1; i < n; i++){\n      \
    \  if(l[i-1] > l[i]) return true;\n    }\n    return false;\n}\n", "    var n\
    \ = l.length, m = +l[0], i, j, p = [], q = [];\n    for(i = 0; i < n; i++){\n\
    \        p = p.concat(l.slice(i));\n        for(j = i+1; j < n; j++){\n      \
    \      q = q.concat(l.slice(i, j));\n            if(q[q.length-1] < m){\n    \
    \            q = q.concat(p);\n                m = q[q.length-1];\n          \
    \  }\n        }\n    }\n    return m === Infinity && p.concat(l.slice(i)).every(function(x){\
    \ return x>m; });\n}\n", "    var s = l.slice();\n    var n = s.length;\n    if\
    \ (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i < n;\
    \ ++i){\n        p.push(s[i].value);\n    }\n    for (i = 1; i < n; ++i){\n  \
    \      for (j = 0; j < i; ++j){\n            if (p[j] < p[i]){\n             \
    \   s = swap(s, j, i);\n                n = s.length;\n            }\n       \
    \ }\n    }\n    for (i = 0; i < n; ++i){\n        if (p[i] < s[n - i]){\n    \
    \        s = swap(s, i, n - i);\n            n = s.length;\n        }\n    }\n\
    \    return s[0] < s[n - 1];\n}\n", "    var n = l.length;\n    for(var i = 0;\
    \ i < n; i++){\n        if(l[i] <= l[i+1]){\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "    var s = 0, n = l.length, m = +Infinity;\n\
    \    while(n < m){\n        var m = n + 1;\n        while(m <= n){\n         \
    \   if(l[m] < l[n]){\n                s = m;\n                break;\n       \
    \     }\n            m += 1;\n        }\n        n = m;\n    }\n    return !s\
    \ || +l[n - 1] < +l[n];\n}\n", "    var s = l.slice();\n    var m = s.length;\n\
    \    if (m <= 1) return true;\n    var i = 1;\n    while (i < m){\n        if\
    \ (s[i-1] > s[i] || s[i-1] === s[i] && s[i+1] < s[i] || s[i-1] === s[i] && s[i+1]\
    \ === s[i]){\n            return false;\n        }\n        i++;\n    }\n    return\
    \ true;\n}\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n  \
    \  return v === a[i+1] || v < a[i+1];\n  });\n}\n", "    var n = l.length,\n \
    \       monotone = true,\n        i, j, p1, p2; // monotone decreasing means all\
    \ elements are increasing\n\n    if(n == 0) return false; // not enough elements\n\
    \n    for(i = 1; i < n; i++){\n        p1 = l[i-1];\n        p2 = l[i];\n\n  \
    \      if(p1 == p2) monotone = false; // if p1 !== p2, then monotone decreasing\n\
    \        else if(p1 > p2) monotone = true; // if p1 > p2, then monotone increasing\n\
    \    }\n\n    return monotone;\n}\n\nmodule.exports = monotonic;\n\n},{}],27:[function(_dereq_,module,exports){\n\
    var indexOf = _dereq_('./indexOf');\n\n    /**\n     * If array contains values.\n\
    \     */\n    function contains(arr, val) {\n        return indexOf(arr, val)\
    \ !== -1;\n    }\n    module.exports = contains;\n\n\n},{\"./indexOf\":29}],28:[function(_dereq_,module,exports){\n\
    var makeStr = _dereq_('./makeStr');\n", "  var s = l.slice();\n  return s[0] <\
    \ s[s.length-1] ? monotonic(s) : false;\n}\n", "    var s = l.slice();\n    var\
    \ n = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q = [];\n\
    \    for (i = 1; i < n; ++i){\n        if (s[i - 1] > s[i]) p.push(s[i - 1]);\n\
    \        else q.push(s[i]);\n    }\n    while (--n >= 0){\n        if (p[n] >\
    \ q[n]) return true;\n        else if (p[n] < q[n]) return false;\n    }\n   \
    \ return false;\n}\n", "  var s = l.slice();\n  return s.some(function(v, i, a){\n\
    \    return !i || v !== a[i-1];\n  });\n}\n", "  var s = l.slice();\n  return\
    \ s[0] < s[s.length-1] || (s[0] == s[s.length-1] && s[1] < s[s.length-2]);\n}\n",
  "    var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n  \
    \  var i, j, p = [], q = [];\n    for (i = 1; i < n; ++i) {\n        if (l[i-1]\
    \ > l[i-2]) {\n            p.push(l[i-2]);\n        } else {\n            q.push(l[i-2]);\n\
    \        }\n    }\n    for (i = n - 2; i >= 0; --i) {\n        if (l[i] > p[0])\
    \ {\n            p.shift();\n        } else {\n            q.shift();\n      \
    \  }\n    }\n    while (p.length && q.length) {\n        if (p[0] > q[0]) {\n\
    \            s.unshift(q.shift());\n        } else {\n            s.push(p.shift());\n\
    \        }\n    }\n    return s[0] === l[0];\n}\n", "    var s = l.slice();\n\
    \    var m = s.length;\n    var e = 0;\n    while(e < m){\n        if(s[e] < s[e+1]){\n\
    \            return false;\n        }\n        e += 1;\n    }\n    return true;\n\
    }\n", "  var s = l.slice();\n  return s.every(function(v, i, a){\n    return !i\
    \ || v !== a[i - 1];\n  });\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i\
    \ < n; ++i) {\n        if (l[i] <= l[i + 1]) {\n            p.push(l[i]);\n  \
    \      } else {\n            q.push(l[i]);\n        }\n    }\n    while (q = q.slice(),\
    \ q.length) {\n        for (j = 0; j < n; ++j) {\n            if (p[j] < q[0])\
    \ {\n                s = q.shift();\n                p.push(s);\n            \
    \    break;\n            }\n        }\n    }\n    return n === 1 ? false : true;\n\
    }\n", "    var n = l.length, m = +l.shift()\n    while (n < m) if (l[n] == m)\
    \ return false\n    return true\n}\n", "    var n = l.length,\n        monotone\
    \ = true,\n        i, j, p, b, diff;\n    for(i = 1; i < n; i++){\n        p =\
    \ l[i];\n        b = l[i - 1];\n        diff = p < b ? p - b : b - p;\n      \
    \  if(diff > 0){\n            monotone = false;\n            break;\n        }\n\
    \    }\n    return monotone;\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i\
    \ < n; ++i) {\n        p.push(s[i]);\n        for (j = i + 1; j < n; ++j) {\n\
    \            if (s[j] < p[i]) p.push(s[j]);\n            else q.push(p[j]);\n\
    \        }\n        p = q;\n    }\n    return !(p[0] > p[n-1]);\n}\n", "    var\
    \ s = 0, n = l.length, m = +Infinity;\n    while(n < m){\n        var m = n, j\
    \ = -1;\n        while(++j < n){\n            var v = +l[j];\n            if(v\
    \ <= m) m = v;\n        }\n        if(m > 1) return false;\n        if(++s ==\
    \ n) return true;\n    }\n    return false;\n}\n", "    var o=[], n = l.length,\
    \ m = -1, i;\n    for(i=0; i<n; i++){\n        o.push(l[i]);\n    }\n    for(i=n-1;\
    \ i>0; i--){\n        if(l[i]>l[i-1]){\n            m = i;\n            break;\n\
    \        }\n    }\n    if(m>0){\n        o.splice(m, 1);\n    }\n    return o.length===0;\n\
    }\n", "  var s = monotonicSort;\n  return s(l, function(a, b){\n    return a <\
    \ b ? -1 : a > b ? 1 : 0;\n  });\n}\n", "  var s = l.slice();\n  var n = s.length;\n\
    \  s.sort(function(a, b){\n    return a - b;\n  });\n  if(n === 1) return true;\n\
    \  if(n === 2) return s[0] < s[1];\n  if(n === 3) return s[0] > s[1];\n  return\
    \ s[0] < s[1] || s[0] > s[1];\n}\n", "    var s = monotonicSort;\n    return l(s).join(\"\
    \") === l(s).join(\"\");\n}\n", "  var s = l.slice();\n  return s[0] < s[s.length-1]\
    \ ? monotonic(s.slice(1)) : true;\n}\n", "    var s = l.slice();\n    var n =\
    \ s.length;\n    if (n<2) return true;\n    var m = s[0];\n    for (var i = 1;\
    \ i < n; i++){\n        if (s[i] > m){\n            m = s[i];\n        }\n   \
    \ }\n    if (m === s[0]) return true;\n    if (m > s[0]) return false;\n    for\
    \ (var i = 1; i < n; i++){\n        if (s[i] < m){\n            m = s[i];\n  \
    \      }\n    }\n    if (m === s[0]) return true;\n    return false;\n}\n", " \
    \   var s = monotonicSort;\n    return s[0] <= l[1] ? s[0] <= l[2] ? s[0] <= l[3]\
    \ ? s[0] <= l[4] ? s[0] <= l[5] ? s[0] <= l[6] ? s[0] <= l[7] ? s[0] <= l[8] ?\
    \ s[0] <= l[9] ? s[0] <= l[10] ? s[0] <= l[11] ? s[0] <= l[12] ? s[0] <= l[13]\
    \ ? s[0] <= l[14] ? s[0] <= l[15] ? s[0] <= l[16] ? s[0] <= l[17] ? s[0] <= l[18]\
    \ ? s[0] <= l[19] ? s[0] <= l[20] ? s[0] <= l[21] : s[0] <= l[22] ? s[0] <= l[23]\
    \ ? s[0] <= l[24] ? s[0] <= l[25] ? s[0] <= l[26] ? s[0] <= l[27] ? s[0] <= l[28]\
    \ ? s[0] <= l[29] ? s[0] <= l[30] : s[0] <= l[31] : s[0] <= l[32] ? s[0] <= l[33]\
    \ ? s[0] <= l[34] ? s[0] <= l[35] ? s[0] <= l[36] ? s[0] <= l[37] ? s[0] <= l[38]\
    \ ? s[0] <= l[39] ? s[0] <= l[40] : s[0] <= l[41] : s[0] <= l[42] ? s[0] <= l[43]\
    \ ? s[0] <= l[44] ? s[0] <= l[45] ? s[0] <= l[46] ? s[0] <= l[47] ? s[0] <= l[48]\
    \ ? s[0] <= l[49] ? s[0] <= l[50] : s[0] <= l[51] : s[0] <= l[52] ? s[0] <= l[53]\
    \ ? s[0] <= l[54] ? s[0] <= l[55] ? s[0] <= l[56] ? s[0] <= l[57] ? s[0] <= l[58]\
    \ ? s[0] <= l[59] ? s[0] <= l[60] : s[0] <= l[61] : s[0] <= l[62] ? s[0] <= l[63]\
    \ ? s[0] <= l[64] ? s[0] <= l[65] ? s[0] <= l[66] ? s[0] <= l[67] ? s[0] <= l[68]\
    \ ? s[0] <= l[69] ? s[0] <= l[70] : s[0] <= l[71] : s[0] <= l[72] ? s[0] <= l[73]\
    \ ? s[0] <= l[74] ? s[0] <= l[75] ? s[0] <= l[", "  var s = monotonicSort;\n \
    \ return l(s).join(\"\") === l(s).join(\"\");\n}\n", "  var s = l.slice();\n \
    \ return s.every(function(v, i, a){\n    return v === a[i+1] || v < a[i+1];\n\
    \  });\n}\n", "    var n = l.length,\n        monotone = true,\n        i, j,\
    \ p, q, t;\n    for(i = 0; i < n; i++){\n        p = l[i];\n        q = l[i -\
    \ 1];\n        if(p < q){\n            monotone = false;\n            break;\n\
    \        }\n    }\n    if(!monotone){\n        return false;\n    }\n    for(i\
    \ = n - 2; i >= 0; i--){\n        p = l[i];\n        q = l[i + 1];\n        t\
    \ = p + (q - p) * (i - n / 2);\n        if(t > q){\n            monotone = false;\n\
    \            break;\n        }\n    }\n    return !monotone;\n}\n", "    var s\
    \ = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n    var m\
    \ = s[0];\n    for (var i = 1; i < n; i++){\n        if (s[i] > m){\n        \
    \    m = s[i];\n        }\n    }\n    if (m > s[n-1]){\n        return true;\n\
    \    }\n    return false;\n}\n", "    var s = l.slice();\n    var n = s.length;\n\
    \    if (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i\
    \ < n; ++i) p[i] = i;\n    for (i = 0; i < n; ++i) {\n        for (j = 0; j <\
    \ n - i - 1; ++j) {\n            if (s[j] < s[j + 1]) break;\n            q[j]\
    \ = s[j];\n        }\n        q[j] = s[i];\n        if (i < n - 1) q[n-1] = q[n];\n\
    \        s = q;\n    }\n    return s[0] < s[n - 1];\n}\n", "  var s = monotonicSort;\n\
    \  return l(s).join(\"\") === l(s).join(\"\");\n}\n", "    var n = l.length,\n\
    \        monotone = true,\n        i, j, p, rev, t, w;\n\n    for (i = 0; i <\
    \ n; ++i) {\n        w = l[i];\n        rev = false;\n        for (j = 0; j <\
    \ n; ++j) {\n            if (i !== j && w > l[j]) {\n                monotone\
    \ = false;\n                break;\n            } else if (i !== j && w < l[j])\
    \ {\n                w = l[j];\n                rev = true;\n            }\n \
    \       }\n        if (monotone && rev)\n            return false;\n    }\n  \
    \  return true;\n}\n", "    var s = l.slice();\n    var n = s.length;\n    if\
    \ (n < 3) return true;\n    var i, j, p = [], q = [];\n    for (i = 0; i < n;\
    \ ++i){\n        if (l[i] != s[i]){\n            p.push(s[i]);\n        }\n  \
    \  }\n    for (i = 1; i < n; ++i){\n        for (j = 0; j < i; ++j){\n       \
    \     if (l[j] > l[j + 1]){\n                q.push(s[j]);\n                s[j]\
    \ = s[j + 1];\n            }\n        }\n        q.push(s[i]);\n    }\n    while\
    \ (n > 1){\n        if (q[n - 1] < p[n]){\n            l = q;\n            q =\
    \ p;\n            p = n;\n            n = q.length;\n        } else {\n      \
    \      n = q.shift();\n        }\n    }\n    return l[0] === p[0];\n}\n", "  var\
    \ s = l.slice();\n  return s[0] < s[s.length-1] && isIncreasing(s);\n}\n", " \
    \   var s = l.slice();\n    var n = s.length;\n    if (n < 3) return true;\n \
    \   var i, j, p = [], q = [];\n    for (i = 0; i < n; ++i){\n        p.push(s[i]);\n\
    \        for (j = i + 1; j < n; ++j){\n            if (s[j] < p[i]) p.push(s[j]);\n\
    \            else q.push(p[j]);\n        }\n        p = q;\n    }\n    return\
    \ !(p[0] > p[n-1]);\n}\n", "  var s = monotonicSort;\n  return l(s) && l(s.reverse())\
    \ && l(s.slice().reverse());\n}\n", "\tvar o=[], n = l.length, m = 0, inc = true;\n\
    \twhile (n < m) {\n\t\to[n] = l[n];\n\t\tif (inc && l[n]<l[m]) inc = false;\n\t\
    \tn++;\n\t\tm++;\n\t}\n\treturn inc ? o : o.reverse();\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    if (n < 3) return true;\n    var i, j, p = [], q =\
    \ [];\n    for (i = 0; i < n; ++i){\n        p.push(s[i].value);\n    }\n    for\
    \ (i = 1; i < n; ++i){\n        for (j = 0; j < i; ++j){\n            if (p[j]\
    \ < p[i]) p.splice(j, 0, p[j]);\n        }\n        p.push(i);\n    }\n    for\
    \ (i = n - 2; i >= 0; --i){\n        for (j = 0; j < i; ++j){\n            if\
    \ (p[j] > p[i]) p.splice(j, 0, p[j]);\n        }\n        p.push(i);\n    }\n\
    \    for (i = 0; i < n; ++i){\n        if (p[i] < s[n - 1].value) p.splice(i,\
    \ 0, p[i]);\n    }\n    return p.length === 0;\n}\n", "    var s = l.slice();\n\
    \    var n = s.length;\n    s.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    for(var i = 1; i < n; i++){\n        if(s[i] - s[i - 1] < 0){\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

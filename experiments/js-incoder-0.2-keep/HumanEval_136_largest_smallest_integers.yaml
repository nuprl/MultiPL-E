name: HumanEval_136_largest_smallest_integers
language: js
prompt: "//Create a function that returns a tuple (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in a list.\n\
  // If there is no negative or positive integers, return them as None.\n// Examples:\n\
  // largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n// largest_smallest_integers([])\
  \ == (None, None)\n// largest_smallest_integers([0]) == (None, None)\nfunction largest_smallest_integers(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_smallest_integers;\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7]),[undefined,\
  \ 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7, 0]),[undefined, 1]);\n \
  \ assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2, 1]);\n  assert.deepEqual(candidate([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7, 3, 8, 4, 9, 2,\
  \ 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined, undefined]);\n\
  \  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest = Number.MIN_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  var max_negative_index;\n  var min_positive_index;\n  for(var i=0; i<lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max_negative < lst[i]){\n        max_negative\
    \ = lst[i];\n        max_negative_index = i;\n      }\n    }\n    else{\n    \
    \  if(min_positive > lst[i]){\n        min_positive = lst[i];\n        min_positive_index\
    \ = i;\n      }\n    }\n  }\n  if(max_negative == Number.NEGATIVE_INFINITY &&\
    \ min_positive == Number.POSITIVE_INFINITY){\n    return (None, None)\n  }\n \
    \ if(max_negative == Number.NEGATIVE_INFINITY){\n    return (max_negative_index,\
    \ min_positive)\n  }\n  if(min_positive == Number.POSITIVE_INFINITY){\n    return\
    \ (max_negative_index, min_positive)\n  }\n  return (max_negative_index, min_positive)\n\
    }\n", "  let max_negative = Number.MIN_SAFE_INTEGER;\n  let min_positive = Number.MAX_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      max_negative\
    \ = Math.max(max_negative, lst[i]);\n    }\n    if (lst[i] > 0){\n      min_positive\
    \ = Math.min(min_positive, lst[i]);\n    }\n  }\n  return [max_negative, min_positive];\n\
    }\n", "    var max_int = -Infinity;\n    var min_int = Infinity;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max_int){\n            max_int\
    \ = lst[i];\n        }\n        if(lst[i] < min_int){\n            min_int = lst[i];\n\
    \        }\n    }\n    return (max_int == min_int) ? None : (max_int, min_int);\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i=0;i<lst.length;i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  let\
    \ max_negative = Number.NEGATIVE_INFINITY;\n  let min_positive = Number.POSITIVE_INFINITY;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(max_negative\
    \ < lst[i]){\n        max_negative = lst[i];\n      }\n    }\n    else{\n    \
    \  if(min_positive > lst[i]){\n        min_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [max_negative, min_positive];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  let\
    \ largest = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] <\
    \ smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      max_negative\
    \ = lst[i] > max_negative ? lst[i] : max_negative;\n    } else {\n      min_positive\
    \ = lst[i] < min_positive ? lst[i] : min_positive;\n    }\n  }\n  return [max_negative,\
    \ min_positive];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  if(largest === Number.NEGATIVE_INFINITY && smallest === Number.POSITIVE_INFINITY){\n\
    \    return (None, None)\n  }\n  return (largest, smallest)\n}\n", "  var largest\
    \ = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  if(lst.includes(0)){\n\
    \    return (None, None)\n  }\n  let largest = Number.MAX_SAFE_INTEGER\n  let\
    \ smallest = Number.MIN_SAFE_INTEGER\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i]\n    }\n    if(lst[i] > largest){\n\
    \      largest = lst[i]\n    }\n  }\n  return (largest, smallest)\n}\n", "  if(lst.length\
    \ == 0){\n    return [None, None];\n  }\n  var largest = lst[0];\n  var smallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest =\
    \ lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  if(lst.length ==\
    \ 0){\n    return (None, None)\n  }\n  if(lst.length == 1){\n    return (lst[0],\
    \ None)\n  }\n  var largest = lst[0]\n  var smallest = lst[0]\n  for(var i = 1;\
    \ i < lst.length; i++){\n    if(lst[i] > largest){\n      largest = lst[i]\n \
    \   }\n    if(lst[i] < smallest){\n      smallest = lst[i]\n    }\n  }\n  return\
    \ (largest, smallest)\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var max_num = Number.NEGATIVE_INFINITY;\n\
    \  var min_num = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < 0){\n      if(max_num < lst[i]){\n        max_num = lst[i];\n\
    \      }\n    }else{\n      if(min_num > lst[i]){\n        min_num = lst[i];\n\
    \      }\n    }\n  }\n  return [max_num, min_num];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  let\
    \ largest = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  lst.forEach(n => {\n    if (n <\
    \ smallest) smallest = n;\n    if (n > largest) largest = n;\n  });\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] <\
    \ smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let smallest = -Infinity;\n  let largest = Infinity;\n  for (let i =\
    \ 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [smallest, largest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  if(largest == Number.NEGATIVE_INFINITY\
    \ && smallest == Number.POSITIVE_INFINITY){\n    return (None, None)\n  }\n  return\
    \ (largest, smallest)\n}\n", "  if(lst.length == 0){\n    return [None, None];\n\
    \  }\n  var largest = lst[0];\n  var smallest = lst[0];\n  for(var i = 1; i <\
    \ lst.length; i++){\n    if(largest < lst[i]){\n      largest = lst[i];\n    }\n\
    \    if(smallest > lst[i]){\n      smallest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  if(lst.length == 0){\n    return (None, None)\n  }\n  let max_negative\
    \ = Number.NEGATIVE_INFINITY\n  let min_positive = Number.POSITIVE_INFINITY\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(max_negative\
    \ < lst[i]){\n        max_negative = lst[i]\n      }\n    }\n    else{\n     \
    \ if(min_positive > lst[i]){\n        min_positive = lst[i]\n      }\n    }\n\
    \  }\n  return (max_negative, min_positive)\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for(var i=0; i<lst.length; i++){\n    if(lst[i] < 0){\n      if(max_negative\
    \ < lst[i]){\n        max_negative = lst[i];\n      }\n    }\n    else{\n    \
    \  if(min_positive > lst[i]){\n        min_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [max_negative, min_positive];\n}\n", "  let largest = Number.NEGATIVE_INFINITY;\n\
    \  let smallest = Number.POSITIVE_INFINITY;\n  lst.forEach((num) => {\n    if\
    \ (num < smallest){\n      smallest = num;\n    }\n    if (num > largest){\n \
    \     largest = num;\n    }\n  });\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = Number.NEGATIVE_INFINITY;\n    var smallest = Number.POSITIVE_INFINITY;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > largest){\n   \
    \         largest = lst[i];\n        }\n        if(lst[i] < smallest){\n     \
    \       smallest = lst[i];\n        }\n    }\n    if(smallest == Number.POSITIVE_INFINITY){\n\
    \        return (smallest, largest);\n    }\n    return (smallest, largest);\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n\
    \  var min_positive = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max_negative < lst[i]){\n        max_negative\
    \ = lst[i];\n      }\n    }\n    else{\n      if(min_positive > lst[i]){\n   \
    \     min_positive = lst[i];\n      }\n    }\n  }\n  return [max_negative, min_positive];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  let\
    \ largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(max_negative\
    \ < lst[i]){\n        max_negative = lst[i];\n      }\n    }\n    else{\n    \
    \  if(min_positive > lst[i]){\n        min_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [max_negative, min_positive];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return (largest === Number.NEGATIVE_INFINITY || smallest === Number.POSITIVE_INFINITY)\
    \ ? [None, None] : largest, smallest;\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let max_negative = Number.NEGATIVE_INFINITY;\n\
    \  let min_positive = Number.POSITIVE_INFINITY;\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < 0){\n      max_negative = Math.max(max_negative, lst[i]);\n\
    \    }\n    if (lst[i] > 0){\n      min_positive = Math.min(min_positive, lst[i]);\n\
    \    }\n  }\n  return [max_negative, min_positive];\n}\n", "  var max_negative\
    \ = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(max_negative\
    \ < lst[i]){\n        max_negative = lst[i];\n      }\n    }\n    else{\n    \
    \  if(min_positive > lst[i]){\n        min_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [max_negative, min_positive];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let max_negative = Number.NEGATIVE_INFINITY;\n  let min_positive = Number.POSITIVE_INFINITY;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      max_negative\
    \ = Math.max(max_negative, lst[i]);\n    }\n    if (lst[i] > 0){\n      min_positive\
    \ = Math.min(min_positive, lst[i]);\n    }\n  }\n  return [max_negative, min_positive];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest = Number.MIN_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive\
    \ = Number.POSITIVE_INFINITY;\n  var max_negative_index = 0;\n  var min_positive_index\
    \ = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      if\
    \ (max_negative < lst[i]){\n        max_negative = lst[i];\n        max_negative_index\
    \ = i;\n      }\n    }\n    else if (lst[i] > 0){\n      if (min_positive > lst[i]){\n\
    \        min_positive = lst[i];\n        min_positive_index = i;\n      }\n  \
    \  }\n  }\n  return [max_negative, max_negative_index];\n}\n", "  var largest\
    \ = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n  for\
    \ (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n\
    \    var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  if(lst.includes(0)){\n    return\
    \ (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None, None)\n\
    \  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (None, None)\n  }\n  if(lst.includes(NaN)){\n\
    \    return (None, None)\n  }\n  if(lst.includes(-Infinity)){\n    return (None,\
    \ None)\n  }\n  if(lst.includes(Infinity)){\n    return (", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if(lst[i] < smallest){\n      smallest = lst[i];\n   \
    \ }\n  }\n  if(largest == Number.NEGATIVE_INFINITY && smallest == Number.POSITIVE_INFINITY){\n\
    \    return (None, None)\n  }\n  if(largest == Number.NEGATIVE_INFINITY){\n  \
    \  return (smallest, None)\n  }\n  if(smallest == Number.POSITIVE_INFINITY){\n\
    \    return (None, largest)\n  }\n  return (largest, smallest)\n}\n", "  var largest\
    \ = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "    var largest = Number.NEGATIVE_INFINITY;\n \
    \   var smallest = Number.POSITIVE_INFINITY;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > largest){\n            largest = lst[i];\n      \
    \  }\n        if(lst[i] < smallest){\n            smallest = lst[i];\n       \
    \ }\n    }\n    return (largest == Number.POSITIVE_INFINITY) ? None : (smallest,\
    \ largest);\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] > largest){\n \
    \     largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", "  var\
    \ largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MIN_SAFE_INTEGER;\n\
    \  let smallest = Number.MAX_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i=0; i<lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  if(lst.length == 0){\n    return\
    \ (None, None)\n  }\n  if(lst.length == 1){\n    return (lst[0], None)\n  }\n\
    \  var largest = lst[0]\n  var smallest = lst[0]\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] > largest){\n      largest = lst[i]\n    }\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i]\n    }\n  }\n  return (largest, smallest)\n\
    }\n", "  let largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = Number.NEGATIVE_INFINITY;\n    var smallest = Number.POSITIVE_INFINITY;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return (largest == Number.NEGATIVE_INFINITY\
    \ || smallest == Number.POSITIVE_INFINITY) ? [None, None] : largest, smallest;\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest = Number.MIN_SAFE_INTEGER;\n  lst.forEach((num) => {\n    if (num\
    \ < smallest){\n      smallest = num;\n    }\n    if (num > largest){\n      largest\
    \ = num;\n    }\n  });\n  return [largest, smallest];\n}\n", "  var largest =\
    \ Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] <\
    \ smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n\
    \  var min_positive = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max_negative < lst[i]){\n        max_negative\
    \ = lst[i];\n      }\n    }\n    else{\n      if(min_positive > lst[i]){\n   \
    \     min_positive = lst[i];\n      }\n    }\n  }\n  return [max_negative, min_positive];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest\
    \ = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  if(smallest == Number.POSITIVE_INFINITY && largest == Number.NEGATIVE_INFINITY){\n\
    \    return (None, None)\n  }\n  return (largest, smallest)\n}\n", "  let largest\
    \ = Number.MAX_SAFE_INTEGER;\n  let smallest = Number.MIN_SAFE_INTEGER;\n  lst.forEach((num)\
    \ => {\n    if (num > largest) largest = num;\n    if (num < smallest) smallest\
    \ = num;\n  });\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n  var smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest = Number.MIN_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.MIN_VALUE;\n\
    \  var smallest = Number.MAX_VALUE;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var max_negative = Number.NEGATIVE_INFINITY;\n  var min_positive = Number.POSITIVE_INFINITY;\n\
    \  for(var i=0; i<lst.length; i++){\n    var num = lst[i];\n    if(num < 0){\n\
    \      if(max_negative < num){\n        max_negative = num;\n      }\n    }\n\
    \    else{\n      if(min_positive > num){\n        min_positive = num;\n     \
    \ }\n    }\n  }\n  return [max_negative, min_positive];\n}\n", "  var largest\
    \ = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var\
    \ smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] > largest){\n      largest = lst[i];\n    }\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if\
    \ (lst[i] > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n  let smallest\
    \ = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if (lst[i] > largest){\n\
    \      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n}\n", " \
    \ var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] > largest){\n      largest\
    \ = lst[i];\n    }\n    if (lst[i] < smallest){\n      smallest = lst[i];\n  \
    \  }\n  }\n  return [largest, smallest];\n}\n", "  let largest = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest = Number.MIN_SAFE_INTEGER;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] >\
    \ largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  if(lst.length == 0){\n    return (None, None)\n  }\n  if(lst.length ==\
    \ 1){\n    return (lst[0], None)\n  }\n  let smallest = lst[0]\n  let largest\
    \ = lst[0]\n  for(let i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      smallest = lst[i]\n    }\n    if(lst[i] > largest){\n      largest = lst[i]\n\
    \    }\n  }\n  return (largest, smallest)\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "  let largest = Number.MIN_SAFE_INTEGER;\n  let smallest = Number.MAX_SAFE_INTEGER;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n    if (lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    var largest = Number.MIN_VALUE;\n    var smallest = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n        if(lst[i] > largest){\n    \
    \        largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "  var largest = Number.NEGATIVE_INFINITY;\n  var smallest = Number.POSITIVE_INFINITY;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if (lst[i] > largest){\n      largest = lst[i];\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "  var largest = Number.NEGATIVE_INFINITY;\n\
    \  var smallest = Number.POSITIVE_INFINITY;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]\
    \ > largest){\n      largest = lst[i];\n    }\n  }\n  return [largest, smallest];\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

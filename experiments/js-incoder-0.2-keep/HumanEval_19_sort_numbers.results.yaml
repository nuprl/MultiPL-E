name: HumanEval_19_sort_numbers
language: js
results:
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpaz_7v7nq.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaz_7v7nq.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n    numbers_array.sort();\n\
    \    return numbers_array.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpdk7f1etk.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdk7f1etk.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp_tl6exfm.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_tl6exfm.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp74rb1uf5.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp74rb1uf5.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers = numbers.split(' ');\n    var numbers_sorted\
    \ = [];\n    numbers.forEach(function(number){\n        var number = number.trim();\n\
    \        if(number.length > 0){\n            numbers_sorted.push(number);\n  \
    \      }\n    });\n    numbers_sorted.sort();\n    return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpleao4z03.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpleao4z03.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var numbers_sorted = numbers_array.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpky7hibmp.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpky7hibmp.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpxnvxn097.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxnvxn097.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_arr.length;i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){return a-b});\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpogl_4xr8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpogl_4xr8.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  for(var\
    \ i=0; i<numbers_sorted.length; i++){\n    numbers[i] = numbers_sorted[i];\n \
    \ }\n  return numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp03wjqo8k.js:26:10)\n    at Object.<anonymous> (/tmp/tmp03wjqo8k.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i=0; i<numbers_array.length; i++){\n\t\tsorted_numbers +=\
    \ numbers_array[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.trim();\n\t\
    sorted_numbers = sorted_numbers.split(\" \");\n\tsorted_numbers.sort();\n\tvar\
    \ sorted_numbers_string = \"\";\n\tfor(var i=0; i<sorted_numbers.length; i++){\n\
    \t\tsorted_numbers_string += sorted_numbers[i] + \" \";\n\t}\n\treturn sorted_numbers_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpt4hriiw4.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt4hriiw4.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(\" \");\n  var numbers_sorted\
    \ = [];\n  var current_number = 0;\n  var current_number_string = \"\";\n  var\
    \ current_number_string_reverse = \"\";\n  var current_number_string_reverse_string\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_string_reverse = \"\";\n  var current_number_string_reverse_string_reverse\
    \ = \"\";\n  var current_number_string_reverse_\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp2_zpme3r.js:68\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpp2nvwq7n.js:23:10)\n    at Object.<anonymous> (/tmp/tmpp2nvwq7n.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp90994wys.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp90994wys.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_arr.length;i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmprmsgh2pc.js:23:10)\n    at Object.<anonymous> (/tmp/tmprmsgh2pc.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpapz_g94d.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpapz_g94d.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpxrl5wvwl.js:23:10)\n    at Object.<anonymous> (/tmp/tmpxrl5wvwl.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\"\
    \ \").sort().join(\" \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpnqw0mq7p.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnqw0mq7p.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  numbers.forEach(function(number){\n    var number = parseInt(number);\n\
    \    if(number > 9){\n      numbers_sorted.push(number);\n    }\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpczdmglnj.js:24:10)\n    at Object.<anonymous> (/tmp/tmpczdmglnj.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i=0; i<sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp0kyqa9_g.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0kyqa9_g.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers.length; i++){\n \
    \   numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpotqearw4.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpotqearw4.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_array.length;i++){\n    sorted_numbers += numbers_array[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\" \").sort().join(\"\
    \ \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpbh98odvy.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbh98odvy.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpxaplg0ye.js:23:10)\n    at Object.<anonymous> (/tmp/tmpxaplg0ye.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(' ');\n\tvar sorted_numbers\
    \ = numbers_array.sort();\n\treturn sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpbw73xeqg.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbw73xeqg.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp6tg5r7wz.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6tg5r7wz.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\" \", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\",\", \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"\
    -\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\"+\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"*\", \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"\
    %\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\"^\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"~\", \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"\
    (\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\")\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"!\", \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"\
    ?\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\"'\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"\\\"\", \"\");\n\
    \  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\"<\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\">\", \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(\"\
    ,\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\"-\", \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_number\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpnddffrkw.js:86\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpv4lowemg.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv4lowemg.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    var number = numbers[i];\n\
    \    if(number == 'zero'){\n      numbers_sorted.push('zero');\n    }\n    else\
    \ if(number == 'one'){\n      numbers_sorted.push('one');\n    }\n    else if(number\
    \ == 'two'){\n      numbers_sorted.push('two');\n    }\n    else if(number ==\
    \ 'three'){\n      numbers_sorted.push('three');\n    }\n    else if(number ==\
    \ 'four'){\n      numbers_sorted.push('four');\n    }\n    else if(number == 'five'){\n\
    \      numbers_sorted.push('five');\n    }\n    else if(number == 'six'){\n  \
    \    numbers_sorted.push('six');\n    }\n    else if(number == 'seven'){\n   \
    \   numbers_sorted.push('seven');\n    }\n    else if(number == 'eight'){\n  \
    \    numbers_sorted.push('eight');\n    }\n    else if(number == 'nine'){\n  \
    \    numbers_sorted.push('nine');\n    }\n    else{\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmptk0bhvdf.js:56:10)\n\
    \    at Object.<anonymous> (/tmp/tmptk0bhvdf.js:60:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i=0; i<numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp95795q8f.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp95795q8f.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpsf5n65zg.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsf5n65zg.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmptkqkawdy.js:21:10)\n    at Object.<anonymous> (/tmp/tmptkqkawdy.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpjb912nkp.js:23:10)\n    at Object.<anonymous> (/tmp/tmpjb912nkp.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i=0;i<numbers_array.length;i++){\n\t\tsorted_numbers += numbers_array[i]\
    \ + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.trim();\n\tsorted_numbers =\
    \ sorted_numbers.split(\" \");\n\tsorted_numbers.sort();\n\tfor(var i=0;i<sorted_numbers.length;i++){\n\
    \t\tsorted_numbers[i] = sorted_numbers[i].trim();\n\t}\n\tsorted_numbers = sorted_numbers.join(\"\
    \ \");\n\treturn sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpgusi2had.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgusi2had.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  numbers.forEach(function(number){\n    numbers_sorted.push(parseInt(number));\n\
    \  });\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp40j55k69.js:23:10)\n    at Object.<anonymous> (/tmp/tmp40j55k69.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\" \"\
    ).sort().join(\" \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpz9ujgd0z.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz9ujgd0z.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpnemdq_o8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnemdq_o8.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpn4u8lm35.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn4u8lm35.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpooe921ch.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpooe921ch.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(' ');\n\tvar sorted_numbers\
    \ = numbers_array.sort();\n\treturn sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpa75pyegt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa75pyegt.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp3ioibp_4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ioibp_4.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpsif99luo.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsif99luo.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_array_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    numbers_array_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_array_sorted.sort(function(a,b){return a-b});\n  return numbers_array_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpdxj_9f_7.js:21:10)\n    at Object.<anonymous> (/tmp/tmpdxj_9f_7.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp1dw2owy2.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1dw2owy2.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_arr = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i = 0; i < numbers_arr.length; i++){\n\t\tvar num = parseInt(numbers_arr[i]);\n\
    \t\tif(num < 10){\n\t\t\tsorted_numbers += \"0\" + num;\n\t\t}else{\n\t\t\tsorted_numbers\
    \ += num;\n\t\t}\n\t}\n\treturn sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpyc5y4bl0.js:25:10)\n    at Object.<anonymous> (/tmp/tmpyc5y4bl0.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i=0; i<sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpmpaikdrc.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpaikdrc.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpydvxfuak.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpydvxfuak.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqiwws7w5.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqiwws7w5.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort(function(a,b){return b-a});\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpyad69oeh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpyad69oeh.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpu83cz0vt.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu83cz0vt.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers = numbers.split(' ');\n\tvar sorted_numbers\
    \ = numbers.sort();\n\tvar sorted_numbers_string = sorted_numbers.join(' ');\n\
    \treturn sorted_numbers_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp1dfdw5j7.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1dfdw5j7.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_array.length;i++){\n    sorted_numbers += numbers_array[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n  sorted_numbers =\
    \ sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n  sorted_numbers = sorted_numbers.join(\"\
    \ \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpf5x8g3jr.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf5x8g3jr.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmprmhpk7za.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhpk7za.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  numbers.forEach(function(number){\n    var number = parseInt(number);\n\
    \    if(number >= 0 && number <= 9){\n      numbers_sorted.push(number);\n   \
    \ }\n  });\n  numbers_sorted = numbers_sorted.sort();\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmp53f0xz9b.js:25:10)\n    at Object.<anonymous> (/tmp/tmp53f0xz9b.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp0hqwtzy4.js:23:10)\n    at Object.<anonymous> (/tmp/tmp0hqwtzy4.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmph02oe0cb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmph02oe0cb.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n    var\
    \ sorted_numbers = \"\";\n    var sorted_numbers_array = [];\n    for(var i =\
    \ 0; i < numbers_array.length; i++){\n        var number = numbers_array[i];\n\
    \        if(number == \"zero\"){\n            sorted_numbers_array.push(\"zero\"\
    );\n        }\n        else if(number == \"one\"){\n            sorted_numbers_array.push(\"\
    one\");\n        }\n        else if(number == \"two\"){\n            sorted_numbers_array.push(\"\
    two\");\n        }\n        else if(number == \"three\"){\n            sorted_numbers_array.push(\"\
    three\");\n        }\n        else if(number == \"four\"){\n            sorted_numbers_array.push(\"\
    four\");\n        }\n        else if(number == \"five\"){\n            sorted_numbers_array.push(\"\
    five\");\n        }\n        else if(number == \"six\"){\n            sorted_numbers_array.push(\"\
    six\");\n        }\n        else if(number == \"seven\"){\n            sorted_numbers_array.push(\"\
    seven\");\n        }\n        else if(number == \"eight\"){\n            sorted_numbers_array.push(\"\
    eight\");\n        }\n        else if(number == \"nine\"){\n            sorted_numbers_array.push(\"\
    nine\");\n        }\n        else{\n            sorted_numbers_array.push(number);\n\
    \        }\n    }\n    for(var i = 0; i < sorted_numbers_array.length; i++){\n\
    \        var number = sorted_numbers_array[i];\n        sorted_numbers += number;\n\
    \    }\n    return sorted_numbers;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,sorting\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp9przcc1x.js:52\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpka6gjta_.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpka6gjta_.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(/^0/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^1/, \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^2/,\
    \ \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(/^3/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^4/, \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^5/,\
    \ \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(/^6/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^7/, \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^8/,\
    \ \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(/^9/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^\\s/, \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^\\\
    s/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(/^\\s/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^\\s/, \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^\\\
    s/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(/^\\s/, \"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].replace(/^\\s/, \"\");\n  }\n\
    \  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkklr9ojo.js:83\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpefis3xcg.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpefis3xcg.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpv7w747dy.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv7w747dy.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp81k0pce9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp81k0pce9.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmprcf_gwbk.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprcf_gwbk.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(' ');\n    var\
    \ sorted_numbers = numbers_array.sort(function(a, b){\n        return a - b;\n\
    \    });\n    return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp62_4r23s.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp62_4r23s.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp1_p8p73s.js:23:10)\n    at Object.<anonymous> (/tmp/tmp1_p8p73s.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpmxjcwui7.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmxjcwui7.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  numbers_sorted = numbers_sorted.join(' ');\n\
    \  return numbers_sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp9rnkcj4c.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9rnkcj4c.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmplocl23jm.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplocl23jm.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(' ');\n    var\
    \ numbers_sorted = [];\n    var numbers_sorted = numbers_array.sort();\n    return\
    \ numbers_sorted.join(' ');\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmtvpvp0_.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_array.length;i++){\n    sorted_numbers += numbers_array[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\" \").sort().join(\"\
    \ \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmp30h98so6.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp30h98so6.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    var number = numbers[i];\n\
    \    if(number === 'zero'){\n      numbers_sorted.push('zero');\n    }\n    else\
    \ if(number === 'one'){\n      numbers_sorted.push('one');\n    }\n    else if(number\
    \ === 'two'){\n      numbers_sorted.push('two');\n    }\n    else if(number ===\
    \ 'three'){\n      numbers_sorted.push('three');\n    }\n    else if(number ===\
    \ 'four'){\n      numbers_sorted.push('four');\n    }\n    else if(number ===\
    \ 'five'){\n      numbers_sorted.push('five');\n    }\n    else if(number ===\
    \ 'six'){\n      numbers_sorted.push('six');\n    }\n    else if(number === 'seven'){\n\
    \      numbers_sorted.push('seven');\n    }\n    else if(number === 'eight'){\n\
    \      numbers_sorted.push('eight');\n    }\n    else if(number === 'nine'){\n\
    \      numbers_sorted.push('nine');\n    }\n    else{\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpy6wp0pfv.js:56:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy6wp0pfv.js:60:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  var numbers_sorted_string = numbers_sorted.join('\
    \ ');\n  return numbers_sorted_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpa9auv0nx.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa9auv0nx.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n    numbers_array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return numbers_array.join(' ');\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpinr2_8kw.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpinr2_8kw.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = numbers.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpgk33vhh4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgk33vhh4.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = numbers.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpxm0mzljv.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxm0mzljv.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmppfih9hae.js:23:10)\n    at Object.<anonymous> (/tmp/tmppfih9hae.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_arr.length; i++){\n    sorted_numbers += numbers_arr[i]\
    \ + \" \";\n  }\n  return sorted_numbers.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpze3vo4f1.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpze3vo4f1.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_arr.length;i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a,b){return b-a});\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpf8sbkszr.js:21:10)\n    at Object.<anonymous> (/tmp/tmpf8sbkszr.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_arr.length; i++){\n    sorted_numbers\
    \ += numbers_arr[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].split(\" \");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i][0];\n  }\n  for(var i = 0;\
    \ i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].split(\"\");\n  }\n  for(var\
    \ i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\");\n  }\n  for(var\
    \ i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].split(\"\");\n  }\n  for(var\
    \ i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\");\n  }\n  for(var\
    \ i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].split(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].join(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].split(\"\");\n  }\n  for(var\
    \ i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\");\n  }\n  for(var\
    \ i = 0; i < sorted_numbers.length; i++){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpeltsh9m8.js:91\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpomtzfwnt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpomtzfwnt.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpp6c4aes8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp6c4aes8.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpf7r_uo7r.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf7r_uo7r.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpeext5e37.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeext5e37.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    var num = parseInt(numbers[i]);\n\
    \    numbers_sorted.push(num);\n  }\n  numbers_sorted.sort(function(a, b){\n \
    \   return a - b;\n  });\n  var new_numbers = '';\n  for(var i = 0; i < numbers_sorted.length;\
    \ i++){\n    new_numbers += numbers_sorted[i] + ' ';\n  }\n  return new_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN '\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpbnu10av9.js:28:10)\n    at Object.<anonymous> (/tmp/tmpbnu10av9.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpjy3ec5lr.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjy3ec5lr.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i=0; i<numbers_array.length; i++){\n\t\tsorted_numbers +=\
    \ numbers_array[i] + \" \";\n\t}\n\tsorted_numbers = sorted_numbers.trim();\n\t\
    return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpd7uei5f5.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd7uei5f5.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    var num = parseInt(numbers_arr[i]);\n\
    \    if(num > 9){\n      numbers_sorted.push(num);\n    }\n  }\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpe6_gtzle.js:24:10)\n    at Object.<anonymous> (/tmp/tmpe6_gtzle.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers = numbers.split(' ');\n    var sorted_numbers\
    \ = [];\n    for(var i=0;i<numbers.length;i++){\n        sorted_numbers.push(numbers[i]);\n\
    \    }\n    sorted_numbers.sort();\n    var sorted_numbers_string = '';\n    for(var\
    \ i=0;i<sorted_numbers.length;i++){\n        sorted_numbers_string += sorted_numbers[i]\
    \ + ' ';\n    }\n    return sorted_numbers_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmp3oj8mz_4.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3oj8mz_4.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n    numbers_array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return numbers_array.join(' ');\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpnycd62kk.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnycd62kk.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpddy5xnee.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpddy5xnee.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].replace(\" \", \"\");\n  }\n  sorted_numbers = sorted_numbers.join(\"\
    \ \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpffrupz1p.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpffrupz1p.js:37:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i]\
    \ = sorted_numbers[i].split(\"\");\n  }\n  for(var i = 0; i < sorted_numbers.length;\
    \ i++){\n    sorted_numbers[i] = sorted_numbers[i].sort();\n  }\n  for(var i =\
    \ 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].join(\"\
    \");\n  }\n  for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers\
    \ += sorted_numbers[i] + \" \";\n  }\n  return sorted_numbers;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmp962oc4t0.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmp962oc4t0.js:45:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var current_number = '';\n  var current_number_index = 0;\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    current_number = numbers[i];\n    current_number_index\
    \ = numbers.indexOf(current_number);\n    numbers_sorted.push(current_number);\n\
    \    numbers.splice(current_number_index, 1);\n  }\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'three nine'\n\nshould equal\n\n'three five\
    \ nine'\n    at test (/tmp/tmpixnaxyqf.js:27:10)\n    at Object.<anonymous> (/tmp/tmpixnaxyqf.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'three nine',\n  expected: 'three five nine',\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers = numbers.split(' ');\n    var numbers_sorted\
    \ = [];\n    var numbers_sorted = numbers.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmptgaa10jg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmptgaa10jg.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i] + \" \";\n  }\n  return sorted_numbers;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpnc8bocyc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnc8bocyc.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tvar sorted_numbers_array = [];\n\t\n\tfor(var i = 0; i < numbers_array.length;\
    \ i++){\n\t\tsorted_numbers_array.push(parseInt(numbers_array[i]));\n\t}\n\t\n\
    \tsorted_numbers_array.sort(function(a, b){\n\t\treturn a - b;\n\t});\n\t\n\t\
    for(var i = 0; i < sorted_numbers_array.length; i++){\n\t\tsorted_numbers += sorted_numbers_array[i]\
    \ + \" \";\n\t}\n\t\n\treturn sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN '\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpwnuhi4_3.js:31:10)\n    at Object.<anonymous> (/tmp/tmpwnuhi4_3.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_arr.length;i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp4t4lvf9t.js:23:10)\n    at Object.<anonymous> (/tmp/tmp4t4lvf9t.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_array.length;i++){\n    sorted_numbers += numbers_array[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n  sorted_numbers =\
    \ sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n  for(var i=0;i<sorted_numbers.length;i++){\n\
    \    sorted_numbers[i] = sorted_numbers[i].trim();\n  }\n  sorted_numbers = sorted_numbers.join(\"\
    \ \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpk4_bst4m.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk4_bst4m.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp4sazduvt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4sazduvt.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i=0;i<numbers.length;i++){\n    numbers[i]\
    \ = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmplwn3v2bx.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplwn3v2bx.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i=0; i<sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp863isckz.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp863isckz.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(' ');\n    var\
    \ sorted_numbers = numbers_array.sort();\n    return sorted_numbers.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpknnkbj43.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpknnkbj43.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted = numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length;\
    \ i++){\n    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpa9b0tgsc.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa9b0tgsc.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqzgjc72y.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqzgjc72y.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort();\n  var sorted_numbers = numbers_sorted.join(' ');\n\
    \  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpkgrji9cp.js:22:10)\n    at Object.<anonymous> (/tmp/tmpkgrji9cp.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n    var\
    \ sorted_numbers = \"\";\n    for(var i = 0; i < numbers_array.length; i++){\n\
    \        sorted_numbers += numbers_array[i] + \" \";\n    }\n    sorted_numbers\
    \ = sorted_numbers.trim();\n    sorted_numbers = sorted_numbers.split(\" \");\n\
    \    sorted_numbers.sort();\n    for(var i = 0; i < sorted_numbers.length; i++){\n\
    \        sorted_numbers[i] = sorted_numbers[i].trim();\n    }\n    sorted_numbers\
    \ = sorted_numbers.join(\" \");\n    return sorted_numbers;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpu4k36vgu.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu4k36vgu.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\tvar sorted_numbers\
    \ = \"\";\n\tfor(var i=0; i<numbers_array.length; i++){\n\t\tsorted_numbers +=\
    \ numbers_array[i];\n\t\tif(i != numbers_array.length-1){\n\t\t\tsorted_numbers\
    \ += \" \";\n\t\t}\n\t}\n\treturn sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpwj3y948g.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwj3y948g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp4jko2rtm.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4jko2rtm.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpag293wb5.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpag293wb5.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmppw0nsqq0.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmppw0nsqq0.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqfyc7bab.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqfyc7bab.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp37o1ds4o.js:21:10)\n    at Object.<anonymous> (/tmp/tmp37o1ds4o.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpblvfrkd1.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpblvfrkd1.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpe52fq15i.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe52fq15i.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpmbv11b7v.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmbv11b7v.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpm0_issqj.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm0_issqj.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp1bt7em35.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1bt7em35.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    var number = numbers[i];\n\
    \    if(number == 'zero'){\n      numbers_sorted.push('zero');\n    }\n    else\
    \ if(number == 'one'){\n      numbers_sorted.push('one');\n    }\n    else if(number\
    \ == 'two'){\n      numbers_sorted.push('two');\n    }\n    else if(number ==\
    \ 'three'){\n      numbers_sorted.push('three');\n    }\n    else if(number ==\
    \ 'four'){\n      numbers_sorted.push('four');\n    }\n    else if(number == 'five'){\n\
    \      numbers_sorted.push('five');\n    }\n    else if(number == 'six'){\n  \
    \    numbers_sorted.push('six');\n    }\n    else if(number == 'seven'){\n   \
    \   numbers_sorted.push('seven');\n    }\n    else if(number == 'eight'){\n  \
    \    numbers_sorted.push('eight');\n    }\n    else if(number == 'nine'){\n  \
    \    numbers_sorted.push('nine');\n    }\n    else{\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp4jkb8f6m.js:56:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4jkb8f6m.js:60:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp88llsrku.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp88llsrku.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpsiix0qri.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsiix0qri.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpb8kiqjmc.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb8kiqjmc.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpwins2run.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwins2run.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_array.length;i++){\n    numbers_sorted.push(numbers_array[i]);\n\
    \  }\n  numbers_sorted.sort();\n  numbers_sorted = numbers_sorted.join(\" \");\n\
    \  return numbers_sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp38ze89ci.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp38ze89ci.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_array.length;i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort(function(a,b){return b-a});\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpi84eq_iw.js:21:10)\n    at Object.<anonymous> (/tmp/tmpi84eq_iw.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_array.length;i++){\n    sorted_numbers += numbers_array[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n  sorted_numbers =\
    \ sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n  for(var i=0;i<sorted_numbers.length;i++){\n\
    \    sorted_numbers[i] = sorted_numbers[i].trim();\n  }\n  sorted_numbers = sorted_numbers.join(\"\
    \ \");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpupb3kik6.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpupb3kik6.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    var number = numbers_array[i];\n\
    \    if(numbers_sorted.indexOf(number) === -1){\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpdj8y4_zv.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdj8y4_zv.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort();\n\
    \  return numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp83hbfnwc.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp83hbfnwc.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    if(numbers_array[i]\
    \ === \"zero\"){\n      sorted_numbers += \"0\";\n    }\n    else if(numbers_array[i]\
    \ === \"one\"){\n      sorted_numbers += \"1\";\n    }\n    else if(numbers_array[i]\
    \ === \"two\"){\n      sorted_numbers += \"2\";\n    }\n    else if(numbers_array[i]\
    \ === \"three\"){\n      sorted_numbers += \"3\";\n    }\n    else if(numbers_array[i]\
    \ === \"four\"){\n      sorted_numbers += \"4\";\n    }\n    else if(numbers_array[i]\
    \ === \"five\"){\n      sorted_numbers += \"5\";\n    }\n    else if(numbers_array[i]\
    \ === \"six\"){\n      sorted_numbers += \"6\";\n    }\n    else if(numbers_array[i]\
    \ === \"seven\"){\n      sorted_numbers += \"7\";\n    }\n    else if(numbers_array[i]\
    \ === \"eight\"){\n      sorted_numbers += \"8\";\n    }\n    else if(numbers_array[i]\
    \ === \"nine\"){\n      sorted_numbers += \"9\";\n    }\n  }\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'3'\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpawhmaop_.js:50:10)\n    at Object.<anonymous> (/tmp/tmpawhmaop_.js:56:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  numbers.forEach(function(number){\n    numbers_sorted.push(parseInt(number));\n\
    \  });\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpyi8jag2h.js:23:10)\n    at Object.<anonymous> (/tmp/tmpyi8jag2h.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    var number = numbers[i];\n\
    \    if(number == 'zero'){\n      numbers_sorted.push('zero');\n    }\n    else\
    \ if(number == 'one'){\n      numbers_sorted.push('one');\n    }\n    else if(number\
    \ == 'two'){\n      numbers_sorted.push('two');\n    }\n    else if(number ==\
    \ 'three'){\n      numbers_sorted.push('three');\n    }\n    else if(number ==\
    \ 'four'){\n      numbers_sorted.push('four');\n    }\n    else if(number == 'five'){\n\
    \      numbers_sorted.push('five');\n    }\n    else if(number == 'six'){\n  \
    \    numbers_sorted.push('six');\n    }\n    else if(number == 'seven'){\n   \
    \   numbers_sorted.push('seven');\n    }\n    else if(number == 'eight'){\n  \
    \    numbers_sorted.push('eight');\n    }\n    else if(number == 'nine'){\n  \
    \    numbers_sorted.push('nine');\n    }\n  }\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpmgo177qm.js:53:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmgo177qm.js:57:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp6yjqzmd5.js:23:10)\n    at Object.<anonymous> (/tmp/tmp6yjqzmd5.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var numbers_sorted = numbers.sort(function(a, b){\n    return a - b;\n\
    \  });\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmps3600wq_.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmps3600wq_.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i=0;i<numbers_sorted.length;i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpbf8ugffm.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbf8ugffm.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var current_number = 0;\n  var current_number_string = '';\n  for(var\
    \ i=0; i<numbers.length; i++){\n    if(numbers[i] === ''){\n      continue;\n\
    \    }\n    if(numbers[i] === 'zero'){\n      current_number = 0;\n      current_number_string\
    \ = '';\n    }\n    if(numbers[i] === 'one'){\n      current_number = 1;\n   \
    \   current_number_string = 'one';\n    }\n    if(numbers[i] === 'two'){\n   \
    \   current_number = 2;\n      current_number_string = 'two';\n    }\n    if(numbers[i]\
    \ === 'three'){\n      current_number = 3;\n      current_number_string = 'three';\n\
    \    }\n    if(numbers[i] === 'four'){\n      current_number = 4;\n      current_number_string\
    \ = 'four';\n    }\n    if(numbers[i] === 'five'){\n      current_number = 5;\n\
    \      current_number_string = 'five';\n    }\n    if(numbers[i] === 'six'){\n\
    \      current_number = 6;\n      current_number_string = 'six';\n    }\n    if(numbers[i]\
    \ === 'seven'){\n      current_number = 7;\n      current_number_string = 'seven';\n\
    \    }\n    if(numbers[i] === 'eight'){\n      current_number = 8;\n      current_number_string\
    \ = 'eight';\n    }\n    if(numbers[i] === 'nine'){\n      current_number = 9;\n\
    \      current_number_string = 'nine';\n    }\n    if(current_number_string !==\
    \ ''){\n      numbers_sorted.push(current_number_string);\n    }\n    current_number_string\
    \ = numbers[i];\n  }\n  numbers_sorted.push(current_number_string);\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'three three'\n\nshould equal\n\n'three'\n\
    \    at test (/tmp/tmp55yzr61g.js:70:10)\n    at Object.<anonymous> (/tmp/tmp55yzr61g.js:76:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'three three',\n  expected: 'three',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    var num = numbers_array[i];\n\
    \    if(num == \"zero\"){\n      sorted_numbers += \"zero\";\n    }\n    if(num\
    \ == \"one\"){\n      sorted_numbers += \"one\";\n    }\n    if(num == \"two\"\
    ){\n      sorted_numbers += \"two\";\n    }\n    if(num == \"three\"){\n     \
    \ sorted_numbers += \"three\";\n    }\n    if(num == \"four\"){\n      sorted_numbers\
    \ += \"four\";\n    }\n    if(num == \"five\"){\n      sorted_numbers += \"five\"\
    ;\n    }\n    if(num == \"six\"){\n      sorted_numbers += \"six\";\n    }\n \
    \   if(num == \"seven\"){\n      sorted_numbers += \"seven\";\n    }\n    if(num\
    \ == \"eight\"){\n      sorted_numbers += \"eight\";\n    }\n    if(num == \"\
    nine\"){\n      sorted_numbers += \"nine\";\n    }\n  }\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'threefivenine'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp7_ytjl0x.js:52:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7_ytjl0x.js:57:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'threefivenine',\n\
    \  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmphxbunkjm.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphxbunkjm.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpsmkwm6lz.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsmkwm6lz.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp3kbj2dey.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3kbj2dey.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_arr = numbers.split(' ');\n\tvar sorted_numbers\
    \ = numbers_arr.sort();\n\treturn sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpc9suoi4v.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc9suoi4v.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i],\
    \ 10));\n  }\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n\
    \  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp75gfgz58.js:23:10)\n    at Object.<anonymous> (/tmp/tmp75gfgz58.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpfkmwm86a.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfkmwm86a.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    var number = numbers[i];\n\
    \    if(numbers_sorted.indexOf(number) == -1){\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpihflkvzc.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpihflkvzc.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp53xmuovp.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp53xmuovp.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp1a0g3s18.js:23:10)\n    at Object.<anonymous> (/tmp/tmp1a0g3s18.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpj1a78gnq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj1a78gnq.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    numbers_sorted.push(numbers_arr[i]);\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp3__d6adx.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3__d6adx.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var numbers_sorted = numbers.sort(function(a, b){\n    return a - b;\n\
    \  });\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmplop10p9d.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplop10p9d.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp9wls7iir.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9wls7iir.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    var number = numbers[i];\n\
    \    if(numbers_sorted.indexOf(number) == -1){\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp351t4t6n.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp351t4t6n.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n    var\
    \ sorted_numbers = \"\";\n    for(var i=0;i<numbers_array.length;i++){\n     \
    \   sorted_numbers += numbers_array[i] + \" \";\n    }\n    sorted_numbers = sorted_numbers.trim();\n\
    \    sorted_numbers = sorted_numbers.split(\" \");\n    sorted_numbers.sort();\n\
    \    sorted_numbers = sorted_numbers.join(\" \");\n    return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpyu9do957.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyu9do957.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  numbers_array.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers_array.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpc82d_p3h.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc82d_p3h.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqpxksl2g.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqpxksl2g.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted = numbers_sorted.sort(function(a,b){\n    return a-b;\n\
    \  });\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpu6lg8ojy.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu6lg8ojy.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpuzer3za8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuzer3za8.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqm1713iw.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqm1713iw.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  return numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpxwa4z2z4.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxwa4z2z4.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_array = numbers.split(\" \");\n\tvar numbers_sorted\
    \ = [];\n\t\n\tfor(var i=0; i<numbers_array.length; i++){\n\t\tnumbers_sorted.push(parseInt(numbers_array[i]));\n\
    \t}\n\t\n\tnumbers_sorted.sort(function(a, b){\n\t\treturn a-b;\n\t});\n\t\n\t\
    var sorted_numbers = \"\";\n\t\n\tfor(var i=0; i<numbers_sorted.length; i++){\n\
    \t\tsorted_numbers += numbers_sorted[i] + \" \";\n\t}\n\t\n\treturn sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN '\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpxoykwr9b.js:32:10)\n    at Object.<anonymous> (/tmp/tmpxoykwr9b.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp0_vaeb6u.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0_vaeb6u.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_array = numbers.split(' ');\n    var\
    \ sorted_numbers = numbers_array.sort();\n    return sorted_numbers.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp1n0g1adz.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1n0g1adz.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp3hql8rd6.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3hql8rd6.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar numbers_arr = numbers.split(\" \");\n\tvar numbers_sorted\
    \ = [];\n\tfor(var i=0;i<numbers_arr.length;i++){\n\t\tnumbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \t}\n\tnumbers_sorted.sort(function(a,b){return b-a});\n\treturn numbers_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpdcg4ifah.js:21:10)\n    at Object.<anonymous> (/tmp/tmpdcg4ifah.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_arr.length;i++){\n    if(numbers_arr[i] ==\
    \ \"zero\"){\n      sorted_numbers += \"zero\";\n    }\n    if(numbers_arr[i]\
    \ == \"one\"){\n      sorted_numbers += \"one\";\n    }\n    if(numbers_arr[i]\
    \ == \"two\"){\n      sorted_numbers += \"two\";\n    }\n    if(numbers_arr[i]\
    \ == \"three\"){\n      sorted_numbers += \"three\";\n    }\n    if(numbers_arr[i]\
    \ == \"four\"){\n      sorted_numbers += \"four\";\n    }\n    if(numbers_arr[i]\
    \ == \"five\"){\n      sorted_numbers += \"five\";\n    }\n    if(numbers_arr[i]\
    \ == \"six\"){\n      sorted_numbers += \"six\";\n    }\n    if(numbers_arr[i]\
    \ == \"seven\"){\n      sorted_numbers += \"seven\";\n    }\n    if(numbers_arr[i]\
    \ == \"eight\"){\n      sorted_numbers += \"eight\";\n    }\n    if(numbers_arr[i]\
    \ == \"nine\"){\n      sorted_numbers += \"nine\";\n    }\n  }\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'threefivenine'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpzrz74iv7.js:51:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzrz74iv7.js:56:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'threefivenine',\n\
    \  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var current_number = 0;\n  var current_number_string = '';\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    current_number = parseInt(numbers[i]);\n\
    \    if(current_number > current_number_string){\n      current_number_string\
    \ = current_number_string + current_number;\n    }else{\n      numbers_sorted.push(current_number_string);\n\
    \      current_number_string = current_number;\n    }\n  }\n  numbers_sorted.push(current_number_string);\n\
    \  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpvqnuvnkx.js:29:10)\n    at Object.<anonymous> (/tmp/tmpvqnuvnkx.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort();\n  var numbers_string = '';\n  for(var i=0;i<numbers_sorted.length;i++){\n\
    \    numbers_string += numbers_sorted[i];\n  }\n  return numbers_string;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp58yngeaw.js:25:10)\n    at Object.<anonymous> (/tmp/tmp58yngeaw.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpx5nbss9c.js:21:10)\n    at Object.<anonymous> (/tmp/tmpx5nbss9c.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpm534o3qo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm534o3qo.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers_arr.length; i++){\n    var number = numbers_arr[i];\n\
    \    if(number == 'zero'){\n      numbers_sorted.push('zero');\n    }\n    else\
    \ if(number == 'one'){\n      numbers_sorted.push('one');\n    }\n    else if(number\
    \ == 'two'){\n      numbers_sorted.push('two');\n    }\n    else if(number ==\
    \ 'three'){\n      numbers_sorted.push('three');\n    }\n    else if(number ==\
    \ 'four'){\n      numbers_sorted.push('four');\n    }\n    else if(number == 'five'){\n\
    \      numbers_sorted.push('five');\n    }\n    else if(number == 'six'){\n  \
    \    numbers_sorted.push('six');\n    }\n    else if(number == 'seven'){\n   \
    \   numbers_sorted.push('seven');\n    }\n    else if(number == 'eight'){\n  \
    \    numbers_sorted.push('eight');\n    }\n    else if(number == 'nine'){\n  \
    \    numbers_sorted.push('nine');\n    }\n  }\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpz3kz110j.js:53:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz3kz110j.js:57:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpx2pjsz3t.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2pjsz3t.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers_arr = numbers.split(' ');\n    var sorted_numbers\
    \ = numbers_arr.sort();\n    return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpaa_if4c5.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaa_if4c5.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i=0; i<numbers.length; i++){\n    numbers[i]\
    \ = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpku96hkh7.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpku96hkh7.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  var current_number = 0;\n  var current_string = '';\n  var current_string_index\
    \ = 0;\n  for(var i=0; i<numbers.length; i++){\n    current_number = parseInt(numbers[i]);\n\
    \    if(current_number > current_string){\n      current_string_index += 1;\n\
    \      current_string = current_string_index;\n    }\n    numbers_sorted.push(current_string);\n\
    \  }\n  return numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmprr5azd27.js:29:10)\n    at Object.<anonymous> (/tmp/tmprr5azd27.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0; i<numbers_array.length; i++){\n    sorted_numbers +=\
    \ numbers_array[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.replace(/\\\
    s+$/,\"\");\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp0ir9dlab.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0ir9dlab.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    var num = parseInt(numbers_arr[i]);\n\
    \    if(num > 9){\n      numbers_sorted.push(num);\n    }\n  }\n  return numbers_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpawcqmsxa.js:24:10)\n    at Object.<anonymous> (/tmp/tmpawcqmsxa.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmplabkxm90.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplabkxm90.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_array.length;i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpyw78mn6d.js:21:10)\n    at Object.<anonymous> (/tmp/tmpyw78mn6d.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    var number =\
    \ numbers_array[i];\n    if(number == \"zero\"){\n      sorted_numbers += \"0\"\
    ;\n    }else if(number == \"one\"){\n      sorted_numbers += \"1\";\n    }else\
    \ if(number == \"two\"){\n      sorted_numbers += \"2\";\n    }else if(number\
    \ == \"three\"){\n      sorted_numbers += \"3\";\n    }else if(number == \"four\"\
    ){\n      sorted_numbers += \"4\";\n    }else if(number == \"five\"){\n      sorted_numbers\
    \ += \"5\";\n    }else if(number == \"six\"){\n      sorted_numbers += \"6\";\n\
    \    }else if(number == \"seven\"){\n      sorted_numbers += \"7\";\n    }else\
    \ if(number == \"eight\"){\n      sorted_numbers += \"8\";\n    }else if(number\
    \ == \"nine\"){\n      sorted_numbers += \"9\";\n    }\n  }\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'3'\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmp572_ensi.js:42:10)\n    at Object.<anonymous> (/tmp/tmp572_ensi.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '3',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(parseInt(numbers[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmphqhn0tvd.js:21:10)\n    at Object.<anonymous> (/tmp/tmphqhn0tvd.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var numbers = numbers.split(' ');\n    numbers.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    return numbers.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmprh8usqfx.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmprh8usqfx.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    var number = numbers[i];\n\
    \    var number = parseInt(number);\n    if(number > 9){\n      numbers_sorted.push(number);\n\
    \    }\n  }\n  numbers_sorted = numbers_sorted.sort();\n  numbers_sorted = numbers_sorted.join('\
    \ ');\n  return numbers_sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpe05fklc9.js:27:10)\n    at Object.<anonymous> (/tmp/tmpe05fklc9.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmppsnqzg0y.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmppsnqzg0y.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpjlcjf44o.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjlcjf44o.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_array.length; i++){\n    sorted_numbers\
    \ += numbers_array[i];\n    if(i != numbers_array.length - 1){\n      sorted_numbers\
    \ += \" \";\n    }\n  }\n  return sorted_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp9cg7a74n.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9cg7a74n.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  var numbers_string = '';\n  for(var i=0;i<numbers_sorted.length;i++){\n\
    \    numbers_string += numbers_sorted[i] + ' ';\n  }\n  return numbers_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpqesrwlgh.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqesrwlgh.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmp55ma55lo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp55ma55lo.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_arr.length;i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmprvi9kk03.js:23:10)\n    at Object.<anonymous> (/tmp/tmprvi9kk03.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  var numbers_sorted_string = numbers_sorted.join('\
    \ ');\n  return numbers_sorted_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp4nacg8e_.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4nacg8e_.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i=0;i<numbers_array.length;i++){\n    sorted_numbers += numbers_array[i]\
    \ + \" \";\n  }\n  sorted_numbers = sorted_numbers.split(\" \").sort(function(a,\
    \ b){\n    return a-b;\n  }).join(\" \");\n  return sorted_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmp77gshedu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp77gshedu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(\" \");\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers_array.length;i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpgt1wkpeo.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgt1wkpeo.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_arr.length; i++){\n    numbers_sorted.push(parseInt(numbers_arr[i]));\n\
    \  }\n  numbers_sorted.sort(function(a, b){\n    return a-b;\n  });\n  return\
    \ numbers_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmp5ktk7h0a.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5ktk7h0a.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort();\n\
    \  return numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpazqf884v.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpazqf884v.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0;i<numbers.length;i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  var numbers_string = '';\n  for(var i=0;i<numbers_sorted.length;i++){\n\
    \    numbers_string += numbers_sorted[i] + ' ';\n  }\n  return numbers_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n' '\n\nshould equal\n\n''\n    at test (/tmp/tmpyafmf18c.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyafmf18c.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpzvow_09t.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzvow_09t.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i = 0; i < numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp0vqfxui2.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0vqfxui2.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(\" \");\n  var sorted_numbers\
    \ = \"\";\n  for(var i = 0; i < numbers_arr.length; i++){\n    sorted_numbers\
    \ += numbers_arr[i] + \" \";\n  }\n  sorted_numbers = sorted_numbers.trim();\n\
    \  sorted_numbers = sorted_numbers.split(\" \");\n  sorted_numbers.sort();\n \
    \ for(var i = 0; i < sorted_numbers.length; i++){\n    sorted_numbers[i] = sorted_numbers[i].trim();\n\
    \  }\n  sorted_numbers = sorted_numbers.join(\" \");\n  return sorted_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmph559ng9d.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph559ng9d.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_array.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp08yyysdv.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp08yyysdv.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers.length; i++){\n    numbers_sorted.push(numbers[i]);\n\
    \  }\n  numbers_sorted.sort();\n  for(var i=0; i<numbers_sorted.length; i++){\n\
    \    numbers[i] = numbers_sorted[i];\n  }\n  return numbers.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpdcp33542.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdcp33542.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort();\n\
    \  return numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqk8wh0vr.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqk8wh0vr.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort();\n\
    \  return numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp0yzi71l8.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0yzi71l8.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  numbers.sort();\n\
    \  return numbers.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpdj83tui4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdj83tui4.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_arr = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers_arr.sort();\n  return sorted_numbers.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp1xdsaxk4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xdsaxk4.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers = numbers.split(' ');\n  var sorted_numbers\
    \ = numbers.sort(function(a, b){\n    return a - b;\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpqg87ng_3.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqg87ng_3.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var numbers_array = numbers.split(' ');\n  var numbers_sorted\
    \ = [];\n  for(var i=0; i<numbers_array.length; i++){\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort();\n  return numbers_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'NaN'\n\nshould equal\n\n''\n    at test\
    \ (/tmp/tmpahk8w4ul.js:21:10)\n    at Object.<anonymous> (/tmp/tmpahk8w4ul.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n  expected: '',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

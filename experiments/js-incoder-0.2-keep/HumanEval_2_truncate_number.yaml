name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunction truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "\tvar decimals = Math.ceil(Math.log(Math.abs(number))/Math.LN10);\n\
    \treturn (number/Math.pow(10,decimals)).toFixed(decimals);\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "\tlet decimals = Math.trunc(number).toString().split(\"\
    .\")[1];\n\tlet integer_part = Math.trunc(number).toString().split(\".\")[0];\n\
    \tlet result = parseInt(integer_part);\n\t\n\twhile (decimals.length < 3){\n\t\
    \tdecimals = decimals + \".0\";\n\t}\n\t\n\treturn result;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.ceil(Math.log(number)/Math.LN10);\n    return Math.round(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n\
    }\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number * decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ 0 ? 0 : fraction);\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number\
    \ * decimals) / decimals;\n}\n", "\tlet decimals = Math.trunc(number);\n\tlet\
    \ integer_part = Math.floor(number);\n\treturn (integer_part + decimals) / Math.pow(10,\
    \ decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \treturn Math.trunc(number*Math.pow(10,decimals)) / Math.pow(10,decimals);\n}\n",
  "    var decimals = Math.ceil(Math.abs(number));\n    return Math.round(number *\
    \ Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n\t\twhole = Math.floor(number),\n\
    \t\tfraction = number - whole;\n\t\n\treturn whole + decimals / fraction;\n}\n",
  "    var decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.pow(10, decimal_part);\n    var leftover_part = number\
    \ % 1;\n    return whole_part + decimals.toFixed(decimal_part - leftover_part);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n  \
    \      whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction < decimals ? fraction : 0);\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.ceil(Math.abs(number));\n  return Math.trunc(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \    return Math.round(number*Math.pow(10,-decimals))/Math.pow(10,decimals);\n\
    }\n", "\tlet decimals = Math.floor(Math.log10(number));\n\treturn Math.trunc(number/Math.pow(10,decimals));\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n\
    \        whole = Math.floor(number),\n        fraction = number - whole;\n   \
    \ return whole + decimals - (fraction < 0 ? 0 : fraction);\n}\n", "  var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n  return Math.round(number*decimals)/decimals;\n\
    }\n", "\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(Math.abs(number))\
    \ / Math.LN10);\n    return Math.round(Math.abs(number) * Math.pow(10, decimals))\
    \ / Math.pow(10, decimals);\n}\n", "  var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \  return Math.floor(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.round(number * decimals) / decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole,\n        mod = whole % 1;\n    if(mod > 0){\n\
    \        whole = whole + mod;\n        fraction = fraction - mod + 1;\n    }\n\
    \    return whole + fraction / decimals;\n}\n", "\tnumber = number.toFixed(1);\n\
    \tvar parts = number.split(\".\");\n\treturn parts[0].replace(/\\d$/, \"\") +\
    \ \".\" + parts[1];\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "  var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n  return\
    \ Math.floor(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(Math.abs(number))\
    \ / Math.LN10);\n    return number < 0 ? -Math.ceil(-number / Math.pow(10, decimals))\
    \ : Math.floor((number + Math.pow(10, -decimals)) / Math.pow(10, decimals));\n\
    }\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.round(number\
    \ * decimals) / decimals;\n}\n", "  var decimal_part = Math.floor(number);\n \
    \ var whole_part = number - decimal_part;\n  if(whole_part < 1){\n    return decimal_part;\n\
    \  }\n  else{\n    return whole_part;\n  }\n}\n", "\tlet decimals = Math.floor(Math.log10(number));\n\
    \treturn Math.trunc(number/Math.pow(10,decimals));\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "  var decimal_part = Math.floor(number);\n  var whole_part\
    \ = number - decimal_part;\n  if(whole_part < 1){\n    return 0.0;\n  }\n  return\
    \ decimal_part;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n  \
    \      whole = Math.floor(number),\n        fraction = number - whole;\n    \n\
    \    return whole + decimals - (fraction < decimals ? fraction : 0);\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "  var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimal_part = Math.floor(number);\n\
    \    var whole_part = number - decimal_part;\n    var decimals = Math.ceil(Math.abs(whole_part));\n\
    \    return decimal_part + decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.ceil(Math.log(number) / Math.LN10);\n\
    \    return Math.trunc(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "\tnumber = number.toFixed(20);\n\tnumber = number.split('.');\n\tnumber\
    \ = number[0].split('e');\n\tnumber = Math.round(number[0] + 'e' + (+number[1]\
    \ + 'e-1'));\n\treturn number;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number * decimals) / decimals;\n}\n",
  "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.ceil(Math.abs(number));\n\treturn\
    \ (number < 1) ? -decimals : decimals;\n}\n", "  var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \  return Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n\t\twhole = Math.floor(number),\n\t\tfraction = number - whole;\n\
    \t\n\treturn whole + decimals / fraction;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn\
    \ Math.round(number*decimals)/decimals;\n}\n", "  var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \  return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.ceil(Math.abs(number));\n\
    \    return number - decimals * Math.pow(10, decimals - 1);\n}\n", "    var decimal_part\
    \ = Math.floor(number);\n    var whole_part = number - decimal_part;\n    var\
    \ decimals = Math.ceil(Math.abs(whole_part));\n    return decimal_part + decimals;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals =\
    \ Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\treturn Math.round(number*decimals)/decimals;\n\
    }\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "\tvar\
    \ decimals = Math.ceil(Math.abs(number));\n\treturn Math.round(number * Math.pow(10,\
    \ decimals)) / Math.pow(10, decimals);\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tlet decimals = Math.trunc(number).toString().split(\".\")[1].length || 0;\n\t\
    return Math.trunc(number * 100) / 100;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.ceil(Math.log(number)/Math.LN10);\n\treturn Math.trunc(number*Math.pow(10,decimals))\
    \ / Math.pow(10,decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "\tvar\
    \ decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \    return Math.floor(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.round(number * decimals) / decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "   \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n   \
    \     whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction < 0 ? 0 : fraction);\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n\t\tinteger_part = Math.floor(number * decimals) / decimals,\n\
    \t\tfraction = number - integer_part * decimals;\n\treturn [integer_part, decimals,\
    \ fraction];\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tnumber = number.toFixed(5);\n\tnumber = number.split('.');\n\
    \t\n\tif (number[1]){\n\t\tnumber[1] = number[1].substr(0, number[1].length-1);\n\
    \t}\n\t\n\treturn number[0];\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", "\t\
    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ 0 ? 0 : fraction);\n}\n", "  var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \  return Math.floor(number*decimals)/decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tnumber = number.toFixed(1);\n\tnumber = number.split('.');\n\
    \tnumber = number[0].split('');\n\tnumber[0] = number[0].replace(/^0+/, '');\n\
    \tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '');\n\tnumber[1] = number[1].replace(/^0+/, '');\n\tnumber[1] = number[1].replace(/^0+/,\
    \ '", "  var decimal_part = Math.floor(number);\n  var whole_part = number - decimal_part;\n\
    \  if(whole_part < 1){\n    whole_part = 0;\n  }\n  return decimal_part;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n  return Math.floor(number / decimals) * decimals;\n}\n", " \
    \   var decimals = Math.ceil(Math.log(number)/Math.LN10);\n    return Math.round(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n        whole = Math.floor(number),\n\
    \        fraction = number - whole;\n    return whole + decimals - (fraction <\
    \ 0 ? 0 : fraction);\n}\n", "    var decimals = Math.ceil(Math.log(number) / Math.LN10);\n\
    \    return Math.floor(number / Math.pow(10, decimals)) * Math.pow(10, decimals);\n\
    }\n", "    var decimal_part = Math.floor(number);\n    var whole_part = number\
    \ - decimal_part;\n    var decimals = Math.pow(10, decimal_part);\n    var leftover_part\
    \ = decimal_part % 1;\n    return whole_part + decimals.toFixed(decimal_part >\
    \ 0 ? 1 : 0) + leftover_part;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.ceil(Math.log(Math.abs(number)) / Math.LN10);\n    return\
    \ Math.floor(Math.abs(number) * Math.pow(10, decimals)) / Math.pow(10, decimals);\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 0 : fraction);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.ceil(Math.abs(number));\n\
    \    return number - decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\treturn\
    \ Math.round(number * decimals) / decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n    return Math.floor(number / decimals) * decimals;\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.floor(number / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "    var decimals = Math.ceil(Math.log(Math.abs(number))\
    \ / Math.LN10);\n    return Math.floor(Math.abs(number) * Math.pow(10, decimals))\
    \ / Math.pow(10, decimals);\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction * decimals);\n}\n", "    var\
    \ decimal_part = Math.floor(number);\n    var whole_part = number - decimal_part;\n\
    \    var decimals = Math.ceil(Math.abs(whole_part));\n    return decimal_part\
    \ + decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \ var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return\
    \ Math.floor(number / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number / decimals)\
    \ * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10)),\n \
    \       whole = Math.floor(number),\n        fraction = number - whole;\n    return\
    \ whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "  var decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n  return Math.round(number * decimals)\
    \ / decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n", " \
    \   var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n \
    \   return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals\
    \ = Math.ceil(Math.log(number)/Math.LN10);\n    return Math.trunc(number*Math.pow(10,-decimals))/Math.pow(10,decimals);\n\
    }\n", "    var decimal_part = Math.floor(number);\n    var whole_part = number\
    \ - decimal_part;\n    return decimal_part === 0 && whole_part === 0 ? 0 : whole_part;\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.ceil(Math.log10(number));\n\
    \    return Math.trunc(number/Math.pow(10,decimals));\n}\n", "    var decimals\
    \ = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return Math.floor(number*decimals)/decimals;\n\
    }\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \    return Math.floor(number / decimals) * decimals;\n}\n", "  var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n\
    \treturn Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.ceil(Math.log(number)/Math.LN10);\n\
    \treturn Math.round(number*Math.pow(10,-decimals))/Math.pow(10,decimals);\n}\n",
  "    var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n  \
    \  return Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    return whole + decimals - (fraction < 0 ? 1 : 0);\n}\n", "   \
    \ var decimals = Math.pow(10,Math.floor(Math.log(number)/Math.LN10));\n    return\
    \ Math.round(number*decimals)/decimals;\n}\n", "\tvar decimals = Math.pow(10,\
    \ Math.floor(Math.log(number) / Math.LN10));\n\treturn Math.round(number * decimals)\
    \ / decimals;\n}\n", "    var decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10)),\n        whole = Math.floor(number),\n        fraction = number\
    \ - whole;\n    \n    return whole + decimals - (fraction < 0 ? 0 : fraction);\n\
    }\n", "  var decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \  return Math.floor(number / decimals) * decimals;\n}\n", "    var decimals =\
    \ Math.ceil(Math.log(number)/Math.LN10);\n    return Math.round(number*Math.pow(10,decimals))/Math.pow(10,decimals);\n\
    }\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n\
    \treturn Math.round(number * decimals) / decimals;\n}\n", "    var decimals =\
    \ Math.pow(10, Math.floor(Math.log(number) / Math.LN10));\n    return Math.floor(number\
    \ / decimals) * decimals;\n}\n", "\tvar decimals = Math.pow(10, Math.floor(Math.log(number)\
    \ / Math.LN10));\n\treturn Math.round(number * decimals) / decimals;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

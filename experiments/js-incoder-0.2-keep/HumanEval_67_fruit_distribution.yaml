name: HumanEval_67_fruit_distribution
language: js
prompt: "//In this task, you will be given a string that represents a number of apples\
  \ and oranges \n// that are distributed in a basket of fruit this basket contains\
  \ \n// apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n// the oranges and apples and an integer that represent the total\
  \ number of the fruits \n// in the basket return the number of the mango fruits\
  \ in the basket.\n// for examble:\n// fruit_distribution(\"5 apples and 6 oranges\"\
  , 19) ->19 - 5 - 6 = 8\n// fruit_distribution(\"0 apples and 1 oranges\",3) -> 3\
  \ - 0 - 1 = 2\n// fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2\
  \ - 3 = 95\n// fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100\
  \ - 1 = 19\nfunction fruit_distribution(s, n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fruit_distribution;\n  assert.deepEqual(candidate(\"5 apples and 6 oranges\"\
  , 19),8);\n  assert.deepEqual(candidate(\"5 apples and 6 oranges\", 21),10);\n \
  \ assert.deepEqual(candidate(\"0 apples and 1 oranges\", 3),2);\n  assert.deepEqual(candidate(\"\
  1 apples and 0 oranges\", 3),2);\n  assert.deepEqual(candidate(\"2 apples and 3\
  \ oranges\", 100),95);\n  assert.deepEqual(candidate(\"2 apples and 3 oranges\"\
  , 5),0);\n  assert.deepEqual(candidate(\"1 apples and 100 oranges\", 120),19);\n\
  }\n\ntest();"
completions: []
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

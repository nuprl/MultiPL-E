name: HumanEval_23_strlen
language: js
prompt: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
  // 3\nfunction strlen(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
completions: ["  return string.length\n}\n", "\treturn string.split('').length;\n\
    }\n", "  return string.length;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length;\n}\n", "  return string.length;\n\
    }\n", "  return string.length;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length;\n}\n", "\treturn string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length;\n}\n", "  return string.length\n}\n", "\treturn\
    \ string.split('').length;\n}\n", "  return string.length\n}\n", "\treturn (string\
    \ + '').length\n}\n", "  return string.split('').length\n}\n", "    string = string\
    \ || '';\n    return string.length\n        ? string.length\n        : /^[\\s\\\
    uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/.test(string)\n        ? string.length\n    \
    \    : unicodeLength(string);\n}", "  return string.length;\n}\n", "  return string.split('').length\n\
    }\n", "\treturn (string + '').length;\n}\n", "\treturn string.length\n}\n", " \
    \ return string.length;\n}\n", "  return string.split('').length\n}\n", "  return\
    \ string.length\n}\n", "\treturn string.length\n}\n", "\treturn string.split('').length;\n\
    }\n", "    string = string || '';\n    return string.length || 0;\n}", "  return\
    \ string.length\n}\n", "  return string.length;\n}\n", "  return string.length\n\
    }\n", "  return string.length;\n}\n", "\treturn (string + '').length;\n}\n", " \
    \ return string.length\n}\n", "  return string.length\n}\n", "  return string.length;\n\
    }\n", "    return string.length;\n}\n", "    string = string || '';\n    return\
    \ string.length || 0;\n}", "\treturn string.split('').length;\n}\n", "\treturn\
    \ string.split('').length;\n}\n", "  return string.length\n}\n", "  return string.length;\n\
    }\n", "\treturn string == null ? '' : (string.length || 0);\n}\n", "  return string.length;\n\
    }\n", "  return string.length\n}\n", "  return string.length\n}\n", "    return\
    \ string.length;\n}\n", "\treturn string ? string.length : 0;\n}\n", "  return\
    \ string.length;\n}\n", "\treturn string.length;\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "  return string.length\n}\n", "  return\
    \ string.length;\n}\n", "\treturn string == null ? '' : (string.length || 0);\n\
    }\n", "    return string.length;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "\treturn (string + '').length;\n}\n", "\t\
    return string.length;\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length;\n}\n", "  return string.length;\n}\n", "  return\
    \ string.length\n}\n", "  return string.length;\n}\n", "  return string.length\n\
    }\n", "  return string.split('').length;\n}\n", "  return string.length;\n}\n",
  "  return string.length;\n}\n", "  return string.length;\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "  return string.length;\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length;\n}\n", "\treturn string == null\
    \ ? '' : (string.length || 0);\n}\n", "  return string.length\n}\n", "\treturn\
    \ (string + '').length;\n}\n", "\treturn string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length;\n}\n", "\treturn string.split('').length;\n}\n",
  "  return string.length;\n}\n", "  return string.length\n}\n", "\treturn string.split('').length;\n\
    }\n", "  return string.length;\n}\n", "  return string.split('').length;\n}\n",
  "  return string.length;\n}\n", "  return string.length;\n}\n", "\treturn string.split(\"\
    \").length\n}\n", "    return string.length\n}\n", "  return string.length;\n\
    }\n", "  return string.length\n}\n", "  return string.length;\n}\n", "  return\
    \ string.length\n}\n", "  return string.length;\n}\n", "  return string.length;\n\
    }\n", "  return string.length\n}\n", "  return string.split('').length;\n}\n",
  "    return string.length;\n}\n", "\treturn string.length;\n}\n", "  return string.length;\n\
    }\n", "  return string.length\n}\n", "  return string.length\n}\n", "  return\
    \ string.length\n}\n", "  return string.length;\n}\n", "  return string.length;\n\
    }\n", "  return string.length;\n}\n", "  return string.length\n}\n", "\treturn\
    \ string ? string.length : 0;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length\n}\n", "  return string.length;\n\
    }\n", "  return string.length;\n}\n", "  return string.length;\n}\n", "  return\
    \ string.length\n}\n", "  return string.length\n}\n", "    return string.length;\n\
    }\n", "  return string.length\n}\n", "  return string.length\n}\n", "    return\
    \ string.split('').length\n}\n", "    string = string || '';\n    return string.length\n\
    \        ? string.length\n        : hasUnicode(string)\n          ? unicodeSize(string)\n\
    \          : lengthBytesUTF8(string)\n}\n", "  return string.length;\n}\n", " \
    \ return string.length\n}\n", "  return string.length;\n}\n", "  return string.length\n\
    }\n", "    return string.length\n}\n", "  return string.length;\n}\n", "    return\
    \ string.length;\n}\n", "  return string.split('').length\n}\n", "  return string.length\n\
    }\n", "\treturn string == null ? '' : (string.length == null ? '0' : String(string).length);\n\
    }\n", "  return string.length;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length;\n}\n", "  return string.length;\n\
    }\n", "  return string.length\n}\n", "  return string.length\n}\n", "  return\
    \ string.length\n}\n", "  return string.length;\n}\n", "\treturn string == null\
    \ ? '' : (string.length || 0);\n}\n", "    string = string || '';\n    return\
    \ string.length || 0;\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "  return string.length\n}\n", "  return\
    \ string.length\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length;\n}\n", "  return string.length;\n}\n", "\treturn\
    \ string ? string.length : 0;\n}\n", "  return string.length\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "  return string.length;\n}\n", "\treturn\
    \ string ? string.length : 0;\n}\n", "  return string.length;\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "  return string.length;\n}\n", "  return\
    \ string.length\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "    return string.split(\"\").length\n}\n", "  return string.length\n}\n",
  "  return string.length;\n}\n", "  return string.length;\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "  return string.split('').length;\n}\n",
  "  return string.length\n}\n", "  return string.length\n}\n", "  return string.length\n\
    }\n", "  return string.length\n}\n", "\treturn string == null ? '' : (string.length\
    \ || 0);\n}\n", "  return string.length\n}\n", "  return string.length;\n}\n",
  "\treturn string.split('').length;\n}\n", "  return string.length;\n}\n", "\treturn\
    \ string == null ? '' : (string.length || 0);\n}\n", "  return string.length;\n\
    }\n", "\treturn string == null ? '' : (string.length || (string.split && string.split('').length));\n\
    }\n", "  return string.length\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

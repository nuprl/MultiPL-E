name: HumanEval_21_rescale_to_unit
language: js
prompt: "//Given list of numbers (of at least two elements), apply a linear transform\
  \ to that list,\n// such that the smallest number will become 0 and the largest\
  \ will become 1\n// >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n// [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\nfunction rescale_to_unit(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rescale_to_unit;\n  assert.deepEqual(candidate([2.0, 49.9]),[0.0, 1.0]);\n \
  \ assert.deepEqual(candidate([100.0, 49.9]),[1.0, 0.0]);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5, 0.75, 1.0]);\n  assert.deepEqual(candidate([2.0,\
  \ 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5, 0.75]);\n  assert.deepEqual(candidate([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75]);\n}\n\ntest();"
completions: ["    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value)\
    \ min_value = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min_number = Math.min.apply(Math, numbers);\n    var\
    \ max_number = Math.max.apply(Math, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (range / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(min_number + (numbers[i] -\
    \ min_number) / range);\n    }\n    return new_numbers;\n}\n", "    var min =\
    \ Math.min(numbers);\n    var max = Math.max(numbers);\n    var scale = (max -\
    \ min) / (max - min);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled[i] = (numbers[i] - min_number) / range;\n    }\n    return rescaled;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled_numbers = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        rescaled_numbers.push(min_number + (numbers[i]\
    \ - min_number) / range);\n    }\n    return rescaled_numbers;\n}\n", "    var\
    \ min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n       \
    \ return number * scale;\n    });\n}\n", "    var min_val = Math.min.apply(null,\
    \ numbers);\n    var max_val = Math.max.apply(null, numbers);\n    var range =\
    \ max_val - min_val;\n    var scale = (range == 0) ? 0 : (max_val - min_val) /\
    \ range;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        rescaled.push(numbers[i] * scale);\n    }\n    return rescaled;\n}\n",
  "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min) min = numbers[i];\n        if(numbers[i]\
    \ > max) max = numbers[i];\n    }\n    var scale = (max - min) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers);\n    var\
    \ max = Math.max(numbers);\n    var range = max - min;\n    var scale = (range\
    \ == 0) ? 0 : 1 / (range + 1);\n    return numbers.map(function(x){\n        return\
    \ min + scale * x;\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max-min)/2;\n\
    \    var rescaled = [];\n    for(var i=0; i<numbers.length; i++){\n        rescaled.push(numbers[i]-min+range);\n\
    \    }\n    return rescaled;\n}\n", "    var min_number = numbers[0];\n    var\
    \ max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min_number){\n            min_number = numbers[i];\n   \
    \     }\n        else if(numbers[i] > max_number){\n            max_number = numbers[i];\n\
    \        }\n    }\n    var range = (max_number - min_number);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i <= numbers.length; i++){\n        new_numbers.push(min_number\
    \ + ((numbers[i] - min_number) / range));\n    }\n    return new_numbers;\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (numbers[1] - numbers[0]) / range;\n    var new_numbers = [];\n    new_numbers[0]\
    \ = numbers[0] - min * scale;\n    new_numbers[1] = numbers[1] + min * scale;\n\
    \    return new_numbers;\n}\n", "    var min_number = numbers[0];\n    var max_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_number){\n            min_number = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_number){\n            max_number = numbers[i];\n        }\n    }\n   \
    \ var scale = (max_number - min_number) / (numbers.length - 1);\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = max - min;\n    var scale\
    \ = (range == 0) ? 0 : ((range + 1.0) / 2.0);\n    var new_numbers = [];\n   \
    \ for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale + min);\n    }\n    return new_numbers;\n}\n", "    var min_value =\
    \ numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min_value\
    \ = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min_value){\n            min_value = numbers[i];\n\
    \        }\n        else if(numbers[i] > max_value){\n            max_value =\
    \ numbers[i];\n        }\n    }\n    return [min_value, max_value];\n}\n", " \
    \   var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var scaled_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        scaled_numbers.push(numbers[i] * scale);\n\
    \    }\n    return scaled_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    return numbers.map(function(x){\n        return\
    \ (x-min_number) / range;\n    });\n}\n", "    var min_value = numbers[0];\n \
    \   var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n        if(numbers[i] > max){\n   \
    \         max = numbers[i];\n        }\n    }\n    var scale = (max - min) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] - min_number);\n\
    \    }\n    new_numbers.push(range/new_numbers[0]);\n    return new_numbers;\n\
    }\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n  \
    \  for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        else if(numbers[i] >\
    \ max_number){\n            max_number = numbers[i];\n        }\n    }\n    var\
    \ scale = (max_number - min_number) / (numbers.length - 1);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        numbers[i] = (numbers[i] - min_number) *\
    \ scale + min_number;\n    }\n    return numbers;\n}\n", "    var min_number =\
    \ Math.min.apply(Math, numbers);\n    var max_number = Math.max.apply(Math, numbers);\n\
    \    var range = max_number - min_number;\n    var scale = (range == 0) ? 0 :\
    \ (max_number - min_number) / range;\n    return numbers.map(function(x){\n  \
    \      return (x-min_number) * scale;\n    });\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (range / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n    \
    \        min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_val = numbers[0];\n    var max_val = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min_val){\n            min_val\
    \ = numbers[i];\n        }\n        if(numbers[i] > max_val){\n            max_val\
    \ = numbers[i];\n        }\n    }\n    var scale = (max_val - min_val) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_val = numbers[0];\n    var max_val\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ > max_val){\n            max_val = numbers[i];\n        }\n        if(numbers[i]\
    \ < min_val){\n            min_val = numbers[i];\n        }\n    }\n    var range\
    \ = (max_val - min_val);\n    var scale = (range == 0) ? 0 : (range / min_val);\n\
    \    var new_numbers = [];\n    for(var i = 0; i< numbers.length; i++){\n    \
    \    new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n}\n",
  "  var min_number = Math.min.apply(null, numbers);\n  var max_number = Math.max.apply(null,\
    \ numbers);\n  var range = max_number - min_number;\n  var rescaled = [];\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    rescaled.push(numbers[i] - min_number);\n\
    \  }\n  for(var i = 0; i < numbers.length; i++){\n    rescaled[i] += range / numbers.length;\n\
    \  }\n  return rescaled;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range / min) * 0.5) + 0.5;\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers);\n\
    \    var max = Math.max(numbers);\n    var range = max - min;\n    var scale =\
    \ (range == 0) ? 0 : ((range == 1) ? 1 : (range / (max - min)));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_number = numbers[0];\n\
    \    var max_number = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_number){\n            min_number = numbers[i];\n\
    \        }\n        else if(numbers[i] > max_number){\n            max_number\
    \ = numbers[i];\n        }\n    }\n    var scale = (max_number - min_number) /\
    \ (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  numbers[i] = (numbers[i] - min_number) * scale + min_number;\n    }\n    return\
    \ numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] > max){\n          \
    \  max = numbers[i];\n        }\n        if(numbers[i] < min){\n            min\
    \ = numbers[i];\n        }\n    }\n    return [min, max];\n}\n", "    var min_number\
    \ = Math.min.apply(Math, numbers);\n    var max_number = Math.max.apply(Math,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n       \
    \ return number * scale;\n    });\n}\n", "    var min_value = numbers[0];\n  \
    \  var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0])\
    \ / range;\n    return numbers.map(function(n){\n        return (n-min) * scale;\n\
    \    });\n}\n", "  var min_number = Math.min.apply(null, numbers);\n  var max_number\
    \ = Math.max.apply(null, numbers);\n  var range = max_number - min_number;\n \
    \ var scale = (range == 0) ? 0 : (max_number - min_number) / range;\n  return\
    \ numbers.map(function(number){\n    return number * scale;\n  });\n}\n", "  \
    \  var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = max - min;\n    var scale = (range == 0) ? 0 :\
    \ 1 / (range + 1);\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] * scale);\n    }\n    return rescaled;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range + 1) / (max - min));\n    var new_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n \
    \   }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(min_number + (numbers[i] -\
    \ min_number) / range);\n    }\n    return new_numbers;\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var rescaled = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        rescaled.push(numbers[i] - min);\n    }\n   \
    \ rescaled.push(range);\n    return rescaled;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (range / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] + scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min = numbers[0];\n    var max =\
    \ numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ > max){\n            max = numbers[i];\n        }\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n    }\n    return [min, max];\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value){\n            min_value = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_value){\n            max_value = numbers[i];\n        }\n    }\n    var\
    \ scale = (max_value - min_value) / (numbers.length - 1);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n\
    }\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min) min = numbers[i];\n\
    \        if(numbers[i] > max) max = numbers[i];\n    }\n    var scale = (max -\
    \ min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n\
    \        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min\
    \ = numbers[0];\n    var max = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n      \
    \  }\n        if(numbers[i] < min){\n            min = numbers[i];\n        }\n\
    \    }\n    return [min, max];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range + 1.0) / 2.0);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min) min = numbers[i];\n        if(numbers[i] > max) max\
    \ = numbers[i];\n    }\n    var scale = (max - min) / (numbers.length - 1);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_range = range / 2;\n    var new_min = min - new_range;\n    var new_max\
    \ = max + new_range;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1.0) / 2.0);\n\
    \    var scaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        scaled_numbers.push(numbers[i] * scale);\n    }\n    return scaled_numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (numbers[1] - numbers[0]) / range;\n    var new_numbers = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i] + scale);\n\
    \    }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        rescaled[i] = rescaled[i] / range;\n\
    \    }\n    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var\
    \ max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n    \
    \    if(numbers[i] < min_value){\n            min_value = numbers[i];\n      \
    \  }\n        else if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var range = (max_value - min_value);\n    var new_range\
    \ = range / numbers.length;\n    var new_min_value = min_value - new_range;\n\
    \    var new_max_value = max_value + new_range;\n    var new_numbers = [];\n \
    \   for(var i = 0; i< numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * new_range);\n    }\n    new_numbers.push(new_min_value);\n    new_numbers.push(new_max_value);\n\
    \    return new_numbers;\n}\n", "    var min_number = numbers[0];\n    var max_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_number){\n            min_number = numbers[i];\n        }\n        else\
    \ if(numbers[i] > max_number){\n            max_number = numbers[i];\n       \
    \ }\n    }\n    var scale = (max_number - min_number) / (numbers.length - 1);\n\
    \    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    var rescaled_min\
    \ = min_number - range * 0.5;\n    var rescaled_max = max_number + range * 0.5;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled[i] += rescaled_min;\n\
    \        rescaled[i] = Math.min(rescaled[i], rescaled_max);\n        rescaled[i]\
    \ -= rescaled_min;\n        rescaled[i] = Math.max(rescaled[i], 0);\n    }\n \
    \   return rescaled;\n}\n", "    var min_number = numbers[0];\n    var max_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_number){\n            min_number = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_number){\n            max_number = numbers[i];\n        }\n    }\n   \
    \ var scale = (max_number - min_number) / (numbers.length - 1);\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value)\
    \ min_value = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var scale\
    \ = (range == 0) ? 0 : ((range / min));\n    var new_numbers = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n\
    \    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var new_min = min - range * 0.5;\n    var new_max = max +\
    \ range * 0.5;\n    return [new_min, new_max];\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var range = (max_value - min_value);\n    return function(x){\n\
    \        return (x - min_value) / range;\n    };\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1) / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min){\n            min =\
    \ numbers[i];\n        }\n        if(numbers[i] > max){\n            max = numbers[i];\n\
    \        }\n    }\n    var scale = (max - min) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "  var min = Math.min(numbers[0], numbers[1]);\n  var max =\
    \ Math.max(numbers[0], numbers[1]);\n  var range = (max - min);\n  return [min\
    \ / range, range];\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n \
    \   var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) / range;\n    var\
    \ scaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ scaled_numbers.push(numbers[i] + scale);\n    }\n    return scaled_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min) min\
    \ = numbers[i];\n        if(numbers[i] > max) max = numbers[i];\n    }\n    var\
    \ range = (max - min);\n    var new_range = (numbers.length - 1);\n    var factor\
    \ = new_range / range;\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ numbers[i] *= factor;\n    }\n    return numbers;\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min){\n            min = numbers[i];\n        }\n      \
    \  if(numbers[i] > max){\n            max = numbers[i];\n        }\n    }\n  \
    \  var scale = (max - min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "  var\
    \ min_number = Math.min.apply(null, numbers);\n  var max_number = Math.max.apply(null,\
    \ numbers);\n  var range = max_number - min_number;\n  var scale = (range == 0)\
    \ ? 0 : (1 / range);\n  return numbers.map(function(number){\n    return number\
    \ * scale;\n  });\n}\n", "    var min_value = numbers[0];\n    var max_value =\
    \ numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value){\n            min_value = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_value){\n            max_value = numbers[i];\n        }\n    }\n    var\
    \ scale = (max_value - min_value) / (numbers.length - 1);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    return [min_value, max_value];\n}\n", "    var min_val = Math.min.apply(null,\
    \ numbers);\n    var max_val = Math.max.apply(null, numbers);\n    var range =\
    \ max_val - min_val;\n    var scale = (range == 0) ? 0 : (max_val - min_val) /\
    \ range;\n    return numbers.map(function(x){ return (x-min_val)*scale; });\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    new_numbers[0] =\
    \ numbers[0] - min;\n    new_numbers[1] = numbers[1] - min;\n    new_numbers[2]\
    \ = numbers[2] - min;\n    new_numbers[3] = numbers[3] - min;\n    new_numbers[4]\
    \ = numbers[4] - min;\n    new_numbers[5] = numbers[5] - min;\n    new_numbers[6]\
    \ = numbers[6] - min;\n    new_numbers[7] = numbers[7] - min;\n    new_numbers[8]\
    \ = numbers[8] - min;\n    new_numbers[9] = numbers[9] - min;\n    new_numbers[10]\
    \ = numbers[10] - min;\n    new_numbers[11] = numbers[11] - min;\n    new_numbers[12]\
    \ = numbers[12] - min;\n    new_numbers[13] = numbers[13] - min;\n    new_numbers[14]\
    \ = numbers[14] - min;\n    new_numbers[15] = numbers[15] - min;\n    new_numbers[16]\
    \ = numbers[16] - min;\n    new_numbers[17] = numbers[17] - min;\n    new_numbers[18]\
    \ = numbers[18] - min;\n    new_numbers[19] = numbers[19] - min;\n    new_numbers[20]\
    \ = numbers[20] - min;\n    new_numbers[21] = numbers[21] - min;\n    new_numbers[22]\
    \ = numbers[22] - min;\n    new_numbers[23] = numbers[23] - min;\n    new_numbers[24]\
    \ = numbers[24] - min;\n    new_numbers[25] = numbers[25] - min;\n    new_numbers[26]\
    \ = numbers[26] - min;\n    new_numbers[27] = numbers[27] - min;\n    new_numbers[28]\
    \ = numbers[28] - min;\n    new_numbers[29] = numbers[29] - min;\n    new_numbers[30]\
    \ = numbers[30] - min;\n    new_numbers[31] = numbers[31] - min;\n    new_numbers[32]\
    \ = numbers[32] - min;\n    new_numbers[33] = numbers[33] - min;\n    new_numbers[34]\
    \ = numbers[34] - min;\n    new_numbers[35] = numbers[35] - min;\n    new_numbers[36]\
    \ = numbers[36] - min;\n    new_numbers[37] = numbers[37] - min;\n    new_numbers[38]\
    \ = numbers[38] - min;\n    new_numbers[39] = number", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range == 1) ? 1 : (range\
    \ / (max - min)));\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] - min_number);\n    }\n    var new_min_number\
    \ = new_numbers[0];\n    var new_max_number = new_numbers[new_numbers.length -\
    \ 1];\n    var new_range = new_max_number - new_min_number;\n    var new_range_length\
    \ = new_range / new_min_number;\n    var new_min_number_length = new_min_number\
    \ / new_min_number;\n    var new_max_number_length = new_max_number / new_min_number;\n\
    \    var new_min_number_length = new_min_number_length * new_range_length;\n \
    \   var new_max_number_length = new_max_number_length * new_range_length;\n  \
    \  var new_min_number_unit = new_min_number_length / range;\n    var new_max_number_unit\
    \ = new_max_number_length / range;\n    var new_min_number_unit = new_min_number_unit\
    \ * new_min_number_length;\n    var new_max_number_unit = new_max_number_unit\
    \ * new_min_number_length;\n    var new_min_number_unit = new_min_number_unit\
    \ / new_max_number_unit;\n    var new_max_number_unit = new_max_number_unit /\
    \ new_max_number_unit;\n    var new_min_number_unit = new_min_number_unit * new_max_number_unit;\n\
    \    var new_max_number_unit = new_max_number_unit * new_max_number_unit;\n  \
    \  var new_min_number_unit = new_min_number_unit / new_max_number_unit;\n    var\
    \ new_max_number_unit = new_max_number_unit / new_max_number_unit;\n    var new_min_number_unit\
    \ = new_min_number_unit * new_max_number_unit;\n    var new_max_number_unit =\
    \ new_max_number_unit * new_max_number_unit;\n    var new_min_number_unit = new_min_number_unit\
    \ / new_max_number_unit;\n    var new_max_number_unit = new_max_number_unit /\
    \ new_max_number_unit;\n    var new_min_number_unit = new_min_number_unit * new_max_number_unit;\n\
    \    var new_max_number_unit = new_max_number_unit * new_max_number_unit;\n  \
    \  var new_min_number_unit = new_min_number_unit / new_max_number_unit;\n    var\
    \ new_max_number_unit = new_max_number_unit / new_max_number_unit;\n    var new_min_number_unit\
    \ = new_min_number_unit * new_max_number_unit;\n    var new_max_number_unit =\
    \ new_max_number_unit * new_max_number_unit;\n    var new_min_number_unit = new_min_number_unit\
    \ / new_max_number_unit;\n    var new_max_number_unit = new_max_number_unit /\
    \ new_max_number_unit;\n    var new_min_number_unit = new_min_number_unit * new_max_number_unit;\n\
    \    var new_max_", "  var min = Math.min(numbers[0], numbers[1]);\n  var max\
    \ = Math.max(numbers[0], numbers[1]);\n  var range = (max - min);\n  return [\n\
    \    (numbers[0] - min) / range,\n    (numbers[1] - min) / range\n  ];\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max-min)/2;\n    var rescaled = [];\n    for(var\
    \ i=0; i<numbers.length; i++){\n        rescaled.push(numbers[i]-min+range);\n\
    \    }\n    return rescaled;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range - min) / range);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale + min);\n    }\n    return new_numbers;\n}\n", "    var min_number =\
    \ Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null, numbers);\n\
    \    var range = max_number - min_number;\n    var new_numbers = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        new_numbers.push(min_number + (numbers[i]\
    \ - min_number) / range);\n    }\n    return new_numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var new_numbers = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(min_number\
    \ + (numbers[i] - min_number) / range);\n    }\n    return new_numbers;\n}\n",
  "    var min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n       \
    \ return number * scale;\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var new_min = min - range * 0.5;\n    var new_max = max + range * 0.5;\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(new_min + (numbers[i] - min) * range / new_max);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        rescaled[i] = rescaled[i] / range;\n\
    \    }\n    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var\
    \ max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n    \
    \    if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers);\n\
    \    var max = Math.max(numbers);\n    var range = max - min;\n    var scale =\
    \ (range == 0) ? 0 : 1 / (max - min);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1) / (max - min));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var\
    \ max_number = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        else if(numbers[i] >\
    \ max_number){\n            max_number = numbers[i];\n        }\n    }\n    var\
    \ min_number_scaled = min_number / max_number;\n    var max_number_scaled = max_number\
    \ / max_number;\n    var new_numbers = [];\n    for(var i = 0; i< numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * max_number_scaled);\n    }\n  \
    \  return new_numbers;\n}\n", "  var min_number = Math.min.apply(null, numbers);\n\
    \  var max_number = Math.max.apply(null, numbers);\n  var range = max_number -\
    \ min_number;\n  var scale = (range == 0) ? 0 : (1 / range);\n  return numbers.map(function(number){\n\
    \    return number * scale;\n  });\n}\n", "    var min_value = numbers[0];\n \
    \   var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var range = (max_value - min_value);\n\
    \    for(var i = 1; i < numbers.length; i++){\n        numbers[i] -= min_value;\n\
    \        numbers[i] *= range / i;\n    }\n    return numbers;\n}\n", "    var\
    \ min_val = numbers[0];\n    var max_val = numbers[0];\n    for(var i = 1; i <\
    \ numbers.length; i++){\n        if(numbers[i] < min_val){\n            min_val\
    \ = numbers[i];\n        }\n        if(numbers[i] > max_val){\n            max_val\
    \ = numbers[i];\n        }\n    }\n    var scale = (max_val - min_val) / (numbers.length\
    \ - 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (max_number -\
    \ min_number) / range;\n    return numbers.map(function(n){\n        return (n-min_number)\
    \ * scale;\n    });\n}\n", "    var min_val = Math.min.apply(null, numbers);\n\
    \    var max_val = Math.max.apply(null, numbers);\n    var range = max_val - min_val;\n\
    \    var new_numbers = [];\n    for(var i=0; i<numbers.length; i++){\n       \
    \ new_numbers.push(numbers[i]/range);\n    }\n    return new_numbers;\n}\n", " \
    \   var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] > max){\n          \
    \  max = numbers[i];\n        }\n        if(numbers[i] < min){\n            min\
    \ = numbers[i];\n        }\n    }\n    return [min, max];\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var rescaled = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]\
    \ - min_number);\n        rescaled.push(numbers[i]/range);\n    }\n    return\
    \ rescaled;\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value)\
    \ min_value = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    return [min_value, max_value];\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min){\n            min = numbers[i];\n        }\n      \
    \  else if(numbers[i] > max){\n            max = numbers[i];\n        }\n    }\n\
    \    var scale = (max - min) / (max - min);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers);\n    var max = Math.max(numbers);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : 1 / (max - min);\n    return\
    \ numbers.map(function(n){\n        return min + scale * n;\n    });\n}\n", " \
    \   var min_number = numbers[0];\n    var max_number = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n   \
    \         min_number = numbers[i];\n        }\n        else if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var rescaled = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]\
    \ - min_number);\n        rescaled.push(numbers[i] / range);\n    }\n    return\
    \ rescaled;\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value)\
    \ min_value = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min){\n          \
    \  min = numbers[i];\n        }\n        else if(numbers[i] > max){\n        \
    \    max = numbers[i];\n        }\n    }\n    var range = (max - min);\n    var\
    \ new_range = (numbers.length - 1);\n    var scale = (range / new_range);\n  \
    \  var new_numbers = [];\n    for(var i = 0; i <= numbers.length; i++){\n    \
    \    new_numbers.push(min + (numbers[i] * scale));\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n  \
    \  for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var\
    \ max_number = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] - min_number);\n    }\n    var new_min_number\
    \ = new_numbers[0];\n    var new_max_number = new_numbers[0];\n    for(var i =\
    \ 0; i < new_numbers.length; i++){\n        if(new_numbers[i] < new_min_number){\n\
    \            new_min_number = new_numbers[i];\n        }\n        else if(new_numbers[i]\
    \ > new_max_number){\n            new_max_number = new_numbers[i];\n        }\n\
    \    }\n    var new_range = new_max_number - new_min_number;\n    new_min_number\
    \ -= range * 0.5;\n    new_max_number += range * 0.5;\n    var new_min_number\
    \ = Math.max(new_min_number, min_number);\n    var new_max_number = Math.min(new_max_number,\
    \ max_number);\n    return [new_min_number, new_max_number];\n}\n", "    var min\
    \ = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1.0)\
    \ / 2.0);\n    var scaled_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        scaled_numbers.push(numbers[i] * scale);\n    }\n    return scaled_numbers;\n\
    }\n", "  var min_number = numbers[0];\n  var max_number = numbers[0];\n  for(var\
    \ i = 1; i < numbers.length; i++){\n    min_number = Math.min(min_number, numbers[i]);\n\
    \    max_number = Math.max(max_number, numbers[i]);\n  }\n  var scale = (max_number\
    \ - min_number) / (max_number + min_number);\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    numbers[i] *= scale;\n  }\n  return numbers;\n}\n", "    var min_number\
    \ = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n       \
    \ return number * scale;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value){\n            min_value = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_value){\n            max_value = numbers[i];\n        }\n    }\n    return\
    \ [min_value, max_value];\n}\n", "    var min_value = numbers[0];\n    var max_value\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value){\n            min_value = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_value){\n            max_value = numbers[i];\n        }\n    }\n    var\
    \ scale = (max_value - min_value) / (numbers.length - 1);\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = max - min;\n    var scale = (range == 0) ? 0 :\
    \ 1 / (range + 1);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n  \
    \  for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value) min_value\
    \ = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var scale = (max_value - min_value) / (numbers.length - 1);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var scale\
    \ = (range == 0) ? 0 : ((range - min) / range);\n    var new_numbers = [];\n \
    \   for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale + min);\n    }\n    return new_numbers;\n}\n", "    var min_number =\
    \ Math.min.apply(Math, numbers);\n    var max_number = Math.max.apply(Math, numbers);\n\
    \    var range = max_number - min_number;\n    var scale = (range == 0) ? 0 :\
    \ (1 / range);\n    return numbers.map(function(number){\n        return number\
    \ * scale;\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max-min)/2;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] + range);\n    }\n    return rescaled;\n}\n", "  \
    \  var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max-min)/2;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] + range);\n    }\n    return rescaled;\n}\n", "  \
    \  var min_number = numbers[0];\n    var max_number = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n   \
    \         min_number = numbers[i];\n        }\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n      \
    \      min_value = numbers[i];\n        }\n        else if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var range = (max_value\
    \ - min_value);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i]/range);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min_number);\n    }\n    rescaled.push(range);\n\
    \    return rescaled;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (max_number - min_number)\
    \ / range;\n    return numbers.map(function(number){\n        return number *\
    \ scale;\n    });\n}\n", "    var min_value = numbers[0];\n    var max_value =\
    \ numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_value) min_value = numbers[i];\n        if(numbers[i] > max_value) max_value\
    \ = numbers[i];\n    }\n    var range = (max_value - min_value);\n    var new_range\
    \ = range / numbers.length;\n    var new_min_value = min_value - new_range * 0.5;\n\
    \    var new_max_value = max_value + new_range * 0.5;\n    return [new_min_value,\
    \ new_max_value];\n}\n", "  var min_number = Math.min.apply(null, numbers);\n\
    \  var max_number = Math.max.apply(null, numbers);\n  var range = max_number -\
    \ min_number;\n  var scale = (range == 0) ? 0 : (1 / range);\n  return numbers.map(function(number){\n\
    \    return number * scale;\n  });\n}\n", "    var min_value = numbers[0];\n \
    \   var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        else if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min = numbers[0];\n    var max = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n        if(numbers[i] < min){\n   \
    \         min = numbers[i];\n        }\n    }\n    var range = (max - min);\n\
    \    var new_range = 1.0;\n    if(range > 0){\n        new_range = range;\n  \
    \  }\n    var new_min = min - new_range;\n    var new_max = max + new_range;\n\
    \    return [new_min, new_max];\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value)\
    \ min_value = numbers[i];\n        if(numbers[i] > max_value) max_value = numbers[i];\n\
    \    }\n    var range = (max_value - min_value);\n    var new_numbers = [];\n\
    \    for(var i = 0; i <= numbers.length; i++){\n        new_numbers.push(min_value\
    \ + (numbers[i] - min_value) / range);\n    }\n    return new_numbers;\n}\n",
  "    var min_number = numbers[0];\n    var max_number = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n   \
    \         min_number = numbers[i];\n        }\n        else if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] + scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        rescaled_numbers.push(numbers[i] - min_number);\n    }\n    rescaled_numbers\
    \ = rescaled_numbers.map(function(number){\n        return number * range / max_number;\n\
    \    });\n    return rescaled_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : ((range == 1) ? 1 : (range\
    \ / (max - min)));\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] > max){\n            max =\
    \ numbers[i];\n        }\n        if(numbers[i] < min){\n            min = numbers[i];\n\
    \        }\n    }\n    return [min, max];\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0]) /\
    \ range;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var scale = (range == 0) ? 0 : (max_number - min_number) / range;\n    return\
    \ numbers.map(function(n){\n        return (n-min_number) * scale;\n    });\n\
    }\n", "    var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n    \
    \        min_value = numbers[i];\n        }\n        else if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_number = Math.min.apply(Math, numbers);\n    var max_number = Math.max.apply(Math,\
    \ numbers);\n    var range = max_number - min_number;\n    var scale = (range\
    \ == 0) ? 0 : (range == 1) ? 1 : (range / (max_number - min_number));\n    var\
    \ scaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ scaled_numbers.push(numbers[i] * scale);\n    }\n    return scaled_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        rescaled_numbers.push(numbers[i] - min_number);\n    }\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        rescaled_numbers[i] = (rescaled_numbers[i]\
    \ / range);\n    }\n    return rescaled_numbers;\n}\n", "    var min_number =\
    \ Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null, numbers);\n\
    \    var range = max_number - min_number;\n    var rescaled = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i] - min_number);\n\
    \    }\n    var rescaled_min = Math.min.apply(null, rescaled);\n    var rescaled_max\
    \ = Math.max.apply(null, rescaled);\n    var rescaled_range = rescaled_max - rescaled_min;\n\
    \    var new_min = rescaled_min - range * 0.5;\n    var new_max = rescaled_max\
    \ + range * 0.5;\n    var new_range = new_max - new_min;\n    var new_rescaled\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_rescaled.push(new_min\
    \ + (numbers[i] - rescaled_min) / new_range);\n    }\n    return new_rescaled;\n\
    }\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(min_number + (numbers[i] -\
    \ min_number) / range);\n    }\n    return new_numbers;\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var scale = (range == 0) ? 0 : ((range / min)\
    \ * 0.5 + 0.5);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    return numbers.map(function(number){\n        return (number - min_number)\
    \ / range;\n    });\n}\n", "    var min = Math.min(numbers);\n    var max = Math.max(numbers);\n\
    \    var range = max - min;\n    var scale = (range == 0) ? 0 : 1 / (range + 1);\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] * scale);\n    }\n    return rescaled;\n}\n", "  \
    \  var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range - min) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (max_number -\
    \ min_number) / range;\n    return numbers.map(function(number){\n        return\
    \ number - min_number * scale;\n    });\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value) min_value = numbers[i];\n        if(numbers[i]\
    \ > max_value) max_value = numbers[i];\n    }\n    var scale = (max_value - min_value)\
    \ / (numbers.length - 1);\n    for(var i = 0; i < numbers.length; i++){\n    \
    \    numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var new_min = min - range * 0.5;\n    var new_max = max +\
    \ range * 0.5;\n    return [new_min, new_max];\n}\n", "    var min = Math.min(numbers);\n\
    \    var max = Math.max(numbers);\n    var range = max - min;\n    var rescaled\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(min\
    \ + (numbers[i] - min) / range);\n    }\n    return rescaled;\n}\n", "    var\
    \ min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i = 1;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min_value){\n           \
    \ min_value = numbers[i];\n        }\n        else if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n      \
    \      min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_number = numbers[0];\n    var max_number = numbers[0];\n    for(var\
    \ i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n   \
    \         min_number = numbers[i];\n        }\n        else if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n        }\n    }\n    var scale = (max_number\
    \ - min_number) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_value = numbers[0];\n    var max_value = numbers[0];\n    for(var i\
    \ = 1; i < numbers.length; i++){\n        if(numbers[i] < min_value){\n      \
    \      min_value = numbers[i];\n        }\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n        }\n    }\n    var scale = (max_value\
    \ - min_value) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : (range / (max - min));\n    var new_numbers = [];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n    }\n\
    \    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n\
    \    var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    return numbers.map(function(number){\n        return (number\
    \ - min_number) / range;\n    });\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (max_number -\
    \ min_number) / range;\n    return numbers.map(function(number){\n        return\
    \ number * scale;\n    });\n}\n", "    var min_number = numbers[0];\n    var max_number\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ < min_number){\n            min_number = numbers[i];\n        }\n        if(numbers[i]\
    \ > max_number){\n            max_number = numbers[i];\n        }\n    }\n   \
    \ var scale = (max_number - min_number) / (numbers.length - 1);\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n    }\n    return\
    \ numbers;\n}\n", "  var min = Math.min(numbers[0], numbers[1]);\n  var max =\
    \ Math.max(numbers[0], numbers[1]);\n  var range = (max-min)/2;\n  return numbers.map(function(x){\n\
    \    return (x-min)/range;\n  });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min);\n    }\n    rescaled.push(range);\n    return\
    \ rescaled;\n}\n", "    var min = Math.min(numbers);\n    var max = Math.max(numbers);\n\
    \    var range = max - min;\n    var scale = (range == 0) ? 0 : ((range == 1)\
    \ ? 1 : (range / (max - min)));\n    var new_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n \
    \   }\n    return new_numbers;\n}\n", "    var min = numbers[0];\n    var max\
    \ = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i]\
    \ > max){\n            max = numbers[i];\n        }\n        if(numbers[i] < min){\n\
    \            min = numbers[i];\n        }\n    }\n    return [min, max];\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range + 1.0) / range);\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n   \
    \ }\n    return new_numbers;\n}\n", "    var min_val = Math.min(numbers[0], numbers[1]);\n\
    \    var max_val = Math.max(numbers[0], numbers[1]);\n    var range = (max_val\
    \ - min_val) / 2;\n    return numbers.map(function(n){\n        return (n-min_val)\
    \ / range;\n    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range == 1) ? 1 : (range / (max - min)));\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    return numbers.map(function(x){\n        return (x - min_number) / range;\n\
    \    });\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n    var max\
    \ = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n    var scale\
    \ = (range == 0) ? 0 : (numbers[1] - numbers[0]) / range;\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ + scale);\n    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var new_numbers = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        new_numbers.push(numbers[i] - min_number);\n\
    \    }\n    new_numbers = new_numbers.map(function(x){\n        return x / range;\n\
    \    });\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : (range / (max - min));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = numbers[0];\n\
    \    var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n   \
    \     if(numbers[i] < min){\n            min = numbers[i];\n        }\n      \
    \  else if(numbers[i] > max){\n            max = numbers[i];\n        }\n    }\n\
    \    var scale = (max - min) / (numbers.length - 1);\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] *= scale;\n    }\n    return numbers;\n}\n", "   \
    \ var min_number = Math.min.apply(null, numbers);\n    var max_number = Math.max.apply(null,\
    \ numbers);\n    var range = max_number - min_number;\n    var rescaled = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]\
    \ - min_number);\n    }\n    return rescaled;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : ((range + 1.0) / range);\n\
    \    var new_numbers = [];\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     new_numbers.push(numbers[i] * scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = Math.min.apply(null, numbers);\n    var max_number\
    \ = Math.max.apply(null, numbers);\n    var range = max_number - min_number;\n\
    \    var rescaled = [];\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  rescaled.push(numbers[i] - min_number);\n    }\n    return rescaled;\n}\n",
  "    var min = Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0],\
    \ numbers[1]);\n    var range = (max - min);\n    var scale = (range == 0) ? 0\
    \ : ((range + 1) / (max - min));\n    var new_numbers = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        new_numbers.push(numbers[i] * scale);\n \
    \   }\n    return new_numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var rescaled_numbers = [];\n    for(var i=0;\
    \ i<numbers.length; i++){\n        rescaled_numbers.push(numbers[i] - min_number);\n\
    \    }\n    rescaled_numbers = rescaled_numbers.map(function(x){\n        return\
    \ x / range;\n    });\n    return rescaled_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : 1 / (range + 1);\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = max - min;\n    var scale = (range == 0) ? 0 : 1 / (range + 1);\n    var rescaled\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        rescaled.push(numbers[i]\
    \ * scale);\n    }\n    return rescaled;\n}\n", "    var min = Math.min(numbers[0],\
    \ numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n    var range\
    \ = (max - min);\n    var scale = (range == 0) ? 0 : (numbers[1] - numbers[0])\
    \ / range;\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] + scale);\n    }\n    return new_numbers;\n\
    }\n", "    var min_number = numbers[0];\n    var max_number = numbers[0];\n  \
    \  for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] < min_number){\n\
    \            min_number = numbers[i];\n        }\n        else if(numbers[i] >\
    \ max_number){\n            max_number = numbers[i];\n        }\n    }\n    var\
    \ min_number_scaled = min_number / max_number;\n    var max_number_scaled = max_number\
    \ / min_number;\n    var new_numbers = [];\n    for(var i = 0; i< numbers.length;\
    \ i++){\n        new_numbers.push(min_number_scaled + (numbers[i] - min_number)\
    \ * max_number_scaled);\n    }\n    return new_numbers;\n}\n", "    var min =\
    \ Math.min(numbers[0], numbers[1]);\n    var max = Math.max(numbers[0], numbers[1]);\n\
    \    var range = (max - min);\n    var scale = (range == 0) ? 0 : ((range - min)\
    \ / range);\n    var new_numbers = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        new_numbers.push(numbers[i] * scale + min);\n    }\n    return\
    \ new_numbers;\n}\n", "    var min_number = Math.min.apply(null, numbers);\n \
    \   var max_number = Math.max.apply(null, numbers);\n    var range = max_number\
    \ - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n    return numbers.map(function(number){\n\
    \        return number * scale;\n    });\n}\n", "    var min = numbers[0];\n \
    \   var max = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n    \
    \    if(numbers[i] < min) min = numbers[i];\n        if(numbers[i] > max) max\
    \ = numbers[i];\n    }\n    var range = (max - min);\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        numbers[i] -= min;\n        numbers[i] *= range / i;\n    }\n\
    \    return numbers;\n}\n", "    var min = Math.min(numbers[0], numbers[1]);\n\
    \    var max = Math.max(numbers[0], numbers[1]);\n    var range = (max - min);\n\
    \    var scale = (range == 0) ? 0 : ((range + 1) / (max - min));\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        new_numbers.push(numbers[i]\
    \ * scale);\n    }\n    return new_numbers;\n}\n", "    var min_value = numbers[0];\n\
    \    var max_value = numbers[0];\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] < min_value){\n            min_value = numbers[i];\n  \
    \      }\n        if(numbers[i] > max_value){\n            max_value = numbers[i];\n\
    \        }\n    }\n    var scale = (max_value - min_value) / (numbers.length -\
    \ 1);\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i] *= scale;\n\
    \    }\n    return numbers;\n}\n", "    var min_number = Math.min.apply(null,\
    \ numbers);\n    var max_number = Math.max.apply(null, numbers);\n    var range\
    \ = max_number - min_number;\n    var scale = (range == 0) ? 0 : (1 / range);\n\
    \    return numbers.map(function(number){\n        return number * scale;\n  \
    \  });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

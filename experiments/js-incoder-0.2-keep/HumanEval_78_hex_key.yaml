name: HumanEval_78_hex_key
language: js
prompt: "//You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// For num = \"AB\" the output should be 1.\n// For num = \"1077E\"\
  \ the output should be 2.\n// For num = \"ABED1A33\" the output should be 4.\n//\
  \ For num = \"123456789ABCDEF0\" the output should be 6.\n// For num = \"2020\"\
  \ the output should be 2.\nfunction hex_key(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = hex_key;\n  assert.deepEqual(candidate(\"AB\"),1);\n  assert.deepEqual(candidate(\"\
  1077E\"),2);\n  assert.deepEqual(candidate(\"ABED1A33\"),4);\n  assert.deepEqual(candidate(\"\
  2020\"),2);\n  assert.deepEqual(candidate(\"123456789ABCDEF0\"),6);\n  assert.deepEqual(candidate(\"\
  112233445566778899AABBCCDDEEFF00\"),12);\n}\n\ntest();"
completions: ["  var hex = num.toString().split('');\n  var primes = [];\n  var prime_found\
    \ = false;\n  var prime_found2 = false;\n  var prime_found3 = false;\n  var prime_found4\
    \ = false;\n  var prime_found5 = false;\n  var prime_found6 = false;\n  var prime_found7\
    \ = false;\n  var prime_found8 = false;\n  var prime_found9 = false;\n  var prime_found10\
    \ = false;\n  var prime_found11 = false;\n  var prime_found12 = false;\n  var\
    \ prime_found13 = false;\n  var prime_found14 = false;\n  var prime_found15 =\
    \ false;\n  var prime_found16 = false;\n  var prime_found17 = false;\n  var prime_found18\
    \ = false;\n  var prime_found19 = false;\n  var prime_found20 = false;\n  var\
    \ prime_found21 = false;\n  var prime_found22 = false;\n  var prime_found23 =\
    \ false;\n  var prime_found24 = false;\n  var prime_found25 = false;\n  var prime_found26\
    \ = false;\n  var prime_found27 = false;\n  var prime_found28 = false;\n  var\
    \ prime_found29 = false;\n  var prime_found30 = false;\n  var prime_found31 =\
    \ false;\n  var prime_found32 = false;\n  var prime_found33 = false;\n  var prime_found34\
    \ = false;\n  var prime_found35 = false;\n  var prime_found36 = false;\n  var\
    \ prime_found37 = false;\n  var prime_found38 = false;\n  var prime_found39 =\
    \ false;\n  var prime_found40 = false;\n  var prime_found41 = false;\n  var prime_found42\
    \ = false;\n  var prime_found43 = false;\n  var prime_found44 = false;\n  var\
    \ prime_found45 = false;\n  var prime_found46 = false;\n  var prime_found47 =\
    \ false;\n  var prime_found48 = false;\n  var prime_found49 = false;\n  var prime_found50\
    \ = false;\n  var prime_found51 = false;\n  var prime_found52 = false;\n  var\
    \ prime_found53 = false;\n  var prime_found54 = false;\n  var prime_found55 =\
    \ false;\n  var prime_found56 = false;\n  var prime_found57 = false;\n  var prime_found58\
    \ = false;\n  var prime_found59 = false;\n  var prime_found60 = false;\n  var\
    \ prime_found61 = false;\n  var prime_found62 = false;\n  var prime_found63 =\
    \ false;\n  var prime_found64 = false;\n  var prime_found65 = false;\n  var prime_found66\
    \ = false;\n  var prime_found67 = false;\n  var prime_found68 = false;\n  var\
    \ prime_found69 = false;\n  var prime_found", "    let hex = num.toString().split('');\n\
    \    let hex_res = hex.filter(x => x.charCodeAt(0) > 48 && x.charCodeAt(0) < 58);\n\
    \    let hex_res2 = hex_res.filter(x => x.charCodeAt(0) > 64 && x.charCodeAt(0)\
    \ < 71);\n    let hex_res3 = hex_res2.filter(x => x.charCodeAt(0) > 96 && x.charCodeAt(0)\
    \ < 103);\n    let hex_res4 = hex_res3.filter(x => x.charCodeAt(0) > 122 && x.charCodeAt(0)\
    \ < 127);\n    let hex_res5 = hex_res4.filter(x => x.charCodeAt(0) > 128 && x.charCodeAt(0)\
    \ < 131);\n    let hex_res6 = hex_res5.filter(x => x.charCodeAt(0) > 136 && x.charCodeAt(0)\
    \ < 143);\n    let hex_res7 = hex_res6.filter(x => x.charCodeAt(0) > 144 && x.charCodeAt(0)\
    \ < 151);\n    let hex_res8 = hex_res7.filter(x => x.charCodeAt(0) > 152 && x.charCodeAt(0)\
    \ < 157);\n    let hex_res9 = hex_res8.filter(x => x.charCodeAt(0) > 158 && x.charCodeAt(0)\
    \ < 163);\n    let hex_res10 = hex_res9.filter(x => x.charCodeAt(0) > 164 && x.charCodeAt(0)\
    \ < 167);\n    let hex_res11 = hex_res10.filter(x => x.charCodeAt(0) > 168 &&\
    \ x.charCodeAt(0) < 173);\n    let hex_res12 = hex_res11.filter(x => x.charCodeAt(0)\
    \ > 174 && x.charCodeAt(0) < 177);\n    let hex_res13 = hex_res12.filter(x =>\
    \ x.charCodeAt(0) > 178 && x.charCodeAt(0) < 183);\n    let hex_res14 = hex_res13.filter(x\
    \ => x.charCodeAt(0) > 184 && x.charCodeAt(0) < 187);\n    let hex_res15 = hex_res14.filter(x\
    \ => x.charCodeAt(0) > 188 && x.charCodeAt(0) < 193);\n    let hex_res16 = hex_res15.filter(x\
    \ => x.charCodeAt(0) > 194 && x.charCodeAt(0) < 197);\n    let hex_res17 = hex_res16.filter(x\
    \ => x.charCodeAt(0) > 198 && x.charCodeAt(0) < 203);\n    let hex_res18 = hex_res17.filter(x\
    \ => x.charCodeAt(0) > 204 && x.charCodeAt(0) < 207);\n    let hex_res19 = hex_res18.filter(x\
    \ => x.charCodeAt(0) > 208 && x.charCodeAt(0) < 213);\n    let hex_res20 = hex_res19.filter(x\
    \ => x.charCodeAt(0) > 214 && x.charCodeAt(0) < 217);\n    let hex_res21 = hex_res20.filter(x\
    \ => x.charCodeAt(0) > 218 && x.charCodeAt(0) < 223);", "    let hex = num;\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCountPrime = 0;\n    let hexDigitCountPrime2 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime3 = hexDigitCountPrime2;\n    let hexDigitCountPrime4\
    \ = hexDigitCountPrime3;\n    let hexDigitCountPrime5 = hexDigitCountPrime4;\n\
    \    let hexDigitCountPrime6 = hexDigitCountPrime5;\n    let hexDigitCountPrime7\
    \ = hexDigitCountPrime6;\n    let hexDigitCountPrime8 = hexDigitCountPrime7;\n\
    \    let hexDigitCountPrime9 = hexDigitCountPrime8;\n    let hexDigitCountPrime10\
    \ = hexDigitCountPrime9;\n    let hexDigitCountPrime11 = hexDigitCountPrime10;\n\
    \    let hexDigitCountPrime12 = hexDigitCountPrime11;\n    let hexDigitCountPrime13\
    \ = hexDigitCountPrime12;\n    let hexDigitCountPrime14 = hexDigitCountPrime13;\n\
    \    let hexDigitCountPrime15 = hexDigitCountPrime14;\n    let hexDigitCountPrime16\
    \ = hexDigitCountPrime15;\n    let hexDigitCountPrime17 = hexDigitCountPrime16;\n\
    \    let hexDigitCountPrime18 = hexDigitCountPrime17;\n    let hexDigitCountPrime19\
    \ = hexDigitCountPrime18;\n    let hexDigitCountPrime20 = hexDigitCountPrime19;\n\
    \    let hexDigitCountPrime21 = hexDigitCountPrime20;\n    let hexDigitCountPrime22\
    \ = hexDigitCountPrime21;\n    let hexDigitCountPrime23 = hexDigitCountPrime22;\n\
    \    let hexDigitCountPrime24 = hexDigitCountPrime23;\n    let hexDigitCountPrime25\
    \ = hexDigitCountPrime24;\n    let hexDigitCountPrime26 = hexDigitCountPrime25;\n\
    \    let hexDigitCountPrime27 = hexDigitCountPrime26;\n    let hexDigitCountPrime28\
    \ = hexDigitCountPrime27;\n    let hexDigitCountPrime29 = hexDigitCountPrime28;\n\
    \    let hexDigitCountPrime30 = hexDigitCountPrime29;\n    let hexDigitCountPrime31\
    \ = hexDigitCountPrime30;\n    let hexDigitCountPrime32 = hexDigitCountPrime31;\n\
    \    let hexDigitCountPrime33 = hexDigitCountPrime", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    for(let i\
    \ = 0; i < hexDigitCount; i++){\n        let hexDigit = hexDigits[i];\n      \
    \  let hexDigitValue = parseInt(hexDigit);\n        if(hexDigitValue > 0 && hexDigitValue\
    \ <= 16){\n            hexDigitPrimes.push(hexDigitValue);\n            if(hexDigitValue\
    \ == 2){\n                hexDigitPrimeCount++;\n            }\n        }\n  \
    \  }\n    let hexDigitPrimeCount2 = hexDigitPrimes.length;\n    let hexDigitPrimePrimes\
    \ = [];\n    let hexDigitPrimePrimeCount = 0;\n    for(let i = 0; i < hexDigitPrimeCount2;\
    \ i++){\n        let hexDigitPrime = hexDigitPrimes[i];\n        let hexDigitPrimeValue\
    \ = parseInt(hexDigitPrime);\n        if(hexDigitPrimeValue > 0 && hexDigitPrimeValue\
    \ <= 16){\n            hexDigitPrimePrimes.push(hexDigitPrimeValue);\n       \
    \     if(hexDigitPrimeValue == 2){\n                hexDigitPrimePrimeCount++;\n\
    \            }\n        }\n    }\n    let hexDigitPrimePrimeCount2 = hexDigitPrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitPrimePrimeCount2; i++){\n        let hexDigitPrimePrime\
    \ = hexDigitPrimePrimes[i];\n        let hexDigitPrimePrimeValue = parseInt(hexDigitPrimePrime);\n\
    \        if(hexDigitPrimePrimeValue > 0 && hexDigitPrimePrimeValue <= 16){\n \
    \           hexDigitPrimePrimePrimes.push(hexDigitPrimePrimeValue);\n        \
    \    if(hexDigitPrimePrimeValue == 2){\n                hexDigitPrimePrimePrimeCount++;\n\
    \            }\n        }\n    }\n    let hexDigitPrimePrimePrimeCount2 = hexDigitPrimePrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitPrimePrimePrimeCount2; i++){\n        let\
    \ hexDigitPrimePrimePrime = hexDigitPrimePrimePrimes[i];\n        let hexDigitPrimePrimePrimeValue\
    \ = parseInt(hexDigitPrimePrimePrime);\n        if(hexDigitPrimePrimePrimeValue\
    \ > ", "  var hex = num.toUpperCase();\n  var hexLength = hex.length;\n  var hexDigits\
    \ = hex.split(\"\");\n  var hexDigitsLength = hexDigits.length;\n  var primes\
    \ = [];\n  var primesLength = 0;\n  var primesIndex = 0;\n  var primesIndex2 =\
    \ 0;\n  var primesIndex3 = 0;\n  var primesIndex4 = 0;\n  var primesIndex5 = 0;\n\
    \  var primesIndex6 = 0;\n  var primesIndex7 = 0;\n  var primesIndex8 = 0;\n \
    \ var primesIndex9 = 0;\n  var primesIndex10 = 0;\n  var primesIndex11 = 0;\n\
    \  var primesIndex12 = 0;\n  var primesIndex13 = 0;\n  var primesIndex14 = 0;\n\
    \  var primesIndex15 = 0;\n  var primesIndex16 = 0;\n  var primesIndex17 = 0;\n\
    \  var primesIndex18 = 0;\n  var primesIndex19 = 0;\n  var primesIndex20 = 0;\n\
    \  var primesIndex21 = 0;\n  var primesIndex22 = 0;\n  var primesIndex23 = 0;\n\
    \  var primesIndex24 = 0;\n  var primesIndex25 = 0;\n  var primesIndex26 = 0;\n\
    \  var primesIndex27 = 0;\n  var primesIndex28 = 0;\n  var primesIndex29 = 0;\n\
    \  var primesIndex30 = 0;\n  var primesIndex31 = 0;\n  var primesIndex32 = 0;\n\
    \  var primesIndex33 = 0;\n  var primesIndex34 = 0;\n  var primesIndex35 = 0;\n\
    \  var primesIndex36 = 0;\n  var primesIndex37 = 0;\n  var primesIndex38 = 0;\n\
    \  var primesIndex39 = 0;\n  var primesIndex40 = 0;\n  var primesIndex41 = 0;\n\
    \  var primesIndex42 = 0;\n  var primesIndex43 = 0;\n  var primesIndex44 = 0;\n\
    \  var primesIndex45 = 0;\n  var primesIndex46 = 0;\n  var primesIndex47 = 0;\n\
    \  var primesIndex48 = 0;\n  var primesIndex49 = 0;\n  var primesIndex50 = 0;\n\
    \  var primesIndex51 = 0;\n  var primesIndex52 = 0;\n  var primesIndex53 = 0;\n\
    \  var primesIndex54 = 0;\n  var primesIndex55 = 0;\n  var primesIndex56 = 0;\n\
    \  var primesIndex57 = 0;\n  var primesIndex58 = 0;\n  var primesIndex59 = 0;\n\
    \  var primesIndex60 = 0;\n  var primesIndex61 = 0;\n  var primesIndex62 = 0;\n\
    \  var primesIndex63 = 0;\n  var primesIndex64 = 0;\n  var primesIndex65 = 0;\n\
    \  var primesIndex66 = 0;\n  var primesIndex67 = 0;\n  var primesIndex68 = 0;\n",
  "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n  let primes\
    \ = [];\n  let primes_found = [];\n  let primes_found2 = [];\n  let primes_found3\
    \ = [];\n  let primes_found4 = [];\n  let primes_found5 = [];\n  let primes_found6\
    \ = [];\n  let primes_found7 = [];\n  let primes_found8 = [];\n  let primes_found9\
    \ = [];\n  let primes_found10 = [];\n  let primes_found11 = [];\n  let primes_found12\
    \ = [];\n  let primes_found13 = [];\n  let primes_found14 = [];\n  let primes_found15\
    \ = [];\n  let primes_found16 = [];\n  let primes_found17 = [];\n  let primes_found18\
    \ = [];\n  let primes_found19 = [];\n  let primes_found20 = [];\n  let primes_found21\
    \ = [];\n  let primes_found22 = [];\n  let primes_found23 = [];\n  let primes_found24\
    \ = [];\n  let primes_found25 = [];\n  let primes_found26 = [];\n  let primes_found27\
    \ = [];\n  let primes_found28 = [];\n  let primes_found29 = [];\n  let primes_found30\
    \ = [];\n  let primes_found31 = [];\n  let primes_found32 = [];\n  let primes_found33\
    \ = [];\n  let primes_found34 = [];\n  let primes_found35 = [];\n  let primes_found36\
    \ = [];\n  let primes_found37 = [];\n  let primes_found38 = [];\n  let primes_found39\
    \ = [];\n  let primes_found40 = [];\n  let primes_found41 = [];\n  let primes_found42\
    \ = [];\n  let primes_found43 = [];\n  let primes_found44 = [];\n  let primes_found45\
    \ = [];\n  let primes_found46 = [];\n  let primes_found47 = [];\n  let primes_found48\
    \ = [];\n  let primes_found49 = [];\n  let primes_found50 = [];\n  let primes_found51\
    \ = [];\n  let primes_found52 = [];\n  let primes_found53 = [];\n  let primes_found54\
    \ = [];\n  let primes_found55 = [];\n  let primes_found56 = [];\n  let primes_found57\
    \ = [];\n  let primes_found58 = [];\n  let primes_found59 = [];\n  let primes_found60\
    \ = [];\n  let primes_found61 = [];\n  let primes_found62 = [];\n  let primes_found63\
    \ = [];\n  let primes_found64 = [];\n  let primes_found65 = [];\n  let primes_found66\
    \ = [];\n  let primes_found67 = [];\n  let primes_found68 = [];\n  let ", "  var\
    \ hex = num;\n  var hexLength = hex.length;\n  var hexDigits = \"0123456789ABCDEF\"\
    ;\n  var hexDigitCount = hexDigits.length;\n  var hexDigitCount2 = hexDigitCount*2;\n\
    \  var hexDigitCount3 = hexDigitCount*3;\n  var hexDigitCount4 = hexDigitCount*4;\n\
    \  var hexDigitCount5 = hexDigitCount*5;\n  var hexDigitCount6 = hexDigitCount*6;\n\
    \  var hexDigitCount7 = hexDigitCount*7;\n  var hexDigitCount8 = hexDigitCount*8;\n\
    \  var hexDigitCount9 = hexDigitCount*9;\n  var hexDigitCount10 = hexDigitCount*10;\n\
    \  var hexDigitCount11 = hexDigitCount*11;\n  var hexDigitCount12 = hexDigitCount*12;\n\
    \  var hexDigitCount13 = hexDigitCount*13;\n  var hexDigitCount14 = hexDigitCount*14;\n\
    \  var hexDigitCount15 = hexDigitCount*15;\n  var hexDigitCount16 = hexDigitCount*16;\n\
    \  var hexDigitCount17 = hexDigitCount*17;\n  var hexDigitCount18 = hexDigitCount*18;\n\
    \  var hexDigitCount19 = hexDigitCount*19;\n  var hexDigitCount20 = hexDigitCount*20;\n\
    \  var hexDigitCount21 = hexDigitCount*21;\n  var hexDigitCount22 = hexDigitCount*22;\n\
    \  var hexDigitCount23 = hexDigitCount*23;\n  var hexDigitCount24 = hexDigitCount*24;\n\
    \  var hexDigitCount25 = hexDigitCount*25;\n  var hexDigitCount26 = hexDigitCount*26;\n\
    \  var hexDigitCount27 = hexDigitCount*27;\n  var hexDigitCount28 = hexDigitCount*28;\n\
    \  var hexDigitCount29 = hexDigitCount*29;\n  var hexDigitCount30 = hexDigitCount*30;\n\
    \  var hexDigitCount31 = hexDigitCount*31;\n  var hexDigitCount32 = hexDigitCount*32;\n\
    \  var hexDigitCount33 = hexDigitCount*33;\n  var hexDigitCount34 = hexDigitCount*34;\n\
    \  var hexDigitCount35 = hexDigitCount*35;\n  var hexDigitCount36 = hexDigitCount*36;\n\
    \  var hexDigitCount37 = hexDigitCount*37;\n  var hexDigitCount38 = hexDigitCount*38;\n\
    \  var hexDigitCount39 = hexDigitCount*39;\n  var hexDigitCount40 = hexDigitCount*40;\n\
    \  var hexDigitCount4", "  var hex = num.toString().split('');\n  var hexLength\
    \ = hex.length;\n  var hexKey = 0;\n  for(var i=0;i<hexLength;i++){\n    var hexDigit\
    \ = hex[i];\n    if(hexDigit == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit\
    \ == 'D' || hexDigit == 'E' || hexDigit == 'F'){\n      hexKey++;\n    }\n  }\n\
    \  return hexKey;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split('');\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes = [];\n  let hexDigitPrimeCount\
    \ = 0;\n  let hexDigitPrimeSum = 0;\n  let hexDigitPrimeSum2 = 0;\n  let hexDigitPrimeSum3\
    \ = 0;\n  let hexDigitPrimeSum4 = 0;\n  let hexDigitPrimeSum5 = 0;\n  let hexDigitPrimeSum6\
    \ = 0;\n  let hexDigitPrimeSum7 = 0;\n  let hexDigitPrimeSum8 = 0;\n  let hexDigitPrimeSum9\
    \ = 0;\n  let hexDigitPrimeSum10 = 0;\n  let hexDigitPrimeSum11 = 0;\n  let hexDigitPrimeSum12\
    \ = 0;\n  let hexDigitPrimeSum13 = 0;\n  let hexDigitPrimeSum14 = 0;\n  let hexDigitPrimeSum15\
    \ = 0;\n  let hexDigitPrimeSum16 = 0;\n  let hexDigitPrimeSum17 = 0;\n  let hexDigitPrimeSum18\
    \ = 0;\n  let hexDigitPrimeSum19 = 0;\n  let hexDigitPrimeSum20 = 0;\n  let hexDigitPrimeSum21\
    \ = 0;\n  let hexDigitPrimeSum22 = 0;\n  let hexDigitPrimeSum23 = 0;\n  let hexDigitPrimeSum24\
    \ = 0;\n  let hexDigitPrimeSum25 = 0;\n  let hexDigitPrimeSum26 = 0;\n  let hexDigitPrimeSum27\
    \ = 0;\n  let hexDigitPrimeSum28 = 0;\n  let hexDigitPrimeSum29 = 0;\n  let hexDigitPrimeSum30\
    \ = 0;\n  let hexDigitPrimeSum31 = 0;\n  let hexDigitPrimeSum32 = 0;\n  let hexDigitPrimeSum33\
    \ = 0;\n  let hexDigitPrimeSum34 = 0;\n  let hexDigitPrimeSum35 = 0;\n  let hexDigitPrimeSum36\
    \ = 0;\n  let hexDigitPrimeSum37 = 0;\n  let hexDigitPrimeSum38 = 0;\n  let hexDigitPrimeSum39\
    \ = 0;\n  let hexDigitPrimeSum40 = 0;\n  let hexDigitPrimeSum41 = 0;\n  let hexDigitPrimeSum42\
    \ = 0;\n  let hexDigitPrimeSum43 = 0;\n  let hexDigitPrimeSum44 = 0;\n  let hexDigitPrimeSum45\
    \ = 0;\n  let hexDigitPrimeSum46 = 0;\n  let hexDigitPrimeSum47 = 0;\n  let hexDigitPrimeSum48\
    \ = 0;\n  let hexDigitPrimeSum49 = 0;\n  let hexDigitPrimeSum50 = 0;\n  let hexDigitPrimeSum51\
    \ = 0;\n  let hexDigitPrimeSum52 = 0;\n  let hexDigitPrimeSum53 = 0;\n  let hex",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ primeDigits = [];\n    let primeCount = 0;\n    let primeCount2 = 0;\n    let\
    \ primeCount3 = 0;\n    let primeCount4 = 0;\n    let primeCount5 = 0;\n    let\
    \ primeCount6 = 0;\n    let primeCount7 = 0;\n    let primeCount8 = 0;\n    let\
    \ primeCount9 = 0;\n    let primeCount10 = 0;\n    let primeCount11 = 0;\n   \
    \ let primeCount12 = 0;\n    let primeCount13 = 0;\n    let primeCount14 = 0;\n\
    \    let primeCount15 = 0;\n    let primeCount16 = 0;\n    let primeCount17 =\
    \ 0;\n    let primeCount18 = 0;\n    let primeCount19 = 0;\n    let primeCount20\
    \ = 0;\n    let primeCount21 = 0;\n    let primeCount22 = 0;\n    let primeCount23\
    \ = 0;\n    let primeCount24 = 0;\n    let primeCount25 = 0;\n    let primeCount26\
    \ = 0;\n    let primeCount27 = 0;\n    let primeCount28 = 0;\n    let primeCount29\
    \ = 0;\n    let primeCount30 = 0;\n    let primeCount31 = 0;\n    let primeCount32\
    \ = 0;\n    let primeCount33 = 0;\n    let primeCount34 = 0;\n    let primeCount35\
    \ = 0;\n    let primeCount36 = 0;\n    let primeCount37 = 0;\n    let primeCount38\
    \ = 0;\n    let primeCount39 = 0;\n    let primeCount40 = 0;\n    let primeCount41\
    \ = 0;\n    let primeCount42 = 0;\n    let primeCount43 = 0;\n    let primeCount44\
    \ = 0;\n    let primeCount45 = 0;\n    let primeCount46 = 0;\n    let primeCount47\
    \ = 0;\n    let primeCount48 = 0;\n    let primeCount49 = 0;\n    let primeCount50\
    \ = 0;\n    let primeCount51 = 0;\n    let primeCount52 = 0;\n    let primeCount53\
    \ = 0;\n    let primeCount54 = 0;\n    let primeCount55 = 0;\n    let primeCount56\
    \ = 0;\n    let primeCount57 = 0;\n    let primeCount58 = 0;\n    let primeCount59\
    \ = 0;\n    let primeCount60 = 0;\n    let primeCount61 = 0;\n    let primeCount62\
    \ = 0;\n    let primeCount63 = 0;\n    let primeCount64 = 0;\n    let primeCount65\
    \ = 0;\n    let primeCount66 = 0;\n    let primeCount67 = 0;\n    let primeCount68\
    \ = 0;\n    let primeCount69 = 0;\n    let primeCount70 = 0;\n    let primeCount71\
    \ = 0;\n    let primeCount72 = 0;\n    let primeCount73 = 0;\n    let primeCount74\
    \ = 0;\n    let primeCount75 = 0;\n    let primeCount76 = 0;\n    let primeCount77\
    \ = 0;\n    let primeCount78 = 0;\n    let primeCount79 = 0;\n    let primeCount80\
    \ = 0;\n    let primeCount81 = 0;\n    let primeCount82 = 0;\n    let primeCount83",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ primeDigits = [];\n    let primeCount = 0;\n    for(let i = 0; i < hexDigits.length;\
    \ i++){\n        if(hexDigits[i] === \"A\" || hexDigits[i] === \"B\" || hexDigits[i]\
    \ === \"C\" || hexDigits[i] === \"D\" || hexDigits[i] === \"E\" || hexDigits[i]\
    \ === \"F\"){\n            primeDigits.push(hexDigits[i]);\n        }\n    }\n\
    \    for(let i = 0; i < primeDigits.length; i++){\n        if(primeDigits[i] ===\
    \ \"2\"){\n            primeCount++;\n        }\n    }\n    return primeCount;\n\
    }\n", "    let hex = num.split(\"\");\n    let hex2 = [];\n    for(let i = 0;\
    \ i < hex.length; i++){\n        hex2.push(hex[i].charCodeAt(0).toString(16));\n\
    \    }\n    let hex3 = hex2.join(\"\");\n    let hex4 = hex3.split(\"\");\n  \
    \  let hex5 = hex4.join(\"\");\n    let hex6 = hex5.split(\"\");\n    let hex7\
    \ = hex6.join(\"\");\n    let hex8 = hex7.split(\"\");\n    let hex9 = hex8.join(\"\
    \");\n    let hex10 = hex9.split(\"\");\n    let hex11 = hex10.join(\"\");\n \
    \   let hex12 = hex11.split(\"\");\n    let hex13 = hex12.join(\"\");\n    let\
    \ hex14 = hex13.split(\"\");\n    let hex15 = hex14.join(\"\");\n    let hex16\
    \ = hex15.split(\"\");\n    let hex17 = hex16.join(\"\");\n    let hex18 = hex17.split(\"\
    \");\n    let hex19 = hex18.join(\"\");\n    let hex20 = hex19.split(\"\");\n\
    \    let hex21 = hex20.join(\"\");\n    let hex22 = hex21.split(\"\");\n    let\
    \ hex23 = hex22.join(\"\");\n    let hex24 = hex23.split(\"\");\n    let hex25\
    \ = hex24.join(\"\");\n    let hex26 = hex25.join(\"\");\n    let hex27 = hex26.join(\"\
    \");\n    let hex28 = hex27.join(\"\");\n    let hex29 = hex28.join(\"\");\n \
    \   let hex30 = hex29.join(\"\");\n    let hex31 = hex30.split(\"\");\n    let\
    \ hex32 = hex31.join(\"\");\n    let hex33 = hex32.split(\"\");\n    let hex34\
    \ = hex33.join(\"\");\n    let hex35 = hex34.join(\"\");\n    let hex36 = hex35.join(\"\
    \");\n    let hex37 = hex36.join(\"\");\n    let hex38 = hex37.join(\"\");\n \
    \   let hex39 = hex38.join(\"\");\n    let hex40 = hex39.join(\"\");\n    let\
    \ hex41 = hex40.split(\"\");\n    let hex42 = hex41.join(\"\");\n    let hex43\
    \ = hex42.join(\"\");\n    let hex44 = hex43.split(\"\");\n    let hex45 = hex44.join(\"\
    \");\n    let hex46 = hex45.join(\"\");\n    let hex47 = hex46.join(\"\");\n \
    \   let hex48 = hex47.join(\"\");\n    let hex49 = hex48.join(\"\");\n    let\
    \ hex50 = hex49.join(\"\");\n    let hex51 = hex50.split(\"\");\n    let hex52\
    \ = hex51.join(\"\");\n    let hex53 = hex52.join(\"\");\n    let hex54 = hex53.split(\"\
    \");\n    let hex55 = hex54.join(\"\");\n    let ", "  let hex = num.toString().split('');\n\
    \  let primes = [];\n  let prime_counter = 0;\n  let prime_counter2 = 0;\n  let\
    \ prime_counter3 = 0;\n  let prime_counter4 = 0;\n  let prime_counter5 = 0;\n\
    \  let prime_counter6 = 0;\n  let prime_counter7 = 0;\n  let prime_counter8 =\
    \ 0;\n  let prime_counter9 = 0;\n  let prime_counter10 = 0;\n  let prime_counter11\
    \ = 0;\n  let prime_counter12 = 0;\n  let prime_counter13 = 0;\n  let prime_counter14\
    \ = 0;\n  let prime_counter15 = 0;\n  let prime_counter16 = 0;\n  let prime_counter17\
    \ = 0;\n  let prime_counter18 = 0;\n  let prime_counter19 = 0;\n  let prime_counter20\
    \ = 0;\n  let prime_counter21 = 0;\n  let prime_counter22 = 0;\n  let prime_counter23\
    \ = 0;\n  let prime_counter24 = 0;\n  let prime_counter25 = 0;\n  let prime_counter26\
    \ = 0;\n  let prime_counter27 = 0;\n  let prime_counter28 = 0;\n  let prime_counter29\
    \ = 0;\n  let prime_counter30 = 0;\n  let prime_counter31 = 0;\n  let prime_counter32\
    \ = 0;\n  let prime_counter33 = 0;\n  let prime_counter34 = 0;\n  let prime_counter35\
    \ = 0;\n  let prime_counter36 = 0;\n  let prime_counter37 = 0;\n  let prime_counter38\
    \ = 0;\n  let prime_counter39 = 0;\n  let prime_counter40 = 0;\n  let prime_counter41\
    \ = 0;\n  let prime_counter42 = 0;\n  let prime_counter43 = 0;\n  let prime_counter44\
    \ = 0;\n  let prime_counter45 = 0;\n  let prime_counter46 = 0;\n  let prime_counter47\
    \ = 0;\n  let prime_counter48 = 0;\n  let prime_counter49 = 0;\n  let prime_counter50\
    \ = 0;\n  let prime_counter51 = 0;\n  let prime_counter52 = 0;\n  let prime_counter53\
    \ = 0;\n  let prime_counter54 = 0;\n  let prime_counter55 = 0;\n  let prime_counter56\
    \ = 0;\n  let prime_counter57 = 0;\n  let prime_counter58 = 0;\n  let prime_counter59\
    \ = 0;\n  let prime_counter60 = 0;\n  let prime_counter61 = 0;\n  let prime_counter62\
    \ = 0;\n  let prime_counter63 = 0;\n  let prime_counter64 = 0;\n  let prime_counter65\
    \ = 0;\n  let prime_counter66 = 0;\n  let prime_counter67 = 0;\n  let prime_counter68\
    \ = 0;\n  let prime_counter69 = 0;\n  let prime_counter70 = 0;\n  let prime_counter71\
    \ = 0;\n  let prime_counter72 = 0;\n", "    let hexNum = num.toUpperCase();\n\
    \    let hexNumArray = hexNum.split(\"\");\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNumArrayLength\
    \ = hexNumArrayLength - 1;\n    let hexNumArrayLength = hexNumArrayLength - 1;\n\
    \    let hexNumArrayLength = hexNumArrayLength - 1;\n    let hexNum", "  var hex\
    \ = num;\n  var hexLength = hex.length;\n  var hexDigits = hex.split(\"\");\n\
    \  var hexDigits_length = hexDigits.length;\n  var hexDigits_array = [];\n  var\
    \ hexDigits_array_length = hexDigits_array.length;\n  var hexDigits_array_length_max\
    \ = hexDigits_array_length - 1;\n  var hexDigits_array_length_min = hexDigits_array_length\
    \ - 2;\n  var hexDigits_array_length_mid = hexDigits_array_length - 3;\n  var\
    \ hexDigits_array_length_mid2 = hexDigits_array_length - 4;\n  var hexDigits_array_length_mid3\
    \ = hexDigits_array_length - 5;\n  var hexDigits_array_length_mid4 = hexDigits_array_length\
    \ - 6;\n  var hexDigits_array_length_mid5 = hexDigits_array_length - 7;\n  var\
    \ hexDigits_array_length_mid6 = hexDigits_array_length - 8;\n  var hexDigits_array_length_mid7\
    \ = hexDigits_array_length - 9;\n  var hexDigits_array_length_mid8 = hexDigits_array_length\
    \ - 10;\n  var hexDigits_array_length_mid9 = hexDigits_array_length - 11;\n  var\
    \ hexDigits_array_length_mid10 = hexDigits_array_length - 12;\n  var hexDigits_array_length_mid11\
    \ = hexDigits_array_length - 13;\n  var hexDigits_array_length_mid12 = hexDigits_array_length\
    \ - 14;\n  var hexDigits_array_length_mid13 = hexDigits_array_length - 15;\n \
    \ var hexDigits_array_length_mid14 = hexDigits_array_length - 16;\n  var hexDigits_array_length_mid15\
    \ = hexDigits_array_length - 17;\n  var hexDigits_array_length_mid16 = hexDigits_array_length\
    \ - 18;\n  var hexDigits_array_length_mid17 = hexDigits_array_length - 19;\n \
    \ var hexDigits_array_length_mid18 = hexDigits_array_length - 20;\n  var hexDigits_array_length_mid19\
    \ = hexDigits_array_length - 21;\n  var hexDigits_array_length_mid20 = hexDigits_array_length\
    \ - 22;\n  var hexDigits_array_length_mid21 = hexDigits_array_length - 23;\n \
    \ var hexDigits_array_length_mid22 = hexDigits_array_length - 24;\n  var hexDigits_array_length_mid23\
    \ = hexDigits_array_length - 25;\n  var hexDigits_array_length_mid24 = hexDigits_array_length\
    \ - 26;\n  var hexDigits_array_length_mid25 = hexDigits_array_length - 27;\n \
    \ var hexDigits_array_length_mid26 = hexDigits_array_length - 28;\n  var hexDigits_array_length_mid27\
    \ = hexDigits_array_length - 29;\n  var hexDigit", "  var hex = num.toString().split('');\n\
    \  var count = 0;\n  for(var i=0;i<hex.length;i++){\n    var hexDigit = hex[i].charCodeAt(0);\
    \ \n    if(hexDigit >= 48 && hexDigit <= 57){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "    let hex = num.replace(/[^0-9A-F]/g,\"\");\n    let hex2 =\
    \ hex.toUpperCase();\n    let hex3 = hex2.split(\"\");\n    let hex4 = hex3.filter(x\
    \ => x !== \"A\" && x !== \"B\" && x !== \"C\" && x !== \"D\" && x !== \"E\" &&\
    \ x !== \"F\");\n    let hex5 = hex4.length;\n    let hex6 = hex5.filter(x =>\
    \ x % 2 === 0);\n    let hex7 = hex6.length;\n    let hex8 = hex7 * 2;\n    let\
    \ hex9 = hex8 * 2;\n    let hex10 = hex9 * 2;\n    let hex11 = hex10 * 2;\n  \
    \  let hex12 = hex11 * 2;\n    let hex13 = hex12 * 2;\n    let hex14 = hex13 *\
    \ 2;\n    let hex15 = hex14 * 2;\n    let hex16 = hex15 * 2;\n    let hex17 =\
    \ hex16 * 2;\n    let hex18 = hex17 * 2;\n    let hex19 = hex18 * 2;\n    let\
    \ hex20 = hex19 * 2;\n    let hex21 = hex20 * 2;\n    let hex22 = hex21 * 2;\n\
    \    let hex23 = hex22 * 2;\n    let hex24 = hex23 * 2;\n    let hex25 = hex24\
    \ * 2;\n    let hex26 = hex25 * 2;\n    let hex27 = hex26 * 2;\n    let hex28\
    \ = hex27 * 2;\n    let hex29 = hex28 * 2;\n    let hex30 = hex29 * 2;\n    let\
    \ hex31 = hex30 * 2;\n    let hex32 = hex31 * 2;\n    let hex33 = hex32 * 2;\n\
    \    let hex34 = hex33 * 2;\n    let hex35 = hex34 * 2;\n    let hex36 = hex35\
    \ * 2;\n    let hex37 = hex36 * 2;\n    let hex38 = hex37 * 2;\n    let hex39\
    \ = hex38 * 2;\n    let hex40 = hex39 * 2;\n    let hex41 = hex40 * 2;\n    let\
    \ hex42 = hex41 * 2;\n    let hex43 = hex42 * 2;\n    let hex44 = hex43 * 2;\n\
    \    let hex45 = hex44 * 2;\n    let hex46 = hex45 * 2;\n    let hex47 = hex46\
    \ * 2;\n    let hex48 = hex47 * 2;\n    let hex49 = hex48 * 2;\n    let hex50\
    \ = hex49 * 2;\n    let hex51 = hex50 * 2;\n    let hex52 = hex51 * 2;\n    let\
    \ hex53 = hex52 * 2;\n    let hex54 = hex53 * 2;\n    let hex55 = hex54", "  \
    \  let hex = num.replace(/[^0-9A-F]/g,\"\");\n    let hexDigits = hex.length;\n\
    \    let hexDigitCount = 0;\n    let primeCount = 0;\n    let primeDigitCount\
    \ = 0;\n    for(let i = 0; i < hexDigits; i++){\n        let hexDigit = hex.charAt(i);\n\
    \        if(hexDigit == \"A\" || hexDigit == \"B\" || hexDigit == \"C\" || hexDigit\
    \ == \"D\" || hexDigit == \"E\" || hexDigit == \"F\"){\n            hexDigitCount++;\n\
    \        }\n        if(hexDigit == \"2\" || hexDigit == \"3\" || hexDigit == \"\
    5\" || hexDigit == \"7\" || hexDigit == \"11\" || hexDigit == \"13\" || hexDigit\
    \ == \"17\" || hexDigit == \"19\" || hexDigit == \"23\" || hexDigit == \"29\"\
    \ || hexDigit == \"31\" || hexDigit == \"37\" || hexDigit == \"41\" || hexDigit\
    \ == \"43\" || hexDigit == \"47\" || hexDigit == \"53\" || hexDigit == \"59\"\
    \ || hexDigit == \"61\" || hexDigit == \"67\" || hexDigit == \"71\" || hexDigit\
    \ == \"73\" || hexDigit == \"79\" || hexDigit == \"83\" || hexDigit == \"89\"\
    \ || hexDigit == \"97\"){\n            primeCount++;\n        }\n        if(hexDigit\
    \ == \"2\"){\n            primeDigitCount++;\n        }\n        if(hexDigit ==\
    \ \"3\"){\n            primeDigitCount++;\n        }\n        if(hexDigit == \"\
    5\"){\n            primeDigitCount++;\n        }\n        if(hexDigit == \"7\"\
    ){\n            primeDigitCount++;\n        }\n        if(hexDigit == \"11\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"13\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"17\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"19\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"23\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"29\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"31\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"37\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"41\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"43\"){\n\
    \            primeDigitCount++;\n        }\n        if(hexDigit == \"47\"){\n\
    \            primeDigitCount++;", "    let hex = num.toUpperCase();\n    let primes\
    \ = [];\n    let prime_counter = 0;\n    let prime_counter2 = 0;\n    let prime_counter3\
    \ = 0;\n    let prime_counter4 = 0;\n    let prime_counter5 = 0;\n    let prime_counter6\
    \ = 0;\n    let prime_counter7 = 0;\n    let prime_counter8 = 0;\n    let prime_counter9\
    \ = 0;\n    let prime_counter10 = 0;\n    let prime_counter11 = 0;\n    let prime_counter12\
    \ = 0;\n    let prime_counter13 = 0;\n    let prime_counter14 = 0;\n    let prime_counter15\
    \ = 0;\n    let prime_counter16 = 0;\n    let prime_counter17 = 0;\n    let prime_counter18\
    \ = 0;\n    let prime_counter19 = 0;\n    let prime_counter20 = 0;\n    let prime_counter21\
    \ = 0;\n    let prime_counter22 = 0;\n    let prime_counter23 = 0;\n    let prime_counter24\
    \ = 0;\n    let prime_counter25 = 0;\n    let prime_counter26 = 0;\n    let prime_counter27\
    \ = 0;\n    let prime_counter28 = 0;\n    let prime_counter29 = 0;\n    let prime_counter30\
    \ = 0;\n    let prime_counter31 = 0;\n    let prime_counter32 = 0;\n    let prime_counter33\
    \ = 0;\n    let prime_counter34 = 0;\n    let prime_counter35 = 0;\n    let prime_counter36\
    \ = 0;\n    let prime_counter37 = 0;\n    let prime_counter38 = 0;\n    let prime_counter39\
    \ = 0;\n    let prime_counter40 = 0;\n    let prime_counter41 = 0;\n    let prime_counter42\
    \ = 0;\n    let prime_counter43 = 0;\n    let prime_counter44 = 0;\n    let prime_counter45\
    \ = 0;\n    let prime_counter46 = 0;\n    let prime_counter47 = 0;\n    let prime_counter48\
    \ = 0;\n    let prime_counter49 = 0;\n    let prime_counter50 = 0;\n    let prime_counter51\
    \ = 0;\n    let prime_counter52 = 0;\n    let prime_counter53 = 0;\n    let prime_counter54\
    \ = 0;\n    let prime_counter55 = 0;\n    let prime_counter56 = 0;\n    let prime_counter57\
    \ = 0;\n    let prime_counter58 = 0;\n    let prime_counter59 = 0;\n    let prime_counter60\
    \ = 0;\n    let prime_counter61 = 0;\n    let prime_counter62 = 0;\n    let prime_counter63\
    \ = 0;\n    let prime_counter64 = 0;\n    let prime_counter65 = 0;\n    let prime_counter66\
    \ = 0;\n    let prime_counter67 = 0;\n    let prime_counter68 = 0;\n    let prime_counter69\
    \ = 0;\n    let prime_counter70 = 0;\n    let prime_counter71 = 0;\n    let prime_counter72\
    \ = 0;\n    let prime", "  var hex = num.split(\"\");\n  var hex_res = hex.filter(function(v){return\
    \ v>=0}).length;\n  return hex_res;\n}\n", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join('');\n    let primes = hex_key.primes;\n\
    \    let primes_len = primes.length;\n    let primes_num = hex_key.primes_num;\n\
    \    let primes_num_len = primes_num.length;\n    let primes_num_num_len = primes_num_len.length;\n\
    \    let primes_num_num_num_len = primes_num_num_len.length;\n    let primes_num_num_num_num_len\
    \ = primes_num_num_num_len.length;\n    let primes_num_num_num_num_num_len = primes_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len =\
    \ primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len\
    \ = primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len\
    \ = primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len.length;\n\
    \    let primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len\
    \ = primes_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_len.length;",
  "  let hex = num.toUpperCase();\n  let hexDigits = [...hex];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitPrimes = [];\n  let hexDigitPrimeCount =\
    \ 0;\n  let hexDigitPrimePrimes = [];\n  let hexDigitPrimePrimeCount = 0;\n  let\
    \ hexDigitPrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimeCount = 0;\n  let\
    \ hexDigitPrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n \
    \ let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePri", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n    let hexDigitCount33\
    \ = hexDigitCount", "    let hexadecimal = num.split(\"\");\n    let prime_numbers\
    \ = [];\n    let prime_numbers_counter = 0;\n    let prime_numbers_counter_max\
    \ = hexadecimal.length;\n    for(let i = 0; i < hexadecimal.length; i++){\n  \
    \      if(hexadecimal[i] === \"A\" || hexadecimal[i] === \"B\" || hexadecimal[i]\
    \ === \"C\" || hexadecimal[i] === \"D\" || hexadecimal[i] === \"E\" || hexadecimal[i]\
    \ === \"F\"){\n            prime_numbers.push(hexadecimal[i]);\n        }\n  \
    \  }\n    for(let i = 0; i < prime_numbers.length; i++){\n        for(let j =\
    \ 0; j < prime_numbers.length; j++){\n            if(prime_numbers[i] === prime_numbers[j]){\n\
    \                prime_numbers_counter++;\n            }\n        }\n    }\n \
    \   for(let i = 0; i < prime_numbers.length; i++){\n        if(prime_numbers_counter\
    \ === prime_numbers_counter_max){\n            return prime_numbers[i];\n    \
    \    }\n    }\n}\n", "    var hex = num.split(\"\");\n    var count = 0;\n   \
    \ for(var i=0;i<hex.length;i++){\n        if(hex[i]==\"A\"||hex[i]==\"B\"||hex[i]==\"\
    C\"||hex[i]==\"D\"||hex[i]==\"E\"||hex[i]==\"F\"){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n", "  let hex = num.replace(/[^0-9A-F]/g,\"\
    \");\n  let hex2 = hex.replace(/[0-9A-F]/g,\"\");\n  let hex3 = hex2.replace(/[0-9A-F]/g,\"\
    \");\n  let hex4 = hex3.replace(/[0-9A-F]/g,\"\");\n  let hex5 = hex4.replace(/[0-9A-F]/g,\"\
    \");\n  let hex6 = hex5.replace(/[0-9A-F]/g,\"\");\n  let hex7 = hex6.replace(/[0-9A-F]/g,\"\
    \");\n  let hex8 = hex7.replace(/[0-9A-F]/g,\"\");\n  let hex9 = hex8.replace(/[0-9A-F]/g,\"\
    \");\n  let hex10 = hex9.replace(/[0-9A-F]/g,\"\");\n  let hex11 = hex10.replace(/[0-9A-F]/g,\"\
    \");\n  let hex12 = hex11.replace(/[0-9A-F]/g,\"\");\n  let hex13 = hex12.replace(/[0-9A-F]/g,\"\
    \");\n  let hex14 = hex13.replace(/[0-9A-F]/g,\"\");\n  let hex15 = hex14.replace(/[0-9A-F]/g,\"\
    \");\n  let hex16 = hex15.replace(/[0-9A-F]/g,\"\");\n  let hex17 = hex16.replace(/[0-9A-F]/g,\"\
    \");\n  let hex18 = hex17.replace(/[0-9A-F]/g,\"\");\n  let hex19 = hex18.replace(/[0-9A-F]/g,\"\
    \");\n  let hex20 = hex19.replace(/[0-9A-F]/g,\"\");\n  let hex21 = hex20.replace(/[0-9A-F]/g,\"\
    \");\n  let hex22 = hex21.replace(/[0-9A-F]/g,\"\");\n  let hex23 = hex22.replace(/[0-9A-F]/g,\"\
    \");\n  let hex24 = hex23.replace(/[0-9A-F]/g,\"\");\n  let hex25 = hex24.replace(/[0-9A-F]/g,\"\
    \");\n  let hex26 = hex25.replace(/[0-9A-F]/g,\"\");\n  let hex27 = hex26.replace(/[0-9A-F]/g,\"\
    \");\n  let hex28 = hex27.replace(/[0-9A-F]/g,\"\");\n  let hex29 = hex28.replace(/[0-9A-F]/g,\"\
    \");\n  let hex30 = hex29.replace(/[0-9A-F]/g,\"\");\n  let hex31 = hex30.replace(/[0-9A-F]/g,\"\
    \");\n  let hex32 = hex31.replace(/[0-9A-F]/g,\"\");\n  let hex33 = hex32.replace(/[0-9A-F]/g,\"\
    \");\n  let hex34 = hex33.replace(/[0-9A-F]/g,\"\");\n  let hex35 = hex34.replace(/[0-9A-F]/g,\"\
    \");\n  let hex36 = hex35.replace(/[0-9A-F]/g,\"\");\n  let hex37 = hex36.replace(/[0-9A-F]/g,\"\
    \");\n", "    var hexadecimal = num.toUpperCase();\n    var prime_digits = hexadecimal.split(\"\
    \");\n    var prime_digits_length = prime_digits.length;\n    var prime_digits_array\
    \ = [];\n    var prime_digits_array_length = prime_digits_array.length;\n    var\
    \ prime_digits_array_length_max = prime_digits_array_length-1;\n    var prime_digits_array_length_min\
    \ = prime_digits_array_length+1;\n    var prime_digits_array_length_mid = prime_digits_array_length/2;\n\
    \    var prime_digits_array_length_mid2 = prime_digits_array_length/4;\n    var\
    \ prime_digits_array_length_mid3 = prime_digits_array_length/8;\n    var prime_digits_array_length_mid4\
    \ = prime_digits_array_length/16;\n    var prime_digits_array_length_mid5 = prime_digits_array_length/32;\n\
    \    var prime_digits_array_length_mid6 = prime_digits_array_length/64;\n    var\
    \ prime_digits_array_length_mid7 = prime_digits_array_length/128;\n    var prime_digits_array_length_mid8\
    \ = prime_digits_array_length/256;\n    var prime_digits_array_length_mid9 = prime_digits_array_length/512;\n\
    \    var prime_digits_array_length_mid10 = prime_digits_array_length/1024;\n \
    \   var prime_digits_array_length_mid11 = prime_digits_array_length/2048;\n  \
    \  var prime_digits_array_length_mid12 = prime_digits_array_length/4096;\n   \
    \ var prime_digits_array_length_mid13 = prime_digits_array_length/8192;\n    var\
    \ prime_digits_array_length_mid14 = prime_digits_array_length/16384;\n    var\
    \ prime_digits_array_length_mid15 = prime_digits_array_length/32768;\n    var\
    \ prime_digits_array_length_mid16 = prime_digits_array_length/65536;\n    var\
    \ prime_digits_array_length_mid17 = prime_digits_array_length/131072;\n    var\
    \ prime_digits_array_length_mid18 = prime_digits_array_length/262144;\n    var\
    \ prime_digits_array_length_mid19 = prime_digits_array_length/524288;\n    var\
    \ prime_digits_array_length_mid20 = prime_digits_array_length/1048576;\n    var\
    \ prime_digits_array_length_mid21 = prime_digits_array_length/2097152;\n    var\
    \ prime_digits_array_length_mid22 = prime_digit", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_count = 0;\n    let prime_digits = [];\n\
    \    let prime_digit_count = 0;\n    let prime_digit_sum = 0;\n    let prime_digit_sum2\
    \ = 0;\n    let prime_digit_sum3 = 0;\n    let prime_digit_sum4 = 0;\n    let\
    \ prime_digit_sum5 = 0;\n    let prime_digit_sum6 = 0;\n    let prime_digit_sum7\
    \ = 0;\n    let prime_digit_sum8 = 0;\n    let prime_digit_sum9 = 0;\n    let\
    \ prime_digit_sum10 = 0;\n    let prime_digit_sum11 = 0;\n    let prime_digit_sum12\
    \ = 0;\n    let prime_digit_sum13 = 0;\n    let prime_digit_sum14 = 0;\n    let\
    \ prime_digit_sum15 = 0;\n    let prime_digit_sum16 = 0;\n    let prime_digit_sum17\
    \ = 0;\n    let prime_digit_sum18 = 0;\n    let prime_digit_sum19 = 0;\n    let\
    \ prime_digit_sum20 = 0;\n    let prime_digit_sum21 = 0;\n    let prime_digit_sum22\
    \ = 0;\n    let prime_digit_sum23 = 0;\n    let prime_digit_sum24 = 0;\n    let\
    \ prime_digit_sum25 = 0;\n    let prime_digit_sum26 = 0;\n    let prime_digit_sum27\
    \ = 0;\n    let prime_digit_sum28 = 0;\n    let prime_digit_sum29 = 0;\n    let\
    \ prime_digit_sum30 = 0;\n    let prime_digit_sum31 = 0;\n    let prime_digit_sum32\
    \ = 0;\n    let prime_digit_sum33 = 0;\n    let prime_digit_sum34 = 0;\n    let\
    \ prime_digit_sum35 = 0;\n    let prime_digit_sum36 = 0;\n    let prime_digit_sum37\
    \ = 0;\n    let prime_digit_sum38 = 0;\n    let prime_digit_sum39 = 0;\n    let\
    \ prime_digit_sum40 = 0;\n    let prime_digit_sum41 = 0;\n    let prime_digit_sum42\
    \ = 0;\n    let prime_digit_sum43 = 0;\n    let prime_digit_sum44 = 0;\n    let\
    \ prime_digit_sum45 = 0;\n    let prime_digit_sum46 = 0;\n    let prime_digit_sum47\
    \ = 0;\n    let prime_digit_sum48 = 0;\n    let prime_digit_sum49 = 0;\n    let\
    \ prime_digit_sum50 = 0;\n    let prime_digit_sum51 = 0;\n    let prime_digit_sum52\
    \ = 0;\n    let prime_digit_sum53 = 0;\n    let prime_digit_sum54 = 0;\n    let\
    \ prime_digit_sum55 = 0;\n    let prime_digit_sum56 = 0;\n    let prime_digit_sum57\
    \ = 0;\n    let prime_digit_sum58 = 0;\n    let prime_digit_sum59 = 0;\n    let\
    \ prime_digit_sum60 = 0;\n    let prime_digit_sum61 = 0;", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_count = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i].match(/[0-9A-F]/)){\n            prime_count++;\n \
    \           primes.push(hex[i]);\n        }\n    }\n    let prime_digits = primes.join('').split('');\n\
    \    let prime_digits_count = prime_digits.length;\n    let prime_digits_count_2\
    \ = prime_digits_count - 1;\n    let prime_digits_count_3 = prime_digits_count\
    \ - 2;\n    let prime_digits_count_4 = prime_digits_count - 3;\n    let prime_digits_count_5\
    \ = prime_digits_count - 4;\n    let prime_digits_count_6 = prime_digits_count\
    \ - 5;\n    let prime_digits_count_7 = prime_digits_count - 6;\n    let prime_digits_count_8\
    \ = prime_digits_count - 7;\n    let prime_digits_count_9 = prime_digits_count\
    \ - 8;\n    let prime_digits_count_10 = prime_digits_count - 9;\n    let prime_digits_count_11\
    \ = prime_digits_count - 10;\n    let prime_digits_count_12 = prime_digits_count\
    \ - 11;\n    let prime_digits_count_13 = prime_digits_count - 12;\n    let prime_digits_count_14\
    \ = prime_digits_count - 13;\n    let prime_digits_count_15 = prime_digits_count\
    \ - 14;\n    let prime_digits_count_16 = prime_digits_count - 15;\n    let prime_digits_count_17\
    \ = prime_digits_count - 16;\n    let prime_digits_count_18 = prime_digits_count\
    \ - 17;\n    let prime_digits_count_19 = prime_digits_count - 18;\n    let prime_digits_count_20\
    \ = prime_digits_count - 19;\n    let prime_digits_count_21 = prime_digits_count\
    \ - 20;\n    let prime_digits_count_22 = prime_digits_count - 21;\n    let prime_digits_count_23\
    \ = prime_digits_count - 22;\n    let prime_digits_count_24 = prime_digits_count\
    \ - 23;\n    let prime_digits_count_25 = prime_digits_count - 24;\n    let prime_digits_count_26\
    \ = prime_digits_count - 25;\n    let prime_digits_count_27 = prime_digits_count\
    \ - 26;\n    let prime_digits_count_28 = prime_digits_count - 27;\n    let prime_digits_count_29",
  "    let hex = num.toUpperCase();\n    let prime_count = 0;\n    for(let i = 0;\
    \ i < hex.length; i++){\n        let digit = hex.charCodeAt(i);\n        if(digit\
    \ >= 48 && digit <= 57){\n            prime_count++;\n        }\n    }\n    return\
    \ prime_count;\n}\n", "    var hex = num.split(\"\");\n    var count = 0;\n  \
    \  var primes = [];\n    var prime_found = false;\n    var prime_found2 = false;\n\
    \    for(var i=0;i<hex.length;i++){\n        if(hex[i] == \"A\" || hex[i] == \"\
    B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"\
    ){\n            prime_found = true;\n            primes.push(hex[i]);\n      \
    \  }\n        if(hex[i] == \"2\"){\n            prime_found2 = true;\n       \
    \ }\n    }\n    if(prime_found == true && prime_found2 == true){\n        for(var\
    \ i=0;i<primes.length;i++){\n            if(primes[i] == \"2\"){\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you for your answer! I understand that my code\
    \ is not the most efficient, but I really want to understand why my code doesn't\
    \ work. Could you please explain why my code doesn't work?\n<|/ c |>\n<| c |>\n\
    I added some comments to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThank you\
    \ for your answer! I understand that my code is not the most efficient, but I\
    \ really want to understand why my code doesn't work. Could you please explain\
    \ why my code doesn't work?\n<|/ c |>\n<| c |>\nI added some comments to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| a tags=javascript |>\n<code>", "    var hex = num.toString().split('');\n\
    \    var hex_rev = [];\n    for(var i=0;i<hex.length;i++){\n        hex_rev.push(hex[i].charCodeAt(0)\
    \ - 48);\n    }\n    var primes = [];\n    for(var i=0;i<hex_rev.length;i++){\n\
    \        var prime = hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev[i]*hex_rev",
  "    var hex = num.toUpperCase();\n    var hexLength = hex.length;\n    var hexDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    var hexPrimes = [];\n    var hexPrimeCount = 0;\n    var hexPrimeCount2 =\
    \ 0;\n    var hexPrimeCount3 = 0;\n    var hexPrimeCount4 = 0;\n    var hexPrimeCount5\
    \ = 0;\n    var hexPrimeCount6 = 0;\n    var hexPrimeCount7 = 0;\n    var hexPrimeCount8\
    \ = 0;\n    var hexPrimeCount9 = 0;\n    var hexPrimeCount10 = 0;\n    var hexPrimeCount11\
    \ = 0;\n    var hexPrimeCount12 = 0;\n    var hexPrimeCount13 = 0;\n    var hexPrimeCount14\
    \ = 0;\n    var hexPrimeCount15 = 0;\n    var hexPrimeCount16 = 0;\n    var hexPrimeCount17\
    \ = 0;\n    var hexPrimeCount18 = 0;\n    var hexPrimeCount19 = 0;\n    var hexPrimeCount20\
    \ = 0;\n    var hexPrimeCount21 = 0;\n    var hexPrimeCount22 = 0;\n    var hexPrimeCount23\
    \ = 0;\n    var hexPrimeCount24 = 0;\n    var hexPrimeCount25 = 0;\n    var hexPrimeCount26\
    \ = 0;\n    var hexPrimeCount27 = 0;\n    var hexPrimeCount28 = 0;\n    var hexPrimeCount29\
    \ = 0;\n    var hexPrimeCount30 = 0;\n    var hexPrimeCount31 = 0;\n    var hexPrimeCount32\
    \ = 0;\n    var hexPrimeCount33 = 0;\n    var hexPrimeCount34 = 0;\n    var hexPrimeCount35\
    \ = 0;\n    var hexPrimeCount36 = 0;\n    var hexPrimeCount37 = 0;\n    var hexPrimeCount38\
    \ = 0;\n    var hexPrimeCount39 = 0;\n    var hexPrimeCount40 = 0;\n    var hexPrimeCount41\
    \ = 0;\n    var hexPrimeCount42 = 0;\n    var hexPrimeCount43 = 0;\n    var hexPrimeCount44\
    \ = 0;\n    var hexPrimeCount45 = 0;\n    var hexPrimeCount46 = 0;\n    var hexPrimeCount47\
    \ = 0;\n    var hexPrimeCount48 = 0;\n    var hexPrimeCount49 = 0;\n    var hexPrimeCount50\
    \ = 0;\n    var hexPrimeCount51 = 0;\n    var hexPrimeCount52 = 0;\n    var hexPrimeCount53\
    \ = 0;\n    var hexPrimeCount54 = 0;\n    var hexPrimeCount55 = 0;\n    var hexPrimeCount56\
    \ = 0;\n    var hexPrimeCount57 = 0;", "    var hex = num.split(\"\");\n    var\
    \ hex_rev = [];\n    for(var i=0;i<hex.length;i++){\n        hex_rev.push(hex[i].charCodeAt(0)-96);\n\
    \    }\n    var hex_rev_sorted = hex_rev.sort(function(a,b){return a-b});\n  \
    \  var prime_count = 0;\n    for(var i=0;i<hex_rev_sorted.length;i++){\n     \
    \   if(hex_rev_sorted[i]%2==0){\n            prime_count++;\n        }\n    }\n\
    \    return prime_count;\n}\n", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join``;\n\
    \    let primes = hex_key.primes;\n    let primesCount = hex_key.primesCount;\n\
    \    let primesCount2 = hex_key.primesCount2;\n    let primesCount3 = hex_key.primesCount3;\n\
    \    let primesCount4 = hex_key.primesCount4;\n    let primesCount5 = hex_key.primesCount5;\n\
    \    let primesCount6 = hex_key.primesCount6;\n    let primesCount7 = hex_key.primesCount7;\n\
    \    let primesCount8 = hex_key.primesCount8;\n    let primesCount9 = hex_key.primesCount9;\n\
    \    let primesCount10 = hex_key.primesCount10;\n    let primesCount11 = hex_key.primesCount11;\n\
    \    let primesCount12 = hex_key.primesCount12;\n    let primesCount13 = hex_key.primesCount13;\n\
    \    let primesCount14 = hex_key.primesCount14;\n    let primesCount15 = hex_key.primesCount15;\n\
    \    let primesCount16 = hex_key.primesCount16;\n    let primesCount17 = hex_key.primesCount17;\n\
    \    let primesCount18 = hex_key.primesCount18;\n    let primesCount19 = hex_key.primesCount19;\n\
    \    let primesCount20 = hex_key.primesCount20;\n    let primesCount21 = hex_key.primesCount21;\n\
    \    let primesCount22 = hex_key.primesCount22;\n    let primesCount23 = hex_key.primesCount23;\n\
    \    let primesCount24 = hex_key.primesCount24;\n    let primesCount25 = hex_key.primesCount25;\n\
    \    let primesCount26 = hex_key.primesCount26;\n    let primesCount27 = hex_key.primesCount27;\n\
    \    let primesCount28 = hex_key.primesCount28;\n    let primesCount29 = hex_key.primesCount29;\n\
    \    let primesCount30 = hex_key.primesCount30;\n    let primesCount31 = hex_key.primesCount31;\n\
    \    let primesCount32 = hex_key.primesCount32;\n    let primesCount33 = hex_key.primesCount33;\n\
    \    let primesCount34 = hex_key.primesCount34;\n    let prime", "    var hex\
    \ = num;\n    var hexDigits = \"0123456789ABCDEF\";\n    var hexDigitCount = hexDigits.length;\n\
    \    var hexDigitCount2 = hexDigitCount*2;\n    var hexDigitCount3 = hexDigitCount2*2;\n\
    \    var hexDigitCount4 = hexDigitCount3*2;\n    var hexDigitCount5 = hexDigitCount4*2;\n\
    \    var hexDigitCount6 = hexDigitCount5*2;\n    var hexDigitCount7 = hexDigitCount6*2;\n\
    \    var hexDigitCount8 = hexDigitCount7*2;\n    var hexDigitCount9 = hexDigitCount8*2;\n\
    \    var hexDigitCount10 = hexDigitCount9*2;\n    var hexDigitCount11 = hexDigitCount10*2;\n\
    \    var hexDigitCount12 = hexDigitCount11*2;\n    var hexDigitCount13 = hexDigitCount12*2;\n\
    \    var hexDigitCount14 = hexDigitCount13*2;\n    var hexDigitCount15 = hexDigitCount14*2;\n\
    \    var hexDigitCount16 = hexDigitCount15*2;\n    var hexDigitCount17 = hexDigitCount16*2;\n\
    \    var hexDigitCount18 = hexDigitCount17*2;\n    var hexDigitCount19 = hexDigitCount18*2;\n\
    \    var hexDigitCount20 = hexDigitCount19*2;\n    var hexDigitCount21 = hexDigitCount20*2;\n\
    \    var hexDigitCount22 = hexDigitCount21*2;\n    var hexDigitCount23 = hexDigitCount22*2;\n\
    \    var hexDigitCount24 = hexDigitCount23*2;\n    var hexDigitCount25 = hexDigitCount24*2;\n\
    \    var hexDigitCount26 = hexDigitCount25*2;\n    var hexDigitCount27 = hexDigitCount26*2;\n\
    \    var hexDigitCount28 = hexDigitCount27*2;\n    var hexDigitCount29 = hexDigitCount28*2;\n\
    \    var hexDigitCount30 = hexDigitCount29*2;\n    var hexDigitCount31 = hexDigitCount30*2;\n\
    \    var hexDigitCount32 = hexDigitCount31*2;\n    var hexDigitCount33 = hexDigitCount32*2;\n\
    \    var hexDigitCount34 = hexDigitCount33*2;\n    var hexDigitCount35 = hexDigitCount34*2;\n\
    \    var hexDigitCount36 = hexDigitCount35*2;\n    var hexDigitCount37 = hexDigitCount36*2;\n\
    \    var hexDigitCount38 = hexDigitCount37*2;\n    var hexDigitCount39 = hexDigitCount38*2;\n\
    \    var hexDigitCount40 = hexDigitCount39*2;", "    let hex = num.split(\"\"\
    ).map(x => x.charCodeAt(0).toString(16));\n    let primes = [];\n    let prime_counter\
    \ = 0;\n    let prime_counter2 = 0;\n    let prime_counter3 = 0;\n    let prime_counter4\
    \ = 0;\n    let prime_counter5 = 0;\n    let prime_counter6 = 0;\n    let prime_counter7\
    \ = 0;\n    let prime_counter8 = 0;\n    let prime_counter9 = 0;\n    let prime_counter10\
    \ = 0;\n    let prime_counter11 = 0;\n    let prime_counter12 = 0;\n    let prime_counter13\
    \ = 0;\n    let prime_counter14 = 0;\n    let prime_counter15 = 0;\n    let prime_counter16\
    \ = 0;\n    let prime_counter17 = 0;\n    let prime_counter18 = 0;\n    let prime_counter19\
    \ = 0;\n    let prime_counter20 = 0;\n    let prime_counter21 = 0;\n    let prime_counter22\
    \ = 0;\n    let prime_counter23 = 0;\n    let prime_counter24 = 0;\n    let prime_counter25\
    \ = 0;\n    let prime_counter26 = 0;\n    let prime_counter27 = 0;\n    let prime_counter28\
    \ = 0;\n    let prime_counter29 = 0;\n    let prime_counter30 = 0;\n    let prime_counter31\
    \ = 0;\n    let prime_counter32 = 0;\n    let prime_counter33 = 0;\n    let prime_counter34\
    \ = 0;\n    let prime_counter35 = 0;\n    let prime_counter36 = 0;\n    let prime_counter37\
    \ = 0;\n    let prime_counter38 = 0;\n    let prime_counter39 = 0;\n    let prime_counter40\
    \ = 0;\n    let prime_counter41 = 0;\n    let prime_counter42 = 0;\n    let prime_counter43\
    \ = 0;\n    let prime_counter44 = 0;\n    let prime_counter45 = 0;\n    let prime_counter46\
    \ = 0;\n    let prime_counter47 = 0;\n    let prime_counter48 = 0;\n    let prime_counter49\
    \ = 0;\n    let prime_counter50 = 0;\n    let prime_counter51 = 0;\n    let prime_counter52\
    \ = 0;\n    let prime_counter53 = 0;\n    let prime_counter54 = 0;\n    let prime_counter55\
    \ = 0;\n    let prime_counter56 = 0;\n    let prime_counter57 = 0;\n    let prime_counter58\
    \ = 0;\n    let prime_counter59 = 0;\n    let prime_counter60 = 0;\n    let prime_counter61\
    \ = 0;\n    let prime_counter62 = 0;\n    let prime_counter63 = 0;\n    let prime_counter64\
    \ = 0;\n    let prime_counter65 = 0;\n    let prime_counter66 = 0;\n    let prime_counter67\
    \ = 0;\n    let prime_counter68 = 0;\n    let prime_counter69 = 0;\n    let prime_counter70\
    \ = 0;\n    let prime_counter", "    var hex_num = \"\";\n    var hex = \"\";\n\
    \    var count = 0;\n    for(var i = 0; i < num.length; i++){\n        hex = num.charCodeAt(i).toString(16);\n\
    \        hex_num = hex_num + hex;\n    }\n    hex_num = hex_num.toUpperCase();\n\
    \    hex_num = hex_num.replace(/A/g, \"10\");\n    hex_num = hex_num.replace(/B/g,\
    \ \"11\");\n    hex_num = hex_num.replace(/C/g, \"12\");\n    hex_num = hex_num.replace(/D/g,\
    \ \"13\");\n    hex_num = hex_num.replace(/E/g, \"14\");\n    hex_num = hex_num.replace(/F/g,\
    \ \"15\");\n    hex_num = hex_num.replace(/0/g, \"0\");\n    hex_num = hex_num.replace(/1/g,\
    \ \"1\");\n    hex_num = hex_num.replace(/2/g, \"2\");\n    hex_num = hex_num.replace(/3/g,\
    \ \"3\");\n    hex_num = hex_num.replace(/4/g, \"4\");\n    hex_num = hex_num.replace(/5/g,\
    \ \"5\");\n    hex_num = hex_num.replace(/6/g, \"6\");\n    hex_num = hex_num.replace(/7/g,\
    \ \"7\");\n    hex_num = hex_num.replace(/8/g, \"8\");\n    hex_num = hex_num.replace(/9/g,\
    \ \"9\");\n    hex_num = hex_num.replace(/10/g, \"A\");\n    hex_num = hex_num.replace(/11/g,\
    \ \"B\");\n    hex_num = hex_num.replace(/12/g, \"C\");\n    hex_num = hex_num.replace(/13/g,\
    \ \"D\");\n    hex_num = hex_num.replace(/14/g, \"E\");\n    hex_num = hex_num.replace(/15/g,\
    \ \"F\");\n    hex_num = hex_num.replace(/16/g, \"10\");\n    hex_num = hex_num.replace(/17/g,\
    \ \"11\");\n    hex_num = hex_num.replace(/18/g, \"12\");\n    hex_num = hex_num.replace(/19/g,\
    \ \"13\");\n    hex_num = hex_num.replace(/20/g, \"14\");\n    hex_num = hex_num.replace(/21/g,\
    \ \"15\");\n    hex_num = hex_num.replace(/22/g, \"16\");\n    hex_num = hex_num.replace(/23/g,\
    \ \"17\");\n    hex_num = hex_num.replace(/24/g, \"18\");\n    hex_num = hex_num.replace(/25/g,\
    \ \"19\");\n    hex_num = hex_num.replace(/26/g, \"20\");\n    hex_num = hex_num.replace(/27/g,\
    \ \"21\");\n    hex_num = hex_num.replace(/28/g, \"22\");\n    hex_num = hex_num.replace(/29/g,\
    \ \"23\");\n    hex_num = hex_num.replace(/30/g, \"24\");\n    hex_num = hex_num.replace(/31/g,\
    \ \"25\");\n    hex_num = hex_num.replace(/", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split('');\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimeSum\
    \ = 0;\n    let hexDigitPrimeSum2 = 0;\n    let hexDigitPrimeSum3 = 0;\n    let\
    \ hexDigitPrimeSum4 = 0;\n    let hexDigitPrimeSum5 = 0;\n    let hexDigitPrimeSum6\
    \ = 0;\n    let hexDigitPrimeSum7 = 0;\n    let hexDigitPrimeSum8 = 0;\n    let\
    \ hexDigitPrimeSum9 = 0;\n    let hexDigitPrimeSum10 = 0;\n    let hexDigitPrimeSum11\
    \ = 0;\n    let hexDigitPrimeSum12 = 0;\n    let hexDigitPrimeSum13 = 0;\n   \
    \ let hexDigitPrimeSum14 = 0;\n    let hexDigitPrimeSum15 = 0;\n    let hexDigitPrimeSum16\
    \ = 0;\n    let hexDigitPrimeSum17 = 0;\n    let hexDigitPrimeSum18 = 0;\n   \
    \ let hexDigitPrimeSum19 = 0;\n    let hexDigitPrimeSum20 = 0;\n    let hexDigitPrimeSum21\
    \ = 0;\n    let hexDigitPrimeSum22 = 0;\n    let hexDigitPrimeSum23 = 0;\n   \
    \ let hexDigitPrimeSum24 = 0;\n    let hexDigitPrimeSum25 = 0;\n    let hexDigitPrimeSum26\
    \ = 0;\n    let hexDigitPrimeSum27 = 0;\n    let hexDigitPrimeSum28 = 0;\n   \
    \ let hexDigitPrimeSum29 = 0;\n    let hexDigitPrimeSum30 = 0;\n    let hexDigitPrimeSum31\
    \ = 0;\n    let hexDigitPrimeSum32 = 0;\n    let hexDigitPrimeSum33 = 0;\n   \
    \ let hexDigitPrimeSum34 = 0;\n    let hexDigitPrimeSum35 = 0;\n    let hexDigitPrimeSum36\
    \ = 0;\n    let hexDigitPrimeSum37 = 0;\n    let hexDigitPrimeSum38 = 0;\n   \
    \ let hexDigitPrimeSum39 = 0;\n    let hexDigitPrimeSum40 = 0;\n    let hexDigitPrimeSum41\
    \ = 0;\n    let hexDigitPrimeSum42 = 0;\n    let hexDigitPrimeSum43 = 0;\n   \
    \ let hexDigitPrimeSum44 = 0;\n    let hexDigitPrimeSum45 = 0;\n    let hexDigitPrimeSum46\
    \ = 0;\n    let hexDigitPrimeSum47 = 0;\n    let hexDigitPrimeSum48 = 0;\n   \
    \ let hexDigitPrimeSum49 = 0;\n    let hexDigitPrimeSum50 = 0;\n    let hexDigitPrimeSum51\
    \ = 0;\n    let hexDigitPrimeSum52 = 0;\n    let hexDigitPrimeSum53 = 0;\n   \
    \ let hex", "    let hex = num.toString().split('');\n    let primes = [];\n \
    \   let prime_counter = 0;\n    let prime_counter2 = 0;\n    let prime_counter3\
    \ = 0;\n    let prime_counter4 = 0;\n    let prime_counter5 = 0;\n    let prime_counter6\
    \ = 0;\n    let prime_counter7 = 0;\n    let prime_counter8 = 0;\n    let prime_counter9\
    \ = 0;\n    let prime_counter10 = 0;\n    let prime_counter11 = 0;\n    let prime_counter12\
    \ = 0;\n    let prime_counter13 = 0;\n    let prime_counter14 = 0;\n    let prime_counter15\
    \ = 0;\n    let prime_counter16 = 0;\n    let prime_counter17 = 0;\n    let prime_counter18\
    \ = 0;\n    let prime_counter19 = 0;\n    let prime_counter20 = 0;\n    let prime_counter21\
    \ = 0;\n    let prime_counter22 = 0;\n    let prime_counter23 = 0;\n    let prime_counter24\
    \ = 0;\n    let prime_counter25 = 0;\n    let prime_counter26 = 0;\n    let prime_counter27\
    \ = 0;\n    let prime_counter28 = 0;\n    let prime_counter29 = 0;\n    let prime_counter30\
    \ = 0;\n    let prime_counter31 = 0;\n    let prime_counter32 = 0;\n    let prime_counter33\
    \ = 0;\n    let prime_counter34 = 0;\n    let prime_counter35 = 0;\n    let prime_counter36\
    \ = 0;\n    let prime_counter37 = 0;\n    let prime_counter38 = 0;\n    let prime_counter39\
    \ = 0;\n    let prime_counter40 = 0;\n    let prime_counter41 = 0;\n    let prime_counter42\
    \ = 0;\n    let prime_counter43 = 0;\n    let prime_counter44 = 0;\n    let prime_counter45\
    \ = 0;\n    let prime_counter46 = 0;\n    let prime_counter47 = 0;\n    let prime_counter48\
    \ = 0;\n    let prime_counter49 = 0;\n    let prime_counter50 = 0;\n    let prime_counter51\
    \ = 0;\n    let prime_counter52 = 0;\n    let prime_counter53 = 0;\n    let prime_counter54\
    \ = 0;\n    let prime_counter55 = 0;\n    let prime_counter56 = 0;\n    let prime_counter57\
    \ = 0;\n    let prime_counter58 = 0;\n    let prime_counter59 = 0;\n    let prime_counter60\
    \ = 0;\n    let prime_counter61 = 0;\n    let prime_counter62 = 0;\n    let prime_counter63\
    \ = 0;\n    let prime_counter64 = 0;\n    let prime_counter65 = 0;\n    let prime_counter66\
    \ = 0;\n    let prime_counter67 = 0;\n    let prime_counter68 = 0;\n    let prime_counter69\
    \ = 0;\n    let prime_counter70 = 0;\n    let prime_counter71 = 0;\n    let prime_counter72\
    \ = 0;\n", "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n\
    \  let primes = [];\n  for(let i = 0; i < hex.length; i++){\n    let hexDigit\
    \ = hex[i];\n    let prime = hexDigit;\n    for(let j = 0; j < hex.length; j++){\n\
    \      if(hex[j] == hexDigit){\n        prime = false;\n        break;\n     \
    \ }\n    }\n    if(prime){\n      primes.push(prime);\n    }\n  }\n  return primes.length;\n\
    }\n", "    let hex = num.toString().split('');\n    let hex_rev = [];\n    hex.forEach((hex)\
    \ => {\n        hex_rev.push(hex.charCodeAt(0) - 64);\n    });\n    let prime_count\
    \ = 0;\n    let prime_digits = [];\n    hex_rev.forEach((hex_rev) => {\n     \
    \   if(hex_rev % 2 === 0){\n            prime_digits.push(hex_rev);\n        }\n\
    \    });\n    prime_digits.forEach((prime_digit) => {\n        if(prime_digit\
    \ === 2){\n            prime_count++;\n        }\n    });\n    return prime_count;\n\
    }\n", "    let hex = num.toString().split('');\n    let primes = [];\n    let\
    \ prime_digits = [];\n    let prime_digit_count = [];\n    let prime_digit_count_sum\
    \ = 0;\n    let prime_digit_count_max = 0;\n    let prime_digit_count_min = 0;\n\
    \    let prime_digit_count_avg = 0;\n    let prime_digit_count_sum2 = 0;\n   \
    \ let prime_digit_count_max2 = 0;\n    let prime_digit_count_min2 = 0;\n    let\
    \ prime_digit_count_avg2 = 0;\n    let prime_digit_count_sum3 = 0;\n    let prime_digit_count_max3\
    \ = 0;\n    let prime_digit_count_min3 = 0;\n    let prime_digit_count_avg3 =\
    \ 0;\n    let prime_digit_count_sum4 = 0;\n    let prime_digit_count_max4 = 0;\n\
    \    let prime_digit_count_min4 = 0;\n    let prime_digit_count_avg4 = 0;\n  \
    \  let prime_digit_count_sum5 = 0;\n    let prime_digit_count_max5 = 0;\n    let\
    \ prime_digit_count_min5 = 0;\n    let prime_digit_count_avg5 = 0;\n    let prime_digit_count_sum6\
    \ = 0;\n    let prime_digit_count_max6 = 0;\n    let prime_digit_count_min6 =\
    \ 0;\n    let prime_digit_count_avg6 = 0;\n    let prime_digit_count_sum7 = 0;\n\
    \    let prime_digit_count_max7 = 0;\n    let prime_digit_count_min7 = 0;\n  \
    \  let prime_digit_count_avg7 = 0;\n    let prime_digit_count_sum8 = 0;\n    let\
    \ prime_digit_count_max8 = 0;\n    let prime_digit_count_min8 = 0;\n    let prime_digit_count_avg8\
    \ = 0;\n    let prime_digit_count_sum9 = 0;\n    let prime_digit_count_max9 =\
    \ 0;\n    let prime_digit_count_min9 = 0;\n    let prime_digit_count_avg9 = 0;\n\
    \    let prime_digit_count_sum10 = 0;\n    let prime_digit_count_max10 = 0;\n\
    \    let prime_digit_count_min10 = 0;\n    let prime_digit_count_avg10 = 0;\n\
    \    let prime_digit_count_sum11 = 0;\n    let prime_digit_count_max11 = 0;\n\
    \    let prime_digit_count_min11 = 0;\n    let prime_digit_count_avg11 = 0;\n\
    \    let prime_digit_count_sum12 = 0;\n    let prime_digit_count_max12 = 0;\n\
    \    let prime_digit_count_min12 = 0;\n    let prime_digit_count_avg12 = 0;\n\
    \    let prime_digit_count_sum13 = 0;\n    let prime_digit_count_max13 = 0;\n\
    \    let prime_digit_count_min13 = 0;\n    let prime_digit_count_avg13 = 0;\n\
    \    let prime_digit_count_sum14 = 0;\n    let prime_digit_count_max14 = 0;\n\
    \    let prime_digit_count_min14 = 0;\n    let prime_digit_count_avg14 = 0;\n\
    \    let prime", "  let hex = num.replace(/[^A-F0-9]/g,'');\n  let hexDigits =\
    \ hex.split('');\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigit", "    let hex = num.toUpperCase();\n\
    \    let hexLength = hex.length;\n    let hexDigits = [...hex];\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimePrimes = [];\n    let hexDigitPrimePrimeCount = 0;\n\
    \    let hexDigitPrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n \
    \   let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n  \
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrime", "    var hex = num.toUpperCase();\n\
    \    var hexDigits = hex.split(\"\");\n    var hexDigitCount = hexDigits.length;\n\
    \    var hexDigitPrimes = [];\n    var hexDigitPrimeCount = 0;\n    for(var i=0;\
    \ i<hexDigitCount; i++){\n        var hexDigit = hexDigits[i];\n        var hexDigitValue\
    \ = parseInt(hexDigit);\n        if(hexDigitValue > 0){\n            hexDigitPrimes.push(hexDigitValue);\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    var hexDigitPrimeCount\
    \ = hexDigitPrimes.length;\n    var hexDigitPrimeSum = 0;\n    for(var i=0; i<hexDigitPrimeCount;\
    \ i++){\n        var hexDigitPrime = hexDigitPrimes[i];\n        hexDigitPrimeSum\
    \ += hexDigitPrime;\n    }\n    var hexDigitPrimeSum = hexDigitPrimeSum;\n   \
    \ var hexDigitPrimeSum2 = hexDigitPrimeSum*hexDigitPrimeSum;\n    var hexDigitPrimeSum3\
    \ = hexDigitPrimeSum2*hexDigitPrimeSum;\n    var hexDigitPrimeSum4 = hexDigitPrimeSum3*hexDigitPrimeSum;\n\
    \    var hexDigitPrimeSum5 = hexDigitPrimeSum4*hexDigitPrimeSum;\n    var hexDigitPrimeSum6\
    \ = hexDigitPrimeSum5*hexDigitPrimeSum;\n    var hexDigitPrimeSum7 = hexDigitPrimeSum6*hexDigitPrimeSum;\n\
    \    var hexDigitPrimeSum8 = hexDigitPrimeSum7*hexDigitPrimeSum;\n    var hexDigitPrimeSum9\
    \ = hexDigitPrimeSum8*hexDigitPrimeSum;\n    var hexDigitPrimeSum10 = hexDigitPrimeSum9*hexDigitPrimeSum;\n\
    \    var hexDigitPrimeSum11 = hexDigitPrimeSum10*hexDigitPrimeSum;\n    var hexDigitPrimeSum12\
    \ = hexDigitPrimeSum11*hexDigitPrimeSum;\n    var hexDigitPrimeSum13 = hexDigitPrimeSum12*hexDigitPrimeSum;\n\
    \    var hexDigitPrimeSum14 = hexDigitPrimeSum13*hexDigitPrimeSum;\n    var hexDigitPrimeSum15\
    \ = hexDigitPrimeSum14*hexDigitPrimeSum;\n    var hexDigitPrimeSum16 = hexDigitPrimeSum15*hexDigitPrimeSum;\n\
    \    var hexDigitPrimeSum17 = hexDigitPrimeSum16*hexDigitPrimeSum;\n    var hexDigitPrimeSum18\
    \ = hex", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split('');\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime = 0;\n\
    \    let hexDigitCountPrime2 = hexDigitCount;\n    let hexDigitCountPrime3 = hexDigitCount;\n\
    \    let hexDigitCountPrime4 = hexDigitCount;\n    let hexDigitCountPrime5 = hexDigitCount;\n\
    \    let hexDigitCountPrime6 = hexDigitCount;\n    let hexDigitCountPrime7 = hexDigitCount;\n\
    \    let hexDigitCountPrime8 = hexDigitCount;\n    let hexDigitCountPrime9 = hexDigitCount;\n\
    \    let hexDigitCountPrime10 = hexDigitCount;\n    let hexDigitCountPrime11 =\
    \ hexDigitCount;\n    let hexDigitCountPrime12 = hexDigitCount;\n    let hexDigitCountPrime13\
    \ = hexDigitCount;\n    let hexDigitCountPrime14 = hexDigitCount;\n    let hexDigitCountPrime15\
    \ = hexDigitCount;\n    let hexDigitCountPrime16 = hexDigitCount;\n    let hexDigitCountPrime17\
    \ = hexDigitCount;\n    let hexDigitCountPrime18 = hexDigitCount;\n    let hexDigitCountPrime19\
    \ = hexDigitCount;\n    let hexDigitCountPrime20 = hexDigitCount;\n    let hexDigitCountPrime21\
    \ = hexDigitCount;\n    let hexDigitCountPrime22 = hexDigitCount;\n    let hexDigitCountPrime23\
    \ = hexDigitCount;\n    let hexDigitCountPrime24 = hexDigitCount;\n    let hexDigitCountPrime25\
    \ = hexDigitCount;\n    let hexDigitCountPrime26 = hexDigitCount;\n    let hexDigitCountPrime27\
    \ = hexDigitCount;\n    let hexDigitCountPrime28 = hexDigitCount;\n    let hexDigitCountPrime29\
    \ = hexDigitCount;\n    let hexDigitCountPrime30 = hexDigitCount;\n    let hexDigitCountPrime31\
    \ = hexDigitCount;\n    let hexDigitCountPrime32 = hexDigitCount;\n    let hexDigitCountPrime33\
    \ = hexDigitCount;\n    let hexDigitCountPrime34 = hexDigitCount;\n    let hexDigitCountPrime35\
    \ = hexDigitCount;\n    let hexDigitCountPrime36 = hexDigitCount;\n    let hexDigitCountPrime37\
    \ = hexDigitCount;\n    let hexDigitCountPrime38 = hexDigitCount;\n    let hexDigitCountPrime39\
    \ = hexDigitCount", "    let hex = num.split(\"\");\n    let hex_count = 0;\n\
    \    for(let i = 0; i < hex.length; i++){\n        if(hex[i] === \"A\" || hex[i]\
    \ === \"B\" || hex[i] === \"C\" || hex[i] === \"D\" || hex[i] === \"E\" || hex[i]\
    \ === \"F\"){\n            hex_count += 1;\n        }\n    }\n    return hex_count;\n\
    }\n", "    let hexNum = num.toUpperCase();\n    let hexNumArray = hexNum.split('');\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArray", "  var hex =\
    \ num.split(\"\");\n  var hex_reverse = hex.reverse();\n  var hex_reverse_length\
    \ = hex_reverse.length;\n  var hex_reverse_length_2 = hex_reverse_length * 2;\n\
    \  var hex_reverse_length_3 = hex_reverse_length_2 * 2;\n  var hex_reverse_length_4\
    \ = hex_reverse_length_3 * 2;\n  var hex_reverse_length_5 = hex_reverse_length_4\
    \ * 2;\n  var hex_reverse_length_6 = hex_reverse_length_5 * 2;\n  var hex_reverse_length_7\
    \ = hex_reverse_length_6 * 2;\n  var hex_reverse_length_8 = hex_reverse_length_7\
    \ * 2;\n  var hex_reverse_length_9 = hex_reverse_length_8 * 2;\n  var hex_reverse_length_10\
    \ = hex_reverse_length_9 * 2;\n  var hex_reverse_length_11 = hex_reverse_length_10\
    \ * 2;\n  var hex_reverse_length_12 = hex_reverse_length_11 * 2;\n  var hex_reverse_length_13\
    \ = hex_reverse_length_12 * 2;\n  var hex_reverse_length_14 = hex_reverse_length_13\
    \ * 2;\n  var hex_reverse_length_15 = hex_reverse_length_14 * 2;\n  var hex_reverse_length_16\
    \ = hex_reverse_length_15 * 2;\n  var hex_reverse_length_17 = hex_reverse_length_16\
    \ * 2;\n  var hex_reverse_length_18 = hex_reverse_length_17 * 2;\n  var hex_reverse_length_19\
    \ = hex_reverse_length_18 * 2;\n  var hex_reverse_length_20 = hex_reverse_length_19\
    \ * 2;\n  var hex_reverse_length_21 = hex_reverse_length_20 * 2;\n  var hex_reverse_length_22\
    \ = hex_reverse_length_21 * 2;\n  var hex_reverse_length_23 = hex_reverse_length_22\
    \ * 2;\n  var hex_reverse_length_24 = hex_reverse_length_23 * 2;\n  var hex_reverse_length_25\
    \ = hex_reverse_length_24 * 2;\n  var hex_reverse_length_26 = hex_reverse_length_25\
    \ * 2;\n  var hex_reverse_length_27 = hex_reverse_length_26 * 2;\n  var hex_reverse_length_28\
    \ = hex_reverse_length_27 * 2;\n  var hex_reverse_length_29 = hex_reverse_length_28\
    \ * 2;\n  var hex_reverse_length_30 = hex_reverse_length_29 * 2;\n  var hex_reverse_length_31\
    \ = hex_reverse_length_30 * 2;\n  var hex_reverse_length_32 = hex_reverse_length_31\
    \ * 2;\n  var hex_reverse_length_33 = hex_reverse_length_32 * 2;\n  var hex_reverse_length_34\
    \ = hex_reverse_length_33 * 2;\n  var hex_reverse_length_35 = hex", "    let hex\
    \ = num.split(\"\");\n    let primes = [];\n    let prime_counter = 0;\n    let\
    \ prime_counter2 = 0;\n    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n\
    \    let prime_counter5 = 0;\n    let prime_counter6 = 0;\n    let prime_counter7\
    \ = 0;\n    let prime_counter8 = 0;\n    let prime_counter9 = 0;\n    let prime_counter10\
    \ = 0;\n    let prime_counter11 = 0;\n    let prime_counter12 = 0;\n    let prime_counter13\
    \ = 0;\n    let prime_counter14 = 0;\n    let prime_counter15 = 0;\n    let prime_counter16\
    \ = 0;\n    let prime_counter17 = 0;\n    let prime_counter18 = 0;\n    let prime_counter19\
    \ = 0;\n    let prime_counter20 = 0;\n    let prime_counter21 = 0;\n    let prime_counter22\
    \ = 0;\n    let prime_counter23 = 0;\n    let prime_counter24 = 0;\n    let prime_counter25\
    \ = 0;\n    let prime_counter26 = 0;\n    let prime_counter27 = 0;\n    let prime_counter28\
    \ = 0;\n    let prime_counter29 = 0;\n    let prime_counter30 = 0;\n    let prime_counter31\
    \ = 0;\n    let prime_counter32 = 0;\n    let prime_counter33 = 0;\n    let prime_counter34\
    \ = 0;\n    let prime_counter35 = 0;\n    let prime_counter36 = 0;\n    let prime_counter37\
    \ = 0;\n    let prime_counter38 = 0;\n    let prime_counter39 = 0;\n    let prime_counter40\
    \ = 0;\n    let prime_counter41 = 0;\n    let prime_counter42 = 0;\n    let prime_counter43\
    \ = 0;\n    let prime_counter44 = 0;\n    let prime_counter45 = 0;\n    let prime_counter46\
    \ = 0;\n    let prime_counter47 = 0;\n    let prime_counter48 = 0;\n    let prime_counter49\
    \ = 0;\n    let prime_counter50 = 0;\n    let prime_counter51 = 0;\n    let prime_counter52\
    \ = 0;\n    let prime_counter53 = 0;\n    let prime_counter54 = 0;\n    let prime_counter55\
    \ = 0;\n    let prime_counter56 = 0;\n    let prime_counter57 = 0;\n    let prime_counter58\
    \ = 0;\n    let prime_counter59 = 0;\n    let prime_counter60 = 0;\n    let prime_counter61\
    \ = 0;\n    let prime_counter62 = 0;\n    let prime_counter63 = 0;\n    let prime_counter64\
    \ = 0;\n    let prime_counter65 = 0;\n    let prime_counter66 = 0;\n    let prime_counter67\
    \ = 0;\n    let prime_counter68 = 0;\n    let prime_counter69 = 0;\n    let prime_counter70\
    \ = 0;\n    let prime_counter71 = 0;\n    let prime_counter72 = 0;\n    let ",
  "    let hex = num.toUpperCase();\n    let hexLength = hex.length;\n    let hexDigits\
    \ = [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c',\
    \ 'd', 'e', 'f',\n    ];\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5\
    \ = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8\
    \ = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \    let hexDigitCount31 = hexDigitCount30*hexDigit", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split('');\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    for(let i\
    \ = 0; i < hexDigitCount; i++){\n        let hexDigit = hexDigits[i];\n      \
    \  if(hexDigit == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit == 'D'\
    \ || hexDigit == 'E' || hexDigit == 'F'){\n            hexDigitPrimes.push(hexDigit);\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.length;\n    let hexDigitPrimePrimes = [];\n    let hexDigitPrimePrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitPrimeCount; i++){\n        let hexDigitPrime\
    \ = hexDigitPrimes[i];\n        if(hexDigitPrime == '2' || hexDigitPrime == '3'\
    \ || hexDigitPrime == '5' || hexDigitPrime == '7' || hexDigitPrime == '11' ||\
    \ hexDigitPrime == '13' || hexDigitPrime == '17' || hexDigitPrime == '19' || hexDigitPrime\
    \ == '23' || hexDigitPrime == '29' || hexDigitPrime == '31' || hexDigitPrime ==\
    \ '37' || hexDigitPrime == '41' || hexDigitPrime == '43' || hexDigitPrime == '47'\
    \ || hexDigitPrime == '53' || hexDigitPrime == '59' || hexDigitPrime == '61' ||\
    \ hexDigitPrime == '67' || hexDigitPrime == '71' || hexDigitPrime == '73' || hexDigitPrime\
    \ == '79' || hexDigitPrime == '83' || hexDigitPrime == '89' || hexDigitPrime ==\
    \ '97'){\n            hexDigitPrimePrimes.push(hexDigitPrime);\n            hexDigitPrimePrimeCount++;\n\
    \        }\n    }\n    let hexDigitPrimePrimeCount = hexDigitPrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitPrimePrimeCount; i++){\n        let hexDigitPrimePrimePrime\
    \ = hexDigitPrimePrimes[i];\n        if(hexDigitPrimePrimePrime == '2' || hexDigitPrimePrimePrime\
    \ == '3' || hexDigitPrimePrimePrime == '5' || hexDigitPrimePrimePrime == '7' ||\
    \ hexDigitPrimePrimePrime == '11' || hexDigitPrimePrimePri", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimePrimes\
    \ = [];\n    let hexDigitPrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = 0;\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n   \
    \ let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrime", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount/2;\n    let hexDigitCount3 = hexDigitCount2/2;\n\
    \    let hexDigitCount4 = hexDigitCount3/2;\n    let hexDigitCount5 = hexDigitCount4/2;\n\
    \    let hexDigitCount6 = hexDigitCount5/2;\n    let hexDigitCount7 = hexDigitCount6/2;\n\
    \    let hexDigitCount8 = hexDigitCount7/2;\n    let hexDigitCount9 = hexDigitCount8/2;\n\
    \    let hexDigitCount10 = hexDigitCount9/2;\n    let hexDigitCount11 = hexDigitCount10/2;\n\
    \    let hexDigitCount12 = hexDigitCount11/2;\n    let hexDigitCount13 = hexDigitCount12/2;\n\
    \    let hexDigitCount14 = hexDigitCount13/2;\n    let hexDigitCount15 = hexDigitCount14/2;\n\
    \    let hexDigitCount16 = hexDigitCount15/2;\n    let hexDigitCount17 = hexDigitCount16/2;\n\
    \    let hexDigitCount18 = hexDigitCount17/2;\n    let hexDigitCount19 = hexDigitCount18/2;\n\
    \    let hexDigitCount20 = hexDigitCount19/2;\n    let hexDigitCount21 = hexDigitCount20/2;\n\
    \    let hexDigitCount22 = hexDigitCount21/2;\n    let hexDigitCount23 = hexDigitCount22/2;\n\
    \    let hexDigitCount24 = hexDigitCount23/2;\n    let hexDigitCount25 = hexDigitCount24/2;\n\
    \    let hexDigitCount26 = hexDigitCount25/2;\n    let hexDigitCount27 = hexDigitCount26/2;\n\
    \    let hexDigitCount28 = hexDigitCount27/2;\n    let hexDigitCount29 = hexDigitCount28/2;\n\
    \    let hexDigitCount30 = hexDigitCount29/2;\n    let hexDigitCount31 = hexDigitCount30/2;\n\
    \    let hexDigitCount32 = hexDigitCount31/2;\n    let hexDigitCount33 = hexDigitCount32/2;\n\
    \    let hexDigitCount34 = hexDigitCount33/2;\n    let hexDigitCount35 = hexDigitCount34/2;\n\
    \    let hexDigitCount36 = hexDigitCount35/2;\n    let hexDigitCount37 = hexDigitCount36/2;\n\
    \    let hexDigitCount38 = hexDigitCount37/2;\n    let hexDigitCount39 = hexDigitCount38/2;\n\
    \    let hexDigitCount40 = hexDigitCount39/2;\n    let hexDigitCount41 = hexDigitCount",
  "    var hex = num.toString().split('');\n    var hexLength = hex.length;\n    var\
    \ hexDigits = hex.length;\n    var hexKey = 0;\n    var hexKeyDigits = 0;\n  \
    \  var hexKeyDigit = 0;\n    for(var i = 0; i < hexLength; i++){\n        hexKeyDigit\
    \ += parseInt(hex[i], 16);\n        hexKeyDigits++;\n    }\n    for(var i = 0;\
    \ i < hexDigits; i++){\n        if(hexKeyDigit % 2 === 0){\n            hexKey\
    \ += 1;\n        }\n        hexKeyDigit /= 2;\n    }\n    return hexKey;\n}\n",
  "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\"\
    );\n    let hexDigits = hex.split(\"\").filter(x => x !== \"0\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimeIndex = 0;\n    let hexDigitPrimeIndex2 = 0;\n  \
    \  let hexDigitPrimeIndex3 = 0;\n    let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5\
    \ = 0;\n    let hexDigitPrimeIndex6 = 0;\n    let hexDigitPrimeIndex7 = 0;\n \
    \   let hexDigitPrimeIndex8 = 0;\n    let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10\
    \ = 0;\n    let hexDigitPrimeIndex11 = 0;\n    let hexDigitPrimeIndex12 = 0;\n\
    \    let hexDigitPrimeIndex13 = 0;\n    let hexDigitPrimeIndex14 = 0;\n    let\
    \ hexDigitPrimeIndex15 = 0;\n    let hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17\
    \ = 0;\n    let hexDigitPrimeIndex18 = 0;\n    let hexDigitPrimeIndex19 = 0;\n\
    \    let hexDigitPrimeIndex20 = 0;\n    let hexDigitPrimeIndex21 = 0;\n    let\
    \ hexDigitPrimeIndex22 = 0;\n    let hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24\
    \ = 0;\n    let hexDigitPrimeIndex25 = 0;\n    let hexDigitPrimeIndex26 = 0;\n\
    \    let hexDigitPrimeIndex27 = 0;\n    let hexDigitPrimeIndex28 = 0;\n    let\
    \ hexDigitPrimeIndex29 = 0;\n    let hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31\
    \ = 0;\n    let hexDigitPrimeIndex32 = 0;\n    let hexDigitPrimeIndex33 = 0;\n\
    \    let hexDigitPrimeIndex34 = 0;\n    let hexDigitPrimeIndex35 = 0;\n    let\
    \ hexDigitPrimeIndex36 = 0;\n    let hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38\
    \ = 0;\n    let hexDigitPrimeIndex39 = 0;\n    let hexDigitPrimeIndex40 = 0;\n\
    \    let hexDigitPrimeIndex41 = 0;\n    let hexDigitPrimeIndex42 = 0;\n    let\
    \ hexDigitPrimeIndex43 = 0;\n    let hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45\
    \ = 0;\n    let hexDigitPrimeIndex46 = 0;\n    let hexDigitPrimeIndex47 = 0;\n\
    \    let hexDigitPrimeIndex48 = 0;\n    let hexDigitPrimeIndex49 = 0;\n    let\
    \ hexDigitPrimeIndex50 = 0;\n    let hexDigitPrimeIndex", "    let hexadecimal\
    \ = num.replace(/[^0-9A-F]/g,'');\n    let primes = hexadecimal.split('').filter(function(x){return\
    \ x==='2'||x==='3'||x==='5'||x==='7'||x==='B'||x==='D'||x==='F'});\n    return\
    \ primes.length;\n}\n</code>\n<|/ a tags=javascript,algorithm |>\n<| c |>\nThis\
    \ does not work. Try it with `num = \"2020\"`\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works. I added a test case in the description.\n<|/ c |>\n<| c |>\nI\
    \ tested it and it works. I added a test case in the description.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I added a test case in the description.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I added a test case in the description.\n\
    <|/ c |>\n<| a tags=javascript,algorithm |>\n<code>", "  let hexadecimal = num.split(\"\
    \").map(Number);\n  let primes = [];\n  let prime_count = 0;\n  let prime_digits\
    \ = [];\n  let prime_digit_count = [];\n  let prime_digit_sum = [];\n  let prime_digit_sum2\
    \ = 0;\n  let prime_digit_sum3 = 0;\n  let prime_digit_sum4 = 0;\n  let prime_digit_sum5\
    \ = 0;\n  let prime_digit_sum6 = 0;\n  let prime_digit_sum7 = 0;\n  let prime_digit_sum8\
    \ = 0;\n  let prime_digit_sum9 = 0;\n  let prime_digit_sum10 = 0;\n  let prime_digit_sum11\
    \ = 0;\n  let prime_digit_sum12 = 0;\n  let prime_digit_sum13 = 0;\n  let prime_digit_sum14\
    \ = 0;\n  let prime_digit_sum15 = 0;\n  let prime_digit_sum16 = 0;\n  let prime_digit_sum17\
    \ = 0;\n  let prime_digit_sum18 = 0;\n  let prime_digit_sum19 = 0;\n  let prime_digit_sum20\
    \ = 0;\n  let prime_digit_sum21 = 0;\n  let prime_digit_sum22 = 0;\n  let prime_digit_sum23\
    \ = 0;\n  let prime_digit_sum24 = 0;\n  let prime_digit_sum25 = 0;\n  let prime_digit_sum26\
    \ = 0;\n  let prime_digit_sum27 = 0;\n  let prime_digit_sum28 = 0;\n  let prime_digit_sum29\
    \ = 0;\n  let prime_digit_sum30 = 0;\n  let prime_digit_sum31 = 0;\n  let prime_digit_sum32\
    \ = 0;\n  let prime_digit_sum33 = 0;\n  let prime_digit_sum34 = 0;\n  let prime_digit_sum35\
    \ = 0;\n  let prime_digit_sum36 = 0;\n  let prime_digit_sum37 = 0;\n  let prime_digit_sum38\
    \ = 0;\n  let prime_digit_sum39 = 0;\n  let prime_digit_sum40 = 0;\n  let prime_digit_sum41\
    \ = 0;\n  let prime_digit_sum42 = 0;\n  let prime_digit_sum43 = 0;\n  let prime_digit_sum44\
    \ = 0;\n  let prime_digit_sum45 = 0;\n  let prime_digit_sum46 = 0;\n  let prime_digit_sum47\
    \ = 0;\n  let prime_digit_sum48 = 0;\n  let prime_digit_sum49 = 0;\n  let prime_digit_sum50\
    \ = 0;\n  let prime_digit_sum51 = 0;\n  let prime_digit_sum52 = 0;\n  let prime_digit_sum53\
    \ = 0;\n  let prime_digit_sum54 = 0;\n  let prime_digit_sum55 = 0;\n  let prime_digit_sum56\
    \ = 0;\n  let prime_digit_sum57 = 0;\n  let prime_digit_sum58 = 0;\n  let prime_digit_sum59\
    \ = 0;\n  let prime_digit_sum60 = 0;\n  let ", "    var hex = num.split(\"\");\n\
    \    var hexLength = hex.length;\n    var hexString = \"\";\n    var hexStringLength\
    \ = 0;\n    var hexStringArray = [];\n    var hexStringArrayLength = 0;\n    var\
    \ hexStringArray2 = [];\n    var hexStringArray2Length = 0;\n    var hexStringArray3\
    \ = [];\n    var hexStringArray3Length = 0;\n    var hexStringArray4 = [];\n \
    \   var hexStringArray4Length = 0;\n    var hexStringArray5 = [];\n    var hexStringArray5Length\
    \ = 0;\n    var hexStringArray6 = [];\n    var hexStringArray6Length = 0;\n  \
    \  var hexStringArray7 = [];\n    var hexStringArray7Length = 0;\n    var hexStringArray8\
    \ = [];\n    var hexStringArray8Length = 0;\n    var hexStringArray9 = [];\n \
    \   var hexStringArray9Length = 0;\n    var hexStringArray10 = [];\n    var hexStringArray10Length\
    \ = 0;\n    var hexStringArray11 = [];\n    var hexStringArray11Length = 0;\n\
    \    var hexStringArray12 = [];\n    var hexStringArray12Length = 0;\n    var\
    \ hexStringArray13 = [];\n    var hexStringArray13Length = 0;\n    var hexStringArray14\
    \ = [];\n    var hexStringArray14Length = 0;\n    var hexStringArray15 = [];\n\
    \    var hexStringArray15Length = 0;\n    var hexStringArray16 = [];\n    var\
    \ hexStringArray16Length = 0;\n    var hexStringArray17 = [];\n    var hexStringArray17Length\
    \ = 0;\n    var hexStringArray18 = [];\n    var hexStringArray18Length = 0;\n\
    \    var hexStringArray19 = [];\n    var hexStringArray19Length = 0;\n    var\
    \ hexStringArray20 = [];\n    var hexStringArray20Length = 0;\n    var hexStringArray21\
    \ = [];\n    var hexStringArray21Length = 0;\n    var hexStringArray22 = [];\n\
    \    var hexStringArray22Length = 0;\n    var hexStringArray23 = [];\n    var\
    \ hexStringArray23Length = 0;\n    var hexStringArray24 = [];\n    var hexStringArray24Length\
    \ = 0;\n    var hexStringArray25 = [];\n    var hexStringArray25Length = 0;\n\
    \    var hexStringArray26 = [];\n    var hexStringArray26Length = 0;\n    var\
    \ hexStringArray27 = [];\n    var hexStringArray27Length = 0;\n    var hexStringArray28\
    \ = [];\n    var hexStringArray28Length = 0;\n    var hexStringArray29 = [];\n\
    \    var hexStringArray29Length = 0;\n    var hexStringArray30 = [];\n    var\
    \ hexStringArray30Length = 0;\n    var hexStringArray31 = [];\n    var hexStringArray31Length\
    \ = 0;\n    var hexStringArray32 = [];\n    var hexStringArray32Length = 0;\n\
    \    var hexStringArray33 = [];\n", "\tlet hex = num.split(\"\");\n\tlet primes\
    \ = [];\n\tlet prime_count = 0;\n\tlet prime_digits = [];\n\tlet prime_digit_count\
    \ = 0;\n\tlet prime_digit_sum = 0;\n\tlet prime_digit_product = 1;\n\tlet prime_digit_sum2\
    \ = 0;\n\tlet prime_digit_product2 = 0;\n\tlet prime_digit_sum3 = 0;\n\tlet prime_digit_product3\
    \ = 0;\n\tlet prime_digit_sum4 = 0;\n\tlet prime_digit_product4 = 0;\n\tlet prime_digit_sum5\
    \ = 0;\n\tlet prime_digit_product5 = 0;\n\tlet prime_digit_sum6 = 0;\n\tlet prime_digit_product6\
    \ = 0;\n\tlet prime_digit_sum7 = 0;\n\tlet prime_digit_product7 = 0;\n\tlet prime_digit_sum8\
    \ = 0;\n\tlet prime_digit_product8 = 0;\n\tlet prime_digit_sum9 = 0;\n\tlet prime_digit_product9\
    \ = 0;\n\tlet prime_digit_sum10 = 0;\n\tlet prime_digit_product10 = 0;\n\tlet\
    \ prime_digit_sum11 = 0;\n\tlet prime_digit_product11 = 0;\n\tlet prime_digit_sum12\
    \ = 0;\n\tlet prime_digit_product12 = 0;\n\tlet prime_digit_sum13 = 0;\n\tlet\
    \ prime_digit_product13 = 0;\n\tlet prime_digit_sum14 = 0;\n\tlet prime_digit_product14\
    \ = 0;\n\tlet prime_digit_sum15 = 0;\n\tlet prime_digit_product15 = 0;\n\tlet\
    \ prime_digit_sum16 = 0;\n\tlet prime_digit_product16 = 0;\n\tlet prime_digit_sum17\
    \ = 0;\n\tlet prime_digit_product17 = 0;\n\tlet prime_digit_sum18 = 0;\n\tlet\
    \ prime_digit_product18 = 0;\n\tlet prime_digit_sum19 = 0;\n\tlet prime_digit_product19\
    \ = 0;\n\tlet prime_digit_sum20 = 0;\n\tlet prime_digit_product20 = 0;\n\tlet\
    \ prime_digit_sum21 = 0;\n\tlet prime_digit_product21 = 0;\n\tlet prime_digit_sum22\
    \ = 0;\n\tlet prime_digit_product22 = 0;\n\tlet prime_digit_sum23 = 0;\n\tlet\
    \ prime_digit_product23 = 0;\n\tlet prime_digit_sum24 = 0;\n\tlet prime_digit_product24\
    \ = 0;\n\tlet prime_digit_sum25 = 0;\n\tlet prime_digit_product25 = 0;\n\tlet\
    \ prime_digit_sum26 = 0;\n\tlet prime_digit_product26 = 0;\n\tlet prime_digit_sum27\
    \ = 0;\n\tlet prime_digit_product27 = 0;\n\tlet ", "    let hex = num;\n    let\
    \ count = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex.charCodeAt(i)\
    \ >= 48 && hex.charCodeAt(i) <= 57){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\
    \");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes = [];\n  let\
    \ hexDigitPrimeCount = 0;\n  let hexDigitPrimePrimes = [];\n  let hexDigitPrimePrimeCount\
    \ = 0;\n  for(let i = 0; i < hexDigitCount; i++){\n    let hexDigit = hexDigits[i];\n\
    \    let hexDigitPrime = hexDigitPrimes[i];\n    if(hexDigit == \"A\" || hexDigit\
    \ == \"B\" || hexDigit == \"C\" || hexDigit == \"D\" || hexDigit == \"E\" || hexDigit\
    \ == \"F\"){\n      hexDigitPrimePrimeCount++;\n      hexDigitPrimePrimes.push(hexDigitPrime);\n\
    \    }\n    if(hexDigit == \"2\" || hexDigit == \"3\" || hexDigit == \"5\" ||\
    \ hexDigit == \"7\" || hexDigit == \"11\" || hexDigit == \"13\" || hexDigit ==\
    \ \"17\"){\n      hexDigitPrimeCount++;\n      hexDigitPrimePrimes.push(hexDigitPrime);\n\
    \    }\n    if(hexDigit == \"0\"){\n      hexDigitPrimeCount++;\n      hexDigitPrimePrimes.push(hexDigitPrime);\n\
    \    }\n  }\n  for(let i = 0; i < hexDigitPrimeCount; i++){\n    let hexDigitPrime\
    \ = hexDigitPrimes[i];\n    let hexDigitPrimePrime = hexDigitPrimePrimes[i];\n\
    \    let hexDigitPrimePrimeIndex = hexDigitPrimePrimes.indexOf(hexDigitPrime);\n\
    \    if(hexDigitPrimePrimeIndex != -1){\n      hexDigitPrimePrimeCount++;\n  \
    \    hexDigitPrimePrimes.push(hexDigitPrimePrime);\n    }\n  }\n  if(hexDigitPrimeCount\
    \ != hexDigitPrimePrimeCount){\n    return -1;\n  }\n  return hexDigitPrimePrimeCount;\n\
    }\n", "    let hex = num;\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount/2;\n    let hexDigitCount3\
    \ = hexDigitCount2/2;\n    let hexDigitCount4 = hexDigitCount3/2;\n    let hexDigitCount5\
    \ = hexDigitCount4/2;\n    let hexDigitCount6 = hexDigitCount5/2;\n    let hexDigitCount7\
    \ = hexDigitCount6/2;\n    let hexDigitCount8 = hexDigitCount7/2;\n    let hexDigitCount9\
    \ = hexDigitCount8/2;\n    let hexDigitCount10 = hexDigitCount9/2;\n    let hexDigitCount11\
    \ = hexDigitCount10/2;\n    let hexDigitCount12 = hexDigitCount11/2;\n    let\
    \ hexDigitCount13 = hexDigitCount12/2;\n    let hexDigitCount14 = hexDigitCount13/2;\n\
    \    let hexDigitCount15 = hexDigitCount14/2;\n    let hexDigitCount16 = hexDigitCount15/2;\n\
    \    let hexDigitCount17 = hexDigitCount16/2;\n    let hexDigitCount18 = hexDigitCount17/2;\n\
    \    let hexDigitCount19 = hexDigitCount18/2;\n    let hexDigitCount20 = hexDigitCount19/2;\n\
    \    let hexDigitCount21 = hexDigitCount20/2;\n    let hexDigitCount22 = hexDigitCount21/2;\n\
    \    let hexDigitCount23 = hexDigitCount22/2;\n    let hexDigitCount24 = hexDigitCount23/2;\n\
    \    let hexDigitCount25 = hexDigitCount24/2;\n    let hexDigitCount26 = hexDigitCount25/2;\n\
    \    let hexDigitCount27 = hexDigitCount26/2;\n    let hexDigitCount28 = hexDigitCount27/2;\n\
    \    let hexDigitCount29 = hexDigitCount28/2;\n    let hexDigitCount30 = hexDigitCount29/2;\n\
    \    let hexDigitCount31 = hexDigitCount30/2;\n    let hexDigitCount32 = hexDigitCount31/2;\n\
    \    let hexDigitCount33 = hexDigitCount32/2;\n    let hexDigitCount34 = hexDigitCount33/2;\n\
    \    let hexDigitCount35 = hexDigitCount34/2;\n    let hexDigitCount36 = hexDigitCount35/2;\n\
    \    let hexDigitCount37 = hexDigitCount36/2;\n    let hexDigitCount38 = hexDigitCount37/2;\n\
    \    let hexDigitCount39 = hexDigitCount38/2;\n    let hexDigitCount40 = hexDigitCount39/2;\n\
    \    let hexDigitCount41 = hexDigitCount40", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join('');\n    let primes = [];\n    let prime_counter\
    \ = 0;\n    let prime_counter2 = 0;\n    let prime_counter3 = 0;\n    let prime_counter4\
    \ = 0;\n    let prime_counter5 = 0;\n    let prime_counter6 = 0;\n    let prime_counter7\
    \ = 0;\n    let prime_counter8 = 0;\n    let prime_counter9 = 0;\n    let prime_counter10\
    \ = 0;\n    let prime_counter11 = 0;\n    let prime_counter12 = 0;\n    let prime_counter13\
    \ = 0;\n    let prime_counter14 = 0;\n    let prime_counter15 = 0;\n    let prime_counter16\
    \ = 0;\n    let prime_counter17 = 0;\n    let prime_counter18 = 0;\n    let prime_counter19\
    \ = 0;\n    let prime_counter20 = 0;\n    let prime_counter21 = 0;\n    let prime_counter22\
    \ = 0;\n    let prime_counter23 = 0;\n    let prime_counter24 = 0;\n    let prime_counter25\
    \ = 0;\n    let prime_counter26 = 0;\n    let prime_counter27 = 0;\n    let prime_counter28\
    \ = 0;\n    let prime_counter29 = 0;\n    let prime_counter30 = 0;\n    let prime_counter31\
    \ = 0;\n    let prime_counter32 = 0;\n    let prime_counter33 = 0;\n    let prime_counter34\
    \ = 0;\n    let prime_counter35 = 0;\n    let prime_counter36 = 0;\n    let prime_counter37\
    \ = 0;\n    let prime_counter38 = 0;\n    let prime_counter39 = 0;\n    let prime_counter40\
    \ = 0;\n    let prime_counter41 = 0;\n    let prime_counter42 = 0;\n    let prime_counter43\
    \ = 0;\n    let prime_counter44 = 0;\n    let prime_counter45 = 0;\n    let prime_counter46\
    \ = 0;\n    let prime_counter47 = 0;\n    let prime_counter48 = 0;\n    let prime_counter49\
    \ = 0;\n    let prime_counter50 = 0;\n    let prime_counter51 = 0;\n    let prime_counter52\
    \ = 0;\n    let prime_counter53 = 0;\n    let prime_counter54 = 0;\n    let prime_counter55\
    \ = 0;\n    let prime_counter56 = 0;\n    let prime_counter57 = 0;\n    let prime_counter58\
    \ = 0;\n    let prime_counter59 = 0;\n    let prime_counter60 = 0;\n    let prime_counter61\
    \ = 0;\n    let prime_counter62 = 0;\n    let prime_counter63 = 0;\n    let prime_counter64\
    \ = 0;\n    let prime_counter65 = 0;\n    let prime_counter66 = 0;\n    let prime_counter67\
    \ = 0;\n    let prime_counter68 = 0;\n    let prime_counter69 = 0;\n    let prime_counter70\
    \ = 0;\n    let prime", "    var hex = num.split(\"\");\n    var hexLength = hex.length;\n\
    \    var hexString = \"\";\n    var hexStringLength = 0;\n    var hexStringArray\
    \ = [];\n    var hexStringArrayLength = 0;\n    var hexStringArray2 = [];\n  \
    \  var hexStringArray2Length = 0;\n    var hexStringArray3 = [];\n    var hexStringArray3Length\
    \ = 0;\n    var hexStringArray4 = [];\n    var hexStringArray4Length = 0;\n  \
    \  var hexStringArray5 = [];\n    var hexStringArray5Length = 0;\n    var hexStringArray6\
    \ = [];\n    var hexStringArray6Length = 0;\n    var hexStringArray7 = [];\n \
    \   var hexStringArray7Length = 0;\n    var hexStringArray8 = [];\n    var hexStringArray8Length\
    \ = 0;\n    var hexStringArray9 = [];\n    var hexStringArray9Length = 0;\n  \
    \  var hexStringArray10 = [];\n    var hexStringArray10Length = 0;\n    var hexStringArray11\
    \ = [];\n    var hexStringArray11Length = 0;\n    var hexStringArray12 = [];\n\
    \    var hexStringArray12Length = 0;\n    var hexStringArray13 = [];\n    var\
    \ hexStringArray13Length = 0;\n    var hexStringArray14 = [];\n    var hexStringArray14Length\
    \ = 0;\n    var hexStringArray15 = [];\n    var hexStringArray15Length = 0;\n\
    \    var hexStringArray16 = [];\n    var hexStringArray16Length = 0;\n    var\
    \ hexStringArray17 = [];\n    var hexStringArray17Length = 0;\n    var hexStringArray18\
    \ = [];\n    var hexStringArray18Length = 0;\n    var hexStringArray19 = [];\n\
    \    var hexStringArray19Length = 0;\n    var hexStringArray20 = [];\n    var\
    \ hexStringArray20Length = 0;\n    var hexStringArray21 = [];\n    var hexStringArray21Length\
    \ = 0;\n    var hexStringArray22 = [];\n    var hexStringArray22Length = 0;\n\
    \    var hexStringArray23 = [];\n    var hexStringArray23Length = 0;\n    var\
    \ hexStringArray24 = [];\n    var hexStringArray24Length = 0;\n    var hexStringArray25\
    \ = [];\n    var hexStringArray25Length = 0;\n    var hexStringArray26 = [];\n\
    \    var hexStringArray26Length = 0;\n    var hexStringArray27 = [];\n    var\
    \ hexStringArray27Length = 0;\n    var hexStringArray28 = [];\n    var hexStringArray28Length\
    \ = 0;\n    var hexStringArray29 = [];\n    var hexStringArray29Length = 0;\n\
    \    var hexStringArray30 = [];\n    var hexStringArray30Length = 0;\n    var\
    \ hexStringArray31 = [];\n    var hexStringArray31Length = 0;\n    var hexStringArray32\
    \ = [];\n    var hexStringArray32Length = 0;\n    var hexStringArray33 = [];\n",
  "    let hex = num;\n    let hexDigits = hex.split('');\n    let hexDigitCount =\
    \ hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \   let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigitCount33 = hexDigitCount32*", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join(\"\");\n    let primes = hex_key.primes;\n\
    \    let primesCount = hex_key.primesCount;\n    let primesCount2 = hex_key.primesCount2;\n\
    \    let primesCount3 = hex_key.primesCount3;\n    let primesCount4 = hex_key.primesCount4;\n\
    \    let primesCount5 = hex_key.primesCount5;\n    let primesCount6 = hex_key.primesCount6;\n\
    \    let primesCount7 = hex_key.primesCount7;\n    let primesCount8 = hex_key.primesCount8;\n\
    \    let primesCount9 = hex_key.primesCount9;\n    let primesCount10 = hex_key.primesCount10;\n\
    \    let primesCount11 = hex_key.primesCount11;\n    let primesCount12 = hex_key.primesCount12;\n\
    \    let primesCount13 = hex_key.primesCount13;\n    let primesCount14 = hex_key.primesCount14;\n\
    \    let primesCount15 = hex_key.primesCount15;\n    let primesCount16 = hex_key.primesCount16;\n\
    \    let primesCount17 = hex_key.primesCount17;\n    let primesCount18 = hex_key.primesCount18;\n\
    \    let primesCount19 = hex_key.primesCount19;\n    let primesCount20 = hex_key.primesCount20;\n\
    \    let primesCount21 = hex_key.primesCount21;\n    let primesCount22 = hex_key.primesCount22;\n\
    \    let primesCount23 = hex_key.primesCount23;\n    let primesCount24 = hex_key.primesCount24;\n\
    \    let primesCount25 = hex_key.primesCount25;\n    let primesCount26 = hex_key.primesCount26;\n\
    \    let primesCount27 = hex_key.primesCount27;\n    let primesCount28 = hex_key.primesCount28;\n\
    \    let primesCount29 = hex_key.primesCount29;\n    let primesCount30 = hex_key.primesCount30;\n\
    \    let primesCount31 = hex_key.primesCount31;\n    let primesCount32 = hex_key.primesCount32;\n\
    \    let primesCount33 = hex_key.primesCount33;\n    let primesCount34 = hex_key.primesCount34;\n\
    \    let primes", "    var hex = num.toString().split('');\n    var count = 0;\n\
    \    for(var i = 0; i < hex.length; i++){\n        if(hex[i].match(/[A-F]/)){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "\tlet hex =\
    \ num.toUpperCase();\n\tlet hexDigits = hex.split('');\n\tlet hexDigitCount =\
    \ hexDigits.length;\n\tlet hexDigitCount2 = hexDigitCount*hexDigitCount;\n\tlet\
    \ hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\tlet hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \tlet hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\tlet hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \tlet hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\tlet hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \tlet hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\tlet hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n\tlet hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \tlet hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\tlet hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n\tlet hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \tlet hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\tlet hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n\tlet hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \tlet hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\tlet hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n\tlet hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \tlet hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\tlet hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n\tlet hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \tlet hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\tlet hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n\tlet hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \tlet hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\tlet hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n\tlet hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \tlet hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\tlet hexDigitCount31\
    \ = hexDigitCount", "    var hex = num;\n    var hexDigits = \"0123456789ABCDEF\"\
    ;\n    var hexLength = hex.length;\n    var hexDigitCount = hexDigits.length;\n\
    \    var hexDigitArray = [];\n    var hexDigitArray2 = [];\n    var hexDigitArray3\
    \ = [];\n    var hexDigitArray4 = [];\n    var hexDigitArray5 = [];\n    var hexDigitArray6\
    \ = [];\n    var hexDigitArray7 = [];\n    var hexDigitArray8 = [];\n    var hexDigitArray9\
    \ = [];\n    var hexDigitArray10 = [];\n    var hexDigitArray11 = [];\n    var\
    \ hexDigitArray12 = [];\n    var hexDigitArray13 = [];\n    var hexDigitArray14\
    \ = [];\n    var hexDigitArray15 = [];\n    var hexDigitArray16 = [];\n    var\
    \ hexDigitArray17 = [];\n    var hexDigitArray18 = [];\n    var hexDigitArray19\
    \ = [];\n    var hexDigitArray20 = [];\n    var hexDigitArray21 = [];\n    var\
    \ hexDigitArray22 = [];\n    var hexDigitArray23 = [];\n    var hexDigitArray24\
    \ = [];\n    var hexDigitArray25 = [];\n    var hexDigitArray26 = [];\n    var\
    \ hexDigitArray27 = [];\n    var hexDigitArray28 = [];\n    var hexDigitArray29\
    \ = [];\n    var hexDigitArray30 = [];\n    var hexDigitArray31 = [];\n    var\
    \ hexDigitArray32 = [];\n    var hexDigitArray33 = [];\n    var hexDigitArray34\
    \ = [];\n    var hexDigitArray35 = [];\n    var hexDigitArray36 = [];\n    var\
    \ hexDigitArray37 = [];\n    var hexDigitArray38 = [];\n    var hexDigitArray39\
    \ = [];\n    var hexDigitArray40 = [];\n    var hexDigitArray41 = [];\n    var\
    \ hexDigitArray42 = [];\n    var hexDigitArray43 = [];\n    var hexDigitArray44\
    \ = [];\n    var hexDigitArray45 = [];\n    var hexDigitArray46 = [];\n    var\
    \ hexDigitArray47 = [];\n    var hexDigitArray48 = [];\n    var hexDigitArray49\
    \ = [];\n    var hexDigitArray50 = [];\n    var hexDigitArray51 = [];\n    var\
    \ hexDigitArray52 = [];\n    var hexDigitArray53 = [];\n    var hexDigitArray54\
    \ = [];\n    var hexDigitArray55 = [];\n    var hexDigitArray56 = [];\n    var\
    \ hexDigitArray57 = [];\n    var hexDigitArray58 = [];\n    var hexDigitArray59\
    \ = [];\n    var hexDigitArray60 = [];\n    var hexDigitArray61 = [];\n    var\
    \ hexDigitArray62 = [];\n    var hexDigitArray63 = [];\n    var hexDigitArray64\
    \ = [];\n    var hexDigitArray65 = [];\n    var hexDigitArray66 = [];\n    var\
    \ hexDigitArray67 = [];\n    var hex", "    var hex = num.split(\"\");\n    var\
    \ count = 0;\n    for(var i = 0; i < hex.length; i++){\n        if(hex[i] ===\
    \ \"A\" || hex[i] === \"B\" || hex[i] === \"C\" || hex[i] === \"D\" || hex[i]\
    \ === \"E\" || hex[i] === \"F\"){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n", "    let hex = num.toUpperCase();\n    let hexDigits =\
    \ hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n    let hexDigitArray\
    \ = [];\n    let hexDigitArray2 = [];\n    let hexDigitArray3 = [];\n    let hexDigitArray4\
    \ = [];\n    let hexDigitArray5 = [];\n    let hexDigitArray6 = [];\n    let hexDigitArray7\
    \ = [];\n    let hexDigitArray8 = [];\n    let hexDigitArray9 = [];\n    let hexDigitArray10\
    \ = [];\n    let hexDigitArray11 = [];\n    let hexDigitArray12 = [];\n    let\
    \ hexDigitArray13 = [];\n    let hexDigitArray14 = [];\n    let hexDigitArray15\
    \ = [];\n    let hexDigitArray16 = [];\n    let hexDigitArray17 = [];\n    let\
    \ hexDigitArray18 = [];\n    let hexDigitArray19 = [];\n    let hexDigitArray20\
    \ = [];\n    let hexDigitArray21 = [];\n    let hexDigitArray22 = [];\n    let\
    \ hexDigitArray23 = [];\n    let hexDigitArray24 = [];\n    let hexDigitArray25\
    \ = [];\n    let hexDigitArray26 = [];\n    let hexDigitArray27 = [];\n    let\
    \ hexDigitArray28 = [];\n    let hexDigitArray29 = [];\n    let hexDigitArray30\
    \ = [];\n    let hexDigitArray31 = [];\n    let hexDigitArray32 = [];\n    let\
    \ hexDigitArray33 = [];\n    let hexDigitArray34 = [];\n    let hexDigitArray35\
    \ = [];\n    let hexDigitArray36 = [];\n    let hexDigitArray37 = [];\n    let\
    \ hexDigitArray38 = [];\n    let hexDigitArray39 = [];\n    let hexDigitArray40\
    \ = [];\n    let hexDigitArray41 = [];\n    let hexDigitArray42 = [];\n    let\
    \ hexDigitArray43 = [];\n    let hexDigitArray44 = [];\n    let hexDigitArray45\
    \ = [];\n    let hexDigitArray46 = [];\n    let hexDigitArray47 = [];\n    let\
    \ hexDigitArray48 = [];\n    let hexDigitArray49 = [];\n    let hexDigitArray50\
    \ = [];\n    let hexDigitArray51 = [];\n    let hexDigitArray52 = [];\n    let\
    \ hexDigitArray53 = [];\n    let hexDigitArray54 = [];\n    let hexDigitArray55\
    \ = [];\n    let hexDigitArray56 = [];\n    let hexDigitArray57 = [];\n    let\
    \ hexDigitArray58 = [];\n    let hexDigitArray59 = [];\n    let hexDigitArray60\
    \ = [];\n    let hexDigitArray61 = [];\n    let hexDigitArray62 = [];\n    let\
    \ hexDigitArray63 = [];\n    let hexDigitArray64 = [];\n    let hexDigitArray65\
    \ = [];\n    let hexDigitArray66 = [];\n    let hexDigitArray67 = [];\n    let\
    \ hexDigitArray68 = [];\n", "    let hex = num.toUpperCase();\n    let hexDigits\
    \ = hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitPrimes\
    \ = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimeSum = 0;\n    for(let\
    \ i = 0; i < hexDigitCount; i++){\n        let hexDigit = hexDigits[i];\n    \
    \    if(hexDigit == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit == 'D'\
    \ || hexDigit == 'E' || hexDigit == 'F'){\n            hexDigitPrimes.push(hexDigit);\n\
    \        }\n    }\n    for(let i = 0; i < hexDigitCount; i++){\n        let hexDigit\
    \ = hexDigits[i];\n        if(hexDigitPrimes.includes(hexDigit)){\n          \
    \  hexDigitPrimeCount++;\n            hexDigitPrimeSum += parseInt(hexDigit);\n\
    \        }\n    }\n    return hexDigitPrimeCount;\n}\n", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimeIndex\
    \ = 0;\n    let hexDigitPrimeIndex2 = 0;\n    let hexDigitPrimeIndex3 = 0;\n \
    \   let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5 = 0;\n    let hexDigitPrimeIndex6\
    \ = 0;\n    let hexDigitPrimeIndex7 = 0;\n    let hexDigitPrimeIndex8 = 0;\n \
    \   let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10 = 0;\n    let hexDigitPrimeIndex11\
    \ = 0;\n    let hexDigitPrimeIndex12 = 0;\n    let hexDigitPrimeIndex13 = 0;\n\
    \    let hexDigitPrimeIndex14 = 0;\n    let hexDigitPrimeIndex15 = 0;\n    let\
    \ hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17 = 0;\n    let hexDigitPrimeIndex18\
    \ = 0;\n    let hexDigitPrimeIndex19 = 0;\n    let hexDigitPrimeIndex20 = 0;\n\
    \    let hexDigitPrimeIndex21 = 0;\n    let hexDigitPrimeIndex22 = 0;\n    let\
    \ hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24 = 0;\n    let hexDigitPrimeIndex25\
    \ = 0;\n    let hexDigitPrimeIndex26 = 0;\n    let hexDigitPrimeIndex27 = 0;\n\
    \    let hexDigitPrimeIndex28 = 0;\n    let hexDigitPrimeIndex29 = 0;\n    let\
    \ hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31 = 0;\n    let hexDigitPrimeIndex32\
    \ = 0;\n    let hexDigitPrimeIndex33 = 0;\n    let hexDigitPrimeIndex34 = 0;\n\
    \    let hexDigitPrimeIndex35 = 0;\n    let hexDigitPrimeIndex36 = 0;\n    let\
    \ hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38 = 0;\n    let hexDigitPrimeIndex39\
    \ = 0;\n    let hexDigitPrimeIndex40 = 0;\n    let hexDigitPrimeIndex41 = 0;\n\
    \    let hexDigitPrimeIndex42 = 0;\n    let hexDigitPrimeIndex43 = 0;\n    let\
    \ hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45 = 0;\n    let hexDigitPrimeIndex46\
    \ = 0;\n    let hexDigitPrimeIndex47 = 0;\n    let hexDigitPrimeIndex48 = 0;\n\
    \    let hexDigitPrimeIndex49 = 0;\n    let hexDigitPrimeIndex50 = 0;\n    let\
    \ hexDigitPrimeIndex51 = 0;\n    let hexDigitPrimeIndex52 = 0;\n    let hexDigitPrimeIndex53\
    \ = 0;\n    let ", "    let hexadecimal = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = hexadecimal.match(/[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]/g);\n\
    \    let primesCount = primes.length;\n    let primesSum = 0;\n    for(let i =\
    \ 0; i < primesCount; i++){\n        primesSum += primes[i];\n    }\n    let primesSumHex\
    \ = primesSum.toString(16);\n    let primesSumHexLength = primesSumHex.length;\n\
    \    let primesSumHexArray = primesSumHex.split(\"\");\n    let primesSumHexArrayLength\
    \ = primesSumHexArray.length;\n    let primesSumHexArraySum = 0;\n    for(let\
    \ i = 0; i < primesSumHexArrayLength; i++){\n        primesSumHexArraySum += parseInt(primesSumHexArray[i]);\n\
    \    }\n    let primesSumHexArraySumHex = primesSumHexArraySum.toString(16);\n\
    \    let primesSumHexArraySumHexLength = primesSumHexArraySumHex.length;\n   \
    \ let primesSumHexArraySumHexArray = primesSumHexArraySumHex.split(\"\");\n  \
    \  let primesSumHexArraySumHexArrayLength = primesSumHexArraySumHexArray.length;\n\
    \    let primesSumHexArraySumHexArraySum = 0;\n    for(let i = 0; i < primesSumHexArraySumHexArrayLength;\
    \ i++){\n        primesSumHexArraySumHexArraySum += parseInt(primesSumHexArraySumHexArray[i]);\n\
    \    }\n    let primesSumHexArraySumHexArraySumHex = primesSumHexArraySumHexArraySum.toString(16);\n\
    \    let primesSumHexArraySumHexArraySumHexLength = primesSumHexArraySumHexArraySumHex.length;\n\
    \    let primesSumHexArraySumHexArraySumHexArray = primesSumHexArraySumHexArraySumHex.split(\"\
    \");\n    let primesSumHexArraySumHexArraySumHexArrayLength = primesSumHexArraySumHexArraySumHexArray.length;\n\
    \    let primesSumHexArraySumHexArraySumHexArraySum = 0;\n    for(let i = 0; i\
    \ < primesSumHexArraySumHexArraySumHexArrayLength; i++){\n        primesSumHexArraySumHexArraySumHexArraySum\
    \ += parseInt(primesSumHexArraySumHexArraySumHexArray[i]);\n    }\n    let primesSumHexArraySumHexArraySumHexArray",
  "  var hex = num.toUpperCase();\n  var hex_rev = hex.split('').reverse().join('');\n\
    \  var hex_rev_rev = hex_rev.split('').reverse().join('');\n  var hex_rev_rev2\
    \ = hex_rev_rev.split('').reverse().join('');\n  var hex_rev_rev3 = hex_rev_rev2.split('').reverse().join('');\n\
    \  var hex_rev_rev4 = hex_rev_rev3.split('').reverse().join('');\n  var hex_rev_rev5\
    \ = hex_rev_rev4.split('').reverse().join('');\n  var hex_rev_rev6 = hex_rev_rev5.split('').reverse().join('');\n\
    \  var hex_rev_rev7 = hex_rev_rev6.split('').reverse().join('');\n  var hex_rev_rev8\
    \ = hex_rev_rev7.split('').reverse().join('');\n  var hex_rev_rev9 = hex_rev_rev8.split('').reverse().join('');\n\
    \  var hex_rev_rev10 = hex_rev_rev9.split('').reverse().join('');\n  var hex_rev_rev11\
    \ = hex_rev_rev10.split('').reverse().join('');\n  var hex_rev_rev12 = hex_rev_rev11.split('').reverse().join('');\n\
    \  var hex_rev_rev13 = hex_rev_rev12.split('').reverse().join('');\n  var hex_rev_rev14\
    \ = hex_rev_rev13.split('').reverse().join('');\n  var hex_rev_rev15 = hex_rev_rev14.split('').reverse().join('');\n\
    \  var hex_rev_rev16 = hex_rev_rev15.split('').reverse().join('');\n  var hex_rev_rev17\
    \ = hex_rev_rev16.split('').reverse().join('');\n  var hex_rev_rev18 = hex_rev_rev17.split('').reverse().join('');\n\
    \  var hex_rev_rev19 = hex_rev_rev18.split('').reverse().join('');\n  var hex_rev_rev20\
    \ = hex_rev_rev19.split('').reverse().join('');\n  var hex_rev_rev21 = hex_rev_rev20.split('').reverse().join('');\n\
    \  var hex_rev_rev22 = hex_rev_rev21.split('').reverse().join('');\n  var hex_rev_rev23\
    \ = hex_rev_rev22.split('').reverse().join('');\n  var hex_rev_rev24 = hex_rev_rev23.split('').reverse().join('');\n\
    \  var hex_rev_rev25 = hex_rev_rev24.split('').reverse().join('');\n  var hex_rev_rev26\
    \ = hex_rev_rev25.split('').reverse().join('');\n  var hex_rev_rev27 = hex_rev_rev",
  "  var hex = num;\n  var hexDigits = \"0123456789ABCDEF\";\n  var hexDigitCount\
    \ = hexDigits.length;\n  var hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  var hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  var hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  var hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  var hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  var hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  var hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  var hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  var hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  var hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  var hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  var hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  var hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  var hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  var hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  var hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  var hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  var hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  var hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  var hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  var hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  var hexDigitCount33\
    \ = hexDigitCount32", "    let hex = num.replace(/[^0-9A-F]/g,\"\");\n    let\
    \ hex2 = hex.replace(/[0-9A-F]/g,\"\");\n    let hex3 = hex2.replace(/[0-9A-F]/g,\"\
    \");\n    let hex4 = hex3.replace(/[0-9A-F]/g,\"\");\n    let hex5 = hex4.replace(/[0-9A-F]/g,\"\
    \");\n    let hex6 = hex5.replace(/[0-9A-F]/g,\"\");\n    let hex7 = hex6.replace(/[0-9A-F]/g,\"\
    \");\n    let hex8 = hex7.replace(/[0-9A-F]/g,\"\");\n    let hex9 = hex8.replace(/[0-9A-F]/g,\"\
    \");\n    let hex10 = hex9.replace(/[0-9A-F]/g,\"\");\n    let hex11 = hex10.replace(/[0-9A-F]/g,\"\
    \");\n    let hex12 = hex11.replace(/[0-9A-F]/g,\"\");\n    let hex13 = hex12.replace(/[0-9A-F]/g,\"\
    \");\n    let hex14 = hex13.replace(/[0-9A-F]/g,\"\");\n    let hex15 = hex14.replace(/[0-9A-F]/g,\"\
    \");\n    let hex16 = hex15.replace(/[0-9A-F]/g,\"\");\n    let hex17 = hex16.replace(/[0-9A-F]/g,\"\
    \");\n    let hex18 = hex17.replace(/[0-9A-F]/g,\"\");\n    let hex19 = hex18.replace(/[0-9A-F]/g,\"\
    \");\n    let hex20 = hex19.replace(/[0-9A-F]/g,\"\");\n    let hex21 = hex20.replace(/[0-9A-F]/g,\"\
    \");\n    let hex22 = hex21.replace(/[0-9A-F]/g,\"\");\n    let hex23 = hex22.replace(/[0-9A-F]/g,\"\
    \");\n    let hex24 = hex23.replace(/[0-9A-F]/g,\"\");\n    let hex25 = hex24.replace(/[0-9A-F]/g,\"\
    \");\n    let hex26 = hex25.replace(/[0-9A-F]/g,\"\");\n    let hex27 = hex26.replace(/[0-9A-F]/g,\"\
    \");\n    let hex28 = hex27.replace(/[0-9A-F]/g,\"\");\n    let hex29 = hex28.replace(/[0-9A-F]/g,\"\
    \");\n    let hex30 = hex29.replace(/[0-9A-F]/g,\"\");\n    let hex31 = hex30.replace(/[0-9A-F]/g,\"\
    \");\n    let hex32 = hex31.replace(/[0-9A-F]/g,\"\");\n    let hex33 = hex32.replace(/[0-9A-F]/g,\"\
    \");\n    let hex34 = hex33.replace(/[0-9A-F]/g,\"\");\n    let hex35 = hex34.replace(/[0-9A-F]/g,\"\
    \");\n    let hex36 = hex35.replace(/[0-9A-F]/g,\"\");\n    let hex37 = hex36.replace(/[0-9A-F]/g,\"\
    \");\n", "    let hex = num.toString().split('');\n    let primes = [];\n    let\
    \ prime_counter = 0;\n    let prime_counter2 = 0;\n    let prime_counter3 = 0;\n\
    \    let prime_counter4 = 0;\n    let prime_counter5 = 0;\n    let prime_counter6\
    \ = 0;\n    let prime_counter7 = 0;\n    let prime_counter8 = 0;\n    let prime_counter9\
    \ = 0;\n    let prime_counter10 = 0;\n    let prime_counter11 = 0;\n    let prime_counter12\
    \ = 0;\n    let prime_counter13 = 0;\n    let prime_counter14 = 0;\n    let prime_counter15\
    \ = 0;\n    let prime_counter16 = 0;\n    let prime_counter17 = 0;\n    let prime_counter18\
    \ = 0;\n    let prime_counter19 = 0;\n    let prime_counter20 = 0;\n    let prime_counter21\
    \ = 0;\n    let prime_counter22 = 0;\n    let prime_counter23 = 0;\n    let prime_counter24\
    \ = 0;\n    let prime_counter25 = 0;\n    let prime_counter26 = 0;\n    let prime_counter27\
    \ = 0;\n    let prime_counter28 = 0;\n    let prime_counter29 = 0;\n    let prime_counter30\
    \ = 0;\n    let prime_counter31 = 0;\n    let prime_counter32 = 0;\n    let prime_counter33\
    \ = 0;\n    let prime_counter34 = 0;\n    let prime_counter35 = 0;\n    let prime_counter36\
    \ = 0;\n    let prime_counter37 = 0;\n    let prime_counter38 = 0;\n    let prime_counter39\
    \ = 0;\n    let prime_counter40 = 0;\n    let prime_counter41 = 0;\n    let prime_counter42\
    \ = 0;\n    let prime_counter43 = 0;\n    let prime_counter44 = 0;\n    let prime_counter45\
    \ = 0;\n    let prime_counter46 = 0;\n    let prime_counter47 = 0;\n    let prime_counter48\
    \ = 0;\n    let prime_counter49 = 0;\n    let prime_counter50 = 0;\n    let prime_counter51\
    \ = 0;\n    let prime_counter52 = 0;\n    let prime_counter53 = 0;\n    let prime_counter54\
    \ = 0;\n    let prime_counter55 = 0;\n    let prime_counter56 = 0;\n    let prime_counter57\
    \ = 0;\n    let prime_counter58 = 0;\n    let prime_counter59 = 0;\n    let prime_counter60\
    \ = 0;\n    let prime_counter61 = 0;\n    let prime_counter62 = 0;\n    let prime_counter63\
    \ = 0;\n    let prime_counter64 = 0;\n    let prime_counter65 = 0;\n    let prime_counter66\
    \ = 0;\n    let prime_counter67 = 0;\n    let prime_counter68 = 0;\n    let prime_counter69\
    \ = 0;\n    let prime_counter70 = 0;\n    let prime_counter71 = 0;\n    let prime_counter72\
    \ = 0;\n", "    let hex = num.toString().split('');\n    let primes = [];\n  \
    \  let prime_count = 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i]\
    \ === 'A' || hex[i] === 'B' || hex[i] === 'C' || hex[i] === 'D' || hex[i] ===\
    \ 'E' || hex[i] === 'F'){\n            primes.push(hex[i]);\n        }\n    }\n\
    \    for(let i = 0; i < primes.length; i++){\n        if(primes.includes(hex[i])){\n\
    \            prime_count++;\n        }\n    }\n    return prime_count;\n}\n",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let primeDigitCount = 0;\n    let primeDigits\
    \ = [];\n    let primes = [];\n    let primeCount = 0;\n    let primeChecker =\
    \ 2;\n    let primeChecker2 = 2;\n    let primeChecker3 = 1;\n    let primeChecker4\
    \ = 1;\n    let primeChecker5 = 1;\n    let primeChecker6 = 1;\n    let primeChecker7\
    \ = 1;\n    let primeChecker8 = 1;\n    let primeChecker9 = 1;\n    let primeChecker10\
    \ = 1;\n    let primeChecker11 = 1;\n    let primeChecker12 = 1;\n    let primeChecker13\
    \ = 1;\n    let primeChecker14 = 1;\n    let primeChecker15 = 1;\n    let primeChecker16\
    \ = 1;\n    let primeChecker17 = 1;\n    let primeChecker18 = 1;\n    let primeChecker19\
    \ = 1;\n    let primeChecker20 = 1;\n    let primeChecker21 = 1;\n    let primeChecker22\
    \ = 1;\n    let primeChecker23 = 1;\n    let primeChecker24 = 1;\n    let primeChecker25\
    \ = 1;\n    let primeChecker26 = 1;\n    let primeChecker27 = 1;\n    let primeChecker28\
    \ = 1;\n    let primeChecker29 = 1;\n    let primeChecker30 = 1;\n    let primeChecker31\
    \ = 1;\n    let primeChecker32 = 1;\n    let primeChecker33 = 1;\n    let primeChecker34\
    \ = 1;\n    let primeChecker35 = 1;\n    let primeChecker36 = 1;\n    let primeChecker37\
    \ = 1;\n    let primeChecker38 = 1;\n    let primeChecker39 = 1;\n    let primeChecker40\
    \ = 1;\n    let primeChecker41 = 1;\n    let primeChecker42 = 1;\n    let primeChecker43\
    \ = 1;\n    let primeChecker44 = 1;\n    let primeChecker45 = 1;\n    let primeChecker46\
    \ = 1;\n    let primeChecker47 = 1;\n    let primeChecker48 = 1;\n    let primeChecker49\
    \ = 1;\n    let primeChecker50 = 1;\n    let primeChecker51 = 1;\n    let primeChecker52\
    \ = 1;\n    let primeChecker53 = 1;\n    let primeChecker54 = 1;\n    let primeChecker55\
    \ = 1;\n    let primeChecker56 = 1;\n    let primeChecker57 = 1;\n    let primeChecker58\
    \ = 1;\n    let primeChecker59 = 1;\n    let primeChecker60 = 1;\n    let primeChecker61\
    \ = 1;\n    let primeChecker62 = 1;\n    let primeChecker63 = 1;\n    let primeChecker64\
    \ = 1;\n    let primeChecker65 = 1;\n    let primeChecker66 = 1;\n    let primeChecker67\
    \ = 1;\n    let primeChecker68 = 1;\n    let primeChecker69 = 1;\n    let primeChecker70\
    \ = 1;\n    let primeChecker71 = 1;\n    let primeChecker72 = 1;\n    let primeChecker73\
    \ = 1;\n    let primeChecker74 = 1;\n    let primeChecker75 = 1;\n    let primeChecker76\
    \ = 1;\n    let primeChecker77 = 1;\n", "    var hex = num.toString().split('');\n\
    \    var hexLength = hex.length;\n    var hexString = '';\n    var hexStringLength\
    \ = 0;\n    var hexStringLength2 = 0;\n    var hexStringLength3 = 0;\n    var\
    \ hexStringLength4 = 0;\n    var hexStringLength5 = 0;\n    var hexStringLength6\
    \ = 0;\n    var hexStringLength7 = 0;\n    var hexStringLength8 = 0;\n    var\
    \ hexStringLength9 = 0;\n    var hexStringLength10 = 0;\n    var hexStringLength11\
    \ = 0;\n    var hexStringLength12 = 0;\n    var hexStringLength13 = 0;\n    var\
    \ hexStringLength14 = 0;\n    var hexStringLength15 = 0;\n    var hexStringLength16\
    \ = 0;\n    var hexStringLength17 = 0;\n    var hexStringLength18 = 0;\n    var\
    \ hexStringLength19 = 0;\n    var hexStringLength20 = 0;\n    var hexStringLength21\
    \ = 0;\n    var hexStringLength22 = 0;\n    var hexStringLength23 = 0;\n    var\
    \ hexStringLength24 = 0;\n    var hexStringLength25 = 0;\n    var hexStringLength26\
    \ = 0;\n    var hexStringLength27 = 0;\n    var hexStringLength28 = 0;\n    var\
    \ hexStringLength29 = 0;\n    var hexStringLength30 = 0;\n    var hexStringLength31\
    \ = 0;\n    var hexStringLength32 = 0;\n    var hexStringLength33 = 0;\n    var\
    \ hexStringLength34 = 0;\n    var hexStringLength35 = 0;\n    var hexStringLength36\
    \ = 0;\n    var hexStringLength37 = 0;\n    var hexStringLength38 = 0;\n    var\
    \ hexStringLength39 = 0;\n    var hexStringLength40 = 0;\n    var hexStringLength41\
    \ = 0;\n    var hexStringLength42 = 0;\n    var hexStringLength43 = 0;\n    var\
    \ hexStringLength44 = 0;\n    var hexStringLength45 = 0;\n    var hexStringLength46\
    \ = 0;\n    var hexStringLength47 = 0;\n    var hexStringLength48 = 0;\n    var\
    \ hexStringLength49 = 0;\n    var hexStringLength50 = 0;\n    var hexStringLength51\
    \ = 0;\n    var hexStringLength52 = 0;\n    var hexStringLength53 = 0;\n    var\
    \ hexStringLength54 = 0;\n    var hexStringLength55 = 0;\n    var hexStringLength56\
    \ = 0;\n    var hexStringLength57 = 0;\n    var hexStringLength58 = 0;\n    var\
    \ hexStringLength59 = 0;\n    var hexStringLength60 = 0;\n    var hexStringLength61\
    \ = 0;\n    var hexStringLength62 = 0;\n    var hexStringLength63 = 0;\n    var\
    \ hexStringLength64 = 0;\n    var hexStringLength65 = 0;\n    var hexStringLength66\
    \ = 0;\n    var hexStringLength67 = 0;\n    var hexStringLength68 = 0;\n    var\
    \ hexStringLength69 = 0;\n    var hexStringLength70 = 0;\n    var hexStringLength71\
    \ = 0;\n", "    var hex = num.toUpperCase();\n    var hexDigits = hex.split(\"\
    \");\n    var hexDigitCount = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*2;\n\
    \    var hexDigitCount3 = hexDigitCount*3;\n    var hexDigitCount4 = hexDigitCount*4;\n\
    \    var hexDigitCount5 = hexDigitCount*5;\n    var hexDigitCount6 = hexDigitCount*6;\n\
    \    var hexDigitCount7 = hexDigitCount*7;\n    var hexDigitCount8 = hexDigitCount*8;\n\
    \    var hexDigitCount9 = hexDigitCount*9;\n    var hexDigitCount10 = hexDigitCount*10;\n\
    \    var hexDigitCount11 = hexDigitCount*11;\n    var hexDigitCount12 = hexDigitCount*12;\n\
    \    var hexDigitCount13 = hexDigitCount*13;\n    var hexDigitCount14 = hexDigitCount*14;\n\
    \    var hexDigitCount15 = hexDigitCount*15;\n    var hexDigitCount16 = hexDigitCount*16;\n\
    \    var hexDigitCount17 = hexDigitCount*17;\n    var hexDigitCount18 = hexDigitCount*18;\n\
    \    var hexDigitCount19 = hexDigitCount*19;\n    var hexDigitCount20 = hexDigitCount*20;\n\
    \    var hexDigitCount21 = hexDigitCount*21;\n    var hexDigitCount22 = hexDigitCount*22;\n\
    \    var hexDigitCount23 = hexDigitCount*23;\n    var hexDigitCount24 = hexDigitCount*24;\n\
    \    var hexDigitCount25 = hexDigitCount*25;\n    var hexDigitCount26 = hexDigitCount*26;\n\
    \    var hexDigitCount27 = hexDigitCount*27;\n    var hexDigitCount28 = hexDigitCount*28;\n\
    \    var hexDigitCount29 = hexDigitCount*29;\n    var hexDigitCount30 = hexDigitCount*30;\n\
    \    var hexDigitCount31 = hexDigitCount*31;\n    var hexDigitCount32 = hexDigitCount*32;\n\
    \    var hexDigitCount33 = hexDigitCount*33;\n    var hexDigitCount34 = hexDigitCount*34;\n\
    \    var hexDigitCount35 = hexDigitCount*35;\n    var hexDigitCount36 = hexDigitCount*36;\n\
    \    var hexDigitCount37 = hexDigitCount*37;\n    var hexDigitCount38 = hexDigitCount*38;\n\
    \    var hexDigitCount39 = hexDigitCount*39;\n    var hexDigitCount40 = hexDigitCount*40;\n\
    \    var hexDigitCount41 = hexDigitCount*", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_counter = 0;\n    let prime_counter2 = 0;\n\
    \    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5\
    \ = 0;\n    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime_counter71\
    \ = 0;\n    let prime_counter72 = 0;\n", "\tlet hex = num.split(\"\").map(x =>\
    \ x.charCodeAt(0).toString(16)).join('');\n\tlet primes = hex_key.primes;\n\t\
    let result = 0;\n\tfor(let i = 0; i < hex.length; i++){\n\t\tlet digit = hex[i];\n\
    \t\tif(digit in primes){\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\n\
    hex_key.primes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount/2;\n\
    \    let hexDigitCount3 = hexDigitCount2/2;\n    let hexDigitCount4 = hexDigitCount3/2;\n\
    \    let hexDigitCount5 = hexDigitCount4/2;\n    let hexDigitCount6 = hexDigitCount5/2;\n\
    \    let hexDigitCount7 = hexDigitCount6/2;\n    let hexDigitCount8 = hexDigitCount7/2;\n\
    \    let hexDigitCount9 = hexDigitCount8/2;\n    let hexDigitCount10 = hexDigitCount9/2;\n\
    \    let hexDigitCount11 = hexDigitCount10/2;\n    let hexDigitCount12 = hexDigitCount11/2;\n\
    \    let hexDigitCount13 = hexDigitCount12/2;\n    let hexDigitCount14 = hexDigitCount13/2;\n\
    \    let hexDigitCount15 = hexDigitCount14/2;\n    let hexDigitCount16 = hexDigitCount15/2;\n\
    \    let hexDigitCount17 = hexDigitCount16/2;\n    let hexDigitCount18 = hexDigitCount17/2;\n\
    \    let hexDigitCount19 = hexDigitCount18/2;\n    let hexDigitCount20 = hexDigitCount19/2;\n\
    \    let hexDigitCount21 = hexDigitCount20/2;\n    let hexDigitCount22 = hexDigitCount21/2;\n\
    \    let hexDigitCount23 = hexDigitCount22/2;\n    let hexDigitCount24 = hexDigitCount23/2;\n\
    \    let hexDigitCount25 = hexDigitCount24/2;\n    let hexDigitCount26 = hexDigitCount25/2;\n\
    \    let hexDigitCount27 = hexDigitCount26/2;\n    let hexDigitCount28 = hexDigitCount27/2;\n\
    \    let hexDigitCount29 = hexDigitCount28/2;\n    let hexDigitCount30 = hexDigitCount29/2;\n\
    \    let hexDigitCount31 = hexDigitCount30/2;\n    let hexDigitCount32 = hexDigitCount31/2;\n\
    \    let hexDigitCount33 = hexDigitCount32/2;\n    let hexDigitCount34 = hexDigitCount33/2;\n\
    \    let hexDigitCount35 = hexDigitCount34/2;\n    let hexDigitCount36 = hexDigitCount35/2;\n\
    \    let hexDigitCount37 = hexDigitCount36/2;\n    let hexDigitCount38 = hexDigitCount37/2;\n\
    \    let hexDigitCount39 = hexDigitCount38/2;\n    let hexDigitCount40 = hexDigitCount39/2;\n\
    \    let hexDigitCount41 = hexDigitCount", "  let hex = num.toString().split('');\n\
    \  let primes = [];\n  let prime_count = 0;\n  let prime_digits = [];\n  let prime_digit_count\
    \ = 0;\n  let prime_digit_sum = 0;\n  let prime_digit_sum2 = 0;\n  let prime_digit_sum3\
    \ = 0;\n  let prime_digit_sum4 = 0;\n  let prime_digit_sum5 = 0;\n  let prime_digit_sum6\
    \ = 0;\n  let prime_digit_sum7 = 0;\n  let prime_digit_sum8 = 0;\n  let prime_digit_sum9\
    \ = 0;\n  let prime_digit_sum10 = 0;\n  let prime_digit_sum11 = 0;\n  let prime_digit_sum12\
    \ = 0;\n  let prime_digit_sum13 = 0;\n  let prime_digit_sum14 = 0;\n  let prime_digit_sum15\
    \ = 0;\n  let prime_digit_sum16 = 0;\n  let prime_digit_sum17 = 0;\n  let prime_digit_sum18\
    \ = 0;\n  let prime_digit_sum19 = 0;\n  let prime_digit_sum20 = 0;\n  let prime_digit_sum21\
    \ = 0;\n  let prime_digit_sum22 = 0;\n  let prime_digit_sum23 = 0;\n  let prime_digit_sum24\
    \ = 0;\n  let prime_digit_sum25 = 0;\n  let prime_digit_sum26 = 0;\n  let prime_digit_sum27\
    \ = 0;\n  let prime_digit_sum28 = 0;\n  let prime_digit_sum29 = 0;\n  let prime_digit_sum30\
    \ = 0;\n  let prime_digit_sum31 = 0;\n  let prime_digit_sum32 = 0;\n  let prime_digit_sum33\
    \ = 0;\n  let prime_digit_sum34 = 0;\n  let prime_digit_sum35 = 0;\n  let prime_digit_sum36\
    \ = 0;\n  let prime_digit_sum37 = 0;\n  let prime_digit_sum38 = 0;\n  let prime_digit_sum39\
    \ = 0;\n  let prime_digit_sum40 = 0;\n  let prime_digit_sum41 = 0;\n  let prime_digit_sum42\
    \ = 0;\n  let prime_digit_sum43 = 0;\n  let prime_digit_sum44 = 0;\n  let prime_digit_sum45\
    \ = 0;\n  let prime_digit_sum46 = 0;\n  let prime_digit_sum47 = 0;\n  let prime_digit_sum48\
    \ = 0;\n  let prime_digit_sum49 = 0;\n  let prime_digit_sum50 = 0;\n  let prime_digit_sum51\
    \ = 0;\n  let prime_digit_sum52 = 0;\n  let prime_digit_sum53 = 0;\n  let prime_digit_sum54\
    \ = 0;\n  let prime_digit_sum55 = 0;\n  let prime_digit_sum56 = 0;\n  let prime_digit_sum57\
    \ = 0;\n  let prime_digit_sum58 = 0;\n  let prime_digit_sum59 = 0;\n  let prime_digit_sum60\
    \ = 0;\n  let prime_digit_sum61 = 0;", "    let hex = num.split(\"\").map(x =>\
    \ x.charCodeAt(0).toString(16));\n    let primes = [];\n    let prime_count =\
    \ 0;\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i] == \"A\" ||\
    \ hex[i] == \"B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" ||\
    \ hex[i] == \"F\"){\n            primes.push(hex[i]);\n        }\n    }\n    for(let\
    \ i = 0; i < primes.length; i++){\n        for(let j = i + 1; j < primes.length;\
    \ j++){\n            if(primes[i] * primes[j] == hex.length){\n              \
    \  prime_count++;\n            }\n        }\n    }\n    return prime_count;\n\
    }\n", "    let hex = num.toString().split('');\n    let primes = [];\n    for(let\
    \ i = 0; i < hex.length; i++){\n        if(hex[i] === 'A' || hex[i] === 'B' ||\
    \ hex[i] === 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n   \
    \         primes.push(hex[i]);\n        }\n    }\n    let primesCount = primes.length;\n\
    \    let hexCount = hex.length;\n    let primesSum = 0;\n    for(let i = 0; i\
    \ < primesCount; i++){\n        primesSum += parseInt(primes[i]);\n    }\n   \
    \ let hexSum = 0;\n    for(let i = 0; i < hexCount; i++){\n        hexSum += parseInt(hex[i]);\n\
    \    }\n    let result = primesSum + hexSum;\n    return result;\n}\n", "    let\
    \ hex = num.toString().split('');\n    let count = 0;\n    for(let i = 0; i <\
    \ hex.length; i++){\n        if(hex[i] === 'A' || hex[i] === 'B' || hex[i] ===\
    \ 'C' || hex[i] === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    var hex = num.split(\"\");\n\
    \    var count = 0;\n    for(var i=0;i<hex.length;i++){\n        if(hex[i] ==\
    \ \"A\" || hex[i] == \"B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i] ==\
    \ \"E\" || hex[i] == \"F\"){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    var hex = num.toString().split('');\n    var hex_rev = [];\n\
    \    for(var i=0;i<hex.length;i++){\n        hex_rev.push(hex[i].charCodeAt(0)-96);\n\
    \    }\n    var hex_rev_sort = hex_rev.sort();\n    var hex_rev_sort = hex_rev_sort.reverse();\n\
    \    var hex_rev_sort = hex_rev_sort.toString();\n    var hex_rev_sort = hex_rev_sort.split('');\n\
    \    var hex_rev_sort = hex_rev_sort.reverse();\n    var hex_rev_sort = hex_rev_sort.toString();\n\
    \    var hex_rev_sort = hex_rev_sort.split('');\n    var hex_rev_sort = hex_rev_sort.reverse();\n\
    \    var hex_rev_sort = hex_rev_sort.toString();\n    var hex_rev_sort = hex_rev_sort.split('');\n\
    \    var hex_rev_sort = hex_rev_sort.reverse();\n    var hex_rev_sort = hex_rev_sort.toString();\n\
    \    var hex_rev_sort = hex_rev_sort.split('');\n    var hex_rev_sort = hex_rev_sort.reverse();\n\
    \    var hex_rev_sort = hex_rev_sort.toString();\n    var hex_rev_sort = hex_rev_sort.split('');\n\
    \    var hex_rev_sort = hex_rev_sort.reverse();\n    var hex_rev_sort = hex_rev_sort.toString();\n\
    \    var hex_rev_sort = hex_rev_sort.split('');\n    var hex_rev_sort = hex_rev_sort.reverse();\n\
    \    var hex_rev_sort = hex_rev_sort.toString();\n    var hex_rev_sort = hex_rev_sort.split('');\n\
    \    var hex_rev_sort = hex_rev_sort.reverse();\n    var hex_rev_sort = hex_rev_sort.toString();\n\
    \    var hex_rev_sort = hex_rev_sort.split('');\n    var hex_rev_sort = hex_rev_sort.reverse();\n\
    \    var hex_rev_sort = hex_rev_sort.toString();\n    var hex_rev_sort = hex_rev_sort.split('');\n\
    \    var hex_rev_sort = hex_rev_sort.reverse();\n    var hex_rev_sort = hex_rev_sort.toString();\n\
    \    var hex_rev_sort = hex_rev_sort.split('');\n    var hex_rev_sort = hex_rev_sort.reverse();\n\
    \    var hex_rev_sort = hex_rev_sort.toString();\n    var hex_rev_sort = hex_rev_sort.split('');\n\
    \    var hex_rev_sort = hex_rev_", "    var hex = num;\n    var hex_rev = hex.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split = hex_rev.split(\"\").reverse().join(\"\
    \");\n    var hex_rev_split_split = hex_rev_split.split(\"\").reverse().join(\"\
    \");\n    var hex_rev_split_split_split = hex_rev_split_split.split(\"\").reverse().join(\"\
    \");\n    var hex_rev_split_split_split_split = hex_rev_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split.split(\"\").reverse().join(\"\");\n    var\
    \ hex_rev_split_split_split_split_split_split_split_split = hex_rev_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split.split(\"\").reverse().join(\"\"\
    );\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split.split(\"\").reverse().join(\"\
    \");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split.split(\"\").reverse().join(\"\
    \");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split_split_split\
    \ = hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split_split.split(\"\
    \").reverse().join(\"\");\n    var hex_rev_split_split_split_split_split_split_split_split_split_split_split_split_split_split_",
  "    var hex = num.split(\"\");\n    var hex_rev = [];\n    for(var i=0;i<hex.length;i++){\n\
    \        hex_rev.push(hex[i].charCodeAt(0) - 64);\n    }\n    var hex_rev_rev\
    \ = hex_rev.slice(0).reverse();\n    var hex_rev_rev_rev = hex_rev_rev.slice(0).reverse();\n\
    \    var hex_rev_rev_rev2 = hex_rev_rev_rev.slice(0).reverse();\n    var hex_rev_rev_rev3\
    \ = hex_rev_rev_rev2.slice(0).reverse();\n    var hex_rev_rev_rev4 = hex_rev_rev_rev3.slice(0).reverse();\n\
    \    var hex_rev_rev_rev5 = hex_rev_rev_rev4.slice(0).reverse();\n    var hex_rev_rev_rev6\
    \ = hex_rev_rev_rev5.slice(0).reverse();\n    var hex_rev_rev_rev7 = hex_rev_rev_rev6.slice(0).reverse();\n\
    \    var hex_rev_rev_rev8 = hex_rev_rev_rev7.slice(0).reverse();\n    var hex_rev_rev_rev9\
    \ = hex_rev_rev_rev8.slice(0).reverse();\n    var hex_rev_rev_rev10 = hex_rev_rev_rev9.slice(0).reverse();\n\
    \    var hex_rev_rev_rev11 = hex_rev_rev_rev10.slice(0).reverse();\n    var hex_rev_rev_rev12\
    \ = hex_rev_rev_rev11.slice(0).reverse();\n    var hex_rev_rev_rev13 = hex_rev_rev_rev12.slice(0).reverse();\n\
    \    var hex_rev_rev_rev14 = hex_rev_rev_rev13.slice(0).reverse();\n    var hex_rev_rev_rev15\
    \ = hex_rev_rev_rev14.slice(0).reverse();\n    var hex_rev_rev_rev16 = hex_rev_rev_rev15.slice(0).reverse();\n\
    \    var hex_rev_rev_rev17 = hex_rev_rev_rev16.slice(0).reverse();\n    var hex_rev_rev_rev18\
    \ = hex_rev_rev_rev17.slice(0).reverse();\n    var hex_rev_rev_rev19 = hex_rev_rev_rev18.slice(0).reverse();\n\
    \    var hex_rev_rev_rev20 = hex_rev_rev_rev19.slice(0).reverse();\n    var hex_rev_rev_rev21\
    \ = hex_rev_rev_rev20.slice(0).reverse();\n    var hex_rev_rev_rev22 = hex_rev_rev_rev21.slice(0).reverse();\n\
    \    var hex_rev_rev_rev23 = hex", "\tlet hex = num.toString().split('');\n\t\
    let primes = [];\n\tlet prime_count = 0;\n\tlet prime_digits = [];\n\tlet prime_digit_count\
    \ = 0;\n\tlet prime_digit_sum = 0;\n\tlet prime_digit_sum2 = 0;\n\tlet prime_digit_sum3\
    \ = 0;\n\tlet prime_digit_sum4 = 0;\n\tlet prime_digit_sum5 = 0;\n\tlet prime_digit_sum6\
    \ = 0;\n\tlet prime_digit_sum7 = 0;\n\tlet prime_digit_sum8 = 0;\n\tlet prime_digit_sum9\
    \ = 0;\n\tlet prime_digit_sum10 = 0;\n\tlet prime_digit_sum11 = 0;\n\tlet prime_digit_sum12\
    \ = 0;\n\tlet prime_digit_sum13 = 0;\n\tlet prime_digit_sum14 = 0;\n\tlet prime_digit_sum15\
    \ = 0;\n\tlet prime_digit_sum16 = 0;\n\tlet prime_digit_sum17 = 0;\n\tlet prime_digit_sum18\
    \ = 0;\n\tlet prime_digit_sum19 = 0;\n\tlet prime_digit_sum20 = 0;\n\tlet prime_digit_sum21\
    \ = 0;\n\tlet prime_digit_sum22 = 0;\n\tlet prime_digit_sum23 = 0;\n\tlet prime_digit_sum24\
    \ = 0;\n\tlet prime_digit_sum25 = 0;\n\tlet prime_digit_sum26 = 0;\n\tlet prime_digit_sum27\
    \ = 0;\n\tlet prime_digit_sum28 = 0;\n\tlet prime_digit_sum29 = 0;\n\tlet prime_digit_sum30\
    \ = 0;\n\tlet prime_digit_sum31 = 0;\n\tlet prime_digit_sum32 = 0;\n\tlet prime_digit_sum33\
    \ = 0;\n\tlet prime_digit_sum34 = 0;\n\tlet prime_digit_sum35 = 0;\n\tlet prime_digit_sum36\
    \ = 0;\n\tlet prime_digit_sum37 = 0;\n\tlet prime_digit_sum38 = 0;\n\tlet prime_digit_sum39\
    \ = 0;\n\tlet prime_digit_sum40 = 0;\n\tlet prime_digit_sum41 = 0;\n\tlet prime_digit_sum42\
    \ = 0;\n\tlet prime_digit_sum43 = 0;\n\tlet prime_digit_sum44 = 0;\n\tlet prime_digit_sum45\
    \ = 0;\n\tlet prime_digit_sum46 = 0;\n\tlet prime_digit_sum47 = 0;\n\tlet prime_digit_sum48\
    \ = 0;\n\tlet prime_digit_sum49 = 0;\n\tlet prime_digit_sum50 = 0;\n\tlet prime_digit_sum51\
    \ = 0;\n\tlet prime_digit_sum52 = 0;\n\tlet prime_digit_sum53 = 0;\n\tlet prime_digit_",
  "    let hex = num;\n    let hexDigits = hex.split('');\n    let hexDigitCount =\
    \ hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \   let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigitCount33 = hexDigitCount32*", "  var hex = num.toUpperCase();\n\
    \  var hexLength = hex.length;\n  var hexDigits = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n\
    \  var hexPrimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var hexPrimeLength = Math.floor(hexPrimes.length/2);\n  var hexPrimeDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var hexPrimePrimes = [];\n  var hexPrimePrimeLength = Math.floor(hexPrimePrimes.length/2);\n\
    \  var hexPrimePrimeDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var hexPrimePrimePrimes = [];\n  var hexPrimePrimePrimeLength = Math.floor(hexPrimePrimePrimes.length/2);\n\
    \  var hexPrimePrimePrimeDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var hexPrimePrimePrimePrimes = [];\n  var hexPrimePrimePrimePrimeLength = Math.floor(hexPrimePrimePrimePrimes.length/2);\n\
    \  var hexPrimePrimePrimePrimeDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var hexPrimePrimePrimePrimePrimes = [];\n  var hexPrimePrimePrimePrimePrimeLength\
    \ = Math.floor(hexPrimePrimePrimePrimePrimes.length/2);\n  var hexPrimePrimePrimePrimePrimeDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  var hexPrimePrimePrimePrimePrimePrimes = [];\n  var hexPrimePrimePrimePrimePrimePrime",
  "  var hex = num.toString().split('');\n  var hex_rev = [];\n  for(var i=0;i<hex.length;i++){\n\
    \    hex_rev.push(hex[i].charCodeAt(0) - 64);\n  }\n  var hex_rev_sorted = hex_rev.sort();\n\
    \  var hex_rev_sorted_reverse = hex_rev_sorted.reverse();\n  var hex_rev_sorted_reverse2\
    \ = hex_rev_sorted_reverse.reverse();\n  var hex_rev_sorted_reverse3 = hex_rev_sorted_reverse2.reverse();\n\
    \  var hex_rev_sorted_reverse4 = hex_rev_sorted_reverse3.reverse();\n  var hex_rev_sorted_reverse5\
    \ = hex_rev_sorted_reverse4.reverse();\n  var hex_rev_sorted_reverse6 = hex_rev_sorted_reverse5.reverse();\n\
    \  var hex_rev_sorted_reverse7 = hex_rev_sorted_reverse6.reverse();\n  var hex_rev_sorted_reverse8\
    \ = hex_rev_sorted_reverse7.reverse();\n  var hex_rev_sorted_reverse9 = hex_rev_sorted_reverse8.reverse();\n\
    \  var hex_rev_sorted_reverse10 = hex_rev_sorted_reverse9.reverse();\n  var hex_rev_sorted_reverse11\
    \ = hex_rev_sorted_reverse10.reverse();\n  var hex_rev_sorted_reverse12 = hex_rev_sorted_reverse11.reverse();\n\
    \  var hex_rev_sorted_reverse13 = hex_rev_sorted_reverse12.reverse();\n  var hex_rev_sorted_reverse14\
    \ = hex_rev_sorted_reverse13.reverse();\n  var hex_rev_sorted_reverse15 = hex_rev_sorted_reverse14.reverse();\n\
    \  var hex_rev_sorted_reverse16 = hex_rev_sorted_reverse15.reverse();\n  var hex_rev_sorted_reverse17\
    \ = hex_rev_sorted_reverse16.reverse();\n  var hex_rev_sorted_reverse18 = hex_rev_sorted_reverse17.reverse();\n\
    \  var hex_rev_sorted_reverse19 = hex_rev_sorted_reverse18.reverse();\n  var hex_rev_sorted_reverse20\
    \ = hex_rev_sorted_reverse19.reverse();\n  var hex_rev_sorted_reverse21 = hex_rev_sorted_reverse20.reverse();\n\
    \  var hex_rev_sorted_reverse22 = hex_rev_sorted_reverse21.reverse();\n  var hex_rev_sorted_reverse23\
    \ = hex_rev_sorted_reverse22.reverse();\n  var hex_rev_sorted_reverse24 = hex_rev_sorted_reverse23.reverse();\n\
    \  var hex_rev_sorted_reverse25 = hex_rev_sorted_reverse24.reverse();\n  var hex_rev_sorted_reverse26\
    \ = hex_rev_sorted_reverse25.reverse();\n  var hex_rev_sorted_reverse27 = hex_rev_sorted_reverse26.reverse();\n\
    \  var hex_rev_sorted_reverse28 = hex_rev_sorted_reverse27.reverse", "    let\
    \ hex = num;\n    let count = 0;\n    for(let i = 0; i < hex.length; i++){\n \
    \       if(hex.charAt(i) == 'A' || hex.charAt(i) == 'B' || hex.charAt(i) == 'C'\
    \ || hex.charAt(i) == 'D' || hex.charAt(i) == 'E' || hex.charAt(i) == 'F'){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let hex\
    \ = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n    let primes =\
    \ [];\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i] == \"A\" ||\
    \ hex[i] == \"B\" || hex[i] == \"C\" || hex[i] == \"D\" || hex[i] == \"E\" ||\
    \ hex[i] == \"F\"){\n            primes.push(hex[i]);\n        }\n    }\n    let\
    \ prime_count = primes.length;\n    let prime_sum = 0;\n    for(let i = 0; i <\
    \ primes.length; i++){\n        prime_sum += parseInt(primes[i]);\n    }\n   \
    \ let prime_sum2 = prime_sum * prime_sum;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i] == \"A\" || hex[i] == \"B\" || hex[i] == \"C\" || hex[i]\
    \ == \"D\" || hex[i] == \"E\" || hex[i] == \"F\"){\n            prime_sum2 -=\
    \ parseInt(hex[i]);\n        }\n    }\n    let prime_sum3 = prime_sum2 * prime_sum;\n\
    \    let prime_sum4 = prime_sum3 * prime_sum;\n    let prime_sum5 = prime_sum4\
    \ * prime_sum;\n    let prime_sum6 = prime_sum5 * prime_sum;\n    let prime_sum7\
    \ = prime_sum6 * prime_sum;\n    let prime_sum8 = prime_sum7 * prime_sum;\n  \
    \  let prime_sum9 = prime_sum8 * prime_sum;\n    let prime_sum10 = prime_sum9\
    \ * prime_sum;\n    let prime_sum11 = prime_sum10 * prime_sum;\n    let prime_sum12\
    \ = prime_sum11 * prime_sum;\n    let prime_sum13 = prime_sum12 * prime_sum;\n\
    \    let prime_sum14 = prime_sum13 * prime_sum;\n    let prime_sum15 = prime_sum14\
    \ * prime_sum;\n    let prime_sum16 = prime_sum15 * prime_sum;\n    let prime_sum17\
    \ = prime_sum16 * prime_sum;\n    let prime_sum18 = prime_sum17 * prime_sum;\n\
    \    let prime_sum19 = prime_sum18 * prime_sum;\n    let prime_sum20 = prime_sum19\
    \ * prime_sum;\n    let prime_sum21 = prime_sum20 * prime_sum;\n    let prime_sum22\
    \ = prime_sum21 * prime_sum;\n    let prime_sum23 = prime_sum22 * prime_sum;\n\
    \    let prime_sum24 = prime_sum23 * prime_sum;", "\tlet hex = num.toUpperCase();\n\
    \tlet hexDigits = [\n\t\t'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'\n\
    \t];\n\tlet hexDigitCount = hexDigits.length;\n\tlet hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \tlet hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\tlet hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \tlet hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\tlet hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \tlet hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\tlet hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \tlet hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\tlet hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n\tlet hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \tlet hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\tlet hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n\tlet hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \tlet hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\tlet hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n\tlet hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \tlet hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\tlet hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n\tlet hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \tlet hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\tlet hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n\tlet hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \tlet hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\tlet hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n\tlet hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \tlet hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\tlet hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n\tlet hexDigitCount29 = hexDigitCount28",
  "    var hex = num;\n    var hex_rem = num;\n    var hex_rem_len = hex_rem.length;\n\
    \    var hex_digits = \"\";\n    var hex_digit_count = 0;\n    var hex_digit_count_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem = hex_rem_len;\n    var hex_digit_count_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem = hex_rem_len;\n   \
    \ var hex_digit_count_rem_rem_rem_rem_rem = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem = hex_rem_len;\n\
    \    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem = hex_rem_len;\n    var\
    \ hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem\
    \ = hex_rem_len;\n    var hex_digit_count_rem_rem_", "    let hex = num.replace(/[^0-9A-F]/g,\"\
    \");\n    let hexDigits = hex.length;\n    let primes = [];\n    let primeCount\
    \ = 0;\n    let primeCount2 = 0;\n    let primeCount3 = 0;\n    let primeCount4\
    \ = 0;\n    let primeCount5 = 0;\n    let primeCount6 = 0;\n    let primeCount7\
    \ = 0;\n    let primeCount8 = 0;\n    let primeCount9 = 0;\n    let primeCount10\
    \ = 0;\n    let primeCount11 = 0;\n    let primeCount12 = 0;\n    let primeCount13\
    \ = 0;\n    let primeCount14 = 0;\n    let primeCount15 = 0;\n    let primeCount16\
    \ = 0;\n    let primeCount17 = 0;\n    let primeCount18 = 0;\n    let primeCount19\
    \ = 0;\n    let primeCount20 = 0;\n    let primeCount21 = 0;\n    let primeCount22\
    \ = 0;\n    let primeCount23 = 0;\n    let primeCount24 = 0;\n    let primeCount25\
    \ = 0;\n    let primeCount26 = 0;\n    let primeCount27 = 0;\n    let primeCount28\
    \ = 0;\n    let primeCount29 = 0;\n    let primeCount30 = 0;\n    let primeCount31\
    \ = 0;\n    let primeCount32 = 0;\n    let primeCount33 = 0;\n    let primeCount34\
    \ = 0;\n    let primeCount35 = 0;\n    let primeCount36 = 0;\n    let primeCount37\
    \ = 0;\n    let primeCount38 = 0;\n    let primeCount39 = 0;\n    let primeCount40\
    \ = 0;\n    let primeCount41 = 0;\n    let primeCount42 = 0;\n    let primeCount43\
    \ = 0;\n    let primeCount44 = 0;\n    let primeCount45 = 0;\n    let primeCount46\
    \ = 0;\n    let primeCount47 = 0;\n    let primeCount48 = 0;\n    let primeCount49\
    \ = 0;\n    let primeCount50 = 0;\n    let primeCount51 = 0;\n    let primeCount52\
    \ = 0;\n    let primeCount53 = 0;\n    let primeCount54 = 0;\n    let primeCount55\
    \ = 0;\n    let primeCount56 = 0;\n    let primeCount57 = 0;\n    let primeCount58\
    \ = 0;\n    let primeCount59 = 0;\n    let primeCount60 = 0;\n    let primeCount61\
    \ = 0;\n    let primeCount62 = 0;\n    let primeCount63 = 0;\n    let primeCount64\
    \ = 0;\n    let primeCount65 = 0;\n    let primeCount66 = 0;\n    let primeCount67\
    \ = 0;\n    let primeCount68 = 0;\n    let primeCount69 = 0;\n    let primeCount70\
    \ = 0;\n    let primeCount71 = 0;\n    let primeCount72 = 0;\n    let primeCount73\
    \ = 0;\n    let primeCount74 = 0;\n    let primeCount75 = 0;\n    let primeCount76\
    \ = 0;\n    let primeCount77 = 0;\n    let primeCount78 = 0;\n    let primeCount79\
    \ = 0;\n    let primeCount80 = 0;\n    let primeCount81 = 0;\n    let primeCount82\
    \ = 0;\n    let ", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n    let primes = [];\n    let prime_counter = 0;\n    let prime_counter2\
    \ = 0;\n    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5\
    \ = 0;\n    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime",
  "    let hex = num.toUpperCase();\n    let hexLength = hex.length;\n    let hexDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    let hexPrimes = [];\n    let hexPrimeCount = 0;\n    let hexPrimeCount2 =\
    \ 0;\n    let hexPrimeCount3 = 0;\n    let hexPrimeCount4 = 0;\n    let hexPrimeCount5\
    \ = 0;\n    let hexPrimeCount6 = 0;\n    let hexPrimeCount7 = 0;\n    let hexPrimeCount8\
    \ = 0;\n    let hexPrimeCount9 = 0;\n    let hexPrimeCount10 = 0;\n    let hexPrimeCount11\
    \ = 0;\n    let hexPrimeCount12 = 0;\n    let hexPrimeCount13 = 0;\n    let hexPrimeCount14\
    \ = 0;\n    let hexPrimeCount15 = 0;\n    let hexPrimeCount16 = 0;\n    let hexPrimeCount17\
    \ = 0;\n    let hexPrimeCount18 = 0;\n    let hexPrimeCount19 = 0;\n    let hexPrimeCount20\
    \ = 0;\n    let hexPrimeCount21 = 0;\n    let hexPrimeCount22 = 0;\n    let hexPrimeCount23\
    \ = 0;\n    let hexPrimeCount24 = 0;\n    let hexPrimeCount25 = 0;\n    let hexPrimeCount26\
    \ = 0;\n    let hexPrimeCount27 = 0;\n    let hexPrimeCount28 = 0;\n    let hexPrimeCount29\
    \ = 0;\n    let hexPrimeCount30 = 0;\n    let hexPrimeCount31 = 0;\n    let hexPrimeCount32\
    \ = 0;\n    let hexPrimeCount33 = 0;\n    let hexPrimeCount34 = 0;\n    let hexPrimeCount35\
    \ = 0;\n    let hexPrimeCount36 = 0;\n    let hexPrimeCount37 = 0;\n    let hexPrimeCount38\
    \ = 0;\n    let hexPrimeCount39 = 0;\n    let hexPrimeCount40 = 0;\n    let hexPrimeCount41\
    \ = 0;\n    let hexPrimeCount42 = 0;\n    let hexPrimeCount43 = 0;\n    let hexPrimeCount44\
    \ = 0;\n    let hexPrimeCount45 = 0;\n    let hexPrimeCount46 = 0;\n    let hexPrimeCount47\
    \ = 0;\n    let hexPrimeCount48 = 0;\n    let hexPrimeCount49 = 0;\n    let hexPrimeCount50\
    \ = 0;\n    let hexPrimeCount51 = 0;\n    let hexPrimeCount52 = 0;\n    let hexPrimeCount53\
    \ = 0;\n    let hexPrimeCount54 = 0;\n    let hexPrimeCount55 = 0;\n    let hexPrimeCount56\
    \ = 0;\n    let hexPrimeCount57 = 0;", "    let hex = num;\n    let hexDigits\
    \ = hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount/2;\n    let hexDigitCount3 = hexDigitCount2/2;\n    let hexDigitCount4\
    \ = hexDigitCount3/2;\n    let hexDigitCount5 = hexDigitCount4/2;\n    let hexDigitCount6\
    \ = hexDigitCount5/2;\n    let hexDigitCount7 = hexDigitCount6/2;\n    let hexDigitCount8\
    \ = hexDigitCount7/2;\n    let hexDigitCount9 = hexDigitCount8/2;\n    let hexDigitCount10\
    \ = hexDigitCount9/2;\n    let hexDigitCount11 = hexDigitCount10/2;\n    let hexDigitCount12\
    \ = hexDigitCount11/2;\n    let hexDigitCount13 = hexDigitCount12/2;\n    let\
    \ hexDigitCount14 = hexDigitCount13/2;\n    let hexDigitCount15 = hexDigitCount14/2;\n\
    \    let hexDigitCount16 = hexDigitCount15/2;\n    let hexDigitCount17 = hexDigitCount16/2;\n\
    \    let hexDigitCount18 = hexDigitCount17/2;\n    let hexDigitCount19 = hexDigitCount18/2;\n\
    \    let hexDigitCount20 = hexDigitCount19/2;\n    let hexDigitCount21 = hexDigitCount20/2;\n\
    \    let hexDigitCount22 = hexDigitCount21/2;\n    let hexDigitCount23 = hexDigitCount22/2;\n\
    \    let hexDigitCount24 = hexDigitCount23/2;\n    let hexDigitCount25 = hexDigitCount24/2;\n\
    \    let hexDigitCount26 = hexDigitCount25/2;\n    let hexDigitCount27 = hexDigitCount26/2;\n\
    \    let hexDigitCount28 = hexDigitCount27/2;\n    let hexDigitCount29 = hexDigitCount28/2;\n\
    \    let hexDigitCount30 = hexDigitCount29/2;\n    let hexDigitCount31 = hexDigitCount30/2;\n\
    \    let hexDigitCount32 = hexDigitCount31/2;\n    let hexDigitCount33 = hexDigitCount32/2;\n\
    \    let hexDigitCount34 = hexDigitCount33/2;\n    let hexDigitCount35 = hexDigitCount34/2;\n\
    \    let hexDigitCount36 = hexDigitCount35/2;\n    let hexDigitCount37 = hexDigitCount36/2;\n\
    \    let hexDigitCount38 = hexDigitCount37/2;\n    let hexDigitCount39 = hexDigitCount38/2;\n\
    \    let hexDigitCount40 = hexDigitCount39/2;\n    let hexDigitCount41 = hexDigitCount40/",
  "    let hex = num;\n    let hex_reverse = hex.split('').reverse().join('');\n \
    \   let hex_reverse_split = hex_reverse.split('');\n    let hex_reverse_split_length\
    \ = hex_reverse_split.length;\n    let hex_reverse_split_length_2 = hex_reverse_split_length\
    \ / 2;\n    let hex_reverse_split_length_3 = hex_reverse_split_length_2 / 2;\n\
    \    let hex_reverse_split_length_4 = hex_reverse_split_length_3 / 2;\n    let\
    \ hex_reverse_split_length_5 = hex_reverse_split_length_4 / 2;\n    let hex_reverse_split_length_6\
    \ = hex_reverse_split_length_5 / 2;\n    let hex_reverse_split_length_7 = hex_reverse_split_length_6\
    \ / 2;\n    let hex_reverse_split_length_8 = hex_reverse_split_length_7 / 2;\n\
    \    let hex_reverse_split_length_9 = hex_reverse_split_length_8 / 2;\n    let\
    \ hex_reverse_split_length_10 = hex_reverse_split_length_9 / 2;\n    let hex_reverse_split_length_11\
    \ = hex_reverse_split_length_10 / 2;\n    let hex_reverse_split_length_12 = hex_reverse_split_length_11\
    \ / 2;\n    let hex_reverse_split_length_13 = hex_reverse_split_length_12 / 2;\n\
    \    let hex_reverse_split_length_14 = hex_reverse_split_length_13 / 2;\n    let\
    \ hex_reverse_split_length_15 = hex_reverse_split_length_14 / 2;\n    let hex_reverse_split_length_16\
    \ = hex_reverse_split_length_15 / 2;\n    let hex_reverse_split_length_17 = hex_reverse_split_length_16\
    \ / 2;\n    let hex_reverse_split_length_18 = hex_reverse_split_length_17 / 2;\n\
    \    let hex_reverse_split_length_19 = hex_reverse_split_length_18 / 2;\n    let\
    \ hex_reverse_split_length_20 = hex_reverse_split_length_19 / 2;\n    let hex_reverse_split_length_21\
    \ = hex_reverse_split_length_20 / 2;\n    let hex_reverse_split_length_22 = hex_reverse_split_length_21\
    \ / 2;\n    let hex_reverse_split_length_23 = hex_reverse_split_length_22 / 2;\n\
    \    let hex_reverse_split_length_24 = hex_reverse_split_length_23 / 2;\n    let\
    \ hex_reverse_split_length_25 = hex_reverse_split_length_24 / 2;\n    let hex_reverse_split_length_26\
    \ = hex_reverse_split_length_25 / 2;\n    let hex_reverse_split_length_27 = hex_reverse_split_length_26\
    \ / 2;\n    let hex_reverse_split_length_28 = hex_reverse_split_length_27 / 2;\n\
    \    let hex_reverse_split_length_29 = hex_reverse_split_length_28 / 2;\n    let\
    \ hex_reverse_split_length_30", "  let hex = num;\n  let hexDigits = [...hex];\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount32*", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split('');\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimes = [];\n    for(let i = 0; i < hexDigitCount; i++){\n\
    \        if(hexDigits[i] === 'A' || hexDigits[i] === 'B' || hexDigits[i] === 'C'\
    \ || hexDigits[i] === 'D' || hexDigits[i] === 'E' || hexDigits[i] === 'F'){\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    for(let i = 0; i < hexDigitCount;\
    \ i++){\n        if(hexDigits[i] === '2' || hexDigits[i] === '3' || hexDigits[i]\
    \ === '5' || hexDigits[i] === '7' || hexDigits[i] === '11' || hexDigits[i] ===\
    \ '13' || hexDigits[i] === '17' || hexDigits[i] === '19' || hexDigits[i] === '23'\
    \ || hexDigits[i] === '29' || hexDigits[i] === '31' || hexDigits[i] === '37' ||\
    \ hexDigits[i] === '41' || hexDigits[i] === '43' || hexDigits[i] === '47' || hexDigits[i]\
    \ === '53' || hexDigits[i] === '59' || hexDigits[i] === '61' || hexDigits[i] ===\
    \ '67' || hexDigits[i] === '71' || hexDigits[i] === '73' || hexDigits[i] === '79'\
    \ || hexDigits[i] === '83' || hexDigits[i] === '89' || hexDigits[i] === '97'){\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    for(let i = 0; i < hexDigitCount;\
    \ i++){\n        if(hexDigits[i] === '2' || hexDigits[i] === '3' || hexDigits[i]\
    \ === '5' || hexDigits[i] === '7' || hexDigits[i] === '11' || hexDigits[i] ===\
    \ '13' || hexDigits[i] === '17' || hexDigits[i] === '19' || hexDigits[i] === '23'\
    \ || hexDigits[i] === '29' || hexDigits[i] === '31' || hexDigits[i] === '37' ||\
    \ hexDigits[i] === '41' || hexDigits[i] === '43' || hexDigits[i] === '47' || hexDigits[i]\
    \ === '53' || hexDigits[i] === '59' || hexDigits[i] === '61' || hexDigits[i] ===\
    \ '67' || hexDigits[i] === '71' || hexDigits[i] === '73' || hexDigits[i] === '79'\
    \ || hexDigits[i] === '83' || hexDigits[i] === '89' || hexDigits[i] === '97'){\n\
    \            hexDigitPrimes.push(hexDigits[i]);\n        }\n    }\n    for(let\
    \ i = 0; i < hexDigitCount; i++){\n        if(hexDigits[i] === 'B' || hexDigits[i]\
    \ === 'D'){\n            hexDigitPrimes.push(hexDigits[i]);\n        }\n    }\n\
    \    for(let i = 0; i < hexDigitCount", "    let hex = num;\n    let hexDigits\
    \ = hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5\
    \ = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8\
    \ = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n    let hexDigitCount33 = hexDigitCount32*",
  "    var hex = num.toString().split('');\n    var hexLength = hex.length;\n    var\
    \ hexDigits = hex.length;\n    var hexPrimes = [];\n    var hexPrimeLength = 0;\n\
    \    var hexPrimeDigits = 0;\n    var hexPrimePrimes = [];\n    var hexPrimePrimeLength\
    \ = 0;\n    var hexPrimePrimeDigits = 0;\n    var hexPrimePrimePrimes = [];\n\
    \    var hexPrimePrimePrimeLength = 0;\n    var hexPrimePrimePrimeDigits = 0;\n\
    \    var hexPrimePrimePrimePrimes = [];\n    var hexPrimePrimePrimePrimeLength\
    \ = 0;\n    var hexPrimePrimePrimePrimeDigits = 0;\n    var hexPrimePrimePrimePrimePrimes\
    \ = [];\n    var hexPrimePrimePrimePrimePrimeLength = 0;\n    var hexPrimePrimePrimePrimePrimeDigits\
    \ = 0;\n    var hexPrimePrimePrimePrimePrimePrimes = [];\n    var hexPrimePrimePrimePrimePrimePrimeLength\
    \ = 0;\n    var hexPrimePrimePrimePrimePrimeDigits = 0;\n    var hexPrimePrimePrimePrimePrimePrimes\
    \ = [];\n    var hexPrimePrimePrimePrimePrimePrimeLength = 0;\n    var hexPrimePrimePrimePrimePrimeDigits\
    \ = 0;\n    var hexPrimePrimePrimePrimePrimePrimePrimes = [];\n    var hexPrimePrimePrimePrimePrimePrimePrimeLength\
    \ = 0;\n    var hexPrimePrimePrimePrimePrimePrimeDigits = 0;\n    var hexPrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    var hexPrimePrimePrimePrimePrimePrimePrimeLength = 0;\n    var hexPrimePrimePrimePrimePrimePrimeDigits\
    \ = 0;\n    var hexPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n    var hexPrimePrimePrimePrimePrimePrimePrimePrimeLength\
    \ = 0;\n    var hexPrimePrimePrimePrimePrimePrimePrimeDigits = 0;\n    var hexPrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n    var hexPrimePrimePrimePrimePrimePrimePrimePrimePrimeLength = 0;\n\
    \    var hexPrimePrimePrimePrimePrimePrimePrimeDigits = 0;\n", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let primeDigits = [];\n  let primeCount\
    \ = 0;\n  let primeNumbers = [];\n  for(let i = 0; i < hexDigits.length; i++){\n\
    \    let hexDigit = hexDigits[i];\n    let hexDigitNumber = parseInt(hexDigit);\n\
    \    if(hexDigitNumber > 0){\n      primeDigits.push(hexDigitNumber);\n      primeCount++;\n\
    \    }\n  }\n  for(let i = 0; i < primeDigits.length; i++){\n    let prime = primeDigits[i];\n\
    \    if(primeCount > 1){\n      primeNumbers.push(prime);\n    }\n    for(let\
    \ j = i + 1; j < primeDigits.length; j++){\n      let prime2 = primeDigits[j];\n\
    \      if(prime * prime2 === prime){\n        primeNumbers.push(prime2);\n   \
    \   }\n    }\n  }\n  let primeNumbersLength = primeNumbers.length;\n  if(primeNumbersLength\
    \ > 1){\n    for(let i = 0; i < primeNumbersLength; i++){\n      primeNumbers[i]\
    \ = primeNumbers[i] * primeNumbers[i];\n    }\n  }\n  let primeNumbersLength =\
    \ primeNumbers.length;\n  if(primeNumbersLength > 1){\n    for(let i = 0; i <\
    \ primeNumbersLength; i++){\n      if(primeNumbers[i] === primeNumbers[primeNumbersLength\
    \ - 1]){\n        primeNumbers.pop();\n      }\n    }\n  }\n  let primeNumbersLength\
    \ = primeNumbers.length;\n  if(primeNumbersLength > 1){\n    for(let i = 0; i\
    \ < primeNumbersLength; i++){\n      if(primeNumbers[i] === primeNumbers[primeNumbersLength\
    \ - 2]){\n        primeNumbers.pop();\n      }\n    }\n  }\n  let primeNumbersLength\
    \ = primeNumbers.length;\n  if(primeNumbersLength > 1){\n    for(let i = 0; i\
    \ < primeNumbersLength; i++){\n      if(primeNumbers[i] === primeNumbers[primeNumbersLength\
    \ - 3]){\n        primeNumbers.pop();\n      }\n    }\n  }\n  let primeNumbersLength\
    \ = primeNumbers.length;\n  if(primeNumbersLength > 1){\n    for(let i = 0; i\
    \ < primeNumbersLength; i++){\n      if(primeNumbers[i] === primeNumbers[primeNumbersLength\
    \ - 4]){\n        primeNumbers.pop();\n      }\n    }\n  }\n  let primeNumbersLength\
    \ = primeNumbers.length;\n  if(primeNumbersLength > 1){\n    for(let i = 0; i\
    \ < primeNumbersLength; i++){\n      if(primeNumbers[i] === primeNumbers[primeNumbersLength\
    \ - 5]){\n        primeNumbers.pop();\n      }\n    }\n  }\n  let primeNumbersLength\
    \ = primeNumbers.length;\n  ", "    var hex = num.split(\"\");\n    var count\
    \ = 0;\n    for(var i = 0; i < hex.length; i++){\n        if(hex[i] === \"A\"\
    \ || hex[i] === \"B\" || hex[i] === \"C\" || hex[i] === \"D\" || hex[i] === \"\
    E\" || hex[i] === \"F\"){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split('');\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount/2;\n\
    \    let hexDigitCount3 = hexDigitCount2/2;\n    let hexDigitCount4 = hexDigitCount3/2;\n\
    \    let hexDigitCount5 = hexDigitCount4/2;\n    let hexDigitCount6 = hexDigitCount5/2;\n\
    \    let hexDigitCount7 = hexDigitCount6/2;\n    let hexDigitCount8 = hexDigitCount7/2;\n\
    \    let hexDigitCount9 = hexDigitCount8/2;\n    let hexDigitCount10 = hexDigitCount9/2;\n\
    \    let hexDigitCount11 = hexDigitCount10/2;\n    let hexDigitCount12 = hexDigitCount11/2;\n\
    \    let hexDigitCount13 = hexDigitCount12/2;\n    let hexDigitCount14 = hexDigitCount13/2;\n\
    \    let hexDigitCount15 = hexDigitCount14/2;\n    let hexDigitCount16 = hexDigitCount15/2;\n\
    \    let hexDigitCount17 = hexDigitCount16/2;\n    let hexDigitCount18 = hexDigitCount17/2;\n\
    \    let hexDigitCount19 = hexDigitCount18/2;\n    let hexDigitCount20 = hexDigitCount19/2;\n\
    \    let hexDigitCount21 = hexDigitCount20/2;\n    let hexDigitCount22 = hexDigitCount21/2;\n\
    \    let hexDigitCount23 = hexDigitCount22/2;\n    let hexDigitCount24 = hexDigitCount23/2;\n\
    \    let hexDigitCount25 = hexDigitCount24/2;\n    let hexDigitCount26 = hexDigitCount25/2;\n\
    \    let hexDigitCount27 = hexDigitCount26/2;\n    let hexDigitCount28 = hexDigitCount27/2;\n\
    \    let hexDigitCount29 = hexDigitCount28/2;\n    let hexDigitCount30 = hexDigitCount29/2;\n\
    \    let hexDigitCount31 = hexDigitCount30/2;\n    let hexDigitCount32 = hexDigitCount31/2;\n\
    \    let hexDigitCount33 = hexDigitCount32/2;\n    let hexDigitCount34 = hexDigitCount33/2;\n\
    \    let hexDigitCount35 = hexDigitCount34/2;\n    let hexDigitCount36 = hexDigitCount35/2;\n\
    \    let hexDigitCount37 = hexDigitCount36/2;\n    let hexDigitCount38 = hexDigitCount37/2;\n\
    \    let hexDigitCount39 = hexDigitCount38/2;\n    let hexDigitCount40 = hexDigitCount39/2;\n\
    \    let hexDigitCount41 = hexDigitCount40", "    let hex = num.replace(/[^A-F0-9]/g,'');\n\
    \    let hexDigits = hex.length;\n    let hexDigitCount = 0;\n    let hexDigitPrimes\
    \ = [];\n    let hexDigitPrimeCount = 0;\n    for(let i = 0; i < hexDigits; i++){\n\
    \        let hexDigit = hex.charAt(i);\n        hexDigitCount++;\n        if(hexDigit\
    \ == 'A' || hexDigit == 'B' || hexDigit == 'C' || hexDigit == 'D' || hexDigit\
    \ == 'E' || hexDigit == 'F'){\n            hexDigitPrimes.push(hexDigit);\n  \
    \          hexDigitPrimeCount++;\n        }\n    }\n    for(let i = 0; i < hexDigitPrimeCount;\
    \ i++){\n        for(let j = 0; j < hexDigitPrimes.length; j++){\n           \
    \ if(hexDigitPrimes[i] == hexDigitPrimes[j]){\n                hexDigitPrimeCount++;\n\
    \            }\n        }\n    }\n    return hexDigitPrimeCount;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you so much for your help. I really appreciate\
    \ it. I was able to solve my problem using your help. I appreciate your help.\n\
    <|/ c |>\n<| c |>\nGlad I could help. I added a solution that doesn't use any\
    \ loops. I hope it helps you.\n<|/ c |>\n<| a dscore=0 |>\nI solved my problem\
    \ using your help. I appreciate your help.\n<code>", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    let prime_counter = 0;\n    let prime_counter2 = 0;\n\
    \    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5\
    \ = 0;\n    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime_counter71\
    \ = 0;\n    let prime_counter72 = 0;\n", "  let hex = num;\n  let count = 0;\n\
    \  let prime_count = 0;\n  let prime_digits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  for(let i = 0; i < hex.length; i++){\n    let char = hex.charAt(i);\n    if(char\
    \ === 'A' || char === 'B' || char === 'C' || char === 'D' || char === 'E' || char\
    \ === 'F'){\n      prime_digits.push(char);\n    }\n  }\n  for(let i = 0; i <\
    \ prime_digits.length; i++){\n    let prime_digit = prime_digits[i];\n    for(let\
    \ j = 0; j < hex.length; j++){\n      if(hex.charAt(j) === prime_digit){\n   \
    \     prime_count++;\n      }\n    }\n  }\n  for(let i = 0; i < hex.length; i++){\n\
    \    let char = hex.charAt(i);\n    if(char === 'A' || char === 'B' || char ===\
    \ 'C' || char === 'D' || char === 'E' || char === 'F'){\n      count++;\n    }\n\
    \  }\n  return prime_count + count;\n}\n", "\tlet hex = num.toUpperCase();\n\t\
    let primes = [];\n\tlet prime_digits = [];\n\tlet prime_digit_count = [];\n\t\
    let prime_digit_count_sum = 0;\n\tlet prime_digit_count_sum2 = 0;\n\tlet prime_digit_count_sum3\
    \ = 0;\n\tlet prime_digit_count_sum4 = 0;\n\tlet prime_digit_count_sum5 = 0;\n\
    \tlet prime_digit_count_sum6 = 0;\n\tlet prime_digit_count_sum7 = 0;\n\tlet prime_digit_count_sum8\
    \ = 0;\n\tlet prime_digit_count_sum9 = 0;\n\tlet prime_digit_count_sum10 = 0;\n\
    \tlet prime_digit_count_sum11 = 0;\n\tlet prime_digit_count_sum12 = 0;\n\tlet\
    \ prime_digit_count_sum13 = 0;\n\tlet prime_digit_count_sum14 = 0;\n\tlet prime_digit_count_sum15\
    \ = 0;\n\tlet prime_digit_count_sum16 = 0;\n\tlet prime_digit_count_sum17 = 0;\n\
    \tlet prime_digit_count_sum18 = 0;\n\tlet prime_digit_count_sum19 = 0;\n\tlet\
    \ prime_digit_count_sum20 = 0;\n\tlet prime_digit_count_sum21 = 0;\n\tlet prime_digit_count_sum22\
    \ = 0;\n\tlet prime_digit_count_sum23 = 0;\n\tlet prime_digit_count_sum24 = 0;\n\
    \tlet prime_digit_count_sum25 = 0;\n\tlet prime_digit_count_sum26 = 0;\n\tlet\
    \ prime_digit_count_sum27 = 0;\n\tlet prime_digit_count_sum28 = 0;\n\tlet prime_digit_count_sum29\
    \ = 0;\n\tlet prime_digit_count_sum30 = 0;\n\tlet prime_digit_count_sum31 = 0;\n\
    \tlet prime_digit_count_sum32 = 0;\n\tlet prime_digit_count_sum33 = 0;\n\tlet\
    \ prime_digit_count_sum34 = 0;\n\tlet prime_digit_count_sum35 = 0;\n\tlet prime_digit_count_sum36\
    \ = 0;\n\tlet prime_digit_count_sum37 = 0;\n\tlet prime_digit_count_sum38 = 0;\n\
    \tlet prime_digit_count_sum39 = 0;\n\tlet prime_digit_count_sum40 = 0;\n\tlet\
    \ prime_digit_count_sum41 = 0;\n\tlet prime_digit_count_sum42 = 0;\n\tlet prime_digit_count_sum43\
    \ = 0;\n\tlet prime_digit_count_sum44 = 0;\n\tlet prime_digit_count_sum45 = 0;\n\
    \tlet prime_digit_count_sum46 = 0;\n\tlet prime_digit_count_sum47 = 0;\n\tlet\
    \ prime_digit_count_sum48 = 0;\n\tlet prime_digit_count_sum49 = 0;", "    let\
    \ hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitArray = [];\n    let hexDigitArray2 = [];\n\
    \    let hexDigitArray3 = [];\n    let hexDigitArray4 = [];\n    let hexDigitArray5\
    \ = [];\n    let hexDigitArray6 = [];\n    let hexDigitArray7 = [];\n    let hexDigitArray8\
    \ = [];\n    let hexDigitArray9 = [];\n    let hexDigitArray10 = [];\n    let\
    \ hexDigitArray11 = [];\n    let hexDigitArray12 = [];\n    let hexDigitArray13\
    \ = [];\n    let hexDigitArray14 = [];\n    let hexDigitArray15 = [];\n    let\
    \ hexDigitArray16 = [];\n    let hexDigitArray17 = [];\n    let hexDigitArray18\
    \ = [];\n    let hexDigitArray19 = [];\n    let hexDigitArray20 = [];\n    let\
    \ hexDigitArray21 = [];\n    let hexDigitArray22 = [];\n    let hexDigitArray23\
    \ = [];\n    let hexDigitArray24 = [];\n    let hexDigitArray25 = [];\n    let\
    \ hexDigitArray26 = [];\n    let hexDigitArray27 = [];\n    let hexDigitArray28\
    \ = [];\n    let hexDigitArray29 = [];\n    let hexDigitArray30 = [];\n    let\
    \ hexDigitArray31 = [];\n    let hexDigitArray32 = [];\n    let hexDigitArray33\
    \ = [];\n    let hexDigitArray34 = [];\n    let hexDigitArray35 = [];\n    let\
    \ hexDigitArray36 = [];\n    let hexDigitArray37 = [];\n    let hexDigitArray38\
    \ = [];\n    let hexDigitArray39 = [];\n    let hexDigitArray40 = [];\n    let\
    \ hexDigitArray41 = [];\n    let hexDigitArray42 = [];\n    let hexDigitArray43\
    \ = [];\n    let hexDigitArray44 = [];\n    let hexDigitArray45 = [];\n    let\
    \ hexDigitArray46 = [];\n    let hexDigitArray47 = [];\n    let hexDigitArray48\
    \ = [];\n    let hexDigitArray49 = [];\n    let hexDigitArray50 = [];\n    let\
    \ hexDigitArray51 = [];\n    let hexDigitArray52 = [];\n    let hexDigitArray53\
    \ = [];\n    let hexDigitArray54 = [];\n    let hexDigitArray55 = [];\n    let\
    \ hexDigitArray56 = [];\n    let hexDigitArray57 = [];\n    let hexDigitArray58\
    \ = [];\n    let hexDigitArray59 = [];\n    let hexDigitArray60 = [];\n    let\
    \ hexDigitArray61 = [];\n    let hexDigitArray62 = [];\n    let hexDigitArray63\
    \ = [];\n    let hexDigitArray64 = [];\n    let hexDigitArray65 = [];\n    let\
    \ hexDigitArray66 = [];\n    let hexDigitArray67 = [];\n    let hexDigitArray68\
    \ = [];\n", "  let hex = num;\n  let count = 0;\n  for(let i = 0; i < hex.length;\
    \ i++){\n    if(hex.charCodeAt(i) >= 48 && hex.charCodeAt(i) <= 57){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "  let hex = num.split(\"\");\n  let hex_rev\
    \ = [];\n  for(let i = 0; i < hex.length; i++){\n    hex_rev.push(hex[i].charCodeAt(0)\
    \ - 65);\n  }\n  let primes = [];\n  let prime_count = 0;\n  for(let i = 0; i\
    \ < hex_rev.length; i++){\n    let prime = true;\n    for(let j = 0; j < primes.length;\
    \ j++){\n      if(hex_rev[i] % primes[j] === 0){\n        prime = false;\n   \
    \   }\n    }\n    if(prime){\n      primes.push(hex_rev[i]);\n      prime_count++;\n\
    \    }\n  }\n  return prime_count;\n}\n", "    var hex = num.split(\"\");\n  \
    \  var hexLength = hex.length;\n    var hexDigits = [];\n    var hexDigitCount\
    \ = 0;\n    var hexDigit;\n    var hexDigitCount2 = 0;\n    var hexDigit2;\n \
    \   var hexDigitCount3 = 0;\n    var hexDigit3;\n    var hexDigitCount4 = 0;\n\
    \    var hexDigit4;\n    var hexDigitCount5 = 0;\n    var hexDigit5;\n    var\
    \ hexDigitCount6 = 0;\n    var hexDigit6;\n    var hexDigitCount7 = 0;\n    var\
    \ hexDigit7;\n    var hexDigitCount8 = 0;\n    var hexDigit8;\n    var hexDigitCount9\
    \ = 0;\n    var hexDigit9;\n    var hexDigitCount10 = 0;\n    var hexDigit10;\n\
    \    var hexDigitCount11 = 0;\n    var hexDigit11;\n    var hexDigitCount12 =\
    \ 0;\n    var hexDigit12;\n    var hexDigitCount13 = 0;\n    var hexDigit13;\n\
    \    var hexDigitCount14 = 0;\n    var hexDigit14;\n    var hexDigitCount15 =\
    \ 0;\n    var hexDigit15;\n    var hexDigitCount16 = 0;\n    var hexDigit16;\n\
    \    var hexDigitCount17 = 0;\n    var hexDigit17;\n    var hexDigitCount18 =\
    \ 0;\n    var hexDigit18;\n    var hexDigitCount19 = 0;\n    var hexDigit19;\n\
    \    var hexDigitCount20 = 0;\n    var hexDigit20;\n    var hexDigitCount21 =\
    \ 0;\n    var hexDigit21;\n    var hexDigitCount22 = 0;\n    var hexDigit22;\n\
    \    var hexDigitCount23 = 0;\n    var hexDigit23;\n    var hexDigitCount24 =\
    \ 0;\n    var hexDigit24;\n    var hexDigitCount25 = 0;\n    var hexDigit25;\n\
    \    var hexDigitCount26 = 0;\n    var hexDigit26;\n    var hexDigitCount27 =\
    \ 0;\n    var hexDigit27;\n    var hexDigitCount28 = 0;\n    var hexDigit28;\n\
    \    var hexDigitCount29 = 0;\n    var hexDigit29;\n    var hexDigitCount30 =\
    \ 0;\n    var hexDigit30;\n    var hexDigitCount31 = 0;\n    var hexDigit31;\n\
    \    var hexDigitCount32 = 0;\n    var hexDigit32;\n    var hexDigitCount33 =\
    \ 0;\n    var hexDigit33;\n    var hexDigitCount34 = 0;\n    var hexDigit34;\n\
    \    var hexDigitCount35 = 0;\n    var hexDigit35;\n    var hexDigitCount36 =\
    \ 0;\n    var hexDigit36;\n    var hexDigitCount37 = 0;\n    var hexDigit37;\n\
    \    var hexDigitCount38 = 0;\n    var hexDigit38;\n    var hexDigitCount39 =\
    \ 0;\n    var hexDigit39;\n    var hexDigitCount40 = 0;\n    var hexDigit", " \
    \   let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16));\n    let\
    \ primes = [];\n    let prime_counter = 0;\n    let prime_counter2 = 0;\n    let\
    \ prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5 = 0;\n\
    \    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime_counter",
  "    let hex = num.toUpperCase();\n    let digits = hex.split('');\n    let primes\
    \ = [];\n    let prime_count = 0;\n    let prime_digits = [];\n    let prime_digits_count\
    \ = [];\n    for(let i = 0; i < digits.length; i++){\n        if(digits[i] ===\
    \ 'A' || digits[i] === 'B' || digits[i] === 'C' || digits[i] === 'D' || digits[i]\
    \ === 'E' || digits[i] === 'F'){\n            prime_digits.push(digits[i]);\n\
    \            prime_digits_count.push(1);\n        }\n        else{\n         \
    \   for(let j = 0; j < prime_digits.length; j++){\n                if(digits[i]\
    \ === prime_digits[j]){\n                    prime_digits_count[j]++;\n      \
    \          }\n            }\n        }\n    }\n    for(let i = 0; i < prime_digits.length;\
    \ i++){\n        if(prime_digits_count[i] === 2){\n            primes.push(prime_digits[i]);\n\
    \            prime_count++;\n        }\n    }\n    return prime_count;\n}\n",
  "  var hex = num.split(\"\");\n  var primes = [];\n  var prime_counter = 0;\n  var\
    \ prime_counter2 = 0;\n  var prime_counter3 = 0;\n  var prime_counter4 = 0;\n\
    \  var prime_counter5 = 0;\n  var prime_counter6 = 0;\n  var prime_counter7 =\
    \ 0;\n  var prime_counter8 = 0;\n  var prime_counter9 = 0;\n  var prime_counter10\
    \ = 0;\n  var prime_counter11 = 0;\n  var prime_counter12 = 0;\n  var prime_counter13\
    \ = 0;\n  var prime_counter14 = 0;\n  var prime_counter15 = 0;\n  var prime_counter16\
    \ = 0;\n  var prime_counter17 = 0;\n  var prime_counter18 = 0;\n  var prime_counter19\
    \ = 0;\n  var prime_counter20 = 0;\n  var prime_counter21 = 0;\n  var prime_counter22\
    \ = 0;\n  var prime_counter23 = 0;\n  var prime_counter24 = 0;\n  var prime_counter25\
    \ = 0;\n  var prime_counter26 = 0;\n  var prime_counter27 = 0;\n  var prime_counter28\
    \ = 0;\n  var prime_counter29 = 0;\n  var prime_counter30 = 0;\n  var prime_counter31\
    \ = 0;\n  var prime_counter32 = 0;\n  var prime_counter33 = 0;\n  var prime_counter34\
    \ = 0;\n  var prime_counter35 = 0;\n  var prime_counter36 = 0;\n  var prime_counter37\
    \ = 0;\n  var prime_counter38 = 0;\n  var prime_counter39 = 0;\n  var prime_counter40\
    \ = 0;\n  var prime_counter41 = 0;\n  var prime_counter42 = 0;\n  var prime_counter43\
    \ = 0;\n  var prime_counter44 = 0;\n  var prime_counter45 = 0;\n  var prime_counter46\
    \ = 0;\n  var prime_counter47 = 0;\n  var prime_counter48 = 0;\n  var prime_counter49\
    \ = 0;\n  var prime_counter50 = 0;\n  var prime_counter51 = 0;\n  var prime_counter52\
    \ = 0;\n  var prime_counter53 = 0;\n  var prime_counter54 = 0;\n  var prime_counter55\
    \ = 0;\n  var prime_counter56 = 0;\n  var prime_counter57 = 0;\n  var prime_counter58\
    \ = 0;\n  var prime_counter59 = 0;\n  var prime_counter60 = 0;\n  var prime_counter61\
    \ = 0;\n  var prime_counter62 = 0;\n  var prime_counter63 = 0;\n  var prime_counter64\
    \ = 0;\n  var prime_counter65 = 0;\n  var prime_counter66 = 0;\n  var prime_counter67\
    \ = 0;\n  var prime_counter68 = 0;\n  var prime_counter69 = 0;\n  var prime_counter70\
    \ = 0;\n  var prime_counter71 = 0;\n  var prime_counter72 = 0;\n  var ", "   \
    \ let hex = num.replace(/[^A-F0-9]/g,\"\");\n    let hex2 = hex.replace(/[A-F0-9]/g,\"\
    \");\n    let hex3 = hex2.replace(/[A-F0-9]/g,\"\");\n    let hex4 = hex3.replace(/[A-F0-9]/g,\"\
    \");\n    let hex5 = hex4.replace(/[A-F0-9]/g,\"\");\n    let hex6 = hex5.replace(/[A-F0-9]/g,\"\
    \");\n    let hex7 = hex6.replace(/[A-F0-9]/g,\"\");\n    let hex8 = hex7.replace(/[A-F0-9]/g,\"\
    \");\n    let hex9 = hex8.replace(/[A-F0-9]/g,\"\");\n    let hex10 = hex9.replace(/[A-F0-9]/g,\"\
    \");\n    let hex11 = hex10.replace(/[A-F0-9]/g,\"\");\n    let hex12 = hex11.replace(/[A-F0-9]/g,\"\
    \");\n    let hex13 = hex12.replace(/[A-F0-9]/g,\"\");\n    let hex14 = hex13.replace(/[A-F0-9]/g,\"\
    \");\n    let hex15 = hex14.replace(/[A-F0-9]/g,\"\");\n    let hex16 = hex15.replace(/[A-F0-9]/g,\"\
    \");\n    let hex17 = hex16.replace(/[A-F0-9]/g,\"\");\n    let hex18 = hex17.replace(/[A-F0-9]/g,\"\
    \");\n    let hex19 = hex18.replace(/[A-F0-9]/g,\"\");\n    let hex20 = hex19.replace(/[A-F0-9]/g,\"\
    \");\n    let hex21 = hex20.replace(/[A-F0-9]/g,\"\");\n    let hex22 = hex21.replace(/[A-F0-9]/g,\"\
    \");\n    let hex23 = hex22.replace(/[A-F0-9]/g,\"\");\n    let hex24 = hex23.replace(/[A-F0-9]/g,\"\
    \");\n    let hex25 = hex24.replace(/[A-F0-9]/g,\"\");\n    let hex26 = hex25.replace(/[A-F0-9]/g,\"\
    \");\n    let hex27 = hex26.replace(/[A-F0-9]/g,\"\");\n    let hex28 = hex27.replace(/[A-F0-9]/g,\"\
    \");\n    let hex29 = hex28.replace(/[A-F0-9]/g,\"\");\n    let hex30 = hex29.replace(/[A-F0-9]/g,\"\
    \");\n    let hex31 = hex30.replace(/[A-F0-9]/g,\"\");\n    let hex32 = hex31.replace(/[A-F0-9]/g,\"\
    \");\n    let hex33 = hex32.replace(/[A-F0-9]/g,\"\");\n    let hex34 = hex33.replace(/[A-F0-9]/g,\"\
    \");\n    let hex35 = hex34.replace(/[A-F", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join``;\n    let hexDigits = hex.split(\"\"\
    ).filter(x => x !== \"0\");\n    let primes = hexDigits.filter(x => x === \"2\"\
    \ || x === \"3\" || x === \"5\" || x === \"7\" || x === \"B\" || x === \"D\");\n\
    \    let primesCount = primes.length;\n    return primesCount;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThank you for your answer! I tried to run your code\
    \ but it didn't work. Can you please check my code again? I edited my question\
    \ and added the code I tried.\n<|/ c |>\n<| c |>\nI edited my answer, I forgot\
    \ to add the `charCodeAt` method. Now it should work\n<|/ c |>\n<| c |>\nThank\
    \ you for your answer! I tried to run your code but it didn't work. Can you please\
    \ check my code again? I edited my question and added the code I tried.\n<|/ c\
    \ |>\n<| c |>\nI edited my answer, I forgot to add the `charCodeAt` method. Now\
    \ it should work\n<|/ c |>\n<| c |>\nThank you for your answer! I tried to run\
    \ your code but it didn't work. Can you please check my code again? I edited my\
    \ question and added the code I tried.\n<|/ c |>\n<| a tags=javascript,primes\
    \ |>\n<code>", "    var hex = num.split(\"\");\n    var hex_rev = [];\n    for(var\
    \ i=0;i<hex.length;i++){\n        hex_rev.push(hex[i].charCodeAt(0)-65);\n   \
    \ }\n    var hex_rev_rev = hex_rev.sort(function(a,b){return a-b});\n    var hex_rev_rev2\
    \ = hex_rev_rev.reverse();\n    var hex_rev_rev3 = hex_rev_rev2.reverse();\n \
    \   var hex_rev_rev4 = hex_rev_rev3.reverse();\n    var hex_rev_rev5 = hex_rev_rev4.reverse();\n\
    \    var hex_rev_rev6 = hex_rev_rev5.reverse();\n    var hex_rev_rev7 = hex_rev_rev6.reverse();\n\
    \    var hex_rev_rev8 = hex_rev_rev7.reverse();\n    var hex_rev_rev9 = hex_rev_rev8.reverse();\n\
    \    var hex_rev_rev10 = hex_rev_rev9.reverse();\n    var hex_rev_rev11 = hex_rev_rev10.reverse();\n\
    \    var hex_rev_rev12 = hex_rev_rev11.reverse();\n    var hex_rev_rev13 = hex_rev_rev12.reverse();\n\
    \    var hex_rev_rev14 = hex_rev_rev13.reverse();\n    var hex_rev_rev15 = hex_rev_rev14.reverse();\n\
    \    var hex_rev_rev16 = hex_rev_rev15.reverse();\n    var hex_rev_rev17 = hex_rev_rev16.reverse();\n\
    \    var hex_rev_rev18 = hex_rev_rev17.reverse();\n    var hex_rev_rev19 = hex_rev_rev18.reverse();\n\
    \    var hex_rev_rev20 = hex_rev_rev19.reverse();\n    var hex_rev_rev21 = hex_rev_rev20.reverse();\n\
    \    var hex_rev_rev22 = hex_rev_rev21.reverse();\n    var hex_rev_rev23 = hex_rev_rev22.reverse();\n\
    \    var hex_rev_rev24 = hex_rev_rev23.reverse();\n    var hex_rev_rev25 = hex_rev_rev24.reverse();\n\
    \    var hex_rev_rev26 = hex_rev_rev25.reverse();\n    var hex_rev_rev27 = hex_rev_rev26.reverse();\n\
    \    var hex_rev_rev28 = hex_rev_rev27.reverse();\n    var hex_rev_rev29 = hex_rev_rev28.reverse();\n\
    \    var hex_rev_rev30 = hex_rev_rev29.reverse();\n    var hex_rev_rev31 = hex_rev_rev30.reverse();\n\
    \    var hex_rev_rev32 = hex_rev_rev31.reverse();", "    let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join('');\n    let primes = hex_key.primes;\n\
    \    let primes_length = primes.length;\n    let primes_index = 0;\n    let primes_sum\
    \ = 0;\n    let primes_sum_index = 0;\n    let primes_sum_index2 = 0;\n    let\
    \ primes_sum_index3 = 0;\n    let primes_sum_index4 = 0;\n    let primes_sum_index5\
    \ = 0;\n    let primes_sum_index6 = 0;\n    let primes_sum_index7 = 0;\n    let\
    \ primes_sum_index8 = 0;\n    let primes_sum_index9 = 0;\n    let primes_sum_index10\
    \ = 0;\n    let primes_sum_index11 = 0;\n    let primes_sum_index12 = 0;\n   \
    \ let primes_sum_index13 = 0;\n    let primes_sum_index14 = 0;\n    let primes_sum_index15\
    \ = 0;\n    let primes_sum_index16 = 0;\n    let primes_sum_index17 = 0;\n   \
    \ let primes_sum_index18 = 0;\n    let primes_sum_index19 = 0;\n    let primes_sum_index20\
    \ = 0;\n    let primes_sum_index21 = 0;\n    let primes_sum_index22 = 0;\n   \
    \ let primes_sum_index23 = 0;\n    let primes_sum_index24 = 0;\n    let primes_sum_index25\
    \ = 0;\n    let primes_sum_index26 = 0;\n    let primes_sum_index27 = 0;\n   \
    \ let primes_sum_index28 = 0;\n    let primes_sum_index29 = 0;\n    let primes_sum_index30\
    \ = 0;\n    let primes_sum_index31 = 0;\n    let primes_sum_index32 = 0;\n   \
    \ let primes_sum_index33 = 0;\n    let primes_sum_index34 = 0;\n    let primes_sum_index35\
    \ = 0;\n    let primes_sum_index36 = 0;\n    let primes_sum_index37 = 0;\n   \
    \ let primes_sum_index38 = 0;\n    let primes_sum_index39 = 0;\n    let primes_sum_index40\
    \ = 0;\n    let primes_sum_index41 = 0;\n    let primes_sum_index42 = 0;\n   \
    \ let primes_sum_index43 = 0;\n    let primes_sum_index44 = 0;\n    let primes_sum_index45\
    \ = 0;\n    let primes_sum_index46 = 0;\n    let primes_sum_index47 = 0;\n   \
    \ let primes_sum_index48 = 0;\n    let primes_sum_index49 = 0;\n    let primes_sum_index50\
    \ = 0;\n    let primes_sum_index51 = 0;\n    let primes_sum_index52 = 0;\n   \
    \ let primes_sum_index53 = 0;\n    let primes_sum_index54 = 0;\n    let primes_sum_index55\
    \ = 0;\n    let primes_sum_index56 = 0;\n    let primes_sum_index57 = 0;\n   \
    \ let primes_sum_index58 = 0;\n    let primes_sum", "    let hex = num.split(\"\
    \");\n    let prime_count = 0;\n    let prime_digits = \"\";\n    for(let i =\
    \ 0; i < hex.length; i++){\n        if(hex[i] === \"A\" || hex[i] === \"B\" ||\
    \ hex[i] === \"C\" || hex[i] === \"D\" || hex[i] === \"E\" || hex[i] === \"F\"\
    ){\n            prime_digits += hex[i];\n        }\n        else{\n          \
    \  prime_count += hex_key(prime_digits);\n            prime_digits = \"\";\n \
    \       }\n    }\n    return prime_count;\n}\n", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split('');\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes = [];\n    for(let i\
    \ = 0; i < hexDigitCount; i++){\n        if(hexDigits[i] === 'A' || hexDigits[i]\
    \ === 'B' || hexDigits[i] === 'C' || hexDigits[i] === 'D' || hexDigits[i] ===\
    \ 'E' || hexDigits[i] === 'F'){\n            hexDigitPrimes.push(hexDigits[i]);\n\
    \        }\n    }\n    for(let i = 0; i < hexDigitCount; i++){\n        if(hexDigitPrimes.includes(hexDigits[i])){\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    return hexDigitPrimeCount;\n\
    }\n", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split('');\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime = 0;\n\
    \    let hexDigitCountPrime2 = hexDigitCount;\n    let hexDigitCountPrime3 = hexDigitCount;\n\
    \    let hexDigitCountPrime4 = hexDigitCount;\n    let hexDigitCountPrime5 = hexDigitCount;\n\
    \    let hexDigitCountPrime6 = hexDigitCount;\n    let hexDigitCountPrime7 = hexDigitCount;\n\
    \    let hexDigitCountPrime8 = hexDigitCount;\n    let hexDigitCountPrime9 = hexDigitCount;\n\
    \    let hexDigitCountPrime10 = hexDigitCount;\n    let hexDigitCountPrime11 =\
    \ hexDigitCount;\n    let hexDigitCountPrime12 = hexDigitCount;\n    let hexDigitCountPrime13\
    \ = hexDigitCount;\n    let hexDigitCountPrime14 = hexDigitCount;\n    let hexDigitCountPrime15\
    \ = hexDigitCount;\n    let hexDigitCountPrime16 = hexDigitCount;\n    let hexDigitCountPrime17\
    \ = hexDigitCount;\n    let hexDigitCountPrime18 = hexDigitCount;\n    let hexDigitCountPrime19\
    \ = hexDigitCount;\n    let hexDigitCountPrime20 = hexDigitCount;\n    let hexDigitCountPrime21\
    \ = hexDigitCount;\n    let hexDigitCountPrime22 = hexDigitCount;\n    let hexDigitCountPrime23\
    \ = hexDigitCount;\n    let hexDigitCountPrime24 = hexDigitCount;\n    let hexDigitCountPrime25\
    \ = hexDigitCount;\n    let hexDigitCountPrime26 = hexDigitCount;\n    let hexDigitCountPrime27\
    \ = hexDigitCount;\n    let hexDigitCountPrime28 = hexDigitCount;\n    let hexDigitCountPrime29\
    \ = hexDigitCount;\n    let hexDigitCountPrime30 = hexDigitCount;\n    let hexDigitCountPrime31\
    \ = hexDigitCount;\n    let hexDigitCountPrime32 = hexDigitCount;\n    let hexDigitCountPrime33\
    \ = hexDigitCount;\n    let hexDigitCountPrime34 = hexDigitCount;\n    let hexDigitCountPrime35\
    \ = hexDigitCount;\n    let hexDigitCountPrime36 = hexDigitCount;\n    let hexDigitCountPrime37\
    \ = hexDigitCount;\n    let hexDigitCountPrime38 = hexDigitCount;\n    let hexDigitCountPrime39\
    \ = hexDigitCount", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split('');\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime = 0;\n\
    \    let hexDigitCountPrime2 = hexDigitCountPrime;\n    let hexDigitCountPrime3\
    \ = hexDigitCountPrime2;\n    let hexDigitCountPrime4 = hexDigitCountPrime3;\n\
    \    let hexDigitCountPrime5 = hexDigitCountPrime4;\n    let hexDigitCountPrime6\
    \ = hexDigitCountPrime5;\n    let hexDigitCountPrime7 = hexDigitCountPrime6;\n\
    \    let hexDigitCountPrime8 = hexDigitCountPrime7;\n    let hexDigitCountPrime9\
    \ = hexDigitCountPrime8;\n    let hexDigitCountPrime10 = hexDigitCountPrime9;\n\
    \    let hexDigitCountPrime11 = hexDigitCountPrime10;\n    let hexDigitCountPrime12\
    \ = hexDigitCountPrime11;\n    let hexDigitCountPrime13 = hexDigitCountPrime12;\n\
    \    let hexDigitCountPrime14 = hexDigitCountPrime13;\n    let hexDigitCountPrime15\
    \ = hexDigitCountPrime14;\n    let hexDigitCountPrime16 = hexDigitCountPrime15;\n\
    \    let hexDigitCountPrime17 = hexDigitCountPrime16;\n    let hexDigitCountPrime18\
    \ = hexDigitCountPrime17;\n    let hexDigitCountPrime19 = hexDigitCountPrime18;\n\
    \    let hexDigitCountPrime20 = hexDigitCountPrime19;\n    let hexDigitCountPrime21\
    \ = hexDigitCountPrime20;\n    let hexDigitCountPrime22 = hexDigitCountPrime21;\n\
    \    let hexDigitCountPrime23 = hexDigitCountPrime22;\n    let hexDigitCountPrime24\
    \ = hexDigitCountPrime23;\n    let hexDigitCountPrime25 = hexDigitCountPrime24;\n\
    \    let hexDigitCountPrime26 = hexDigitCountPrime25;\n    let hexDigitCountPrime27\
    \ = hexDigitCountPrime26;\n    let hexDigitCountPrime28 = hexDigitCountPrime27;\n\
    \    let hexDigitCountPrime29 = hexDigitCountPrime28;\n    let hexDigitCountPrime30\
    \ = hexDigitCountPrime29;\n    let hexDigitCountPrime31 = hexDigitCountPrime30;\n\
    \    let hexDigitCountPrime32 = hexDigitCountPrime31;\n    let hexDigitCountPrime33\
    \ = hexDigitCountPrime", "    var hex = num.toUpperCase();\n    var hexDigits\
    \ = hex.split('');\n    var hexDigits_length = hexDigits.length;\n    var hexDigits_length_max\
    \ = hexDigits_length-1;\n    var hexDigits_length_min = hexDigits_length-2;\n\
    \    var hexDigits_length_min2 = hexDigits_length-4;\n    var hexDigits_length_min3\
    \ = hexDigits_length-6;\n    var hexDigits_length_min4 = hexDigits_length-8;\n\
    \    var hexDigits_length_min5 = hexDigits_length-10;\n    var hexDigits_length_min6\
    \ = hexDigits_length-12;\n    var hexDigits_length_min7 = hexDigits_length-14;\n\
    \    var hexDigits_length_min8 = hexDigits_length-16;\n    var hexDigits_length_min9\
    \ = hexDigits_length-18;\n    var hexDigits_length_min10 = hexDigits_length-20;\n\
    \    var hexDigits_length_min11 = hexDigits_length-21;\n    var hexDigits_length_min12\
    \ = hexDigits_length-22;\n    var hexDigits_length_min13 = hexDigits_length-26;\n\
    \    var hexDigits_length_min14 = hexDigits_length-28;\n    var hexDigits_length_min15\
    \ = hexDigits_length-32;\n    var hexDigits_length_min16 = hexDigits_length-34;\n\
    \    var hexDigits_length_min17 = hexDigits_length-36;\n    var hexDigits_length_min18\
    \ = hexDigits_length-38;\n    var hexDigits_length_min19 = hexDigits_length-40;\n\
    \    var hexDigits_length_min20 = hexDigits_length-44;\n    var hexDigits_length_min21\
    \ = hexDigits_length-45;\n    var hexDigits_length_min22 = hexDigits_length-49;\n\
    \    var hexDigits_length_min23 = hexDigits_length-53;\n    var hexDigits_length_min24\
    \ = hexDigits_length-55;\n    var hexDigits_length_min25 = hexDigits_length-57;\n\
    \    var hexDigits_length_min26 = hexDigits_length-59;\n    var hexDigits_length_min27\
    \ = hexDigits_length-60;\n    var hexDigits_length_min28 = hexDigits_length-62;\n\
    \    var hexDigits_length_min29 = hexDigits_length-64;\n    var hexDigits_length_min30\
    \ = hexDigits_length-66;\n    var hexDigits_length_min31 = hexDigits_length-67;\n\
    \    var hexDigits_length_min32 = hexDigits_length-69;\n    var hexDigits_length_min33\
    \ = hexDigits_length-73;\n    var hexDigits_", "    var hex = num.toString();\n\
    \    var count = 0;\n    for(var i=0;i<hex.length;i++){\n        var hexDigit\
    \ = hex.charCodeAt(i);\n        if(hexDigit>47 && hexDigit<58){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a |>\n<| c |>\nThank you\
    \ for your answer. Your code is very helpful for me. But, I have some questions.\
    \ 1. Why do you use \"hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 &&\
    \ hexDigit<57\"? 2. Why do you use \"hexDigit>47 && hexDigit<58\" instead of \"\
    hexDigit>47 && hexDigit<57\"? 3. Why do you use \"hexDigit>47 && hexDigit<58\"\
    \ instead of \"hexDigit>47 && hexDigit<57\"? 4. Why do you use \"hexDigit>47 &&\
    \ hexDigit<58\" instead of \"hexDigit>47 && hexDigit<57\"? 5. Why do you use \"\
    hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 && hexDigit<57\"? 6. Why\
    \ do you use \"hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 && hexDigit<57\"\
    ? 7. Why do you use \"hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 &&\
    \ hexDigit<57\"? 8. Why do you use \"hexDigit>47 && hexDigit<58\" instead of \"\
    hexDigit>47 && hexDigit<57\"? 9. Why do you use \"hexDigit>47 && hexDigit<58\"\
    \ instead of \"hexDigit>47 && hexDigit<57\"? 10. Why do you use \"hexDigit>47\
    \ && hexDigit<58\" instead of \"hexDigit>47 && hexDigit<57\"? 11. Why do you use\
    \ \"hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 && hexDigit<57\"? 12.\
    \ Why do you use \"hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 && hexDigit<57\"\
    ? 13. Why do you use \"hexDigit>47 && hexDigit<58\" instead of \"hexDigit>47 &&\
    \ hexDigit<57\"? 14. Why do you use \"hexDigit>47 && hexDigit<58\" instead of\
    \ \"hexDigit>47 && hexDigit<57\"? 15. Why do you use \"hexDigit>47 && hexDigit<58\"\
    \ instead of \"hexDigit>47 && hexDigit<57\"", "    var hex = num.toString().split('');\n\
    \    var hexLength = hex.length;\n    var hexDigits = [];\n    for(var i=0;i<hexLength;i++){\n\
    \        hexDigits.push(hex[i].charCodeAt(0) - 'A'.charCodeAt(0));\n    }\n  \
    \  var hexKey = {};\n    hexKey.hexDigits = hexDigits;\n    hexKey.hexLength =\
    \ hexLength;\n    hexKey.hexKey = {};\n    hexKey.hexKey.primes = [];\n    hexKey.hexKey.primes.push(2);\n\
    \    for(var i=0;i<hexLength;i++){\n        var hexDigit = hexDigits[i];\n   \
    \     if(hexDigit == 0){\n            hexKey.hexKey.primes.push(hexKey.hexKey.primes[hexKey.hexKey.primes.length-1]+1);\n\
    \        }\n        else{\n            hexKey.hexKey.primes.push(hexKey.hexKey.primes[hexKey.hexKey.primes.length-1]+hexDigit);\n\
    \        }\n    }\n    return hexKey;\n}\n", "  var hex = num;\n  var hex_rev\
    \ = hex.split('').reverse().join('');\n  var hex_digits = hex_rev.split('');\n\
    \  var hex_digits_len = hex_digits.length;\n  var prime_digits = [];\n  var prime_digits_len\
    \ = prime_digits.length;\n  var prime_digits_sum = 0;\n  var prime_digits_sum_len\
    \ = prime_digits_sum.length;\n  var prime_digits_product = 1;\n  var prime_digits_product_len\
    \ = prime_digits_product.length;\n  var prime_digits_product2 = 1;\n  var prime_digits_product2_len\
    \ = prime_digits_product2.length;\n  var prime_digits_product3 = 1;\n  var prime_digits_product3_len\
    \ = prime_digits_product3.length;\n  var prime_digits_product4 = 1;\n  var prime_digits_product4_len\
    \ = prime_digits_product4.length;\n  var prime_digits_product5 = 1;\n  var prime_digits_product5_len\
    \ = prime_digits_product5.length;\n  var prime_digits_product6 = 1;\n  var prime_digits_product6_len\
    \ = prime_digits_product6.length;\n  var prime_digits_product7 = 1;\n  var prime_digits_product7_len\
    \ = prime_digits_product7.length;\n  var prime_digits_product8 = 1;\n  var prime_digits_product8_len\
    \ = prime_digits_product8.length;\n  var prime_digits_product9 = 1;\n  var prime_digits_product9_len\
    \ = prime_digits_product9.length;\n  var prime_digits_product10 = 1;\n  var prime_digits_product10_len\
    \ = prime_digits_product10.length;\n  var prime_digits_product11 = 1;\n  var prime_digits_product11_len\
    \ = prime_digits_product11.length;\n  var prime_digits_product12 = 1;\n  var prime_digits_product12_len\
    \ = prime_digits_product12.length;\n  var prime_digits_product13 = 1;\n  var prime_digits_product13_len\
    \ = prime_digits_product13.length;\n  var prime_digits_product14 = 1;\n  var prime_digits_product14_len\
    \ = prime_digits_product14.length;\n  var prime_digits_product15 = 1;\n  var prime_digits_product15_len\
    \ = prime_digits_product15.length;\n  var prime_digits_product16 = 1;\n  var prime_digits_product16_len\
    \ = prime_digits_product16.length;\n  var prime_digits_product17 = 1;\n  var prime_digits_product17_len\
    \ = prime_digits_product17.length;\n  var prime_digits_product18 = 1;\n  var prime_digits_",
  "    var hex = num.split(\"\");\n    var hexLength = hex.length;\n    var hexDigits\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    var hexPrimes = [];\n    var hexPrimeCount = 0;\n    var hexPrimeCount2 =\
    \ 0;\n    var hexPrimeCount3 = 0;\n    var hexPrimeCount4 = 0;\n    var hexPrimeCount5\
    \ = 0;\n    var hexPrimeCount6 = 0;\n    var hexPrimeCount7 = 0;\n    var hexPrimeCount8\
    \ = 0;\n    var hexPrimeCount9 = 0;\n    var hexPrimeCount10 = 0;\n    var hexPrimeCount11\
    \ = 0;\n    var hexPrimeCount12 = 0;\n    var hexPrimeCount13 = 0;\n    var hexPrimeCount14\
    \ = 0;\n    var hexPrimeCount15 = 0;\n    var hexPrimeCount16 = 0;\n    var hexPrimeCount17\
    \ = 0;\n    var hexPrimeCount18 = 0;\n    var hexPrimeCount19 = 0;\n    var hexPrimeCount20\
    \ = 0;\n    var hexPrimeCount21 = 0;\n    var hexPrimeCount22 = 0;\n    var hexPrimeCount23\
    \ = 0;\n    var hexPrimeCount24 = 0;\n    var hexPrimeCount25 = 0;\n    var hexPrimeCount26\
    \ = 0;\n    var hexPrimeCount27 = 0;\n    var hexPrimeCount28 = 0;\n    var hexPrimeCount29\
    \ = 0;\n    var hexPrimeCount30 = 0;\n    var hexPrimeCount31 = 0;\n    var hexPrimeCount32\
    \ = 0;\n    var hexPrimeCount33 = 0;\n    var hexPrimeCount34 = 0;\n    var hexPrimeCount35\
    \ = 0;\n    var hexPrimeCount36 = 0;\n    var hexPrimeCount37 = 0;\n    var hexPrimeCount38\
    \ = 0;\n    var hexPrimeCount39 = 0;\n    var hexPrimeCount40 = 0;\n    var hexPrimeCount41\
    \ = 0;\n    var hexPrimeCount42 = 0;\n    var hexPrimeCount43 = 0;\n    var hexPrimeCount44\
    \ = 0;\n    var hexPrimeCount45 = 0;\n    var hexPrimeCount46 = 0;\n    var hexPrimeCount47\
    \ = 0;\n    var hexPrimeCount48 = 0;\n    var hexPrimeCount49 = 0;\n    var hexPrimeCount50\
    \ = 0;\n    var hexPrimeCount51 = 0;\n    var hexPrimeCount52 = 0;\n    var hexPrimeCount53\
    \ = 0;\n    var hexPrimeCount54 = 0;\n    var hexPrimeCount55 = 0;\n    var hexPrimeCount56\
    \ = 0;\n    var hexPrimeCount57", "    var hex = num.split(\"\");\n    var hexLength\
    \ = hex.length;\n    var hexDigits = hex.length;\n    var hexPrimes = [];\n  \
    \  var hexPrimeCount = 0;\n    var hexPrimeCount2 = 0;\n    var hexPrimeCount3\
    \ = 0;\n    var hexPrimeCount4 = 0;\n    var hexPrimeCount5 = 0;\n    var hexPrimeCount6\
    \ = 0;\n    var hexPrimeCount7 = 0;\n    var hexPrimeCount8 = 0;\n    var hexPrimeCount9\
    \ = 0;\n    var hexPrimeCount10 = 0;\n    var hexPrimeCount11 = 0;\n    var hexPrimeCount12\
    \ = 0;\n    var hexPrimeCount13 = 0;\n    var hexPrimeCount14 = 0;\n    var hexPrimeCount15\
    \ = 0;\n    var hexPrimeCount16 = 0;\n    var hexPrimeCount17 = 0;\n    var hexPrimeCount18\
    \ = 0;\n    var hexPrimeCount19 = 0;\n    var hexPrimeCount20 = 0;\n    var hexPrimeCount21\
    \ = 0;\n    var hexPrimeCount22 = 0;\n    var hexPrimeCount23 = 0;\n    var hexPrimeCount24\
    \ = 0;\n    var hexPrimeCount25 = 0;\n    var hexPrimeCount26 = 0;\n    var hexPrimeCount27\
    \ = 0;\n    var hexPrimeCount28 = 0;\n    var hexPrimeCount29 = 0;\n    var hexPrimeCount30\
    \ = 0;\n    var hexPrimeCount31 = 0;\n    var hexPrimeCount32 = 0;\n    var hexPrimeCount33\
    \ = 0;\n    var hexPrimeCount34 = 0;\n    var hexPrimeCount35 = 0;\n    var hexPrimeCount36\
    \ = 0;\n    var hexPrimeCount37 = 0;\n    var hexPrimeCount38 = 0;\n    var hexPrimeCount39\
    \ = 0;\n    var hexPrimeCount40 = 0;\n    var hexPrimeCount41 = 0;\n    var hexPrimeCount42\
    \ = 0;\n    var hexPrimeCount43 = 0;\n    var hexPrimeCount44 = 0;\n    var hexPrimeCount45\
    \ = 0;\n    var hexPrimeCount46 = 0;\n    var hexPrimeCount47 = 0;\n    var hexPrimeCount48\
    \ = 0;\n    var hexPrimeCount49 = 0;\n    var hexPrimeCount50 = 0;\n    var hexPrimeCount51\
    \ = 0;\n    var hexPrimeCount52 = 0;\n    var hexPrimeCount53 = 0;\n    var hexPrimeCount54\
    \ = 0;\n    var hexPrimeCount55 = 0;\n    var hexPrimeCount56 = 0;\n    var hexPrimeCount57\
    \ = 0;\n    var hexPrimeCount58 = 0;\n    var hexPrimeCount59 = 0;\n    var hexPrimeCount60\
    \ = 0;\n    var hexPrimeCount61 = 0;\n    var hex", "    let hex = num.toString().split('');\n\
    \    let primes = [];\n    for(let i = 0; i < hex.length; i++){\n        if(hex[i]\
    \ == 'A' || hex[i] == 'B' || hex[i] == 'C' || hex[i] == 'D' || hex[i] == 'E' ||\
    \ hex[i] == 'F'){\n            primes.push(hex[i]);\n        }\n    }\n    let\
    \ prime_count = primes.length;\n    let prime_sum = 0;\n    for(let i = 0; i <\
    \ primes.length; i++){\n        prime_sum += primes.charCodeAt(i);\n    }\n  \
    \  let prime_sum2 = prime_sum * prime_sum;\n    let prime_sum3 = prime_sum2 *\
    \ prime_sum;\n    let prime_sum4 = prime_sum3 * prime_sum;\n    let prime_sum5\
    \ = prime_sum4 * prime_sum;\n    let prime_sum6 = prime_sum5 * prime_sum;\n  \
    \  let prime_sum7 = prime_sum6 * prime_sum;\n    let prime_sum8 = prime_sum7 *\
    \ prime_sum;\n    let prime_sum9 = prime_sum8 * prime_sum;\n    let prime_sum10\
    \ = prime_sum9 * prime_sum;\n    let prime_sum11 = prime_sum10 * prime_sum;\n\
    \    let prime_sum12 = prime_sum11 * prime_sum;\n    let prime_sum13 = prime_sum12\
    \ * prime_sum;\n    let prime_sum14 = prime_sum13 * prime_sum;\n    let prime_sum15\
    \ = prime_sum14 * prime_sum;\n    let prime_sum16 = prime_sum15 * prime_sum;\n\
    \    let prime_sum17 = prime_sum16 * prime_sum;\n    let prime_sum18 = prime_sum17\
    \ * prime_sum;\n    let prime_sum19 = prime_sum18 * prime_sum;\n    let prime_sum20\
    \ = prime_sum19 * prime_sum;\n    let prime_sum21 = prime_sum20 * prime_sum;\n\
    \    let prime_sum22 = prime_sum21 * prime_sum;\n    let prime_sum23 = prime_sum22\
    \ * prime_sum;\n    let prime_sum24 = prime_sum23 * prime_sum;\n    let prime_sum25\
    \ = prime_sum24 * prime_sum;\n    let prime_sum26 = prime_sum25 * prime_sum;\n\
    \    let prime_sum27 = prime_sum26 * prime_sum;\n    let prime_sum28 = prime_sum27\
    \ * prime_sum;\n", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n    let primes = hex_key.primes;\n    let primes_count = hex_key.primes_count;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max_2 = hex_key.primes_count_max_2;\n\
    \    let primes_count_min_2 = hex_key.primes_count_min_2;\n    let primes_count_max_3\
    \ = hex_key.primes_count_max_3;\n    let primes_count_min_3 = hex_key.primes_count_min_3;\n\
    \    let primes_count_max_4 = hex_key.primes_count_max_4;\n    let primes_count_min_4\
    \ = hex_key.primes_count_min_4;\n    let primes_count_max_5 = hex_key.primes_count_max_5;\n\
    \    let primes_count_min_5 = hex_key.primes_count_min_5;\n    let primes_count_max_6\
    \ = hex_key.primes_count_max_6;\n    let primes_count_min_6 = hex_key.primes_count_min_6;\n\
    \    let primes_count_max_7 = hex_key.primes_count_max_7;\n    let primes_count_min_7\
    \ = hex_key.primes_count_min_7;\n    let primes_count_max_8 = hex_key.primes_count_max_8;\n\
    \    let primes_count_min_8 = hex_key.primes_count_min_8;\n    let primes_count_max_9\
    \ = hex_key.primes_count_max_9;\n    let primes_count_min_9 = hex_key.primes_count_min_9;\n\
    \    let primes_count_max_10 = hex_key.primes_count_max_10;\n    let primes_count_min_10\
    \ = hex_key.primes_count_min_10;\n    let primes_count_max_11 = hex_key.primes_count_max_11;\n\
    \    let primes_count_min_11 = hex_key.primes_count_min_11;\n    let primes_count_max_12\
    \ = hex_key.primes_count_max_12;\n    let primes_count_min_12 = hex_key.primes_count_min_12;\n\
    \    let primes_count_max_13 = hex_key.primes_count_max_13;\n    let primes_count_min_13\
    \ = hex_key.primes_count_min_13;\n    let primes_count_max_14 = hex_key.primes_count_max_14;\n\
    \    let primes_count_min_14 = hex_key.primes_count_min_14;\n    let primes_count_max_15\
    \ = hex_key.primes_count_max_15;\n    let primes_count_min_15 = hex_key.primes_count_min_15;\n\
    \    let primes_count_max_16 = hex_key.primes_count_max_16;\n    let ", "    let\
    \ hexNum = num.toUpperCase();\n    let hexNumArray = hexNum.split('');\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n    let\
    \ hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength = hexNumArray.length;\n\
    \    let hexNumArrayLength = hexNumArray.length;\n    let hexNumArrayLength =\
    \ hexNumArray.length;\n    let hexNumArray", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16)).join(\"\");\n    let primes = hex_key.primes;\n\
    \    let primes_count = hex_key.primes_count;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.primes_count_min;\n    let primes_count_max_2\
    \ = hex_key.primes_count_max_2;\n    let primes_count_min_2 = hex_key.primes_count_min_2;\n\
    \    let primes_count_max_3 = hex_key.primes_count_max_3;\n    let primes_count_min_3\
    \ = hex_key.primes_count_min_3;\n    let primes_count_max_4 = hex_key.primes_count_max_4;\n\
    \    let primes_count_min_4 = hex_key.primes_count_min_4;\n    let primes_count_max_5\
    \ = hex_key.primes_count_max_5;\n    let primes_count_min_5 = hex_key.primes_count_min_5;\n\
    \    let primes_count_max_6 = hex_key.primes_count_max_6;\n    let primes_count_min_6\
    \ = hex_key.primes_count_min_6;\n    let primes_count_max_7 = hex_key.primes_count_max_7;\n\
    \    let primes_count_min_7 = hex_key.primes_count_min_7;\n    let primes_count_max_8\
    \ = hex_key.primes_count_max_8;\n    let primes_count_min_8 = hex_key.primes_count_min_8;\n\
    \    let primes_count_max_9 = hex_key.primes_count_max_9;\n    let primes_count_min_9\
    \ = hex_key.primes_count_min_9;\n    let primes_count_max_10 = hex_key.primes_count_max_10;\n\
    \    let primes_count_min_10 = hex_key.primes_count_min_10;\n    let primes_count_max_11\
    \ = hex_key.primes_count_max_11;\n    let primes_count_min_11 = hex_key.primes_count_min_11;\n\
    \    let primes_count_max_12 = hex_key.primes_count_max_12;\n    let primes_count_min_12\
    \ = hex_key.primes_count_min_12;\n    let primes_count_max_13 = hex_key.primes_count_max_13;\n\
    \    let primes_count_min_13 = hex_key.primes_count_min_13;\n    let primes_count_max_14\
    \ = hex_key.primes_count_max_14;\n    let primes_count_min_14 = hex_key.primes_count_min_14;\n\
    \    let primes_count_max_15 = hex_key.primes_count_max_15;\n    let primes_count_min_15\
    \ = hex_key.primes_count_min_15;\n    let primes_count_max_16 = hex_key.primes_count_max_16;\n\
    \    let ", "    var hex = num.toUpperCase();\n    var hexDigits = hex.split(\"\
    \");\n    var hexDigitCount = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    var hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    var hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    var hexDigitCount33 = hexDigitCount", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16));\n    let primes = [];\n    for(let i = 0;\
    \ i < hex.length; i++){\n        let hexDigit = hex[i];\n        let prime = hexDigit;\n\
    \        for(let j = 1; j < hex.length; j++){\n            if(hex[j] === hexDigit){\n\
    \                prime = false;\n                break;\n            }\n     \
    \   }\n        if(prime){\n            primes.push(prime);\n        }\n    }\n\
    \    return primes.length;\n}\n", "  var hex = num.toUpperCase();\n  var hexLength\
    \ = hex.length;\n  var hexDigits = \"0123456789ABCDEF\";\n  var hexDigitCount\
    \ = hexDigits.length;\n  var hexDigitArray = [];\n  for(var i = 0; i < hexLength;\
    \ i++){\n    hexDigitArray.push(hexDigits.charAt(hex.charCodeAt(i)));\n  }\n \
    \ var hexDigitArrayLength = hexDigitArray.length;\n  var hexDigitArrayCount =\
    \ hexDigitArrayLength;\n  var hexDigitArraySum = 0;\n  var hexDigitArraySum2 =\
    \ 0;\n  var hexDigitArraySum3 = 0;\n  var hexDigitArraySum4 = 0;\n  var hexDigitArraySum5\
    \ = 0;\n  var hexDigitArraySum6 = 0;\n  var hexDigitArraySum7 = 0;\n  var hexDigitArraySum8\
    \ = 0;\n  var hexDigitArraySum9 = 0;\n  var hexDigitArraySum10 = 0;\n  var hexDigitArraySum11\
    \ = 0;\n  var hexDigitArraySum12 = 0;\n  var hexDigitArraySum13 = 0;\n  var hexDigitArraySum14\
    \ = 0;\n  var hexDigitArraySum15 = 0;\n  var hexDigitArraySum16 = 0;\n  var hexDigitArraySum17\
    \ = 0;\n  var hexDigitArraySum18 = 0;\n  var hexDigitArraySum19 = 0;\n  var hexDigitArraySum20\
    \ = 0;\n  var hexDigitArraySum21 = 0;\n  var hexDigitArraySum22 = 0;\n  var hexDigitArraySum23\
    \ = 0;\n  var hexDigitArraySum24 = 0;\n  var hexDigitArraySum25 = 0;\n  var hexDigitArraySum26\
    \ = 0;\n  var hexDigitArraySum27 = 0;\n  var hexDigitArraySum28 = 0;\n  var hexDigitArraySum29\
    \ = 0;\n  var hexDigitArraySum30 = 0;\n  var hexDigitArraySum31 = 0;\n  var hexDigitArraySum32\
    \ = 0;\n  var hexDigitArraySum33 = 0;\n  var hexDigitArraySum34 = 0;\n  var hexDigitArraySum35\
    \ = 0;\n  var hexDigitArraySum36 = 0;\n  var hexDigitArraySum37 = 0;\n  var hexDigitArraySum38\
    \ = 0;\n  var hexDigitArraySum39 = 0;\n  var hexDigitArraySum40 = 0;\n  var hexDigitArraySum41\
    \ = 0;\n  var hexDigitArraySum42 = 0;\n  var hexDigitArraySum43 = 0;\n  var hexDigitArraySum44\
    \ = 0;\n  var hexDigitArraySum45 = 0;\n  var hexDigitArraySum46 = 0;\n  var hexDigitArraySum47\
    \ = 0;\n  var hexDigitArraySum48 = 0;\n  var hexDigitArraySum49 = 0;\n  var hexDigitArraySum50\
    \ = 0;\n  var hexDigitArraySum51 = 0;\n  var hexDigitArraySum52 = 0;\n  var hexDigitArraySum53\
    \ = 0;\n  var hexDigitArraySum54 = 0;\n  var hexDigit", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount/2;\n    let hexDigitCount3 = hexDigitCount2/2;\n\
    \    let hexDigitCount4 = hexDigitCount3/2;\n    let hexDigitCount5 = hexDigitCount4/2;\n\
    \    let hexDigitCount6 = hexDigitCount5/2;\n    let hexDigitCount7 = hexDigitCount6/2;\n\
    \    let hexDigitCount8 = hexDigitCount7/2;\n    let hexDigitCount9 = hexDigitCount8/2;\n\
    \    let hexDigitCount10 = hexDigitCount9/2;\n    let hexDigitCount11 = hexDigitCount10/2;\n\
    \    let hexDigitCount12 = hexDigitCount11/2;\n    let hexDigitCount13 = hexDigitCount12/2;\n\
    \    let hexDigitCount14 = hexDigitCount13/2;\n    let hexDigitCount15 = hexDigitCount14/2;\n\
    \    let hexDigitCount16 = hexDigitCount15/2;\n    let hexDigitCount17 = hexDigitCount16/2;\n\
    \    let hexDigitCount18 = hexDigitCount17/2;\n    let hexDigitCount19 = hexDigitCount18/2;\n\
    \    let hexDigitCount20 = hexDigitCount19/2;\n    let hexDigitCount21 = hexDigitCount20/2;\n\
    \    let hexDigitCount22 = hexDigitCount21/2;\n    let hexDigitCount23 = hexDigitCount22/2;\n\
    \    let hexDigitCount24 = hexDigitCount23/2;\n    let hexDigitCount25 = hexDigitCount24/2;\n\
    \    let hexDigitCount26 = hexDigitCount25/2;\n    let hexDigitCount27 = hexDigitCount26/2;\n\
    \    let hexDigitCount28 = hexDigitCount27/2;\n    let hexDigitCount29 = hexDigitCount28/2;\n\
    \    let hexDigitCount30 = hexDigitCount29/2;\n    let hexDigitCount31 = hexDigitCount30/2;\n\
    \    let hexDigitCount32 = hexDigitCount31/2;\n    let hexDigitCount33 = hexDigitCount32/2;\n\
    \    let hexDigitCount34 = hexDigitCount33/2;\n    let hexDigitCount35 = hexDigitCount34/2;\n\
    \    let hexDigitCount36 = hexDigitCount35/2;\n    let hexDigitCount37 = hexDigitCount36/2;\n\
    \    let hexDigitCount38 = hexDigitCount37/2;\n    let hexDigitCount39 = hexDigitCount38/2;\n\
    \    let hexDigitCount40 = hexDigitCount39/2;\n    let hexDigitCount41 = hexDigitCount",
  "    var hex = num.toUpperCase();\n    var hexDigits = hex.split(\"\");\n    var\
    \ hexDigitCount = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    var hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    var hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    var hexDigitCount33 = hexDigitCount", "    let hex = num.split(\"\");\n \
    \   let hex_rev = [];\n    for(let i = 0; i < hex.length; i++){\n        hex_rev.push(hex[i].charCodeAt(0)\
    \ - 64);\n    }\n    let primes = [];\n    for(let i = 0; i < hex_rev.length;\
    \ i++){\n        if(hex_rev[i] % 2 === 0){\n            primes.push(hex_rev[i]);\n\
    \        }\n    }\n    let prime_count = primes.length;\n    let prime_sum = 0;\n\
    \    for(let i = 0; i < primes.length; i++){\n        prime_sum += primes[i];\n\
    \    }\n    let prime_avg = prime_sum / prime_count;\n    let prime_avg = prime_avg\
    \ * prime_count;\n    let prime_avg = Math.floor(prime_avg);\n    let prime_avg\
    \ = prime_avg / prime_count;\n    let prime_avg = prime_avg * prime_count;\n \
    \   let prime_avg = prime_avg / prime_count;\n    let prime_avg = prime_avg *\
    \ prime_count;\n    let prime_avg = prime_avg / prime_count;\n    let prime_avg\
    \ = prime_avg * prime_count;\n    let prime_avg = prime_avg / prime_count;\n \
    \   let prime_avg = prime_avg * prime_count;\n    let prime_avg = prime_avg /\
    \ prime_count;\n    let prime_avg = prime_avg * prime_count;\n    let prime_avg\
    \ = prime_avg / prime_count;\n    let prime_avg = prime_avg * prime_count;\n \
    \   let prime_avg = prime_avg / prime_count;\n    let prime_avg = prime_avg *\
    \ prime_count;\n    let prime_avg = prime_avg / prime_count;\n    let prime_avg\
    \ = prime_avg * prime_count;\n    let prime_avg = prime_avg / prime_count;\n \
    \   let prime_avg = prime_avg * prime_count;\n    let prime_avg = prime_avg /\
    \ prime_count;\n    let prime_avg = prime_avg * prime_count;\n    let prime_avg\
    \ = prime_avg / prime_count;\n    let prime_avg = prime_avg * prime_count;\n \
    \   let prime_avg = prime_avg / prime_count;\n    let prime_avg = prime_avg *\
    \ prime_count;\n    let prime_avg = prime_avg / prime_count;\n    let prime_avg\
    \ = prime_avg * prime_count;\n    let prime_avg = prime_avg / prime_count;\n \
    \   let prime_avg = prime_avg * prime_count;\n    let prime_av", "    let hex\
    \ = num.replace(/[^0-9A-F]/g,\"\");\n    let hexDigits = hex.length;\n    let\
    \ primes = [];\n    let primeCount = 0;\n    let primeDigit = 2;\n    let primeCountDigit\
    \ = 2;\n    let primeCountDigit2 = 2;\n    let primeCountDigit3 = 2;\n    let\
    \ primeCountDigit4 = 2;\n    let primeCountDigit5 = 2;\n    let primeCountDigit6\
    \ = 2;\n    let primeCountDigit7 = 2;\n    let primeCountDigit8 = 2;\n    let\
    \ primeCountDigit9 = 2;\n    let primeCountDigit10 = 2;\n    let primeCountDigit11\
    \ = 2;\n    let primeCountDigit12 = 2;\n    let primeCountDigit13 = 2;\n    let\
    \ primeCountDigit14 = 2;\n    let primeCountDigit15 = 2;\n    let primeCountDigit16\
    \ = 2;\n    let primeCountDigit17 = 2;\n    let primeCountDigit18 = 2;\n    let\
    \ primeCountDigit19 = 2;\n    let primeCountDigit20 = 2;\n    let primeCountDigit21\
    \ = 2;\n    let primeCountDigit22 = 2;\n    let primeCountDigit23 = 2;\n    let\
    \ primeCountDigit24 = 2;\n    let primeCountDigit25 = 2;\n    let primeCountDigit26\
    \ = 2;\n    let primeCountDigit27 = 2;\n    let primeCountDigit28 = 2;\n    let\
    \ primeCountDigit29 = 2;\n    let primeCountDigit30 = 2;\n    let primeCountDigit31\
    \ = 2;\n    let primeCountDigit32 = 2;\n    let primeCountDigit33 = 2;\n    let\
    \ primeCountDigit34 = 2;\n    let primeCountDigit35 = 2;\n    let primeCountDigit36\
    \ = 2;\n    let primeCountDigit37 = 2;\n    let primeCountDigit38 = 2;\n    let\
    \ primeCountDigit39 = 2;\n    let primeCountDigit40 = 2;\n    let primeCountDigit41\
    \ = 1;\n    let primeCountDigit42 = 2;\n    let primeCountDigit43 = 2;\n    let\
    \ primeCountDigit44 = 2;\n    let primeCountDigit45 = 2;\n    let primeCountDigit46\
    \ = 2;\n    let primeCountDigit47 = 2;\n    let primeCountDigit48 = 2;\n    let\
    \ primeCountDigit49 = 2;\n    let primeCountDigit50 = 2;\n    let primeCountDigit51\
    \ = 1;\n    let primeCountDigit52 = 2;\n    let primeCountDigit53 = 2;\n    let\
    \ primeCountDigit54 = 2;\n    let primeCountDigit55 = 2;\n    let primeCountDigit56\
    \ = 2;\n    let primeCountDigit57 = 2;\n    let primeCountDigit58 = 2;\n    let\
    \ primeCountDigit59 = 2;\n    let primeCountDigit60 = 2;\n    let primeCountDigit61\
    \ = 1;\n    let primeCountDigit62 = 2;\n    let primeCountDigit63 = 2;\n    let\
    \ primeCountDigit64 = 2;\n    let primeCountDigit65 = 2;\n    let primeCountDigit66\
    \ = 2;\n    let primeCountDigit67 = 2;\n    let primeCountDigit68", "    let hex\
    \ = num.toString().split('');\n    let count = 0;\n    for(let i = 0; i < hex.length;\
    \ i++){\n        if(hex[i] === 'A' || hex[i] === 'B' || hex[i] === 'C' || hex[i]\
    \ === 'D' || hex[i] === 'E' || hex[i] === 'F'){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n", "    let hex = num;\n    let hexDigits =\
    \ hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount/2;\n    let hexDigitCount3 = hexDigitCount2/2;\n    let hexDigitCount4\
    \ = hexDigitCount3/2;\n    let hexDigitCount5 = hexDigitCount4/2;\n    let hexDigitCount6\
    \ = hexDigitCount5/2;\n    let hexDigitCount7 = hexDigitCount6/2;\n    let hexDigitCount8\
    \ = hexDigitCount7/2;\n    let hexDigitCount9 = hexDigitCount8/2;\n    let hexDigitCount10\
    \ = hexDigitCount9/2;\n    let hexDigitCount11 = hexDigitCount10/2;\n    let hexDigitCount12\
    \ = hexDigitCount11/2;\n    let hexDigitCount13 = hexDigitCount12/2;\n    let\
    \ hexDigitCount14 = hexDigitCount13/2;\n    let hexDigitCount15 = hexDigitCount14/2;\n\
    \    let hexDigitCount16 = hexDigitCount15/2;\n    let hexDigitCount17 = hexDigitCount16/2;\n\
    \    let hexDigitCount18 = hexDigitCount17/2;\n    let hexDigitCount19 = hexDigitCount18/2;\n\
    \    let hexDigitCount20 = hexDigitCount19/2;\n    let hexDigitCount21 = hexDigitCount20/2;\n\
    \    let hexDigitCount22 = hexDigitCount21/2;\n    let hexDigitCount23 = hexDigitCount22/2;\n\
    \    let hexDigitCount24 = hexDigitCount23/2;\n    let hexDigitCount25 = hexDigitCount24/2;\n\
    \    let hexDigitCount26 = hexDigitCount25/2;\n    let hexDigitCount27 = hexDigitCount26/2;\n\
    \    let hexDigitCount28 = hexDigitCount27/2;\n    let hexDigitCount29 = hexDigitCount28/2;\n\
    \    let hexDigitCount30 = hexDigitCount29/2;\n    let hexDigitCount31 = hexDigitCount30/2;\n\
    \    let hexDigitCount32 = hexDigitCount31/2;\n    let hexDigitCount33 = hexDigitCount32/2;\n\
    \    let hexDigitCount34 = hexDigitCount33/2;\n    let hexDigitCount35 = hexDigitCount34/2;\n\
    \    let hexDigitCount36 = hexDigitCount35/2;\n    let hexDigitCount37 = hexDigitCount36/2;\n\
    \    let hexDigitCount38 = hexDigitCount37/2;\n    let hexDigitCount39 = hexDigitCount38/2;\n\
    \    let hexDigitCount40 = hexDigitCount39/2;\n    let hexDigitCount41 = hexDigitCount40/",
  "    let hex = num.split(\"\");\n    let hex2 = [];\n    let hex3 = [];\n    let\
    \ hex4 = [];\n    let hex5 = [];\n    let hex6 = [];\n    let hex7 = [];\n   \
    \ let hex8 = [];\n    let hex9 = [];\n    let hex10 = [];\n    let hex11 = [];\n\
    \    let hex12 = [];\n    let hex13 = [];\n    let hex14 = [];\n    let hex15\
    \ = [];\n    let hex16 = [];\n    let hex17 = [];\n    let hex18 = [];\n    let\
    \ hex19 = [];\n    let hex20 = [];\n    let hex21 = [];\n    let hex22 = [];\n\
    \    let hex23 = [];\n    let hex24 = [];\n    let hex25 = [];\n    let hex26\
    \ = [];\n    let hex27 = [];\n    let hex28 = [];\n    let hex29 = [];\n    let\
    \ hex30 = [];\n    let hex31 = [];\n    let hex32 = [];\n    let hex33 = [];\n\
    \    let hex34 = [];\n    let hex35 = [];\n    let hex36 = [];\n    let hex37\
    \ = [];\n    let hex38 = [];\n    let hex39 = [];\n    let hex40 = [];\n    let\
    \ hex41 = [];\n    let hex42 = [];\n    let hex43 = [];\n    let hex44 = [];\n\
    \    let hex45 = [];\n    let hex46 = [];\n    let hex47 = [];\n    let hex48\
    \ = [];\n    let hex49 = [];\n    let hex50 = [];\n    let hex51 = [];\n    let\
    \ hex52 = [];\n    let hex53 = [];\n    let hex54 = [];\n    let hex55 = [];\n\
    \    let hex56 = [];\n    let hex57 = [];\n    let hex58 = [];\n    let hex59\
    \ = [];\n    let hex60 = [];\n    let hex61 = [];\n    let hex62 = [];\n    let\
    \ hex63 = [];\n    let hex64 = [];\n    let hex65 = [];\n    let hex66 = [];\n\
    \    let hex67 = [];\n    let hex68 = [];\n    let hex69 = [];\n    let hex70\
    \ = [];\n    let hex71 = [];\n    let hex72 = [];\n    let hex73 = [];\n    let\
    \ hex74 = [];\n    let hex75 = [];\n    let hex76 = [];\n    let hex77 = [];\n\
    \    let hex78 = [];\n    let hex79 = [];\n    let hex80 = [];\n    let hex81\
    \ = [];\n    let hex82 = [];\n    let hex83 = [];\n    let hex84 = [];\n    let\
    \ hex85 = [];\n    let hex86 = [];\n    let hex87 = [];\n    let hex88 = [];\n\
    \    let hex89 = [];\n    let hex90 = [];\n    let hex91 = [];\n    let hex92\
    \ = [];\n    let hex93 = [];\n    let hex94 = [];\n    let hex95 = [];\n    let\
    \ hex96 = [];\n    let hex97 = [];", "    var hex = num.toString();\n    var hexLength\
    \ = hex.length;\n    var hexDigits = hex.split(\"\");\n    var hexDigitsLength\
    \ = hexDigits.length;\n    var hexDigit;\n    var hexDigitCount = 0;\n    var\
    \ hexDigitCount2 = 0;\n    var hexDigitCount3 = 0;\n    var hexDigitCount4 = 0;\n\
    \    var hexDigitCount5 = 0;\n    var hexDigitCount6 = 0;\n    var hexDigitCount7\
    \ = 0;\n    var hexDigitCount8 = 0;\n    var hexDigitCount9 = 0;\n    var hexDigitCount10\
    \ = 0;\n    var hexDigitCount11 = 0;\n    var hexDigitCount12 = 0;\n    var hexDigitCount13\
    \ = 0;\n    var hexDigitCount14 = 0;\n    var hexDigitCount15 = 0;\n    var hexDigitCount16\
    \ = 0;\n    var hexDigitCount17 = 0;\n    var hexDigitCount18 = 0;\n    var hexDigitCount19\
    \ = 0;\n    var hexDigitCount20 = 0;\n    var hexDigitCount21 = 0;\n    var hexDigitCount22\
    \ = 0;\n    var hexDigitCount23 = 0;\n    var hexDigitCount24 = 0;\n    var hexDigitCount25\
    \ = 0;\n    var hexDigitCount26 = 0;\n    var hexDigitCount27 = 0;\n    var hexDigitCount28\
    \ = 0;\n    var hexDigitCount29 = 0;\n    var hexDigitCount30 = 0;\n    var hexDigitCount31\
    \ = 0;\n    var hexDigitCount32 = 0;\n    var hexDigitCount33 = 0;\n    var hexDigitCount34\
    \ = 0;\n    var hexDigitCount35 = 0;\n    var hexDigitCount36 = 0;\n    var hexDigitCount37\
    \ = 0;\n    var hexDigitCount38 = 0;\n    var hexDigitCount39 = 0;\n    var hexDigitCount40\
    \ = 0;\n    var hexDigitCount41 = 0;\n    var hexDigitCount42 = 0;\n    var hexDigitCount43\
    \ = 0;\n    var hexDigitCount44 = 0;\n    var hexDigitCount45 = 0;\n    var hexDigitCount46\
    \ = 0;\n    var hexDigitCount47 = 0;\n    var hexDigitCount48 = 0;\n    var hexDigitCount49\
    \ = 0;\n    var hexDigitCount50 = 0;\n    var hexDigitCount51 = 0;\n    var hexDigitCount52\
    \ = 0;\n    var hexDigitCount53 = 0;\n    var hexDigitCount54 = 0;\n    var hexDigitCount55\
    \ = 0;\n    var hexDigitCount56 = 0;\n    var hexDigitCount57 = 0;\n    var hexDigitCount58\
    \ = 0;\n    var hexDigitCount59 = 0;\n    var hexDigitCount60 = 0;\n    var hexDigitCount61\
    \ = 0;\n    var hexDigitCount62 = 0;\n    var hexDigitCount63 = 0;\n    var hexDigitCount64\
    \ = 0;\n    var hexDigitCount65 = 0;\n    var hexDigitCount66 = 0;\n    var hexDigitCount67\
    \ = 0;\n    var hexDigitCount68 = 0;\n    var hexDigitCount69", "    let hex =\
    \ num;\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount/2;\n    let hexDigitCount3 = hexDigitCount2/2;\n\
    \    let hexDigitCount4 = hexDigitCount3/2;\n    let hexDigitCount5 = hexDigitCount4/2;\n\
    \    let hexDigitCount6 = hexDigitCount5/2;\n    let hexDigitCount7 = hexDigitCount6/2;\n\
    \    let hexDigitCount8 = hexDigitCount7/2;\n    let hexDigitCount9 = hexDigitCount8/2;\n\
    \    let hexDigitCount10 = hexDigitCount9/2;\n    let hexDigitCount11 = hexDigitCount10/2;\n\
    \    let hexDigitCount12 = hexDigitCount11/2;\n    let hexDigitCount13 = hexDigitCount12/2;\n\
    \    let hexDigitCount14 = hexDigitCount13/2;\n    let hexDigitCount15 = hexDigitCount14/2;\n\
    \    let hexDigitCount16 = hexDigitCount15/2;\n    let hexDigitCount17 = hexDigitCount16/2;\n\
    \    let hexDigitCount18 = hexDigitCount17/2;\n    let hexDigitCount19 = hexDigitCount18/2;\n\
    \    let hexDigitCount20 = hexDigitCount19/2;\n    let hexDigitCount21 = hexDigitCount20/2;\n\
    \    let hexDigitCount22 = hexDigitCount21/2;\n    let hexDigitCount23 = hexDigitCount22/2;\n\
    \    let hexDigitCount24 = hexDigitCount23/2;\n    let hexDigitCount25 = hexDigitCount24/2;\n\
    \    let hexDigitCount26 = hexDigitCount25/2;\n    let hexDigitCount27 = hexDigitCount26/2;\n\
    \    let hexDigitCount28 = hexDigitCount27/2;\n    let hexDigitCount29 = hexDigitCount28/2;\n\
    \    let hexDigitCount30 = hexDigitCount29/2;\n    let hexDigitCount31 = hexDigitCount30/2;\n\
    \    let hexDigitCount32 = hexDigitCount31/2;\n    let hexDigitCount33 = hexDigitCount32/2;\n\
    \    let hexDigitCount34 = hexDigitCount33/2;\n    let hexDigitCount35 = hexDigitCount34/2;\n\
    \    let hexDigitCount36 = hexDigitCount35/2;\n    let hexDigitCount37 = hexDigitCount36/2;\n\
    \    let hexDigitCount38 = hexDigitCount37/2;\n    let hexDigitCount39 = hexDigitCount38/2;\n\
    \    let hexDigitCount40 = hexDigitCount39/2;\n    let hexDigitCount41 = hexDigitCount40",
  "    var hex = num.toString().split('');\n    var count = 0;\n    for(var i = 0;\
    \ i < hex.length; i++){\n        if(hex[i] == 'A' || hex[i] == 'B' || hex[i] ==\
    \ 'C' || hex[i] == 'D' || hex[i] == 'E' || hex[i] == 'F'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let hex = num;\n    let hexDigits\
    \ = hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimes = 0;\n    let hexDigitCountPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimes = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimes = 0;\n    let\
    \ hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimes = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = 0;\n    let hexDigitCountPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes",
  "    var hex = num;\n    var hexDigits = hex.split(\"\");\n    var hexDigitCount\
    \ = hexDigits.length;\n    var hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    var hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    var hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    var hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    var hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    var hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    var hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    var hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    var hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    var hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    var hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    var hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    var hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    var hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    var hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    var hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    var hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    var hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    var hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    var hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    var hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    var hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    var hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    var hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    var hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    var hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    var hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    var hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    var hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    var hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    var hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    var hexDigitCount33 = hexDigitCount32", "    let hex = num;\n    let hexDigits\
    \ = hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount/2;\n    let hexDigitCount3 = hexDigitCount2/2;\n    let hexDigitCount4\
    \ = hexDigitCount3/2;\n    let hexDigitCount5 = hexDigitCount4/2;\n    let hexDigitCount6\
    \ = hexDigitCount5/2;\n    let hexDigitCount7 = hexDigitCount6/2;\n    let hexDigitCount8\
    \ = hexDigitCount7/2;\n    let hexDigitCount9 = hexDigitCount8/2;\n    let hexDigitCount10\
    \ = hexDigitCount9/2;\n    let hexDigitCount11 = hexDigitCount10/2;\n    let hexDigitCount12\
    \ = hexDigitCount11/2;\n    let hexDigitCount13 = hexDigitCount12/2;\n    let\
    \ hexDigitCount14 = hexDigitCount13/2;\n    let hexDigitCount15 = hexDigitCount14/2;\n\
    \    let hexDigitCount16 = hexDigitCount15/2;\n    let hexDigitCount17 = hexDigitCount16/2;\n\
    \    let hexDigitCount18 = hexDigitCount17/2;\n    let hexDigitCount19 = hexDigitCount18/2;\n\
    \    let hexDigitCount20 = hexDigitCount19/2;\n    let hexDigitCount21 = hexDigitCount20/2;\n\
    \    let hexDigitCount22 = hexDigitCount21/2;\n    let hexDigitCount23 = hexDigitCount22/2;\n\
    \    let hexDigitCount24 = hexDigitCount23/2;\n    let hexDigitCount25 = hexDigitCount24/2;\n\
    \    let hexDigitCount26 = hexDigitCount25/2;\n    let hexDigitCount27 = hexDigitCount26/2;\n\
    \    let hexDigitCount28 = hexDigitCount27/2;\n    let hexDigitCount29 = hexDigitCount28/2;\n\
    \    let hexDigitCount30 = hexDigitCount29/2;\n    let hexDigitCount31 = hexDigitCount30/2;\n\
    \    let hexDigitCount32 = hexDigitCount31/2;\n    let hexDigitCount33 = hexDigitCount32/2;\n\
    \    let hexDigitCount34 = hexDigitCount33/2;\n    let hexDigitCount35 = hexDigitCount34/2;\n\
    \    let hexDigitCount36 = hexDigitCount35/2;\n    let hexDigitCount37 = hexDigitCount36/2;\n\
    \    let hexDigitCount38 = hexDigitCount37/2;\n    let hexDigitCount39 = hexDigitCount38/2;\n\
    \    let hexDigitCount40 = hexDigitCount39/2;\n    let hexDigitCount41 = hexDigitCount40/",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitCount; i++){\n        let hexDigit = hexDigits[i];\n\
    \        if(hexDigit == \"A\" || hexDigit == \"B\" || hexDigit == \"C\" || hexDigit\
    \ == \"D\" || hexDigit == \"E\" || hexDigit == \"F\"){\n            hexDigitPrimes.push(hexDigit);\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    for(let i = 0; i < hexDigitPrimeCount;\
    \ i++){\n        let hexDigitPrime = hexDigitPrimes[i];\n        for(let j = 0;\
    \ j < hexDigitCount; j++){\n            let hexDigit = hexDigits[j];\n       \
    \     if(hexDigitPrime == hexDigit){\n                hexDigitPrimeCount--;\n\
    \            }\n        }\n    }\n    return hexDigitPrimeCount;\n}\n", "    let\
    \ hex = num.toUpperCase();\n    let hexDigits = hex.split('');\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    for(let i = 0; i < hexDigitCount; i++){\n        if(hexDigits[i] ===\
    \ 'A' || hexDigits[i] === 'B' || hexDigits[i] === 'C' || hexDigits[i] === 'D'\
    \ || hexDigits[i] === 'E' || hexDigits[i] === 'F'){\n            hexDigitPrimes.push(hexDigits[i]);\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.length;\n    let hexDigitPrimeCount2 = hexDigitPrimeCount -\
    \ 1;\n    let hexDigitPrimeCount3 = hexDigitPrimeCount - 2;\n    let hexDigitPrimeCount4\
    \ = hexDigitPrimeCount - 3;\n    let hexDigitPrimeCount5 = hexDigitPrimeCount\
    \ - 4;\n    let hexDigitPrimeCount6 = hexDigitPrimeCount - 5;\n    let hexDigitPrimeCount7\
    \ = hexDigitPrimeCount - 6;\n    let hexDigitPrimeCount8 = hexDigitPrimeCount\
    \ - 7;\n    let hexDigitPrimeCount9 = hexDigitPrimeCount - 8;\n    let hexDigitPrimeCount10\
    \ = hexDigitPrimeCount - 9;\n    let hexDigitPrimeCount11 = hexDigitPrimeCount\
    \ - 10;\n    let hexDigitPrimeCount12 = hexDigitPrimeCount - 11;\n    let hexDigitPrimeCount13\
    \ = hexDigitPrimeCount - 12;\n    let hexDigitPrimeCount14 = hexDigitPrimeCount\
    \ - 13;\n    let hexDigitPrimeCount15 = hexDigitPrimeCount - 14;\n    let hexDigitPrimeCount16\
    \ = hexDigitPrimeCount - 15;\n    let hexDigitPrimeCount17 = hexDigitPrimeCount\
    \ - 16;\n    let hexDigitPrimeCount18 = hexDigitPrimeCount - 17;\n    let hexDigitPrimeCount19\
    \ = hexDigitPrimeCount - 18;\n    let hexDigitPrimeCount20 = hexDigitPrimeCount\
    \ - 19;\n    let hexDigitPrimeCount21 = hexDigitPrimeCount - 20;\n    let hexDigitPrimeCount22\
    \ = hexDigitPrimeCount - 21;\n    let hexDigitPrimeCount23 = hexDigitPrimeCount\
    \ - 22;\n    let hexDigitPrimeCount24 = hexDigitPrimeCount - 23;\n    let hexDigitPrimeCount25\
    \ = hexDigitPrimeCount - 24;\n    let hexDigitPrimeCount26 = hexDigitPri", " \
    \   let hex = num.toUpperCase();\n    let hexDigits = [...hex];\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimePrimes = [];\n    let hexDigitPrimePrimeCount = 0;\n\
    \    for(let i = 0; i < hexDigitCount; i++){\n        if(hexDigits[i] === 'A'\
    \ || hexDigits[i] === 'B' || hexDigits[i] === 'C' || hexDigits[i] === 'D' || hexDigits[i]\
    \ === 'E' || hexDigits[i] === 'F'){\n            hexDigitPrimes.push(hexDigits[i]);\n\
    \            hexDigitPrimeCount++;\n        }\n    }\n    for(let i = 0; i < hexDigitPrimeCount;\
    \ i++){\n        if(hexDigitPrimes[i] === hexDigits[i]){\n            hexDigitPrimePrimes.push(hexDigitPrimes[i]);\n\
    \            hexDigitPrimePrimeCount++;\n        }\n    }\n    let hexDigitPrimePrimeCount\
    \ = hexDigitPrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n   \
    \ let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n    let\
    \ hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n   \
    \ let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n    let\
    \ hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n   \
    \ let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n    let\
    \ hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length;\n    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrime",
  "    let hex = num.split(\"\");\n    let hex2 = hex.map(x => parseInt(x, 16));\n\
    \    let hex3 = hex2.map(x => x.toString(16));\n    let hex4 = hex3.map(x => x.padStart(2,\
    \ \"0\"));\n    let hex5 = hex4.map(x => x.padEnd(2, \"0\"));\n    let hex6 =\
    \ hex5.map(x => x.split(\"\").filter(x => x.includes(\"0\")));\n    let hex7 =\
    \ hex6.map(x => x.map(x => x.padStart(2, \"0\")));\n    let hex8 = hex7.map(x\
    \ => x.map(x => x.padEnd(2, \"0\")));\n    let hex9 = hex8.map(x => x.map(x =>\
    \ x.split(\"\").filter(x => x.includes(\"0\"))))\n    let hex10 = hex9.map(x =>\
    \ x.map(x => x.padStart(2, \"0\")));\n    let hex11 = hex10.map(x => x.map(x =>\
    \ x.padEnd(2, \"0\")));\n    let hex12 = hex11.map(x => x.map(x => x.split(\"\"\
    ).filter(x => x.includes(\"0\"))))\n    let hex13 = hex12.map(x => x.map(x =>\
    \ x.padStart(2, \"0\")));\n    let hex14 = hex13.map(x => x.map(x => x.padEnd(2,\
    \ \"0\")));\n    let hex15 = hex14.map(x => x.map(x => x.split(\"\").filter(x\
    \ => x.includes(\"0\"))))\n    let hex16 = hex15.map(x => x.map(x => x.padStart(2,\
    \ \"0\")));\n    let hex17 = hex16.map(x => x.map(x => x.padEnd(2, \"0\")));\n\
    \    let hex18 = hex17.map(x => x.map(x => x.split(\"\").filter(x => x.includes(\"\
    0\"))))\n    let hex19 = hex18.map(x => x.map(x => x.padStart(2, \"0\")));\n \
    \   let hex20 = hex19.map(x => x.map(x => x.padEnd(2, \"0\")));\n    let hex21\
    \ = hex20.map(x => x.map(x => x.split(\"\").filter(x => x.includes(\"0\"))))\n\
    \    let hex22 = hex21.map(x => x.map(x => x.padStart(2, \"0\")));\n    let hex23\
    \ = hex22.map(x => x.map(x => x.padEnd(2, \"0\")));\n    let hex24 = hex23.map(x\
    \ => x.map(x => x.split(\"\").filter(x => x.includes(\"0\"))))\n    let hex25\
    \ = hex24.map(x => x.map(", "    let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join('');\n\
    \    let primes = hex_key.primes;\n    let primes_count = hex_key.primes_count;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.primes_count_min;\n    let primes_count_max\
    \ = hex_key.primes_count_max;\n    let primes_count_min = hex_key.primes_count_min;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.primes_count_min;\n    let primes_count_max\
    \ = hex_key.primes_count_max;\n    let primes_count_min = hex_key.primes_count_min;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.primes_count_min;\n    let primes_count_max\
    \ = hex_key.primes_count_max;\n    let primes_count_min = hex_key.primes_count_min;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.primes_count_min;\n    let primes_count_max\
    \ = hex_key.primes_count_max;\n    let primes_count_min = hex_key.primes_count_min;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.primes_count_min;\n    let primes_count_max\
    \ = hex_key.primes_count_max;\n    let primes_count_min = hex_key.primes_count_min;\n\
    \    let primes_count_max = hex_key.primes_count_max;\n    let primes_count_min\
    \ = hex_key.primes_count_min;\n    let primes_count_max = hex_key.primes_count_max;\n\
    \    let primes_count_min = hex_key.prime", "    var hex_num = \"\";\n    var\
    \ hex = \"\";\n    var count = 0;\n    for(var i = 0; i < num.length; i++){\n\
    \        hex = num.charCodeAt(i).toString(16);\n        hex_num = hex + hex_num;\n\
    \    }\n    hex_num = hex_num.substr(0, hex_num.length-1);\n    for(var i = 0;\
    \ i < hex_num.length; i++){\n        if(hex_num.charAt(i) == \"A\"){\n       \
    \     count++;\n        }\n        if(hex_num.charAt(i) == \"B\"){\n         \
    \   count++;\n        }\n        if(hex_num.charAt(i) == \"C\"){\n           \
    \ count++;\n        }\n        if(hex_num.charAt(i) == \"D\"){\n            count++;\n\
    \        }\n        if(hex_num.charAt(i) == \"E\"){\n            count++;\n  \
    \      }\n        if(hex_num.charAt(i) == \"F\"){\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work. Try it with `num = \"ABED1A33\"`\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include a solution that works with your test cases. I tested it\
    \ and it works.\n<|/ c |>\n<| c |>\nThis doesn't work. Try it with `num = \"ABED1A33\"\
    `\n<|/ c |>\n<| c |>\nI edited my answer to include a solution that works with\
    \ your test cases. I tested it and it works.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. Try it with `num = \"ABED1A33\"`\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    let hexNum = num.replace(/[^A-F0-9]/g,'');\n    let hexNumArr = hexNum.split('');\n\
    \    let hexNumArr2 = hexNumArr.map(function(item){\n        return parseInt(item,16);\n\
    \    });\n    let hexNumArr3 = hexNumArr2.map(function(item){\n        return\
    \ item;\n    });\n    let hexNumArr4 = hexNumArr3.filter(function(item){\n   \
    \     return item > 0;\n    });\n    let hexNumArr5 = hexNumArr4.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr6 = hexNumArr5.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr7 = hexNumArr6.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr8 = hexNumArr7.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr9 = hexNumArr8.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr10 = hexNumArr9.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr11 = hexNumArr10.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr12 = hexNumArr11.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr13 = hexNumArr12.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr14 = hexNumArr13.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr15 = hexNumArr14.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr16 = hexNumArr15.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr17 = hexNumArr16.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr18 = hexNumArr17.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr19 = hexNumArr18.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr20 = hexNumArr19.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr21 = hexNumArr20.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr22 = hexNumArr21.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNumArr23 = hexNumArr22.map(function(item){\n\
    \        return item;\n    });\n    let hexNumArr24 = hexNumArr23.filter(function(item){\n\
    \        return item > 0;\n    });\n    let hexNum", "    var hex = num.split(\"\
    \");\n    var count = 0;\n    for(var i=0;i<hex.length;i++){\n        if(hex[i]==\"\
    A\"||hex[i]==\"B\"||hex[i]==\"C\"||hex[i]==\"D\"||hex[i]==\"E\"||hex[i]==\"F\"\
    ){\n            count++;\n        }\n    }\n    return count;\n}\n", "    let\
    \ hex = num.replace(/[^0-9A-F]/g,\"\");\n    let hexDigits = hex.split(\"\");\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigit", "  let hex = num;\n  let hexDigits = [...hex];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount32*", "  let hexadecimal = num;\n  let hexadecimal_digits = hexadecimal.split('');\n\
    \  let prime_numbers = [];\n  let prime_numbers_counter = 0;\n  let prime_numbers_counter_max\
    \ = 10;\n  for(let i = 0; i < hexadecimal_digits.length; i++){\n    let hexadecimal_digit\
    \ = hexadecimal_digits[i];\n    if(hexadecimal_digit === 'A' || hexadecimal_digit\
    \ === 'B' || hexadecimal_digit === 'C' || hexadecimal_digit === 'D' || hexadecimal_digit\
    \ === 'E' || hexadecimal_digit === 'F'){\n      prime_numbers.push(hexadecimal_digit);\n\
    \    }\n  }\n  for(let i = 0; i < prime_numbers.length; i++){\n    let prime_number\
    \ = prime_numbers[i];\n    let prime_numbers_counter = 0;\n    for(let j = 0;\
    \ j < prime_numbers_counter_max; j++){\n      if(prime_numbers_counter === prime_numbers.length){\n\
    \        break;\n      }\n      if(prime_number === prime_numbers[j]){\n     \
    \   prime_numbers_counter++;\n      }\n    }\n    if(prime_numbers_counter ===\
    \ prime_numbers_counter_max){\n      prime_numbers_counter_max++;\n    }\n  }\n\
    \  return prime_numbers_counter_max;\n}\n", "    let hexadecimal = num.split(\"\
    \");\n    let primes = [];\n    let prime_counter = 0;\n    let prime_counter2\
    \ = 0;\n    let prime_counter3 = 0;\n    let prime_counter4 = 0;\n    let prime_counter5\
    \ = 0;\n    let prime_counter6 = 0;\n    let prime_counter7 = 0;\n    let prime_counter8\
    \ = 0;\n    let prime_counter9 = 0;\n    let prime_counter10 = 0;\n    let prime_counter11\
    \ = 0;\n    let prime_counter12 = 0;\n    let prime_counter13 = 0;\n    let prime_counter14\
    \ = 0;\n    let prime_counter15 = 0;\n    let prime_counter16 = 0;\n    let prime_counter17\
    \ = 0;\n    let prime_counter18 = 0;\n    let prime_counter19 = 0;\n    let prime_counter20\
    \ = 0;\n    let prime_counter21 = 0;\n    let prime_counter22 = 0;\n    let prime_counter23\
    \ = 0;\n    let prime_counter24 = 0;\n    let prime_counter25 = 0;\n    let prime_counter26\
    \ = 0;\n    let prime_counter27 = 0;\n    let prime_counter28 = 0;\n    let prime_counter29\
    \ = 0;\n    let prime_counter30 = 0;\n    let prime_counter31 = 0;\n    let prime_counter32\
    \ = 0;\n    let prime_counter33 = 0;\n    let prime_counter34 = 0;\n    let prime_counter35\
    \ = 0;\n    let prime_counter36 = 0;\n    let prime_counter37 = 0;\n    let prime_counter38\
    \ = 0;\n    let prime_counter39 = 0;\n    let prime_counter40 = 0;\n    let prime_counter41\
    \ = 0;\n    let prime_counter42 = 0;\n    let prime_counter43 = 0;\n    let prime_counter44\
    \ = 0;\n    let prime_counter45 = 0;\n    let prime_counter46 = 0;\n    let prime_counter47\
    \ = 0;\n    let prime_counter48 = 0;\n    let prime_counter49 = 0;\n    let prime_counter50\
    \ = 0;\n    let prime_counter51 = 0;\n    let prime_counter52 = 0;\n    let prime_counter53\
    \ = 0;\n    let prime_counter54 = 0;\n    let prime_counter55 = 0;\n    let prime_counter56\
    \ = 0;\n    let prime_counter57 = 0;\n    let prime_counter58 = 0;\n    let prime_counter59\
    \ = 0;\n    let prime_counter60 = 0;\n    let prime_counter61 = 0;\n    let prime_counter62\
    \ = 0;\n    let prime_counter63 = 0;\n    let prime_counter64 = 0;\n    let prime_counter65\
    \ = 0;\n    let prime_counter66 = 0;\n    let prime_counter67 = 0;\n    let prime_counter68\
    \ = 0;\n    let prime_counter69 = 0;\n    let prime_counter70 = 0;\n    let prime_counter71\
    \ = 0;\n    let prime_counter72 = 0;", "    let hex = num.split(\"\");\n    let\
    \ hex_rev = [];\n    for(let i = 0; i < hex.length; i++){\n        hex_rev.push(hex[hex.length\
    \ - 1 - i]);\n    }\n    let prime_count = 0;\n    let prime_digits = [];\n  \
    \  for(let i = 0; i < hex_rev.length; i++){\n        if(hex_rev[i] === \"A\" ||\
    \ hex_rev[i] === \"B\" || hex_rev[i] === \"C\" || hex_rev[i] === \"D\" || hex_rev[i]\
    \ === \"E\" || hex_rev[i] === \"F\"){\n            prime_digits.push(hex_rev[i]);\n\
    \        }\n    }\n    for(let i = 0; i < prime_digits.length; i++){\n       \
    \ if(prime_digits[i] === \"2\"){\n            prime_count++;\n        }\n    }\n\
    \    return prime_count;\n}\n</code>\n<|/ a tags=javascript,primes |>\n<| c |>\n\
    Thank you for taking the time to write this out. I am still a beginner at Javascript\
    \ and I appreciate you taking the time to write this out. I will try to implement\
    \ this and see how it goes. Thank you again!\n<|/ c |>\n<| c |>\nI implemented\
    \ this and it works perfectly. Thank you so much!\n<|/ c |>\n<| c |>\nNo problem!\
    \ Glad I could help!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16));\n  let primes = hex.filter(x => x.includes(\"\
    0\")).map(x => parseInt(x, 16));\n  let primesCount = primes.length;\n  let primesSum\
    \ = primes.reduce((a, b) => a + b, 0);\n  let primesSum2 = primes.reduce((a, b)\
    \ => a + b, 0);\n  let primesSum3 = primes.reduce((a, b) => a + b, 0);\n  let\
    \ primesSum4 = primes.reduce((a, b) => a + b, 0);\n  let primesSum5 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum6 = primes.reduce((a, b) => a + b, 0);\n  let\
    \ primesSum7 = primes.reduce((a, b) => a + b, 0);\n  let primesSum8 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum9 = primes.reduce((a, b) => a + b, 0);\n  let\
    \ primesSum10 = primes.reduce((a, b) => a + b, 0);\n  let primesSum11 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum12 = primes.reduce((a, b) => a + b, 0);\n \
    \ let primesSum13 = primes.reduce((a, b) => a + b, 0);\n  let primesSum14 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum15 = primes.reduce((a, b) => a + b, 0);\n \
    \ let primesSum16 = primes.reduce((a, b) => a + b, 0);\n  let primesSum17 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum18 = primes.reduce((a, b) => a + b, 0);\n \
    \ let primesSum19 = primes.reduce((a, b) => a + b, 0);\n  let primesSum20 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum21 = primes.reduce((a, b) => a + b, 0);\n \
    \ let primesSum22 = primes.reduce((a, b) => a + b, 0);\n  let primesSum23 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum24 = primes.reduce((a, b) => a + b, 0);\n \
    \ let primesSum25 = primes.reduce((a, b) => a + b, 0);\n  let primesSum26 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum27 = primes.reduce((a, b) => a + b, 0);\n \
    \ let primesSum28 = primes.reduce((a, b) => a + b, 0);\n  let primesSum29 = primes.reduce((a,\
    \ b) => a + b, 0);\n  let primesSum30 = primes.reduce((a, b) => ", "  var hex\
    \ = num;\n  var hexLength = hex.length;\n  var hexDigits = \"0123456789ABCDEF\"\
    ;\n  var hexDigitCount = hexDigits.length;\n  var hexDigitCount2 = hexDigitCount*2;\n\
    \  var hexDigitCount3 = hexDigitCount*3;\n  var hexDigitCount4 = hexDigitCount*4;\n\
    \  var hexDigitCount5 = hexDigitCount*5;\n  var hexDigitCount6 = hexDigitCount*6;\n\
    \  var hexDigitCount7 = hexDigitCount*7;\n  var hexDigitCount8 = hexDigitCount*8;\n\
    \  var hexDigitCount9 = hexDigitCount*9;\n  var hexDigitCount10 = hexDigitCount*10;\n\
    \  var hexDigitCount11 = hexDigitCount*11;\n  var hexDigitCount12 = hexDigitCount*12;\n\
    \  var hexDigitCount13 = hexDigitCount*13;\n  var hexDigitCount14 = hexDigitCount*14;\n\
    \  var hexDigitCount15 = hexDigitCount*15;\n  var hexDigitCount16 = hexDigitCount*16;\n\
    \  var hexDigitCount17 = hexDigitCount*17;\n  var hexDigitCount18 = hexDigitCount*18;\n\
    \  var hexDigitCount19 = hexDigitCount*19;\n  var hexDigitCount20 = hexDigitCount*20;\n\
    \  var hexDigitCount21 = hexDigitCount*21;\n  var hexDigitCount22 = hexDigitCount*22;\n\
    \  var hexDigitCount23 = hexDigitCount*23;\n  var hexDigitCount24 = hexDigitCount*24;\n\
    \  var hexDigitCount25 = hexDigitCount*25;\n  var hexDigitCount26 = hexDigitCount*26;\n\
    \  var hexDigitCount27 = hexDigitCount*27;\n  var hexDigitCount28 = hexDigitCount*28;\n\
    \  var hexDigitCount29 = hexDigitCount*29;\n  var hexDigitCount30 = hexDigitCount*30;\n\
    \  var hexDigitCount31 = hexDigitCount*31;\n  var hexDigitCount32 = hexDigitCount*32;\n\
    \  var hexDigitCount33 = hexDigitCount*33;\n  var hexDigitCount34 = hexDigitCount*34;\n\
    \  var hexDigitCount35 = hexDigitCount*35;\n  var hexDigitCount36 = hexDigitCount*36;\n\
    \  var hexDigitCount37 = hexDigitCount*37;\n  var hexDigitCount38 = hexDigitCount*38;\n\
    \  var hexDigitCount39 = hexDigitCount*39;\n  var hexDigitCount40 = hexDigitCount*40;\n\
    \  var hexDigitCount4", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split('');\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCountPrime = 0;\n  let\
    \ hexDigitCountPrime2 = 1;\n  let hexDigitCountPrime3 = 1;\n  let hexDigitCountPrime4\
    \ = 1;\n  let hexDigitCountPrime5 = 1;\n  let hexDigitCountPrime6 = 1;\n  let\
    \ hexDigitCountPrime7 = 1;\n  let hexDigitCountPrime8 = 1;\n  let hexDigitCountPrime9\
    \ = 1;\n  let hexDigitCountPrime10 = 1;\n  let hexDigitCountPrime11 = 1;\n  let\
    \ hexDigitCountPrime12 = 1;\n  let hexDigitCountPrime13 = 1;\n  let hexDigitCountPrime14\
    \ = 1;\n  let hexDigitCountPrime15 = 1;\n  let hexDigitCountPrime16 = 1;\n  let\
    \ hexDigitCountPrime17 = 1;\n  let hexDigitCountPrime18 = 1;\n  let hexDigitCountPrime19\
    \ = 1;\n  let hexDigitCountPrime20 = 1;\n  let hexDigitCountPrime21 = 1;\n  let\
    \ hexDigitCountPrime22 = 1;\n  let hexDigitCountPrime23 = 1;\n  let hexDigitCountPrime24\
    \ = 1;\n  let hexDigitCountPrime25 = 1;\n  let hexDigitCountPrime26 = 1;\n  let\
    \ hexDigitCountPrime27 = 1;\n  let hexDigitCountPrime28 = 1;\n  let hexDigitCountPrime29\
    \ = 1;\n  let hexDigitCountPrime30 = 1;\n  let hexDigitCountPrime31 = 1;\n  let\
    \ hexDigitCountPrime32 = 1;\n  let hexDigitCountPrime33 = 1;\n  let hexDigitCountPrime34\
    \ = 1;\n  let hexDigitCountPrime35 = 1;\n  let hexDigitCountPrime36 = 1;\n  let\
    \ hexDigitCountPrime37 = 1;\n  let hexDigitCountPrime38 = 1;\n  let hexDigitCountPrime39\
    \ = 1;\n  let hexDigitCountPrime40 = 1;\n  let hexDigitCountPrime41 = 1;\n  let\
    \ hexDigitCountPrime42 = 1;\n  let hexDigitCountPrime43 = 1;\n  let hexDigitCountPrime44\
    \ = 1;\n  let hexDigitCountPrime45 = 1;\n  let hexDigitCountPrime46 = 1;\n  let\
    \ hexDigitCountPrime47 = 1;\n  let hexDigitCountPrime48 = 1;\n  let hexDigitCountPrime49\
    \ = 1;\n  let hexDigitCountPrime50 = 1;\n  let hexDigitCountPrime51 = 1;\n  let\
    \ hexDigitCountPrime52 = 1;\n  let hexDigitCountPrime53 = 1;\n  let hexDigitCountPrime54\
    \ = 1;\n  let hex", "    let hex = num.toUpperCase();\n    let hexLength = hex.length;\n\
    \    let hexDigits = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount", "    let hex = num.toUpperCase();\n    let hexDigits\
    \ = hex.split('');\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime\
    \ = 0;\n    let hexDigitCountPrime2 = hexDigitCount;\n    let hexDigitCountPrime3\
    \ = hexDigitCount;\n    let hexDigitCountPrime4 = hexDigitCount;\n    let hexDigitCountPrime5\
    \ = hexDigitCount;\n    let hexDigitCountPrime6 = hexDigitCount;\n    let hexDigitCountPrime7\
    \ = hexDigitCount;\n    let hexDigitCountPrime8 = hexDigitCount;\n    let hexDigitCountPrime9\
    \ = hexDigitCount;\n    let hexDigitCountPrime10 = hexDigitCount;\n    let hexDigitCountPrime11\
    \ = hexDigitCount;\n    let hexDigitCountPrime12 = hexDigitCount;\n    let hexDigitCountPrime13\
    \ = hexDigitCount;\n    let hexDigitCountPrime14 = hexDigitCount;\n    let hexDigitCountPrime15\
    \ = hexDigitCount;\n    let hexDigitCountPrime16 = hexDigitCount;\n    let hexDigitCountPrime17\
    \ = hexDigitCount;\n    let hexDigitCountPrime18 = hexDigitCount;\n    let hexDigitCountPrime19\
    \ = hexDigitCount;\n    let hexDigitCountPrime20 = hexDigitCount;\n    let hexDigitCountPrime21\
    \ = hexDigitCount;\n    let hexDigitCountPrime22 = hexDigitCount;\n    let hexDigitCountPrime23\
    \ = hexDigitCount;\n    let hexDigitCountPrime24 = hexDigitCount;\n    let hexDigitCountPrime25\
    \ = hexDigitCount;\n    let hexDigitCountPrime26 = hexDigitCount;\n    let hexDigitCountPrime27\
    \ = hexDigitCount;\n    let hexDigitCountPrime28 = hexDigitCount;\n    let hexDigitCountPrime29\
    \ = hexDigitCount;\n    let hexDigitCountPrime30 = hexDigitCount;\n    let hexDigitCountPrime31\
    \ = hexDigitCount;\n    let hexDigitCountPrime32 = hexDigitCount;\n    let hexDigitCountPrime33\
    \ = hexDigitCount;\n    let hexDigitCountPrime34 = hexDigitCount;\n    let hexDigitCountPrime35\
    \ = hexDigitCount;\n    let hexDigitCountPrime36 = hexDigitCount;\n    let hexDigitCountPrime37\
    \ = hexDigitCount;\n    let hexDigitCountPrime38 = hexDigitCount;\n    let hexDigitCountPrime39\
    \ = hexDigitCount", "    var hex = num;\n    var hex_rev = [];\n    for(var i=0;i<hex.length;i++){\n\
    \        hex_rev.push(hex.charCodeAt(i));\n    }\n    hex_rev.sort();\n    var\
    \ hex_rev_len = hex_rev.length;\n    var hex_rev_len_half = hex_rev_len/2;\n \
    \   var hex_rev_len_odd = hex_rev_len%2;\n    var hex_rev_len_even = hex_rev_len_half;\n\
    \    var hex_rev_len_odd_even = hex_rev_len_half;\n    var hex_rev_len_odd_odd\
    \ = hex_rev_len_len_half;\n    var hex_rev_len_even_rev = hex_rev_len_even;\n\
    \    var hex_rev_len_odd_rev = 0;\n    var hex_rev_len_odd_rev = 0;\n    var hex_rev_len_even_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_rev_len_even_rev_rev_rev\
    \ = 0;\n    var hex_rev_len_odd_rev_rev_rev = 0;\n    var hex_re", "  let hex\
    \ = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join``;\n  let primes\
    \ = [];\n  let prime_count = 0;\n  let prime_hex = \"0\";\n  let prime_hex_count\
    \ = 0;\n  let prime_hex_count2 = 0;\n  let prime_hex_count3 = 0;\n  let prime_hex_count4\
    \ = 0;\n  let prime_hex_count5 = 0;\n  let prime_hex_count6 = 0;\n  let prime_hex_count7\
    \ = 0;\n  let prime_hex_count8 = 0;\n  let prime_hex_count9 = 0;\n  let prime_hex_count10\
    \ = 0;\n  let prime_hex_count11 = 0;\n  let prime_hex_count12 = 0;\n  let prime_hex_count13\
    \ = 0;\n  let prime_hex_count14 = 0;\n  let prime_hex_count15 = 0;\n  let prime_hex_count16\
    \ = 0;\n  let prime_hex_count17 = 0;\n  let prime_hex_count18 = 0;\n  let prime_hex_count19\
    \ = 0;\n  let prime_hex_count20 = 0;\n  let prime_hex_count21 = 0;\n  let prime_hex_count22\
    \ = 0;\n  let prime_hex_count23 = 0;\n  let prime_hex_count24 = 0;\n  let prime_hex_count25\
    \ = 0;\n  let prime_hex_count26 = 0;\n  let prime_hex_count27 = 0;\n  let prime_hex_count28\
    \ = 0;\n  let prime_hex_count29 = 0;\n  let prime_hex_count30 = 0;\n  let prime_hex_count31\
    \ = 0;\n  let prime_hex_count32 = 0;\n  let prime_hex_count33 = 0;\n  let prime_hex_count34\
    \ = 0;\n  let prime_hex_count35 = 0;\n  let prime_hex_count36 = 0;\n  let prime_hex_count37\
    \ = 0;\n  let prime_hex_count38 = 0;\n  let prime_hex_count39 = 0;\n  let prime_hex_count40\
    \ = 0;\n  let prime_hex_count41 = 0;\n  let prime_hex_count42 = 0;\n  let prime_hex_count43\
    \ = 0;\n  let prime_hex_count44 = 0;\n  let prime_hex_count45 = 0;\n  let prime_hex_count46\
    \ = 0;\n  let prime_hex_count47 = 0;\n  let prime_hex_count48 = 0;\n  let prime_hex_count49\
    \ = 0;\n  let prime_hex_count50 = 0;\n  let prime_hex_count51 = 0;\n  let prime_hex_count52\
    \ = 0;\n  let prime_hex_count53 = 0;\n  let prime_hex_count54 = 0;\n  let prime_hex_count55\
    \ = 0;\n  let prime_hex_count56 = 0;\n  let prime_hex_count57 = 0;\n  let prime_hex_count58\
    \ = 0;\n  let prime_hex_count59 = 0;\n  let prime_hex_count60", "    var hex =\
    \ num.split(\"\");\n    var hexLength = hex.length;\n    var hexString = \"\"\
    ;\n    for(var i = 0; i < hexLength; i++){\n        hexString += hex[i];\n   \
    \ }\n    var hexStringLength = hexString.length;\n    var hexStringArray = hexString.split(\"\
    \");\n    var hexStringArrayLength = hexStringArray.length;\n    var hexStringArray2\
    \ = [];\n    var hexStringArray2Length = hexStringArray2.length;\n    var hexStringArray3\
    \ = [];\n    var hexStringArray3Length = hexStringArray3.length;\n    var hexStringArray4\
    \ = [];\n    var hexStringArray4Length = hexStringArray4.length;\n    var hexStringArray5\
    \ = [];\n    var hexStringArray5Length = hexStringArray5.length;\n    var hexStringArray6\
    \ = [];\n    var hexStringArray6Length = hexStringArray6.length;\n    var hexStringArray7\
    \ = [];\n    var hexStringArray7Length = hexStringArray7.length;\n    var hexStringArray8\
    \ = [];\n    var hexStringArray8Length = hexStringArray8.length;\n    var hexStringArray9\
    \ = [];\n    var hexStringArray9Length = hexStringArray9.length;\n    var hexStringArray10\
    \ = [];\n    var hexStringArray10Length = hexStringArray10.length;\n    var hexStringArray11\
    \ = [];\n    var hexStringArray11Length = hexStringArray11.length;\n    var hexStringArray12\
    \ = [];\n    var hexStringArray12Length = hexStringArray12.length;\n    var hexStringArray13\
    \ = [];\n    var hexStringArray13Length = hexStringArray13.length;\n    var hexStringArray14\
    \ = [];\n    var hexStringArray14Length = hexStringArray14.length;\n    var hexStringArray15\
    \ = [];\n    var hexStringArray15Length = hexStringArray15.length;\n    var hexStringArray16\
    \ = [];\n    var hexStringArray16Length = hexStringArray16.length;\n    var hexStringArray17\
    \ = [];\n    var hexStringArray17Length = hexStringArray17.length;\n    var hexStringArray18\
    \ = [];\n    var hexStringArray18Length = hexStringArray18.length;\n    var hexStringArray19\
    \ = [];\n    var hexStringArray19Length = hexStringArray19.length;\n    var hexStringArray20\
    \ = [];\n    var hexStringArray20Length = hexStringArray20.length;\n    var hexStringArray21\
    \ = [];\n    var hexStringArray21Length = hexStringArray21.length;\n    var hexStringArray22\
    \ = [];\n    var hexStringArray22Length = hexStringArray22.length;\n    var hexStringArray23\
    \ = [];\n    var hexStringArray23Length = hexStringArray23.length;\n    var hexStringArray24\
    \ = [];\n    var hexStringArray24Length = hexStringArray24.length;\n    var hexStringArray25\
    \ = [];\n    var hexString", "    var hex = num.split(\"\");\n    var hex_rev\
    \ = [];\n    for(var i=0;i<hex.length;i++){\n        hex_rev.push(hex[i].charCodeAt(0)\
    \ - 64);\n    }\n    var hex_rev_rev = hex_rev.slice(0).reverse();\n    var hex_rev_rev_rev\
    \ = hex_rev_rev.slice(0).reverse();\n    var hex_rev_rev_rev2 = hex_rev_rev_rev.slice(0).reverse();\n\
    \    var hex_rev_rev_rev3 = hex_rev_rev_rev2.slice(0).reverse();\n    var hex_rev_rev_rev4\
    \ = hex_rev_rev_rev3.slice(0).reverse();\n    var hex_rev_rev_rev5 = hex_rev_rev_rev4.slice(0).reverse();\n\
    \    var hex_rev_rev_rev6 = hex_rev_rev_rev5.slice(0).reverse();\n    var hex_rev_rev_rev7\
    \ = hex_rev_rev_rev6.slice(0).reverse();\n    var hex_rev_rev_rev8 = hex_rev_rev_rev7.slice(0).reverse();\n\
    \    var hex_rev_rev_rev9 = hex_rev_rev_rev8.slice(0).reverse();\n    var hex_rev_rev_rev10\
    \ = hex_rev_rev_rev9.slice(0).reverse();\n    var hex_rev_rev_rev11 = hex_rev_rev_rev10.slice(0).reverse();\n\
    \    var hex_rev_rev_rev12 = hex_rev_rev_rev11.slice(0).reverse();\n    var hex_rev_rev_rev13\
    \ = hex_rev_rev_rev12.slice(0).reverse();\n    var hex_rev_rev_rev14 = hex_rev_rev_rev13.slice(0).reverse();\n\
    \    var hex_rev_rev_rev15 = hex_rev_rev_rev14.slice(0).reverse();\n    var hex_rev_rev_rev16\
    \ = hex_rev_rev_rev15.slice(0).reverse();\n    var hex_rev_rev_rev17 = hex_rev_rev_rev16.slice(0).reverse();\n\
    \    var hex_rev_rev_rev18 = hex_rev_rev_rev17.slice(0).reverse();\n    var hex_rev_rev_rev19\
    \ = hex_rev_rev_rev18.slice(0).reverse();\n    var hex_rev_rev_rev20 = hex_rev_rev_rev19.slice(0).reverse();\n\
    \    var hex_rev_rev_rev21 = hex_rev_rev_rev20.slice(0).reverse();\n    var hex_rev_rev_rev22\
    \ = hex_rev_rev_rev21.slice(0).reverse();\n    var hex_rev_rev_rev23 = hex", " \
    \   var hex = num.toUpperCase();\n    var hexLength = hex.length;\n    var hexDigits\
    \ = hex.split(\"\");\n    var hexPrimes = [];\n    var hexPrimeCount = 0;\n  \
    \  var hexPrimeCount2 = 0;\n    var hexPrimeCount3 = 0;\n    var hexPrimeCount4\
    \ = 0;\n    var hexPrimeCount5 = 0;\n    var hexPrimeCount6 = 0;\n    var hexPrimeCount7\
    \ = 0;\n    var hexPrimeCount8 = 0;\n    var hexPrimeCount9 = 0;\n    var hexPrimeCount10\
    \ = 0;\n    var hexPrimeCount11 = 0;\n    var hexPrimeCount12 = 0;\n    var hexPrimeCount13\
    \ = 0;\n    var hexPrimeCount14 = 0;\n    var hexPrimeCount15 = 0;\n    var hexPrimeCount16\
    \ = 0;\n    var hexPrimeCount17 = 0;\n    var hexPrimeCount18 = 0;\n    var hexPrimeCount19\
    \ = 0;\n    var hexPrimeCount20 = 0;\n    var hexPrimeCount21 = 0;\n    var hexPrimeCount22\
    \ = 0;\n    var hexPrimeCount23 = 0;\n    var hexPrimeCount24 = 0;\n    var hexPrimeCount25\
    \ = 0;\n    var hexPrimeCount26 = 0;\n    var hexPrimeCount27 = 0;\n    var hexPrimeCount28\
    \ = 0;\n    var hexPrimeCount29 = 0;\n    var hexPrimeCount30 = 0;\n    var hexPrimeCount31\
    \ = 0;\n    var hexPrimeCount32 = 0;\n    var hexPrimeCount33 = 0;\n    var hexPrimeCount34\
    \ = 0;\n    var hexPrimeCount35 = 0;\n    var hexPrimeCount36 = 0;\n    var hexPrimeCount37\
    \ = 0;\n    var hexPrimeCount38 = 0;\n    var hexPrimeCount39 = 0;\n    var hexPrimeCount40\
    \ = 0;\n    var hexPrimeCount41 = 0;\n    var hexPrimeCount42 = 0;\n    var hexPrimeCount43\
    \ = 0;\n    var hexPrimeCount44 = 0;\n    var hexPrimeCount45 = 0;\n    var hexPrimeCount46\
    \ = 0;\n    var hexPrimeCount47 = 0;\n    var hexPrimeCount48 = 0;\n    var hexPrimeCount49\
    \ = 0;\n    var hexPrimeCount50 = 0;\n    var hexPrimeCount51 = 0;\n    var hexPrimeCount52\
    \ = 0;\n    var hexPrimeCount53 = 0;\n    var hexPrimeCount54 = 0;\n    var hexPrimeCount55\
    \ = 0;\n    var hexPrimeCount56 = 0;\n    var hexPrimeCount57 = 0;\n    var hexPrimeCount58\
    \ = 0;\n    var hexPrimeCount59 = 0;\n    var hexPrimeCount60 = 0;\n    var hexPrimeCount61\
    \ = 0;\n    var ", "    let hex = num.replace(/[^0-9A-F]/g,\"\");\n    let hex2\
    \ = hex.replace(/[0-9A-F]/g,\"\");\n    let hex3 = hex2.replace(/[0-9A-F]/g,\"\
    \");\n    let hex4 = hex3.replace(/[0-9A-F]/g,\"\");\n    let hex5 = hex4.replace(/[0-9A-F]/g,\"\
    \");\n    let hex6 = hex5.replace(/[0-9A-F]/g,\"\");\n    let hex7 = hex6.replace(/[0-9A-F]/g,\"\
    \");\n    let hex8 = hex7.replace(/[0-9A-F]/g,\"\");\n    let hex9 = hex8.replace(/[0-9A-F]/g,\"\
    \");\n    let hex10 = hex9.replace(/[0-9A-F]/g,\"\");\n    let hex11 = hex10.replace(/[0-9A-F]/g,\"\
    \");\n    let hex12 = hex11.replace(/[0-9A-F]/g,\"\");\n    let hex13 = hex12.replace(/[0-9A-F]/g,\"\
    \");\n    let hex14 = hex13.replace(/[0-9A-F]/g,\"\");\n    let hex15 = hex14.replace(/[0-9A-F]/g,\"\
    \");\n    let hex16 = hex15.replace(/[0-9A-F]/g,\"\");\n    let hex17 = hex16.replace(/[0-9A-F]/g,\"\
    \");\n    let hex18 = hex17.replace(/[0-9A-F]/g,\"\");\n    let hex19 = hex18.replace(/[0-9A-F]/g,\"\
    \");\n    let hex20 = hex19.replace(/[0-9A-F]/g,\"\");\n    let hex21 = hex20.replace(/[0-9A-F]/g,\"\
    \");\n    let hex22 = hex21.replace(/[0-9A-F]/g,\"\");\n    let hex23 = hex22.replace(/[0-9A-F]/g,\"\
    \");\n    let hex24 = hex23.replace(/[0-9A-F]/g,\"\");\n    let hex25 = hex24.replace(/[0-9A-F]/g,\"\
    \");\n    let hex26 = hex25.replace(/[0-9A-F]/g,\"\");\n    let hex27 = hex26.replace(/[0-9A-F]/g,\"\
    \");\n    let hex28 = hex27.replace(/[0-9A-F]/g,\"\");\n    let hex29 = hex28.replace(/[0-9A-F]/g,\"\
    \");\n    let hex30 = hex29.replace(/[0-9A-F]/g,\"\");\n    let hex31 = hex30.replace(/[0-9A-F]/g,\"\
    \");\n    let hex32 = hex31.replace(/[0-9A-F]/g,\"\");\n    let hex33 = hex32.replace(/[0-9A-F]/g,\"\
    \");\n    let hex34 = hex33.replace(/[0-9A-F]/g,\"\");\n    let hex35 = hex34.replace(/[0-9A-F]/g,\"\
    \");\n    let hex36 = hex35.replace(/[0-9A-F]/g,\"\");\n    let hex37 = hex36.replace(/[0-9A-F]/g,\"\
    \");\n", "    let hexadecimal = num.toUpperCase();\n    let digits = hexadecimal.split('');\n\
    \    let primes = [];\n    let prime_digits = [];\n    let prime_digit_count =\
    \ [];\n    let prime_digit_count_sum = 0;\n    let prime_digit_count_sum2 = 0;\n\
    \    let prime_digit_count_sum3 = 0;\n    let prime_digit_count_sum4 = 0;\n  \
    \  let prime_digit_count_sum5 = 0;\n    let prime_digit_count_sum6 = 0;\n    let\
    \ prime_digit_count_sum7 = 0;\n    let prime_digit_count_sum8 = 0;\n    let prime_digit_count_sum9\
    \ = 0;\n    let prime_digit_count_sum10 = 0;\n    let prime_digit_count_sum11\
    \ = 0;\n    let prime_digit_count_sum12 = 0;\n    let prime_digit_count_sum13\
    \ = 0;\n    let prime_digit_count_sum14 = 0;\n    let prime_digit_count_sum15\
    \ = 0;\n    let prime_digit_count_sum16 = 0;\n    let prime_digit_count_sum17\
    \ = 0;\n    let prime_digit_count_sum18 = 0;\n    let prime_digit_count_sum19\
    \ = 0;\n    let prime_digit_count_sum20 = 0;\n    let prime_digit_count_sum21\
    \ = 0;\n    let prime_digit_count_sum22 = 0;\n    let prime_digit_count_sum23\
    \ = 0;\n    let prime_digit_count_sum24 = 0;\n    let prime_digit_count_sum25\
    \ = 0;\n    let prime_digit_count_sum26 = 0;\n    let prime_digit_count_sum27\
    \ = 0;\n    let prime_digit_count_sum28 = 0;\n    let prime_digit_count_sum29\
    \ = 0;\n    let prime_digit_count_sum30 = 0;\n    let prime_digit_count_sum31\
    \ = 0;\n    let prime_digit_count_sum32 = 0;\n    let prime_digit_count_sum33\
    \ = 0;\n    let prime_digit_count_sum34 = 0;\n    let prime_digit_count_sum35\
    \ = 0;\n    let prime_digit_count_sum36 = 0;\n    let prime_digit_count_sum37\
    \ = 0;\n    let prime_digit_count_sum38 = 0;\n    let prime_digit_count_sum39\
    \ = 0;\n    let prime_digit_count_sum40 = 0;\n    let prime_digit_count_sum41\
    \ = 0;\n    let prime_digit_count_sum42 = 0;\n    let prime_digit_count_sum43\
    \ = 0;\n    let prime_digit_count_sum44 = 0;\n    let prime_digit_count_sum45\
    \ = 0;\n    let prime_digit_count_sum46 = 0;\n    let prime_digit_count_sum47\
    \ = 0;\n    let prime_digit_count_sum48 = 0;\n    let prime_digit_count_sum49\
    \ = 0;\n    let prime_digit_count_sum50 = 0;\n    let prime_digit_count_sum51\
    \ = 0;\n    let prime_digit_count_sum52 = 0;\n    let prime_digit_count_sum53\
    \ = 0;\n    let prime_digit_count_", "    var hex_num = \"\";\n    var hex_digits\
    \ = \"\";\n    var prime_digits = \"\";\n    var prime_number = \"\";\n    var\
    \ prime_number_count = 0;\n    var prime_number_count_2 = 0;\n    var prime_number_count_3\
    \ = 0;\n    var prime_number_count_4 = 0;\n    var prime_number_count_5 = 0;\n\
    \    var prime_number_count_6 = 0;\n    var prime_number_count_7 = 0;\n    var\
    \ prime_number_count_8 = 0;\n    var prime_number_count_9 = 0;\n    var prime_number_count_10\
    \ = 0;\n    var prime_number_count_11 = 0;\n    var prime_number_count_12 = 0;\n\
    \    var prime_number_count_13 = 0;\n    var prime_number_count_14 = 0;\n    var\
    \ prime_number_count_15 = 0;\n    var prime_number_count_16 = 0;\n    var prime_number_count_17\
    \ = 0;\n    var prime_number_count_18 = 0;\n    var prime_number_count_19 = 0;\n\
    \    var prime_number_count_20 = 0;\n    var prime_number_count_21 = 0;\n    var\
    \ prime_number_count_22 = 0;\n    var prime_number_count_23 = 0;\n    var prime_number_count_24\
    \ = 0;\n    var prime_number_count_25 = 0;\n    var prime_number_count_26 = 0;\n\
    \    var prime_number_count_27 = 0;\n    var prime_number_count_28 = 0;\n    var\
    \ prime_number_count_29 = 0;\n    var prime_number_count_30 = 0;\n    var prime_number_count_31\
    \ = 0;\n    var prime_number_count_32 = 0;\n    var prime_number_count_33 = 0;\n\
    \    var prime_number_count_34 = 0;\n    var prime_number_count_35 = 0;\n    var\
    \ prime_number_count_36 = 0;\n    var prime_number_count_37 = 0;\n    var prime_number_count_38\
    \ = 0;\n    var prime_number_count_39 = 0;\n    var prime_number_count_40 = 0;\n\
    \    var prime_number_count_41 = 0;\n    var prime_number_count_42 = 0;\n    var\
    \ prime_number_count_43 = 0;\n    var prime_number_count_44 = 0;\n    var prime_number_count_45\
    \ = 0;\n    var prime_number_count_46 = 0;\n    var prime_number_count_47 = 0;\n\
    \    var prime_number_count_48 = 0;\n    var prime_number_count_49 = 0;\n    var\
    \ prime_number_count_50 = 0;\n    var prime_number_count_51 = 0;\n    var prime_number_count_52\
    \ = 0;\n    var prime_number_count_53 = 0;\n    var prime_number_count_54 = 0;\n\
    \    var prime_number_count_55 = 0;\n    var prime_number_count_56 = 0;\n    var\
    \ prime_number_count_57 = 0;\n    var prime_number_count_58 = 0;\n    var prime_number_count_59\
    \ = 0;\n    var prime_number_count_60 = 0;\n    var prime_number_count_61 = 0;\n\
    \    var prime_number_count_62", "    let hex = num.split(\"\");\n    let hex_rev\
    \ = [];\n    for(let i=0;i<hex.length;i++){\n        hex_rev.push(hex[hex.length-1-(i+1)]);\n\
    \    }\n    let primes = [];\n    for(let i=0;i<hex_rev.length;i++){\n       \
    \ if(hex_rev[i] == \"A\" || hex_rev[i] == \"B\" || hex_rev[i] == \"C\" || hex_rev[i]\
    \ == \"D\" || hex_rev[i] == \"E\" || hex_rev[i] == \"F\"){\n            primes.push(i);\n\
    \        }\n    }\n    let prime_count = 0;\n    for(let i=0;i<primes.length;i++){\n\
    \        if(primes[i] == hex_rev.length-1){\n            prime_count++;\n    \
    \    }\n    }\n    return prime_count;\n}\n", "    var hex = num.split(\"\");\n\
    \    var count = 0;\n    for(var i = 0; i < hex.length; i++){\n        var hexDigit\
    \ = hex[i].charCodeAt(0) - 48;\n        if(hexDigit >= 0 && hexDigit <= 9){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let hex\
    \ = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\",\");\n    let\
    \ primes = hex_key.primes;\n    let primesCount = hex_key.primesCount;\n    let\
    \ primesCount2 = hex_key.primesCount2;\n    let primesCount3 = hex_key.primesCount3;\n\
    \    let primesCount4 = hex_key.primesCount4;\n    let primesCount5 = hex_key.primesCount5;\n\
    \    let primesCount6 = hex_key.primesCount6;\n    let primesCount7 = hex_key.primesCount7;\n\
    \    let primesCount8 = hex_key.primesCount8;\n    let primesCount9 = hex_key.primesCount9;\n\
    \    let primesCount10 = hex_key.primesCount10;\n    let primesCount11 = hex_key.primesCount11;\n\
    \    let primesCount12 = hex_key.primesCount12;\n    let primesCount13 = hex_key.primesCount13;\n\
    \    let primesCount14 = hex_key.primesCount14;\n    let primesCount15 = hex_key.primesCount15;\n\
    \    let primesCount16 = hex_key.primesCount16;\n    let primesCount17 = hex_key.primesCount17;\n\
    \    let primesCount18 = hex_key.primesCount18;\n    let primesCount19 = hex_key.primesCount19;\n\
    \    let primesCount20 = hex_key.primesCount20;\n    let primesCount21 = hex_key.primesCount21;\n\
    \    let primesCount22 = hex_key.primesCount22;\n    let primesCount23 = hex_key.primesCount23;\n\
    \    let primesCount24 = hex_key.primesCount24;\n    let primesCount25 = hex_key.primesCount25;\n\
    \    let primesCount26 = hex_key.primesCount26;\n    let primesCount27 = hex_key.primesCount27;\n\
    \    let primesCount28 = hex_key.primesCount28;\n    let primesCount29 = hex_key.primesCount29;\n\
    \    let primesCount30 = hex_key.primesCount30;\n    let primesCount31 = hex_key.primesCount31;\n\
    \    let primesCount32 = hex_key.primesCount32;\n    let primesCount33 = hex_key.primesCount33;\n\
    \    let primesCount34 = hex_key.primesCount34;\n    let prime", "  let hex =\
    \ num.replace(/[^A-F0-9]/g,'');\n  let hexArray = hex.split('');\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexArrayLength = hexArray.length;\n  let hexArrayLength\
    \ = hexArray.length;\n  let hex", "  let hex = num.split(\"\");\n  let hex2 =\
    \ hex.map(x => parseInt(x, 16));\n  let hex3 = hex2.map(x => x % 10);\n  let hex4\
    \ = hex3.filter(x => x % 2 === 0);\n  let hex5 = hex4.map(x => x % 10);\n  let\
    \ hex6 = hex5.filter(x => x % 2 === 0);\n  let hex7 = hex6.map(x => x % 10);\n\
    \  let hex8 = hex7.filter(x => x % 2 === 0);\n  let hex9 = hex8.map(x => x % 10);\n\
    \  let hex10 = hex9.filter(x => x % 2 === 0);\n  let hex11 = hex10.map(x => x\
    \ % 10);\n  let hex12 = hex11.filter(x => x % 2 === 0);\n  let hex13 = hex12.map(x\
    \ => x % 10);\n  let hex14 = hex13.filter(x => x % 2 === 0);\n  let hex15 = hex14.map(x\
    \ => x % 10);\n  let hex16 = hex15.filter(x => x % 2 === 0);\n  let hex17 = hex16.map(x\
    \ => x % 10);\n  let hex18 = hex17.filter(x => x % 2 === 0);\n  let hex19 = hex18.map(x\
    \ => x % 10);\n  let hex20 = hex19.filter(x => x % 2 === 0);\n  let hex21 = hex20.map(x\
    \ => x % 10);\n  let hex22 = hex21.filter(x => x % 2 === 0);\n  let hex23 = hex22.map(x\
    \ => x % 10);\n  let hex24 = hex23.filter(x => x % 2 === 0);\n  let hex25 = hex24.map(x\
    \ => x % 10);\n  let hex26 = hex25.filter(x => x % 2 === 0);\n  let hex27 = hex26.map(x\
    \ => x % 10);\n  let hex28 = hex27.filter(x => x % 2 === 0);\n  let hex29 = hex28.map(x\
    \ => x % 10);\n  let hex30 = hex29.filter(x => x % 2 === 0);\n  let hex31 = hex30.map(x\
    \ => x % 10);\n  let hex32 = hex31.filter(x => x % 2 === 0);\n  let hex33 = hex32.map(x\
    \ => x % 10);\n  let hex34 = hex33.filter(x => x % 2 === 0);\n  let hex35 = hex34.map(x\
    \ => x % 10);\n  let hex36 = hex35.filter(x => x % 2 === 0);\n  let hex37 = hex36.map(x\
    \ => x % 10);\n  let hex38 = hex37.filter(x => x % 2 ", "    let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join(\"\");\n    let primes = [];\n\
    \    for(let i = 0; i < hex.length; i++){\n        if(hex.charAt(i) == \"0\"){\n\
    \            continue;\n        }\n        let prime = hex.charAt(i).toLowerCase();\n\
    \        primes.push(prime);\n    }\n    let prime = primes.find(x => x != 2);\n\
    \    return prime;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits = [...hex];\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCountPrimes = hexDigitCount;\n\
    \  let hexDigitCountPrimes2 = hexDigitCountPrimes*2;\n  let hexDigitCountPrimes3\
    \ = hexDigitCountPrimes*3;\n  let hexDigitCountPrimes4 = hexDigitCountPrimes*4;\n\
    \  let hexDigitCountPrimes5 = hexDigitCountPrimes*5;\n  let hexDigitCountPrimes6\
    \ = hexDigitCountPrimes*6;\n  let hexDigitCountPrimes7 = hexDigitCountPrimes*7;\n\
    \  let hexDigitCountPrimes8 = hexDigitCountPrimes*8;\n  let hexDigitCountPrimes9\
    \ = hexDigitCountPrimes*9;\n  let hexDigitCountPrimes10 = hexDigitCountPrimes*10;\n\
    \  let hexDigitCountPrimes11 = hexDigitCountPrimes*11;\n  let hexDigitCountPrimes12\
    \ = hexDigitCountPrimes*12;\n  let hexDigitCountPrimes13 = hexDigitCountPrimes*13;\n\
    \  let hexDigitCountPrimes14 = hexDigitCountPrimes*14;\n  let hexDigitCountPrimes15\
    \ = hexDigitCountPrimes*15;\n  let hexDigitCountPrimes16 = hexDigitCountPrimes*16;\n\
    \  let hexDigitCountPrimes17 = hexDigitCountPrimes*17;\n  let hexDigitCountPrimes18\
    \ = hexDigitCountPrimes*18;\n  let hexDigitCountPrimes19 = hexDigitCountPrimes*19;\n\
    \  let hexDigitCountPrimes20 = hexDigitCountPrimes*20;\n  let hexDigitCountPrimes21\
    \ = hexDigitCountPrimes*21;\n  let hexDigitCountPrimes22 = hexDigitCountPrimes*22;\n\
    \  let hexDigitCountPrimes23 = hexDigitCountPrimes*23;\n  let hexDigitCountPrimes24\
    \ = hexDigitCountPrimes*24;\n  let hexDigitCountPrimes25 = hexDigitCountPrimes*25;\n\
    \  let hexDigitCountPrimes26 = hexDigitCountPrimes*26;\n  let hexDigitCountPrimes27\
    \ = hexDigitCountPrimes*27;\n  let hexDigitCountPrimes28 = hexDigitCountPrimes*28;\n\
    \  let hexDigitCountPrimes29 = hexDigitCountPrimes*29;\n  let hexDigitCountPrimes30\
    \ = hexDigitCountPrimes*30;\n  let hexDigitCountPrimes31 = hexDigitCount", " \
    \   let hex = num.replace(/[^0-9A-F]/g,'');\n    let hexDigits = hex.length;\n\
    \    let primes = [];\n    let primesCount = 0;\n    for(let i=0;i<hexDigits;i++){\n\
    \        let hexDigit = hex.charCodeAt(i);\n        let hexDigitInt = parseInt(hexDigit);\n\
    \        if(hexDigitInt%2 === 0){\n            primes.push(hexDigitInt);\n   \
    \     }\n    }\n    for(let i=0;i<primes.length;i++){\n        let prime = primes[i];\n\
    \        if(primesCount < prime){\n            primesCount += prime;\n       \
    \ }\n    }\n    return primesCount;\n}\n", "    let hex = num.split(\"\").map(x\
    \ => x.charCodeAt(0).toString(16));\n    let primes = [];\n    let primes_found\
    \ = [];\n    let primes_found_count = [];\n    let primes_found_count_max = [];\n\
    \    let primes_found_count_max_index = [];\n    let primes_found_count_min =\
    \ [];\n    let primes_found_count_min_index = [];\n    let primes_found_count_max2\
    \ = [];\n    let primes_found_count_max2_index = [];\n    let primes_found_count_min2\
    \ = [];\n    let primes_found_count_min2_index = [];\n    let primes_found_count_max3\
    \ = [];\n    let primes_found_count_max3_index = [];\n    let primes_found_count_min3\
    \ = [];\n    let primes_found_count_min3_index = [];\n    let primes_found_count_max4\
    \ = [];\n    let primes_found_count_max4_index = [];\n    let primes_found_count_min4\
    \ = [];\n    let primes_found_count_min4_index = [];\n    let primes_found_count_max5\
    \ = [];\n    let primes_found_count_max5_index = [];\n    let primes_found_count_min5\
    \ = [];\n    let primes_found_count_min5_index = [];\n    let primes_found_count_max6\
    \ = [];\n    let primes_found_count_max6_index = [];\n    let primes_found_count_min6\
    \ = [];\n    let primes_found_count_min6_index = [];\n    let primes_found_count_max7\
    \ = [];\n    let primes_found_count_max7_index = [];\n    let primes_found_count_min7\
    \ = [];\n    let primes_found_count_min7_index = [];\n    let primes_found_count_max8\
    \ = [];\n    let primes_found_count_max8_index = [];\n    let primes_found_count_min8\
    \ = [];\n    let primes_found_count_min8_index = [];\n    let primes_found_count_max9\
    \ = [];\n    let primes_found_count_max9_index = [];\n    let primes_found_count_min9\
    \ = [];\n    let primes_found_count_min9_index = [];\n    let primes_found_count_max10\
    \ = [];\n    let primes_found_count_max10_index = [];\n    let primes_found_count_min10\
    \ = [];\n    let primes_found_count_min10_index = [];\n    let primes_found_count_max11\
    \ = [];\n    let primes_found_count_max11_index = [];\n    let primes_found_count_min11\
    \ = [];\n    let primes_found_count_min11_index = [];\n    let primes_found_count_max12\
    \ = [];\n    let primes_found_count_max12_index = [];\n    let primes_found_count_min12\
    \ = [];\n    let primes_found_count_min12_index = [];\n    let primes_found_count_max13\
    \ = [];\n    let primes_found_count_max13_index = [];\n    let primes_found_count_",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ primeDigits = [];\n    let primeCount = 0;\n    for(let i = 0; i < hexDigits.length;\
    \ i++){\n        if(hexDigits[i] === \"A\" || hexDigits[i] === \"B\" || hexDigits[i]\
    \ === \"C\" || hexDigits[i] === \"D\" || hexDigits[i] === \"E\" || hexDigits[i]\
    \ === \"F\"){\n            primeDigits.push(hexDigits[i]);\n        }\n    }\n\
    \    for(let i = 0; i < primeDigits.length; i++){\n        if(primeDigits[i] ===\
    \ \"2\"){\n            primeCount++;\n        }\n    }\n    return primeCount;\n\
    }\n", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount/2;\n\
    \    let hexDigitCount3 = hexDigitCount2/2;\n    let hexDigitCount4 = hexDigitCount3/2;\n\
    \    let hexDigitCount5 = hexDigitCount4/2;\n    let hexDigitCount6 = hexDigitCount5/2;\n\
    \    let hexDigitCount7 = hexDigitCount6/2;\n    let hexDigitCount8 = hexDigitCount7/2;\n\
    \    let hexDigitCount9 = hexDigitCount8/2;\n    let hexDigitCount10 = hexDigitCount9/2;\n\
    \    let hexDigitCount11 = hexDigitCount10/2;\n    let hexDigitCount12 = hexDigitCount11/2;\n\
    \    let hexDigitCount13 = hexDigitCount12/2;\n    let hexDigitCount14 = hexDigitCount13/2;\n\
    \    let hexDigitCount15 = hexDigitCount14/2;\n    let hexDigitCount16 = hexDigitCount15/2;\n\
    \    let hexDigitCount17 = hexDigitCount16/2;\n    let hexDigitCount18 = hexDigitCount17/2;\n\
    \    let hexDigitCount19 = hexDigitCount18/2;\n    let hexDigitCount20 = hexDigitCount19/2;\n\
    \    let hexDigitCount21 = hexDigitCount20/2;\n    let hexDigitCount22 = hexDigitCount21/2;\n\
    \    let hexDigitCount23 = hexDigitCount22/2;\n    let hexDigitCount24 = hexDigitCount23/2;\n\
    \    let hexDigitCount25 = hexDigitCount24/2;\n    let hexDigitCount26 = hexDigitCount25/2;\n\
    \    let hexDigitCount27 = hexDigitCount26/2;\n    let hexDigitCount28 = hexDigitCount27/2;\n\
    \    let hexDigitCount29 = hexDigitCount28/2;\n    let hexDigitCount30 = hexDigitCount29/2;\n\
    \    let hexDigitCount31 = hexDigitCount30/2;\n    let hexDigitCount32 = hexDigitCount31/2;\n\
    \    let hexDigitCount33 = hexDigitCount32/2;\n    let hexDigitCount34 = hexDigitCount33/2;\n\
    \    let hexDigitCount35 = hexDigitCount34/2;\n    let hexDigitCount36 = hexDigitCount35/2;\n\
    \    let hexDigitCount37 = hexDigitCount36/2;\n    let hexDigitCount38 = hexDigitCount37/2;\n\
    \    let hexDigitCount39 = hexDigitCount38/2;\n    let hexDigitCount40 = hexDigitCount39/2;\n\
    \    let hexDigitCount41 = hexDigitCount", "    var hex = num.toUpperCase();\n\
    \    var hex_rev = hex.split(\"\").reverse().join(\"\");\n    var hex_rev_split\
    \ = hex_rev.split(\"\");\n    var hex_rev_split_2 = hex_rev_split.filter(function(el){\n\
    \        return el.length % 2 === 0;\n    });\n    var hex_rev_split_3 = hex_rev_split_2.filter(function(el){\n\
    \        return el.length % 3 === 0;\n    });\n    var hex_rev_split_4 = hex_rev_split_3.filter(function(el){\n\
    \        return el.length % 4 === 0;\n    });\n    var hex_rev_split_5 = hex_rev_split_4.filter(function(el){\n\
    \        return el.length % 5 === 0;\n    });\n    var hex_rev_split_6 = hex_rev_split_5.filter(function(el){\n\
    \        return el.length % 6 === 0;\n    });\n    var hex_rev_split_7 = hex_rev_split_6.filter(function(el){\n\
    \        return el.length % 7 === 0;\n    });\n    var hex_rev_split_8 = hex_rev_split_7.filter(function(el){\n\
    \        return el.length % 8 === 0;\n    });\n    var hex_rev_split_9 = hex_rev_split_8.filter(function(el){\n\
    \        return el.length % 9 === 0;\n    });\n    var hex_rev_split_10 = hex_rev_split_9.filter(function(el){\n\
    \        return el.length % 10 === 0;\n    });\n    var hex_rev_split_11 = hex_rev_split_10.filter(function(el){\n\
    \        return el.length % 11 === 0;\n    });\n    var hex_rev_split_12 = hex_rev_split_11.filter(function(el){\n\
    \        return el.length % 12 === 0;\n    });\n    var hex_rev_split_13 = hex_rev_split_12.filter(function(el){\n\
    \        return el.length % 13 === 0;\n    });\n    var hex_rev_split_14 = hex_rev_split_13.filter(function(el){\n\
    \        return el.length % 14 === 0;\n    });\n    var hex_rev_split_15 = hex_rev_split_14.filter(function(el){\n\
    \        return el.length % 15 === 0;\n    });\n    var hex_rev_split_16 = hex_rev_split_15.filter(function(el){\n\
    \        return el.length % 16 === 0;\n    });\n    var hex_rev_split_17 = hex_rev_split_16.filter(function(el){\n\
    \        return el.length % 17 === 0;\n    });\n    var hex_rev_split_18 = hex_rev_split_17.filter(function(el){\n\
    \        return el.length % 18 === 0;\n    });\n    var hex_rev_split_19 = hex_rev_split_18.filter(function(el){\n\
    \        return el.length % 19 === 0;\n    });\n    var hex_rev_split_20", " \
    \   var hex = num.toUpperCase();\n    var hexLength = hex.length;\n    var hexDigits\
    \ = hex.split(\"\");\n    var hexDigitCount = hexDigits.length;\n    var hexDigitArray\
    \ = [];\n    var hexDigitArray2 = [];\n    var hexDigitArray3 = [];\n    var hexDigitArray4\
    \ = [];\n    var hexDigitArray5 = [];\n    var hexDigitArray6 = [];\n    var hexDigitArray7\
    \ = [];\n    var hexDigitArray8 = [];\n    var hexDigitArray9 = [];\n    var hexDigitArray10\
    \ = [];\n    var hexDigitArray11 = [];\n    var hexDigitArray12 = [];\n    var\
    \ hexDigitArray13 = [];\n    var hexDigitArray14 = [];\n    var hexDigitArray15\
    \ = [];\n    var hexDigitArray16 = [];\n    var hexDigitArray17 = [];\n    var\
    \ hexDigitArray18 = [];\n    var hexDigitArray19 = [];\n    var hexDigitArray20\
    \ = [];\n    var hexDigitArray21 = [];\n    var hexDigitArray22 = [];\n    var\
    \ hexDigitArray23 = [];\n    var hexDigitArray24 = [];\n    var hexDigitArray25\
    \ = [];\n    var hexDigitArray26 = [];\n    var hexDigitArray27 = [];\n    var\
    \ hexDigitArray28 = [];\n    var hexDigitArray29 = [];\n    var hexDigitArray30\
    \ = [];\n    var hexDigitArray31 = [];\n    var hexDigitArray32 = [];\n    var\
    \ hexDigitArray33 = [];\n    var hexDigitArray34 = [];\n    var hexDigitArray35\
    \ = [];\n    var hexDigitArray36 = [];\n    var hexDigitArray37 = [];\n    var\
    \ hexDigitArray38 = [];\n    var hexDigitArray39 = [];\n    var hexDigitArray40\
    \ = [];\n    var hexDigitArray41 = [];\n    var hexDigitArray42 = [];\n    var\
    \ hexDigitArray43 = [];\n    var hexDigitArray44 = [];\n    var hexDigitArray45\
    \ = [];\n    var hexDigitArray46 = [];\n    var hexDigitArray47 = [];\n    var\
    \ hexDigitArray48 = [];\n    var hexDigitArray49 = [];\n    var hexDigitArray50\
    \ = [];\n    var hexDigitArray51 = [];\n    var hexDigitArray52 = [];\n    var\
    \ hexDigitArray53 = [];\n    var hexDigitArray54 = [];\n    var hexDigitArray55\
    \ = [];\n    var hexDigitArray56 = [];\n    var hexDigitArray57 = [];\n    var\
    \ hexDigitArray58 = [];\n    var hexDigitArray59 = [];\n    var hexDigitArray60\
    \ = [];\n    var hexDigitArray61 = [];\n    var hexDigitArray62 = [];\n    var\
    \ hexDigitArray63 = [];\n    var hexDigitArray64 = [];\n    var hexDigitArray65\
    \ = [];\n    var hexDigitArray66 = [];\n    var hexDigitArray67 = [];\n    var ",
  "    var hex = num;\n    var count = 0;\n    var hexDigits = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    for(var i=0; i<hex.length; i++){\n        if(hexDigits.indexOf(hex.charAt(i))\
    \ == -1){\n            hex = hex.substring(0,i) + hex.substring(i+1);\n      \
    \  }\n    }\n    for(var i=0; i<hexDigits.length; i++){\n        if(hexDigits.indexOf(hex.charAt(i))\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

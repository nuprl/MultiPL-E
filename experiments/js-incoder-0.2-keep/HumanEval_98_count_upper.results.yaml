name: HumanEval_98_count_upper
language: js
results:
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp14cgrdfi.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp14cgrdfi.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)==='A' || s.charAt(i)==='a'\
    \ || s.charAt(i)==='E' || s.charAt(i)==='e' || s.charAt(i)==='I' || s.charAt(i)==='i'\
    \ || s.charAt(i)==='O' || s.charAt(i)==='o' || s.charAt(i)==='U' || s.charAt(i)==='u'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpk67f2kji.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk67f2kji.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmptp5wc7he.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmptp5wc7he.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpzi8s7a2w.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzi8s7a2w.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpnxtszbnu.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnxtszbnu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u') count++;\n  }\n  return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp6_7ujzrm.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6_7ujzrm.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpzbulft7d.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzbulft7d.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp08t0kffg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp08t0kffg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpa2m3sry9.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa2m3sry9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpg2uvlqdp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg2uvlqdp.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor (var i = 0; i < s.length; i++){\n\t\tif (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpv38x5l98.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv38x5l98.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp5qw68yth.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qw68yth.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpf0yew6dq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf0yew6dq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpcm53gt6h.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcm53gt6h.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' ||\
    \ s.charAt(i) == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'U' || s.charAt(i) == 'u') count++;\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpwj282tok.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwj282tok.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp96rn4o22.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp96rn4o22.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpxwmj1qxy.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxwmj1qxy.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpaf_nee3u.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaf_nee3u.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpdaffpek_.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdaffpek_.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpblaov1xl.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpblaov1xl.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpaymkargv.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaymkargv.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp4bv_g0e0.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4bv_g0e0.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp3qborn3g.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3qborn3g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpb2vg48lt.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb2vg48lt.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i)=='A'\
    \ || s.charAt(i)=='E' || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpemyija_6.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpemyija_6.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpaimlvlad.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaimlvlad.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpp9qfizup.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp9qfizup.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpsvgb4tw_.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsvgb4tw_.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i)!==''){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpkvw0payv.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkvw0payv.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpv9ps8hgg.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv9ps8hgg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpu5vl0wc7.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu5vl0wc7.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp7ws4adv9.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7ws4adv9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpowfegcsy.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpowfegcsy.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp2i6dnt43.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2i6dnt43.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpt7pmmgrg.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt7pmmgrg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpsa7pwdt2.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsa7pwdt2.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(i % 2 == 0){\n    \
    \  if(s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i)\
    \ == 'O' || s.charAt(i) == 'U'){\n        count++;\n      }\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp9xl5f7r2.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9xl5f7r2.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmppem74oqr.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppem74oqr.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != \"A\" && s.charAt(i) != \"a\"){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp2hr3aoff.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2hr3aoff.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpcgrzfjog.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcgrzfjog.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmplhftpzmw.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplhftpzmw.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ == s.charAt(i) && s.charAt(i) != ''){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpa8e2j6r9.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa8e2j6r9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i)==='A'\
    \ || s.charAt(i)==='a') count++;\n        if(s.charAt(i)==='B' || s.charAt(i)==='b')\
    \ count++;\n        if(s.charAt(i)==='C' || s.charAt(i)==='c') count++;\n    \
    \    if(s.charAt(i)==='D' || s.charAt(i)==='d') count++;\n        if(s.charAt(i)==='E'\
    \ || s.charAt(i)==='e') count++;\n        if(s.charAt(i)==='F' || s.charAt(i)==='f')\
    \ count++;\n        if(s.charAt(i)==='G' || s.charAt(i)==='g') count++;\n    \
    \    if(s.charAt(i)==='H' || s.charAt(i)==='h') count++;\n        if(s.charAt(i)==='I'\
    \ || s.charAt(i)==='i') count++;\n        if(s.charAt(i)==='J' || s.charAt(i)==='j')\
    \ count++;\n        if(s.charAt(i)==='K' || s.charAt(i)==='k') count++;\n    \
    \    if(s.charAt(i)==='L' || s.charAt(i)==='l') count++;\n        if(s.charAt(i)==='M'\
    \ || s.charAt(i)==='m') count++;\n        if(s.charAt(i)==='N' || s.charAt(i)==='n')\
    \ count++;\n        if(s.charAt(i)==='O' || s.charAt(i)==='o') count++;\n    \
    \    if(s.charAt(i)==='P' || s.charAt(i)==='p') count++;\n        if(s.charAt(i)==='Q'\
    \ || s.charAt(i)==='q') count++;\n        if(s.charAt(i)==='R' || s.charAt(i)==='r')\
    \ count++;\n        if(s.charAt(i)==='S' || s.charAt(i)==='s') count++;\n    \
    \    if(s.charAt(i)==='T' || s.charAt(i)==='t') count++;\n        if(s.charAt(i)==='U'\
    \ || s.charAt(i)==='u') count++;\n        if(s.charAt(i)==='V' || s.charAt(i)==='v')\
    \ count++;\n        if(s.charAt(i)==='W' || s.charAt(i)==='w') count++;\n    \
    \    if(s.charAt(i)==='X' || s.charAt(i)==='x') count++;\n        if(s.charAt(i)==='Y'\
    \ || s.charAt(i)==='y') count++;\n        if(s.charAt(i)==='Z' || s.charAt(i)==='z')\
    \ count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n1\n    at test (/tmp/tmprruikmnb.js:44:10)\n\
    \    at Object.<anonymous> (/tmp/tmprruikmnb.js:53:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmphzd6bf06.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphzd6bf06.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpykzxht97.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpykzxht97.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpa0d0kgq8.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa0d0kgq8.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp98tymmy9.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp98tymmy9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' &&\
    \ s[i] <= 'Z'){\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpso9ds5en.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpso9ds5en.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpy59jvf6n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy59jvf6n.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpdvgb8jgy.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdvgb8jgy.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpx9cf8yvx.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx9cf8yvx.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp7plbq6o4.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7plbq6o4.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpv6s7tu6o.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv6s7tu6o.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpxkpif5xb.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxkpif5xb.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpn62xee69.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn62xee69.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmprh0dgcsx.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmprh0dgcsx.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp6lny654o.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6lny654o.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp40giq4px.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp40giq4px.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpypnbqhmh.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpypnbqhmh.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpr1ru5ojq.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr1ru5ojq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmptyujzwre.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmptyujzwre.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpq81npg1c.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq81npg1c.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i)!==''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpxihurjh8.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxihurjh8.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp9exkbh5n.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9exkbh5n.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp8y1mhcug.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8y1mhcug.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpyczg9gsq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyczg9gsq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmptyvlx2ut.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmptyvlx2ut.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpms980yam.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpms980yam.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpj0u5ankq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj0u5ankq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpizssnp_z.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpizssnp_z.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpqmtu7ak1.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqmtu7ak1.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmppmi5ouas.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmppmi5ouas.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i)=='A'\
    \ || s.charAt(i)=='E' || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpsaoi4g3v.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsaoi4g3v.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpmsx70ijn.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmsx70ijn.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpb7i5mi48.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb7i5mi48.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s[i] >= 'a' && s[i]\
    \ <= 'z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp75fbqmub.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp75fbqmub.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp9ku_pvxu.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9ku_pvxu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp5tqacmyu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5tqacmyu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a') count++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpjtavowt4.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjtavowt4.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp8b08w893.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8b08w893.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp3m7hodxh.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3m7hodxh.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor (var i = 0; i < s.length; i++){\n\t\tif (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp1tk3wxhz.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1tk3wxhz.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpeajv4dm1.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeajv4dm1.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp2jxesyrj.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2jxesyrj.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpfv0n8gwn.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfv0n8gwn.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmprav91u3e.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmprav91u3e.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpj2dstqpd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj2dstqpd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpcb6wx8bz.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcb6wx8bz.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor (var i = 0; i < s.length; i++){\n\t\tif (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpx6lie9v4.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx6lie9v4.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpw3wu7qdp.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw3wu7qdp.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpwubmdpe0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwubmdpe0.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp2yfbhwww.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2yfbhwww.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpyj5kipkb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyj5kipkb.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp08aqwvwt.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp08aqwvwt.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpir0_9qnx.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpir0_9qnx.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp_w01a0e1.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_w01a0e1.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp8_cutf1e.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8_cutf1e.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp_6pg6fvf.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_6pg6fvf.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(i % 2 == 0){\n\
    \            if(s.charAt(i) == 'A' || s.charAt(i) == 'a'){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp3fg0jzxh.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3fg0jzxh.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpi3ve5q96.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi3ve5q96.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmphynffpfu.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmphynffpfu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpowptdmx6.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpowptdmx6.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmptosukusd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmptosukusd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp35_w5i19.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp35_w5i19.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != \"A\" && s.charAt(i) != \"a\"){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpv714rqtr.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv714rqtr.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpfpyn71ad.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfpyn71ad.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpw5k1zdm4.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw5k1zdm4.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)==='A' || s.charAt(i)==='a')\
    \ count++;\n    if(s.charAt(i)==='B' || s.charAt(i)==='b') count++;\n    if(s.charAt(i)==='C'\
    \ || s.charAt(i)==='c') count++;\n    if(s.charAt(i)==='D' || s.charAt(i)==='d')\
    \ count++;\n    if(s.charAt(i)==='E' || s.charAt(i)==='e') count++;\n    if(s.charAt(i)==='F'\
    \ || s.charAt(i)==='f') count++;\n    if(s.charAt(i)==='G' || s.charAt(i)==='g')\
    \ count++;\n    if(s.charAt(i)==='H' || s.charAt(i)==='h') count++;\n    if(s.charAt(i)==='I'\
    \ || s.charAt(i)==='i') count++;\n    if(s.charAt(i)==='J' || s.charAt(i)==='j')\
    \ count++;\n    if(s.charAt(i)==='K' || s.charAt(i)==='k') count++;\n    if(s.charAt(i)==='L'\
    \ || s.charAt(i)==='l') count++;\n    if(s.charAt(i)==='M' || s.charAt(i)==='m')\
    \ count++;\n    if(s.charAt(i)==='N' || s.charAt(i)==='n') count++;\n    if(s.charAt(i)==='O'\
    \ || s.charAt(i)==='o') count++;\n    if(s.charAt(i)==='P' || s.charAt(i)==='p')\
    \ count++;\n    if(s.charAt(i)==='Q' || s.charAt(i)==='q') count++;\n    if(s.charAt(i)==='R'\
    \ || s.charAt(i)==='r') count++;\n    if(s.charAt(i)==='S' || s.charAt(i)==='s')\
    \ count++;\n    if(s.charAt(i)==='T' || s.charAt(i)==='t') count++;\n    if(s.charAt(i)==='U'\
    \ || s.charAt(i)==='u') count++;\n    if(s.charAt(i)==='V' || s.charAt(i)==='v')\
    \ count++;\n    if(s.charAt(i)==='W' || s.charAt(i)==='w') count++;\n    if(s.charAt(i)==='X'\
    \ || s.charAt(i)==='x') count++;\n    if(s.charAt(i)==='Y' || s.charAt(i)==='y')\
    \ count++;\n    if(s.charAt(i)==='Z' || s.charAt(i)==='z') count++;\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n1\n    at test (/tmp/tmpj257rjtj.js:44:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj257rjtj.js:53:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpb8grp0sh.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb8grp0sh.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp_xc3q4ro.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_xc3q4ro.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpcrws93sd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcrws93sd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpdqdyhdoq.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdqdyhdoq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp42srpfbp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp42srpfbp.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpon0mxccj.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpon0mxccj.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpu_ybj4kj.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu_ybj4kj.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp3r1p34cu.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3r1p34cu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)==='A' || s.charAt(i)==='a')\
    \ count++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpb0forl41.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb0forl41.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpl4x0ftru.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl4x0ftru.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i) && s.charAt(i) !== s.charAt(i).toUpperCase()){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpg0yrad1h.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg0yrad1h.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpo46x55pf.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo46x55pf.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpo0vjkkjl.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo0vjkkjl.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp84db4reg.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp84db4reg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor (var i = 0; i < s.length; i++){\n\t\tif (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpl9y_vqdm.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9y_vqdm.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp84g8g35g.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp84g8g35g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp1ms0japc.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1ms0japc.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpnnd7f52h.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnnd7f52h.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpw4niqcqt.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw4niqcqt.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' &&\
    \ s[i] <= 'Z'){\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpsf565hwo.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsf565hwo.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpghyqi951.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpghyqi951.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp6kxwxpd8.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6kxwxpd8.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpdbduj3u7.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdbduj3u7.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpafvdzsya.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpafvdzsya.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp5o__bjnd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5o__bjnd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpq7qge9cq.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq7qge9cq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp6pm1m974.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6pm1m974.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpszgftell.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpszgftell.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpekg6oeyo.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpekg6oeyo.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp8ipgzcbp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8ipgzcbp.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i)!==''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp9mbyl85s.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9mbyl85s.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' &&\
    \ s[i] <= 'Z'){\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpjntw52uu.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjntw52uu.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'U'){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpnbytzprr.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnbytzprr.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp3hos1l6o.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3hos1l6o.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmptg0n_s5l.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmptg0n_s5l.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmptrnd58kt.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmptrnd58kt.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpezv_s_l0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpezv_s_l0.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n            count++;\n        }\n  \
    \  }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpb9itn2fa.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb9itn2fa.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpg984yxa6.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg984yxa6.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp8p30peam.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8p30peam.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)) {\n      count++;\n    }\n \
    \ }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp21m0oehr.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp21m0oehr.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i)!==''){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp92pdkrp4.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp92pdkrp4.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i).toLowerCase()){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpfmvmk59x.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfmvmk59x.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'a' && s[i]\
    \ <= 'z'){\n      count += 1;\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpq87_xvyn.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq87_xvyn.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i)!==''){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp6w2agtjj.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6w2agtjj.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpxumkni5h.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxumkni5h.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpe7xap2d2.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe7xap2d2.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpq3v88bn9.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq3v88bn9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpdi0w8ivm.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdi0w8ivm.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpqcbyo1_s.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqcbyo1_s.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i).toLowerCase()){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp01cw627a.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp01cw627a.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpzewd1n2c.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzewd1n2c.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp2viu0f6s.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2viu0f6s.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmphnpzgkny.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphnpzgkny.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) != ''){\n            count++;\n        }\n  \
    \  }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpxftjtgi7.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxftjtgi7.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp9xx9ersm.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9xx9ersm.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp5am6uut0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5am6uut0.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U'){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpllcjbbmg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpllcjbbmg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpmqjcau8b.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmqjcau8b.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpf1eykfd0.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf1eykfd0.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmplu6368a_.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmplu6368a_.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmppuvk14s8.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppuvk14s8.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u'){\n      count++;\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp638zvtkq.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp638zvtkq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp46k4t8ug.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp46k4t8ug.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s[i] >= 'a' && s[i]\
    \ <= 'z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpv0a2k6ds.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv0a2k6ds.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for (var i = 0; i < s.length; i++){\n    if (s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpi34inop3.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi34inop3.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpe0v_luok.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe0v_luok.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) % 2 === 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp_y7w8jx9.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_y7w8jx9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i)==='A'\
    \ || s.charAt(i)==='a' || s.charAt(i)==='E' || s.charAt(i)==='e' || s.charAt(i)==='I'\
    \ || s.charAt(i)==='i' || s.charAt(i)==='O' || s.charAt(i)==='o' || s.charAt(i)==='U'\
    \ || s.charAt(i)==='u'){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpehaqz0u7.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpehaqz0u7.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n\
    \  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp63iw98wz.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp63iw98wz.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmplct6_qqx.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmplct6_qqx.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)=='A' || s.charAt(i)=='E'\
    \ || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp0pi8rp5_.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0pi8rp5_.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpykodkyru.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpykodkyru.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i).toLowerCase() === 'a'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpawqk3g3e.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpawqk3g3e.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i' || s.charAt(i) == 'O' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'U' || s.charAt(i) == 'u'){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpnewli6ij.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnewli6ij.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) % 2 === 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpx97f6j47.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx97f6j47.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmppt2n4812.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmppt2n4812.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpl4strl23.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl4strl23.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for (let i = 0; i < s.length; i++){\n        if (i % 2 == 0){\n\
    \            if (s.charAt(i) == 'A' || s.charAt(i) == 'a'){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpx8588qqg.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx8588qqg.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'E' || s.charAt(i) == 'e'){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpxyu2p8mi.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxyu2p8mi.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i).toLowerCase()){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmp5jn8jltq.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5jn8jltq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpwy4n35bs.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwy4n35bs.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'a' && s[i]\
    \ <= 'z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpk1omrhvg.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk1omrhvg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i)){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp7bukahtd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7bukahtd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  let\
    \ count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpij9ly159.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpij9ly159.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    var\
    \ count = 0;\n    for(var i=0; i<s.length; i++){\n        if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpbsfgn802.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbsfgn802.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpthb2148u.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpthb2148u.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n\tvar\
    \ count = 0;\n\tfor(var i=0; i<s.length; i++){\n\t\tif(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a'){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmppfkb5l4g.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmppfkb5l4g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' &&\
    \ s[i] <= 'Z'){\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpi2d5xxrt.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi2d5xxrt.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n  var\
    \ count = 0;\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i).toUpperCase()\
    \ === s.charAt(i) && s.charAt(i) !== s.charAt(i+1)){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpylkztr0i.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpylkztr0i.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
    \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper(s){\n    let\
    \ count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' &&\
    \ s[i] <= 'Z'){\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpz4sy_hhp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz4sy_hhp.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

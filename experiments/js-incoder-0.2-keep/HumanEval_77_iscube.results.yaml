name: HumanEval_77_iscube
language: js
results:
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0 && a%6==0\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp_e4f4pk5.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_e4f4pk5.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 !== 0) return false;\n    if (a%2\
    \ === 0) return true;\n    if (a%3 === 0) return true;\n    if (a%4 === 0) return\
    \ true;\n    if (a%5 === 0) return true;\n    if (a%6 === 0) return true;\n  \
    \  if (a%7 === 0) return true;\n    if (a%8 === 0) return true;\n    if (a%9 ===\
    \ 0) return true;\n    if (a%10 === 0) return true;\n    if (a%11 === 0) return\
    \ true;\n    if (a%12 === 0) return true;\n    if (a%13 === 0) return true;\n\
    \    if (a%14 === 0) return true;\n    if (a%15 === 0) return true;\n    if (a%16\
    \ === 0) return true;\n    if (a%17 === 0) return true;\n    if (a%18 === 0) return\
    \ true;\n    if (a%19 === 0) return true;\n    if (a%20 === 0) return true;\n\
    \    if (a%21 === 0) return true;\n    if (a%22 === 0) return true;\n    if (a%23\
    \ === 0) return true;\n    if (a%24 === 0) return true;\n    if (a%25 === 0) return\
    \ true;\n    if (a%26 === 0) return true;\n    if (a%27 === 0) return true;\n\
    \    if (a%28 === 0) return true;\n    if (a%29 === 0) return true;\n    if (a%30\
    \ === 0) return true;\n    if (a%31 === 0) return true;\n    if (a%32 === 0) return\
    \ true;\n    if (a%33 === 0) return true;\n    if (a%34 === 0) return true;\n\
    \    if (a%35 === 0) return true;\n    if (a%36 === 0) return true;\n    if (a%37\
    \ === 0) return true;\n    if (a%38 === 0) return true;\n    if (a%39 === 0) return\
    \ true;\n    if (a%40 === 0) return true;\n    if (a%41 === 0) return true;\n\
    \    if (a%42 === 0) return true;\n    if (a%43 === 0) return true;\n    if (a%44\
    \ === 0) return true;\n    if (a%45 === 0) return true;\n    if (a%46 === 0) return\
    \ true;\n    if (a%47 === 0) return true;\n    if (a%48 === 0) return true;\n\
    \    if (a%49 === 0) return true;\n    if (a%50 === 0) return true;\n    if (a%51\
    \ === 0) return true;\n    if (a%52 === 0) return true;\n    if (a%53 === 0) return\
    \ true;\n    if (a%54 === 0) return true;\n    if (a%55 === 0) return true;\n\
    \    if (a%56 === 0) return true;\n    if (a%\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1smjhx6p.js:69\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl1ityrnm.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpch33ehru.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>9) return false\n    if(a===1) return true;\n    if(a===2)\
    \ return true;\n    if(a===3) return true;\n    if(a===4) return true;\n    if(a===5)\
    \ return true;\n    if(a===6) return true;\n    if(a===7) return true;\n    if(a===8)\
    \ return true;\n    if(a===9) return true;\n    if(a===10) return true;\n    if(a===11)\
    \ return true;\n    if(a===12) return true;\n    if(a===13) return true;\n   \
    \ if(a===14) return true;\n    if(a===15) return true;\n    if(a===16) return\
    \ true;\n    if(a===17) return true;\n    if(a===18) return true;\n    if(a===19)\
    \ return true;\n    if(a===20) return true;\n    if(a===21) return true;\n   \
    \ if(a===22) return true;\n    if(a===23) return true;\n    if(a===24) return\
    \ true;\n    if(a===25) return true;\n    if(a===26) return true;\n    if(a===27)\
    \ return true;\n    if(a===28) return true;\n    if(a===29) return true;\n   \
    \ if(a===30) return true;\n    if(a===31) return true;\n    if(a===32) return\
    \ true;\n    if(a===33) return true;\n    if(a===34) return true;\n    if(a===35)\
    \ return true;\n    if(a===36) return true;\n    if(a===37) return true;\n   \
    \ if(a===38) return true;\n    if(a===39) return true;\n    if(a===40) return\
    \ true;\n    if(a===41) return true;\n    if(a===42) return true;\n    if(a===43)\
    \ return true;\n    if(a===44) return true;\n    if(a===45) return true;\n   \
    \ if(a===46) return true;\n    if(a===47) return true;\n    if(a===48) return\
    \ true;\n    if(a===49) return true;\n    if(a===50) return true;\n    if(a===51)\
    \ return true;\n    if(a===52) return true;\n    if(a===53) return true;\n   \
    \ if(a===54) return true;\n    if(a===55) return true;\n    if(a===56) return\
    \ true;\n    if(a===57) return true;\n    if(a===58) return true;\n    if(a===59)\
    \ return true;\n    if(a===60) return true;\n    if(a===61) return true;\n   \
    \ if(a===62) return true;\n    if(a===63) return true;\n    return false;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpus00yv_1.js:87:10)\n    at Object.<anonymous> (/tmp/tmpus00yv_1.js:96:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpf9a46l5p.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph0ojmm37.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a<0){\n        return false;\n    }\n\
    \    if (a==0){\n        return true;\n    }\n    if (a==1){\n        return true;\n\
    \    }\n    if (a==2){\n        return true;\n    }\n    if (a==3){\n        return\
    \ true;\n    }\n    if (a==4){\n        return true;\n    }\n    if (a==5){\n\
    \        return true;\n    }\n    if (a==6){\n        return true;\n    }\n  \
    \  if (a==7){\n        return true;\n    }\n    if (a==8){\n        return true;\n\
    \    }\n    if (a==9){\n        return true;\n    }\n    if (a==10){\n       \
    \ return true;\n    }\n    if (a==11){\n        return true;\n    }\n    if (a==12){\n\
    \        return true;\n    }\n    if (a==13){\n        return true;\n    }\n \
    \   if (a==14){\n        return true;\n    }\n    if (a==15){\n        return\
    \ true;\n    }\n    if (a==16){\n        return true;\n    }\n    if (a==17){\n\
    \        return true;\n    }\n    if (a==18){\n        return true;\n    }\n \
    \   if (a==19){\n        return true;\n    }\n    if (a==20){\n        return\
    \ true;\n    }\n    if (a==21){\n        return true;\n    }\n    if (a==22){\n\
    \        return true;\n    }\n    if (a==23){\n        return true;\n    }\n \
    \   if (a==24){\n        return true;\n    }\n    if (a==25){\n        return\
    \ true;\n    }\n    if (a==26){\n        return true;\n    }\n    if (a==27){\n\
    \        return true;\n    }\n    if (a==28){\n        return true;\n    }\n \
    \   if (a==29){\n        return true;\n    }\n    if (a==30){\n        return\
    \ true;\n    }\n    if (a==31){\n        return true;\n    }\n    if (a==32){\n\
    \        return true;\n    }\n    if (a==33){\n        return true;\n    }\n \
    \   if (a==34){\n        return true;\n    }\n    if (a==35){\n        return\
    \ true;\n    }\n    if (a==36){\n        return true;\n    }\n    if (a==37){\n\
    \        return true;\n    }\n    if (a==38){\n        return true;\n    }\n \
    \   if (a==39){\n        return true;\n    }\n    if (a==40){\n        return\
    \ true;\n    }\n    if (a==41){\n        return true;\n    }\n    if (a==42){\n\
    \        return true;\n    }\n    if (a==43){\n        return true;\n    }\n \
    \   if (a==44){\n        return true;\n    }\n    if (a==45){\n        return\
    \ true;\n    }\n    if (a==46){\n        return true;\n    }\n    if (a==47){\n\
    \        return true;\n    }\n    if (a==48){\n        return true;\n    }\n \
    \   if (a==49){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpu4ycr98m.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgdfpv1b3.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    else if(a==1){\n        return false;\n    }\n    else if(a==2){\n      \
    \  return true;\n    }\n    else if(a==3){\n        return true;\n    }\n    else\
    \ if(a==4){\n        return true;\n    }\n    else if(a==5){\n        return true;\n\
    \    }\n    else if(a==6){\n        return true;\n    }\n    else if(a==7){\n\
    \        return true;\n    }\n    else if(a==8){\n        return true;\n    }\n\
    \    else if(a==9){\n        return true;\n    }\n    else if(a==10){\n      \
    \  return true;\n    }\n    else if(a==11){\n        return true;\n    }\n   \
    \ else if(a==12){\n        return true;\n    }\n    else if(a==13){\n        return\
    \ true;\n    }\n    else if(a==14){\n        return true;\n    }\n    else if(a==15){\n\
    \        return true;\n    }\n    else if(a==16){\n        return true;\n    }\n\
    \    else if(a==17){\n        return true;\n    }\n    else if(a==18){\n     \
    \   return true;\n    }\n    else if(a==19){\n        return true;\n    }\n  \
    \  else if(a==20){\n        return true;\n    }\n    else if(a==21){\n       \
    \ return true;\n    }\n    else if(a==22){\n        return true;\n    }\n    else\
    \ if(a==23){\n        return true;\n    }\n    else if(a==24){\n        return\
    \ true;\n    }\n    else if(a==25){\n        return true;\n    }\n    else if(a==26){\n\
    \        return true;\n    }\n    else if(a==27){\n        return true;\n    }\n\
    \    else if(a==28){\n        return true;\n    }\n    else if(a==29){\n     \
    \   return true;\n    }\n    else if(a==30){\n        return true;\n    }\n  \
    \  else if(a==31){\n        return true;\n    }\n    else if(a==32){\n       \
    \ return true;\n    }\n    else if(a==33){\n        return true;\n    }\n    else\
    \ if(a==34){\n        return true;\n    }\n    else if(a==35){\n        return\
    \ true;\n    }\n    else if(a==36){\n        return true;\n    }\n    else if(a==37){\n\
    \        return true;\n    }\n    else if(a==38){\n        return true;\n    }\n\
    \    else if(a==39){\n        return true;\n    }\n    else if(a==40){\n     \
    \   return true;\n    }\n    else if(a==41){\n        return true;\n    }\n  \
    \  else if(a==42){\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpeksk1xr4.js:155\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwyw5u2jd.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxbe5snh6.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    for(let i=1;i<=a;i++){\n        if(a%i==0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpfqn4w231.js:28:10)\n    at Object.<anonymous> (/tmp/tmpfqn4w231.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpzj9tlbje.js:24:10)\n    at Object.<anonymous> (/tmp/tmpzj9tlbje.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ false;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n\
    \        return false;\n    }\n    if(a==7){\n        return false;\n    }\n \
    \   if(a==8){\n        return false;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return false;\n    }\n    if(a==11){\n       \
    \ return false;\n    }\n    if(a==12){\n        return false;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return false;\n    }\n\
    \    if(a==15){\n        return false;\n    }\n    if(a==16){\n        return\
    \ false;\n    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n\
    \        return false;\n    }\n    if(a==19){\n        return false;\n    }\n\
    \    if(a==20){\n        return false;\n    }\n    if(a==21){\n        return\
    \ false;\n    }\n    if(a==22){\n        return false;\n    }\n    if(a==23){\n\
    \        return false;\n    }\n    if(a==24){\n        return false;\n    }\n\
    \    if(a==25){\n        return false;\n    }\n    if(a==26){\n        return\
    \ false;\n    }\n    if(a==27){\n        return false;\n    }\n    if(a==28){\n\
    \        return false;\n    }\n    if(a==29){\n        return false;\n    }\n\
    \    if(a==30){\n        return false;\n    }\n    if(a==31){\n        return\
    \ false;\n    }\n    if(a==32){\n        return false;\n    }\n    if(a==33){\n\
    \        return false;\n    }\n    if(a==34){\n        return false;\n    }\n\
    \    if(a==35){\n        return false;\n    }\n    if(a==36){\n        return\
    \ false;\n    }\n    if(a==37){\n        return false;\n    }\n    if(a==38){\n\
    \        return false;\n    }\n    if(a==39){\n        return false;\n    }\n\
    \    if(a==40){\n        return false;\n    }\n    if(a==41){\n        return\
    \ false;\n    }\n    if(a==42){\n        return false;\n    }\n    if(a==43){\n\
    \        return false;\n    }\n    if(a==44){\n        return false;\n    }\n\
    \    if(a==45){\n        return false;\n    }\n    if(a==46){\n        return\
    \ false;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return false;\n    }\n    if(a==49){\n        return false;\n    }\n\
    \    if(a==50){\n        return false;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptz_32gvg.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzrx033l8.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0){\n        return false;\n\
    \    }\n    for(let i = 2; i <= Math.sqrt(a); i++){\n        if(a%i===0){\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpa6mto5h7.js:29:10)\n    at Object.<anonymous> (/tmp/tmpa6mto5h7.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7j5gqb4n.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3h1o8mng.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    if(a==180) return true;\n  \
    \  if(a==0) return true;\n    if(a==1) return true;\n    if(a==2) return true;\n\
    \    if(a==3) return true;\n    if(a==4) return true;\n    if(a==5) return true;\n\
    \    if(a==6) return true;\n    if(a==7) return true;\n    if(a==8) return true;\n\
    \    if(a==9) return true;\n    if(a==10) return true;\n    if(a==11) return true;\n\
    \    if(a==12) return true;\n    if(a==13) return true;\n    if(a==14) return\
    \ true;\n    if(a==15) return true;\n    if(a==16) return true;\n    if(a==17)\
    \ return true;\n    if(a==18) return true;\n    if(a==19) return true;\n    if(a==20)\
    \ return true;\n    if(a==21) return true;\n    if(a==22) return true;\n    if(a==23)\
    \ return true;\n    if(a==24) return true;\n    if(a==25) return true;\n    if(a==26)\
    \ return true;\n    if(a==27) return true;\n    if(a==28) return true;\n    if(a==29)\
    \ return true;\n    if(a==30) return true;\n    if(a==31) return true;\n    if(a==32)\
    \ return true;\n    if(a==33) return true;\n    if(a==34) return true;\n    if(a==35)\
    \ return true;\n    if(a==36) return true;\n    if(a==37) return true;\n    if(a==38)\
    \ return true;\n    if(a==39) return true;\n    if(a==40) return true;\n    if(a==41)\
    \ return true;\n    if(a==42) return true;\n    if(a==43) return true;\n    if(a==44)\
    \ return true;\n    if(a==45) return true;\n    if(a==46) return true;\n    if(a==47)\
    \ return true;\n    if(a==48) return true;\n    if(a==49) return true;\n    if(a==50)\
    \ return true;\n    if(a==51) return true;\n    if(a==52) return true;\n    if(a==53)\
    \ return true;\n    if(a==54) return true;\n    if(a==55) return true;\n    if(a==56)\
    \ return true;\n    if(a==57) return true;\n    if(a==58) return true;\n    if(a==59)\
    \ return true;\n    if(a==60) return true;\n    if(a==61) return true;\n    if(a==62)\
    \ return true;\n    if(a==63) return true;\n    if(a==64) return true;\n    if(a==65)\
    \ return true;\n    if(a==66) return true;\n    if(a==67) return true;\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp65w488rw.js:100\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp83c7m2bm.js:24:10)\n    at Object.<anonymous> (/tmp/tmp83c7m2bm.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n\tif(a%1 !== 0) return false;\n\tif(a<0) return\
    \ false;\n\tif(a>180) return false;\n\tif(a==180) return true;\n\tif(a==181) return\
    \ false;\n\tif(a==182) return false;\n\tif(a==183) return true;\n\tif(a==184)\
    \ return false;\n\tif(a==185) return true;\n\tif(a==186) return false;\n\tif(a==187)\
    \ return true;\n\tif(a==188) return false;\n\tif(a==189) return true;\n\tif(a==190)\
    \ return false;\n\tif(a==191) return true;\n\tif(a==192) return false;\n\tif(a==193)\
    \ return true;\n\tif(a==194) return false;\n\tif(a==195) return true;\n\tif(a==196)\
    \ return false;\n\tif(a==197) return true;\n\tif(a==198) return false;\n\tif(a==199)\
    \ return true;\n\tif(a==200) return false;\n\tif(a==201) return true;\n\tif(a==202)\
    \ return false;\n\tif(a==203) return true;\n\tif(a==204) return false;\n\tif(a==205)\
    \ return true;\n\tif(a==206) return false;\n\tif(a==207) return true;\n\tif(a==208)\
    \ return false;\n\tif(a==209) return true;\n\tif(a==210) return false;\n\tif(a==211)\
    \ return true;\n\tif(a==212) return false;\n\tif(a==213) return true;\n\tif(a==214)\
    \ return false;\n\tif(a==215) return true;\n\tif(a==216) return false;\n\tif(a==217)\
    \ return true;\n\tif(a==218) return false;\n\tif(a==219) return true;\n\tif(a==220)\
    \ return false;\n\tif(a==221) return true;\n\tif(a==222) return false;\n\tif(a==223)\
    \ return true;\n\tif(a==224) return false;\n\tif(a==225) return true;\n\tif(a==226)\
    \ return false;\n\tif(a==227) return true;\n\tif(a==228) return false;\n\tif(a==229)\
    \ return true;\n\tif(a==230) return false;\n\tif(a==231) return true;\n\tif(a==232)\
    \ return false;\n\tif(a==233) return true;\n\tif(a==234) return false;\n\tif(a==235)\
    \ return true;\n\tif(a==236) return false;\n\tif(a==237) return true;\n\tif(a==238)\
    \ return \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprjxye1ww.js:89\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd4pjkwly.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsdph9eio.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 !== 0) return false;\n    if (a<0)\
    \ return false;\n    if (a==0) return true;\n    if (a==1) return true;\n    if\
    \ (a==2) return true;\n    if (a==3) return true;\n    if (a==4) return true;\n\
    \    if (a==5) return true;\n    if (a==6) return true;\n    if (a==7) return\
    \ true;\n    if (a==8) return true;\n    if (a==9) return true;\n    if (a==10)\
    \ return true;\n    if (a==11) return true;\n    if (a==12) return true;\n   \
    \ if (a==13) return true;\n    if (a==14) return true;\n    if (a==15) return\
    \ true;\n    if (a==16) return true;\n    if (a==17) return true;\n    if (a==18)\
    \ return true;\n    if (a==19) return true;\n    if (a==20) return true;\n   \
    \ if (a==21) return true;\n    if (a==22) return true;\n    if (a==23) return\
    \ true;\n    if (a==24) return true;\n    if (a==25) return true;\n    if (a==26)\
    \ return true;\n    if (a==27) return true;\n    if (a==28) return true;\n   \
    \ if (a==29) return true;\n    if (a==30) return true;\n    if (a==31) return\
    \ true;\n    if (a==32) return true;\n    if (a==33) return true;\n    if (a==34)\
    \ return true;\n    if (a==35) return true;\n    if (a==36) return true;\n   \
    \ if (a==37) return true;\n    if (a==38) return true;\n    if (a==39) return\
    \ true;\n    if (a==40) return true;\n    if (a==41) return true;\n    if (a==42)\
    \ return true;\n    if (a==43) return true;\n    if (a==44) return true;\n   \
    \ if (a==45) return true;\n    if (a==46) return true;\n    if (a==47) return\
    \ true;\n    if (a==48) return true;\n    if (a==49) return true;\n    if (a==50)\
    \ return true;\n    if (a==51) return true;\n    if (a==52) return true;\n   \
    \ if (a==53) return true;\n    if (a==54) return true;\n    if (a==55) return\
    \ true;\n    if (a==56) return true;\n    if (a==57) return true;\n    if (a==58)\
    \ return true;\n    if (a==59) return true;\n    if (a==60) return true;\n   \
    \ if (a==61) return true;\n    if (a==62) return true;\n    if (a==63) return\
    \ true;\n    if (a==64) return true;\n    if (a==65) return true;\n    if (a==66)\
    \ return true;\n    if (a==67) return true;\n    if (a==68) return true;\n   \
    \ if (a==69) return true;\n    if (a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvfhhlqhb.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-180){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkhwpayp7.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3yeztel6.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphq39t_2e.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnny2on05.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm9gtg_bl.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp__gezs2u.js:24:10)\n    at Object.<anonymous> (/tmp/tmp__gezs2u.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpujtencq2.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    for(var\
    \ i = 2; i <= Math.sqrt(a); i++){\n        if(a%i===0) return false;\n    }\n\
    \    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpvqjwu153.js:25:10)\n    at Object.<anonymous> (/tmp/tmpvqjwu153.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 !== 0) return false;\n    if (a<0)\
    \ return false;\n    if (a==0) return true;\n    if (a==1) return true;\n    if\
    \ (a==2) return true;\n    if (a==3) return true;\n    if (a==4) return true;\n\
    \    if (a==5) return true;\n    if (a==6) return true;\n    if (a==7) return\
    \ true;\n    if (a==8) return true;\n    if (a==9) return true;\n    if (a==10)\
    \ return true;\n    if (a==11) return true;\n    if (a==12) return true;\n   \
    \ if (a==13) return true;\n    if (a==14) return true;\n    if (a==15) return\
    \ true;\n    if (a==16) return true;\n    if (a==17) return true;\n    if (a==18)\
    \ return true;\n    if (a==19) return true;\n    if (a==20) return true;\n   \
    \ if (a==21) return true;\n    if (a==22) return true;\n    if (a==23) return\
    \ true;\n    if (a==24) return true;\n    if (a==25) return true;\n    if (a==26)\
    \ return true;\n    if (a==27) return true;\n    if (a==28) return true;\n   \
    \ if (a==29) return true;\n    if (a==30) return true;\n    if (a==31) return\
    \ true;\n    if (a==32) return true;\n    if (a==33) return true;\n    if (a==34)\
    \ return true;\n    if (a==35) return true;\n    if (a==36) return true;\n   \
    \ if (a==37) return true;\n    if (a==38) return true;\n    if (a==39) return\
    \ true;\n    if (a==40) return true;\n    if (a==41) return true;\n    if (a==42)\
    \ return true;\n    if (a==43) return true;\n    if (a==44) return true;\n   \
    \ if (a==45) return true;\n    if (a==46) return true;\n    if (a==47) return\
    \ true;\n    if (a==48) return true;\n    if (a==49) return true;\n    if (a==50)\
    \ return true;\n    if (a==51) return true;\n    if (a==52) return true;\n   \
    \ if (a==53) return true;\n    if (a==54) return true;\n    if (a==55) return\
    \ true;\n    if (a==56) return true;\n    if (a==57) return true;\n    if (a==58)\
    \ return true;\n    if (a==59) return true;\n    if (a==60) return true;\n   \
    \ if (a==61) return true;\n    if (a==62) return true;\n    if (a==63) return\
    \ true;\n    if (a==64) return true;\n    if (a==65) return true;\n    if (a==66)\
    \ return true;\n    if (a==67) return true;\n    if (a==68) return true;\n   \
    \ if (a==69) return true;\n    if (a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpady4qij3.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp1lpypz34.js:24:10)\n    at Object.<anonymous> (/tmp/tmp1lpypz34.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmps3knh7vt.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3voemgt_.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpofllxd6j.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprbmdqvdp.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpih6ox6kp.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8hu2gzrb.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppt1sax0a.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3na_oges.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a%1 === 0 && a%2 === 0 && a%3 ===\
    \ 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 === 0 && a%8 === 0 && a%9 ===\
    \ 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13 === 0 && a%14 === 0 && a%15\
    \ === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0 && a%19 === 0 && a%20 === 0\
    \ && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24 === 0 && a%25 === 0 && a%26\
    \ === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0 && a%30 === 0 && a%31 === 0\
    \ && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35 === 0 && a%36 === 0 && a%37\
    \ === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0 && a%41 === 0 && a%42 === 0\
    \ && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46 === 0 && a%47 === 0 && a%48\
    \ === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0 && a%52 === 0 && a%53 === 0\
    \ && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57 === 0 && a%58 === 0 && a%59\
    \ === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0 && a%63 === 0 && a%64 === 0\
    \ && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68 === 0 && a%69 === 0 && a%70\
    \ === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0 && a%74 === 0 && a%75 === 0\
    \ && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79 === 0 && a%80 === 0 && a%81\
    \ === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0 && a%85 === 0 && a%86 === 0\
    \ && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90 === 0 && a%91 === 0 && a%92\
    \ === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0 && a%96 === 0 && a%97 === 0\
    \ && a%98 === 0 && a\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4akpgdru.js:13\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    for(var i=1;i<=a;i++){\n        if(a%i==0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpu7uaao45.js:27:10)\n    at Object.<anonymous> (/tmp/tmpu7uaao45.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpv_f71slc.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplnlnvyv1.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a === 0 || a === 1 || a === 2 || a ===\
    \ 3 || a === 4 || a === 5 || a === 6 || a === 7 || a === 8 || a === 9 || a ===\
    \ 10){\n    return true;\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpvofu6qmd.js:24:10)\n    at Object.<anonymous> (/tmp/tmpvofu6qmd.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-180){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd2szlftr.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdf6vll_y.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0) return true;\n    if(a==1) return\
    \ false;\n    if(a==-1) return false;\n    if(a==2) return true;\n    if(a==-2)\
    \ return false;\n    if(a==3) return true;\n    if(a==-3) return false;\n    if(a==4)\
    \ return true;\n    if(a==-4) return false;\n    if(a==5) return true;\n    if(a==-5)\
    \ return false;\n    if(a==6) return true;\n    if(a==-6) return false;\n    if(a==7)\
    \ return true;\n    if(a==-7) return false;\n    if(a==8) return true;\n    if(a==-8)\
    \ return false;\n    if(a==9) return true;\n    if(a==-9) return false;\n    if(a==10)\
    \ return true;\n    if(a==-10) return false;\n    if(a==11) return true;\n   \
    \ if(a==-11) return false;\n    if(a==12) return true;\n    if(a==-12) return\
    \ false;\n    if(a==13) return true;\n    if(a==-13) return false;\n    if(a==14)\
    \ return true;\n    if(a==-14) return false;\n    if(a==15) return true;\n   \
    \ if(a==-15) return false;\n    if(a==16) return true;\n    if(a==-16) return\
    \ false;\n    if(a==17) return true;\n    if(a==-17) return false;\n    if(a==18)\
    \ return true;\n    if(a==-18) return false;\n    if(a==19) return true;\n   \
    \ if(a==-19) return false;\n    if(a==20) return true;\n    if(a==-20) return\
    \ false;\n    if(a==21) return true;\n    if(a==-21) return false;\n    if(a==22)\
    \ return true;\n    if(a==-22) return false;\n    if(a==23) return true;\n   \
    \ if(a==-23) return false;\n    if(a==24) return true;\n    if(a==-24) return\
    \ false;\n    if(a==25) return true;\n    if(a==-25) return false;\n    if(a==26)\
    \ return true;\n    if(a==-26) return false;\n    if(a==27) return true;\n   \
    \ if(a==-27) return false;\n    if(a==28) return true;\n    if(a==-28) return\
    \ false;\n    if(a==29) return true;\n    if(a==-29) return false;\n    if(a==30)\
    \ return true;\n    if(a==-30) return false;\n    if(a==31) return true;\n   \
    \ if(a==-31) return false;\n    if(a==32) return true;\n    if(a==-32) return\
    \ false;\n    if(a==33) return true;\n    if(a==-33) return false;\n    if(a==34)\
    \ return true;\n    if(a==-34) return false;\n    if(a==35) return true;\n   \
    \ if(a==-35) return false;\n    if(a==36) return true;\n    if(a==-36) return\
    \ false;\n    if(a==37) return true;\n    if(a==-37) return false;\n    if(a==38)\
    \ return true;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpod8uc9gp.js:103\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpstdr1wul.js:24:10)\n    at Object.<anonymous> (/tmp/tmpstdr1wul.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpclwzy99g.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppwoeh4rt.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpaddi98ex.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn2l4l1hd.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmps_slua7u.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppt7ybhtk.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz1zaubjd.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%a%a%a===0;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp_s6wa8ch.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_s6wa8ch.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdik_muwi.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmprz0s0yxt.js:24:10)\n    at Object.<anonymous> (/tmp/tmprz0s0yxt.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbgrykhqx.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    for(var i=1;i<=a;i++){\n        if(a%i==0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpc9tmnqwr.js:28:10)\n    at Object.<anonymous> (/tmp/tmpc9tmnqwr.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a%1 === 0 && a >= 0 && a <= 180);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp1u8c79a1.js:21:10)\n    at Object.<anonymous> (/tmp/tmp1u8c79a1.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0){\n        return false;\n\
    \    }\n    for(let i = 2; i <= Math.sqrt(a); i++){\n        if(a%i===0){\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp6tj4u9kb.js:29:10)\n    at Object.<anonymous> (/tmp/tmp6tj4u9kb.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a === 0){\n    return true;\n  }\n  if(a\
    \ === 1){\n    return false;\n  }\n  if(a === -1){\n    return true;\n  }\n  if(a\
    \ === 64){\n    return true;\n  }\n  if(a === -64){\n    return false;\n  }\n\
    \  if(a === 180){\n    return true;\n  }\n  if(a === -180){\n    return false;\n\
    \  }\n  if(a === 181){\n    return false;\n  }\n  if(a === -181){\n    return\
    \ true;\n  }\n  if(a === 182){\n    return false;\n  }\n  if(a === -182){\n  \
    \  return true;\n  }\n  if(a === 183){\n    return false;\n  }\n  if(a === -183){\n\
    \    return false;\n  }\n  if(a === 184){\n    return false;\n  }\n  if(a ===\
    \ -184){\n    return true;\n  }\n  if(a === 185){\n    return false;\n  }\n  if(a\
    \ === -185){\n    return false;\n  }\n  if(a === 186){\n    return false;\n  }\n\
    \  if(a === -186){\n    return true;\n  }\n  if(a === 187){\n    return false;\n\
    \  }\n  if(a === -187){\n    return false;\n  }\n  if(a === 188){\n    return\
    \ false;\n  }\n  if(a === -188){\n    return true;\n  }\n  if(a === 189){\n  \
    \  return false;\n  }\n  if(a === -189){\n    return false;\n  }\n  if(a === 190){\n\
    \    return false;\n  }\n  if(a === -190){\n    return true;\n  }\n  if(a ===\
    \ 191){\n    return false;\n  }\n  if(a === -191){\n    return false;\n  }\n \
    \ if(a === 192){\n    return false;\n  }\n  if(a === -192){\n    return false;\n\
    \  }\n  if(a === 193){\n    return false;\n  }\n  if(a === -193){\n    return\
    \ true;\n  }\n  if(a === 194){\n    return false;\n  }\n  if(a === -194){\n  \
    \  return false;\n  }\n  if(a === 195){\n    return false;\n  }\n  if(a === -195){\n\
    \    return false;\n  }\n  if(a === 196){\n    return false;\n  }\n  if(a ===\
    \ -196){\n    return false;\n  }\n  if(a === 197){\n    return false;\n  }\n \
    \ if(a === -197){\n    return false;\n  }\n  if(a === 198){\n    return false;\n\
    \  }\n  if(a === -198){\n    return false;\n  }\n  if(a === 199){\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmps8pe5mgr.js:157\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ false;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n\
    \        return false;\n    }\n    if(a==7){\n        return false;\n    }\n \
    \   if(a==8){\n        return false;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return false;\n    }\n    if(a==11){\n       \
    \ return false;\n    }\n    if(a==12){\n        return false;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return false;\n    }\n\
    \    if(a==15){\n        return false;\n    }\n    if(a==16){\n        return\
    \ false;\n    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n\
    \        return false;\n    }\n    if(a==19){\n        return false;\n    }\n\
    \    if(a==20){\n        return false;\n    }\n    if(a==21){\n        return\
    \ false;\n    }\n    if(a==22){\n        return false;\n    }\n    if(a==23){\n\
    \        return false;\n    }\n    if(a==24){\n        return false;\n    }\n\
    \    if(a==25){\n        return false;\n    }\n    if(a==26){\n        return\
    \ false;\n    }\n    if(a==27){\n        return false;\n    }\n    if(a==28){\n\
    \        return false;\n    }\n    if(a==29){\n        return false;\n    }\n\
    \    if(a==30){\n        return false;\n    }\n    if(a==31){\n        return\
    \ false;\n    }\n    if(a==32){\n        return false;\n    }\n    if(a==33){\n\
    \        return false;\n    }\n    if(a==34){\n        return false;\n    }\n\
    \    if(a==35){\n        return false;\n    }\n    if(a==36){\n        return\
    \ false;\n    }\n    if(a==37){\n        return false;\n    }\n    if(a==38){\n\
    \        return false;\n    }\n    if(a==39){\n        return false;\n    }\n\
    \    if(a==40){\n        return false;\n    }\n    if(a==41){\n        return\
    \ false;\n    }\n    if(a==42){\n        return false;\n    }\n    if(a==43){\n\
    \        return false;\n    }\n    if(a==44){\n        return false;\n    }\n\
    \    if(a==45){\n        return false;\n    }\n    if(a==46){\n        return\
    \ false;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return false;\n    }\n    if(a==49){\n        return false;\n    }\n\
    \    if(a==50){\n        return false;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd5hy33w1.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_hhb_dw0.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a%1 === 0 && a%2 === 0 && a%3 ===\
    \ 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 === 0 && a%8 === 0 && a%9 ===\
    \ 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13 === 0 && a%14 === 0 && a%15\
    \ === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0 && a%19 === 0 && a%20 === 0\
    \ && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24 === 0 && a%25 === 0 && a%26\
    \ === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0 && a%30 === 0 && a%31 === 0\
    \ && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35 === 0 && a%36 === 0 && a%37\
    \ === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0 && a%41 === 0 && a%42 === 0\
    \ && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46 === 0 && a%47 === 0 && a%48\
    \ === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0 && a%52 === 0 && a%53 === 0\
    \ && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57 === 0 && a%58 === 0 && a%59\
    \ === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0 && a%63 === 0 && a%64 === 0\
    \ && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68 === 0 && a%69 === 0 && a%70\
    \ === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0 && a%74 === 0 && a%75 === 0\
    \ && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79 === 0 && a%80 === 0 && a%81\
    \ === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0 && a%85 === 0 && a%86 === 0\
    \ && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90 === 0 && a%91 === 0 && a%92\
    \ === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0 && a%96 === 0 && a%97 === 0\
    \ && a%98 === 0 && a\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3otdwzgy.js:13\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmbvucafw.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbwplwxye.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzgw72oj2.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpocsr54pd.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvmr2tryw.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyt7w1zub.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsrwd7gkb.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 === 0) return false;\n    if (a%2\
    \ === 0) return true;\n    if (a%3===0) return true;\n    if (a%4===0) return\
    \ true;\n    if (a%5===0) return true;\n    if (a%6===0) return true;\n    if\
    \ (a%7===0) return true;\n    if (a%8===0) return true;\n    if (a%9===0) return\
    \ true;\n    if (a%10===0) return true;\n    if (a%11===0) return true;\n    if\
    \ (a%12===0) return true;\n    if (a%13===0) return true;\n    if (a%14===0) return\
    \ true;\n    if (a%15===0) return true;\n    if (a%16===0) return true;\n    if\
    \ (a%17===0) return true;\n    if (a%18===0) return true;\n    if (a%19===0) return\
    \ true;\n    if (a%20===0) return true;\n    if (a%21===0) return true;\n    if\
    \ (a%22===0) return true;\n    if (a%23===0) return true;\n    if (a%24===0) return\
    \ true;\n    if (a%25===0) return true;\n    if (a%26===0) return true;\n    if\
    \ (a%27===0) return true;\n    if (a%28===0) return true;\n    if (a%29===0) return\
    \ true;\n    if (a%30===0) return true;\n    if (a%31===0) return true;\n    if\
    \ (a%32===0) return true;\n    if (a%33===0) return true;\n    if (a%34===0) return\
    \ true;\n    if (a%35===0) return true;\n    if (a%36===0) return true;\n    if\
    \ (a%37===0) return true;\n    if (a%38===0) return true;\n    if (a%39===0) return\
    \ true;\n    if (a%40===0) return true;\n    if (a%41===0) return true;\n    if\
    \ (a%42===0) return true;\n    if (a%43===0) return true;\n    if (a%44===0) return\
    \ true;\n    if (a%45===0) return true;\n    if (a%46===0) return true;\n    if\
    \ (a%47===0) return true;\n    if (a%48===0) return true;\n    if (a%49===0) return\
    \ true;\n    if (a%50===0) return true;\n    if (a%51===0) return true;\n    if\
    \ (a%52===0) return true;\n    if (a%53===0) return true;\n    if (a%54===0) return\
    \ true;\n    if (a%55===0) return true;\n    if (a%56===0) return true;\n    if\
    \ (a%57===0) return true;\n    if (\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0f_609dc.js:70\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplwcv9qbx.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvl5ka9vr.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm0plds4h.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzqokl7l3.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){ \n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpg0nptkx3.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    for(var\
    \ i = 1;i<=a;i++){\n        if(a%i===0) return false;\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpo9ai6qdx.js:24:10)\n    at Object.<anonymous> (/tmp/tmpo9ai6qdx.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzyfcq63s.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvg99vnqe.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxu7_kvmv.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%a%a%a==0;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpuomauqnk.js:21:10)\n    at Object.<anonymous> (/tmp/tmpuomauqnk.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfvb33jj7.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpxwpi2zls.js:24:10)\n    at Object.<anonymous> (/tmp/tmpxwpi2zls.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2_wdmf6y.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpuognkkys.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 === 0){\n        return true;\n \
    \   }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpodnn180o.js:24:10)\n    at Object.<anonymous> (/tmp/tmpodnn180o.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzrviqzmt.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 !== 0) return false;\n    if (a<0)\
    \ return false;\n    if (a==0) return true;\n    if (a==1) return true;\n    if\
    \ (a==2) return true;\n    if (a==3) return true;\n    if (a==4) return true;\n\
    \    if (a==5) return true;\n    if (a==6) return true;\n    if (a==7) return\
    \ true;\n    if (a==8) return true;\n    if (a==9) return true;\n    if (a==10)\
    \ return true;\n    if (a==11) return true;\n    if (a==12) return true;\n   \
    \ if (a==13) return true;\n    if (a==14) return true;\n    if (a==15) return\
    \ true;\n    if (a==16) return true;\n    if (a==17) return true;\n    if (a==18)\
    \ return true;\n    if (a==19) return true;\n    if (a==20) return true;\n   \
    \ if (a==21) return true;\n    if (a==22) return true;\n    if (a==23) return\
    \ true;\n    if (a==24) return true;\n    if (a==25) return true;\n    if (a==26)\
    \ return true;\n    if (a==27) return true;\n    if (a==28) return true;\n   \
    \ if (a==29) return true;\n    if (a==30) return true;\n    if (a==31) return\
    \ true;\n    if (a==32) return true;\n    if (a==33) return true;\n    if (a==34)\
    \ return true;\n    if (a==35) return true;\n    if (a==36) return true;\n   \
    \ if (a==37) return true;\n    if (a==38) return true;\n    if (a==39) return\
    \ true;\n    if (a==40) return true;\n    if (a==41) return true;\n    if (a==42)\
    \ return true;\n    if (a==43) return true;\n    if (a==44) return true;\n   \
    \ if (a==45) return true;\n    if (a==46) return true;\n    if (a==47) return\
    \ true;\n    if (a==48) return true;\n    if (a==49) return true;\n    if (a==50)\
    \ return true;\n    if (a==51) return true;\n    if (a==52) return true;\n   \
    \ if (a==53) return true;\n    if (a==54) return true;\n    if (a==55) return\
    \ true;\n    if (a==56) return true;\n    if (a==57) return true;\n    if (a==58)\
    \ return true;\n    if (a==59) return true;\n    if (a==60) return true;\n   \
    \ if (a==61) return true;\n    if (a==62) return true;\n    if (a==63) return\
    \ true;\n    if (a==64) return true;\n    if (a==65) return true;\n    if (a==66)\
    \ return true;\n    if (a==67) return true;\n    if (a==68) return true;\n   \
    \ if (a==69) return true;\n    if (a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphs6ym53d.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpiz9yhus2.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 === 0){\n        return true\n  \
    \  }\n    return false\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp9udca_tl.js:24:10)\n    at Object.<anonymous> (/tmp/tmp9udca_tl.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a%1 === 0 && a%2 === 0 && a%3 ===\
    \ 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 === 0 && a%8 === 0 && a%9 ===\
    \ 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13 === 0 && a%14 === 0 && a%15\
    \ === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0 && a%19 === 0 && a%20 === 0\
    \ && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24 === 0 && a%25 === 0 && a%26\
    \ === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0 && a%30 === 0 && a%31 === 0\
    \ && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35 === 0 && a%36 === 0 && a%37\
    \ === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0 && a%41 === 0 && a%42 === 0\
    \ && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46 === 0 && a%47 === 0 && a%48\
    \ === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0 && a%52 === 0 && a%53 === 0\
    \ && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57 === 0 && a%58 === 0 && a%59\
    \ === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0 && a%63 === 0 && a%64 === 0\
    \ && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68 === 0 && a%69 === 0 && a%70\
    \ === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0 && a%74 === 0 && a%75 === 0\
    \ && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79 === 0 && a%80 === 0 && a%81\
    \ === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0 && a%85 === 0 && a%86 === 0\
    \ && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90 === 0 && a%91 === 0 && a%92\
    \ === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0 && a%96 === 0 && a%97 === 0\
    \ && a%98 === 0 && a\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvy435gyy.js:13\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0) return true;\n    if(a==1) return\
    \ false;\n    if(a==-1) return false;\n    if(a==2) return true;\n    if(a==-2)\
    \ return false;\n    if(a==3) return true;\n    if(a==-3) return false;\n    if(a==4)\
    \ return true;\n    if(a==-4) return false;\n    if(a==5) return true;\n    if(a==-5)\
    \ return false;\n    if(a==6) return true;\n    if(a==-6) return false;\n    if(a==7)\
    \ return true;\n    if(a==-7) return false;\n    if(a==8) return true;\n    if(a==-8)\
    \ return false;\n    if(a==9) return true;\n    if(a==-9) return false;\n    if(a==10)\
    \ return true;\n    if(a==-10) return false;\n    if(a==11) return true;\n   \
    \ if(a==-11) return false;\n    if(a==12) return true;\n    if(a==-12) return\
    \ false;\n    if(a==13) return true;\n    if(a==-13) return false;\n    if(a==14)\
    \ return true;\n    if(a==-14) return false;\n    if(a==15) return true;\n   \
    \ if(a==-15) return false;\n    if(a==16) return true;\n    if(a==-16) return\
    \ false;\n    if(a==17) return true;\n    if(a==-17) return false;\n    if(a==18)\
    \ return true;\n    if(a==-18) return false;\n    if(a==19) return true;\n   \
    \ if(a==-19) return false;\n    if(a==20) return true;\n    if(a==-20) return\
    \ false;\n    if(a==21) return true;\n    if(a==-21) return false;\n    if(a==22)\
    \ return true;\n    if(a==-22) return false;\n    if(a==23) return true;\n   \
    \ if(a==-23) return false;\n    if(a==24) return true;\n    if(a==-24) return\
    \ false;\n    if(a==25) return true;\n    if(a==-25) return false;\n    if(a==26)\
    \ return true;\n    if(a==-26) return false;\n    if(a==27) return true;\n   \
    \ if(a==-27) return false;\n    if(a==28) return true;\n    if(a==-28) return\
    \ false;\n    if(a==29) return true;\n    if(a==-29) return false;\n    if(a==30)\
    \ return true;\n    if(a==-30) return false;\n    if(a==31) return true;\n   \
    \ if(a==-31) return false;\n    if(a==32) return true;\n    if(a==-32) return\
    \ false;\n    if(a==33) return true;\n    if(a==-33) return false;\n    if(a==34)\
    \ return true;\n    if(a==-34) return false;\n    if(a==35) return true;\n   \
    \ if(a==-35) return false;\n    if(a==36) return true;\n    if(a==-36) return\
    \ false;\n    if(a==37) return true;\n    if(a==-37) return false;\n    if(a==38)\
    \ return true;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr217dt0p.js:103\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsfc9jgfd.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjb50rf0d.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpi4ngquoj.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvmizrq7e.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>1) return false;\n    if(a==1) return true;\n    if(a==2)\
    \ return true;\n    if(a==3) return true;\n    if(a==4) return true;\n    if(a==5)\
    \ return true;\n    if(a==6) return true;\n    if(a==7) return true;\n    if(a==8)\
    \ return true;\n    if(a==9) return true;\n    if(a==10) return true;\n    if(a==11)\
    \ return true;\n    if(a==12) return true;\n    if(a==13) return true;\n    if(a==14)\
    \ return true;\n    if(a==15) return true;\n    if(a==16) return true;\n    if(a==17)\
    \ return true;\n    if(a==18) return true;\n    if(a==19) return true;\n    if(a==20)\
    \ return true;\n    if(a==21) return true;\n    if(a==22) return true;\n    if(a==23)\
    \ return true;\n    if(a==24) return true;\n    if(a==25) return true;\n    if(a==26)\
    \ return true;\n    if(a==27) return true;\n    if(a==28) return true;\n    if(a==29)\
    \ return true;\n    if(a==30) return true;\n    if(a==31) return true;\n    if(a==32)\
    \ return true;\n    if(a==33) return true;\n    if(a==34) return true;\n    if(a==35)\
    \ return true;\n    if(a==36) return true;\n    if(a==37) return true;\n    if(a==38)\
    \ return true;\n    if(a==39) return true;\n    if(a==40) return true;\n    if(a==41)\
    \ return true;\n    if(a==42) return true;\n    if(a==43) return true;\n    if(a==44)\
    \ return true;\n    if(a==45) return true;\n    if(a==46) return true;\n    if(a==47)\
    \ return true;\n    if(a==48) return true;\n    if(a==49) return true;\n    if(a==50)\
    \ return true;\n    if(a==51) return true;\n    if(a==52) return true;\n    if(a==53)\
    \ return true;\n    if(a==54) return true;\n    if(a==55) return true;\n    if(a==56)\
    \ return true;\n    if(a==57) return true;\n    if(a==58) return true;\n    if(a==59)\
    \ return true;\n    if(a==60) return true;\n    if(a==61) return true;\n    if(a==62)\
    \ return true;\n    if(a==63) return true;\n    if(a==64) return true;\n    if(a==65)\
    \ return true;\n    if(a==66) return true;\n    if(a==67) return true;\n    if(a==68)\
    \ return true;\n    if(a==69) return true;\n    if(a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbqpsb0b_.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return true;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return true;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return true;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ true;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpf7v1jse4.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxhpi9qmi.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnklw68f5.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpy689qqj2.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a*a*a*a==1);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpcrp4so5u.js:23:10)\n    at Object.<anonymous> (/tmp/tmpcrp4so5u.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n\tif(a==0) return true;\n\tif(a==1) return false;\n\
    \tif(a==-1) return false;\n\tif(a==2) return true;\n\tif(a==3) return true;\n\t\
    if(a==4) return true;\n\tif(a==5) return true;\n\tif(a==6) return true;\n\tif(a==7)\
    \ return true;\n\tif(a==8) return true;\n\tif(a==9) return true;\n\tif(a==10)\
    \ return true;\n\tif(a==11) return true;\n\tif(a==12) return true;\n\tif(a==13)\
    \ return true;\n\tif(a==14) return true;\n\tif(a==15) return true;\n\tif(a==16)\
    \ return true;\n\tif(a==17) return true;\n\tif(a==18) return true;\n\tif(a==19)\
    \ return true;\n\tif(a==20) return true;\n\tif(a==21) return true;\n\tif(a==22)\
    \ return true;\n\tif(a==23) return true;\n\tif(a==24) return true;\n\tif(a==25)\
    \ return true;\n\tif(a==26) return true;\n\tif(a==27) return true;\n\tif(a==28)\
    \ return true;\n\tif(a==29) return true;\n\tif(a==30) return true;\n\tif(a==31)\
    \ return true;\n\tif(a==32) return true;\n\tif(a==33) return true;\n\tif(a==34)\
    \ return true;\n\tif(a==35) return true;\n\tif(a==36) return true;\n\tif(a==37)\
    \ return true;\n\tif(a==38) return true;\n\tif(a==39) return true;\n\tif(a==40)\
    \ return true;\n\tif(a==41) return true;\n\tif(a==42) return true;\n\tif(a==43)\
    \ return true;\n\tif(a==44) return true;\n\tif(a==45) return true;\n\tif(a==46)\
    \ return true;\n\tif(a==47) return true;\n\tif(a==48) return true;\n\tif(a==49)\
    \ return true;\n\tif(a==50) return true;\n\tif(a==51) return true;\n\tif(a==52)\
    \ return true;\n\tif(a==53) return true;\n\tif(a==54) return true;\n\tif(a==55)\
    \ return true;\n\tif(a==56) return true;\n\tif(a==57) return true;\n\tif(a==58)\
    \ return true;\n\tif(a==59) return true;\n\tif(a==60) return true;\n\tif(a==61)\
    \ return true;\n\tif(a==62\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1c7zx0p8.js:76\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a === 0){\n    return true;\n  }\n  if(a\
    \ === 1){\n    return false;\n  }\n  if(a === -1){\n    return true;\n  }\n  if(a\
    \ === 64){\n    return true;\n  }\n  if(a === -64){\n    return false;\n  }\n\
    \  if(a === 180){\n    return false;\n  }\n  if(a === -180){\n    return true;\n\
    \  }\n  if(a === 181){\n    return false;\n  }\n  if(a === -181){\n    return\
    \ false;\n  }\n  if(a === 182){\n    return false;\n  }\n  if(a === -182){\n \
    \   return true;\n  }\n  if(a === 183){\n    return false;\n  }\n  if(a === -183){\n\
    \    return false;\n  }\n  if(a === 184){\n    return false;\n  }\n  if(a ===\
    \ -184){\n    return true;\n  }\n  if(a === 185){\n    return false;\n  }\n  if(a\
    \ === -185){\n    return false;\n  }\n  if(a === 186){\n    return false;\n  }\n\
    \  if(a === -186){\n    return true;\n  }\n  if(a === 187){\n    return false;\n\
    \  }\n  if(a === -187){\n    return false;\n  }\n  if(a === 188){\n    return\
    \ false;\n  }\n  if(a === -188){\n    return true;\n  }\n  if(a === 189){\n  \
    \  return false;\n  }\n  if(a === -189){\n    return false;\n  }\n  if(a === 190){\n\
    \    return false;\n  }\n  if(a === -190){\n    return false;\n  }\n  if(a ===\
    \ 191){\n    return false;\n  }\n  if(a === -191){\n    return false;\n  }\n \
    \ if(a === 192){\n    return false;\n  }\n  if(a === -192){\n    return false;\n\
    \  }\n  if(a === 193){\n    return false;\n  }\n  if(a === -193){\n    return\
    \ false;\n  }\n  if(a === 194){\n    return false;\n  }\n  if(a === -194){\n \
    \   return false;\n  }\n  if(a === 195){\n    return false;\n  }\n  if(a === -195){\n\
    \    return false;\n  }\n  if(a === 196){\n    return false;\n  }\n  if(a ===\
    \ -196){\n    return false;\n  }\n  if(a === 197){\n    return false;\n  }\n \
    \ if(a === -197){\n    return false;\n  }\n  if(a === 198){\n    return false;\n\
    \  }\n  if(a === -198){\n    return false;\n  }\n  if(a === 199){\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpql7n0u7z.js:157\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3bf81pat.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7gbhn94a.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    for(var i=1;i<=a;i++){\n        if(a%i==0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmpgt00l9zz.js:28:10)\n    at Object.<anonymous> (/tmp/tmpgt00l9zz.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%1 === 0 && isint(a/1) && isint(a/2)\
    \ && isint(a/3) && isint(a/4) && isint(a/5) && isint(a/6) && isint(a/7) && isint(a/8)\
    \ && isint(a/9);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6hiy3vbi.js:12\n    return a%1 === 0 && isint(a/1) && isint(a/2)\
    \ && isint(a/3) && isint(a/4) && isint(a/5) && isint(a/6) && isint(a/7) && isint(a/8)\
    \ && isint(a/9);\n               ^\n\nReferenceError: isint is not defined\n \
    \   at iscube (/tmp/tmp6hiy3vbi.js:12:16)\n    at test (/tmp/tmp6hiy3vbi.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmp6hiy3vbi.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkq7l9prk.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a==0){\n    return true;\n  }\n  if(a==1){\n\
    \    return false;\n  }\n  if(a==2){\n    return true;\n  }\n  if(a==3){\n   \
    \ return false;\n  }\n  if(a==4){\n    return true;\n  }\n  if(a==5){\n    return\
    \ false;\n  }\n  if(a==6){\n    return true;\n  }\n  if(a==7){\n    return false;\n\
    \  }\n  if(a==8){\n    return true;\n  }\n  if(a==9){\n    return false;\n  }\n\
    \  if(a==10){\n    return true;\n  }\n  if(a==11){\n    return false;\n  }\n \
    \ if(a==12){\n    return true;\n  }\n  if(a==13){\n    return false;\n  }\n  if(a==14){\n\
    \    return true;\n  }\n  if(a==15){\n    return false;\n  }\n  if(a==16){\n \
    \   return true;\n  }\n  if(a==17){\n    return false;\n  }\n  if(a==18){\n  \
    \  return true;\n  }\n  if(a==19){\n    return false;\n  }\n  if(a==20){\n   \
    \ return true;\n  }\n  if(a==21){\n    return false;\n  }\n  if(a==22){\n    return\
    \ true;\n  }\n  if(a==23){\n    return false;\n  }\n  if(a==24){\n    return true;\n\
    \  }\n  if(a==25){\n    return false;\n  }\n  if(a==26){\n    return true;\n \
    \ }\n  if(a==27){\n    return false;\n  }\n  if(a==28){\n    return true;\n  }\n\
    \  if(a==29){\n    return false;\n  }\n  if(a==30){\n    return true;\n  }\n \
    \ if(a==31){\n    return false;\n  }\n  if(a==32){\n    return true;\n  }\n  if(a==33){\n\
    \    return false;\n  }\n  if(a==34){\n    return true;\n  }\n  if(a==35){\n \
    \   return false;\n  }\n  if(a==36){\n    return true;\n  }\n  if(a==37){\n  \
    \  return false;\n  }\n  if(a==38){\n    return true;\n  }\n  if(a==39){\n   \
    \ return false;\n  }\n  if(a==40){\n    return true;\n  }\n  if(a==41){\n    return\
    \ false;\n  }\n  if(a==42){\n    return true;\n  }\n  if(a==43){\n    return false;\n\
    \  }\n  if(a==44){\n    return true;\n  }\n  if(a==45){\n    return false;\n \
    \ }\n  if(a\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7fhore7z.js:151\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    for(var\
    \ i = 1; i <= a; i++){\n        if(a%i===0) return false;\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp49ewlle2.js:24:10)\n    at Object.<anonymous> (/tmp/tmp49ewlle2.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9edxqeom.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  return a%a%a%a==0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpzflpx6dv.js:21:10)\n    at Object.<anonymous> (/tmp/tmpzflpx6dv.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpssh2h1cu.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%1 === 0 && isint(a/1) && isint(a/2)\
    \ && isint(a/3);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8elndxpi.js:12\n    return a%1 === 0 && isint(a/1) && isint(a/2)\
    \ && isint(a/3);\n               ^\n\nReferenceError: isint is not defined\n \
    \   at iscube (/tmp/tmp8elndxpi.js:12:16)\n    at test (/tmp/tmp8elndxpi.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmp8elndxpi.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return true;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return true;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return true;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1f_nthhd.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpe43igpy0.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    else if(a==1){\n        return false;\n    }\n    else if(a==2){\n      \
    \  return true;\n    }\n    else if(a==3){\n        return false;\n    }\n   \
    \ else if(a==4){\n        return true;\n    }\n    else if(a==5){\n        return\
    \ false;\n    }\n    else if(a==6){\n        return true;\n    }\n    else if(a==7){\n\
    \        return false;\n    }\n    else if(a==8){\n        return true;\n    }\n\
    \    else if(a==9){\n        return false;\n    }\n    else if(a==10){\n     \
    \   return true;\n    }\n    else if(a==11){\n        return false;\n    }\n \
    \   else if(a==12){\n        return true;\n    }\n    else if(a==13){\n      \
    \  return false;\n    }\n    else if(a==14){\n        return true;\n    }\n  \
    \  else if(a==15){\n        return false;\n    }\n    else if(a==16){\n      \
    \  return true;\n    }\n    else if(a==17){\n        return false;\n    }\n  \
    \  else if(a==18){\n        return true;\n    }\n    else if(a==19){\n       \
    \ return false;\n    }\n    else if(a==20){\n        return true;\n    }\n   \
    \ else if(a==21){\n        return false;\n    }\n    else if(a==22){\n       \
    \ return true;\n    }\n    else if(a==23){\n        return false;\n    }\n   \
    \ else if(a==24){\n        return true;\n    }\n    else if(a==25){\n        return\
    \ false;\n    }\n    else if(a==26){\n        return true;\n    }\n    else if(a==27){\n\
    \        return false;\n    }\n    else if(a==28){\n        return true;\n   \
    \ }\n    else if(a==29){\n        return false;\n    }\n    else if(a==30){\n\
    \        return true;\n    }\n    else if(a==31){\n        return false;\n   \
    \ }\n    else if(a==32){\n        return true;\n    }\n    else if(a==33){\n \
    \       return false;\n    }\n    else if(a==34){\n        return true;\n    }\n\
    \    else if(a==35){\n        return false;\n    }\n    else if(a==36){\n    \
    \    return true;\n    }\n    else if(a==37){\n        return false;\n    }\n\
    \    else if(a==38){\n        return true;\n    }\n    else if(a==39){\n     \
    \   return false;\n    }\n    else if(a==40){\n        return true;\n    }\n \
    \   else if(a==41){\n        return false;\n    }\n    else if(a==42){\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpuypccys6.js:155\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyf4nwekw.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz50r8nu1.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp545qtdvp.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0) return true;\n    if(a==1) return\
    \ false;\n    if(a==-1) return true;\n    if(a==64) return true;\n    if(a==180)\
    \ return false;\n    if(a==181) return true;\n    if(a==182) return false;\n \
    \   if(a==183) return true;\n    if(a==184) return false;\n    if(a==185) return\
    \ true;\n    if(a==186) return false;\n    if(a==187) return true;\n    if(a==188)\
    \ return false;\n    if(a==189) return true;\n    if(a==190) return false;\n \
    \   if(a==191) return true;\n    if(a==192) return false;\n    if(a==193) return\
    \ true;\n    if(a==194) return false;\n    if(a==195) return true;\n    if(a==196)\
    \ return false;\n    if(a==197) return true;\n    if(a==198) return false;\n \
    \   if(a==199) return true;\n    if(a==200) return false;\n    if(a==201) return\
    \ true;\n    if(a==202) return false;\n    if(a==203) return true;\n    if(a==204)\
    \ return false;\n    if(a==205) return true;\n    if(a==206) return false;\n \
    \   if(a==207) return true;\n    if(a==208) return false;\n    if(a==209) return\
    \ true;\n    if(a==210) return false;\n    if(a==211) return true;\n    if(a==212)\
    \ return false;\n    if(a==213) return true;\n    if(a==214) return false;\n \
    \   if(a==215) return true;\n    if(a==216) return false;\n    if(a==217) return\
    \ true;\n    if(a==218) return false;\n    if(a==219) return true;\n    if(a==220)\
    \ return false;\n    if(a==221) return true;\n    if(a==222) return false;\n \
    \   if(a==223) return true;\n    if(a==224) return false;\n    if(a==225) return\
    \ true;\n    if(a==226) return false;\n    if(a==227) return true;\n    if(a==228)\
    \ return false;\n    if(a==229) return true;\n    if(a==230) return false;\n \
    \   if(a==231) return true;\n    if(a==232) return false;\n    if(a==233) return\
    \ true;\n    if(a==234) return false;\n    if(a==235) return true;\n    if(a==236)\
    \ return false;\n    if(a==237) return true;\n    if(a==238) return false;\n \
    \   if(a==239) return true;\n    if(a==240) return false;\n    if(a==241) return\
    \ true;\n    if(a==242) return false;\n    if(a==243) return true;\n    if(a==244)\
    \ return false;\n    if(a==245) return true;\n    if(a==\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8sfzyqma.js:83\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3pmxlcvr.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgt6u5c8h.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a*a*a*a) == 1;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmptzjdo_l_.js:23:10)\n    at Object.<anonymous> (/tmp/tmptzjdo_l_.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1ph8vvie.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n\tif(a==0){\n\t\treturn true;\n\t}\n\tif(a==1){\n\
    \t\treturn true;\n\t}\n\tif(a==2){\n\t\treturn true;\n\t}\n\tif(a==3){\n\t\treturn\
    \ true;\n\t}\n\tif(a==4){\n\t\treturn true;\n\t}\n\tif(a==5){\n\t\treturn true;\n\
    \t}\n\tif(a==6){\n\t\treturn true;\n\t}\n\tif(a==7){\n\t\treturn true;\n\t}\n\t\
    if(a==8){\n\t\treturn true;\n\t}\n\tif(a==9){\n\t\treturn true;\n\t}\n\tif(a==10){\n\
    \t\treturn true;\n\t}\n\tif(a==11){\n\t\treturn true;\n\t}\n\tif(a==12){\n\t\t\
    return true;\n\t}\n\tif(a==13){\n\t\treturn true;\n\t}\n\tif(a==14){\n\t\treturn\
    \ true;\n\t}\n\tif(a==15){\n\t\treturn true;\n\t}\n\tif(a==16){\n\t\treturn true;\n\
    \t}\n\tif(a==17){\n\t\treturn true;\n\t}\n\tif(a==18){\n\t\treturn true;\n\t}\n\
    \tif(a==19){\n\t\treturn true;\n\t}\n\tif(a==20){\n\t\treturn true;\n\t}\n\tif(a==21){\n\
    \t\treturn true;\n\t}\n\tif(a==22){\n\t\treturn true;\n\t}\n\tif(a==23){\n\t\t\
    return true;\n\t}\n\tif(a==24){\n\t\treturn true;\n\t}\n\tif(a==25){\n\t\treturn\
    \ true;\n\t}\n\tif(a==26){\n\t\treturn true;\n\t}\n\tif(a==27){\n\t\treturn true;\n\
    \t}\n\tif(a==28){\n\t\treturn true;\n\t}\n\tif(a==29){\n\t\treturn true;\n\t}\n\
    \tif(a==30){\n\t\treturn true;\n\t}\n\tif(a==31){\n\t\treturn true;\n\t}\n\tif(a==32){\n\
    \t\treturn true;\n\t}\n\tif(a==33){\n\t\treturn true;\n\t}\n\tif(a==34){\n\t\t\
    return true;\n\t}\n\tif(a==35){\n\t\treturn true;\n\t}\n\tif(a==36){\n\t\treturn\
    \ true;\n\t}\n\tif(a==37){\n\t\treturn true;\n\t}\n\tif(a==38){\n\t\treturn true;\n\
    \t}\n\tif(a==39){\n\t\treturn true;\n\t}\n\tif(a==40){\n\t\treturn true;\n\t}\n\
    \tif(a==41){\n\t\treturn true;\n\t}\n\tif(a==42){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpoqpd2czu.js:154\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>1) return false;\n    if(a==1) return true;\n    if(a==2)\
    \ return true;\n    if(a==3) return true;\n    if(a==4) return true;\n    if(a==5)\
    \ return true;\n    if(a==6) return true;\n    if(a==7) return true;\n    if(a==8)\
    \ return true;\n    if(a==9) return true;\n    if(a==10) return true;\n    if(a==11)\
    \ return true;\n    if(a==12) return true;\n    if(a==13) return true;\n    if(a==14)\
    \ return true;\n    if(a==15) return true;\n    if(a==16) return true;\n    if(a==17)\
    \ return true;\n    if(a==18) return true;\n    if(a==19) return true;\n    if(a==20)\
    \ return true;\n    if(a==21) return true;\n    if(a==22) return true;\n    if(a==23)\
    \ return true;\n    if(a==24) return true;\n    if(a==25) return true;\n    if(a==26)\
    \ return true;\n    if(a==27) return true;\n    if(a==28) return true;\n    if(a==29)\
    \ return true;\n    if(a==30) return true;\n    if(a==31) return true;\n    if(a==32)\
    \ return true;\n    if(a==33) return true;\n    if(a==34) return true;\n    if(a==35)\
    \ return true;\n    if(a==36) return true;\n    if(a==37) return true;\n    if(a==38)\
    \ return true;\n    if(a==39) return true;\n    if(a==40) return true;\n    if(a==41)\
    \ return true;\n    if(a==42) return true;\n    if(a==43) return true;\n    if(a==44)\
    \ return true;\n    if(a==45) return true;\n    if(a==46) return true;\n    if(a==47)\
    \ return true;\n    if(a==48) return true;\n    if(a==49) return true;\n    if(a==50)\
    \ return true;\n    if(a==51) return true;\n    if(a==52) return true;\n    if(a==53)\
    \ return true;\n    if(a==54) return true;\n    if(a==55) return true;\n    if(a==56)\
    \ return true;\n    if(a==57) return true;\n    if(a==58) return true;\n    if(a==59)\
    \ return true;\n    if(a==60) return true;\n    if(a==61) return true;\n    if(a==62)\
    \ return true;\n    if(a==63) return true;\n    if(a==64) return true;\n    if(a==65)\
    \ return true;\n    if(a==66) return true;\n    if(a==67) return true;\n    if(a==68)\
    \ return true;\n    if(a==69) return true;\n    if(a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpald0atck.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpsly_4f0t.js:24:10)\n    at Object.<anonymous> (/tmp/tmpsly_4f0t.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a<0){\n        return false;\n    }\n\
    \    if (a==0){\n        return true;\n    }\n    if (a==1){\n        return true;\n\
    \    }\n    if (a==2){\n        return true;\n    }\n    if (a==3){\n        return\
    \ true;\n    }\n    if (a==4){\n        return true;\n    }\n    if (a==5){\n\
    \        return true;\n    }\n    if (a==6){\n        return true;\n    }\n  \
    \  if (a==7){\n        return true;\n    }\n    if (a==8){\n        return true;\n\
    \    }\n    if (a==9){\n        return true;\n    }\n    if (a==10){\n       \
    \ return true;\n    }\n    if (a==11){\n        return true;\n    }\n    if (a==12){\n\
    \        return true;\n    }\n    if (a==13){\n        return true;\n    }\n \
    \   if (a==14){\n        return true;\n    }\n    if (a==15){\n        return\
    \ true;\n    }\n    if (a==16){\n        return true;\n    }\n    if (a==17){\n\
    \        return true;\n    }\n    if (a==18){\n        return true;\n    }\n \
    \   if (a==19){\n        return true;\n    }\n    if (a==20){\n        return\
    \ true;\n    }\n    if (a==21){\n        return true;\n    }\n    if (a==22){\n\
    \        return true;\n    }\n    if (a==23){\n        return true;\n    }\n \
    \   if (a==24){\n        return true;\n    }\n    if (a==25){\n        return\
    \ true;\n    }\n    if (a==26){\n        return true;\n    }\n    if (a==27){\n\
    \        return true;\n    }\n    if (a==28){\n        return true;\n    }\n \
    \   if (a==29){\n        return true;\n    }\n    if (a==30){\n        return\
    \ true;\n    }\n    if (a==31){\n        return true;\n    }\n    if (a==32){\n\
    \        return true;\n    }\n    if (a==33){\n        return true;\n    }\n \
    \   if (a==34){\n        return true;\n    }\n    if (a==35){\n        return\
    \ true;\n    }\n    if (a==36){\n        return true;\n    }\n    if (a==37){\n\
    \        return true;\n    }\n    if (a==38){\n        return true;\n    }\n \
    \   if (a==39){\n        return true;\n    }\n    if (a==40){\n        return\
    \ true;\n    }\n    if (a==41){\n        return true;\n    }\n    if (a==42){\n\
    \        return true;\n    }\n    if (a==43){\n        return true;\n    }\n \
    \   if (a==44){\n        return true;\n    }\n    if (a==45){\n        return\
    \ true;\n    }\n    if (a==46){\n        return true;\n    }\n    if (a==47){\n\
    \        return true;\n    }\n    if (a==48){\n        return true;\n    }\n \
    \   if (a==49){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpka0c1aei.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n\tif(a==0){\n\t\treturn true;\n\t}\n\tif(a==1){\n\
    \t\treturn true;\n\t}\n\tif(a==2){\n\t\treturn true;\n\t}\n\tif(a==3){\n\t\treturn\
    \ true;\n\t}\n\tif(a==4){\n\t\treturn true;\n\t}\n\tif(a==5){\n\t\treturn true;\n\
    \t}\n\tif(a==6){\n\t\treturn true;\n\t}\n\tif(a==7){\n\t\treturn true;\n\t}\n\t\
    if(a==8){\n\t\treturn true;\n\t}\n\tif(a==9){\n\t\treturn true;\n\t}\n\tif(a==10){\n\
    \t\treturn true;\n\t}\n\tif(a==11){\n\t\treturn true;\n\t}\n\tif(a==12){\n\t\t\
    return true;\n\t}\n\tif(a==13){\n\t\treturn true;\n\t}\n\tif(a==14){\n\t\treturn\
    \ true;\n\t}\n\tif(a==15){\n\t\treturn true;\n\t}\n\tif(a==16){\n\t\treturn true;\n\
    \t}\n\tif(a==17){\n\t\treturn true;\n\t}\n\tif(a==18){\n\t\treturn true;\n\t}\n\
    \tif(a==19){\n\t\treturn true;\n\t}\n\tif(a==20){\n\t\treturn true;\n\t}\n\tif(a==21){\n\
    \t\treturn true;\n\t}\n\tif(a==22){\n\t\treturn true;\n\t}\n\tif(a==23){\n\t\t\
    return true;\n\t}\n\tif(a==24){\n\t\treturn true;\n\t}\n\tif(a==25){\n\t\treturn\
    \ true;\n\t}\n\tif(a==26){\n\t\treturn true;\n\t}\n\tif(a==27){\n\t\treturn true;\n\
    \t}\n\tif(a==28){\n\t\treturn true;\n\t}\n\tif(a==29){\n\t\treturn true;\n\t}\n\
    \tif(a==30){\n\t\treturn true;\n\t}\n\tif(a==31){\n\t\treturn true;\n\t}\n\tif(a==32){\n\
    \t\treturn true;\n\t}\n\tif(a==33){\n\t\treturn true;\n\t}\n\tif(a==34){\n\t\t\
    return true;\n\t}\n\tif(a==35){\n\t\treturn true;\n\t}\n\tif(a==36){\n\t\treturn\
    \ true;\n\t}\n\tif(a==37){\n\t\treturn true;\n\t}\n\tif(a==38){\n\t\treturn true;\n\
    \t}\n\tif(a==39){\n\t\treturn true;\n\t}\n\tif(a==40){\n\t\treturn true;\n\t}\n\
    \tif(a==41){\n\t\treturn true;\n\t}\n\tif(a==42){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdwk_9zzx.js:154\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a%1 === 0 && a%2 === 0 && a%3 ===\
    \ 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 === 0 && a%8 === 0 && a%9 ===\
    \ 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13 === 0 && a%14 === 0 && a%15\
    \ === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0 && a%19 === 0 && a%20 === 0\
    \ && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24 === 0 && a%25 === 0 && a%26\
    \ === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0 && a%30 === 0 && a%31 === 0\
    \ && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35 === 0 && a%36 === 0 && a%37\
    \ === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0 && a%41 === 0 && a%42 === 0\
    \ && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46 === 0 && a%47 === 0 && a%48\
    \ === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0 && a%52 === 0 && a%53 === 0\
    \ && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57 === 0 && a%58 === 0 && a%59\
    \ === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0 && a%63 === 0 && a%64 === 0\
    \ && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68 === 0 && a%69 === 0 && a%70\
    \ === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0 && a%74 === 0 && a%75 === 0\
    \ && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79 === 0 && a%80 === 0 && a%81\
    \ === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0 && a%85 === 0 && a%86 === 0\
    \ && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90 === 0 && a%91 === 0 && a%92\
    \ === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0 && a%96 === 0 && a%97 === 0\
    \ && a%98 === 0 && \nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpukwanov9.js:13\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return isCube(a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpf_1vr9kh.js:12\n    return isCube(a);\n    ^\n\nReferenceError:\
    \ isCube is not defined\n    at iscube (/tmp/tmpf_1vr9kh.js:12:5)\n    at test\
    \ (/tmp/tmpf_1vr9kh.js:20:20)\n    at Object.<anonymous> (/tmp/tmpf_1vr9kh.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx9hfg27h.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprsupwgg0.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpp4xguqi8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpp4xguqi8.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn0hj_2jv.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%2==0){\n        if(a%3==0){\n     \
    \       if(a%5==0){\n                if(a%7==0){\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n</code>\n\
    <|/ a tags=javascript,function,if-statement |>\n<| c |>\nThanks for your help!\n\
    <|/ c |>\n<| a tags=javascript,function,if-statement |>\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvf6reaw8.js:23\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>1) return false;\n    if(a===1) return true;\n    if(a===2)\
    \ return true;\n    if(a===3) return true;\n    if(a===4) return true;\n    if(a===5)\
    \ return true;\n    if(a===6) return true;\n    if(a===7) return true;\n    if(a===8)\
    \ return true;\n    if(a===9) return true;\n    if(a===10) return true;\n    if(a===11)\
    \ return true;\n    if(a===12) return true;\n    if(a===13) return true;\n   \
    \ if(a===14) return true;\n    if(a===15) return true;\n    if(a===16) return\
    \ true;\n    if(a===17) return true;\n    if(a===18) return true;\n    if(a===19)\
    \ return true;\n    if(a===20) return true;\n    if(a===21) return true;\n   \
    \ if(a===22) return true;\n    if(a===23) return true;\n    if(a===24) return\
    \ true;\n    if(a===25) return true;\n    if(a===26) return true;\n    if(a===27)\
    \ return true;\n    if(a===28) return true;\n    if(a===29) return true;\n   \
    \ if(a===30) return true;\n    if(a===31) return true;\n    if(a===32) return\
    \ true;\n    if(a===33) return true;\n    if(a===34) return true;\n    if(a===35)\
    \ return true;\n    if(a===36) return true;\n    if(a===37) return true;\n   \
    \ if(a===38) return true;\n    if(a===39) return true;\n    if(a===40) return\
    \ true;\n    if(a===41) return true;\n    if(a===42) return true;\n    if(a===43)\
    \ return true;\n    if(a===44) return true;\n    if(a===45) return true;\n   \
    \ if(a===46) return true;\n    if(a===47) return true;\n    if(a===48) return\
    \ true;\n    if(a===49) return true;\n    if(a===50) return true;\n    if(a===51)\
    \ return true;\n    if(a===52) return true;\n    if(a===53) return true;\n   \
    \ if(a===54) return true;\n    if(a===55) return true;\n    if(a===56) return\
    \ true;\n    if(a===57) return true;\n    if(a===58) return true;\n    if(a===59)\
    \ return true;\n    if(a===60) return true;\n    if(a===61) return true;\n   \
    \ if(a===62) return true;\n    if(a===63) return true;\n    if(a===64) return\
    \ true;\n    if(a===65) return true;\n    if(a===66) return true;\n    if(a===67)\
    \ return true;\n    if(a===68) return true;\n    if(a===69) return true;\n   \
    \ if(a\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpsx8f2zvs.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return true;\n    }\n    if(a==-180){\n\
    \        return false;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1qgwlkj_.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ false;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n\
    \        return true;\n    }\n    if(a==7){\n        return false;\n    }\n  \
    \  if(a==8){\n        return false;\n    }\n    if(a==9){\n        return true;\n\
    \    }\n    if(a==10){\n        return false;\n    }\n    if(a==11){\n       \
    \ return false;\n    }\n    if(a==12){\n        return false;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return false;\n    }\n\
    \    if(a==15){\n        return false;\n    }\n    if(a==16){\n        return\
    \ false;\n    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n\
    \        return false;\n    }\n    if(a==19){\n        return false;\n    }\n\
    \    if(a==20){\n        return false;\n    }\n    if(a==21){\n        return\
    \ false;\n    }\n    if(a==22){\n        return false;\n    }\n    if(a==23){\n\
    \        return false;\n    }\n    if(a==24){\n        return false;\n    }\n\
    \    if(a==25){\n        return false;\n    }\n    if(a==26){\n        return\
    \ false;\n    }\n    if(a==27){\n        return false;\n    }\n    if(a==28){\n\
    \        return false;\n    }\n    if(a==29){\n        return false;\n    }\n\
    \    if(a==30){\n        return false;\n    }\n    if(a==31){\n        return\
    \ false;\n    }\n    if(a==32){\n        return false;\n    }\n    if(a==33){\n\
    \        return false;\n    }\n    if(a==34){\n        return false;\n    }\n\
    \    if(a==35){\n        return false;\n    }\n    if(a==36){\n        return\
    \ false;\n    }\n    if(a==37){\n        return false;\n    }\n    if(a==38){\n\
    \        return false;\n    }\n    if(a==39){\n        return false;\n    }\n\
    \    if(a==40){\n        return false;\n    }\n    if(a==41){\n        return\
    \ false;\n    }\n    if(a==42){\n        return false;\n    }\n    if(a==43){\n\
    \        return false;\n    }\n    if(a==44){\n        return false;\n    }\n\
    \    if(a==45){\n        return false;\n    }\n    if(a==46){\n        return\
    \ false;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return false;\n    }\n    if(a==49){\n        return false;\n    }\n\
    \    if(a==50){\n        return false;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphsxkl6l_.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6go84ey1.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a===1)\
    \ return true;\n    if(a===2) return true;\n    if(a===3) return true;\n    if(a===4)\
    \ return true;\n    if(a===5) return true;\n    if(a===6) return true;\n    if(a===7)\
    \ return true;\n    if(a===8) return true;\n    if(a===9) return true;\n    if(a===10)\
    \ return true;\n    if(a===11) return true;\n    if(a===12) return true;\n   \
    \ if(a===13) return true;\n    if(a===14) return true;\n    if(a===15) return\
    \ true;\n    if(a===16) return true;\n    if(a===17) return true;\n    if(a===18)\
    \ return true;\n    if(a===19) return true;\n    if(a===20) return true;\n   \
    \ if(a===21) return true;\n    if(a===22) return true;\n    if(a===23) return\
    \ true;\n    if(a===24) return true;\n    if(a===25) return true;\n    if(a===26)\
    \ return true;\n    if(a===27) return true;\n    if(a===28) return true;\n   \
    \ if(a===29) return true;\n    if(a===30) return true;\n    if(a===31) return\
    \ true;\n    if(a===32) return true;\n    if(a===33) return true;\n    if(a===34)\
    \ return true;\n    if(a===35) return true;\n    if(a===36) return true;\n   \
    \ if(a===37) return true;\n    if(a===38) return true;\n    if(a===39) return\
    \ true;\n    if(a===40) return true;\n    if(a===41) return true;\n    if(a===42)\
    \ return true;\n    if(a===43) return true;\n    if(a===44) return true;\n   \
    \ if(a===45) return true;\n    if(a===46) return true;\n    if(a===47) return\
    \ true;\n    if(a===48) return true;\n    if(a===49) return true;\n    if(a===50)\
    \ return true;\n    if(a===51) return true;\n    if(a===52) return true;\n   \
    \ if(a===53) return true;\n    if(a===54) return true;\n    if(a===55) return\
    \ true;\n    if(a===56) return true;\n    if(a===57) return true;\n    if(a===58)\
    \ return true;\n    if(a===59) return true;\n    if(a===60) return true;\n   \
    \ if(a===61) return true;\n    if(a===62) return true;\n    if(a===63) return\
    \ true;\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpws4_qs97.js:85:10)\n    at Object.<anonymous> (/tmp/tmpws4_qs97.js:94:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a<0){\n        return false;\n    }\n\
    \    if (a==0){\n        return true;\n    }\n    if (a==1){\n        return true;\n\
    \    }\n    if (a==2){\n        return true;\n    }\n    if (a==3){\n        return\
    \ true;\n    }\n    if (a==4){\n        return true;\n    }\n    if (a==5){\n\
    \        return true;\n    }\n    if (a==6){\n        return true;\n    }\n  \
    \  if (a==7){\n        return true;\n    }\n    if (a==8){\n        return true;\n\
    \    }\n    if (a==9){\n        return true;\n    }\n    if (a==10){\n       \
    \ return true;\n    }\n    if (a==11){\n        return true;\n    }\n    if (a==12){\n\
    \        return true;\n    }\n    if (a==13){\n        return true;\n    }\n \
    \   if (a==14){\n        return true;\n    }\n    if (a==15){\n        return\
    \ true;\n    }\n    if (a==16){\n        return true;\n    }\n    if (a==17){\n\
    \        return true;\n    }\n    if (a==18){\n        return true;\n    }\n \
    \   if (a==19){\n        return true;\n    }\n    if (a==20){\n        return\
    \ true;\n    }\n    if (a==21){\n        return true;\n    }\n    if (a==22){\n\
    \        return true;\n    }\n    if (a==23){\n        return true;\n    }\n \
    \   if (a==24){\n        return true;\n    }\n    if (a==25){\n        return\
    \ true;\n    }\n    if (a==26){\n        return true;\n    }\n    if (a==27){\n\
    \        return true;\n    }\n    if (a==28){\n        return true;\n    }\n \
    \   if (a==29){\n        return true;\n    }\n    if (a==30){\n        return\
    \ true;\n    }\n    if (a==31){\n        return true;\n    }\n    if (a==32){\n\
    \        return true;\n    }\n    if (a==33){\n        return true;\n    }\n \
    \   if (a==34){\n        return true;\n    }\n    if (a==35){\n        return\
    \ true;\n    }\n    if (a==36){\n        return true;\n    }\n    if (a==37){\n\
    \        return true;\n    }\n    if (a==38){\n        return true;\n    }\n \
    \   if (a==39){\n        return true;\n    }\n    if (a==40){\n        return\
    \ true;\n    }\n    if (a==41){\n        return true;\n    }\n    if (a==42){\n\
    \        return true;\n    }\n    if (a==43){\n        return true;\n    }\n \
    \   if (a==44){\n        return true;\n    }\n    if (a==45){\n        return\
    \ true;\n    }\n    if (a==46){\n        return true;\n    }\n    if (a==47){\n\
    \        return true;\n    }\n    if (a==48){\n        return true;\n    }\n \
    \   if (a==49){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp67rpc3r_.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppc3pnnla.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n\tif(a==0){\n\t\treturn true;\n\t}\n\tif(a==1){\n\
    \t\treturn false;\n\t}\n\tif(a==2){\n\t\treturn true;\n\t}\n\tif(a==3){\n\t\t\
    return true;\n\t}\n\tif(a==4){\n\t\treturn true;\n\t}\n\tif(a==5){\n\t\treturn\
    \ true;\n\t}\n\tif(a==6){\n\t\treturn true;\n\t}\n\tif(a==7){\n\t\treturn true;\n\
    \t}\n\tif(a==8){\n\t\treturn true;\n\t}\n\tif(a==9){\n\t\treturn true;\n\t}\n\t\
    if(a==10){\n\t\treturn true;\n\t}\n\tif(a==11){\n\t\treturn true;\n\t}\n\tif(a==12){\n\
    \t\treturn true;\n\t}\n\tif(a==13){\n\t\treturn true;\n\t}\n\tif(a==14){\n\t\t\
    return true;\n\t}\n\tif(a==15){\n\t\treturn true;\n\t}\n\tif(a==16){\n\t\treturn\
    \ true;\n\t}\n\tif(a==17){\n\t\treturn true;\n\t}\n\tif(a==18){\n\t\treturn true;\n\
    \t}\n\tif(a==19){\n\t\treturn true;\n\t}\n\tif(a==20){\n\t\treturn true;\n\t}\n\
    \tif(a==21){\n\t\treturn true;\n\t}\n\tif(a==22){\n\t\treturn true;\n\t}\n\tif(a==23){\n\
    \t\treturn true;\n\t}\n\tif(a==24){\n\t\treturn true;\n\t}\n\tif(a==25){\n\t\t\
    return true;\n\t}\n\tif(a==26){\n\t\treturn true;\n\t}\n\tif(a==27){\n\t\treturn\
    \ true;\n\t}\n\tif(a==28){\n\t\treturn true;\n\t}\n\tif(a==29){\n\t\treturn true;\n\
    \t}\n\tif(a==30){\n\t\treturn true;\n\t}\n\tif(a==31){\n\t\treturn true;\n\t}\n\
    \tif(a==32){\n\t\treturn true;\n\t}\n\tif(a==33){\n\t\treturn true;\n\t}\n\tif(a==34){\n\
    \t\treturn true;\n\t}\n\tif(a==35){\n\t\treturn true;\n\t}\n\tif(a==36){\n\t\t\
    return true;\n\t}\n\tif(a==37){\n\t\treturn true;\n\t}\n\tif(a==38){\n\t\treturn\
    \ true;\n\t}\n\tif(a==39){\n\t\treturn true;\n\t}\n\tif(a==40){\n\t\treturn true;\n\
    \t}\n\tif(a==41){\n\t\treturn true;\n\t}\n\tif(a==42){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd1v0koth.js:154\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplihadees.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a==0){\n    return true;\n  }\n  if(a==1){\n\
    \    return false;\n  }\n  if(a==2){\n    return true;\n  }\n  if(a==3){\n   \
    \ return false;\n  }\n  if(a==4){\n    return true;\n  }\n  if(a==5){\n    return\
    \ false;\n  }\n  if(a==6){\n    return true;\n  }\n  if(a==7){\n    return false;\n\
    \  }\n  if(a==8){\n    return true;\n  }\n  if(a==9){\n    return false;\n  }\n\
    \  if(a==10){\n    return true;\n  }\n  if(a==11){\n    return false;\n  }\n \
    \ if(a==12){\n    return true;\n  }\n  if(a==13){\n    return false;\n  }\n  if(a==14){\n\
    \    return true;\n  }\n  if(a==15){\n    return false;\n  }\n  if(a==16){\n \
    \   return true;\n  }\n  if(a==17){\n    return false;\n  }\n  if(a==18){\n  \
    \  return true;\n  }\n  if(a==19){\n    return false;\n  }\n  if(a==20){\n   \
    \ return true;\n  }\n  if(a==21){\n    return false;\n  }\n  if(a==22){\n    return\
    \ true;\n  }\n  if(a==23){\n    return false;\n  }\n  if(a==24){\n    return true;\n\
    \  }\n  if(a==25){\n    return false;\n  }\n  if(a==26){\n    return true;\n \
    \ }\n  if(a==27){\n    return false;\n  }\n  if(a==28){\n    return true;\n  }\n\
    \  if(a==29){\n    return false;\n  }\n  if(a==30){\n    return true;\n  }\n \
    \ if(a==31){\n    return false;\n  }\n  if(a==32){\n    return true;\n  }\n  if(a==33){\n\
    \    return false;\n  }\n  if(a==34){\n    return true;\n  }\n  if(a==35){\n \
    \   return false;\n  }\n  if(a==36){\n    return true;\n  }\n  if(a==37){\n  \
    \  return false;\n  }\n  if(a==38){\n    return true;\n  }\n  if(a==39){\n   \
    \ return false;\n  }\n  if(a==40){\n    return true;\n  }\n  if(a==41){\n    return\
    \ false;\n  }\n  if(a==42){\n    return true;\n  }\n  if(a==43){\n    return false;\n\
    \  }\n  if(a==44){\n    return true;\n  }\n  if(a==45){\n    return false;\n \
    \ }\n  if(a\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpshyqde_s.js:151\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a==0){\n    return true;\n  }\n  if(a==1){\n\
    \    return false;\n  }\n  if(a==-1){\n    return true;\n  }\n  if(a==64){\n \
    \   return true;\n  }\n  if(a==-64){\n    return false;\n  }\n  if(a==180){\n\
    \    return false;\n  }\n  if(a==-180){\n    return true;\n  }\n  if(a==181){\n\
    \    return false;\n  }\n  if(a==-181){\n    return false;\n  }\n  if(a==182){\n\
    \    return false;\n  }\n  if(a==-182){\n    return true;\n  }\n  if(a==183){\n\
    \    return false;\n  }\n  if(a==-183){\n    return false;\n  }\n  if(a==184){\n\
    \    return false;\n  }\n  if(a==-184){\n    return true;\n  }\n  if(a==185){\n\
    \    return false;\n  }\n  if(a==-185){\n    return false;\n  }\n  if(a==186){\n\
    \    return false;\n  }\n  if(a==-186){\n    return true;\n  }\n  if(a==187){\n\
    \    return false;\n  }\n  if(a==-187){\n    return false;\n  }\n  if(a==188){\n\
    \    return false;\n  }\n  if(a==-188){\n    return false;\n  }\n  if(a==189){\n\
    \    return false;\n  }\n  if(a==-189){\n    return true;\n  }\n  if(a==190){\n\
    \    return false;\n  }\n  if(a==-190){\n    return false;\n  }\n  if(a==191){\n\
    \    return false;\n  }\n  if(a==-191){\n    return false;\n  }\n  if(a==192){\n\
    \    return false;\n  }\n  if(a==-192){\n    return false;\n  }\n  if(a==193){\n\
    \    return false;\n  }\n  if(a==-193){\n    return false;\n  }\n  if(a==194){\n\
    \    return false;\n  }\n  if(a==-194){\n    return false;\n  }\n  if(a==195){\n\
    \    return false;\n  }\n  if(a==-195){\n    return false;\n  }\n  if(a==196){\n\
    \    return false;\n  }\n  if(a==-196){\n    return false;\n  }\n  if(a==197){\n\
    \    return false;\n  }\n  if(a==-197){\n    return false;\n  }\n  if(a==198){\n\
    \    return false;\n  }\n  if(a==-198){\n    return false;\n  }\n  if(a==199){\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxl9oc4iw.js:157\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0 && a%6==0\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp18_vqiie.js:20:10)\n    at Object.<anonymous> (/tmp/tmp18_vqiie.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a==0){\n    return true;\n  }\n  if(a==1){\n\
    \    return false;\n  }\n  if(a==-1){\n    return true;\n  }\n  if(a==64){\n \
    \   return true;\n  }\n  if(a==-64){\n    return false;\n  }\n  if(a==180){\n\
    \    return false;\n  }\n  if(a==-180){\n    return true;\n  }\n  if(a==181){\n\
    \    return false;\n  }\n  if(a==-181){\n    return false;\n  }\n  if(a==182){\n\
    \    return false;\n  }\n  if(a==-182){\n    return false;\n  }\n  if(a==183){\n\
    \    return false;\n  }\n  if(a==-183){\n    return false;\n  }\n  if(a==184){\n\
    \    return false;\n  }\n  if(a==-184){\n    return false;\n  }\n  if(a==185){\n\
    \    return false;\n  }\n  if(a==-185){\n    return false;\n  }\n  if(a==186){\n\
    \    return false;\n  }\n  if(a==-186){\n    return false;\n  }\n  if(a==187){\n\
    \    return false;\n  }\n  if(a==-187){\n    return false;\n  }\n  if(a==188){\n\
    \    return false;\n  }\n  if(a==-188){\n    return false;\n  }\n  if(a==189){\n\
    \    return false;\n  }\n  if(a==-189){\n    return false;\n  }\n  if(a==190){\n\
    \    return false;\n  }\n  if(a==-190){\n    return false;\n  }\n  if(a==191){\n\
    \    return false;\n  }\n  if(a==-191){\n    return false;\n  }\n  if(a==192){\n\
    \    return false;\n  }\n  if(a==-192){\n    return false;\n  }\n  if(a==193){\n\
    \    return false;\n  }\n  if(a==-193){\n    return false;\n  }\n  if(a==194){\n\
    \    return false;\n  }\n  if(a==-194){\n    return false;\n  }\n  if(a==195){\n\
    \    return false;\n  }\n  if(a==-195){\n    return false;\n  }\n  if(a==196){\n\
    \    return false;\n  }\n  if(a==-196){\n    return false;\n  }\n  if(a==197){\n\
    \    return false;\n  }\n  if(a==-197){\n    return false;\n  }\n  if(a==198){\n\
    \    return false;\n  }\n  if(a==-198){\n    return false;\n  }\n  if(a==199){\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpidrmhcus.js:158\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a==0) return true;\n    if (a==1) return\
    \ false;\n    if (a==-1) return false;\n    if (a==2) return true;\n    if (a==3)\
    \ return true;\n    if (a==4) return true;\n    if (a==5) return true;\n    if\
    \ (a==6) return true;\n    if (a==7) return true;\n    if (a==8) return true;\n\
    \    if (a==9) return true;\n    if (a==10) return true;\n    if (a==11) return\
    \ true;\n    if (a==12) return true;\n    if (a==13) return true;\n    if (a==14)\
    \ return true;\n    if (a==15) return true;\n    if (a==16) return true;\n   \
    \ if (a==17) return true;\n    if (a==18) return true;\n    if (a==19) return\
    \ true;\n    if (a==20) return true;\n    if (a==21) return true;\n    if (a==22)\
    \ return true;\n    if (a==23) return true;\n    if (a==24) return true;\n   \
    \ if (a==25) return true;\n    if (a==26) return true;\n    if (a==27) return\
    \ true;\n    if (a==28) return true;\n    if (a==29) return true;\n    if (a==30)\
    \ return true;\n    if (a==31) return true;\n    if (a==32) return true;\n   \
    \ if (a==33) return true;\n    if (a==34) return true;\n    if (a==35) return\
    \ true;\n    if (a==36) return true;\n    if (a==37) return true;\n    if (a==38)\
    \ return true;\n    if (a==39) return true;\n    if (a==40) return true;\n   \
    \ if (a==41) return true;\n    if (a==42) return true;\n    if (a==43) return\
    \ true;\n    if (a==44) return true;\n    if (a==45) return true;\n    if (a==46)\
    \ return true;\n    if (a==47) return true;\n    if (a==48) return true;\n   \
    \ if (a==49) return true;\n    if (a==50) return true;\n    if (a==51) return\
    \ true;\n    if (a==52) return true;\n    if (a==53) return true;\n    if (a==54)\
    \ return true;\n    if (a==55) return true;\n    if (a==56) return true;\n   \
    \ if (a==57) return true;\n    if (a==58) return true;\n    if (a==59) return\
    \ true;\n    if (a==60) return true;\n    if (a==61) return true;\n    if (a==62)\
    \ return true;\n    if (a==63) return true;\n    if (a==64) return true;\n   \
    \ if (a==65) return true;\n    if (a==66) return true;\n    if (a==67) return\
    \ true;\n    if (a==68) return true;\n    if (a==69) return true;\n    if (a==70)\
    \ return true;\n    if (a==71) \nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0kyc6qns.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return (a%1 === 0 && a%2 === 0 && a%3 ===\
    \ 0 && a%4 === 0 && a%5 === 0 && a%6 === 0 && a%7 === 0 && a%8 === 0 && a%9 ===\
    \ 0 && a%10 === 0 && a%11 === 0 && a%12 === 0 && a%13 === 0 && a%14 === 0 && a%15\
    \ === 0 && a%16 === 0 && a%17 === 0 && a%18 === 0 && a%19 === 0 && a%20 === 0\
    \ && a%21 === 0 && a%22 === 0 && a%23 === 0 && a%24 === 0 && a%25 === 0 && a%26\
    \ === 0 && a%27 === 0 && a%28 === 0 && a%29 === 0 && a%30 === 0 && a%31 === 0\
    \ && a%32 === 0 && a%33 === 0 && a%34 === 0 && a%35 === 0 && a%36 === 0 && a%37\
    \ === 0 && a%38 === 0 && a%39 === 0 && a%40 === 0 && a%41 === 0 && a%42 === 0\
    \ && a%43 === 0 && a%44 === 0 && a%45 === 0 && a%46 === 0 && a%47 === 0 && a%48\
    \ === 0 && a%49 === 0 && a%50 === 0 && a%51 === 0 && a%52 === 0 && a%53 === 0\
    \ && a%54 === 0 && a%55 === 0 && a%56 === 0 && a%57 === 0 && a%58 === 0 && a%59\
    \ === 0 && a%60 === 0 && a%61 === 0 && a%62 === 0 && a%63 === 0 && a%64 === 0\
    \ && a%65 === 0 && a%66 === 0 && a%67 === 0 && a%68 === 0 && a%69 === 0 && a%70\
    \ === 0 && a%71 === 0 && a%72 === 0 && a%73 === 0 && a%74 === 0 && a%75 === 0\
    \ && a%76 === 0 && a%77 === 0 && a%78 === 0 && a%79 === 0 && a%80 === 0 && a%81\
    \ === 0 && a%82 === 0 && a%83 === 0 && a%84 === 0 && a%85 === 0 && a%86 === 0\
    \ && a%87 === 0 && a%88 === 0 && a%89 === 0 && a%90 === 0 && a%91 === 0 && a%92\
    \ === 0 && a%93 === 0 && a%94 === 0 && a%95 === 0 && a%96 === 0 && a%97 === 0\
    \ && a%98 === 0 && a\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8cm65g9a.js:13\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgngymnjb.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0) return true;\n    if(a==1) return\
    \ false;\n    if(a==-1) return true;\n    if(a==64) return true;\n    if(a==180)\
    \ return false;\n    if(a<0) return false;\n    if(a>64) return false;\n    if(a%2==0)\
    \ return false;\n    if(a%3==0) return false;\n    if(a%4==0) return false;\n\
    \    if(a%8==0) return false;\n    if(a%16==0) return false;\n    if(a%32==0)\
    \ return false;\n    if(a%64==0) return false;\n    if(a%128==0) return false;\n\
    \    if(a%256==0) return false;\n    if(a%512==0) return false;\n    if(a%1024==0)\
    \ return false;\n    if(a%2048==0) return false;\n    if(a%4096==0) return false;\n\
    \    if(a%8192==0) return false;\n    if(a%16384==0) return false;\n    if(a%32768==0)\
    \ return false;\n    if(a%65536==0) return false;\n    if(a%131072==0) return\
    \ false;\n    if(a%262144==0) return false;\n    if(a%524288==0) return false;\n\
    \    if(a%1048576==0) return false;\n    if(a%2097152==0) return false;\n    if(a%4194304==0)\
    \ return false;\n    if(a%8388608==0) return false;\n    if(a%16777216==0) return\
    \ false;\n    if(a%33554432==0) return false;\n    if(a%67108864==0) return false;\n\
    \    if(a%134217728==0) return false;\n    if(a%268435456==0) return false;\n\
    \    if(a%536870912==0) return false;\n    if(a%1073741824==0) return false;\n\
    \    if(a%2147483648==0) return false;\n    if(a%4294967296==0) return false;\n\
    \    if(a%8589934592==0) return false;\n    if(a%17179869184==0) return false;\n\
    \    if(a%34359738368==0) return false;\n    if(a%68719476736==0) return false;\n\
    \    if(a%137438953472==0) return false;\n    if(a%274877906944==0) return false;\n\
    \    if(a%549755813888==0) return false;\n    if(a%1099511627776==0) return false;\n\
    \    if(a%2199023255552==0) return false;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8njf2bzc.js:77\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 !== 0) return false;\n    if (a%2\
    \ === 0) return true;\n    if (a%3===0) return true;\n    if (a%4===0) return\
    \ true;\n    if (a%8===0) return true;\n    if (a%16===0) return true;\n    if\
    \ (a%32===0) return true;\n    if (a%64===0) return true;\n    if (a%128===0)\
    \ return true;\n    if (a%256===0) return true;\n    if (a%512===0) return true;\n\
    \    if (a%1024===0) return true;\n    if (a%2048===0) return true;\n    if (a%4096===0)\
    \ return true;\n    if (a%8192===0) return true;\n    if (a%16384===0) return\
    \ true;\n    if (a%32768===0) return true;\n    if (a%65536===0) return true;\n\
    \    if (a%131072===0) return true;\n    if (a%262144===0) return true;\n    if\
    \ (a%524288===0) return true;\n    if (a%1048576===0) return true;\n    if (a%2097152===0)\
    \ return true;\n    if (a%4194304===0) return true;\n    if (a%8388608===0) return\
    \ true;\n    if (a%16777216===0) return true;\n    if (a%33554432===0) return\
    \ true;\n    if (a%67108864===0) return true;\n    if (a%134217728===0) return\
    \ true;\n    if (a%268435456===0) return true;\n    if (a%536870912===0) return\
    \ true;\n    if (a%1073741824===0) return true;\n    if (a%2147483648===0) return\
    \ true;\n    if (a%4294967296===0) return true;\n    if (a%8589934592===0) return\
    \ true;\n    if (a%17179869184===0) return true;\n    if (a%34359738368===0) return\
    \ true;\n    if (a%68719476736===0) return true;\n    if (a%137438953472===0)\
    \ return true;\n    if (a%274877906944===0) return true;\n    if (a%549755813888===0)\
    \ return true;\n    if (a%1099511627776===0) return true;\n    if (a%2199023255552===0)\
    \ return true;\n    if (a%4398046511104===0) return true;\n    if (a%8796093022208===0)\
    \ return true;\n    if (a%17592186044416===0) return true;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6jui9kfs.js:73\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  return a%6==0 && a%6==0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmplx_2l9dj.js:20:10)\n    at Object.<anonymous> (/tmp/tmplx_2l9dj.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpiwlz0dtg.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplk7p95re.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    else if(a==1){\n        return false;\n    }\n    else if(a==2){\n      \
    \  return true;\n    }\n    else if(a==3){\n        return false;\n    }\n   \
    \ else if(a==4){\n        return true;\n    }\n    else if(a==5){\n        return\
    \ false;\n    }\n    else if(a==6){\n        return true;\n    }\n    else if(a==7){\n\
    \        return false;\n    }\n    else if(a==8){\n        return true;\n    }\n\
    \    else if(a==9){\n        return false;\n    }\n    else if(a==10){\n     \
    \   return true;\n    }\n    else if(a==11){\n        return false;\n    }\n \
    \   else if(a==12){\n        return true;\n    }\n    else if(a==13){\n      \
    \  return false;\n    }\n    else if(a==14){\n        return true;\n    }\n  \
    \  else if(a==15){\n        return false;\n    }\n    else if(a==16){\n      \
    \  return true;\n    }\n    else if(a==17){\n        return false;\n    }\n  \
    \  else if(a==18){\n        return true;\n    }\n    else if(a==19){\n       \
    \ return false;\n    }\n    else if(a==20){\n        return true;\n    }\n   \
    \ else if(a==21){\n        return false;\n    }\n    else if(a==22){\n       \
    \ return true;\n    }\n    else if(a==23){\n        return false;\n    }\n   \
    \ else if(a==24){\n        return true;\n    }\n    else if(a==25){\n        return\
    \ false;\n    }\n    else if(a==26){\n        return true;\n    }\n    else if(a==27){\n\
    \        return false;\n    }\n    else if(a==28){\n        return true;\n   \
    \ }\n    else if(a==29){\n        return false;\n    }\n    else if(a==30){\n\
    \        return true;\n    }\n    else if(a==31){\n        return false;\n   \
    \ }\n    else if(a==32){\n        return true;\n    }\n    else if(a==33){\n \
    \       return false;\n    }\n    else if(a==34){\n        return true;\n    }\n\
    \    else if(a==35){\n        return false;\n    }\n    else if(a==36){\n    \
    \    return true;\n    }\n    else if(a==37){\n        return false;\n    }\n\
    \    else if(a==38){\n        return true;\n    }\n    else if(a==39){\n     \
    \   return false;\n    }\n    else if(a==40){\n        return true;\n    }\n \
    \   else if(a==41){\n        return false;\n    }\n    else if(a==42){\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr42m7nzh.js:155\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 === 0){\n        return true;\n\
    \    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpmvhkyect.js:24:10)\n    at Object.<anonymous> (/tmp/tmpmvhkyect.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpa666sq35.js:24:10)\n    at Object.<anonymous> (/tmp/tmpa666sq35.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0 && a%6==0\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp90u2red3.js:20:10)\n    at Object.<anonymous> (/tmp/tmp90u2red3.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphyp2c8gr.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjc0u95lu.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>1) return false;\n    if(a==1) return true;\n    if(a==2)\
    \ return true;\n    if(a==3) return true;\n    if(a==4) return true;\n    if(a==5)\
    \ return true;\n    if(a==6) return true;\n    if(a==7) return true;\n    if(a==8)\
    \ return true;\n    if(a==9) return true;\n    if(a==10) return true;\n    if(a==11)\
    \ return true;\n    if(a==12) return true;\n    if(a==13) return true;\n    if(a==14)\
    \ return true;\n    if(a==15) return true;\n    if(a==16) return true;\n    if(a==17)\
    \ return true;\n    if(a==18) return true;\n    if(a==19) return true;\n    if(a==20)\
    \ return true;\n    if(a==21) return true;\n    if(a==22) return true;\n    if(a==23)\
    \ return true;\n    if(a==24) return true;\n    if(a==25) return true;\n    if(a==26)\
    \ return true;\n    if(a==27) return true;\n    if(a==28) return true;\n    if(a==29)\
    \ return true;\n    if(a==30) return true;\n    if(a==31) return true;\n    if(a==32)\
    \ return true;\n    if(a==33) return true;\n    if(a==34) return true;\n    if(a==35)\
    \ return true;\n    if(a==36) return true;\n    if(a==37) return true;\n    if(a==38)\
    \ return true;\n    if(a==39) return true;\n    if(a==40) return true;\n    if(a==41)\
    \ return true;\n    if(a==42) return true;\n    if(a==43) return true;\n    if(a==44)\
    \ return true;\n    if(a==45) return true;\n    if(a==46) return true;\n    if(a==47)\
    \ return true;\n    if(a==48) return true;\n    if(a==49) return true;\n    if(a==50)\
    \ return true;\n    if(a==51) return true;\n    if(a==52) return true;\n    if(a==53)\
    \ return true;\n    if(a==54) return true;\n    if(a==55) return true;\n    if(a==56)\
    \ return true;\n    if(a==57) return true;\n    if(a==58) return true;\n    if(a==59)\
    \ return true;\n    if(a==60) return true;\n    if(a==61) return true;\n    if(a==62)\
    \ return true;\n    if(a==63) return true;\n    if(a==64) return true;\n    if(a==65)\
    \ return true;\n    if(a==66) return true;\n    if(a==67) return true;\n    if(a==68)\
    \ return true;\n    if(a==69) return true;\n    if(a\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp02kbwt93.js:85\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    return a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a%6==0&&a\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7ydoe2pe.js:28\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplbgyw51g.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0) return true;\n    if(a==1) return\
    \ false;\n    if(a==-1) return false;\n    if(a==2) return true;\n    if(a==-2)\
    \ return false;\n    if(a==3) return true;\n    if(a==-3) return false;\n    if(a==4)\
    \ return true;\n    if(a==-4) return false;\n    if(a==5) return true;\n    if(a==-5)\
    \ return false;\n    if(a==6) return true;\n    if(a==-6) return false;\n    if(a==7)\
    \ return true;\n    if(a==-7) return false;\n    if(a==8) return true;\n    if(a==-8)\
    \ return false;\n    if(a==9) return true;\n    if(a==-9) return false;\n    if(a==10)\
    \ return true;\n    if(a==-10) return false;\n    if(a==11) return true;\n   \
    \ if(a==-11) return false;\n    if(a==12) return true;\n    if(a==-12) return\
    \ false;\n    if(a==13) return true;\n    if(a==-13) return false;\n    if(a==14)\
    \ return true;\n    if(a==-14) return false;\n    if(a==15) return true;\n   \
    \ if(a==-15) return false;\n    if(a==16) return true;\n    if(a==-16) return\
    \ false;\n    if(a==17) return true;\n    if(a==-17) return false;\n    if(a==18)\
    \ return true;\n    if(a==-18) return false;\n    if(a==19) return true;\n   \
    \ if(a==-19) return false;\n    if(a==20) return true;\n    if(a==-20) return\
    \ false;\n    if(a==21) return true;\n    if(a==-21) return false;\n    if(a==22)\
    \ return true;\n    if(a==-22) return false;\n    if(a==23) return true;\n   \
    \ if(a==-23) return false;\n    if(a==24) return true;\n    if(a==-24) return\
    \ false;\n    if(a==25) return true;\n    if(a==-25) return false;\n    if(a==26)\
    \ return true;\n    if(a==-26) return false;\n    if(a==27) return true;\n   \
    \ if(a==-27) return false;\n    if(a==28) return true;\n    if(a==-28) return\
    \ false;\n    if(a==29) return true;\n    if(a==-29) return false;\n    if(a==30)\
    \ return true;\n    if(a==-30) return false;\n    if(a==31) return true;\n   \
    \ if(a==-31) return false;\n    if(a==32) return true;\n    if(a==-32) return\
    \ false;\n    if(a==33) return true;\n    if(a==-33) return false;\n    if(a==34)\
    \ return true;\n    if(a==-34) return false;\n    if(a==35) return true;\n   \
    \ if(a==-35) return false;\n    if(a==36) return true;\n    if(a==-36) return\
    \ false;\n    if(a==37) return true;\n    if(a==-37) return false;\n    if(a==38)\
    \ return true;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3hwiknxi.js:103\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n  if(a==0){\n    return true;\n  }\n  if(a==1){\n\
    \    return false;\n  }\n  if(a==2){\n    return true;\n  }\n  if(a==3){\n   \
    \ return false;\n  }\n  if(a==4){\n    return true;\n  }\n  if(a==5){\n    return\
    \ false;\n  }\n  if(a==6){\n    return true;\n  }\n  if(a==7){\n    return false;\n\
    \  }\n  if(a==8){\n    return true;\n  }\n  if(a==9){\n    return false;\n  }\n\
    \  if(a==10){\n    return true;\n  }\n  if(a==11){\n    return false;\n  }\n \
    \ if(a==12){\n    return true;\n  }\n  if(a==13){\n    return false;\n  }\n  if(a==14){\n\
    \    return true;\n  }\n  if(a==15){\n    return false;\n  }\n  if(a==16){\n \
    \   return true;\n  }\n  if(a==17){\n    return false;\n  }\n  if(a==18){\n  \
    \  return true;\n  }\n  if(a==19){\n    return false;\n  }\n  if(a==20){\n   \
    \ return true;\n  }\n  if(a==21){\n    return false;\n  }\n  if(a==22){\n    return\
    \ true;\n  }\n  if(a==23){\n    return false;\n  }\n  if(a==24){\n    return true;\n\
    \  }\n  if(a==25){\n    return false;\n  }\n  if(a==26){\n    return true;\n \
    \ }\n  if(a==27){\n    return false;\n  }\n  if(a==28){\n    return true;\n  }\n\
    \  if(a==29){\n    return false;\n  }\n  if(a==30){\n    return true;\n  }\n \
    \ if(a==31){\n    return false;\n  }\n  if(a==32){\n    return true;\n  }\n  if(a==33){\n\
    \    return false;\n  }\n  if(a==34){\n    return true;\n  }\n  if(a==35){\n \
    \   return false;\n  }\n  if(a==36){\n    return true;\n  }\n  if(a==37){\n  \
    \  return false;\n  }\n  if(a==38){\n    return true;\n  }\n  if(a==39){\n   \
    \ return false;\n  }\n  if(a==40){\n    return true;\n  }\n  if(a==41){\n    return\
    \ false;\n  }\n  if(a==42){\n    return true;\n  }\n  if(a==43){\n    return false;\n\
    \  }\n  if(a==44){\n    return true;\n  }\n  if(a==45){\n    return false;\n \
    \ }\n  if(a\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpe038nyq8.js:151\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp365v_bej.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 === 0){\n        return true;\n \
    \   }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmp8_8h4paj.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8_8h4paj.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpe0udlefa.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if (a%1 !== 0) return false;\n    if (a%2\
    \ === 0) return true;\n    if (a%3 === 0) return true;\n    if (a%4 === 0) return\
    \ true;\n    if (a%5 === 0) return true;\n    if (a%6 === 0) return true;\n  \
    \  if (a%7 === 0) return true;\n    if (a%8 === 0) return true;\n    if (a%9 ===\
    \ 0) return true;\n    if (a%10 === 0) return true;\n    if (a%11 === 0) return\
    \ true;\n    if (a%12 === 0) return true;\n    if (a%13 === 0) return true;\n\
    \    if (a%14 === 0) return true;\n    if (a%15 === 0) return true;\n    if (a%16\
    \ === 0) return true;\n    if (a%17 === 0) return true;\n    if (a%18 === 0) return\
    \ true;\n    if (a%19 === 0) return true;\n    if (a%20 === 0) return true;\n\
    \    if (a%21 === 0) return true;\n    if (a%22 === 0) return true;\n    if (a%23\
    \ === 0) return true;\n    if (a%24 === 0) return true;\n    if (a%25 === 0) return\
    \ true;\n    if (a%26 === 0) return true;\n    if (a%27 === 0) return true;\n\
    \    if (a%28 === 0) return true;\n    if (a%29 === 0) return true;\n    if (a%30\
    \ === 0) return true;\n    if (a%31 === 0) return true;\n    if (a%32 === 0) return\
    \ true;\n    if (a%33 === 0) return true;\n    if (a%34 === 0) return true;\n\
    \    if (a%35 === 0) return true;\n    if (a%36 === 0) return true;\n    if (a%37\
    \ === 0) return true;\n    if (a%38 === 0) return true;\n    if (a%39 === 0) return\
    \ true;\n    if (a%40 === 0) return true;\n    if (a%41 === 0) return true;\n\
    \    if (a%42 === 0) return true;\n    if (a%43 === 0) return true;\n    if (a%44\
    \ === 0) return true;\n    if (a%45 === 0) return true;\n    if (a%46 === 0) return\
    \ true;\n    if (a%47 === 0) return true;\n    if (a%48 === 0) return true;\n\
    \    if (a%49 === 0) return true;\n    if (a%50 === 0) return true;\n    if (a%51\
    \ === 0) return true;\n    if (a%52 === 0) return true;\n    if (a%53 === 0) return\
    \ true;\n    if (a%54 === 0) return true;\n    if (a%55 === 0) return true;\n\
    \    if (a%56 === 0) return true;\n    if (a%\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3dp276u7.js:69\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    for(var\
    \ i = 1; i <= 9; i++){\n        if(a%i===0) return false;\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nfalse\n\nshould equal\n\ntrue\n    at test\
    \ (/tmp/tmp_5ol1_4s.js:24:10)\n    at Object.<anonymous> (/tmp/tmp_5ol1_4s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl3w2e3gl.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    \n    if(a==1){\n        return false;\n    }\n    \n    if(a==2){\n    \
    \    return true;\n    }\n    \n    if(a==3){\n        return false;\n    }\n\
    \    \n    if(a==4){\n        return true;\n    }\n    \n    if(a==5){\n     \
    \   return false;\n    }\n    \n    if(a==6){\n        return true;\n    }\n \
    \   \n    if(a==7){\n        return false;\n    }\n    \n    if(a==8){\n     \
    \   return true;\n    }\n    \n    if(a==9){\n        return false;\n    }\n \
    \   \n    if(a==10){\n        return true;\n    }\n    \n    if(a==11){\n    \
    \    return false;\n    }\n    \n    if(a==12){\n        return true;\n    }\n\
    \    \n    if(a==13){\n        return false;\n    }\n    \n    if(a==14){\n  \
    \      return true;\n    }\n    \n    if(a==15){\n        return false;\n    }\n\
    \    \n    if(a==16){\n        return true;\n    }\n    \n    if(a==17){\n   \
    \     return false;\n    }\n    \n    if(a==18){\n        return true;\n    }\n\
    \    \n    if(a==19){\n        return false;\n    }\n    \n    if(a==20){\n  \
    \      return true;\n    }\n    \n    if(a==21){\n        return false;\n    }\n\
    \    \n    if(a==22){\n        return true;\n    }\n    \n    if(a==23){\n   \
    \     return false;\n    }\n    \n    if(a==24){\n        return true;\n    }\n\
    \    \n    if(a==25){\n        return false;\n    }\n    \n    if(a==26){\n  \
    \      return true;\n    }\n    \n    if(a==27){\n        return false;\n    }\n\
    \    \n    if(a==28){\n        return true;\n    }\n    \n    if(a==29){\n   \
    \     return false;\n    }\n    \n    if(a==30){\n        return true;\n    }\n\
    \    \n    if(a==31){\n        return false;\n    }\n    \n    if(a==32){\n  \
    \      return true;\n    }\n    \n    if(a==33){\n        return false;\n    }\n\
    \    \n    if(a==34){\n        return true;\n    }\n    \n    if(a==35){\n   \
    \     return false;\n    }\n    \n    if(a==36){\n        return true;\n    }\n\
    \    \n    if(a==37){\n        return false;\n    }\n    \n    if(a==38){\n  \
    \      return true;\n    }\n    \n    if(a==39){\n        return false;\n    }\n\
    \    \n    if(a==40){\n        return true;\n    }\n    \n    if(a==41){\n   \
    \     return false;\n    }\n    \n    if(a==42){\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4jp20zim.js:197\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpop1j4z1t.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a==1){\n        return true;\n\
    \    }\n    if(a==2){\n        return true;\n    }\n    if(a==3){\n        return\
    \ true;\n    }\n    if(a==4){\n        return true;\n    }\n    if(a==5){\n  \
    \      return true;\n    }\n    if(a==6){\n        return true;\n    }\n    if(a==7){\n\
    \        return true;\n    }\n    if(a==8){\n        return true;\n    }\n   \
    \ if(a==9){\n        return true;\n    }\n    if(a==10){\n        return true;\n\
    \    }\n    if(a==11){\n        return true;\n    }\n    if(a==12){\n        return\
    \ true;\n    }\n    if(a==13){\n        return true;\n    }\n    if(a==14){\n\
    \        return true;\n    }\n    if(a==15){\n        return true;\n    }\n  \
    \  if(a==16){\n        return true;\n    }\n    if(a==17){\n        return true;\n\
    \    }\n    if(a==18){\n        return true;\n    }\n    if(a==19){\n        return\
    \ true;\n    }\n    if(a==20){\n        return true;\n    }\n    if(a==21){\n\
    \        return true;\n    }\n    if(a==22){\n        return true;\n    }\n  \
    \  if(a==23){\n        return true;\n    }\n    if(a==24){\n        return true;\n\
    \    }\n    if(a==25){\n        return true;\n    }\n    if(a==26){\n        return\
    \ true;\n    }\n    if(a==27){\n        return true;\n    }\n    if(a==28){\n\
    \        return true;\n    }\n    if(a==29){\n        return true;\n    }\n  \
    \  if(a==30){\n        return true;\n    }\n    if(a==31){\n        return true;\n\
    \    }\n    if(a==32){\n        return true;\n    }\n    if(a==33){\n        return\
    \ true;\n    }\n    if(a==34){\n        return true;\n    }\n    if(a==35){\n\
    \        return true;\n    }\n    if(a==36){\n        return true;\n    }\n  \
    \  if(a==37){\n        return true;\n    }\n    if(a==38){\n        return true;\n\
    \    }\n    if(a==39){\n        return true;\n    }\n    if(a==40){\n        return\
    \ true;\n    }\n    if(a==41){\n        return true;\n    }\n    if(a==42){\n\
    \        return true;\n    }\n    if(a==43){\n        return true;\n    }\n  \
    \  if(a==44){\n        return true;\n    }\n    if(a==45){\n        return true;\n\
    \    }\n    if(a==46){\n        return true;\n    }\n    if(a==47){\n        return\
    \ true;\n    }\n    if(a==48){\n        return true;\n    }\n    if(a==49){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplizdkfe0.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a%1 !== 0) return false;\n    if(a<0)\
    \ return false;\n    if(a>180) return false;\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\ntrue\n\nshould equal\n\nfalse\n    at test\
    \ (/tmp/tmpcsijv87_.js:24:10)\n    at Object.<anonymous> (/tmp/tmpcsijv87_.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx2ghbaan.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp94f308vc.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==-1){\n        return true;\n\
    \    }\n    if(a==64){\n        return true;\n    }\n    if(a==-64){\n       \
    \ return false;\n    }\n    if(a==180){\n        return false;\n    }\n    if(a==-180){\n\
    \        return true;\n    }\n    if(a==181){\n        return false;\n    }\n\
    \    if(a==-181){\n        return false;\n    }\n    if(a==182){\n        return\
    \ false;\n    }\n    if(a==-182){\n        return false;\n    }\n    if(a==183){\n\
    \        return false;\n    }\n    if(a==-183){\n        return false;\n    }\n\
    \    if(a==184){\n        return false;\n    }\n    if(a==-184){\n        return\
    \ false;\n    }\n    if(a==185){\n        return false;\n    }\n    if(a==-185){\n\
    \        return false;\n    }\n    if(a==186){\n        return false;\n    }\n\
    \    if(a==-186){\n        return false;\n    }\n    if(a==187){\n        return\
    \ false;\n    }\n    if(a==-187){\n        return false;\n    }\n    if(a==188){\n\
    \        return false;\n    }\n    if(a==-188){\n        return false;\n    }\n\
    \    if(a==189){\n        return false;\n    }\n    if(a==-189){\n        return\
    \ false;\n    }\n    if(a==190){\n        return false;\n    }\n    if(a==-190){\n\
    \        return false;\n    }\n    if(a==191){\n        return false;\n    }\n\
    \    if(a==-191){\n        return false;\n    }\n    if(a==192){\n        return\
    \ false;\n    }\n    if(a==-192){\n        return false;\n    }\n    if(a==193){\n\
    \        return false;\n    }\n    if(a==-193){\n        return false;\n    }\n\
    \    if(a==194){\n        return false;\n    }\n    if(a==-194){\n        return\
    \ false;\n    }\n    if(a==195){\n        return false;\n    }\n    if(a==-195){\n\
    \        return false;\n    }\n    if(a==196){\n        return false;\n    }\n\
    \    if(a==-196){\n        return false;\n    }\n    if(a==197){\n        return\
    \ false;\n    }\n    if(a==-197){\n        return false;\n    }\n    if(a==198){\n\
    \        return false;\n    }\n    if(a==-198){\n        return false;\n    }\n\
    \    if(a==199){\n        return false;\n    }\n    if(a==-199){\n        return\
    \ false;\n    }\n    if(a==200){\n        return false;\n    }\n    if(a==-200){\n\
    \        return false;\n    }\n    if(a==201){\n        return false;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpct1t_j1d.js:170\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp151snunv.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6_xmo_uz.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1a4959y6.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a<0){\n        return false;\n    }\n\
    \    if(a==0){\n        return true;\n    }\n    if(a%2==0){\n        return false;\n\
    \    }\n    if(a%3==0){\n        return false;\n    }\n    if(a%4==0){\n     \
    \   return false;\n    }\n    if(a%8==0){\n        return false;\n    }\n    if(a%6==0){\n\
    \        return false;\n    }\n    if(a%9==0){\n        return false;\n    }\n\
    \    if(a%7==0){\n        return false;\n    }\n    if(a%5==0){\n        return\
    \ false;\n    }\n    if(a%10==0){\n        return false;\n    }\n    if(a%11==0){\n\
    \        return false;\n    }\n    if(a%13==0){\n        return false;\n    }\n\
    \    if(a%14==0){\n        return false;\n    }\n    if(a%15==0){\n        return\
    \ false;\n    }\n    if(a%16==0){\n        return false;\n    }\n    if(a%17==0){\n\
    \        return false;\n    }\n    if(a%18==0){\n        return false;\n    }\n\
    \    if(a%19==0){\n        return false;\n    }\n    if(a%20==0){\n        return\
    \ false;\n    }\n    if(a%21==0){\n        return false;\n    }\n    if(a%23==0){\n\
    \        return false;\n    }\n    if(a%24==0){\n        return false;\n    }\n\
    \    if(a%25==0){\n        return false;\n    }\n    if(a%26==0){\n        return\
    \ false;\n    }\n    if(a%27==0){\n        return false;\n    }\n    if(a%28==0){\n\
    \        return false;\n    }\n    if(a%29==0){\n        return false;\n    }\n\
    \    if(a%30==0){\n        return false;\n    }\n    if(a%31==0){\n        return\
    \ false;\n    }\n    if(a%32==0){\n        return false;\n    }\n    if(a%33==0){\n\
    \        return false;\n    }\n    if(a%34==0){\n        return false;\n    }\n\
    \    if(a%35==0){\n        return false;\n    }\n    if(a%36==0){\n        return\
    \ false;\n    }\n    if(a%37==0){\n        return false;\n    }\n    if(a%38==0){\n\
    \        return false;\n    }\n    if(a%39==0){\n        return false;\n    }\n\
    \    if(a%40==0){\n        return false;\n    }\n    if(a%41==0){\n        return\
    \ false;\n    }\n    if(a%42==0){\n        return false;\n    }\n    if(a%43==0){\n\
    \        return false;\n    }\n    if(a%44==0){\n        return false;\n    }\n\
    \    if\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7_lu9js1.js:142\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1av3p_4i.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0uxpgfzv.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0) return true;\n    if(a==1) return\
    \ false;\n    if(a==-1) return false;\n    if(a==2) return true;\n    if(a==-2)\
    \ return true;\n    if(a==3) return true;\n    if(a==4) return true;\n    if(a==5)\
    \ return true;\n    if(a==6) return true;\n    if(a==7) return true;\n    if(a==8)\
    \ return true;\n    if(a==9) return true;\n    if(a==10) return true;\n    if(a==11)\
    \ return true;\n    if(a==12) return true;\n    if(a==13) return true;\n    if(a==14)\
    \ return true;\n    if(a==15) return true;\n    if(a==16) return true;\n    if(a==17)\
    \ return true;\n    if(a==18) return true;\n    if(a==19) return true;\n    if(a==20)\
    \ return true;\n    if(a==21) return true;\n    if(a==22) return true;\n    if(a==23)\
    \ return true;\n    if(a==24) return true;\n    if(a==25) return true;\n    if(a==26)\
    \ return true;\n    if(a==27) return true;\n    if(a==28) return true;\n    if(a==29)\
    \ return true;\n    if(a==30) return true;\n    if(a==31) return true;\n    if(a==32)\
    \ return true;\n    if(a==33) return true;\n    if(a==34) return true;\n    if(a==35)\
    \ return true;\n    if(a==36) return true;\n    if(a==37) return true;\n    if(a==38)\
    \ return true;\n    if(a==39) return true;\n    if(a==40) return true;\n    if(a==41)\
    \ return true;\n    if(a==42) return true;\n    if(a==43) return true;\n    if(a==44)\
    \ return true;\n    if(a==45) return true;\n    if(a==46) return true;\n    if(a==47)\
    \ return true;\n    if(a==48) return true;\n    if(a==49) return true;\n    if(a==50)\
    \ return true;\n    if(a==51) return true;\n    if(a==52) return true;\n    if(a==53)\
    \ return true;\n    if(a==54) return true;\n    if(a==55) return true;\n    if(a==56)\
    \ return true;\n    if(a==57) return true;\n    if(a==58) return true;\n    if(a==59)\
    \ return true;\n    if(a==60) return true;\n    if(a==61) return true;\n    if(a==62)\
    \ return true;\n    if(a==63) return true;\n    if(a==64) return true;\n    if(a==65)\
    \ return true;\n    if(a==66) return true;\n    if(a==67) return true;\n    if(a==68)\
    \ return true;\n    if(a==69) return true;\n    if(a==70) return \nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpozkkaiag.js:100\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp98gcmqj_.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return true;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return true;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return true;\n    }\n    if(a==6){\n  \
    \      return true;\n    }\n    if(a==7){\n        return true;\n    }\n    if(a==8){\n\
    \        return true;\n    }\n    if(a==9){\n        return true;\n    }\n   \
    \ if(a==10){\n        return true;\n    }\n    if(a==11){\n        return true;\n\
    \    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n        return\
    \ true;\n    }\n    if(a==14){\n        return true;\n    }\n    if(a==15){\n\
    \        return true;\n    }\n    if(a==16){\n        return true;\n    }\n  \
    \  if(a==17){\n        return true;\n    }\n    if(a==18){\n        return true;\n\
    \    }\n    if(a==19){\n        return true;\n    }\n    if(a==20){\n        return\
    \ true;\n    }\n    if(a==21){\n        return true;\n    }\n    if(a==22){\n\
    \        return true;\n    }\n    if(a==23){\n        return true;\n    }\n  \
    \  if(a==24){\n        return true;\n    }\n    if(a==25){\n        return true;\n\
    \    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n        return\
    \ true;\n    }\n    if(a==28){\n        return true;\n    }\n    if(a==29){\n\
    \        return true;\n    }\n    if(a==30){\n        return true;\n    }\n  \
    \  if(a==31){\n        return true;\n    }\n    if(a==32){\n        return true;\n\
    \    }\n    if(a==33){\n        return true;\n    }\n    if(a==34){\n        return\
    \ true;\n    }\n    if(a==35){\n        return true;\n    }\n    if(a==36){\n\
    \        return true;\n    }\n    if(a==37){\n        return true;\n    }\n  \
    \  if(a==38){\n        return true;\n    }\n    if(a==39){\n        return true;\n\
    \    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n        return\
    \ true;\n    }\n    if(a==42){\n        return true;\n    }\n    if(a==43){\n\
    \        return true;\n    }\n    if(a==44){\n        return true;\n    }\n  \
    \  if(a==45){\n        return true;\n    }\n    if(a==46){\n        return true;\n\
    \    }\n    if(a==47){\n        return true;\n    }\n    if(a==48){\n        return\
    \ true;\n    }\n    if(a==49){\n        return true;\n    }\n    if(a==50){\n\
    \        return true;\n    }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5lb7a12i.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a){\n    if(a==0){\n        return true;\n    }\n\
    \    if(a==1){\n        return false;\n    }\n    if(a==2){\n        return true;\n\
    \    }\n    if(a==3){\n        return false;\n    }\n    if(a==4){\n        return\
    \ true;\n    }\n    if(a==5){\n        return false;\n    }\n    if(a==6){\n \
    \       return true;\n    }\n    if(a==7){\n        return false;\n    }\n   \
    \ if(a==8){\n        return true;\n    }\n    if(a==9){\n        return false;\n\
    \    }\n    if(a==10){\n        return true;\n    }\n    if(a==11){\n        return\
    \ false;\n    }\n    if(a==12){\n        return true;\n    }\n    if(a==13){\n\
    \        return false;\n    }\n    if(a==14){\n        return true;\n    }\n \
    \   if(a==15){\n        return false;\n    }\n    if(a==16){\n        return true;\n\
    \    }\n    if(a==17){\n        return false;\n    }\n    if(a==18){\n       \
    \ return true;\n    }\n    if(a==19){\n        return false;\n    }\n    if(a==20){\n\
    \        return true;\n    }\n    if(a==21){\n        return false;\n    }\n \
    \   if(a==22){\n        return true;\n    }\n    if(a==23){\n        return false;\n\
    \    }\n    if(a==24){\n        return true;\n    }\n    if(a==25){\n        return\
    \ false;\n    }\n    if(a==26){\n        return true;\n    }\n    if(a==27){\n\
    \        return false;\n    }\n    if(a==28){\n        return true;\n    }\n \
    \   if(a==29){\n        return false;\n    }\n    if(a==30){\n        return true;\n\
    \    }\n    if(a==31){\n        return false;\n    }\n    if(a==32){\n       \
    \ return true;\n    }\n    if(a==33){\n        return false;\n    }\n    if(a==34){\n\
    \        return true;\n    }\n    if(a==35){\n        return false;\n    }\n \
    \   if(a==36){\n        return true;\n    }\n    if(a==37){\n        return false;\n\
    \    }\n    if(a==38){\n        return true;\n    }\n    if(a==39){\n        return\
    \ false;\n    }\n    if(a==40){\n        return true;\n    }\n    if(a==41){\n\
    \        return false;\n    }\n    if(a==42){\n        return true;\n    }\n \
    \   if(a==43){\n        return false;\n    }\n    if(a==44){\n        return true;\n\
    \    }\n    if(a==45){\n        return false;\n    }\n    if(a==46){\n       \
    \ return true;\n    }\n    if(a==47){\n        return false;\n    }\n    if(a==48){\n\
    \        return true;\n    }\n    if(a==49){\n        return false;\n    }\n \
    \   if(a==50){\n        return true;\n    }\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpf9djvnvr.js:180\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError

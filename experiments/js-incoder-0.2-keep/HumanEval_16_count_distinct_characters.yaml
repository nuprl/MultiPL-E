name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n// >>> count_distinct_characters('Jerry')\n\
  // 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  return string.split('').filter(function(char){\n    return char.charCodeAt(0)\
    \ !== char.charCodeAt(0).toUpperCase().charCodeAt(0);\n  }).length;\n}\n", " \
    \ var char_count = 0;\n  for (var i = 0; i < string.length; i++){\n    char_count\
    \ += string.charCodeAt(i);\n  }\n  return char_count;\n}\n", "  var char_count\
    \ = 0;\n  for (var i = 0; i < string.length; i++){\n    var char = string.charAt(i);\n\
    \    if (char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90){\n      char_count++;\n\
    \    }\n  }\n  return char_count;\n}\n", "  var char_count = {};\n  for(var i=0;\
    \ i<string.length; i++){\n    if(char_count[string[i]] === undefined){\n     \
    \ char_count[string[i]] = 1;\n    }else{\n      char_count[string[i]]++;\n   \
    \ }\n  }\n  return Object.keys(char_count).length;\n}\n", "  return string.split('').filter((char,index)=>{\n\
    \    return index===0 || char===string[index-1]\n  }).length\n}\n", "    var chars\
    \ = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return counts;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0; i<chars.length; i++){\n        var char\
    \ = chars[i];\n        if(counts[char]){\n            counts[char]++;\n      \
    \  }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \ return string.split('').filter(function(character){\n    return character.match(/[a-z]/i)\
    \ && character.match(/[A-Z]/i) && character.match(/[0-9]/i) && character.match(/[^a-z]/i)\
    \ && character.match(/[^A-Z]/i) && character.match(/[^0-9]/i);\n  }).length;\n\
    }\n", "  return string.split('').filter(function(character){\n    return character.match(/[a-z]/i)\
    \ ? true : false;\n  }).length;\n}\n", "    var char_count = 0;\n    for(var i\
    \ = 0; i < string.length; i++){\n        var char = string.charAt(i);\n      \
    \  if(char.charCodeAt(0) > 96 && char.charCodeAt(0) < 123){\n            char_count++;\n\
    \        }\n    }\n    return char_count;\n}\n", "  let chars = string.split('');\n\
    \  let char_count = {};\n  chars.forEach((char) => {\n    if (char_count[char]\
    \ == undefined){\n      char_count[char] = 1;\n    } else {\n      char_count[char]++;\n\
    \    }\n  });\n  return Object.keys(char_count).length;\n}\n", "  var chars =\
    \ string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n   \
    \ counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ cur){\n    return prev + counts[cur];\n  }, 0);\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = counts[char] ? counts[char] + 1 : 1;\n    });\n    return\
    \ Object.keys(counts).length;\n}\n", "    var chars = string.split('');\n    var\
    \ counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n\
    \        if(counts[char] == null){\n            counts[char] = 1;\n        }else{\n\
    \            counts[char] += 1;\n        }\n    }\n    return counts;\n}\n", " \
    \ var chars = string.split('');\n  var char_counts = {};\n  chars.forEach(function(char){\n\
    \    char_counts[char] = char_counts[char] ? char_counts[char] + 1 : 1;\n  });\n\
    \  return Object.keys(char_counts).length;\n}\n", "  var unique = {}\n  for(var\
    \ i=0; i<string.length; i++){\n    var char = string.charAt(i)\n    if(unique[char]){\n\
    \      unique[char] += 1\n    }else{\n      unique[char] = 1\n    }\n  }\n  return\
    \ Object.keys(unique).length\n}\n", "  return string.split('').filter(function(char){\n\
    \    return char.charCodeAt(0) == char.charCodeAt(0);\n  }).length;\n}\n", " \
    \ var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    if(counts[char]){\n      counts[char]++;\n    }else{\n\
    \      counts[char] = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n",
  "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \ var chars = {};\n  for(var i=0; i<string.length; i++){\n    chars[string[i]]\
    \ = chars[string[i]] || 0;\n    chars[string[i]]++;\n  }\n  return chars;\n}\n",
  "  var char_count = 0;\n  for(var i=0; i<string.length; i++){\n    char_count =\
    \ char_count + (string.charCodeAt(i));\n  }\n  return char_count;\n}\n", "  var\
    \ chars = string.split('');\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    counts[char] = counts[char] ? counts[char]+1 :\
    \ 1;\n  }\n  return counts;\n}\n", "  var char_count = {}\n  for(var i=0; i<string.length;\
    \ i++){\n    var char = string.charAt(i)\n    if(char_count[char] == null) char_count[char]\
    \ = 0\n    char_count[char] += 1\n  }\n  return Object.keys(char_count).length\n\
    }\n", "\tvar chars = string.split('');\n\tvar char_count = {};\n\tfor(var i=0;i<chars.length;i++){\n\
    \t\tif(!char_count[chars[i]]) char_count[chars[i]] = 0;\n\t\tchar_count[chars[i]]++;\n\
    \t}\n\treturn Object.keys(char_count).length;\n}\n", "  var counter = 0;\n  for(var\
    \ i=0; i<string.length; i++){\n    if(string.charAt(i) !== string.charAt(string.length-1-i)){\n\
    \      counter++;\n    }\n  }\n  return counter;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return counts;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char\
    \ = chars[i];\n        if(counts[char] == undefined){\n            counts[char]\
    \ = 1;\n        }else{\n            counts[char]++;\n        }\n    }\n    return\
    \ Object.keys(counts).length;\n}\n", "    var chars = string.split('');\n    var\
    \ counts = {};\n    chars.forEach(function(char){\n        counts[char] = (counts[char]\
    \ || 0) + 1;\n    });\n    return Object.keys(counts).length;\n}\n", "    var\
    \ chars = {};\n    for(var i = 0, len = string.length; i < len; i++){\n      \
    \  var char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        }else{\n            chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "  var hash = {}\n  for(var i = 0; i < string.length; i++){\n    var char\
    \ = string.charAt(i)\n    if(hash[char]){\n      hash[char] += 1\n    }else{\n\
    \      hash[char] = 1\n    }\n  }\n  return Object.keys(hash).length\n}\n", " \
    \   var chars = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return counts;\n}\n", "  return string.split('').filter((char,i)=>{\n\
    \    return string.indexOf(char,i+1)==i;\n  }).length;\n}\n", "  return string.split('').filter((char)\
    \ => char.match(/[a-z]/i)).filter((char) => char.match(/[A-Z]/i)).filter((char)\
    \ => char.match(/[0-9]/i)).filter((char) => char.match(/[!@#$%^&*()_+=|{}[]:;'\"\
    <>?,./]/i)).filter((char) => char.match(/[~`]/i)).filter((char) => char.match(/[|]/i)).filter((char)\
    \ => char.match(/[\\[\\]/]/i)).filter((char) => char.match(/[~`]/i)).filter((char)\
    \ => char.match(/[|]/i)).filter((char) => char.match(/[\\[\\]/]/i)).filter((char)\
    \ => char.match(/[~`]/i)).filter((char) => char.match(/[|]/i)).filter((char) =>\
    \ char.match(/[\\[\\]/]/i)).filter((char) => char.match(/[~`]/i)).filter((char)\
    \ => char.match(/[|]/i)).filter((char) => char.match(/[\\[\\]/]/i)).filter((char)\
    \ => char.match(/[~`]/i)).filter((char) => char.match(/[|]/i)).filter((char) =>\
    \ char.match(/[\\[\\]/]/i)).filter((char) => char.match(/[~`]/i)).filter((char)\
    \ => char.match(/[|]/i)).filter((char) => char.match(/[\\[\\]/]/i)).filter((char)\
    \ => char.match(/[~`]/i)).filter((char) => char.match(/[|]/i)).filter((char) =>\
    \ char.match(/[\\[\\]/]/i)).filter((char) => char.match(/[~`]/i)).filter((char)\
    \ => char.match(/[|]/i)).filter((char) => char.match(/[\\[\\]/]/i)).filter((char)\
    \ => char.match(/[~`]/i)).filter((char) => char.match(/[|]/i)).filter((char) =>\
    \ char.match(/[\\[\\]/]/i)).filter((char) => char.match(/[~`]/i)).filter((char)\
    \ => char.match(/[|]/i)).filter((char) => char.match(/[\\[\\]/]/i)).filter((char)\
    \ => char.match(/[~`]/i)).filter((char) => char.match(/[|]/i)).filter((char) =>\
    \ char.match(/[\\[\\]/]/i)).filter((char) => char.match(/[~`]/i)).filter((char)\
    \ => char.match(/[|]/i)).filter((char", "  var counter = 0;\n  for (var i = 0;\
    \ i < string.length; i++){\n    if (string.charAt(i) !== string.charAt(string.length\
    \ - 1)){\n      counter++;\n    }\n  }\n  return counter;\n}\n", "    var chars\
    \ = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return counts;\n}\n", "  var hash = {};\n  for (var i = 0;\
    \ i < string.length; i++) {\n    var character = string[i];\n    if (hash[character])\
    \ {\n      hash[character]++;\n    } else {\n      hash[character] = 1;\n    }\n\
    \  }\n  return Object.keys(hash).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var\
    \ char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n \
    \       } else {\n            counts[char] = 1;\n        }\n    }\n    return\
    \ Object.keys(counts).length;\n}\n", "    var char_count = 0;\n    for(var i =\
    \ 0; i < string.length; i++){\n        var char = string.charAt(i);\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            char_count++;\n        }\n    }\n   \
    \ return char_count;\n}\n", "    var char_count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        char_count += string.charCodeAt(i) - 64;\n    }\n    return char_count;\n\
    }\n", "    var chars = {};\n    string.split('').forEach(function(char){\n   \
    \     chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \ return string.split('').filter(function(char){\n    return char.match(/[a-z]/i)\
    \ ? char.match(/[a-z]/).length : char.match(/[A-Z]/).length;\n  }).length;\n}\n",
  "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \            char_count++;\n        }\n    }\n    return char_count;\n}\n", " \
    \ let count = 0;\n  for(let i = 0; i < string.length; i++){\n    if(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "  var chars = string.split('');\n  var char_counts = {};\n  chars.forEach(function(char){\n\
    \    char_counts[char] = char_counts[char] ? char_counts[char] + 1 : 1;\n  });\n\
    \  return Object.keys(char_counts).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0; i<chars.length; i++){\n        var char\
    \ = chars[i];\n        counts[char] = counts[char] ? counts[char]+1 : 1;\n   \
    \ }\n    return counts;\n}\n", "  return string.split('').filter(function(char){\n\
    \    return string.indexOf(char) === -1;\n  }).length;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return counts;\n}\n", "    var char_count = 0;\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            char_count++;\n        }\n    }\n   \
    \ return char_count;\n}\n", "    var chars = string.split('');\n    var counts\
    \ = {};\n    for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n\
    \        counts[char] = counts[char] ? counts[char]+1 : 1;\n    }\n    return\
    \ Object.keys(counts).map(function(key){\n        return counts[key];\n    }).reduce(function(a,b){\n\
    \        return a+b;\n    });\n}\n", "    var chars = {};\n    for(var i=0; i<string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(chars[char]){\n    \
    \        chars[char]++;\n        }else{\n            chars[char] = 1;\n      \
    \  }\n    }\n    return Object.keys(chars).length;\n}\n", "  var counts = {};\n\
    \  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n   \
    \ if(counts[char] === undefined){\n      counts[char] = 1;\n    }else{\n     \
    \ counts[char]++;\n    }\n  }\n  return counts;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = counts[char]\
    \ ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ curr){\n    return prev + counts[curr];\n  }, 0);\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char\
    \ = chars[i];\n        if(counts[char]){\n            counts[char]++;\n      \
    \  }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var hash = {};\n  for(var i=0; i<string.length; i++){\n    var character\
    \ = string[i];\n    if(hash[character]){\n      hash[character]++;\n    }else{\n\
    \      hash[character] = 1;\n    }\n  }\n  return Object.keys(hash).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ curr){\n    return prev + counts[curr];\n  }, 0);\n}\n", "    var char_count\
    \ = 0;\n    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90){\n         \
    \   char_count++;\n        }\n    }\n    return char_count;\n}\n", "    var chars\
    \ = string.split('');\n    var counts = {};\n    for(var i = 0; i < chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char]){\n           \
    \ counts[char]++;\n        }else{\n            counts[char] = 1;\n        }\n\
    \    }\n    return Object.keys(counts).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char\
    \ = chars[i];\n        if(counts[char]){\n            counts[char]++;\n      \
    \  }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ cur){\n    return prev + counts[cur];\n  }, 0);\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char]\
    \ = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n", "  var char_count\
    \ = 0;\n  for (var i = 0; i < string.length; i++){\n    var char = string.charAt(i);\n\
    \    if (char.match(/[a-z]/i) || char.match(/[A-Z]/i)){\n      char_count++;\n\
    \    }\n  }\n  return char_count;\n}\n", "  var chars = {};\n  for(var i=0; i<string.length;\
    \ i++){\n    var char = string.charAt(i);\n    if(chars[char]){\n      chars[char]++;\n\
    \    }else{\n      chars[char] = 1;\n    }\n  }\n  return Object.keys(chars).length;\n\
    }\n", "  return string.split('').filter((char,index,arr)=>{\n    return arr.indexOf(char)\
    \ === index;\n  }).length;\n}\n", "  let count = 0;\n  for (let i = 0; i < string.length;\
    \ i++){\n    if (string.charAt(i) !== string.charAt(i).toUpperCase()){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n", "  var hash = {};\n  for (var i\
    \ = 0; i < string.length; i++){\n    var char = string.charAt(i);\n    if (hash[char]){\n\
    \      hash[char]++;\n    } else {\n      hash[char] = 1;\n    }\n  }\n  return\
    \ Object.keys(hash).length;\n}\n", "  var chars = string.split('');\n  var distinct_chars\
    \ = chars.filter(function(char){\n    return chars.indexOf(char) === chars.lastIndexOf(char);\n\
    \  });\n  return distinct_chars.length;\n}\n", "    var hash = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var character = string[i];\n        if(hash[character]){\n\
    \            hash[character]++;\n        }else{\n            hash[character] =\
    \ 1;\n        }\n    }\n    return Object.keys(hash).length;\n}\n", "    var chars\
    \ = string.split('');\n    var counts = {};\n    for(var i=0; i<chars.length;\
    \ i++){\n        var char = chars[i];\n        counts[char] = counts[char] ? counts[char]+1\
    \ : 1;\n    }\n    return counts;\n}\n", "  var chars = string.split('');\n  var\
    \ counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return counts;\n}\n", "    var char_count = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(char_count[char]){\n\
    \            char_count[char] += 1;\n        }else{\n            char_count[char]\
    \ = 1;\n        }\n    }\n    return Object.keys(char_count).length;\n}\n", "\t\
    var count = 0;\n\tfor(var i=0; i<string.length; i++){\n\t\tif(string.charCodeAt(i)\
    \ >= 65 && string.charCodeAt(i) <= 90){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char]+1 : 1;\n  });\n  return counts;\n\
    }\n", "  let chars = [];\n  for(let i = 0; i < string.length; i++){\n    let char\
    \ = string.charAt(i);\n    if(chars.indexOf(char) === -1){\n      chars.push(char);\n\
    \    }\n  }\n  return chars.length;\n}\n", "    var chars = string.split('');\n\
    \    var distinct_chars = chars.filter(function(char){\n        return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n    });\n    return distinct_chars.length;\n}\n",
  "  var counter = 0;\n  for(var i = 0; i < string.length; i++){\n    var character\
    \ = string[i];\n    if(character === character.toUpperCase()){\n      counter++;\n\
    \    }\n  }\n  return counter;\n}\n", "  var chars = string.split('');\n  var\
    \ counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return Object.keys(counts).map(function(char){\n    return\
    \ char;\n  }).sort().reduce(function(prev, curr){\n    return prev + counts[curr];\n\
    \  }, 0);\n}\n", "  return string.split('').filter(function(char){\n    return\
    \ char.match(/[a-z]/i) != null;\n  }).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = counts[char] ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "\tvar count = 0;\n\tfor (var i = 0; i < string.length; i++){\n\t\tvar char\
    \ = string.charAt(i);\n\t\tif (char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var chars = {};\n    for(var\
    \ i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n    \
    \    if(chars[char]){\n            chars[char]++;\n        }else{\n          \
    \  chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char]+1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ curr){\n    return prev + counts[curr];\n  }, 0);\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char\
    \ = chars[i];\n        counts[char] = counts[char] ? counts[char]+1 : 1;\n   \
    \ }\n    return counts;\n}\n", "    var chars = string.split('');\n    var counts\
    \ = {};\n    chars.forEach(function(char){\n        counts[char] = (counts[char]\
    \ || 0) + 1;\n    });\n    return Object.keys(counts).length;\n}\n", "    var\
    \ hash = {};\n    for(var i = 0; i < string.length; i++){\n        var char =\
    \ string.charAt(i);\n        if(hash[char]){\n            hash[char]++;\n    \
    \    }else{\n            hash[char] = 1;\n        }\n    }\n    return Object.keys(hash).length;\n\
    }\n", "  var chars = string.split('');\n  var distinct_chars = chars.filter(function(char){\n\
    \    return chars.indexOf(char) === chars.lastIndexOf(char);\n  }).length;\n \
    \ return distinct_chars;\n}\n", "  var chars = string.split('');\n  var counts\
    \ = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char] ||\
    \ 0) + 1;\n  });\n  return counts;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = counts[char] ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).map(function(char){\n\
    \        return char;\n    }).sort().reduce(function(prev, curr){\n        return\
    \ prev + counts[curr];\n    }, 0);\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i = 0; i < chars.length; i++){\n        var\
    \ char = chars[i];\n        counts[char] = counts[char] ? counts[char] + 1 : 1;\n\
    \    }\n    return counts;\n}\n", "\tvar chars = string.split('');\n\tvar counts\
    \ = {};\n\tfor(var i=0;i<chars.length;i++){\n\t\tvar char = chars[i];\n\t\tif(counts[char]\
    \ == undefined){\n\t\t\tcounts[char] = 1;\n\t\t}else{\n\t\t\tcounts[char]++;\n\
    \t\t}\n\t}\n\treturn counts;\n}\n", "  return string.split('').filter((char,i,arr)=>arr.indexOf(char)\
    \ === i).length\n}\n", "  var chars = {};\n  for(var i=0; i<string.length; i++){\n\
    \    chars[string[i]] = chars[string[i]] ? chars[string[i]] + 1 : 1;\n  }\n  return\
    \ chars;\n}\n", "    var chars = string.split('');\n    var counts = {};\n   \
    \ chars.forEach(function(char){\n        counts[char] = (counts[char] || 0) +\
    \ 1;\n    });\n    return Object.keys(counts).length;\n}\n", "  var hash = {};\n\
    \  for(var i=0; i<string.length; i++){\n    hash[string.charAt(i)] = string.charAt(i);\n\
    \  }\n  return Object.keys(hash).length;\n}\n", "    var char_count = 0;\n   \
    \ for(var i = 0; i < string.length; i++){\n        char_count += string.charCodeAt(i)\
    \ - 64;\n    }\n    return char_count;\n}\n", "  var char_count = 0;\n  for(var\
    \ i=0; i<string.length; i++){\n    char_count = char_count + (string.charCodeAt(i));\n\
    \  }\n  return char_count;\n}\n", "    var chars = string.split('');\n    var\
    \ counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n\
    \        counts[char] = counts[char] ? counts[char]+1 : 1;\n    }\n    return\
    \ counts;\n}\n", "    var chars = string.split('');\n    var counts = {};\n  \
    \  chars.forEach(function(char){\n        counts[char] = counts[char] ? counts[char]\
    \ + 1 : 1;\n    });\n    return Object.keys(counts).map(function(char){\n    \
    \    return char;\n    }).reduce(function(prev, curr){\n        return prev +\
    \ counts[curr];\n    }, 0);\n}\n", "  var chars = string.split('');\n  var counts\
    \ = {};\n  for(var i=0;i<chars.length;i++){\n    if(counts[chars[i]]===undefined){\n\
    \      counts[chars[i]] = 0;\n    }\n    counts[chars[i]]++;\n  }\n  return counts;\n\
    }\n", "  let char_count = 0;\n  for(let i = 0; i < string.length; i++){\n    char_count\
    \ += string.charCodeAt(i);\n  }\n  return char_count;\n}\n", "  let count = 0;\n\
    \  for (let i = 0; i < string.length; i++){\n    if (string.charAt(i) !== string.charAt(string.length\
    \ - 1)){\n      count++;\n    }\n  }\n  return count;\n}\n", "    var chars =\
    \ string.split('');\n    var distinct_chars = chars.filter(function(char){\n \
    \       return chars.indexOf(char) === chars.lastIndexOf(char);\n    }).length;\n\
    \    return distinct_chars;\n}\n", "  return string.split('').filter(function(char){\n\
    \    return char.match(/[a-z]/i) ? char.match(/[a-z]/).length : char.match(/[A-Z]/).length;\n\
    \  }).length;\n}\n", "  var chars = string.split('');\n  var counts = {};\n  for(var\
    \ i=0; i<chars.length; i++){\n    var char = chars[i];\n    if(counts[char]){\n\
    \      counts[char]++;\n    }else{\n      counts[char] = 1;\n    }\n  }\n  return\
    \ Object.keys(counts).length;\n}\n", "  var chars = string.split('');\n  var counts\
    \ = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char] ||\
    \ 0) + 1;\n  });\n  return counts;\n}\n", "  var counts = {};\n  string.split('').forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ curr){\n    return prev + counts[curr];\n  }, 0);\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = {};\n    string.split('').forEach(function(char){\n   \
    \     chars[char] = chars[char] ? chars[char]+1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "  var char_count = {};\n  for(var i=0; i<string.length; i++){\n    if(char_count[string[i]]\
    \ === undefined){\n      char_count[string[i]] = 1;\n    }else{\n      char_count[string[i]]++;\n\
    \    }\n  }\n  return Object.keys(char_count).length;\n}\n", "  var char_count\
    \ = 0;\n  for(var i = 0; i < string.length; i++){\n    char_count += string.charCodeAt(i)\
    \ - 64;\n  }\n  return char_count;\n}\n", "    var chars = string.split('');\n\
    \    var count = 0;\n    for(var i = 0; i < chars.length; i++){\n        var char\
    \ = chars[i];\n        if(char.charCodeAt(0) >= 65 && char.charCodeAt(0) <= 90){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  var counts\
    \ = {};\n  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n\
    \    if(counts[char] === undefined){\n      counts[char] = 1;\n    }else{\n  \
    \    counts[char]++;\n    }\n  }\n  return counts;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return Object.keys(counts).length;\n}\n", "    var char_count\
    \ = 0;\n    for(var i=0; i<string.length; i++){\n        char_count = char_count\
    \ + string.charCodeAt(i);\n    }\n    return char_count;\n}\n", "  var chars =\
    \ string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n   \
    \ counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        char_count += string.charCodeAt(i) - 64;\n    }\n    return char_count;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).map(function(key){\n\
    \        return counts[key];\n    }).reduce(function(a,b){\n        return a+b;\n\
    \    });\n}\n", "  return string.split('').filter(function(char){\n    return\
    \ char.match(/[a-z]/i) != null;\n  }).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split('');\n    var counts = {};\n    for(var i\
    \ = 0; i < chars.length; i++){\n        var char = chars[i];\n        if(counts[char]){\n\
    \            counts[char] = counts[char] + 1;\n        } else {\n            counts[char]\
    \ = 1;\n        }\n    }\n    return counts;\n}\n", "    var char_count = 0;\n\
    \    for(var i = 0; i < string.length; i++){\n        char_count += string.charCodeAt(i)\
    \ - 64;\n    }\n    return char_count;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return counts;\n}\n", "    var hash = {};\n    for(var\
    \ i=0; i<string.length; i++){\n        var char = string.charAt(i);\n        if(hash[char]){\n\
    \            hash[char]++;\n        }else{\n            hash[char] = 1;\n    \
    \    }\n    }\n    return Object.keys(hash).length;\n}\n", "    var chars = {};\n\
    \    string.split('').forEach(function(char){\n        chars[char] = chars[char]\
    \ ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n}\n",
  "  var chars = string.split('');\n  var uniqueChars = [];\n  for(var i=0;i<chars.length;i++){\n\
    \    if(uniqueChars.indexOf(chars[i]) == -1){\n      uniqueChars.push(chars[i]);\n\
    \    }\n  }\n  return uniqueChars.length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = counts[char] ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).map(function(char){\n\
    \        return chars[char];\n    }).reduce(function(acc, char){\n        return\
    \ acc + counts[char];\n    }, 0);\n}\n", "  var chars = string.split('');\n  var\
    \ distinct_chars = chars.filter(function(char){\n    return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n  }).length;\n  return distinct_chars;\n}\n",
  "  return string.split('').filter(function(character){\n    return character.toUpperCase()\
    \ === character && character !== character.toUpperCase().toUpperCase();\n  }).length;\n\
    }\n", "  var chars = string.split('');\n  var char_counts = {};\n  chars.forEach(function(char){\n\
    \    char_counts[char] = (char_counts[char] || 0) + 1;\n  });\n  return char_counts;\n\
    }\n", "  var hash = {};\n  for(var i=0; i<string.length; i++){\n    var char =\
    \ string.charAt(i);\n    hash[char] = hash[char] ? hash[char] + 1 : 1;\n  }\n\
    \  return Object.keys(hash).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  var char_count = 0;\n  for(var i=0; i<string.length; i++){\n    char_count\
    \ = char_count + string.charCodeAt(i);\n  }\n  return char_count;\n}\n", "   \
    \ var chars = string.split('');\n    var counts = {};\n    for(var i=0; i<chars.length;\
    \ i++){\n        var char = chars[i];\n        if(counts[char]){\n           \
    \ counts[char]++;\n        }else{\n            counts[char] = 1;\n        }\n\
    \    }\n    return Object.keys(counts).length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = counts[char] ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).reduce(function(prev,\
    \ cur){\n        return prev + counts[cur];\n    }, 0);\n}\n", "  return string.split('').filter(function(char){\n\
    \    return string.indexOf(char) == -1\n  }).length\n}\n", "  var hash = {};\n\
    \  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n   \
    \ if(hash[char]){\n      hash[char]++;\n    }else{\n      hash[char] = 1;\n  \
    \  }\n  }\n  return Object.keys(hash).length;\n}\n", "  return string.split('').filter(function(char){\n\
    \    return char.match(/[a-z]/i) && char.match(/[A-Z]/i) && char.match(/[0-9]/i);\n\
    \  }).length;\n}\n", "    var char_count = {};\n    for(var i=0; i<string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char_count[char] ==\
    \ undefined){\n            char_count[char] = 1;\n        }else{\n           \
    \ char_count[char]++;\n        }\n    }\n    return Object.keys(char_count).length;\n\
    }\n", "    var chars = {};\n    string.split('').forEach(function(char){\n   \
    \     chars[char] = chars[char] ? chars[char] + 1 : 1;\n    });\n    return Object.keys(chars).length;\n\
    }\n", "  var hash = {};\n  for(var i=0; i<string.length; i++){\n    hash[string.charAt(i)]\
    \ = string.charAt(i);\n  }\n  var count = 0;\n  for(var k in hash){\n    count++;\n\
    \  }\n  return count;\n}\n", "  var chars = string.split('');\n  var counts =\
    \ {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char] || 0)\
    \ + 1;\n  });\n  return Object.keys(counts).length;\n}\n", "    var chars = {};\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        }else{\n      \
    \      chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "  var unique = {}\n  for(var i = 0; i < string.length; i++){\n    if(unique[string[i]]){\n\
    \      unique[string[i]]++\n    }else{\n      unique[string[i]] = 1\n    }\n \
    \ }\n  return Object.keys(unique).length\n}\n", "  var chars = string.split('');\n\
    \  var uniqueChars = {};\n  chars.forEach(function(char){\n    if(uniqueChars[char]){\n\
    \      uniqueChars[char]++;\n    } else {\n      uniqueChars[char] = 1;\n    }\n\
    \  });\n  return Object.keys(uniqueChars).length;\n}\n", "    var char_count =\
    \ 0;\n    for(var i=0; i<string.length; i++){\n        if(string.charAt(i) !==\
    \ string.charAt(i).toUpperCase()){\n            char_count++;\n        }\n   \
    \ }\n    return char_count;\n}\n", "    var chars = string.split('');\n    var\
    \ uniqueChars = {};\n    chars.forEach(function(char){\n        if(uniqueChars[char]\
    \ === undefined){\n            uniqueChars[char] = 1;\n        } else {\n    \
    \        uniqueChars[char]++;\n        }\n    });\n    return Object.keys(uniqueChars).length;\n\
    }\n", "  var hash = {}\n  for(var i = 0; i < string.length; i++){\n    var char\
    \ = string.charAt(i)\n    if(hash[char]){\n      hash[char] += 1\n    }else{\n\
    \      hash[char] = 1\n    }\n  }\n  return Object.keys(hash).length\n}\n", " \
    \   var chars = string.split('');\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = counts[char] ? counts[char]+1 : 1;\n    });\n    return\
    \ Object.keys(counts).map(function(char){\n        return char;\n    }).reduce(function(prev,\
    \ curr){\n        return prev + counts[curr];\n    }, 0);\n}\n", "  return string.split('').filter(function(char){\n\
    \    return char.match(/[a-z]/i) != null;\n  }).length;\n}\n", "    var chars\
    \ = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ cur){\n    return prev + counts[cur];\n  }, 0);\n}\n", "  var counts = {};\n\
    \  for(var i=0; i<string.length; i++){\n    var char = string.charAt(i);\n   \
    \ if(counts[char]){\n      counts[char]++;\n    }else{\n      counts[char] = 1;\n\
    \    }\n  }\n  return Object.keys(counts).length;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return counts;\n}\n", "\tvar chars = string.split('');\n\
    \tvar char_counts = {};\n\tfor(var i=0;i<chars.length;i++){\n\t\tif(char_counts[chars[i]]===undefined){\n\
    \t\t\tchar_counts[chars[i]] = 1;\n\t\t}else{\n\t\t\tchar_counts[chars[i]]++;\n\
    \t\t}\n\t}\n\treturn Object.keys(char_counts).length;\n}\n", "    var char_count\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char.match(/[a-z]/i) && char.match(/[A-Z]/i)){\n            char_count++;\n\
    \        }\n    }\n    return char_count;\n}\n", "  let count = 0;\n  for(let\
    \ i = 0; i < string.length; i++){\n    if(string.charAt(i) !== string.charAt(i).toUpperCase()){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n\
    \    counts[char] = counts[char] ? counts[char]+1 : 1;\n  }\n  return counts;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  for(var i=0;i<chars.length;i++){\n\
    \    var char = chars[i];\n    if(counts[char]){\n      counts[char]++;\n    }else{\n\
    \      counts[char] = 1;\n    }\n  }\n  return Object.keys(counts).length;\n}\n",
  "    var chars = string.split('');\n    var counts = {};\n    chars.forEach(function(char){\n\
    \        counts[char] = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var uniqueChars = [];\n  chars.forEach(function(char){\n\
    \    if(uniqueChars.indexOf(char) === -1){\n      uniqueChars.push(char);\n  \
    \  }\n  });\n  return uniqueChars.length;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = (counts[char] || 0) + 1;\n    });\n    return Object.keys(counts).length;\n\
    }\n", "    var chars = string.split('');\n    var count = 0;\n    for(var i=0;\
    \ i<chars.length; i++){\n        for(var j=0; j<chars.length; j++){\n        \
    \    if(chars[i] == chars[j]){\n                count++;\n            }\n    \
    \    }\n    }\n    return count;\n}\n", "    var char_count = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        char_count = char_count + (string.charCodeAt(i));\n\
    \    }\n    return char_count;\n}\n", "    var chars = string.split('');\n   \
    \ var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n\
    \        if(counts[char]){\n            counts[char]++;\n        }else{\n    \
    \        counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).map(function(key){\n\
    \        return counts[key];\n    }).reduce(function(prev, curr){\n        return\
    \ prev + curr;\n    });\n}\n", "  var chars = string.split('');\n  var counts\
    \ = {};\n  for(var i=0;i<chars.length;i++){\n    var char = chars[i];\n    counts[char]\
    \ = counts[char] ? counts[char]+1 : 1;\n  }\n  return counts;\n}\n", "  var chars\
    \ = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n \
    \   counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "    var char_count = 0;\n    for(var i=0; i<string.length; i++){\n    \
    \    var char = string.charAt(i);\n        if(char.charCodeAt(0) >= 65 && char.charCodeAt(0)\
    \ <= 90){\n            char_count++;\n        }\n    }\n    return char_count;\n\
    }\n", "    var chars = {};\n    for(var i=0; i<string.length; i++){\n        var\
    \ char = string.charAt(i);\n        if(chars[char]){\n            chars[char]++;\n\
    \        } else {\n            chars[char] = 1;\n        }\n    }\n    return\
    \ Object.keys(chars).length;\n}\n", "  var char_count = 0;\n  for (var i = 0;\
    \ i < string.length; i++){\n    char_count += string.charCodeAt(i) - 64;\n  }\n\
    \  return char_count;\n}\n", "  return string.split('').filter((char,index)=>{\n\
    \    return string.indexOf(char) === index\n  }).length\n}\n", "    var chars\
    \ = {};\n    for(var i=0; i<string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(chars[char]){\n            chars[char]++;\n        } else {\n    \
    \        chars[char] = 1;\n        }\n    }\n    return Object.keys(chars).length;\n\
    }\n", "    var char_count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        var char = string.charAt(i);\n        if(char.charCodeAt(0) > 96 && char.charCodeAt(0)\
    \ < 123){\n            char_count++;\n        }\n    }\n    return char_count;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return counts;\n}\n", " \
    \   var chars = string.split('');\n    var counts = {};\n    for(var i=0;i<chars.length;i++){\n\
    \        var char = chars[i];\n        if(counts[char]){\n            counts[char]++;\n\
    \        }else{\n            counts[char] = 1;\n        }\n    }\n    return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).map(function(char){\n\
    \    return char;\n  }).sort().reduce(function(prev, curr){\n    return prev +\
    \ counts[curr];\n  }, 0);\n}\n", "  return string.split('').filter(function(character){\n\
    \    return character === character.toUpperCase() || character === character.toLowerCase();\n\
    \  }).length;\n}\n", "  var counts = {};\n  for(var i=0; i<string.length; i++){\n\
    \    var char = string.charAt(i);\n    if(counts[char]){\n      counts[char]++;\n\
    \    }else{\n      counts[char] = 1;\n    }\n  }\n  return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = (counts[char] || 0) + 1;\n  });\n  return Object.keys(counts).length;\n\
    }\n", "  var chars = string.split('');\n  var counts = {};\n  chars.forEach(function(char){\n\
    \    counts[char] = counts[char] ? counts[char] + 1 : 1;\n  });\n  return Object.keys(counts).reduce(function(prev,\
    \ curr){\n    return prev + counts[curr];\n  }, 0);\n}\n", "  var chars = string.split('');\n\
    \  var char_count = {};\n  for(var i=0;i<chars.length;i++){\n    if(char_count[chars[i]]\
    \ == undefined){\n      char_count[chars[i]] = 1;\n    }else{\n      char_count[chars[i]]++;\n\
    \    }\n  }\n  return Object.keys(char_count).length;\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = counts[char]\
    \ ? counts[char] + 1 : 1;\n  });\n  return counts;\n}\n", "  var chars = string.split('');\n\
    \  var distinct_chars = chars.filter(function(char){\n    return chars.indexOf(char)\
    \ === chars.lastIndexOf(char);\n  });\n  return distinct_chars.length;\n}\n",
  "  var hash = {}\n  var characters = string.split('')\n  characters.forEach(function(character){\n\
    \    hash[character.toLowerCase()] = hash[character.toLowerCase()] ? hash[character.toLowerCase()]+1\
    \ : 1;\n  })\n  return Object.keys(hash).length\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    for(var i=0;i<chars.length;i++){\n        var char\
    \ = chars[i];\n        counts[char] = counts[char] ? counts[char]+1 : 1;\n   \
    \ }\n    return counts;\n}\n", "    var chars = string.split('');\n    var counts\
    \ = {};\n    chars.forEach(function(char){\n        counts[char] = counts[char]\
    \ ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).reduce(function(prev,\
    \ curr){\n        return prev + counts[curr];\n    }, 0);\n}\n", "  var unique\
    \ = {}\n  for(var i = 0; i < string.length; i++){\n    if(unique[string[i]]){\n\
    \      unique[string[i]]++\n    }else{\n      unique[string[i]] = 1\n    }\n \
    \ }\n  return Object.keys(unique).length\n}\n", "  var chars = string.split('');\n\
    \  var counts = {};\n  chars.forEach(function(char){\n    counts[char] = (counts[char]\
    \ || 0) + 1;\n  });\n  return counts;\n}\n", "    var chars = string.split('');\n\
    \    var counts = {};\n    chars.forEach(function(char){\n        counts[char]\
    \ = counts[char] ? counts[char] + 1 : 1;\n    });\n    return Object.keys(counts).map(function(char){\n\
    \        return char;\n    }).reduce(function(prev, curr){\n        return prev\
    \ + counts[curr];\n    }, 0);\n}\n", "    var char_count = 0;\n    for(var i =\
    \ 0; i < string.length; i++){\n        var char = string.charAt(i);\n        if(char.match(/[a-z]/i)\
    \ && char.match(/[A-Z]/i)){\n            char_count++;\n        }\n    }\n   \
    \ return char_count;\n}\n", "  var chars = string.split('');\n  var counts = {};\n\
    \  chars.forEach(function(char){\n    counts[char] = (counts[char] || 0) + 1;\n\
    \  });\n  return Object.keys(counts).length;\n}\n", "  var chars = {};\n  string.split('').forEach(function(char){\n\
    \    chars[char] = chars[char] ? chars[char] + 1 : 1;\n  });\n  return Object.keys(chars).length;\n\
    }\n", "  return string.split('').filter((char,i)=>{\n    return string.indexOf(char,i+1)===i;\n\
    \  }).length;\n}\n", "    var chars = string.split('');\n    var counts = {};\n\
    \    chars.forEach(function(char){\n        counts[char] = (counts[char] || 0)\
    \ + 1;\n    });\n    return Object.keys(counts).length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

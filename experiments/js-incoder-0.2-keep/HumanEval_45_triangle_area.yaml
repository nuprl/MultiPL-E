name: HumanEval_45_triangle_area
language: js
prompt: "//Given length of a side and high return area for a triangle.\n// >>> triangle_area(5,\
  \ 3)\n// 7.5\nfunction triangle_area(a, h){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
  \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
completions: ["  return (a+h)*(a-h)\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "  return (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n", "  return (a * (h\
    \ / 2)) - ((a * h) / 2);\n}\n", "  return a * (h / 2);\n}\n", "  return (a * (h\
    \ / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n",
  "  return (a * (h - a)) / 2;\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return\
    \ (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "    return a * (h / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return\
    \ (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * 3) * (h\
    \ / 2));\n}\n", "  return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a *\
    \ h) / 2);\n}\n", "  return (a*h)/Math.sqrt(a*a+h*h);\n}\n", "  return (a * (h\
    \ / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h - a) * Math.sqrt(3)/2);\n}\n",
  "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return a * (h / 2);\n}\n", " \
    \ return (a * (h - 1));\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a\
    \ * (h / 2)) - ((a * h) / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return\
    \ (a*h)/Math.sqrt(a*a+h*h);\n}\n", "  return (a * (h / 2)) - ((a * 3) * (h / 2));\n\
    }\n", "    return Math.sqrt(a * a + h * h);\n}\n", "  return (a * (h / 2)) - ((a\
    \ * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return\
    \ (a * (h - a)) / 2;\n}\n", "  return (a+h)*(a-h)\n}\n", "  return (a * h) / Math.sqrt(3\
    \ * a * a);\n}\n", "  return (a * h) / Math.sqrt(3 * a * a * h);\n}\n", "  return\
    \ (a * (h - a)) / 2;\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a *\
    \ (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h - a))\
    \ / 2;\n}\n", "    return (a * (h - a) * Math.sqrt(3)) / 2;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\nI wrote this function to calculate the area of\
    \ a triangle given its sides and a point on the triangle:\n<code>", "  return\
    \ (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n", "  return (a * (h - a)) / 2;\n}\n",
  "  return (a * (h - a)) / 2;\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n",
  "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a *\
    \ h) / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a\
    \ * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "    return\
    \ a * (h / 2);\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n}", "    return\
    \ a * (h / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return (a * (h -\
    \ a) * Math.sqrt(3)) / 2;\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / (Math.pow(a,\
    \ 2) * Math.sqrt(3));\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", " \
    \ return a * (h / 2);\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return a *\
    \ (h / 2);\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n}\n", "  return\
    \ (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n", "  return (a * (h / 2)) - ((a *\
    \ h) / 2);\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n",
  "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a*h)/Math.sqrt(a*a+h*h);\n\
    }\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return a * (h / 2);\n\
    }\n", "    return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a * 3) * (h\
    \ / 2));\n}\n", "  return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a *\
    \ h) / 2);\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return\
    \ (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n", "  return (a*h)/Math.sqrt(a*a+h*h);\n\
    }\n", "  return a * (h / 2);\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n\
    }\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2))\
    \ - ((a * 3) * (h / 2));\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return\
    \ (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "    return Math.sqrt(a * a + h * a * h);\n}\n", "  return (a+h)*(a-h)\n\
    }\n", "  return (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n", "  return a * (h /\
    \ 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h\
    \ / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n",
  "  return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", " \
    \   return a * (h / 2);\n}\n", "    return (a * (h / 2)) - ((a * h) / 2);\n}\n",
  "  return (a * (h - a) * Math.sqrt(3)) / 2;\n}\n", "  return a * (h / 2);\n}\n",
  "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a*h)/Math.sqrt(a*a+h*h);\n\
    }\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h - a))\
    \ / 2;\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h\
    \ - a) * Math.sqrt(3)) / 2;\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n\
    }\n", "  return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "  return (a * (h - a)) / 2;\n}\n", "  return a * (h / 2);\n}\n", "  return\
    \ a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return\
    \ (a * (h - a) * Math.sqrt(3)) / 2;\n}\n", "  return (a * (h / 2)) - ((a * h)\
    \ / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a+h)*(a-h)\n\
    }\n", "  return (a*h)/Math.sqrt(a*a+h*h);\n}\n", "  return (a * (h / 2)) - ((a\
    \ * h) / 2);\n}\n", "  return (a+h)*(a-h)\n}\n", "  return a * (h / 2);\n}\n",
  "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a+h)*(a-h)\n}\n", " \
    \ return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h - a) * Math.sqrt(3))\
    \ / 2;\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "    return a *\
    \ (h / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return (a * (h / 2)) - ((a\
    \ * h) / 2);\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "  return (a * h) / Math.sqrt(3 * (Math.pow(a, 2) +\
    \ (h / 2) * Math.pow(a, 2)));\n}\n", "  return (a * (h / 2)) - ((a * 3) * (h /\
    \ 2));\n}\n", "  return (a+h)*(a-h)\n}\n", "  return (a * (h / 2)) - ((a * h)\
    \ / 2);\n}\n", "  return (a+h)*(a-h)\n}\n", "  return (a * (h / 2)) - ((a * h)\
    \ / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a *\
    \ (h - a)) / 2;\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return\
    \ (a * h) / Math.sqrt(3 * a * a * h);\n}\n", "  return (a * (h / 2)) - ((a * 3)\
    \ * (h / 2));\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return\
    \ (a * h) / Math.sqrt(3 * a * a);\n}\n", "    return a * (h / 2);\n}\n", "   \
    \ return (a * (h - a) * Math.sqrt(3)) / 2;\n}\n", "  return (a * h) / Math.sqrt(3\
    \ * a * a);\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n}", "    return\
    \ a * (h / 2);\n}\n", "    return a * (h / 2);\n}\n", "    return Math.sqrt(a\
    \ * a + h * h);\n}\n", "  return a * (h / 2);\n}\n", "  return a * (h / 2);\n\
    }\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return a * (h / 2);\n\
    }\n", "  return (a * (h - a) * Math.sqrt(3) / 2);\n}\n", "  return a * (h / 2);\n\
    }\n", "    return (a * h) / Math.sqrt(3 * a * a);\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "  return a * (h / 2);\n}\n", "  return (a * (h / 2))\
    \ - ((a * 3) * (h / 2));\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return\
    \ (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2))\
    \ - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return\
    \ (a * (h - a)) / 2;\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", " \
    \ return (a * (h / 2)) - ((a * 3) * (h / 2));\n}\n", "  return (a * (h - a)) /\
    \ 2;\n}\n", "  return (a * h) / Math.sqrt(3 * a * a);\n}\n", "  return (a * (h\
    \ - a)) / 2;\n}\n", "    return (a * (h - a)) / 2;\n}\n", "  return (a * (h /\
    \ 2)) - ((a * h) / 2);\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n}\n",
  "  return (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a+h)*(a-h)\n}\n", " \
    \ return (a * h) / Math.sqrt(3 * (Math.pow(a, 2) + (h / 2) * Math.pow(a, 2)));\n\
    }\n", "  return (a * h) / Math.sqrt(3 * a * a * h);\n}\n", "  return (a * (h -\
    \ a)) / 2;\n}\n", "  return (a * (h - a)) / 2;\n}\n", "  return (a * h) / Math.sqrt(3\
    \ * a * a);\n}\n", "  return (a * (h - a) * Math.sqrt(3)) / 2;\n}\n", "  return\
    \ (a * (h / 2)) - ((a * h) / 2);\n}\n", "  return (a * (h / 2)) - ((a * h) / 2);\n\
    }\n", "  return (a * (h - a) * Math.sqrt(3)/2);\n}\n", "  return (a * (h - a))\
    \ / 2;\n}\n", "  return (a+h)*(a+h+h)/2;\n}\n", "  return (a * (h / 2)) - ((a\
    \ * h) / 2);\n}\n", "    return (a * (h / 2)) - ((a * h) / 2);\n}\n", "    return\
    \ a * (h / 2);\n}\n", "    return a * (h / 2);\n}\n", "  return (a * h) / Math.sqrt(3\
    \ * (Math.pow(a, 2) + (h / 2) * Math.pow(a, 2)));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_148_bf
language: js
prompt: "//There are eight planets in our solar system: the closerst to the Sun \n\
  // is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n// Uranus,\
  \ Neptune.\n// Write a function that takes two planet names as strings planet1 and\
  \ planet2. \n// The function should return a tuple containing all planets whose\
  \ orbits are \n// located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n// the proximity to the sun. \n// The function should return an empty\
  \ tuple if planet1 or planet2\n// are not correct planet names. \n// Examples\n\
  // bf(\"Jupiter\", \"Neptune\") ==> (\"Saturn\", \"Uranus\")\n// bf(\"Earth\", \"\
  Mercury\") ==> (\"Venus\")\n// bf(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\"\
  , \"Mars\", \"Jupiter\", \"Saturn\")\nfunction bf(planet1, planet2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = bf;\n  assert.deepEqual(candidate(\"Jupiter\", \"Neptune\"),[\"Saturn\", \"\
  Uranus\"]);\n  assert.deepEqual(candidate(\"Earth\", \"Mercury\"),[\"Venus\"]);\n\
  \  assert.deepEqual(candidate(\"Mercury\", \"Uranus\"),[\"Venus\", \"Earth\", \"\
  Mars\", \"Jupiter\", \"Saturn\"]);\n  assert.deepEqual(candidate(\"Neptune\", \"\
  Venus\"),[\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"]);\n  assert.deepEqual(candidate(\"\
  Earth\", \"Earth\"),[]);\n  assert.deepEqual(candidate(\"Mars\", \"Earth\"),[]);\n\
  \  assert.deepEqual(candidate(\"Jupiter\", \"Makemake\"),[]);\n}\n\ntest();"
completions: ["  if(planet1 == \"Mercury\" || planet1 == \"Venus\" || planet1 == \"\
    Earth\" || planet1 == \"Mars\" || planet1 == \"Jupiter\" || planet1 == \"Saturn\"\
    \ || planet1 == \"Uranus\" || planet1 == \"Neptune\"){\n    if(planet2 == \"Mercury\"\
    \ || planet2 == \"Venus\" || planet2 == \"Earth\" || planet2 == \"Mars\" || planet2\
    \ == \"Jupiter\" || planet2 == \"Saturn\" || planet2 == \"Uranus\" || planet2\
    \ == \"Neptune\"){\n      return [planet1, planet2];\n    }\n  }\n  return [];\n\
    }\n", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitSun = planet1Orbit.orbit(sun);\n    let planet2OrbitSun =\
    \ planet2Orbit.orbit(sun);\n    let planet1OrbitSunAndPlanet2 = planet1OrbitSun.intersection(planet2OrbitSun);\n\
    \    let planet1OrbitSunAndPlanet1AndPlanet2 = planet1OrbitSun.intersection(planet2OrbitSun).intersection(planet1OrbitSunAndPlanet2);\n\
    \    let planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1 = planet1OrbitSun.intersection(planet2OrbitSun).intersection(planet1OrbitSunAndPlanet2).intersection(planet1OrbitSunAndPlanet1AndPlanet2);\n\
    \    let planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2 = planet1OrbitSun.intersection(planet2OrbitSun).intersection(planet1OrbitSunAndPlanet2).intersection(planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1);\n\
    \    let planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1 = planet1OrbitSun.intersection(planet2OrbitSun).intersection(planet1OrbitSunAndPlanet2).intersection(planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2);\n\
    \    let planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = planet1OrbitSun.intersection(planet2OrbitSun).intersection(planet1OrbitSunAndPlanet2).intersection(planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1);\n\
    \    let planet1OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1\
    \ = planet1OrbitSun.intersection(planet2OrbitSun).intersection(planet1OrbitSunAndPlanet2).intersection(planet1OrbitSunAnd",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n\
    \    var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \    var planet1OrbitSunAngle = planet1OrbitSun.angleTo(planet2OrbitSun);\n  \
    \  var planet2OrbitSunAngle = planet2OrbitSun.angleTo(planet1OrbitSun);\n    var\
    \ planet1OrbitSunDistanceAngle = planet1OrbitSunDistance.angleTo(planet2OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceAngle = planet2OrbitSunDistance.angleTo(planet1OrbitSunDistance);\n\
    \    var planet1OrbitSunAngleAngle = planet1OrbitSunAngle.angleTo(planet2OrbitSunAngle);\n\
    \    var planet2OrbitSunAngleAngle = planet2OrbitSunAngle.angleTo(planet1OrbitSunAngle);\n\
    \    var planet1OrbitSunDistanceAngleAngle = planet1OrbitSunDistanceAngle.angleTo(planet2OrbitSunDistanceAngle);\n\
    \    var planet2OrbitSunDistanceAngleAngle = planet2OrbitSunDistanceAngle.angleTo(planet1OrbitSunDistanceAngle);\n\
    \    var planet1OrbitSunAngleAngleAngle = planet1OrbitSunAngleAngle.angleTo(planet2OrbitSunAngleAngle);\n\
    \    var planet2OrbitSunAngleAngleAngle = planet2OrbitSunAngleAngle.angleTo(planet1OrbitSunAngleAngle);\n\
    \    var planet1OrbitSunDistanceAngleAngle = planet1OrbitSunDistanceAngleAngle.angleTo(planet2OrbitSunDistanceAngleAngle);\n\
    \    var planet2OrbitSunDistanceAngleAngle = planet2OrbitSunDistanceAngleAngle.angleTo(planet1OrbitSunDistanceAngleAngle);\n\
    \    var planet1OrbitSunAngleAngleAngle = planet1OrbitSunAngleAngleAngle.angleTo(planet2OrbitSunAngleAngle);\n\
    \    var planet", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit =\
    \ orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\tlet planet2OrbitSun\
    \ = orbit(planet2);\n\tlet planet", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit\
    \ = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun =\
    \ sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\t\
    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitPlanet2 =\
    \ orbit(planet1, planet2OrbitSun);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet1OrbitSun);\n\tlet planet1OrbitPlanet1Sun = orbit(planet1, planet1OrbitSun);\n\
    \tlet planet2OrbitPlanet1Sun = orbit(planet2, planet1OrbitSun);\n\tlet planet1OrbitPlanet2Sun\
    \ = orbit(planet1, planet2OrbitSun);\n\tlet planet2OrbitPlanet2Sun = orbit(planet2,\
    \ planet2OrbitSun);\n\tlet planet1OrbitPlanet1Planet2 = orbit(planet1, planet2OrbitPlanet2Sun);\n\
    \tlet planet2OrbitPlanet1Planet1 = orbit(planet2, planet1OrbitPlanet2Sun);\n\t\
    let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2OrbitPlanet1Sun);\n\tlet\
    \ planet2OrbitPlanet2Planet1 = orbit(planet2, planet1OrbitPlanet1Sun);\n\tlet\
    \ planet1OrbitPlanet1Planet1Sun = orbit(planet1, planet1OrbitPlanet1Sun);\n\t\
    let planet2OrbitPlanet1Planet1Sun = orbit(planet2, planet1OrbitPlanet1Sun);\n\t\
    let planet1OrbitPlanet2Planet1Sun = orbit(planet1, planet2OrbitPlanet1Sun);\n\t\
    let planet2OrbitPlanet2Planet1Sun = orbit(planet2, planet2OrbitPlanet1Sun);\n\t\
    let planet1OrbitPlanet1Planet2Sun = orbit(planet1, planet2OrbitPlanet1", "  let\
    \ planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let planet1OrbitSun\
    \ = planet1Orbit.orbit(sun)\n  let planet2OrbitSun = planet2Orbit.orbit(sun)\n\
    \  let planet1OrbitSunAndPlanet2 = planet1OrbitSun.intersection(planet2OrbitSun)\n\
    \  let planet1OrbitSunAndPlanet2Sorted = planet1OrbitSunAndPlanet2.sort((a, b)\
    \ => a.distanceToSun - b.distanceToSun)\n  let planet1OrbitSunAndPlanet2SortedByProximity\
    \ = planet1OrbitSunAndPlanet2Sorted.sort((a, b) => a.distanceToSun - b.distanceToSun)\n\
    \  let planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2 = planet1OrbitSunAndPlanet2SortedByProximity.sort((a,\
    \ b) => a.planet2.distanceToSun - b.planet2.distanceToSun)\n  let planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2Sorted\
    \ = planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2.sort((a, b) => a.planet1.distanceToSun\
    \ - b.planet1.distanceToSun)\n  let planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2SortedByPlanet1\
    \ = planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2SortedByPlanet1.sort((a,\
    \ b) => a.planet1.distanceToSun - b.planet1.distanceToSun)\n  let planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2SortedByPlanet1Sorted\
    \ = planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2SortedByPlanet1Sorted.sort((a,\
    \ b) => a.planet2.distanceToSun - b.planet2.distanceToSun)\n  let planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2SortedByPlanet1SortedByPlanet2\
    \ = planet1OrbitSunAndPlanet2SortedByProximityAndPlanet2SortedByPlanet1SortedByPlanet2.sort((a,\
    \ b) => a.planet1.distanceToSun - b.planet1.distance", "    let planet1Orbit =\
    \ orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit);\n    let planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet2OrbitSunOrbit);\n    let planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit);\n\
    \    let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit);\n    let planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit,\
    \ planet1OrbitSunOrbitOrbitOrbit);\n    let planet2OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit,\
    \ planet2OrbitSunOrbitOrbitOrbit);\n    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit, planet1Or",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sun(planet1)\n    let planet2Sun = sun(planet2)\n    let\
    \ planet1OrbitSun = orbit(planet1, planet1Sun)\n    let planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun)\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n    let\
    \ planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun, planet2Sun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun, planet1Sun, planet1OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbitOrbit =\
    \ orbit(planet2, planet2Sun, planet1Sun, planet1OrbitSun, planet2OrbitSun)\n \
    \   let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n    let planet2OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n    let\
    \ planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet1OrbitSun, planet2OrbitSun, plan", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun(planet1);\n\
    \    let planet2Sun = sun(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun);\n    let\
    \ planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, ", "  let planet1 = planet1.toLowerCase();\n  let planet2 = planet2.toLowerCase();\n\
    \  let planet1orbit = orbits[planet1];\n  let planet2orbit = orbits[planet2];\n\
    \  let planet1sun = sun;\n  let planet2sun = sun;\n  let planet1orbitsun = orbits[planet1sun];\n\
    \  let planet2orbitsun = orbits[planet2sun];\n  let planet1orbitsundistance =\
    \ planet1orbitsun.distanceTo(planet1orbit);\n  let planet2orbitsundistance = planet2orbitsun.distanceTo(planet2orbit);\n\
    \  let planet1orbitsundistance2 = planet1orbitsun.distanceTo(planet1orbitsun);\n\
    \  let planet2orbitsundistance2 = planet2orbitsun.distanceTo(planet2orbitsun);\n\
    \  let planet1orbitsundistance3 = planet1orbitsun.distanceTo(planet1orbitsundistance2);\n\
    \  let planet2orbitsundistance3 = planet2orbitsun.distanceTo(planet2orbitsundistance2);\n\
    \  let planet1orbitsundistance4 = planet1orbitsun.distanceTo(planet1orbitsundistance3);\n\
    \  let planet2orbitsundistance4 = planet2orbitsun.distanceTo(planet2orbitsundistance3);\n\
    \  let planet1orbitsundistance5 = planet1orbitsun.distanceTo(planet1orbitsundistance4);\n\
    \  let planet2orbitsundistance5 = planet2orbitsun.distanceTo(planet2orbitsundistance4);\n\
    \  let planet1orbitsundistance6 = planet1orbitsun.distanceTo(planet1orbitsundistance5);\n\
    \  let planet2orbitsundistance6 = planet2orbitsun.distanceTo(planet2orbitsundistance5);\n\
    \  let planet1orbitsundistance7 = planet1orbitsun.distanceTo(planet1orbitsundistance6);\n\
    \  let planet2orbitsundistance7 = planet2orbitsun.distanceTo(planet2orbitsundistance6);\n\
    \  let planet1orbitsundistance8 = planet1orbitsun.distanceTo(planet1orbitsundistance7);\n\
    \  let planet2orbitsundistance8 = planet2orbitsun.distanceTo(planet2orbitsundistance7);\n\
    \  let planet1orbitsundistance9 = planet1orbitsun.distanceTo(planet1orbitsundistance8);\n\
    \  let planet2orbitsundistance9 = planet2orbitsun.distanceTo(planet2orbitsundistance8);\n\
    \  let planet1orbitsundistance10 = planet1orbitsun.distanceTo(plan", "    let\
    \ planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n   \
    \ let planet1Sun = sun(planet1Orbit);\n    let planet2Sun = sun(planet2Orbit);\n\
    \    let planet1SunDistance = distance(planet1Sun, planet1Orbit);\n    let planet2SunDistance\
    \ = distance(planet2Sun, planet2Orbit);\n    let planet1OrbitDistance = distance(planet1Orbit,\
    \ planet1Sun);\n    let planet2OrbitDistance = distance(planet2Orbit, planet2Sun);\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1SunDistanceSquared = planet1SunDistance * planet1SunDistance;\n\
    \    let planet2SunDistanceSquared = planet2SunDistance * planet2SunDistance;\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2Or", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit\
    \ = orbit(planet2);\n    var planet1Sun = sun(planet1Orbit);\n    var planet2Sun\
    \ = sun(planet2Orbit);\n    var planet1OrbitSun = orbit(planet1Orbit);\n    var\
    \ planet2OrbitSun = orbit(planet2Orbit);\n    var planet1SunOrbitSun = orbit(planet1Sun);\n\
    \    var planet2SunOrbitSun = orbit(planet2Sun);\n    var planet1OrbitSunOrbitSun\
    \ = orbit(planet1OrbitSun);\n    var planet2OrbitSunOrbitSun = orbit(planet2OrbitSun);\n\
    \    var planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSun);\n \
    \   var planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSun);\n  \
    \  var planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \    var planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \    var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun",
  "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var\
    \ planet1Sun = sun(planet1Orbit);\n  var planet2Sun = sun(planet2Orbit);\n  var\
    \ planet1OrbitSun = orbit(planet1Orbit);\n  var planet2OrbitSun = orbit(planet2Orbit);\n\
    \  var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n  var\
    \ planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n  var planet1OrbitSunDistanceSorted\
    \ = sortByDistance(planet1OrbitSunDistance);\n  var planet2OrbitSunDistanceSorted\
    \ = sortByDistance(planet2OrbitSunDistance);\n  var planet1OrbitSunDistanceSorted2\
    \ = sortByDistance(planet1OrbitSunDistanceSorted);\n  var planet2OrbitSunDistanceSorted2\
    \ = sortByDistance(planet2OrbitSunDistanceSorted);\n  var planet1OrbitSunDistanceSorted3\
    \ = sortByDistance(planet1OrbitSunDistanceSorted2);\n  var planet2OrbitSunDistanceSorted3\
    \ = sortByDistance(planet2OrbitSunDistanceSorted2);\n  var planet1OrbitSunDistanceSorted4\
    \ = sortByDistance(planet1OrbitSunDistanceSorted3);\n  var planet2OrbitSunDistanceSorted4\
    \ = sortByDistance(planet2OrbitSunDistanceSorted3);\n  var planet1OrbitSunDistanceSorted5\
    \ = sortByDistance(planet1OrbitSunDistanceSorted4);\n  var planet2OrbitSunDistanceSorted5\
    \ = sortByDistance(planet2OrbitSunDistanceSorted4);\n  var planet1OrbitSunDistanceSorted6\
    \ = sortByDistance(planet1OrbitSunDistanceSorted5);\n  var planet2OrbitSunDistanceSorted6\
    \ = sortByDistance(planet2OrbitSunDistanceSorted5);\n  var planet1OrbitSunDistanceSorted7\
    \ = sortByDistance(planet1OrbitSunDistanceSorted6);\n  var planet2OrbitSunDistanceSorted7\
    \ = sortByDistance(planet2OrbitSunDistanceSorted6);\n  var planet1OrbitSunDistanceSorted8\
    \ = sortByDistance(planet1OrbitSunDistanceSorted7);\n  var planet2OrbitSunDistanceSorted8\
    \ = sortByDistance(planet", "    let planet1 = planet1.toLowerCase();\n    let\
    \ planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1orbits[planet1];\n\
    \    let planet2orbit = planet2orbits[planet2];\n    let planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    let planet2orbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet1);\n    let planet2OrbitIndex = planet2Orbit.indexOf(planet2);\n\
    \    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n    let planet2OrbitDistance\
    \ = planet2Orbit[planet2OrbitIndex];\n    let planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    let planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared\
    \ * planet1OrbitDistanceSquared;\n    let planet2OrbitDistanceSquaredSquared =\
    \ planet2OrbitDistanceSquared * planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredSquared - planet2OrbitDistanceSquaredSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared;\n\
    \    let plan", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n\
    \  var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n  var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \  var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  var planet1Orbit", "    let\
    \ planet1Orbit = planet1Orbit(planet1);\n    let planet2Orbit = planet2Orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1OrbitIndex(planet1);\n    let planet2OrbitIndex\
    \ = planet2OrbitIndex(planet2);\n    let planet1OrbitDistance = planet1OrbitDistance(planet1,\
    \ planet2);\n    let planet2OrbitDistance = planet2OrbitDistance(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1, planet2);\n\
    \    let planet1", "    let planet1Orbit = planet1Orbit(planet1);\n    let planet2Orbit\
    \ = planet2Orbit(planet2);\n    let planet1OrbitIndex = planet1OrbitIndex(planet1);\n\
    \    let planet2OrbitIndex = planet2OrbitIndex(planet2);\n    let planet1OrbitDistance\
    \ = planet1OrbitDistance(planet1, planet2);\n    let planet2OrbitDistance = planet2OrbitDistance(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1OrbitDistanceIndex = planet1OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet2OrbitDistanceIndex = planet2OrbitDistanceIndex(planet1,\
    \ planet2);\n    let planet1", "    var planet1Orbit = orbit(planet1);\n    var\
    \ planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit\
    \ = orbit(planet2);\n\tlet planet1Sun = sun(planet1);\n\tlet planet2Sun = sun(planet2);\n\
    \tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun);\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit\
    \ = orbit(planet2)\n\tlet planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\
    \tlet planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun)\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2Orbit", "    var planet1Orbit\
    \ = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance\
    \ = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1Orbit", "  if(planet1 == \"Mercury\"\
    \ || planet1 == \"Venus\" || planet1 == \"Earth\" || planet1 == \"Mars\" || planet1\
    \ == \"Jupiter\" || planet1 == \"Saturn\" || planet1 == \"Uranus\" || planet1\
    \ == \"Neptune\"){\n    if(planet2 == \"Mercury\" || planet2 == \"Venus\" || planet2\
    \ == \"Earth\" || planet2 == \"Mars\" || planet2 == \"Jupiter\" || planet2 ==\
    \ \"Saturn\" || planet2 == \"Uranus\" || planet2 == \"Neptune\"){\n      return\
    \ [planet1, planet2];\n    }\n  }\n  return [];\n}\n", "\tlet planet1Orbit = orbit(planet1)\n\
    \tlet planet2Orbit = orbit(planet2)\n\tlet planet1Sun = sun(planet1)\n\tlet planet2Sun\
    \ = sun(planet2)\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun\
    \ = orbit(planet2, planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun,\
    \ planet2Sun)\n\tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n\
    \tlet planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun, planet", "  let planet1Orbit = orbit(planet1)\n\
    \  let planet2Orbit = orbit(planet2)\n  let planet1OrbitSun = planet1Orbit.sun\n\
    \  let planet2OrbitSun = planet2Orbit.sun\n  let planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun)\n\
    \  let planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun)\n\
    \  let planet1OrbitSunAngle = planet1OrbitSun.angleTo(planet2OrbitSun)\n  let\
    \ planet2OrbitSunAngle = planet2OrbitSun.angleTo(planet1OrbitSun)\n  let planet1OrbitSunDistanceAngle\
    \ = planet1OrbitSunDistance.angleTo(planet2OrbitSunDistance)\n  let planet2OrbitSunDistanceAngle\
    \ = planet2OrbitSunDistance.angleTo(planet1OrbitSunDistance)\n  let planet1OrbitSunAngleAngle\
    \ = planet1OrbitSunAngle.angleTo(planet2OrbitSunAngle)\n  let planet2OrbitSunAngleAngle\
    \ = planet2OrbitSunAngle.angleTo(planet1OrbitSunAngle)\n  let planet1OrbitSunDistanceAngleAngle\
    \ = planet1OrbitSunDistanceAngle.angleTo(planet2OrbitSunDistanceAngle)\n  let\
    \ planet2OrbitSunDistanceAngleAngle = planet2OrbitSunDistanceAngle.angleTo(planet1OrbitSunDistanceAngle)\n\
    \  let planet1OrbitSunAngleAngleAngle = planet1OrbitSunAngleAngle.angleTo(planet2OrbitSunAngleAngle)\n\
    \  let planet2OrbitSunAngleAngleAngle = planet2OrbitSunAngleAngle.angleTo(planet1OrbitSunAngleAngle)\n\
    \  let planet1OrbitSunDistanceAngleAngleAngle = planet1OrbitSunDistanceAngleAngle.angleTo(planet2OrbitSunDistanceAngleAngle)\n\
    \  let planet2OrbitSunDistanceAngleAngleAngle = planet2OrbitSunDistanceAngleAngle.angleTo(planet1OrbitSunDistanceAngleAngle)\n\
    \  let planet1OrbitSunAngleAngleAngleAngle = planet1OrbitSunAngleAngleAngle.angleTo(planet2OrbitSunAngleAngleAngle)\n\
    \  let ", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n\
    \    var planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared", "    var planets = planet1.concat(planet2);\n\
    \    var sun = findSun();\n    var orbits = planets.map(function(planet){\n  \
    \      var planetOrbits = findPlanetOrbits(planet, sun);\n        return planetOrbits;\n\
    \    });\n    orbits = orbits.reduce(function(acc, orbit){\n        return acc.concat(orbit);\n\
    \    }, []);\n    orbits = orbits.sort(function(a, b){\n        var distA = a.distance\
    \ - sun.distance;\n        var distB = b.distance - sun.distance;\n        return\
    \ distA < distB ? -1 : distA > distB ? 1 : 0;\n    });\n    return orbits;\n}\n",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sun(planet1Orbit)\n    let planet2Sun = sun(planet2Orbit)\n\
    \    let planet1OrbitSun = orbit(planet1Orbit)\n    let planet2OrbitSun = orbit(planet2Orbit)\n\
    \    let planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Sun)\n   \
    \ let planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Sun)\n    let\
    \ planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquaredSquared = planet1OrbitSunDistanceSquared\
    \ * planet1OrbitSunDistanceSquared\n    let planet2OrbitSunDistanceSquaredSquared\
    \ = planet2OrbitSunDistanceSquared * planet2OrbitSunDistanceSquared\n    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquared - planet2OrbitSunDistanceSquared\n    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredSquared - planet2OrbitSunDistanceSquaredSquared\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredMinusPlanet1OrbitSunDistanceSquaredSquared\
    \ = planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquared - planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSunDistanceSquaredSquared\n\
    \    let planet1OrbitSunDistanceSquaredMinusPlanet2OrbitSun", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, true);\n    let planet2OrbitSun = orbit(planet2, true);\n \
    \   let planet1OrbitSunAndPlanet2 = orbit(planet1, true).filter(planet => planet\
    \ === planet2);\n    let planet2OrbitSunAndPlanet1 = orbit(planet2, true).filter(planet\
    \ => planet === planet1);\n    let planet1OrbitSunAndPlanet2AndPlanet1 = orbit(planet1,\
    \ true).filter(planet => planet === planet2).filter(planet => planet === planet1);\n\
    \    let planet2OrbitSunAndPlanet1AndPlanet2 = orbit(planet2, true).filter(planet\
    \ => planet === planet1).filter(planet => planet === planet2);\n    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, true).filter(planet => planet === planet2).filter(planet =>\
    \ planet === planet1).filter(planet => planet === planet2);\n    let planet2OrbitSunAndPlanet1AndPlanet2AndPlanet1\
    \ = orbit(planet2, true).filter(planet => planet === planet1).filter(planet =>\
    \ planet === planet2).filter(planet => planet === planet1);\n    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1\
    \ = orbit(planet1, true).filter(planet => planet === planet2).filter(planet =>\
    \ planet === planet1).filter(planet => planet === planet2).filter(planet => planet\
    \ === planet1);\n    let planet2OrbitSunAndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet2, true).filter(planet => planet === planet1).filter(planet =>\
    \ planet === planet2).filter(planet => planet === planet1).filter(planet => planet\
    \ === planet2);\n    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, true).filter(planet => planet === planet2).filter(planet =>\
    \ planet === planet1).filter(plan", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitLength\
    \ = planet1Orbit.length;\n    let planet2OrbitLength = planet2Orbit.length;\n\
    \    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n    let planet2OrbitDistance\
    \ = planet2Orbit[planet2OrbitIndex];\n    let planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    let planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistance - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistance - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistance - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistance - planet2OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared - planet1OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSqu",
  "    var planet1 = planet1.toLowerCase();\n    var planet2 = planet2.toLowerCase();\n\
    \    var planet1orbit = planet1orbits[planet1];\n    var planet2orbit = planet2orbits[planet2];\n\
    \    var planet1orbitorbit = planet1orbitorbits[planet1];\n    var planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sun(planet1);\n\tlet planet2Sun = sun(planet2);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitPlanet2\
    \ = orbit(planet1, planet2OrbitSun);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet1OrbitSun);\n\tlet planet1OrbitPlanet1 = orbit(planet1, planet1OrbitSun);\n\
    \tlet planet2OrbitPlanet2 = orbit(planet2, planet2OrbitSun);\n\tlet planet1OrbitPlanet1\
    \ = orbit(planet1, planet1OrbitSun);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet2OrbitSun);\n\tlet planet1OrbitPlanet2 = orbit(planet1, planet2OrbitSun);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet1OrbitSun);\n\tlet planet1OrbitPlanet1\
    \ = orbit(planet1, planet1OrbitSun);\n\tlet planet2OrbitPlanet2 = orbit(planet2,\
    \ planet2OrbitSun);\n\tlet planet1OrbitPlanet1 = orbit(planet1, planet1OrbitSun);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet2OrbitSun);\n\tlet planet1OrbitPlanet2\
    \ = orbit(planet1, planet2OrbitSun);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet1OrbitSun);\n\tlet planet1OrbitPlanet1 = orbit(planet1, planet1OrbitSun);\n\
    \tlet planet2OrbitPlanet2 = orbit(planet2, planet2OrbitSun);\n\tlet planet1OrbitPlanet1\
    \ = orbit(planet1, planet1OrbitSun);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet2OrbitSun);\n\tlet planet", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1orbits[planet1];\n\
    \    let planet2orbit = planet2orbits[planet2];\n    let planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    let planet2orbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "    let planet1Orbit\
    \ = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n    let planet1OrbitSun\
    \ = planet1Orbit.sun\n    let planet2OrbitSun = planet2Orbit.sun\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun)\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun)\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1Orbit", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1.split(\"\
    _\");\n    let planet2orbit = planet2.split(\"_\");\n    let planet1orbit1 = planet1orbit[0];\n\
    \    let planet1orbit2 = planet1orbit[1];\n    let planet2orbit1 = planet2orbit[0];\n\
    \    let planet2orbit2 = planet2orbit[1];\n    let planet1orbit1orbit = planet1orbit1.split(\"\
    -\");\n    let planet1orbit2orbit = planet1orbit2.split(\"-\");\n    let planet2orbit1orbit\
    \ = planet2orbit1.split(\"-\");\n    let planet2orbit2orbit = planet2orbit2.split(\"\
    -\");\n    let planet1orbit1orbit1 = planet1orbit1orbit[0];\n    let planet1orbit1orbit2\
    \ = planet1orbit1orbit[1];\n    let planet1orbit2orbit1 = planet1orbit2orbit[0];\n\
    \    let planet1orbit2orbit2 = planet1orbit2orbit[1];\n    let planet2orbit1orbit1\
    \ = planet2orbit1orbit[0];\n    let planet2orbit1orbit2 = planet2orbit1orbit[1];\n\
    \    let planet2orbit2orbit1 = planet2orbit2orbit[0];\n    let planet2orbit2orbit2\
    \ = planet2orbit2orbit[1];\n    let planet1orbit1orbit1orbit = planet1orbit1orbit1.split(\"\
    :\");\n    let planet1orbit1orbit2orbit = planet1orbit1orbit2.split(\":\");\n\
    \    let planet1orbit2orbit1orbit = planet1orbit2orbit1.split(\":\");\n    let\
    \ planet1orbit2orbit2orbit = planet1orbit2orbit2.split(\":\");\n    let planet2orbit1orbit1orbit\
    \ = planet2orbit1orbit1.split(\":\");\n    let planet2orbit1orbit2orbit = planet2orbit1orbit2.split(\"\
    :\");\n    let planet2orbit2orbit1orbit = planet2orbit2orbit1.split(\":\");\n\
    \    let planet2orbit2orbit2orbit = planet2orbit2orbit2.split(\":\");\n    let\
    \ planet1orbit1orbit1orbit1 = planet1orbit1orbit1[0];\n    let planet1orbit1orbit1orbit2\
    \ = planet1orbit1orbit1[1];\n    let planet1orbit1orbit2orbit1 = planet1orbit1orbit2orbit",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\t\
    let planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun);\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2Orbit", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun\
    \ = sunOrbit(planet2);\n    let planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1Orbit = planet1Orbit(planet1);\n\
    \    let planet2Orbit = planet2Orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit.slice(planet1OrbitIndex).length;\n    let planet2OrbitDistance\
    \ = planet2Orbit.slice(planet2OrbitIndex).length;\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1Orbit.indexOf(\"sun\");\n    let planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2Orbit.indexOf(\"sun\");\n    let planet1OrbitDistanceToSunOrbit1\
    \ = planet1OrbitDistanceToSun / planet1Orbit.length;\n    let planet2OrbitDistanceToSunOrbit2\
    \ = planet2OrbitDistanceToSun / planet2Orbit.length;\n    let planet1OrbitDistanceToSunOrbit1Orbit2\
    \ = planet1OrbitDistanceToSunOrbit1 + planet2OrbitDistanceToSunOrbit2;\n    let\
    \ planet1OrbitDistanceToSunOrbit1Orbit2Orbit1 = planet1OrbitDistanceToSunOrbit1Orbit2\
    \ * planet1Orbit.length;\n    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2\
    \ = planet1OrbitDistanceToSunOrbit1Orbit2Orbit1 * planet1Orbit.length;\n    let\
    \ planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1 = planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2\
    \ * planet1Orbit.length;\n    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1Orbit2\
    \ = planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1 * planet1Orbit.length;\n\
    \    let planet1OrbitDistanceToSunOrbit1Orbit2Orbit1Orbit2Orbit1Orbit2Orbit1 =\
    \ planet1Or", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit =\
    \ orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n    let planet2OrbitSun\
    \ = planet2Orbit.sun;\n    let planet1OrbitSunDistance = planet1OrbitSun.distance(planet2OrbitSun);\n\
    \    let planet2OrbitSunDistance = planet2OrbitSun.distance(planet1OrbitSun);\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    let planet1OrbitSunDistanceSquared", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistance\
    \ - planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinus", " \
    \ let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let\
    \ planet1Sun = sun(planet1)\n  let planet2Sun = sun(planet2)\n  let planet1SunOrbit\
    \ = orbit(planet1Sun)\n  let planet2SunOrbit = orbit(planet2Sun)\n  let planet1SunSun\
    \ = sun(planet1Sun)\n  let planet2SunSun = sun(planet2Sun)\n  let planet1SunSunOrbit\
    \ = orbit(planet1SunSun)\n  let planet2SunSunOrbit = orbit(planet2SunSun)\n  let\
    \ planet1SunSunSun = sun(planet1SunSun)\n  let planet2SunSunSun = sun(planet2SunSun)\n\
    \  let planet1SunSunSunOrbit = orbit(planet1SunSunSun)\n  let planet2SunSunSunOrbit\
    \ = orbit(planet2SunSunSun)\n  let planet1SunSunSunSun = sun(planet1SunSunSun)\n\
    \  let planet2SunSunSunSun = sun(planet2SunSunSun)\n  let planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun)\n  let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \  let planet1SunSunSunSunSun = sun(planet1SunSunSunSun)\n  let planet2SunSunSunSun\
    \ = sun(planet2SunSunSunSun)\n  let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun)\n\
    \  let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n  let planet1SunSunSunSunSun\
    \ = sun(planet1SunSunSunSun)\n  let planet2SunSunSunSun = sun(planet2SunSunSunSun)\n\
    \  let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSunSun)\n  let planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n  let planet1SunSunSunSunSun = sun(planet1SunSunSunSunSun)\n\
    \  let planet2SunSunSunSun = sun(planet2Sun", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1);\n\
    \tlet planet2OrbitSun = orbit(planet2);\n\tlet planet", "\tlet planet1Orbit =\
    \ orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \tlet planet1OrbitLength = planet1Orbit.length;\n\tlet planet2OrbitLength = planet2Orbit.length;\n\
    \tlet planet1OrbitDistance = planet1OrbitIndex - planet2OrbitIndex;\n\tlet planet2OrbitDistance\
    \ = planet2OrbitIndex - planet1OrbitIndex;\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2Or", "  if(planet1 === planet2){\n    return [];\n  }\n  if(planet1\
    \ === \"Sun\"){\n    return [planet2];\n  }\n  if(planet2 === \"Sun\"){\n    return\
    \ [planet1];\n  }\n  if(planet1 === \"Mercury\"){\n    if(planet2 === \"Venus\"\
    ){\n      return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"\
    Neptune\"];\n    }\n    if(planet2 === \"Earth\"){\n      return [\"Venus\"];\n\
    \    }\n    if(planet2 === \"Mars\"){\n      return [\"Jupiter\", \"Saturn\",\
    \ \"Uranus\", \"Neptune\"];\n    }\n    if(planet2 === \"Jupiter\"){\n      return\
    \ [\"Saturn\", \"Uranus\", \"Neptune\"];\n    }\n    if(planet2 === \"Saturn\"\
    ){\n      return [\"Uranus\", \"Neptune\"];\n    }\n    if(planet2 === \"Uranus\"\
    ){\n      return [\"Neptune\"];\n    }\n    if(planet2 === \"Neptune\"){\n   \
    \   return [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\"];\n    }\n  }\n  if(planet1 === \"Venus\"){\n    if(planet2 === \"\
    Earth\"){\n      return [\"Mercury\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"];\n    }\n    if(planet2 === \"Mars\"){\n      return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\"];\n    }\n    if(planet2 === \"Jupiter\"\
    ){\n      return [\"Saturn\", \"Uranus\", \"Neptune\"];\n    }\n    if(planet2\
    \ === \"Saturn\"){\n      return [\"Uranus\", \"Neptune\"];\n    }\n    if(planet2\
    \ === \"Uranus\"){\n      return [\"Neptune\"];\n    }\n    if(planet2 === \"\
    Neptune\"){\n      return [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n    }\n  }\n  if(planet1 === \"Earth\"){\n    if(planet2\
    \ === \"Mercury\"){\n      return [\"Mercury\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\", \"Neptune\"];\n    }\n    if(planet2 === \"Mars\"){\n      return\
    \ [\"Jupiter\", \"Saturn\", \"Uranus", "  if(planet1 === \"Mercury\" || planet1\
    \ === \"Venus\" || planet1 === \"Earth\" || planet1 === \"Mars\" || planet1 ===\
    \ \"Jupiter\" || planet1 === \"Saturn\" || planet1 === \"Uranus\" || planet1 ===\
    \ \"Neptune\"){\n    if(planet2 === \"Mercury\" || planet2 === \"Venus\" || planet2\
    \ === \"Earth\" || planet2 === \"Mars\" || planet2 === \"Jupiter\" || planet2\
    \ === \"Saturn\" || planet2 === \"Uranus\" || planet2 === \"Neptune\"){\n    \
    \  return [planet1, planet2];\n    }\n  }\n  return [];\n}\n", "  var planet1Orbit\
    \ = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var planet1OrbitDistance\
    \ = distance(planet1Orbit);\n  var planet2OrbitDistance = distance(planet2Orbit);\n\
    \  var planet1OrbitDistanceToSun = planet1OrbitDistance - sunDistance;\n  var\
    \ planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance;\n  var planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet2OrbitDistanceToSunAndPlanet1\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet2OrbitDistanceToSunAndPlanet1\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet2OrbitDistanceToSunAndPlanet1\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet1\
    \ = planet1OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet2OrbitDistanceToSunAndPlanet1\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n  var planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistance", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1.includes(\"\
    mercury\") || planet1.includes(\"venus\") || planet1.includes(\"earth\") || planet1.includes(\"\
    mars\") || planet1.includes(\"jupiter\") || planet1.includes(\"saturn\") || planet1.includes(\"\
    uranus\") || planet1.includes(\"neptune\");\n    let planet2orbit = planet2.includes(\"\
    mercury\") || planet2.includes(\"venus\") || planet2.includes(\"earth\") || planet2.includes(\"\
    mars\") || planet2.includes(\"jupiter\") || planet2.includes(\"saturn\") || planet2.includes(\"\
    uranus\") || planet2.includes(\"neptune\");\n    let planet1orbitorbit = planet1orbit\
    \ && planet2orbit;\n    let planet1orbitorbit = planet1orbit || planet2orbit;\n\
    \    let planet1orbitorbit = planet1orbit || planet2orbit;\n    let planet1orbitorbit\
    \ = planet1orbit || planet2orbit;\n    let planet1orbitorbit = planet1orbit ||\
    \ planet2orbit;\n    let planet1orbitorbit = planet1orbit || planet2orbit;\n \
    \   let planet1orbitorbit = planet1orbit || planet2orbit;\n    let planet1orbitorbit\
    \ = planet1orbit || planet2orbit;\n    let planet1orbitorbit = planet1orbit ||\
    \ planet2orbit;\n    let planet1orbitorbit = planet1orbit || planet2orbit;\n \
    \   let planet1orbitorbit = planet1orbit || planet2orbit;\n    let planet1orbitorbit\
    \ = planet1orbit || planet2orbit;\n    let planet1orbitorbit = planet1orbit ||\
    \ planet2orbit;\n    let planet1orbitorbit = planet1orbit || planet2orbit;\n \
    \   let planet1orbitorbit = planet1orbit || planet2orbit;\n    let planet1orbitorbit\
    \ = planet1orbit || planet2orbit;\n    let planet1orbitorbit = planet1orbit ||\
    \ planet2orbit;\n    let planet1orbitorbit = ", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n\tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \tlet planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \tlet planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistance\
    \ - planet2OrbitDistance;\n\tlet planet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet2OrbitDistance - planet1OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet2OrbitDistanceSquared - planet1OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet2OrbitDistanceSquaredMinusPlanet1OrbitDistance - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlan",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitIndex = planet1Orbit.indexOf(planet1);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet2);\n\tlet planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).sort((a,b)\
    \ => a-b);\n\tlet planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).sort((a,b)\
    \ => a-b);\n\tlet planet1OrbitDistanceIndex = planet1OrbitDistance.indexOf(planet1);\n\
    \tlet planet2OrbitDistanceIndex = planet2OrbitDistance.indexOf(planet2);\n\tlet\
    \ planet1OrbitDistanceDistance = planet1OrbitDistance.slice(planet1OrbitDistanceIndex).sort((a,b)\
    \ => a-b);\n\tlet planet2OrbitDistanceDistance = planet2OrbitDistance.slice(planet2OrbitDistanceIndex).sort((a,b)\
    \ => a-b);\n\tlet planet1OrbitDistanceDistanceIndex = planet1OrbitDistanceDistance.indexOf(planet1);\n\
    \tlet planet2OrbitDistanceDistanceIndex = planet2OrbitDistanceDistance.indexOf(planet2);\n\
    \tlet planet1OrbitDistanceDistanceDistance = planet1OrbitDistanceDistance.slice(planet1OrbitDistanceDistanceIndex).sort((a,b)\
    \ => a-b);\n\tlet planet2OrbitDistanceDistanceDistance = planet2OrbitDistanceDistance.slice(planet2OrbitDistanceDistanceIndex).sort((a,b)\
    \ => a-b);\n\tlet planet1OrbitDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistance.indexOf(planet1);\n\
    \tlet planet2OrbitDistanceDistanceDistanceIndex = planet2OrbitDistanceDistance.indexOf(planet2);\n\
    \tlet planet1OrbitDistanceDistanceDistanceDistance = planet1OrbitDistanceDistanceDistance.slice(planet1OrbitDistanceDistanceDistanceIndex).sort((a,b)\
    \ => a-b);\n\tlet planet2OrbitDistanceDistanceDistanceDistance = planet2OrbitDistanceDistanceDistance.slice(planet2OrbitDistanceDistanceDistanceIndex).sort((a,b)\
    \ => a-b);\n\tlet planet1OrbitDistanceDistanceDistanceDistanceIndex = planet1OrbitDistanceDistanceDistanceDistance.indexOf(planet",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet1);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet2);\n    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    let planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    let planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredSquared\
    \ = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared;\n    let planet2OrbitDistanceSquaredSquared\
    \ = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1Or",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1Sun = sunOrbit(planet1);\n    var planet2Sun = sunOrbit(planet2);\n\
    \    var planet1OrbitSun = planet1Orbit.filter(function(planet){\n        return\
    \ planet === planet1Sun;\n    });\n    var planet2OrbitSun = planet2Orbit.filter(function(planet){\n\
    \        return planet === planet2Sun;\n    });\n    var planet1OrbitSunSorted\
    \ = planet1OrbitSun.sort(function(a, b){\n        return distance(a, b);\n   \
    \ });\n    var planet2OrbitSunSorted = planet2OrbitSun.sort(function(a, b){\n\
    \        return distance(a, b);\n    });\n    var planet1OrbitSunSortedSorted\
    \ = planet1OrbitSunSorted.sort(function(a, b){\n        return distance(a, b);\n\
    \    });\n    var planet2OrbitSunSortedSorted = planet2OrbitSunSorted.sort(function(a,\
    \ b){\n        return distance(a, b);\n    });\n    var planet1OrbitSunSortedSortedSorted\
    \ = planet1OrbitSunSortedSorted.sort(function(a, b){\n        return distance(a,\
    \ b);\n    });\n    var planet2OrbitSunSortedSortedSorted = planet2OrbitSunSortedSorted.sort(function(a,\
    \ b){\n        return distance(a, b);\n    });\n    var planet1OrbitSunSortedSortedSortedSorted\
    \ = planet1OrbitSunSortedSortedSorted.sort(function(a, b){\n        return distance(a,\
    \ b);\n    });\n    var planet2OrbitSunSortedSortedSortedSorted = planet2OrbitSunSortedSortedSorted.sort(function(a,\
    \ b){\n        return distance(a, b);\n    });\n    var planet1OrbitSunSortedSortedSortedSortedSorted\
    \ = planet1OrbitSunSortedSortedSortedSorted.sort(function(a, b){\n        return\
    \ distance(a, b);\n    });\n    var planet2OrbitSunSortedSortedSortedSortedSorted\
    \ = planet2OrbitSunSortedSortedSortedSorted.sort(function(a, b){\n        return\
    \ distance(a, b);\n    });\n    var planet1OrbitSunSortedSortedSortedSortedSortedSorted\
    \ = planet1OrbitSunSortedSortedSortedSortedSorted.sort(function(a, b){\n     \
    \   return distance(a, b);\n    });\n    var planet2OrbitSunSortedSortedSortedSortedSortedSorted\
    \ = planet2OrbitSunSortedSortedSortedSortedSortedSorted.sort(function(a, b){\n\
    \        return distance(a, b);", "    var planets = bfPlanets(planet1, planet2);\n\
    \    return planets;\n}\n", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1Sun = sun();\n    let planet2Sun = sun();\n\
    \    let planet1OrbitSun = orbit(planet1Sun);\n    let planet2OrbitSun = orbit(planet2Sun);\n\
    \    let planet1OrbitPlanet2 = orbit(planet1, planet2);\n    let planet2OrbitPlanet1\
    \ = orbit(planet2, planet1);\n    let planet1OrbitPlanet1Sun = orbit(planet1Sun,\
    \ planet1);\n    let planet2OrbitPlanet1Sun = orbit(planet2Sun, planet1);\n  \
    \  let planet1OrbitPlanet2Sun = orbit(planet1Sun, planet2);\n    let planet2OrbitPlanet2Sun\
    \ = orbit(planet2Sun, planet2);\n    let planet1OrbitPlanet1Planet2 = orbit(planet1,\
    \ planet2, planet2);\n    let planet2OrbitPlanet1Planet1 = orbit(planet2, planet1,\
    \ planet1);\n    let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2, planet1);\n\
    \    let planet2OrbitPlanet2Planet1 = orbit(planet2, planet1, planet2);\n    let\
    \ planet1OrbitPlanet1Planet2Sun = orbit(planet1Sun, planet1, planet2);\n    let\
    \ planet2OrbitPlanet1Planet2Sun = orbit(planet2Sun, planet1, planet2);\n    let\
    \ planet1OrbitPlanet2Planet1Sun = orbit(planet1Sun, planet2, planet1);\n    let\
    \ planet2OrbitPlanet2Planet1Sun = orbit(planet2Sun, planet2, planet1);\n    let\
    \ planet1OrbitPlanet1Planet2Planet2 = orbit(planet1, planet2, planet2, planet2);\n\
    \    let planet2OrbitPlanet1Planet2Planet1 = orbit(planet2, planet1, planet2,\
    \ planet1);\n    let planet1OrbitPlanet2Planet2Planet1 = orbit(planet1, planet2,\
    \ planet2, planet1);\n    let planet2OrbitPlanet2Planet2Planet", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sun();\n    let planet2Sun = sun();\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitPlanet2 = orbit(planet1, planet2OrbitSun);\n    let planet2OrbitPlanet1\
    \ = orbit(planet2, planet1OrbitSun);\n    let planet1OrbitPlanet1Sun = orbit(planet1,\
    \ planet1OrbitSun);\n    let planet2OrbitPlanet1Sun = orbit(planet2, planet1OrbitSun);\n\
    \    let planet1OrbitPlanet2Sun = orbit(planet1, planet2OrbitSun);\n    let planet2OrbitPlanet2Sun\
    \ = orbit(planet2, planet2OrbitSun);\n    let planet1OrbitPlanet1Planet2 = orbit(planet1,\
    \ planet2OrbitPlanet2Sun);\n    let planet2OrbitPlanet1Planet1 = orbit(planet2,\
    \ planet1OrbitPlanet2Sun);\n    let planet1OrbitPlanet2Planet1 = orbit(planet1,\
    \ planet2OrbitPlanet1Sun);\n    let planet2OrbitPlanet2Planet1 = orbit(planet2,\
    \ planet1OrbitPlanet1Sun);\n    let planet1OrbitPlanet1Planet1Sun = orbit(planet1,\
    \ planet1OrbitPlanet1Sun);\n    let planet2OrbitPlanet1Planet1Sun = orbit(planet2,\
    \ planet1OrbitPlanet1Sun);\n    let planet1OrbitPlanet2Planet1Sun = orbit(planet1,\
    \ planet2OrbitPlanet1Sun);\n    let planet2OrbitPlanet2Planet1Sun = orbit(planet2,\
    \ planet1OrbitPlanet1Sun);\n    let planet1OrbitPlanet1Planet2Sun = orbit(planet1,\
    \ planet1OrbitPlanet2Sun);\n    let planet2OrbitPlanet1Planet2Sun = orbit(planet2,\
    \ planet1OrbitPlanet2Sun", "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit\
    \ = orbit(planet2);\n  let planet1Sun = sun();\n  let planet2Sun = sun();\n  let\
    \ planet1OrbitSun = orbit(planet1, planet1Sun);\n  let planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n  let planet1OrbitPlanet2 = orbit(planet1, planet2);\n  let planet2OrbitPlanet1\
    \ = orbit(planet2, planet1);\n  let planet1OrbitPlanet1Sun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun);\n  let planet2OrbitPlanet1Sun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun);\n  let planet1OrbitPlanet2Sun = orbit(planet1, planet2, planet1OrbitSun);\n\
    \  let planet2OrbitPlanet2Sun = orbit(planet2, planet1, planet2OrbitSun);\n  let\
    \ planet1OrbitPlanet1Planet2 = orbit(planet1, planet2, planet1);\n  let planet2OrbitPlanet1Planet1\
    \ = orbit(planet2, planet1, planet2);\n  let planet1OrbitPlanet2Planet1 = orbit(planet1,\
    \ planet2, planet2);\n  let planet2OrbitPlanet2Planet1 = orbit(planet2, planet1,\
    \ planet2);\n  let planet1OrbitPlanet1Planet1Sun = orbit(planet1, planet1, planet1OrbitSun,\
    \ planet1OrbitPlanet2Sun);\n  let planet2OrbitPlanet1Planet1Sun = orbit(planet2,\
    \ planet1, planet2, planet2OrbitSun, planet2OrbitPlanet1Sun);\n  let planet1OrbitPlanet2Planet1Sun\
    \ = orbit(planet1, planet2, planet1, planet2OrbitSun, planet2OrbitPlanet1Sun);\n\
    \  let planet2OrbitPlanet2Planet1Sun = orbit(planet2, planet1, planet2, planet1OrbitSun,\
    \ planet1OrbitPlanet2Sun);\n  let planet1OrbitPlanet1Planet2Sun = orbit(plan",
  "    var planet1 = planet1.toLowerCase();\n    var planet2 = planet2.toLowerCase();\n\
    \    var planet1orbit = planet1orbits[planet1];\n    var planet2orbit = planet2orbits[planet2];\n\
    \    var planet1orbitorbit = planet1orbitorbits[planet1];\n    var planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    var planet2", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit =\
    \ orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\
    \tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun);\n\t\
    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1orbits[planet1];\n\
    \    let planet2orbit = planet2orbits[planet2];\n    let planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    let planet2orbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun);\n\t\
    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun);\n\tlet\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n\tlet planet2Orbit", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\t\
    let planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun);\n\tlet planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2Orbit", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun\
    \ = sunOrbit(planet2);\n    let planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun();\n    let\
    \ planet2Sun = sun();\n    let planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let planet1OrbitPlanet2\
    \ = orbit(planet1, planet2);\n    let planet2OrbitPlanet1 = orbit(planet2, planet1);\n\
    \    let planet1OrbitPlanet1Sun = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \    let planet2OrbitPlanet1Sun = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \    let planet1OrbitPlanet2Sun = orbit(planet1, planet2, planet1OrbitSun);\n\
    \    let planet2OrbitPlanet2Sun = orbit(planet2, planet1, planet2OrbitSun);\n\
    \    let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2, planet1);\n    let\
    \ planet2OrbitPlanet1Planet2 = orbit(planet2, planet1, planet2);\n    let planet1OrbitPlanet1Planet1Sun\
    \ = orbit(planet1, planet1, planet1OrbitSun, planet1OrbitPlanet2Sun);\n    let\
    \ planet2OrbitPlanet1Planet1Sun = orbit(planet2, planet1, planet2, planet2OrbitSun,\
    \ planet2OrbitPlanet1Sun);\n    let planet1OrbitPlanet1Planet2Sun = orbit(planet1,\
    \ planet1, planet1OrbitSun, planet1OrbitPlanet2Sun, planet1OrbitPlanet2Planet1Sun);\n\
    \    let planet2OrbitPlanet1Planet2Sun = orbit(planet2, planet1, planet2, planet2OrbitSun,\
    \ planet2OrbitPlanet1Sun, planet2OrbitPlanet1Planet2Sun);\n    let planet1OrbitPlanet1Planet2Planet1\
    \ = orbit(planet1, planet1, planet1OrbitSun, planet1OrbitPlanet2Sun, planet",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit);\n    let\
    \ planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun, planet", " \
    \   let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1Orbits = planet1Orbits(planet1);\n    let planet2Orbits = planet2Orbits(planet2);\n\
    \    let planet1Orbits = planet1Orbits.sort();\n    let planet2Orbits = planet2Orbits.sort();\n\
    \    let planet1Orbits = planet1Orbits.filter(function(planet){\n        return\
    \ planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet != planet2;\n    });\n    let planet2Orbits = planet2Orbits.filter(function(planet){\n\
    \        return planet != planet1;\n    });\n    let planet1Orbits = planet1Orbits.filter(function(planet){\n\
    \        return planet ", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit\
    \ = orbit(planet2)\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet1)\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet2)\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex].distance\n    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex].distance\n\
    \    let planet1OrbitProximity = planet1OrbitDistance - sunDistance\n    let planet2OrbitProximity\
    \ = planet2OrbitDistance - sunDistance\n    let planet1OrbitProximityIndex = planet1OrbitProximity.indexOf(planet1)\n\
    \    let planet2OrbitProximityIndex = planet2OrbitProximity.indexOf(planet2)\n\
    \    let planet1OrbitProximityDistance = planet1OrbitProximity[planet1OrbitProximityIndex].distance\n\
    \    let planet2OrbitProximityDistance = planet2OrbitProximity[planet2OrbitProximityIndex].distance\n\
    \    let planet1OrbitProximityProximity = planet1OrbitProximityDistance - sunDistance\n\
    \    let planet2OrbitProximityProximity = planet2OrbitProximityDistance - sunDistance\n\
    \    let planet1OrbitProximityProximityIndex = planet1OrbitProximityProximity.indexOf(planet1)\n\
    \    let planet2OrbitProximityProximityIndex = planet2OrbitProximityProximity.indexOf(planet2)\n\
    \    let planet1OrbitProximityProximityDistance = planet1OrbitProximityProximity[planet1OrbitProximityProximityIndex].distance\n\
    \    let planet2OrbitProximityProximityDistance = planet2OrbitProximityProximity[planet2OrbitProximityProximityIndex].distance\n\
    \    let planet1OrbitProximityProximityProximity = planet1OrbitProximityProximityDistance\
    \ - sunDistance\n    let planet2OrbitProximityProximityProximity = planet2OrbitProximityProximityDistance\
    \ - sun", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n\
    \    let planet1SunOrbit = planet1Orbit.find(x => x.name === planet1Sun.name)\n\
    \    let planet2SunOrbit = planet2Orbit.find(x => x.name === planet2Sun.name)\n\
    \    let planet1SunOrbitIndex = planet1Orbit.indexOf(planet1SunOrbit)\n    let\
    \ planet2SunOrbitIndex = planet2Orbit.indexOf(planet2SunOrbit)\n    let planet1SunOrbitDistance\
    \ = planet1Orbit[planet1SunOrbitIndex].distance\n    let planet2SunOrbitDistance\
    \ = planet2Orbit[planet2SunOrbitIndex].distance\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1SunOrbitIndex].distance\n    let planet2OrbitDistance\
    \ = planet2Orbit[planet2SunOrbitIndex].distance\n    let planet1OrbitDistanceToSun\
    \ = planet1OrbitDistance - planet1SunOrbitDistance\n    let planet2OrbitDistanceToSun\
    \ = planet2OrbitDistance - planet2SunOrbitDistance\n    let planet1OrbitDistanceToSunAndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun\n    let planet2OrbitDistanceToSunAndPlanet1\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun + planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun\n    let planet2OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun\
    \ + planet1OrbitDistanceToSun + planet2OrbitDistanceToSun\n    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSun + planet2Orbit", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1Sun = sunOrbit(planet1);\n\
    \    var planet2Sun = sunOrbit(planet2);\n    var planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    var planet2OrbitSun = orbit(planet2, planet2Sun);\n    var\
    \ planet1OrbitSun2 = orbit(planet1, planet1Sun, planet2OrbitSun);\n    var planet2OrbitSun2\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun);\n    var planet1OrbitSun3 = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun2);\n    var planet2OrbitSun3 =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun2);\n    var planet1OrbitSun4\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun2, planet1OrbitSun3);\n\
    \    var planet2OrbitSun4 = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun2,\
    \ planet2OrbitSun3);\n    var planet1OrbitSun5 = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun2, planet1OrbitSun3, planet1OrbitSun4);\n    var planet2OrbitSun5\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun2, planet2OrbitSun3,\
    \ planet2OrbitSun4);\n    var planet1OrbitSun6 = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun2, planet1OrbitSun3, planet1OrbitSun4, planet1OrbitSun5);\n \
    \   var planet2OrbitSun6 = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun2,\
    \ planet2OrbitSun3, planet2OrbitSun4, planet2OrbitSun5);\n    var planet1OrbitSun7\
    \ = orbit(planet1, planet1Sun, planet", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1orbits[planet1];\n\
    \    let planet2orbit = planet2orbits[planet2];\n    let planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    let planet2orbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "  var planet1Orbit\
    \ = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n  var planet1OrbitSun\
    \ = planet1Orbit.orbit(sun);\n  var planet2OrbitSun = planet2Orbit.orbit(sun);\n\
    \  var planet1OrbitPlanet1 = planet1OrbitSun.orbit(planet1);\n  var planet2OrbitPlanet1\
    \ = planet2OrbitSun.orbit(planet1);\n  var planet1OrbitPlanet2 = planet1OrbitSun.orbit(planet2);\n\
    \  var planet2OrbitPlanet2 = planet2OrbitSun.orbit(planet2);\n  var planet1OrbitPlanet3\
    \ = planet1OrbitSun.orbit(planet3);\n  var planet2OrbitPlanet3 = planet2OrbitSun.orbit(planet3);\n\
    \  var planet1OrbitPlanet4 = planet1OrbitSun.orbit(planet4);\n  var planet2OrbitPlanet4\
    \ = planet2OrbitSun.orbit(planet4);\n  var planet1OrbitPlanet5 = planet1OrbitSun.orbit(planet5);\n\
    \  var planet2OrbitPlanet5 = planet2OrbitSun.orbit(planet5);\n  var planet1OrbitPlanet6\
    \ = planet1OrbitSun.orbit(planet6);\n  var planet2OrbitPlanet6 = planet2OrbitSun.orbit(planet6);\n\
    \  var planet1OrbitPlanet7 = planet1OrbitSun.orbit(planet7);\n  var planet2OrbitPlanet7\
    \ = planet2OrbitSun.orbit(planet7);\n  var planet1OrbitPlanet8 = planet1OrbitSun.orbit(planet8);\n\
    \  var planet2OrbitPlanet8 = planet2OrbitSun.orbit(planet8);\n  var planet1OrbitPlanet9\
    \ = planet1OrbitSun.orbit(planet9);\n  var planet2OrbitPlanet9 = planet2OrbitSun.orbit(planet9);\n\
    \  var planet1OrbitPlanet10 = planet1OrbitSun.orbit(planet10);\n  var planet2OrbitPlanet10\
    \ = planet2OrbitSun.orbit(planet10);\n  var planet1OrbitPlanet", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \tlet planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\tlet planet2OrbitDistance\
    \ = planet2Orbit[planet2OrbitIndex];\n\tlet planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2Orbit",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1)\n    let planet2OrbitSun = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(", "\tlet planet1Orbit = orbit(planet1);\n\t\
    let planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sun(planet1);\n\tlet planet2Sun\
    \ = sun(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit =\
    \ orbit(planet1, planet1Sun, planet2Sun);\n\tlet planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet", "\tlet planet1 = planet1.toLowerCase();\n\tlet planet2\
    \ = planet2.toLowerCase();\n\tlet planet1orbit = orbits[planet1];\n\tlet planet2orbit\
    \ = orbits[planet2];\n\tlet planet1sun = sun;\n\tlet planet2sun = sun;\n\tlet\
    \ planet1sunorbit = planet1orbit;\n\tlet planet2sunorbit = planet2orbit;\n\tlet\
    \ planet1sunsun = sun;\n\tlet planet2sunsun = sun;\n\tlet planet1sunsunorbit =\
    \ planet1orbit;\n\tlet planet2sunsunorbit = planet2orbit;\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1sunsunsunorbit = planet1orbit;\n\
    \tlet planet2sunsunsunorbit = planet2orbit;\n\tlet planet1sunsunsunsun = sun;\n\
    \tlet planet2sunsunsunsun = sun;\n\tlet planet1sunsunsunsunorbit = planet1orbit;\n\
    \tlet planet2sunsunsunsunorbit = planet2orbit;\n\tlet planet1sunsunsunsunsun =\
    \ sun;\n\tlet planet2sunsunsunsun = sun;\n\tlet planet1sunsunsunsunorbit = planet1orbit;\n\
    \tlet planet2sunsunsunsunorbit = planet2orbit;\n\tlet planet1sunsunsunsunsun =\
    \ sun;\n\tlet planet2sunsunsunsun = sun;\n\tlet planet1sunsunsunsunorbit = planet1orbit;\n\
    \tlet planet2sunsunsunsunorbit = planet2orbit;\n\tlet planet1sunsunsunsunsun =\
    \ sun;\n\tlet planet2sunsunsunsun = sun;\n\tlet planet1sunsunsunsunorbit = planet1orbit;\n\
    \tlet planet2sunsunsunsunorbit = planet2orbit;\n\tlet planet1sunsunsunsunsun =\
    \ sun;\n\tlet planet2sunsunsunsun = sun;\n\tlet planet1sunsunsunsunorbit = planet1orbit;\n\
    \tlet planet2sunsunsunsunorbit = planet2orbit;\n\tlet planet1sun", "    let planet1\
    \ = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let\
    \ planet1orbit = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "    let planet1\
    \ = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let\
    \ planet1orbit = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "  let planet1Orbit\
    \ = planet1Orbit(planet1);\n  let planet2Orbit = planet2Orbit(planet2);\n  let\
    \ planet1Orbits = planet1Orbits(planet1);\n  let planet2Orbits = planet2Orbits(planet2);\n\
    \  let planet1OrbitsSorted = planet1OrbitsSorted(planet1);\n  let planet2OrbitsSorted\
    \ = planet2OrbitsSorted(planet2);\n  let planet1OrbitsSorted2 = planet1OrbitsSorted2(planet1);\n\
    \  let planet2OrbitsSorted2 = planet2OrbitsSorted2(planet2);\n  let planet1OrbitsSorted3\
    \ = planet1OrbitsSorted3(planet1);\n  let planet2OrbitsSorted3 = planet2OrbitsSorted3(planet2);\n\
    \  let planet1OrbitsSorted4 = planet1OrbitsSorted4(planet1);\n  let planet2OrbitsSorted4\
    \ = planet2OrbitsSorted4(planet2);\n  let planet1OrbitsSorted5 = planet1OrbitsSorted5(planet1);\n\
    \  let planet2OrbitsSorted5 = planet2OrbitsSorted5(planet2);\n  let planet1OrbitsSorted6\
    \ = planet1OrbitsSorted6(planet1);\n  let planet2OrbitsSorted6 = planet2OrbitsSorted6(planet2);\n\
    \  let planet1OrbitsSorted7 = planet1OrbitsSorted7(planet1);\n  let planet2OrbitsSorted7\
    \ = planet2OrbitsSorted7(planet2);\n  let planet1OrbitsSorted8 = planet1OrbitsSorted8(planet1);\n\
    \  let planet2OrbitsSorted8 = planet2OrbitsSorted8(planet2);\n  let planet1OrbitsSorted9\
    \ = planet1OrbitsSorted9(planet1);\n  let planet2OrbitsSorted9 = planet2OrbitsSorted9(planet2);\n\
    \  let planet1OrbitsSorted10 = planet1OrbitsSorted10(planet1);\n  let planet2OrbitsSorted10\
    \ = planet2OrbitsSorted10(planet2);\n  let planet1OrbitsSorted11 = planet1OrbitsSorted11(planet1);\n\
    \  let planet2OrbitsSorted11 = planet2OrbitsSorted11(planet2);\n  let planet1OrbitsSorted12\
    \ = planet1OrbitsSorted12(", "    var planet1Orbit = orbit(planet1);\n    var\
    \ planet2Orbit = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1Orbit", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \    let planet2OrbitSun = planet2Orbit.orbit(sun);\n    let planet1OrbitSunAndPlanet2\
    \ = planet1OrbitSun.orbit(planet2);\n    let planet2OrbitSunAndPlanet1 = planet2OrbitSun.orbit(planet1);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1 = planet1OrbitSunAndPlanet2.orbit(planet1);\n\
    \    let planet2OrbitSunAndPlanet1AndPlanet2 = planet2OrbitSunAndPlanet1.orbit(planet2);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2 = planet1OrbitSunAndPlanet2AndPlanet1.orbit(planet2);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1 = planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2.orbit(planet1);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2 = planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2.orbit(planet2);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1\
    \ = planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1.orbit(planet1);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2.orbit(planet2);\n\
    \    let planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1\
    \ = planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2.orbit(",
  "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1Orbits = orbits[planet1];\n    let planet2Orbits = orbits[planet2];\n\
    \    let planet1Sun = sunOrbit;\n    let planet2Sun = sunOrbit;\n    let planet1OrbitSun\
    \ = orbits[planet1][sunOrbit];\n    let planet2OrbitSun = orbits[planet2][sunOrbit];\n\
    \    let planet1OrbitPlanet1 = orbits[planet1][planet1];\n    let planet2OrbitPlanet1\
    \ = orbits[planet2][planet1];\n    let planet1OrbitPlanet2 = orbits[planet1][planet2];\n\
    \    let planet2OrbitPlanet2 = orbits[planet2][planet2];\n    let planet1OrbitPlanet1Sun\
    \ = orbits[planet1][planet1][sunOrbit];\n    let planet2OrbitPlanet1Sun = orbits[planet2][planet1][sunOrbit];\n\
    \    let planet1OrbitPlanet2Sun = orbits[planet1][planet2][sunOrbit];\n    let\
    \ planet2OrbitPlanet2Sun = orbits[planet2][planet2][sunOrbit];\n    let planet1OrbitPlanet1Planet1\
    \ = orbits[planet1][planet1][planet1];\n    let planet2OrbitPlanet1Planet1 = orbits[planet2][planet1][planet1];\n\
    \    let planet1OrbitPlanet2Planet1 = orbits[planet1][planet2][planet1];\n   \
    \ let planet2OrbitPlanet2Planet1 = orbits[planet2][planet2][planet1];\n    let\
    \ planet1OrbitPlanet1Planet2 = orbits[planet1][planet1][planet2];\n    let planet2OrbitPlanet1Planet2\
    \ = orbits[planet2][planet1][planet2];\n    let planet1OrbitPlanet2Planet2 = orbits[planet1][planet2][planet2];\n\
    \    let planet2OrbitPlanet2Planet2 = orbits[planet2][planet2][planet2];\n   \
    \ let planet1OrbitPlanet1Planet1Sun = orbits[planet1][", "    var planet1Orbit\
    \ = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n    var planet1Sun\
    \ = sun(planet1Orbit);\n    var planet2Sun = sun(planet2Orbit);\n    var planet1OrbitSun\
    \ = orbit(planet1Orbit);\n    var planet2OrbitSun = orbit(planet2Orbit);\n   \
    \ var planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Orbit);\n   \
    \ var planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n   \
    \ var planet1OrbitSunDistanceSorted = sortByDistance(planet1OrbitSunDistance);\n\
    \    var planet2OrbitSunDistanceSorted = sortByDistance(planet2OrbitSunDistance);\n\
    \    var planet1OrbitSunDistanceSorted2 = sortByDistance(planet1OrbitSunDistanceSorted);\n\
    \    var planet2OrbitSunDistanceSorted2 = sortByDistance(planet2OrbitSunDistanceSorted);\n\
    \    var planet1OrbitSunDistanceSorted3 = sortByDistance(planet1OrbitSunDistanceSorted2);\n\
    \    var planet2OrbitSunDistanceSorted3 = sortByDistance(planet2OrbitSunDistanceSorted2);\n\
    \    var planet1OrbitSunDistanceSorted4 = sortByDistance(planet1OrbitSunDistanceSorted3);\n\
    \    var planet2OrbitSunDistanceSorted4 = sortByDistance(planet2OrbitSunDistanceSorted3);\n\
    \    var planet1OrbitSunDistanceSorted5 = sortByDistance(planet1OrbitSunDistanceSorted4);\n\
    \    var planet2OrbitSunDistanceSorted5 = sortByDistance(planet2OrbitSunDistanceSorted4);\n\
    \    var planet1OrbitSunDistanceSorted6 = sortByDistance(planet1OrbitSunDistanceSorted5);\n\
    \    var planet2OrbitSunDistanceSorted6 = sortByDistance(planet2OrbitSunDistanceSorted5);\n\
    \    var planet1OrbitSunDistanceSorted7 = sortByDistance(planet1OrbitSunDistanceSorted6);\n\
    \    var planet2OrbitSunDistanceSorted7 = sortByDistance(planet2OrbitSunDistanceSorted6);\n\
    \    var planet1OrbitSunDistanceSorted8 = sortByDistance(planet1OrbitSunDistanceSorted7);\n\
    \    var planet2OrbitSunDistanceSorted8 = sortByDistance(planet", "  if(planet1\
    \ === planet2){\n    return [];\n  }\n  if(planet1 === \"Mercury\"){\n    return\
    \ [\"Venus\"];\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Earth\"){\n \
    \   return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet1 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet1 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet1 === \"Neptune\"){\n    return [];\n\
    \  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n  if(planet2\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\"];\n  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Mars\"){\n    return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Jupiter\"){\n    return [\"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Saturn\"){\n    return [\"Uranus\"\
    ];\n  }\n  if(planet2 === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet2\
    \ === \"Neptune\"){\n    return [];\n  }\n}\n", "  let planet1Orbit = orbit(planet1);\n\
    \  let planet2Orbit = orbit(planet2);\n  let planet1Sun = sunOrbit(planet1);\n\
    \  let planet2Sun = sunOrbit(planet2);\n  let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n  let planet2OrbitSun = orbit(planet2, planet2Sun);\n  let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n  let planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun);\n  let planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n  let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n  let planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit);\n\
    \  let planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbit);\n  let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit,\
    \ planet2OrbitSunOrbit);\n  let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit, planet1OrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit, planet1OrbitSunOrbitSun);\n\
    \  let planet2OrbitSunOrbitSunOrbitSunOr", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n\
    \    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun);\n    let\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun);\n\
    \    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let plan", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n\
    \    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    let planet1OrbitSunDistanceToPlanet2\
    \ = planet1OrbitSunDistance.minus(planet2OrbitSunDistance);\n    let planet2OrbitSunDistanceToPlanet1\
    \ = planet2OrbitSunDistance.minus(planet1OrbitSunDistance);\n    let planet1OrbitSunDistanceToPlanet1AndPlanet2\
    \ = planet1OrbitSunDistanceToPlanet2.minus(planet2OrbitSunDistanceToPlanet1);\n\
    \    let planet2OrbitSunDistanceToPlanet1AndPlanet2 = planet2OrbitSunDistanceToPlanet2.minus(planet1OrbitSunDistanceToPlanet1);\n\
    \    let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3 = planet1OrbitSunDistanceToPlanet2.minus(planet2OrbitSunDistanceToPlanet1AndPlanet2);\n\
    \    let planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3 = planet2OrbitSunDistanceToPlanet2.minus(planet1OrbitSunDistanceToPlanet1AndPlanet2);\n\
    \    let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4 = planet1OrbitSunDistanceToPlanet2.minus(planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3);\n\
    \    let planet2OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4 = planet2OrbitSunDistanceToPlanet2.minus(planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3);\n\
    \    let planet1OrbitSunDistanceToPlanet1AndPlanet2AndPlanet3AndPlanet4AndPlanet5\
    \ = planet1OrbitSunDistanceToPlanet2.minus(planet2", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \    let planet2OrbitSun = planet2Orbit.orbit(sun);\n    let planet1OrbitSunAndPlanet2\
    \ = planet1OrbitSun.intersection(planet2OrbitSun);\n    let planet1OrbitSunAndPlanet2Sorted\
    \ = planet1OrbitSunAndPlanet2.sort((a, b) => a.distance - b.distance);\n    let\
    \ planet1OrbitSunAndPlanet2SortedBySun = planet1OrbitSunAndPlanet2Sorted.sort((a,\
    \ b) => a.distance - b.distance);\n    let planet1OrbitSunAndPlanet2SortedBySunAndPlanet2\
    \ = planet1OrbitSunAndPlanet2SortedBySun.sort((a, b) => a.distance - b.distance);\n\
    \    let planet1OrbitSunAndPlanet2SortedBySunAndPlanet2Sorted = planet1OrbitSunAndPlanet2SortedBySunAndPlanet2.sort((a,\
    \ b) => a.distance - b.distance);\n    let planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySun\
    \ = planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySun.sort((a, b) => a.distance\
    \ - b.distance);\n    let planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySunAndPlanet2\
    \ = planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySun.sort((a, b) => a.distance\
    \ - b.distance);\n    let planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySunAndPlanet2Sorted\
    \ = planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySunAndPlanet2.sort((a,\
    \ b) => a.distance - b.distance);\n    let planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySunAndPlanet2SortedBySun\
    \ = planet1OrbitSunAndPlanet2SortedBySunAndPlanet2SortedBySunAndPlanet2SortedBySun.sort((a,\
    \ b) => a.distance - b.distance);\n    let planet1OrbitSunAndPlanet2SortedBySunAndPlan",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    let planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    let planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n    let\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinus", "    let planet1Orbit = orbit(planet1)\n\
    \    let planet2Orbit = orbit(planet2)\n    let planet1OrbitIndex = planet1Orbit.indexOf(planet1)\n\
    \    let planet2OrbitIndex = planet2Orbit.indexOf(planet2)\n    let planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex].distance\n    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex].distance\n\
    \    let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance\n\
    \    let planet1OrbitDistanceSquaredSquared = planet1OrbitDistanceSquared * planet1OrbitDistanceSquared\n\
    \    let planet2OrbitDistanceSquaredSquared = planet2OrbitDistanceSquared * planet2OrbitDistanceSquared\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet1OrbitDistanceSquared\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMin",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sun(planet1)\n    let planet2Sun = sun(planet2)\n    let\
    \ planet1SunOrbit = orbit(planet1Sun)\n    let planet2SunOrbit = orbit(planet2Sun)\n\
    \    let planet1SunSun = sun(planet1Sun)\n    let planet2SunSun = sun(planet2Sun)\n\
    \    let planet1SunSunOrbit = orbit(planet1SunSun)\n    let planet2SunSunOrbit\
    \ = orbit(planet2SunSun)\n    let planet1SunSunSun = sun(planet1SunSun)\n    let\
    \ planet2SunSunSun = sun(planet2SunSun)\n    let planet1SunSunSunOrbit = orbit(planet1SunSunSun)\n\
    \    let planet2SunSunSunOrbit = orbit(planet2SunSunSun)\n    let planet1SunSunSunSun\
    \ = sun(planet1SunSunSun)\n    let planet2SunSunSunSun = sun(planet2SunSunSun)\n\
    \    let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun)\n    let planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n    let planet1SunSunSunSunSun = sun(planet1SunSunSunSun)\n\
    \    let planet2SunSunSunSun = sun(planet2SunSunSunSun)\n    let planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun)\n    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \    let planet1SunSunSunSunSun = sun(planet1SunSunSunSun)\n    let planet2SunSunSunSun\
    \ = sun(planet2SunSunSunSun)\n    let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSunSun)\n\
    \    let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n    let planet1SunSunSunSunSun\
    \ = sun(planet1SunSunSunSunSun)\n    let planet2SunSunSunSun = sun(planet2Sun",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared * planet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared * planet2OrbitDistance\
    \ * planet1OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared * planet2OrbitDistance\
    \ * planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared * planet2OrbitDistance\
    \ * planet1OrbitDistance * planet1OrbitDistance * planet1OrbitDistance;\n\tlet\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSqu",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n    let planet2OrbitSunOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit);\n    let\
    \ planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit);\n    let planet2OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit);\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitOrbit, planet1OrbitSunOrbitOrbitOrbit);\n\
    \    let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet2OrbitSunOrbit, planet2OrbitSunOrbitOrbit, planet2OrbitSunOrbitOrbitOrbit,\
    \ planet2OrbitSunOrbitOrbitOrbit);\n    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, ", "    var planets = bf2(planet1,\
    \ planet2);\n    return planets;\n}\n", "  var planets = planet1.concat(planet2);\n\
    \  var sun = sun();\n  var orbits = orbits(planets, sun);\n  var result = orbits.filter(function(orbit){\n\
    \    return orbit[0] < orbit[1];\n  }).sort(function(a, b){\n    return a[0] -\
    \ b[0];\n  });\n  return result[0].length ? result : [];\n}\n", "  var planet1\
    \ = planet1.toLowerCase();\n  var planet2 = planet2.toLowerCase();\n  var planet1orbit\
    \ = planet1orbits[planet1];\n  var planet2orbit = planet2orbits[planet2];\n  var\
    \ planet1orbitorbit = planet1orbitorbits[planet1];\n  var planet2orbitorbit =\
    \ planet2orbitorbits[planet2];\n  var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n  var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2", "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n\
    \  let planet1Sun = sunOrbit(planet1);\n  let planet2Sun = sunOrbit(planet2);\n\
    \  let planet1OrbitSun = orbit(planet1, planet1Sun);\n  let planet2OrbitSun =\
    \ orbit(planet2, planet2Sun);\n  let planet1OrbitSunOrbit = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun);\n  let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \  let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \  let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun);\n  let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n  let planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n  let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.orbit(sun);\n\
    \    let planet2OrbitSun = planet2Orbit.orbit(sun);\n    let planet1OrbitPlanet1\
    \ = planet1OrbitSun.orbit(planet1);\n    let planet2OrbitPlanet1 = planet2OrbitSun.orbit(planet1);\n\
    \    let planet1OrbitPlanet2 = planet1OrbitSun.orbit(planet2);\n    let planet2OrbitPlanet2\
    \ = planet2OrbitSun.orbit(planet2);\n    let planet1OrbitPlanet3 = planet1OrbitSun.orbit(planet3);\n\
    \    let planet2OrbitPlanet3 = planet2OrbitSun.orbit(planet3);\n    let planet1OrbitPlanet4\
    \ = planet1OrbitSun.orbit(planet4);\n    let planet2OrbitPlanet4 = planet2OrbitSun.orbit(planet4);\n\
    \    let planet1OrbitPlanet5 = planet1OrbitSun.orbit(planet5);\n    let planet2OrbitPlanet5\
    \ = planet2OrbitSun.orbit(planet5);\n    let planet1OrbitPlanet6 = planet1OrbitSun.orbit(planet6);\n\
    \    let planet2OrbitPlanet6 = planet2OrbitSun.orbit(planet6);\n    let planet1OrbitPlanet7\
    \ = planet1OrbitSun.orbit(planet7);\n    let planet2OrbitPlanet7 = planet2OrbitSun.orbit(planet7);\n\
    \    let planet1OrbitPlanet8 = planet1OrbitSun.orbit(planet8);\n    let planet2OrbitPlanet8\
    \ = planet2OrbitSun.orbit(planet8);\n    let planet1OrbitPlanet9 = planet1OrbitSun.orbit(planet9);\n\
    \    let planet2OrbitPlanet9 = planet2OrbitSun.orbit(planet9);\n    let planet1OrbitPlanet10\
    \ = planet1OrbitSun.orbit(planet10);\n    let planet2OrbitPlanet10 = planet2OrbitSun.orbit(planet10);\n\
    \    let planet1OrbitPlanet", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit\
    \ = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun =\
    \ sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\t\
    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbit =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun, planet1OrbitSunOrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit", "    let planet1 =\
    \ planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let planet1orbit\
    \ = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "  let planet1Orbit\
    \ = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let planet1OrbitSun\
    \ = planet1Orbit.orbit(sun);\n  let planet2OrbitSun = planet2Orbit.orbit(sun);\n\
    \  let planet1OrbitPlanet1 = planet1OrbitSun.orbit(planet1);\n  let planet2OrbitPlanet1\
    \ = planet2OrbitSun.orbit(planet1);\n  let planet1OrbitPlanet2 = planet1OrbitSun.orbit(planet2);\n\
    \  let planet2OrbitPlanet2 = planet2OrbitSun.orbit(planet2);\n  let planet1OrbitPlanet3\
    \ = planet1OrbitSun.orbit(planet3);\n  let planet2OrbitPlanet3 = planet2OrbitSun.orbit(planet3);\n\
    \  let planet1OrbitPlanet4 = planet1OrbitSun.orbit(planet4);\n  let planet2OrbitPlanet4\
    \ = planet2OrbitSun.orbit(planet4);\n  let planet1OrbitPlanet5 = planet1OrbitSun.orbit(planet5);\n\
    \  let planet2OrbitPlanet5 = planet2OrbitSun.orbit(planet5);\n  let planet1OrbitPlanet6\
    \ = planet1OrbitSun.orbit(planet6);\n  let planet2OrbitPlanet6 = planet2OrbitSun.orbit(planet6);\n\
    \  let planet1OrbitPlanet7 = planet1OrbitSun.orbit(planet7);\n  let planet2OrbitPlanet7\
    \ = planet2OrbitSun.orbit(planet7);\n  let planet1OrbitPlanet8 = planet1OrbitSun.orbit(planet8);\n\
    \  let planet2OrbitPlanet8 = planet2OrbitSun.orbit(planet8);\n  let planet1OrbitPlanet9\
    \ = planet1OrbitSun.orbit(planet9);\n  let planet2OrbitPlanet9 = planet2OrbitSun.orbit(planet9);\n\
    \  let planet1OrbitPlanet10 = planet1OrbitSun.orbit(planet10);\n  let planet2OrbitPlanet10\
    \ = planet2OrbitSun.orbit(planet10);\n  let planet1OrbitPlanet", "    let planet1\
    \ = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let\
    \ planet1orbit = planet1.includes(\"mercury\") || planet1.includes(\"venus\")\
    \ || planet1.includes(\"earth\") || planet1.includes(\"mars\") || planet1.includes(\"\
    jupiter\") || planet1.includes(\"saturn\") || planet1.includes(\"uranus\") ||\
    \ planet1.includes(\"neptune\");\n    let planet2orbit = planet2.includes(\"mercury\"\
    ) || planet2.includes(\"venus\") || planet2.includes(\"earth\") || planet2.includes(\"\
    mars\") || planet2.includes(\"jupiter\") || planet2.includes(\"saturn\") || planet2.includes(\"\
    uranus\") || planet2.includes(\"neptune\");\n    if(!planet1orbit && !planet2orbit)\
    \ return [];\n    let planet1orbitorbit = planet1orbit && planet2orbit;\n    let\
    \ planet1orbitorbit1 = planet1orbit && planet1orbit;\n    let planet1orbitorbit2\
    \ = planet1orbit && planet2orbit;\n    let planet1orbitorbit3 = planet1orbit &&\
    \ planet2orbit;\n    let planet1orbitorbit4 = planet1orbit && planet2orbit;\n\
    \    let planet1orbitorbit5 = planet1orbit && planet2orbit;\n    let planet1orbitorbit6\
    \ = planet1orbit && planet2orbit;\n    let planet1orbitorbit7 = planet1orbit &&\
    \ planet2orbit;\n    let planet1orbitorbit8 = planet1orbit && planet2orbit;\n\
    \    let planet2orbitorbit = planet2orbit && planet1orbit;\n    let planet2orbitorbit1\
    \ = planet2orbit && planet1orbit;\n    let planet2orbitorbit2 = planet2orbit &&\
    \ planet1orbit;\n    let planet2orbitorbit3 = planet2orbit && planet1orbit;\n\
    \    let planet2orbitorbit4 = planet2orbit && planet1orbit;\n    let planet2orbitorbit5\
    \ = planet2orbit && planet1orbit;\n    let planet2orbitorbit6 = planet2orbit &&\
    \ planet1orbit;\n    let planet2orbitorbit7 = planet2or", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = orbits[planet1];\n\
    \    let planet2orbit = orbits[planet2];\n    let planet1orbitorbit = orbits[planet1orbit];\n\
    \    let planet2orbitorbit = orbits[planet2orbit];\n    let planet1orbitorbitorbit\
    \ = orbits[planet1orbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    let\
    \ planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbit];\n    let planet1orbitorbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbitorbit];\n    let planet2orbitorbitorbitorbitorbit\
    \ = orbits[planet2orbitorbitorbitorbit];\n    let planet1orbitorbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbitorbit];\n    let planet2orbitorbitorbitorbit\
    \ = orbits[planet2orbitorbitorbit];\n    let planet1orbitorbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbitorbit];\n    let planet2orbitorbitorbitorbit\
    \ = orbits[planet2orbitorbitorbit];\n    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n\
    \    let planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n\
    \    let planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbit];\n    let\
    \ planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n    let\
    \ planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbitorbit];\n    let planet2orbitorbitorbitorbit\
    \ = orbits[planet2orbitorbitorbit];\n    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n\
    \    let planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbit];\n    let\
    \ planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbitorbit];\n    let\
    \ planet2orbitorbitorbitorbit = orbits[planet2orbitorbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit = orbit(planet2);\n\
    \  var planet1OrbitDistance = distance(planet1Orbit);\n  var planet2OrbitDistance\
    \ = distance(planet2Orbit);\n  var planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sun.distance;\n  var planet2OrbitDistanceToSun = planet2OrbitDistance - sun.distance;\n\
    \  var planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \  var planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\
    \  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2 = planet1OrbitDistanceToSunAndPlanet2\
    \ + planet2OrbitDistanceToSunAndPlanet1;\n  var planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ = planet2OrbitDistanceToSunAndPlanet1 + planet1OrbitDistanceToSunAndPlanet2;\n\
    \  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3 = planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ + planet2OrbitDistanceToSunAndPlanet1AndPlanet1;\n  var planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3\
    \ = planet2OrbitDistanceToSunAndPlanet1AndPlanet1 + planet1OrbitDistanceToSunAndPlanet1AndPlanet2;\n\
    \  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3AndPlanet4 = planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ + planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3;\n  var planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3AndPlanet4\
    \ = planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet3AndPlanet4 + planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3;\n\
    \  var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\t\
    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\tlet\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ plan", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet1OrbitSunOrbit);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit);\n    let\
    \ planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet1OrbitSunOrbit, planet1OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet2OrbitSunOrbit, planet2OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet1OrbitSun, planet1OrbitSunOrbit, planet1OrbitSunOrbitSun, planet", " \
    \   var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1OrbitIndex\
    \ - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit\
    \ = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit\
    \ = orbit(planet2);\n  var planet1Sun = sun(planet1Orbit);\n  var planet2Sun =\
    \ sun(planet2Orbit);\n  var planet1OrbitSun = orbit(planet1Orbit);\n  var planet2OrbitSun\
    \ = orbit(planet2Orbit);\n  var planet1OrbitSunOrbit = orbit(planet1OrbitSun);\n\
    \  var planet2OrbitSunOrbit = orbit(planet2OrbitSun);\n  var planet1OrbitSunOrbitSun\
    \ = orbit(planet1OrbitSunOrbit);\n  var planet2OrbitSunOrbitSun = orbit(planet2OrbitSunOrbit);\n\
    \  var planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \  var planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSun);\n\
    \  var planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  var planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  var planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \  var planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbitSunOrbit", "    let\
    \ planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n    let\
    \ planet1Sun = sun(planet1)\n    let planet2Sun = sun(planet2)\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun)\n    let planet2OrbitSun = orbit(planet2, planet2Sun)\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun)\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n    let planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun)\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun)\n    let planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSun =\
    \ orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun)\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n\
    \    var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \    var planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \    var planet1OrbitSunDistance", "    var planet1Orbit = orbit(planet1);\n \
    \   var planet2Orbit = orbit(planet2);\n    var planet1OrbitSun = planet1Orbit.sun;\n\
    \    var planet2OrbitSun = planet2Orbit.sun;\n    var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance*planet1OrbitSunDistance;\n    var planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance*planet2OrbitSunDistance;\n    var planet1OrbitSunDistance",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1OrbitSun = planet1Orbit.sun\n    let planet2OrbitSun = planet2Orbit.sun\n\
    \    let planet1OrbitSunDistance = planet1Orbit.distanceTo(planet1OrbitSun)\n\
    \    let planet2OrbitSunDistance = planet2Orbit.distanceTo(planet2OrbitSun)\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance\n\
    \    let planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance\n\
    \    let planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet1);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet2);\n    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1Orbit", "\tlet\
    \ planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet\
    \ planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\tlet\
    \ planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\t\
    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ plan", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1OrbitIndex\
    \ - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \    var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \    var planet1Orbit", "    let planet1 = planet1.toLowerCase();\n    let planet2\
    \ = planet2.toLowerCase();\n    let planet1orbit = planet1orbits[planet1];\n \
    \   let planet2orbit = planet2orbits[planet2];\n    let planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \    let planet2orbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n   \
    \ let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "    let planet1\
    \ = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let\
    \ planet1orbit = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "  var planet1 =\
    \ planet1.toLowerCase();\n  var planet2 = planet2.toLowerCase();\n  var planet1orbit\
    \ = orbits[planet1];\n  var planet2orbit = orbits[planet2];\n  var planet1sun\
    \ = sunorbit;\n  var planet2sun = sunorbit;\n  var planet1sunorbit = planet1orbit.filter(function(orbit){\n\
    \    return orbit === sunorbit;\n  });\n  var planet2sunorbit = planet2orbit.filter(function(orbit){\n\
    \    return orbit === sunorbit;\n  });\n  var planet1sunorbitdistance = planet1sunorbit.map(function(orbit){\n\
    \    return Math.sqrt(Math.pow(orbit.x - planet2orbit.x, 2) + Math.pow(orbit.y\
    \ - planet2orbit.y, 2));\n  });\n  var planet2sunorbitdistance = planet2sunorbit.map(function(orbit){\n\
    \    return Math.sqrt(Math.pow(orbit.x - planet1orbit.x, 2) + Math.pow(orbit.y\
    \ - planet1orbit.y, 2));\n  });\n  var planet1sunorbitdistancesorted = planet1sunorbitdistance.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var planet2sunorbitdistancesorted = planet2sunorbitdistance.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  var planet1sunorbitdistancesortedindex = planet1sunorbitdistancesorted.indexOf(Math.min.apply(Math,\
    \ planet1sunorbitdistancesorted));\n  var planet2sunorbitdistancesortedindex =\
    \ planet2sunorbitdistancesorted.indexOf(Math.min.apply(Math, planet2sunorbitdistancesorted));\n\
    \  var planet1sunorbitdistancesortedindex2 = planet1sunorbitdistancesorted.indexOf(Math.max.apply(Math,\
    \ planet1sunorbitdistancesorted));\n  var planet2sunorbitdistancesortedindex2\
    \ = planet2sunorbitdistancesorted.indexOf(Math.max.apply(Math, planet2sunorbitdistancesorted));\n\
    \  var planet1sunorbitdistancesortedindex3 = planet1sunorbitdistancesorted.indexOf(Math.min.apply(Math,\
    \ planet1sunorbitdistancesorted));\n  var planet2sunorbitdistancesortedindex3\
    \ = planet2sunorbitdistancesorted.indexOf(Math.min.apply(Math, planet2sunorbitdistancesorted));\n\
    \  var planet1sunorbitdistancesortedindex4 = planet1sunorbitdistancesorted.indexOf(Math.max.apply(Math,\
    \ planet1sunorbitdistancesorted));\n  var planet2sunorbitdistancesortedindex4\
    \ = planet2sunorbitdistancesor", "    let planet1 = planet1.toLowerCase();\n \
    \   let planet2 = planet2.toLowerCase();\n    let planet1orbit = planet1.split(\"\
    _\").join(\"\");\n    let planet2orbit = planet2.split(\"_\").join(\"\");\n  \
    \  let planet1orbitorbit = planet1orbit.split(\"_\").join(\"\");\n    let planet2orbitorbit\
    \ = planet2orbit.split(\"_\").join(\"\");\n    let planet1orbitorbitorbit = planet1orbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbit = planet2orbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet1orbitorbitorbitorbit = planet1orbitorbitorbit.split(\"\
    _\").join(\"\");\n    let planet2orbitorbitorbitorbit = planet", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex\
    \ = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\
    \tlet planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\tlet planet2OrbitDistance\
    \ = planet2Orbit[planet2OrbitIndex];\n\tlet planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1Orbit",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun)\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun)\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet2Sun)\n    let planet2OrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n    let plan", "\tlet planet1\
    \ = planet1.toLowerCase();\n\tlet planet2 = planet2.toLowerCase();\n\tlet planet1orbit\
    \ = orbits[planet1];\n\tlet planet2orbit = orbits[planet2];\n\tlet planet1sun\
    \ = sun;\n\tlet planet2sun = sun;\n\tlet planet1orbitorbit = orbits[planet1orbit];\n\
    \tlet planet2orbitorbit = orbits[planet2orbit];\n\tlet planet1sunsun = sun;\n\t\
    let planet2sunsun = sun;\n\tlet planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\tlet planet1sunsunsun\
    \ = sun;\n\tlet planet2sunsunsun = sun;\n\tlet planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \tlet planet2orbitorbitorbit = orbit", "  if(planet1 === planet2){\n    return\
    \ [];\n  }\n  if(planet1 === \"Mercury\"){\n    return [\"Venus\"];\n  }\n  if(planet1\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\"];\n  }\n  if(planet1 === \"Earth\"){\n    return [\"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Jupiter\"){\n    return [\"\
    Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Saturn\"){\n    return [\"Uranus\"\
    ];\n  }\n  if(planet1 === \"Uranus\"){\n    return [\"Neptune\"];\n  }\n  if(planet1\
    \ === \"Neptune\"){\n    return [];\n  }\n  if(planet2 === \"Mercury\"){\n   \
    \ return [\"Venus\"];\n  }\n  if(planet2 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2 === \"Earth\"\
    ){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2\
    \ === \"Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet2\
    \ === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\"];\n  }\n  if(planet2 ===\
    \ \"Saturn\"){\n    return [\"Uranus\"];\n  }\n  if(planet2 === \"Uranus\"){\n\
    \    return [\"Neptune\"];\n  }\n  if(planet2 === \"Neptune\"){\n    return [];\n\
    \  }\n  if(planet1 === \"Mercury\" && planet2 === \"Neptune\"){\n    return [\"\
    Venus\"];\n  }\n  if(planet1 === \"Venus\" && planet2 === \"Neptune\"){\n    return\
    \ [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"];\n  }\n  if(planet1\
    \ === \"Earth\" && planet2 === \"Neptune\"){\n    return [\"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"];\n  }\n  if(planet1 === \"Mars\" && planet2 === \"Ne",
  "  if(planet1 === planet2){\n    return []\n  }\n  if(planet1 === \"Mercury\"){\n\
    \    return [\"Venus\"]\n  }\n  if(planet1 === \"Venus\"){\n    return [\"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1\
    \ === \"Earth\"){\n    return [\"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\",\
    \ \"Neptune\"]\n  }\n  if(planet1 === \"Mars\"){\n    return [\"Jupiter\", \"\
    Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Jupiter\"){\n    return\
    \ [\"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Saturn\"){\n\
    \    return [\"Uranus\", \"Neptune\"]\n  }\n  if(planet1 === \"Uranus\"){\n  \
    \  return [\"Neptune\"]\n  }\n  if(planet1 === \"Neptune\"){\n    return []\n\
    \  }\n  if(planet2 === \"Mercury\"){\n    return [\"Venus\"]\n  }\n  if(planet2\
    \ === \"Venus\"){\n    return [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"\
    Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"Earth\"){\n    return [\"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n  if(planet2 === \"\
    Mars\"){\n    return [\"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n  }\n\
    \  if(planet2 === \"Jupiter\"){\n    return [\"Saturn\", \"Uranus\", \"Neptune\"\
    ]\n  }\n  if(planet2 === \"Saturn\"){\n    return [\"Uranus\", \"Neptune\"]\n\
    \  }\n  if(planet2 === \"Uranus\"){\n    return [\"Neptune\"]\n  }\n  if(planet2\
    \ === \"Neptune\"){\n    return []\n  }\n}\n", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sunOrbit(planet1);\n\t\
    let planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun);\n\tlet planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2Orbit", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit\
    \ = orbit(planet2)\n    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun\
    \ = sunOrbit(planet2)\n    let planet1OrbitSun = orbit(planet1, planet1Sun)\n\
    \    let planet2OrbitSun = orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun)\n    let planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun)\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet1Sun)\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet1Sun, planet2OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet1Sun, planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet1OrbitSun", "  let planet1Orbit = orbit(planet1)\n\
    \  let planet2Orbit = orbit(planet2)\n  let planet1Sun = sun(planet1)\n  let planet2Sun\
    \ = sun(planet2)\n  let planet1SunOrbit = orbit(planet1Sun)\n  let planet2SunOrbit\
    \ = orbit(planet2Sun)\n  let planet1SunSun = sun(planet1Sun)\n  let planet2SunSun\
    \ = sun(planet2Sun)\n  let planet1SunSunOrbit = orbit(planet1SunSun)\n  let planet2SunSunOrbit\
    \ = orbit(planet2SunSun)\n  let planet1SunSunSun = sun(planet1SunSun)\n  let planet2SunSunSun\
    \ = sun(planet2SunSun)\n  let planet1SunSunSunOrbit = orbit(planet1SunSunSun)\n\
    \  let planet2SunSunSunOrbit = orbit(planet2SunSunSun)\n  let planet1SunSunSunSun\
    \ = sun(planet1SunSunSun)\n  let planet2SunSunSunSun = sun(planet2SunSunSun)\n\
    \  let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun)\n  let planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n  let planet1SunSunSunSunSun = sun(planet1SunSunSunSun)\n\
    \  let planet2SunSunSunSun = sun(planet2SunSunSunSun)\n  let planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun)\n  let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \  let planet1SunSunSunSunSun = sun(planet1SunSunSunSun)\n  let planet2SunSunSunSun\
    \ = sun(planet2SunSunSunSun)\n  let planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSunSun)\n\
    \  let planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n  let planet1SunSunSunSunSun\
    \ = sun(planet1SunSunSunSunSun)\n  let planet2SunSunSunSun = sun(planet2Sun",
  "  let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let\
    \ planet1Sun = sun(planet1Orbit)\n  let planet2Sun = sun(planet2Orbit)\n  let\
    \ planet1OrbitSun = orbit(planet1Orbit)\n  let planet2OrbitSun = orbit(planet2Orbit)\n\
    \  let planet1OrbitSunOrbit = orbit(planet1OrbitSun)\n  let planet2OrbitSunOrbit\
    \ = orbit(planet2OrbitSun)\n  let planet1OrbitSunOrbitOrbit = orbit(planet1OrbitSunOrbit)\n\
    \  let planet2OrbitSunOrbitOrbit = orbit(planet2OrbitSunOrbit)\n  let planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1OrbitSunOrbitOrbit)\n  let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2OrbitSunOrbitOrbit)\n\
    \  let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1OrbitSunOrbitOrbitOrbit)\n\
    \  let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2OrbitSunOrbitOrbitOrbitOrbit)\n\
    \  let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1OrbitSunOrbitOrbitOrbitOrbitOrbit)\n\
    \  let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2OrbitSunOrbitOrbitOrbitOrbitOrbit)\n\
    \  let planet1OrbitSunOrbitOrbitOrbitOrbitOrbitOrbit = orbit(planet1OrbitSunOrbitOrbitOrbitOrbitOrbitOrbit)\n\
    \  let planet2OrbitSunOrbitOrbitOrbitOrbitOrbitOrbit = orbit(planet2OrbitSunOrbitOrbitOrbitOrbitOrbitOrbit)\n\
    \  let planet1OrbitSunOrbitOrbitOrbitOrbitOrbitOrbitOrbit = orbit(planet1OrbitSunOrbitOrbitOrbitOrbitOrbitOrbitOrbit)\n\
    \  let planet2Orbit", "  var planet1Orbit = orbit(planet1);\n  var planet2Orbit\
    \ = orbit(planet2);\n  var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \  var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n  var planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n  var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \  var planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \  var planet1Orbit", "  let planet1 = planet1.toLowerCase();\n  let planet2 =\
    \ planet2.toLowerCase();\n  let planet1orbit = planet1orbits[planet1];\n  let\
    \ planet2orbit = planet2orbits[planet2];\n  let planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \  let planet2orbitorbit = planet2orbitorbits[planet2];\n  let planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  let\
    \ planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  let\
    \ planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  let\
    \ planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  let\
    \ planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  let planet1orbitorbitorbitorbit = planet1orbitorbitorbits[planet1];\n  let\
    \ planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n\
    \  let planet1orbitorbitorbitorbit = planet1orbit", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1Orbit[planet1OrbitIndex];\n\tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\
    \tlet planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance;\n\
    \tlet planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun(planet1);\n\
    \    let planet2Sun = sun(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun);\n    let\
    \ planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitOr", "    let planet1 = planet1.toLowerCase();\n\
    \    let planet2 = planet2.toLowerCase();\n    let planet1orbit = orbits[planet1];\n\
    \    let planet2orbit = orbits[planet2];\n    let planet1sun = sun;\n    let planet2sun\
    \ = sun;\n    let planet1sunorbit = orbits[planet1sun];\n    let planet2sunorbit\
    \ = orbits[planet2sun];\n    let planet1sunsun = sunsun;\n    let planet2sunsun\
    \ = sunsun;\n    let planet1sunsunorbit = orbits[planet1sunsun];\n    let planet2sunsunorbit\
    \ = orbits[planet2sunsun];\n    let planet1sunsunsun = sunsunsun;\n    let planet2sunsunsun\
    \ = sunsunsun;\n    let planet1sunsunsunorbit = orbits[planet1sunsunsun];\n  \
    \  let planet2sunsunsunorbit = orbits[planet2sunsunsun];\n    let planet1sunsunsunsun\
    \ = sunsunsunsun;\n    let planet2sunsunsunsun = sunsunsunsun;\n    let planet1sunsunsunsunorbit\
    \ = orbits[planet1sunsunsunsun];\n    let planet2sunsunsunsunorbit = orbits[planet2sunsunsunsun];\n\
    \    let planet1sunsunsunsunsun = sunsunsunsunsun;\n    let planet2sunsunsunsunsun\
    \ = sunsunsunsunsun;\n    let planet1sunsunsunsunsunorbit = orbits[planet1sunsunsunsun];\n\
    \    let planet2sunsunsunsunsunorbit = orbits[planet2sunsunsunsun];\n    let planet1sunsunsunsunsun\
    \ = sunsunsunsunsun;\n    let planet2sunsunsunsunsun = sunsunsunsunsun;\n    let\
    \ planet1sunsunsunsunsunorbit = orbits[planet1sunsunsunsunsun];\n    let planet2sunsunsunsunsunorbit\
    \ = orbits[planet2sunsunsunsunsun];\n    let planet1sunsunsunsunsunsun = sunsunsunsunsunsun;\n\
    \    let planet2sunsunsunsunsun = sunsunsunsunsun;\n    let planet1sunsunsunsunsunorbit\
    \ = orbits[planet1sunsunsunsunsun];\n    let planet2sunsunsunsunsunorbit = orbits[",
  "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1Sun = sunOrbit(planet1);\n  let planet2Sun = sunOrbit(planet2);\n  let\
    \ planet1OrbitSun = orbit(planet1, planet1Sun);\n  let planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n  let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \  let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n \
    \ let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \  let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \  let planet1OrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbit);\n  let planet2OrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit);\n\
    \  let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit);\n  let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit,\
    \ planet1OrbitSunOrbitSun);\n  let planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit,\
    \ planet1OrbitSunOrbitSun);\n  let planet2OrbitSunOrbitSunOrbitSunOr", "\tlet\
    \ planet1 = planet1.toLowerCase();\n\tlet planet2 = planet2.toLowerCase();\n\t\
    let planet1Orbit = orbits[planet1];\n\tlet planet2Orbit = orbits[planet2];\n\t\
    let planet1Sun = sunOrbit;\n\tlet planet2Sun = sunOrbit;\n\tlet planet1OrbitSun\
    \ = orbits[planet1Sun];\n\tlet planet2OrbitSun = orbits[planet2Sun];\n\tlet planet1OrbitPlanet1\
    \ = orbits[planet1];\n\tlet planet2OrbitPlanet1 = orbits[planet2];\n\tlet planet1OrbitPlanet2\
    \ = orbits[planet1];\n\tlet planet2OrbitPlanet2 = orbits[planet2];\n\tlet planet1OrbitPlanet1Sun\
    \ = orbits[planet1Sun];\n\tlet planet2OrbitPlanet1Sun = orbits[planet2Sun];\n\t\
    let planet1OrbitPlanet2Sun = orbits[planet1Sun];\n\tlet planet2OrbitPlanet2Sun\
    \ = orbits[planet2Sun];\n\tlet planet1OrbitPlanet1Planet1 = orbits[planet1];\n\
    \tlet planet2OrbitPlanet1Planet1 = orbits[planet2];\n\tlet planet1OrbitPlanet2Planet1\
    \ = orbits[planet1];\n\tlet planet2OrbitPlanet2Planet1 = orbits[planet2];\n\t\
    let planet1OrbitPlanet1Planet2 = orbits[planet1];\n\tlet planet2OrbitPlanet1Planet2\
    \ = orbits[planet2];\n\tlet planet1OrbitPlanet2Planet2 = orbits[planet1];\n\t\
    let planet2OrbitPlanet2Planet2 = orbits[planet2];\n\tlet planet1OrbitPlanet1Planet1Sun\
    \ = orbits[planet1Sun];\n\tlet planet2OrbitPlanet1Planet1Sun = orbits[planet2Sun];\n\
    \tlet planet1OrbitPlanet2Planet1Sun = orbits[planet1Sun];\n\tlet planet2OrbitPlanet2Planet1Sun\
    \ = orbits[planet2Sun];\n\tlet planet1OrbitPlanet1Planet2Sun = orbits[plan", "\t\
    let planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet\
    \ planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\tlet planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \tlet planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n\tlet planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n\tlet planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n\tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \tlet planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2Orbit",
  "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1orbit = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun\
    \ = planet1Orbit.sun;\n    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistance",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1Orbit", "  let\
    \ planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1Sun = sun();\n  let planet2Sun = sun();\n  let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n  let planet2OrbitSun = orbit(planet2, planet2Sun);\n  let planet1OrbitPlanet2\
    \ = orbit(planet1, planet2);\n  let planet2OrbitPlanet1 = orbit(planet2, planet1);\n\
    \  let planet1OrbitPlanet1Sun = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \  let planet2OrbitPlanet1Sun = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \  let planet1OrbitPlanet2Sun = orbit(planet1, planet2, planet1OrbitSun);\n  let\
    \ planet2OrbitPlanet2Sun = orbit(planet2, planet1, planet2OrbitSun);\n  let planet1OrbitPlanet1Planet2\
    \ = orbit(planet1, planet2, planet1);\n  let planet2OrbitPlanet1Planet1 = orbit(planet2,\
    \ planet1, planet2);\n  let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2,\
    \ planet2);\n  let planet2OrbitPlanet2Planet1 = orbit(planet2, planet1, planet2);\n\
    \  let planet1OrbitPlanet1Planet1Sun = orbit(planet1, planet1, planet1OrbitSun);\n\
    \  let planet2OrbitPlanet1Planet1Sun = orbit(planet2, planet1, planet1OrbitSun);\n\
    \  let planet1OrbitPlanet2Planet1Sun = orbit(planet1, planet2, planet1OrbitSun);\n\
    \  let planet2OrbitPlanet2Planet1Sun = orbit(planet2, planet1, planet2OrbitSun);\n\
    \  let planet1OrbitPlanet1Planet2Sun = orbit(planet1, planet1, planet2OrbitSun);\n\
    \  let planet2OrbitPlanet1Planet2Sun = orbit(planet2, planet1, planet2OrbitSun);\n\
    \  let planet1Orbit", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit\
    \ = orbit(planet2);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSunDistance = distance(planet1OrbitSun,\
    \ planet1Orbit);\n\tlet planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Orbit);\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2OrbitSunDistance;\n\
    \tlet planet1OrbitSunDistanceSquared = planet1OrbitSunDistance * planet1OrbitSunDistance;\n\
    \tlet planet2OrbitSunDistanceSquared = planet2OrbitSunDistance * planet2Orbit",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\t\
    let planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\t\
    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSunOrbitSun, planet2OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ plan", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\t\
    let planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun)\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2Orbit", "    var planet1Orbit\
    \ = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n    var planet1OrbitSun\
    \ = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n    var planet1OrbitSunDistance\
    \ = planet1OrbitSun.distanceTo(planet2OrbitSun);\n    var planet2OrbitSunDistance\
    \ = planet2OrbitSun.distanceTo(planet1OrbitSun);\n    var planet1OrbitSunAngle\
    \ = planet1OrbitSun.angleTo(planet2OrbitSun);\n    var planet2OrbitSunAngle =\
    \ planet2OrbitSun.angleTo(planet1OrbitSun);\n    var planet1OrbitSunAngleDistance\
    \ = planet1OrbitSunAngle.distanceTo(planet2OrbitSunAngle);\n    var planet2OrbitSunAngleDistance\
    \ = planet2OrbitSunAngle.distanceTo(planet1OrbitSunAngle);\n    var planet1OrbitSunAngleAngle\
    \ = planet1OrbitSunAngle.angleTo(planet2OrbitSunAngle);\n    var planet2OrbitSunAngleAngle\
    \ = planet2OrbitSunAngle.angleTo(planet1OrbitSunAngle);\n    var planet1OrbitSunAngleAngleDistance\
    \ = planet1OrbitSunAngleAngle.distanceTo(planet2OrbitSunAngleAngle);\n    var\
    \ planet2OrbitSunAngleAngleDistance = planet2OrbitSunAngleAngle.distanceTo(planet1OrbitSunAngleAngle);\n\
    \    var planet1OrbitSunAngleAngleAngle = planet1OrbitSunAngleAngle.angleTo(planet2OrbitSunAngleAngle);\n\
    \    var planet2OrbitSunAngleAngleAngle = planet2OrbitSunAngleAngle.angleTo(planet1OrbitSunAngleAngle);\n\
    \    var planet1OrbitSunAngleAngleAngleDistance = planet1OrbitSunAngleAngleAngle.distanceTo(planet2OrbitSunAngleAngleDistance);\n\
    \    var planet2OrbitSunAngleAngleDistance = planet2OrbitSunAngleAngle.distanceTo(planet1OrbitSunAngleAngleDistance);\n\
    \    var planet1OrbitSunAngleAngleAngleDistance = planet1OrbitSunAngleAngleAngle.distanceTo(planet2OrbitSunAngleAngleDistance);\n\
    \    var ", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1Sun = sun(planet1)\n\tlet planet2Sun = sun(planet2)\n\tlet planet1SunOrbit\
    \ = orbit(planet1Sun)\n\tlet planet2SunOrbit = orbit(planet2Sun)\n\tlet planet1SunSun\
    \ = sun(planet1Sun)\n\tlet planet2SunSun = sun(planet2Sun)\n\tlet planet1SunSunOrbit\
    \ = orbit(planet1SunSun)\n\tlet planet2SunSunOrbit = orbit(planet2SunSun)\n\t\
    let planet1SunSunSun = sun(planet1SunSun)\n\tlet planet2SunSunSun = sun(planet2SunSun)\n\
    \tlet planet1SunSunSunOrbit = orbit(planet1SunSunSun)\n\tlet planet2SunSunSunOrbit\
    \ = orbit(planet2SunSunSun)\n\tlet planet1SunSunSunSun = sun(planet1SunSunSun)\n\
    \tlet planet2SunSunSunSun = sun(planet2SunSunSun)\n\tlet planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun)\n\tlet planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\
    \tlet planet1SunSunSunSun = sun(planet1SunSunSunSun)\n\tlet planet2SunSunSunSun\
    \ = sun(planet2SunSunSunSun)\n\tlet planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun)\n\
    \tlet planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun)\n\tlet planet1SunSunSunSunSun\
    \ = sun(planet1SunSunSunSunSun)\n\tlet planet2SunSunSunSun = sun(planet2SunSunSunSun)\n\
    \tlet planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSunSun)\n\tlet planet2SunSunSunSunOrbit\
    \ = orbit(planet2SunSunSunSun)\n\tlet planet1SunSunSunSunSun = ", "    let planet1\
    \ = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n    let\
    \ planet1orbit = planet1orbits[planet1];\n    let planet2orbit = planet2orbits[planet2];\n\
    \    let planet1orbitorbit = planet1orbitorbits[planet1];\n    let planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n   \
    \ let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n \
    \   let planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n    let\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \    let planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \    let planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n    let planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n    let planet", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun =\
    \ sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun);\n\tlet planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2Orbit", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1OrbitToSun = planet1Orbit.minus(sun);\n  \
    \  let planet2OrbitToSun = planet2Orbit.minus(sun);\n    let planet1OrbitToPlanet2\
    \ = planet1OrbitToSun.minus(planet2OrbitToSun);\n    let planet2OrbitToPlanet1\
    \ = planet2OrbitToSun.minus(planet1OrbitToSun);\n    let planet1OrbitToPlanet1\
    \ = planet1OrbitToSun.minus(planet1OrbitToSun);\n    let planet2OrbitToPlanet2\
    \ = planet2OrbitToSun.minus(planet2OrbitToSun);\n    let planet1OrbitToPlanet2\
    \ = planet1OrbitToSun.minus(planet2OrbitToSun);\n    let planet2OrbitToPlanet1\
    \ = planet2OrbitToSun.minus(planet1OrbitToSun);\n    let planet1OrbitToPlanet1\
    \ = planet1OrbitToSun.minus(planet1OrbitToSun);\n    let planet2OrbitToPlanet2\
    \ = planet2OrbitToSun.minus(planet2OrbitToSun);\n    let planet1OrbitToPlanet1\
    \ = planet1OrbitToSun.minus(planet1OrbitToSun);\n    let planet2OrbitToPlanet1\
    \ = planet2OrbitToSun.minus(planet2OrbitToSun);\n    let planet1OrbitToPlanet1\
    \ = planet1OrbitToSun.minus(planet1OrbitToSun);\n    let planet2OrbitToPlanet2\
    \ = planet2OrbitToSun.minus(planet2OrbitToSun);\n    let planet1OrbitToPlanet1\
    \ = planet1OrbitToSun.minus(planet1OrbitToSun);\n    let planet2OrbitToPlanet1\
    \ = planet2OrbitToSun.minus(planet2OrbitToSun);\n    let planet1OrbitToPlanet2\
    \ = planet1OrbitToSun.minus(planet2OrbitToSun);\n    let planet2OrbitToPlanet1\
    \ = plan", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSunAndPlanet2 = orbit(planet1, planet2, true);\n\t\
    let planet2OrbitSunAndPlanet1 = orbit(planet2, planet1, true);\n\tlet planet1OrbitSunAndPlanet2AndPlanet1\
    \ = orbit(planet1, planet2, planet1, true);\n\tlet planet2OrbitSunAndPlanet1AndPlanet2\
    \ = orbit(planet2, planet1, planet2, true);\n\tlet planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, planet2, planet1, planet2, true);\n\tlet planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1\
    \ = orbit(planet1, planet2, planet1, planet2, planet1, true);\n\tlet planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, planet2, planet1, planet2, planet1, planet2, true);\n\tlet\
    \ planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1\
    \ = orbit(planet1, planet2, planet1, planet2, planet1, planet2, planet1, true);\n\
    \tlet planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, planet2, planet1, planet2, planet1, planet2, planet1, planet2,\
    \ true);\n\tlet planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2\
    \ = orbit(planet1, planet2, planet1, planet2, planet1, planet2, planet1, planet2,\
    \ true);\n\tlet planet1OrbitSunAndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2AndPlanet1AndPlanet2",
  "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\t\
    let planet1SunOrbit = orbit(planet1Sun);\n\tlet planet2SunOrbit = orbit(planet2Sun);\n\
    \tlet planet1OrbitSun = orbit(planet1Orbit);\n\tlet planet2OrbitSun = orbit(planet2Orbit);\n\
    \tlet planet1OrbitSunOrbit = orbit(planet1OrbitSun);\n\tlet planet2OrbitSunOrbit\
    \ = orbit(planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSun = orbit(planet1OrbitSunOrbit);\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2OrbitSunOrbit);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1OrbitSunOrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2OrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbit);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1OrbitSunOrbitSunOrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2OrbitSunOrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet1OrbitSunOrbitSunOrbitSunOrbit);\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbit = orbit(planet1OrbitSunOrbitSunOrbitSunOrbitSun);\n\
    \t", "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet2Sun);\n    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun,\
    \ planet1Sun);\n    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun);\n    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet1Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n    let\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun)\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun)\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbit = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2, plan", "  \
    \  let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1OrbitIndex\
    \ - planet2OrbitIndex;\n    let planet2OrbitDistance = planet2OrbitIndex - planet1OrbitIndex;\n\
    \    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunDistance(planet1);\n\
    \    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance(planet2);\n\
    \    let planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    let planet2OrbitDistanceToSunAndPlanet1 = planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n\
    \    let planet1OrbitDistanceToSunAndPlanet1AndPlanet2 = planet1OrbitDistanceToSunAndPlanet2\
    \ + planet2OrbitDistanceToSunAndPlanet1;\n    let planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ = planet2OrbitDistanceToSunAndPlanet1 + planet1OrbitDistanceToSunAndPlanet2;\n\
    \    let planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2 = planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ + planet2OrbitDistanceToSunAndPlanet1AndPlanet1;\n    let planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1\
    \ = planet2OrbitDistanceToSunAndPlanet1AndPlanet1 + planet1OrbitDistanceToSunAndPlanet1AndPlanet2;\n\
    \    let planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet2 = planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2\
    \ + planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1;\n    let planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet1\
    \ = planet2OrbitDistanceToSunAndPlanet", "    var planet1Orbit = orbit(planet1);\n\
    \    var planet2Orbit = orbit(planet2);\n    var planet1Sun = sunOrbit(planet1);\n\
    \    var planet2Sun = sunOrbit(planet2);\n    var planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    var planet2OrbitSun = orbit(planet2, planet2Sun);\n    var\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun);\n    var planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun);\n    var planet1OrbitSunOrbitSun =\
    \ orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun);\n    var planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun);\n    var planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    var planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    var planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit);\n\
    \    var planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbit);\n    var planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit,\
    \ planet2OrbitSunOrbit);\n    var planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun", "\tlet planet1Orbit\
    \ = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet\
    \ planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet\
    \ planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun\
    \ = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet\
    \ planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1, true);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, true);\n\tlet planet1OrbitSun = orbit(planet1,\
    \ true);\n\tlet planet2OrbitSun = orbit(planet2, true);\n\tlet planet", "  let\
    \ planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n  let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n  let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \  let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n  let planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  let planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistance",
  "  let planet1Orbit = orbit(planet1);\n  let planet2Orbit = orbit(planet2);\n  let\
    \ planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n  let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n  let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \  let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n  let planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n  let planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance;\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \  let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n\
    \    var planet1OrbitSunDistance = planet1OrbitSun.distanceTo(planet2OrbitSun);\n\
    \    var planet2OrbitSunDistance = planet2OrbitSun.distanceTo(planet1OrbitSun);\n\
    \    var planet1OrbitSunAngle = planet1OrbitSun.angleTo(planet2OrbitSun);\n  \
    \  var planet2OrbitSunAngle = planet2OrbitSun.angleTo(planet1OrbitSun);\n    var\
    \ planet1OrbitSunAngleDistance = planet1OrbitSunAngle.distanceTo(planet2OrbitSunAngle);\n\
    \    var planet2OrbitSunAngleDistance = planet2OrbitSunAngle.distanceTo(planet1OrbitSunAngle);\n\
    \    var planet1OrbitSunAngleAngle = planet1OrbitSunAngle.angleTo(planet2OrbitSunAngle);\n\
    \    var planet2OrbitSunAngleAngle = planet2OrbitSunAngle.angleTo(planet1OrbitSunAngle);\n\
    \    var planet1OrbitSunAngleAngleDistance = planet1OrbitSunAngleAngle.distanceTo(planet2OrbitSunAngleAngle);\n\
    \    var planet2OrbitSunAngleAngleDistance = planet2OrbitSunAngleAngle.distanceTo(planet1OrbitSunAngleAngle);\n\
    \    var planet1OrbitSunAngleAngleAngle = planet1OrbitSunAngleAngle.angleTo(planet2OrbitSunAngleAngle);\n\
    \    var planet2OrbitSunAngleAngleAngle = planet2OrbitSunAngleAngle.angleTo(planet1OrbitSunAngleAngle);\n\
    \    var planet1OrbitSunAngleAngleAngleDistance = planet1OrbitSunAngleAngleAngle.distanceTo(planet2OrbitSunAngleAngleDistance);\n\
    \    var planet2OrbitSunAngleAngleDistance = planet2OrbitSunAngleAngle.distanceTo(planet1OrbitSunAngleAngleDistance);\n\
    \    var planet1OrbitSunAngleAngleAngleDistance = planet1OrbitSunAngleAngleAngle.distanceTo(planet2OrbitSunAngleAngleDistance);\n\
    \    var ", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).length;\n\
    \    var planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).length;\n\
    \    var planet1OrbitDistanceToSun = planet1OrbitDistance - sunDistance(planet1);\n\
    \    var planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance(planet2);\n\
    \    var planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet1 = planet1OrbitDistanceToSun - planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet3 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet4 = planet1OrbitDistanceToSun - planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet5 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet6 = planet1OrbitDistanceToSun - planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet7 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet8 = planet1OrbitDistanceToSun - planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet9 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet10 = planet1OrbitDistanceToSun - planet2OrbitDistanceToSun;\n\
    \    var planet1OrbitDistanceToSunAndPlanet11 = planet1OrbitDistanceToSun + planet2OrbitDistanceToSun;\n\
    \    var plan", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun\
    \ = sunOrbit(planet2);\n    let planet1SunOrbit = planet1Orbit.filter(x => x.name\
    \ === planet1Sun.name);\n    let planet2SunOrbit = planet2Orbit.filter(x => x.name\
    \ === planet2Sun.name);\n    let planet1SunOrbitProximity = planet1Orbit.filter(x\
    \ => x.name === planet1Sun.name).map(x => x.distanceTo(planet1Sun)).sort((a,b)\
    \ => a-b);\n    let planet2SunOrbitProximity = planet2Orbit.filter(x => x.name\
    \ === planet2Sun.name).map(x => x.distanceTo(planet2Sun)).sort((a,b) => a-b);\n\
    \    let planet1SunOrbitProximityProximity = planet1Orbit.filter(x => x.name ===\
    \ planet1Sun.name).map(x => x.distanceTo(planet2Sun)).sort((a,b) => b-a);\n  \
    \  let planet2SunOrbitProximityProximity = planet2Orbit.filter(x => x.name ===\
    \ planet2Sun.name).map(x => x.distanceTo(planet1Sun)).sort((a,b) => b-a);\n  \
    \  let planet1SunOrbitProximityProximityProximity = planet1Orbit.filter(x => x.name\
    \ === planet1Sun.name).map(x => x.distanceTo(planet2Sun)).sort((a,b) => b-a);\n\
    \    let planet2SunOrbitProximityProximityProximity = planet2Orbit.filter(x =>\
    \ x.name === planet2Sun.name).map(x => x.distanceTo(planet1Sun)).sort((a,b) =>\
    \ b-a);\n    let planet1SunOrbitProximityProximityProximityProximity = planet1Orbit.filter(x\
    \ => x.name === planet1Sun.name).map(x => x.distanceTo(planet2Sun)).sort((a,b)\
    \ => b-a);\n    let planet2SunOrbitProximityProximityProximityProximity = planet2Orbit.filter(x\
    \ => x.name === planet2Sun.name).map(x => x.distanceTo(planet1Sun)).sort((a",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2,\
    \ true)\n    let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun\
    \ = orbit(planet2, true)\n    let planet1OrbitSun = orbit(planet1, true)\n   \
    \ let planet2OrbitSun = orbit(planet2, true)\n    let planet1OrbitSun = orbit(planet1,\
    \ true)\n    let planet2OrbitSun = orbit(planet2, true)\n    let planet1OrbitSun\
    \ = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2, true)\n   \
    \ let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2,\
    \ true)\n    let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun\
    \ = orbit(planet2, true)\n    let planet1OrbitSun = orbit(planet1, true)\n   \
    \ let planet2OrbitSun = orbit(planet2, true)\n    let planet1OrbitSun = orbit(planet1,\
    \ true)\n    let planet2OrbitSun = orbit(planet2, true)\n    let planet1OrbitSun\
    \ = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2, true)\n   \
    \ let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2,\
    \ true)\n    let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun\
    \ = orbit(planet2, true)\n    let planet1OrbitSun = orbit(planet1, true)\n   \
    \ let planet2OrbitSun = orbit(planet2, true)\n    let planet1OrbitSun = orbit(planet1,\
    \ true)\n    let planet2OrbitSun = orbit(planet2, true)\n    let planet1OrbitSun\
    \ = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2, true)\n   \
    \ let planet1OrbitSun = orbit(planet1, true)\n    let planet2OrbitSun = orbit(planet2,\
    \ true)\n    let planet1Orbit", "    let planet1Orbit = planet1Orbit(planet1);\n\
    \    let planet2Orbit = planet2Orbit(planet2);\n    let planet1Orbits = planet1Orbits(planet1);\n\
    \    let planet2Orbits = planet2Orbits(planet2);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit < planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit < planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit > planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit > planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit < planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit < planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit > planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit > planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit < planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit < planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit > planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit > planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit < planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit < planet1Orbit);\n    let planet1Orbits = planet1Orbits.filter(orbit\
    \ => orbit > planet2Orbit);\n    let planet2Orbits = planet2Orbits.filter(orbit\
    \ => orbit > planet1Orbit);\n    let planet1Orbits = planet1Orbit", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sun(planet1);\n    let planet2Sun = sun(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun);\n    let planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sun(planet1Orbit);\n    let planet2Sun = sun(planet2Orbit);\n\
    \    let planet1OrbitSun = orbit(planet1Orbit);\n    let planet2OrbitSun = orbit(planet2Orbit);\n\
    \    let planet1OrbitSunDistance = distance(planet1OrbitSun, planet1Sun);\n  \
    \  let planet2OrbitSunDistance = distance(planet2OrbitSun, planet2Sun);\n    let\
    \ planet1OrbitSunDistanceSorted = sortByDistance(planet1OrbitSunDistance);\n \
    \   let planet2OrbitSunDistanceSorted = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted2 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted2 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted3 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted3 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted4 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted4 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted5 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted5 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted6 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted6 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted7 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted7 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistanceSorted8 = sortByDistance(planet1OrbitSunDistance);\n\
    \    let planet2OrbitSunDistanceSorted8 = sortByDistance(planet2OrbitSunDistance);\n\
    \    let planet1OrbitSunDistance", "\tlet planet1Orbit = orbit(planet1);\n\tlet\
    \ planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sun(planet1);\n\tlet planet2Sun\
    \ = sun(planet2);\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet\
    \ planet2OrbitSun = orbit(planet2, planet2Sun);\n\tlet planet1OrbitSunOrbit =\
    \ orbit(planet1, planet1Sun, planet2Sun);\n\tlet planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1OrbitToSun = planet1Orbit.orbitToSun();\n\
    \    let planet2OrbitToSun = planet2Orbit.orbitToSun();\n    let planet1OrbitToSunDistance\
    \ = planet1OrbitToSun.distanceTo(planet2OrbitToSun);\n    let planet2OrbitToSunDistance\
    \ = planet2OrbitToSun.distanceTo(planet1OrbitToSun);\n    let planet1OrbitToSunDistanceSorted\
    \ = planet1OrbitToSun.sort();\n    let planet2OrbitToSunDistanceSorted = planet2OrbitToSun.sort();\n\
    \    let planet1OrbitToSunDistanceSortedIndex = planet1OrbitToSunDistanceSorted.indexOf(planet1OrbitToSunDistance);\n\
    \    let planet2OrbitToSunDistanceSortedIndex = planet2OrbitToSunDistanceSorted.indexOf(planet2OrbitToSunDistance);\n\
    \    let planet1OrbitToSunDistanceSortedIndex2 = planet1OrbitToSunDistanceSortedIndex\
    \ + 1;\n    let planet2OrbitToSunDistanceSortedIndex2 = planet2OrbitToSunDistanceSortedIndex\
    \ + 1;\n    let planet1OrbitToSunDistanceSortedIndex3 = planet1OrbitToSunDistanceSortedIndex2\
    \ + 1;\n    let planet2OrbitToSunDistanceSortedIndex3 = planet2OrbitToSunDistanceSortedIndex2\
    \ + 1;\n    let planet1OrbitToSunDistanceSortedIndex4 = planet1OrbitToSunDistanceSortedIndex3\
    \ + 1;\n    let planet2OrbitToSunDistanceSortedIndex4 = planet2OrbitToSunDistanceSortedIndex3\
    \ + 1;\n    let planet1OrbitToSunDistanceSortedIndex5 = planet1OrbitToSunDistanceSortedIndex4\
    \ + 1;\n    let planet2OrbitToSunDistanceSortedIndex5 = planet2OrbitToSunDistanceSortedIndex4\
    \ + 1;\n    let planet1OrbitToSunDistanceSortedIndex6 = planet1OrbitToSunDistanceSortedIndex5\
    \ + 1;\n    let planet2OrbitToSunDistanceSortedIndex6 = planet2OrbitToSunDistanceSortedIndex5\
    \ + 1;\n    let planet1OrbitToSunDistanceSortedIndex7 = planet1OrbitToSunDistanceSortedIndex6\
    \ + 1;\n    let planet2OrbitTo", "\tlet planet1Orbit = orbit(planet1);\n\tlet\
    \ planet2Orbit = orbit(planet2);\n\tlet planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \tlet planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n\tlet planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n\tlet planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n\tlet planet1OrbitDistanceAbs = Math.abs(planet1OrbitDistance);\n\
    \tlet planet2OrbitDistanceAbs = Math.abs(planet2OrbitDistance);\n\tlet planet1OrbitDistanceAbsMin\
    \ = planet1OrbitDistanceAbs < 0 ? 0 : planet1OrbitDistanceAbs;\n\tlet planet2OrbitDistanceAbsMin\
    \ = planet2OrbitDistanceAbs < 0 ? 0 : planet2OrbitDistanceAbs;\n\tlet planet1OrbitDistanceAbsMax\
    \ = planet1OrbitDistanceAbs > 0 ? 0 : planet1OrbitDistanceAbs;\n\tlet planet2OrbitDistanceAbsMax\
    \ = planet2OrbitDistanceAbs > 0 ? 0 : planet2OrbitDistanceAbs;\n\tlet planet1OrbitDistanceAbsMaxMin\
    \ = planet1OrbitDistanceAbsMax < planet1OrbitDistanceAbsMin ? planet1OrbitDistanceAbsMax\
    \ : planet1OrbitDistanceAbsMin;\n\tlet planet2OrbitDistanceAbsMaxMin = planet2OrbitDistanceAbsMax\
    \ < planet2OrbitDistanceAbsMin ? planet2OrbitDistanceAbsMax : planet2OrbitDistanceAbsMin;\n\
    \tlet planet1OrbitDistanceAbsMaxMinMin = planet1OrbitDistanceAbsMaxMin < planet1OrbitDistanceAbsMin\
    \ ? planet1OrbitDistanceAbsMaxMin : planet1OrbitDistanceAbsMin;\n\tlet planet2OrbitDistanceAbsMaxMinMin\
    \ = planet2OrbitDistanceAbsMaxMin < planet2OrbitDistanceAbsMin ? planet2OrbitDistanceAbsMaxMin\
    \ : planet2OrbitDistanceAbsMin;\n\tlet planet1OrbitDistanceAbsMaxMinMinMin = plan",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet1)\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet2)\n    let planet1OrbitDistance = planet1Orbit[planet1OrbitIndex].distance\n\
    \    let planet2OrbitDistance = planet2Orbit[planet2OrbitIndex].distance\n   \
    \ let planet1OrbitDistanceSquared = planet1OrbitDistance * planet1OrbitDistance\n\
    \    let planet2OrbitDistanceSquared = planet2OrbitDistance * planet2OrbitDistance\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance = planet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquared\n    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared\n    let\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\n\
    \    let planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ - planet2OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\n\
    \    let planet1OrbitDistanceSquaredMinusPlan", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun();\n    let\
    \ planet2Sun = sun();\n    let planet1OrbitSun = orbit(planet1, planet1Sun);\n\
    \    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let planet1OrbitPlanet2\
    \ = orbit(planet1, planet2OrbitSun);\n    let planet2OrbitPlanet1 = orbit(planet2,\
    \ planet1OrbitSun);\n    let planet1OrbitPlanet1Sun = orbit(planet1, planet1OrbitSun);\n\
    \    let planet2OrbitPlanet1Sun = orbit(planet2, planet2OrbitSun);\n    let planet1OrbitPlanet2Sun\
    \ = orbit(planet1, planet2OrbitSun);\n    let planet2OrbitPlanet2Sun = orbit(planet2,\
    \ planet1OrbitSun);\n    let planet1OrbitPlanet1Planet2 = orbit(planet1, planet2OrbitPlanet2Sun);\n\
    \    let planet2OrbitPlanet1Planet1 = orbit(planet2, planet1OrbitPlanet2Sun);\n\
    \    let planet1OrbitPlanet2Planet1 = orbit(planet1, planet2OrbitPlanet1Sun);\n\
    \    let planet2OrbitPlanet2Planet1 = orbit(planet2, planet1OrbitPlanet1Sun);\n\
    \    let planet1OrbitPlanet1Planet1Sun = orbit(planet1, planet1OrbitPlanet1Sun);\n\
    \    let planet2OrbitPlanet1Planet1Sun = orbit(planet2, planet2OrbitPlanet1Sun);\n\
    \    let planet1OrbitPlanet2Planet1Sun = orbit(planet1, planet2OrbitPlanet1Sun);\n\
    \    let planet2OrbitPlanet2Planet1Sun = orbit(planet2, planet1OrbitPlanet1Sun);\n\
    \    let planet1OrbitPlanet1Planet2Sun = orbit(planet1, planet2OrbitPlanet1Sun);\n\
    \    let planet2OrbitPlanet1Planet2Sun = orbit(planet2, planet2OrbitPlanet1Sun",
  "\tlet planet1 = planet1.toLowerCase();\n\tlet planet2 = planet2.toLowerCase();\n\
    \tlet planet1orbit = planet1.includes(\"mercury\") || planet1.includes(\"venus\"\
    ) || planet1.includes(\"earth\") || planet1.includes(\"mars\") || planet1.includes(\"\
    jupiter\") || planet1.includes(\"saturn\") || planet1.includes(\"uranus\") ||\
    \ planet1.includes(\"neptune\");\n\tlet planet2orbit = planet2.includes(\"mercury\"\
    ) || planet2.includes(\"venus\") || planet2.includes(\"earth\") || planet2.includes(\"\
    mars\") || planet2.includes(\"jupiter\") || planet2.includes(\"saturn\") || planet2.includes(\"\
    uranus\") || planet2.includes(\"neptune\");\n\tlet planet1orbitorbit = planet1orbit\
    \ && planet2orbit;\n\tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\
    \tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit\
    \ = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit = planet1orbit\
    \ && planet2orbitorbit;\n\tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\
    \tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit\
    \ = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit = planet1orbit\
    \ && planet2orbitorbit;\n\tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\
    \tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit\
    \ = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit = planet1orbit\
    \ && planet2orbitorbit;\n\tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\
    \tlet planet1orbitorbit = planet1orbit && planet2orbitorbit;\n\tlet planet1orbitorbit\
    \ = planet1or", "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit =\
    \ orbit(planet2)\n    let planet1Sun = sunOrbit(planet1)\n    let planet2Sun =\
    \ sunOrbit(planet2)\n    let planet1OrbitSun = orbit(planet1, planet1Sun)\n  \
    \  let planet2OrbitSun = orbit(planet2, planet2Sun)\n    let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun)\n    let planet2OrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2, plan", "  \
    \  let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1Sun = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n\
    \    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun =\
    \ orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSunOrbitSun,\
    \ planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbitSun,\
    \ planet2OrbitSunOrbitSun, planet1OrbitSun", "\tlet planet1Orbit = orbit(planet1);\n\
    \tlet planet2Orbit = orbit(planet2);\n\tlet planet1Sun = sun();\n\tlet planet2Sun\
    \ = sun();\n\tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun\
    \ = orbit(planet2, planet2Sun);\n\tlet planet1OrbitPlanet2 = orbit(planet1, planet2);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet1);\n\tlet planet1OrbitPlanet1Sun\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun);\n\tlet planet2OrbitPlanet1Sun\
    \ = orbit(planet2, planet2Sun, planet2OrbitSun);\n\tlet planet1OrbitPlanet2Sun\
    \ = orbit(planet1, planet2, planet1Sun, planet2Sun);\n\tlet planet2OrbitPlanet2Sun\
    \ = orbit(planet2, planet1, planet2Sun, planet1Sun);\n\tlet planet1OrbitPlanet1Planet2\
    \ = orbit(planet1, planet2, planet1, planet2);\n\tlet planet2OrbitPlanet1Planet1\
    \ = orbit(planet2, planet1, planet2, planet1);\n\tlet planet1OrbitPlanet1Planet1Sun\
    \ = orbit(planet1, planet2, planet1, planet1Sun, planet2OrbitSun);\n\tlet planet2OrbitPlanet1Planet1Sun\
    \ = orbit(planet2, planet1, planet2, planet1Sun, planet1OrbitSun);\n\tlet planet1OrbitPlanet1Planet2Sun\
    \ = orbit(planet1, planet2, planet1, planet2, planet1Sun, planet2OrbitSun);\n\t\
    let planet2OrbitPlanet1Planet2Sun = orbit(planet2, planet1, planet2, planet1Sun,\
    \ planet1OrbitSun, planet2OrbitSun);\n\tlet planet1OrbitPlanet1Planet1Planet2\
    \ = orbit(planet1, planet2, planet1, planet2, planet1, planet2);\n\tlet planet2",
  "  let planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let\
    \ planet1Sun = sunOrbit(planet1)\n  let planet2Sun = sunOrbit(planet2)\n  let\
    \ planet1SunOrbit = planet1Orbit.filter(planet => planet === planet1Sun)\n  let\
    \ planet2SunOrbit = planet2Orbit.filter(planet => planet === planet2Sun)\n  let\
    \ planet1SunOrbitSorted = planet1SunOrbit.sort((a, b) => a - b)\n  let planet2SunOrbitSorted\
    \ = planet2SunOrbit.sort((a, b) => a - b)\n  let planet1SunOrbitSortedSorted =\
    \ planet1SunOrbitSorted.sort((a, b) => a - b)\n  let planet2SunOrbitSortedSorted\
    \ = planet2SunOrbitSorted.sort((a, b) => a - b)\n  let planet1SunOrbitSortedSortedSorted\
    \ = planet1SunOrbitSortedSorted.sort((a, b) => a - b)\n  let planet2SunOrbitSortedSortedSorted\
    \ = planet2SunOrbitSortedSorted.sort((a, b) => a - b)\n  let planet1SunOrbitSortedSortedSortedSorted\
    \ = planet1SunOrbitSortedSortedSorted.sort((a, b) => a - b)\n  let planet2SunOrbitSortedSortedSortedSorted\
    \ = planet2SunOrbitSortedSortedSorted.sort((a, b) => a - b)\n  let planet1SunOrbitSortedSortedSortedSortedSorted\
    \ = planet1SunOrbitSortedSortedSortedSortedSorted.sort((a, b) => a - b)\n  let\
    \ planet2SunOrbitSortedSortedSortedSortedSorted = planet2SunOrbitSortedSortedSortedSortedSorted.sort((a,\
    \ b) => a - b)\n  let planet1SunOrbitSortedSortedSortedSortedSortedSorted = planet1SunOrbitSortedSortedSortedSortedSortedSorted.sort((a,\
    \ b) => a - b)\n  let planet2SunOrbitSortedSortedSortedSortedSortedSorted = planet2SunOrbitSortedSortedSortedSortedSortedSorted.sort((a,\
    \ b) => a - b)\n  let planet1SunOrbitSortedSortedSortedSortedSortedSortedSorted\
    \ = planet1SunOrbitSortedSortedSortedSortedSortedSortedSorted.sort((a, b) => a\
    \ - b)\n  let planet2SunOrbitSortedSortedSortedSortedSortedSortedSorted = planet2SunOrbitSortedSortedSortedSortedSortedSortedSor",
  "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).length;\n\
    \    let planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).length;\n\
    \    let planet1OrbitDistanceToSun = planet1OrbitDistance - sunDistance(planet1);\n\
    \    let planet2OrbitDistanceToSun = planet2OrbitDistance - sunDistance(planet2);\n\
    \    let planet1OrbitDistanceToSunOrbit = planet1OrbitDistanceToSun / planet1Orbit.length;\n\
    \    let planet2OrbitDistanceToSunOrbit = planet2OrbitDistanceToSun / planet2Orbit.length;\n\
    \    let planet1OrbitDistanceToSunOrbitIndex = planet1Orbit.indexOf(planet2Orbit);\n\
    \    let planet2OrbitDistanceToSunOrbitIndex = planet2Orbit.indexOf(planet1Orbit);\n\
    \    let planet1OrbitDistanceToSunOrbitDistance = planet1OrbitDistanceToSunOrbit\
    \ - sunDistance(planet1);\n    let planet2OrbitDistanceToSunOrbitDistance = planet2OrbitDistanceToSunOrbit\
    \ - sunDistance(planet2);\n    let planet1OrbitDistanceToSunOrbitDistanceIndex\
    \ = planet1Orbit.indexOf(planet2OrbitDistanceToSunOrbit);\n    let planet2OrbitDistanceToSunOrbitDistanceIndex\
    \ = planet2Orbit.indexOf(planet1OrbitDistanceToSunOrbit);\n    let planet1OrbitDistanceToSunOrbitDistanceIndex\
    \ = planet1Orbit.indexOf(planet2OrbitDistanceToSunOrbitDistance);\n    let planet2OrbitDistanceToSunOrbitDistanceIndex\
    \ = planet2Orbit.indexOf(planet1OrbitDistanceToSunOrbitDistance);\n    let planet1OrbitDistanceToSunOrbitDistanceIndex\
    \ = planet1Orbit.indexOf(planet2OrbitDistanceToSunOrbitDistanceIndex);\n    let\
    \ planet2OrbitDistanceToSunOrbitDistanceIndex = planet2Orbit.indexOf(plan", " \
    \   var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitDistance = distance(planet1Orbit);\n    var planet2OrbitDistance\
    \ = distance(planet2Orbit);\n    var planet1OrbitDistanceToSun = planet1OrbitDistance\
    \ - sun.distance;\n    var planet2OrbitDistanceToSun = planet2OrbitDistance -\
    \ sun.distance;\n    var planet1OrbitDistanceToSunAndPlanet2 = planet1OrbitDistanceToSun\
    \ + planet2OrbitDistanceToSun;\n    var planet2OrbitDistanceToSunAndPlanet1 =\
    \ planet2OrbitDistanceToSun + planet1OrbitDistanceToSun;\n    var planet1OrbitDistanceToSunAndPlanet1AndPlanet2\
    \ = planet1OrbitDistanceToSunAndPlanet2 + planet2OrbitDistanceToSunAndPlanet1;\n\
    \    var planet2OrbitDistanceToSunAndPlanet1AndPlanet1 = planet2OrbitDistanceToSunAndPlanet1\
    \ + planet1OrbitDistanceToSunAndPlanet2;\n    var planet1OrbitDistanceToSunAndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet2 + planet2OrbitDistanceToSunAndPlanet1AndPlanet1;\n\
    \    var planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSunAndPlanet1AndPlanet2;\n    var planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2AndPlanet3\
    \ = planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2 + planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1;\n\
    \    var planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet2 = planet2OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1\
    \ + planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet2;\n    var planet1OrbitDistanceToSunAndPlanet1AndPlanet1AndPlanet1AndPlanet",
  "    let planet1Orbit = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n\
    \    let planet1Sun = sun(planet1)\n    let planet2Sun = sun(planet2)\n    let\
    \ planet1OrbitSun = orbit(planet1, planet1Sun)\n    let planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbit =\
    \ orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun, planet1OrbitSun)\n    let planet1OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n    let planet2OrbitSunOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \    let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2, planet2Sun, ",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitLength = planet1Orbit.length;\n\
    \    var planet2OrbitLength = planet2Orbit.length;\n    var planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n    var planet1OrbitDistanceAbs = Math.abs(planet1OrbitDistance);\n\
    \    var planet2OrbitDistanceAbs = Math.abs(planet2OrbitDistance);\n    var planet1OrbitDistanceAbsMin\
    \ = planet1OrbitDistanceAbs < 0 ? planet1OrbitDistance : planet1OrbitDistance\
    \ * -1;\n    var planet2OrbitDistanceAbsMin = planet2OrbitDistanceAbs < 0 ? planet2OrbitDistance\
    \ : planet2OrbitDistance * -1;\n    var planet1OrbitDistanceAbsMax = planet1OrbitDistanceAbs\
    \ > 0 ? planet1OrbitDistance : planet1OrbitDistance * -1;\n    var planet2OrbitDistanceAbsMax\
    \ = planet2OrbitDistanceAbs > 0 ? planet2OrbitDistance : planet2OrbitDistance\
    \ * -1;\n    var planet1OrbitDistanceAbsMaxMin = planet1OrbitDistanceAbsMax <\
    \ planet1OrbitDistanceAbs ? planet1OrbitDistanceAbsMax : planet1OrbitDistanceAbsMax\
    \ * -1;\n    var planet2OrbitDistanceAbsMaxMin = planet2OrbitDistanceAbsMax <\
    \ planet2OrbitDistanceAbs ? planet2OrbitDistanceAbsMax : planet2OrbitDistanceAbsMax\
    \ * -1;\n    var planet1OrbitDistanceAbsMaxMinMin = planet1OrbitDistanceAbsMaxMin\
    \ < planet1OrbitDistanceAbsMin ? planet1OrbitDistanceAbsMaxMin : planet1OrbitDistanceAbsMaxMin\
    \ * -1;\n    var planet2OrbitDistanceAbsMaxMinMin = planet2OrbitDistanceAbsMaxMin\
    \ < planet2OrbitDistanceAbsMin ? planet", "\tlet planet1 = planet1.toLowerCase();\n\
    \tlet planet2 = planet2.toLowerCase();\n\tlet planet1orbit = planet1orbits[planet1];\n\
    \tlet planet2orbit = planet2orbits[planet2];\n\tlet planet1orbitorbit = planet1orbitorbits[planet1];\n\
    \tlet planet2orbitorbit = planet2orbitorbits[planet2];\n\tlet planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit\
    \ = planet2orbitorbitorbits[planet2];\n\tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\tlet planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit\
    \ = planet2orbitorbitorbits[planet2];\n\tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\tlet planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit\
    \ = planet2orbitorbitorbits[planet2];\n\tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\tlet planet1orbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n\tlet planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \tlet planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\tlet planet",
  "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    var planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance = planet1Orbit[planet1OrbitIndex];\n\
    \    var planet2OrbitDistance = planet2Orbit[planet2OrbitIndex];\n    var planet1OrbitDistanceSquared\
    \ = planet1OrbitDistance * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared\
    \ = planet2OrbitDistance * planet2OrbitDistance;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquared;\n    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquared - planet2OrbitDistanceSquaredSquared;\n    var\
    \ planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistance - planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquared;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared\
    \ = planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquared - planet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistance;\n\
    \    var planet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistanceSquaredMinusPlanet2OrbitDistanceSquaredMinusPlanet1OrbitDistance\
    \ = planet1", "    var planet1 = planet1.toLowerCase();\n    var planet2 = planet2.toLowerCase();\n\
    \    var planet1orbit = planet1.substring(0,2);\n    var planet2orbit = planet2.substring(0,2);\n\
    \    var planet1orbitorbit = planet1.substring(2,4);\n    var planet2orbitorbit\
    \ = planet2.substring(2,4);\n    var planet1orbitorbitorbit = planet1.substring(4,6);\n\
    \    var planet2orbitorbitorbit = planet2.substring(4,6);\n    var planet1orbitorbitorbitorbit\
    \ = planet1.substring(6,8);\n    var planet2orbitorbitorbit = planet2.substring(6,8);\n\
    \    var planet1orbitorbitorbitorbit = planet1.substring(8,10);\n    var planet2orbitorbitorbit\
    \ = planet2.substring(8,10);\n    var planet1orbitorbitorbitorbit = planet1.substring(10,12);\n\
    \    var planet2orbitorbitorbit = planet2.substring(10,12);\n    var planet1orbitorbitorbitorbit\
    \ = planet1.substring(12,14);\n    var planet2orbitorbitorbit = planet2.substring(12,14);\n\
    \    var planet1orbitorbitorbitorbit = planet1.substring(14,16);\n    var planet2orbitorbitorbit\
    \ = planet2.substring(14,16);\n    var planet1orbitorbitorbitorbit = planet1.substring(16,18);\n\
    \    var planet2orbitorbitorbit = planet2.substring(16,18);\n    var planet1orbitorbitorbitorbit\
    \ = planet1.substring(18,20);\n    var planet2orbitorbitorbit = planet2.substring(18,20);\n\
    \    var planet1orbitorbitorbitorbit = planet1.substring(20,22);\n    var planet2orbitorbitorbit\
    \ = planet2.substring(20,22);\n    var planet1orbitorbitorbitorbit = planet1.substring(22,24);\n\
    \    var planet2orbitorbitorbit = planet2.substring(22,24);\n    var planet1orbitorbitorbitorbit\
    \ = planet1.substring(24,26);\n    var planet2orbitorbitorbit = planet2.substring(24,26);\n\
    \    var planet1orbitorbitorbitorbit = planet1.substring(26,28);\n    var planet2orbitorbitorbit\
    \ = planet2.substring(26,28);\n    var planet1orbitorbitorbitorbit = planet1.substring(28,30);\n\
    \    var planet2orbitorbitorbit = planet2.substring(28,30);\n    var planet1orbitorbitorbitorbit\
    \ = planet1.substring(30,32);\n    var planet2orbitorbitorbit = planet", "  let\
    \ planet1Orbit = orbit(planet1)\n  let planet2Orbit = orbit(planet2)\n  let planet1Sun\
    \ = sunOrbit(planet1)\n  let planet2Sun = sunOrbit(planet2)\n  let planet1Planets\
    \ = planetsBetween(planet1Orbit, planet1Sun)\n  let planet2Planets = planetsBetween(planet2Orbit,\
    \ planet2Sun)\n  let planet1PlanetsSorted = sortPlanets(planet1Planets)\n  let\
    \ planet2PlanetsSorted = sortPlanets(planet2Planets)\n  let planet1PlanetsSortedAndPlanet2PlanetsSorted\
    \ = planet1PlanetsSorted.concat(planet2PlanetsSorted)\n  let planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSorted\
    \ = planet1PlanetsSortedAndPlanet2PlanetsSorted.concat(planet1PlanetsSorted)\n\
    \  let planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSorted\
    \ = planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSorted.concat(planet2PlanetsSorted)\n\
    \  let planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSorted\
    \ = planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSorted.concat(planet1PlanetsSorted)\n\
    \  let planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSorted\
    \ = planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSorted\n\
    \  let planet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1PlanetsSortedAndPlanet2PlanetsSortedAndPlanet1Plan",
  "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\tlet\
    \ planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\tlet\
    \ planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun)\n\tlet\
    \ planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun)\n\
    \tlet planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun, planet1Sun)\n\
    \tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1OrbitSun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2OrbitSun, planet2Sun, planet1OrbitSun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbitSunOrbitSun = ",
  "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1orbit = orbits[planet1];\n    let planet2orbit = orbits[planet2];\n\
    \    let planet1orbitorbit = orbits[planet1orbit];\n    let planet2orbitorbit\
    \ = orbits[planet2orbit];\n    let planet1orbitorbitorbit = orbits[planet1orbitorbit];\n\
    \    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    let\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    let\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    let\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    let\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbits[planet1orbitorbitorbit];\n    let\
    \ planet2orbitorbitorbit = orbits[planet2orbitorbit];\n    let planet1orbitorbitorbitorbit\
    \ = orbits[planet1orbitorbitorbit];\n    let planet2orbitorbitorbit = orbits[planet2orbitorbit];\n\
    \    let planet1orbitorbitorbitorbit = orbit", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1OrbitSun = planet1Orbit.sun;\n\
    \    let planet2OrbitSun = planet2Orbit.sun;\n    let planet1OrbitSunDistance\
    \ = planet1OrbitSun.distance(planet2OrbitSun);\n    let planet2OrbitSunDistance\
    \ = planet2OrbitSun.distance(planet1OrbitSun);\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared\
    \ = planet1OrbitSunDistance * planet1OrbitSunDistance;\n    let planet2OrbitSunDistanceSquared\
    \ = planet2OrbitSunDistance * planet2OrbitSunDistance;\n    let planet1OrbitSunDistanceSquared",
  "\tlet planet1 = planet1.toLowerCase();\n\tlet planet2 = planet2.toLowerCase();\n\
    \tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\t\
    let planet1Sun = sun(planet1);\n\tlet planet2Sun = sun(planet2);\n\tlet planet1SunOrbit\
    \ = orbit(planet1Sun);\n\tlet planet2SunOrbit = orbit(planet2Sun);\n\tlet planet1SunSun\
    \ = sun(planet1Sun);\n\tlet planet2SunSun = sun(planet2Sun);\n\tlet planet1SunSunOrbit\
    \ = orbit(planet1SunSun);\n\tlet planet2SunSunOrbit = orbit(planet2SunSun);\n\t\
    let planet1SunSunSun = sun(planet1SunSun);\n\tlet planet2SunSunSun = sun(planet2SunSun);\n\
    \tlet planet1SunSunSunOrbit = orbit(planet1SunSunSun);\n\tlet planet2SunSunSunOrbit\
    \ = orbit(planet2SunSunSun);\n\tlet planet1SunSunSunSun = sun(planet1SunSunSun);\n\
    \tlet planet2SunSunSunSun = sun(planet2SunSunSun);\n\tlet planet1SunSunSunSunOrbit\
    \ = orbit(planet1SunSunSunSun);\n\tlet planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun);\n\
    \tlet planet1SunSunSunSun = sun(planet1SunSunSunSun);\n\tlet planet2SunSunSunSun\
    \ = sun(planet2SunSunSunSun);\n\tlet planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun);\n\
    \tlet planet2SunSunSunSunOrbit = orbit(planet2SunSunSunSun);\n\tlet planet1SunSunSunSun\
    \ = sun(planet1SunSunSunSun);\n\tlet planet2SunSunSunSun = sun(planet2SunSunSunSun);\n\
    \tlet planet1SunSunSunSunOrbit = orbit(planet1SunSunSunSun);\n\tlet planet2SunSunSunSunOrbit\
    \ = orbit(planet2", "    let planet1Orbit = orbit(planet1);\n    let planet2Orbit\
    \ = orbit(planet2);\n    let planet1Sun = sun(planet1);\n    let planet2Sun =\
    \ sun(planet2);\n    let planet1OrbitSun = orbit(planet1, planet1Sun);\n    let\
    \ planet2OrbitSun = orbit(planet2, planet2Sun);\n    let planet1OrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun);\n    let planet2OrbitSunOrbit = orbit(planet2,\
    \ planet2Sun, planet1Sun);\n    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun);\n    let planet2OrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitSunOrbitSunOrbitSun = orbit(planet2,\
    \ planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1",
  "  var planet1 = planet1.toLowerCase();\n  var planet2 = planet2.toLowerCase();\n\
    \  var planet1orbit = planet1orbits[planet1];\n  var planet2orbit = planet2orbits[planet2];\n\
    \  var planet1orbitorbit = planet1orbitorbits[planet1];\n  var planet2orbitorbit\
    \ = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbit = planet1orbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbits[planet1];\n  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var\
    \ planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n  var\
    \ planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n  var planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbitorbits[planet1];\n  var planet2orbitorbitorbit = planet2orbitorbitorbits[planet2];\n\
    \  var planet1orbitorbitorbitorbit = planet1orbitorbitorbitorbits[planet1];\n\
    \  var planet2", "\tlet planet1Orbit = orbit(planet1)\n\tlet planet2Orbit = orbit(planet2)\n\
    \tlet planet1Sun = sunOrbit(planet1)\n\tlet planet2Sun = sunOrbit(planet2)\n\t\
    let planet1OrbitSun = orbit(planet1, planet1Sun)\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun)\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun)\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun)\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun)\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun)\n\tlet planet2OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2Orbit", "    let planet1Orbit\
    \ = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n    let planet1Sun\
    \ = sunOrbit(planet1);\n    let planet2Sun = sunOrbit(planet2);\n    let planet1OrbitSun\
    \ = orbit(planet1, planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n\
    \    let planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun);\n\
    \    let planet1OrbitSunOrbitSun = orbit(planet1, planet1Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitSun = orbit(planet2, planet2Sun,\
    \ planet2OrbitSun, planet1OrbitSun);\n    let planet1OrbitSunOrbitSunOrbit = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit);\n    let\
    \ planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSunOrbit);\n    let planet1OrbitSunOrbitSunOrbitSun = orbit(planet1,\
    \ planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit, planet2OrbitSunOrbit);\n\
    \    let planet2OrbitSunOrbitSunOrbitSun = orbit(planet2, planet2Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSunOrbit, planet1OrbitSunOrbitSun);\n    let planet1OrbitSunOrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSunOrbit,\
    \ planet2OrbitSunOrbit, planet1OrbitSunOrbitSunOrbit);\n    let planet2OrbitSunOrbitSunOrbit",
  "  if(planet1 == \"Mercury\" || planet1 == \"Venus\" || planet1 == \"Earth\" ||\
    \ planet1 == \"Mars\" || planet1 == \"Jupiter\" || planet1 == \"Saturn\" || planet1\
    \ == \"Uranus\" || planet1 == \"Neptune\"){\n    if(planet2 == \"Mercury\" ||\
    \ planet2 == \"Venus\" || planet2 == \"Earth\" || planet2 == \"Mars\" || planet2\
    \ == \"Jupiter\" || planet2 == \"Saturn\" || planet2 == \"Uranus\" || planet2\
    \ == \"Neptune\"){\n      return [planet1, planet2];\n    }\n  }\n  if(planet2\
    \ == \"Mercury\" || planet2 == \"Venus\" || planet2 == \"Earth\" || planet2 ==\
    \ \"Mars\" || planet2 == \"Jupiter\" || planet2 == \"Saturn\" || planet2 == \"\
    Uranus\" || planet2 == \"Neptune\"){\n    return [planet2, planet1];\n  }\n  if(planet1\
    \ == \"Mercury\" || planet1 == \"Venus\" || planet1 == \"Earth\" || planet1 ==\
    \ \"Mars\" || planet1 == \"Jupiter\" || planet1 == \"Saturn\" || planet1 == \"\
    Uranus\" || planet1 == \"Neptune\"){\n    if(planet2 == \"Mercury\" || planet2\
    \ == \"Venus\" || planet2 == \"Earth\" || planet2 == \"Mars\" || planet2 == \"\
    Jupiter\" || planet2 == \"Saturn\" || planet2 == \"Uranus\" || planet2 == \"Neptune\"\
    ){\n      return [planet2, planet1];\n    }\n  }\n  if(planet2 == \"Mercury\"\
    \ || planet2 == \"Venus\" || planet2 == \"Earth\" || planet2 == \"Mars\" || planet2\
    \ == \"Jupiter\" || planet2 == \"Saturn\" || planet2 == \"Uranus\" || planet2\
    \ == \"Neptune\"){\n    return [planet1, planet2];\n  }\n  if(planet1 == \"Mercury\"\
    \ || planet1 == \"Venus\" || planet1 == \"Earth\" || planet1 == \"Mars\" || planet1\
    \ == \"Jupiter\" || planet1 == \"Saturn\" || planet1 == \"Uranus\" || planet1\
    \ == \"Neptune\"){\n    if(planet2 == \"Mercury\" || planet2 == \"Venus\" || planet2\
    \ == \"", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit = orbit(planet2);\n\
    \    var planet1Sun = sun(planet1);\n    var planet2Sun = sun(planet2);\n    var\
    \ planet1OrbitSun = planet1Orbit.sun;\n    var planet2OrbitSun = planet2Orbit.sun;\n\
    \    var planet1OrbitPlanet1 = planet1Orbit.planet1;\n    var planet2OrbitPlanet1\
    \ = planet2Orbit.planet1;\n    var planet1OrbitPlanet2 = planet1Orbit.planet2;\n\
    \    var planet2OrbitPlanet2 = planet2Orbit.planet2;\n    var planet1OrbitPlanet3\
    \ = planet1Orbit.planet3;\n    var planet2OrbitPlanet3 = planet2Orbit.planet3;\n\
    \    var planet1OrbitPlanet4 = planet1Orbit.planet4;\n    var planet2OrbitPlanet4\
    \ = planet2Orbit.planet4;\n    var planet1OrbitPlanet5 = planet1Orbit.planet5;\n\
    \    var planet2OrbitPlanet5 = planet2Orbit.planet5;\n    var planet1OrbitPlanet6\
    \ = planet1Orbit.planet6;\n    var planet2OrbitPlanet6 = planet2Orbit.planet6;\n\
    \    var planet1OrbitPlanet7 = planet1Orbit.planet7;\n    var planet2OrbitPlanet7\
    \ = planet2Orbit.planet7;\n    var planet1OrbitPlanet8 = planet1Orbit.planet8;\n\
    \    var planet2OrbitPlanet8 = planet2Orbit.planet8;\n    var planet1OrbitPlanet9\
    \ = planet1Orbit.planet9;\n    var planet2OrbitPlanet9 = planet2Orbit.planet9;\n\
    \    var planet1OrbitPlanet10 = planet1Orbit.planet10;\n    var planet2OrbitPlanet10\
    \ = planet2Orbit.planet10;\n    var planet1OrbitPlanet11 = planet1Orbit.planet11;\n\
    \    var planet2OrbitPlanet11 = planet2Orbit.planet11;\n    var planet1OrbitPlanet12\
    \ = plan", "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1orbit = orbits[planet1];\n    let planet2orbit = orbits[planet2];\n\
    \    let planet1sun = sun;\n    let planet2sun = sun;\n    let planet1orbitorbit\
    \ = planet1orbit.orbit(planet2orbit);\n    let planet2orbitorbit = planet2orbit.orbit(planet1orbit);\n\
    \    let planet1orbitsun = planet1orbitorbit.distance(planet1sun);\n    let planet2orbitsun\
    \ = planet2orbitorbit.distance(planet2sun);\n    let planet1orbitorbitsun = planet1orbitorbit.distance(planet1sun);\n\
    \    let planet2orbitorbitsun = planet2orbitorbit.distance(planet2sun);\n    let\
    \ planet1orbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n    let\
    \ planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n    let\
    \ planet1orbitorbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n \
    \   let planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n\
    \    let planet1orbitorbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n\
    \    let planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n\
    \    let planet1orbitorbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n\
    \    let planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n\
    \    let planet1orbitorbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n\
    \    let planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n\
    \    let planet1orbitorbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n\
    \    let planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n\
    \    let planet1orbitorbitorbitorbitsun = planet1orbitorbit.distance(planet1sun);\n\
    \    let planet2orbitorbitorbitsun = planet2orbitorbit.distance(planet2sun);\n\
    \    let planet1orbitorbitorbitorbitsun = planet1orbitorbit.", "    let planet1Orbit\
    \ = orbit(planet1)\n    let planet2Orbit = orbit(planet2)\n    let planet1Sun\
    \ = sunOrbit(planet1)\n    let planet2Sun = sunOrbit(planet2)\n    let planet1SunOrbit\
    \ = planet1Orbit.filter(x => x.name === \"Sun\")\n    let planet2SunOrbit = planet2Orbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunOrbit = planet1SunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunOrbit = planet2SunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunOrbit = planet1SunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunOrbit = planet2SunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSunOrbit = planet1SunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunSunOrbit = planet2SunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSunSunOrbit = planet1SunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunSunSunOrbit = planet2SunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSunSunOrbit = planet1SunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunSunSunOrbit = planet2SunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSunSunSunOrbit = planet1SunSunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunSunSunSunOrbit = planet2SunSunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet1SunSunSunSunSunSunSunOrbit = planet1SunSunSunSunSunSunOrbit.filter(x\
    \ => x.name === \"Sun\")\n    let planet2SunSunSunSunSunSunOrbit = planet2SunSunSunSunSunSunOrbit.",
  "    let planet1 = planet1.toLowerCase();\n    let planet2 = planet2.toLowerCase();\n\
    \    let planet1Orbit = orbit(planet1);\n    let planet2Orbit = orbit(planet2);\n\
    \    let planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n    let planet2OrbitIndex\
    \ = planet2Orbit.indexOf(planet1);\n    let planet1OrbitDistance = planet1Orbit.slice(planet1OrbitIndex).join(\"\
    \");\n    let planet2OrbitDistance = planet2Orbit.slice(planet2OrbitIndex).join(\"\
    \");\n    let planet1OrbitDistanceInRadians = planet1OrbitDistance.split(\"\"\
    ).map(Number);\n    let planet2OrbitDistanceInRadians = planet2OrbitDistance.split(\"\
    \").map(Number);\n    let planet1OrbitDistanceInRadiansSum = planet1OrbitDistanceInRadians.reduce((a,\
    \ b) => a + b, 0);\n    let planet2OrbitDistanceInRadiansSum = planet2OrbitDistanceInRadians.reduce((a,\
    \ b) => a + b, 0);\n    let planet1OrbitDistanceInRadiansDiff = planet1OrbitDistanceInRadiansSum\
    \ - planet2OrbitDistanceInRadiansSum;\n    let planet2OrbitDistanceInRadiansDiff\
    \ = planet2OrbitDistanceInRadiansSum - planet1OrbitDistanceInRadiansSum;\n   \
    \ let planet1OrbitDistanceInRadiansDiffInRadians = planet1OrbitDistanceInRadiansDiff.map(Number);\n\
    \    let planet2OrbitDistanceInRadiansDiffInRadians = planet2OrbitDistanceInRadiansDiff.map(Number);\n\
    \    let planet1OrbitDistanceInRadiansDiffInRadiansSum = planet1OrbitDistanceInRadiansDiffInRadians.reduce((a,\
    \ b) => a + b, 0);\n    let planet2OrbitDistanceInRadiansDiffInRadiansSum = planet2OrbitDistanceInRadiansDiffInRadians.reduce((a,\
    \ b) => a + b, 0);\n    let planet1OrbitDistanceInRadiansDiffInRadiansDiff = planet1OrbitDistanceInRadiansDiffInRadiansSum\
    \ - planet2OrbitDistanceInRadiansDiffInRadiansSum;\n    let planet2OrbitDistanceInRadiansDiffInRadiansDiff\
    \ = planet2", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\
    \tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitPlanet2 = orbit(planet1, planet2OrbitSun);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet1OrbitSun);\n\tlet planet1OrbitPlanet1\
    \ = orbit(planet1, planet1OrbitPlanet2);\n\tlet planet2OrbitPlanet2 = orbit(planet2,\
    \ planet2OrbitPlanet1);\n\tlet planet1OrbitPlanet1 = orbit(planet1, planet1OrbitPlanet2);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet2OrbitPlanet2);\n\tlet planet1OrbitPlanet2\
    \ = orbit(planet1, planet1OrbitPlanet1);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet2OrbitPlanet2);\n\tlet planet1OrbitPlanet1 = orbit(planet1, planet1OrbitPlanet1);\n\
    \tlet planet2OrbitPlanet2 = orbit(planet2, planet2OrbitPlanet1);\n\tlet planet1OrbitPlanet1\
    \ = orbit(planet1, planet1OrbitPlanet2);\n\tlet planet2OrbitPlanet1 = orbit(planet2,\
    \ planet2OrbitPlanet2);\n\tlet planet1OrbitPlanet2 = orbit(planet1, planet1OrbitPlanet1);\n\
    \tlet planet2OrbitPlanet1 = orbit(planet2, planet2OrbitPlanet2);\n\tlet planet1OrbitPlanet1\
    \ = orbit(planet1, planet1OrbitPlanet1);\n\tlet planet2OrbitPlanet2 = orbit(planet2,\
    \ planet2OrbitPlanet1);\n\tlet planet1OrbitPlanet1 = orbit(planet1, planet1OrbitPlanet2);\n\
    \tlet planet2OrbitPlan", "    var planet1Orbit = orbit(planet1);\n    var planet2Orbit\
    \ = orbit(planet2);\n    var planet1OrbitIndex = planet1Orbit.indexOf(planet2);\n\
    \    var planet2OrbitIndex = planet2Orbit.indexOf(planet1);\n    var planet1OrbitDistance\
    \ = planet1OrbitIndex - planet2OrbitIndex;\n    var planet2OrbitDistance = planet2OrbitIndex\
    \ - planet1OrbitIndex;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1OrbitDistanceSquared = planet1OrbitDistance\
    \ * planet1OrbitDistance;\n    var planet2OrbitDistanceSquared = planet2OrbitDistance\
    \ * planet2OrbitDistance;\n    var planet1Orbit", "    let planet1Orbit = orbit(planet1);\n\
    \    let planet2Orbit = orbit(planet2);\n    let planet1Sun = sun(planet1);\n\
    \    let planet2Sun = sun(planet2);\n    let planet1OrbitSun = orbit(planet1,\
    \ planet1Sun);\n    let planet2OrbitSun = orbit(planet2, planet2Sun);\n    let\
    \ planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2OrbitSun);\n    let\
    \ planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1OrbitSun);\n    let\
    \ planet1OrbitSunOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet2OrbitSunOrbitOrbit = orbit(planet2, planet2Sun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbitOrbit = orbit(planet1, planet1Sun,\
    \ planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\
    \    let planet1OrbitSunOrbitOrbitOrbitOrbit = orbit(planet1, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbitOrbit\
    \ = orbit(planet2, planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet1OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet1,\
    \ planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun,\
    \ planet2OrbitSun);\n    let planet2OrbitSunOrbitOrbitOrbitOrbitOrbit = orbit(planet2,\
    \ planet2Sun, ", "\tlet planet1Orbit = orbit(planet1);\n\tlet planet2Orbit = orbit(planet2);\n\
    \tlet planet1Sun = sunOrbit(planet1);\n\tlet planet2Sun = sunOrbit(planet2);\n\
    \tlet planet1OrbitSun = orbit(planet1, planet1Sun);\n\tlet planet2OrbitSun = orbit(planet2,\
    \ planet2Sun);\n\tlet planet1OrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun);\n\
    \tlet planet2OrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun);\n\tlet planet1OrbitSunOrbitSun\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbit\
    \ = orbit(planet1, planet1Sun, planet2Sun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet2OrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun,\
    \ planet1OrbitSun);\n\tlet planet1OrbitSunOrbitSunOrbitSun = orbit(planet1, planet1Sun,\
    \ planet2Sun, planet1OrbitSun, planet2OrbitSun, planet1OrbitSun);\n\tlet planet2OrbitSunOrbitSunOrbitSun\
    \ = orbit(planet2, planet2Sun, planet1Sun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\
    \tlet planet1OrbitSunOrbitSunOrbitSunOrbit = orbit(planet1, planet1Sun, planet2Sun,\
    \ planet1OrbitSun, planet2OrbitSun, planet1OrbitSun, planet2OrbitSun);\n\tlet\
    \ planet2OrbitSunOrbitSunOrbitSunOrbit = orbit(planet2, planet2Sun, planet1Sun,\
    \ planet2Orbit", "\tlet planet1 = planet1.toLowerCase();\n\tlet planet2 = planet2.toLowerCase();\n\
    \tlet planet1orbit = orbit(planet1);\n\tlet planet2orbit = orbit(planet2);\n\t\
    let planet1sun = sun(planet1);\n\tlet planet2sun = sun(planet2);\n\tlet planet1orbitsun\
    \ = orbit(planet1, planet1sun);\n\tlet planet2orbitsun = orbit(planet2, planet2sun);\n\
    \tlet planet1orbitsunsun = orbit(planet1, planet1sun, planet2sun);\n\tlet planet2orbitsunsun\
    \ = orbit(planet2, planet2sun, planet1sun);\n\tlet planet1orbitsunsunsun = orbit(planet1,\
    \ planet1sun, planet2sun, planet1sunsun);\n\tlet planet2orbitsunsunsun = orbit(planet2,\
    \ planet2sun, planet1sun, planet2sunsun);\n\tlet planet1orbitsunsunsunsun = orbit(planet1,\
    \ planet1sun, planet2sun, planet1sunsun, planet2sunsun);\n\tlet planet2orbitsunsunsunsun\
    \ = orbit(planet2, planet2sun, planet1sun, planet2sunsun, planet1sunsunsun);\n\
    \tlet planet1orbitsunsunsunsunsun = orbit(planet1, planet1sun, planet2sun, planet1sunsun,\
    \ planet2sunsun, planet1sunsunsun);\n\tlet planet2orbitsunsunsunsunsun = orbit(planet2,\
    \ planet2sun, planet1sun, planet2sunsun, planet1sunsunsun, planet2sunsunsun);\n\
    \tlet planet1orbitsunsunsunsunsunsun = orbit(planet1, planet1sun, planet2sun,\
    \ planet1sunsun, planet2sunsun, planet1sunsunsun, planet2sunsunsun);\n\tlet planet2orbitsunsunsunsunsunsun\
    \ = orbit(planet2, planet2sun, planet1sun, planet2sunsun, planet1sunsunsun, planet2sunsunsun,\
    \ planet1sunsunsunsun);\n\tlet ", "    var planet1Orbit = orbit(planet1);\n  \
    \  var planet2Orbit = orbit(planet2);\n    var planet1OrbitOrbit = orbit(planet1Orbit);\n\
    \    var planet2OrbitOrbit = orbit(planet2Orbit);\n    var planet1OrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbit);\n    var planet2OrbitOrbitOrbit = orbit(planet2OrbitOrbit);\n\
    \    var planet1OrbitOrbitOrbitOrbit = orbit(planet1OrbitOrbitOrbit);\n    var\
    \ planet2OrbitOrbitOrbitOrbit = orbit(planet2OrbitOrbitOrbit);\n    var planet1OrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbit);\n    var planet2OrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbit);\n    var planet1OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbit);\n    var planet2OrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbitOrbitOrbit);\n    var planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n    var planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n    var planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n    var planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet2OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n    var planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit\
    \ = orbit(planet1OrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbitOrbit);\n    var\
    \ planet2Orbit"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0,\
  \ 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n  \
    \  for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1]\
    \ > arr[j]){\n            k = j;\n            while(k >0 && arr[k - 1] > arr[k]){\n\
    \                arr[k] = arr[k - 1];\n                k--;\n            }\n \
    \           arr[k] = arr[j];\n            j--;\n        }\n        ret[i] = arr[j];\n\
    \    }\n    return ret;\n}\n", "    var len = arr.length;\n    var swapped;\n\
    \    var sorted;\n    var i;\n    var j;\n    \n    sorted = [];\n    \n    for\
    \ (i = 0; i < len; i++){\n        swapped = false;\n        for (j = 0; j < len;\
    \ j++){\n            if (arr[j] > arr[j + 1]){\n                swap(arr, j, j\
    \ + 1);\n                swapped = true;\n            }\n        }\n        \n\
    \        if (!swapped){\n            sorted.push(arr[i]);\n        }\n    }\n\
    \    \n    return sorted;\n}\n", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = count_ones(arr);\n    var sorted_arr\
    \ = [];\n    for(var i=0; i<len; i++){\n        sorted_arr.push(arr[i]);\n   \
    \ }\n    sorted_arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        var a_ones_num = a_ones - ones;\n\
    \        var b_ones_num = b_ones - ones;\n        if(a_ones_num > b_ones_num){\n\
    \            return -1;\n        }\n        if(a_ones_num < b_ones_num){\n   \
    \         return 1;\n        }\n        return 0;\n    });\n    return sorted_arr;\n\
    }\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n    }\n\
    \    var ones = count_ones(arr);\n    var len = arr.length;\n    var ret = [];\n\
    \    var i = 0;\n    while(i < len){\n        var curr = arr[i];\n        var\
    \ next = arr[i+1];\n        if(curr === next){\n            i++;\n           \
    \ continue;\n        }\n        var cmp = compare(curr, next);\n        if(cmp\
    \ === 0){\n            ret.push(curr);\n            i++;\n            continue;\n\
    \        }\n        if(cmp < 0){\n            ret.push(curr);\n            i++;\n\
    \        }else{\n            ret.push(next);\n        }\n    }\n    return ret;\n\
    }\n", "    var len = arr.length;\n    if(len < 1) return arr;\n    var result\
    \ = [];\n    var ones = [];\n    var zeros = [];\n    var i = 0;\n    while(i\
    \ < len){\n        var one = arr[i];\n        var zero = arr[i++];\n        if(one\
    \ === 0) zeros.push(zero);\n        else if(one === 1) ones.push(one);\n     \
    \   else if(one > 1 && one < 10){\n            one = one - 10;\n            ones.push(one);\n\
    \            zeros.push(0);\n        }\n        else if(one === 9){\n        \
    \    ones.push(1);\n            zeros.push(0);\n        }\n        else{\n   \
    \         ones.push(one);\n            zeros.push(0);\n        }\n    }\n    for(i\
    \ = 0; i < len; i++){\n        var one = arr[i];\n        var zero = zeros[i];\n\
    \        if(one === 0) result.push(zero);\n        else if(one === 1) result.push(one);\n\
    \        else if(one > 1 && one < 10){\n            one = one - 10;\n        \
    \    result.push(one);\n        }\n        else if(one === 9){\n            result.push(1);\n\
    \        }\n        else{\n            result.push(one);\n        }\n    }\n \
    \   return result;\n}\n", "    var len = arr.length;\n    for(var i=0; i<len;\
    \ i++){\n        for(var j=0; j<len; j++){\n            if(arr[i] == arr[j]){\n\
    \                arr.splice(j,1);\n                j--;\n            }\n     \
    \   }\n    }\n    arr.sort(function(a,b){\n        var x = a.toString(2);\n  \
    \      var y = b.toString(2);\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\
    \    });\n    return arr;\n}", "    var len = arr.length;\n    var ret = new Array(len);\n\
    \    var flag = 0;\n    for(var i=0;i<len;i++){\n        if(flag){\n         \
    \   ret[i] = arr[len-i-1];\n            flag = 0;\n        }\n        else{\n\
    \            var cur = arr[i];\n            for(var j=i;j<len;j++){\n        \
    \        if(arr[j] == cur){\n                    flag = 1;\n                 \
    \   ret[j] = cur;\n                    break;\n                }\n           \
    \ }\n        }\n    }\n    return ret;\n}\n", "  var len = arr.length;\n  if(len\
    \ < 2){\n    return arr;\n  }\n  var ones = arr.filter(function(num){\n    return\
    \ num === 1;\n  });\n  var zeros = arr.filter(function(num){\n    return num ===\
    \ 0;\n  });\n  var ones_len = ones.length;\n  var zeros_len = zeros.length;\n\
    \  var max_len = Math.max(ones_len, zeros_len);\n  var min_len = Math.max(zeros_len,\
    \ ones_len);\n  var max_ones = ones_len - 1;\n  var max_zeros = zeros_len - 1;\n\
    \  var min_ones = zeros_len - 1;\n  var min_zeros = ones_len - 1;\n  var max_ones_index\
    \ = -1;\n  var max_zeros_index = -1;\n  var min_ones_index = -1;\n  var min_zeros_index\
    \ = -1;\n  var max_ones_index_in_arr = 0;\n  var max_zeros_index_in_arr = 0;\n\
    \  var min_ones_index_in_arr = 0;\n  var min_zeros_index_in_arr = 0;\n  for(var\
    \ i = 0; i <= max_len; i++){\n    if(max_ones_index === -1 && max_zeros_index\
    \ === -1){\n      if(ones_len === i){\n        max_ones_index = i;\n      }\n\
    \      if(zeros_len === i){\n        max_zeros_index = i;\n      }\n    }\n  \
    \  if(min_ones_index === -1 && min_zeros_index === -1){\n      if(ones_len ===\
    \ i){\n        min_ones_index = i;\n      }\n      if(zeros_len === i){\n    \
    \    min_zeros_index = i;\n      }\n    }\n    if(ones_len === i){\n      if(max_ones_index\
    \ === -1){\n        max_ones_index = i;\n      }\n      if(max_ones_index_in_arr\
    \ < i - 1){\n        max_ones_index_in_arr = i - 1;\n      }\n    }\n    if(zeros_len\
    \ === i){\n      if(max_zeros_index === -1){\n        max_zeros_index = i;\n \
    \     }\n      if(max_zeros_index_in_arr < i - 1){\n        max_zeros_index_in_arr\
    \ = i - 1;\n      }\n    }\n    if(ones_len === i){\n      if(min_ones_index ===\
    \ -1){\n        min_ones_index = i;\n      }\n      if(min_ones_index_in_arr >\
    \ 0){\n        min_ones_index_in_arr--;\n      }\n    }\n    if(zeros_len ===\
    \ i){\n      if(min_zeros_index === -1){\n        min_zeros_index = i;\n     \
    \ }\n      if(min_zeros_index_in_arr > 0){\n        min_zeros_index_in_arr--;\n\
    \      }\n    }\n  }\n  if(max_one", "    var len = arr.length;\n    var sorted\
    \ = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i+1;\
    \ j < len; j++){\n            if(arr[i] == arr[j]){\n                k = j;\n\
    \                while(arr[k] == arr[j]){\n                    k++;\n        \
    \        }\n                arr[k] = arr[i];\n                arr[i] = k;\n  \
    \          }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var ones = [];\n    var zeros = [];\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        ones.push(0);\n        zeros.push(0);\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = ones.length - 1; j >= 0;\
    \ j--){\n            if(arr[i] % ones[j] === 0){\n                ones[j] += 1;\n\
    \                for(k = zeros.length - 1; k >= 0; k--){\n                   \
    \ if(arr[i] % zeros[k] === 0){\n                        zeros[k] += 1;\n     \
    \                   break;\n                    }\n                }\n       \
    \         break;\n            }\n        }\n    }\n    for(i = 0; i < len; i++){\n\
    \        for(j = 0; j < ones.length; j++){\n            if(arr[i] % ones[j] ===\
    \ 0){\n                ret[i] = arr[i];\n                break;\n            }\n\
    \        }\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < zeros.length;\
    \ j++){\n            if(arr[i] % zeros[j] === 0){\n                ret[i] = arr[i];\n\
    \                break;\n            }\n        }\n    }\n    return ret;\n}\n",
  "    return arr.sort((a,b)=>{\n        let ones = Math.log2(a) - Math.log2(b);\n\
    \        if(ones<0){\n            return 1;\n        }\n        if(ones>0){\n\
    \            return -1;\n        }\n        return 0;\n    });\n}\n", "  var len\
    \ = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones = arr.filter(function(x){\n\
    \    return x === 1;\n  });\n  var dec = arr.map(function(x){\n    return x -\
    \ ones.length;\n  });\n  var dec = dec.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var dec = dec.map(function(x){\n    return x + ones.length;\n  });\n\
    \  return dec.map(function(x){\n    return arr[x];\n  });\n}\n", "    arr.sort(function(a,\
    \ b){\n        var aNum = parseInt(a.toString(2), 2);\n        var bNum = parseInt(b.toString(2),\
    \ 2);\n        return aNum - bNum;\n    });\n    return arr;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "    var len = arr.length;\n    var\
    \ ret = new Array(len);\n    var cnt = 0;\n    for(var i = 0; i < len; i++){\n\
    \        var cur = arr[i];\n        var pos = 0;\n        while(cur){\n      \
    \      if(cnt === 0){\n                ret[pos++] = cur;\n                break;\n\
    \            }\n            if(cnt === 1){\n                ret[pos++] = cur;\n\
    \                cnt = 0;\n                break;\n            }\n           \
    \ if(cnt === 2){\n                ret[pos++] = cur;\n                cnt += 2;\n\
    \                break;\n            }\n            cnt += 2;\n            cur\
    \ >>= 1;\n        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var cnt = 0;\n    for(var i=0; i<len; i++){\n\
    \        while(arr[i] === 0){\n            cnt++;\n            if(cnt > 1){\n\
    \                cnt = 0;\n                ret[i] = arr[len-cnt-1];\n        \
    \    }\n        }\n        ret[i] = arr[i];\n    }\n    return ret;\n}\n", " \
    \   var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = i + 1; j < len; j++){\n            k = j;\n         \
    \   while(k >= 0 && sorted[k - 1] > sorted[k]){\n                sorted[k] = sorted[k\
    \ - 1];\n                k--;\n            }\n            sorted[k] = arr[j];\n\
    \        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ maxOnes = 0;\n    var minOnes = Number.MAX_VALUE;\n    var maxDiff = Number.MAX_VALUE;\n\
    \    var minDiff = Number.MAX_VALUE;\n    for(var i=0; i<len; i++){\n        var\
    \ ones = arr[i].toString(2).split('1');\n        for(var j=0; j<ones.length; j++){\n\
    \            var num = parseInt(ones[j], 10);\n            if(num){\n        \
    \        minOnes = Math.min(minOnes, num);\n                maxOnes = Math.max(maxOnes,\
    \ num);\n            }\n        }\n    }\n    for(var i=0; i<len; i++){\n    \
    \    var ones = arr[i].toString(2).split('1');\n        for(var j=0; j<ones.length;\
    \ j++){\n            var num = parseInt(ones[j], 10);\n            if(num){\n\
    \                minDiff = Math.min(minDiff, Math.abs(num - minOnes));\n     \
    \           maxDiff = Math.max(maxDiff, Math.abs(num - maxOnes));\n          \
    \  }\n        }\n    }\n    if(minOnes > maxOnes){\n        return arr;\n    }\n\
    \    if(minDiff === maxDiff){\n        return arr;\n    }\n    var result = [];\n\
    \    for(var i=0; i<len; i++){\n        var ones = arr[i].toString(2).split('1');\n\
    \        for(var j=0; j<ones.length; j++){\n            var num = parseInt(ones[j],\
    \ 10);\n            if(num){\n                result.push(num);\n            }\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    return result;\n}\n", "  var len = arr.length;\n  if(len < 2){\n \
    \   return arr;\n  }\n  if(len % 2 === 0){\n    return arr.sort();\n  }\n  var\
    \ half = Math.floor(len / 2);\n  var left = arr.slice(0, half);\n  var right =\
    \ arr.slice(half);\n  return merge(sort_array(left), sort_array(right));\n}\n",
  "\tlet result = [];\n\tlet len = arr.length;\n\tfor(let i = 0; i < len; i++){\n\t\
    \tlet count = 0;\n\t\tfor(let j = 0; j < len; j++){\n\t\t\tif(arr[j] == i){\n\t\
    \t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tresult.push(count);\n\t}\n\tresult.sort();\n\
    \tfor(let i = 0; i < len; i++){\n\t\tfor(let j = 0; j < len; j++){\n\t\t\tif(arr[j]\
    \ == result[i]){\n\t\t\t\tarr[j] = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn arr;\n}\n",
  "    var len = arr.length;\n    var temp = 0;\n    var i = 0;\n    var j = 0;\n\
    \    var k = 0;\n    var tempArr = [];\n    while(i < len){\n        while(arr[i]\
    \ === 0){\n            i++;\n        }\n        while(arr[j] === 0){\n       \
    \     j++;\n        }\n        if(arr[i] > arr[j]){\n            temp = arr[i];\n\
    \            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n       \
    \ i++;\n        j++;\n    }\n    while(j < len){\n        while(arr[j] === 0){\n\
    \            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n    while(i\
    \ < len){\n        while(arr[i] === 0){\n            i++;\n        }\n       \
    \ tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j] ===\
    \ 0){\n            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n   \
    \ while(i < len){\n        while(arr[i] === 0){\n            i++;\n        }\n\
    \        tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j]\
    \ === 0){\n            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n\
    \    while(i < len){\n        while(arr[i] === 0){\n            i++;\n       \
    \ }\n        tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j]\
    \ === 0){\n            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n\
    \    while(i < len){\n        while(arr[i] === 0){\n            i++;\n       \
    \ }\n        tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j]\
    \ === 0){\n            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n\
    \    while(i < len){\n        while(arr[i] === 0){\n            i++;\n       \
    \ }\n        tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j]\
    \ === 0){\n            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n\
    \    while(i < len){\n        while(arr[i] === 0){\n            i++;\n       \
    \ }\n        tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j]\
    \ === 0){\n            j++;\n        }\n        tempArr.push(arr[j]);\n    }\n\
    \    while(i < len){\n        while(arr[i] === 0){\n            i++;\n       \
    \ }\n        tempArr.push(arr[i]);\n    }\n    while(j < len){\n        while(arr[j]\
    \ === ", "    var len = arr.length;\n    var temp = 0;\n    var i = 0;\n    var\
    \ j = 0;\n    var k = 0;\n    var tempArr = [];\n    var tempArr2 = [];\n    while(i\
    \ < len){\n        j = i;\n        while(j > 0 && arr[j - 1] == 0){\n        \
    \    j--;\n        }\n        while(j < len && arr[j] == 0){\n            j++;\n\
    \        }\n        while(j < len && arr[j - 1] == 0){\n            j--;\n   \
    \     }\n        while(j > 0 && arr[j - 1] == 0){\n            j--;\n        }\n\
    \        if(j > i){\n            tempArr[k] = arr[i];\n            tempArr2.push(arr[i]);\n\
    \            i++;\n        }else{\n            tempArr[k] = arr[j];\n        \
    \    tempArr2.push(arr[j]);\n            j++;\n        }\n        k++;\n    }\n\
    \    while(i < len){\n        tempArr[k] = arr[i];\n        tempArr2.push(arr[i]);\n\
    \        i++;\n        k++;\n    }\n    while(j < len){\n        tempArr[k] =\
    \ arr[j];\n        tempArr2.push(arr[j]);\n        j++;\n        k++;\n    }\n\
    \    while(j < len){\n        tempArr[k] = arr[j];\n        tempArr2.push(arr[j]);\n\
    \        j++;\n        k++;\n    }\n    while(j > 0){\n        tempArr[k] = arr[j];\n\
    \        tempArr2.push(arr[j]);\n        j--;\n        k++;\n    }\n    while(j\
    \ > 0){\n        tempArr[k] = arr[j];\n        tempArr2.push(arr[j]);\n      \
    \  j--;\n        k++;\n    }\n    while(j > 0){\n        tempArr[k] = arr[j];\n\
    \        tempArr2.push(arr[j]);\n        j--;\n        k++;\n    }\n    while(j\
    \ > 0){\n        tempArr[k] = arr[j];\n        tempArr2.push(arr[j]);\n      \
    \  j--;\n        k++;\n    }\n    while(j > 0){\n        tempArr[k] = arr[j];\n\
    \        tempArr2.push(arr[j]);\n        j--;\n        k++;\n    }\n    while(j\
    \ > 0){\n        tempArr[k] = arr[j];\n        tempArr2.push(arr[j]);\n      \
    \  j--;\n        k++;\n    }\n    while(j > 0){\n        tempArr[k] = arr[j];\n\
    \        tempArr2.push(arr[j]);\n        j--;\n        k++;\n    }\n    while(j\
    \ > 0){\n        tempArr[k] = arr[j];\n        tempArr2.push(arr[j]);\n      \
    \  j--;\n        k++;\n    }\n    while(j > 0){\n        tempArr[k] = arr[j];\n\
    \        tempArr2.push(arr[j]);\n        j--;\n        k++;", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[j] == arr[i]){\n                arr.splice(j,1);\n                arr.splice(i,1);\n\
    \                j--;\n                i--;\n            }\n        }\n    }\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    if(len == 0) return arr;\n\
    \    var maxOnes = 0;\n    var maxOnesIndex = 0;\n    var ones = 0;\n    var onesIndex\
    \ = 0;\n    var i;\n    for(i = 0; i < len; i++){\n        ones = arr[i] & 1;\n\
    \        if(ones > maxOnes){\n            maxOnes = ones;\n            maxOnesIndex\
    \ = i;\n        }\n        ones = arr[i] & 2;\n        if(ones > maxOnes){\n \
    \           maxOnes = ones;\n            maxOnesIndex = i;\n        }\n      \
    \  ones = arr[i] & 4;\n        if(ones > maxOnes){\n            maxOnes = ones;\n\
    \            maxOnesIndex = i;\n        }\n        ones = arr[i] & 8;\n      \
    \  if(ones > maxOnes){\n            maxOnes = ones;\n            maxOnesIndex\
    \ = i;\n        }\n        ones = arr[i] & 16;\n        if(ones > maxOnes){\n\
    \            maxOnes = ones;\n            maxOnesIndex = i;\n        }\n     \
    \   ones = arr[i] & 32;\n        if(ones > maxOnes){\n            maxOnes = ones;\n\
    \            maxOnesIndex = i;\n        }\n        ones = arr[i] & 64;\n     \
    \   if(ones > maxOnes){\n            maxOnes = ones;\n            maxOnesIndex\
    \ = i;\n        }\n        ones = arr[i] & 128;\n        if(ones > maxOnes){\n\
    \            maxOnes = ones;\n            maxOnesIndex = i;\n        }\n    }\n\
    \    var newArr = arr.slice();\n    newArr[maxOnesIndex] = arr[maxOnesIndex] |\
    \ maxOnes;\n    for(i = 0; i < len; i++){\n        ones = arr[i] & 1;\n      \
    \  if(ones > maxOnes){\n            newArr[maxOnesIndex] = arr[maxOnesIndex] |\
    \ ones;\n            maxOnesIndex++;\n        }\n        ones = arr[i] & 2;\n\
    \        if(ones > maxOnes){\n            newArr[maxOnesIndex] = arr[maxOnesIndex]\
    \ | ones;\n            maxOnesIndex++;\n        }\n        ones = arr[i] & 4;\n\
    \        if(ones > maxOnes){\n            newArr[maxOnesIndex] = arr[maxOnesIndex]\
    \ | ones;\n            maxOnesIndex++;\n        }\n        ones = arr[i] & 8;\n\
    \        if(ones > maxOnes){\n            newArr[maxOnesIndex] = arr[maxOnesIndex]\
    \ | ones;\n            maxOnesIndex++;\n        }\n        ones = arr[i] & 16;\n\
    \        if(ones > maxOnes){\n            newArr[maxOnesIndex] = arr[maxOnesIndex]\
    \ | ones;\n", "    var len = arr.length;\n    var ret = new Array(len);\n    var\
    \ i;\n    for(i = 0; i < len; i++){\n        var ones = arr[i].toString(2).split('1');\n\
    \        var len = ones.length;\n        var j;\n        for(j = 0; j < len; j++){\n\
    \            if(ones[j].length == 1){\n                ret[i] = parseInt(ones[j]);\n\
    \                break;\n            }\n        }\n    }\n    return ret;\n}\n",
  "  var len = arr.length;\n  if(len < 1) return arr;\n  var max = 0;\n  var min =\
    \ 0;\n  for(var i=0; i<len; i++){\n    var curr = arr[i];\n    if(curr > max)\
    \ max = curr;\n    if(curr < min) min = curr;\n  }\n  if(min === max) return arr;\n\
    \  var mid = max;\n  var left = arr.slice(0, mid);\n  var right = arr.slice(mid);\n\
    \  return sort_array(left).concat(sort_array(right));\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tmp;\n\
    \    var tmp2;\n    var tmp3;\n    while(i < len){\n        tmp = arr[i];\n  \
    \      tmp2 = arr[j];\n        tmp3 = arr[k];\n        if(tmp == tmp2 && tmp !=\
    \ tmp3){\n            ret.push(tmp);\n            i++;\n        }else if(tmp ==\
    \ tmp3){\n            ret.push(tmp2);\n            j++;\n        }else{\n    \
    \        ret.push(tmp3);\n            k++;\n        }\n    }\n    return ret;\n\
    }", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n     \
    \   var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        if(a_ones_comp == 0){\n            return 0;\n        }\n        if(a_ones_comp\
    \ > 0){\n            return 1;\n        }\n        return -1;\n    });\n    return\
    \ arr;\n}\n", "    var len = arr.length;\n    var sorted = new Array(len);\n \
    \   var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            if(arr[i] == arr[j]){\n                for(k = i; k < j; k++){\n\
    \                    sorted[k] = sorted[k + 1];\n                }\n         \
    \       sorted[j - 1] = arr[i];\n                i = j;\n            }\n     \
    \   }\n    }\n    return sorted;\n}\n</code>\n<|/ a tags=sorting,arrays,javascript\
    \ |>\n<| c |>\nThis doesn't work for negative numbers, it sorts them in descending\
    \ order\n<|/ c |>\n<| c |>\nYes, it does. `[-2, -3, -4, -5, -6]` becomes `[-6,\
    \ -5, -4, -3, -2]`\n<|/ c |>\n<| c |>\nYes, it does. `[-2, -3, -4, -5, -6]` becomes\
    \ `[-6, -5, -4, -3, -2]`\n<|/ c |>\n<| c |>\nIt doesn't work for negative numbers,\
    \ it sorts them in descending order\n<|/ c |>\n<| c |>\nYes, it does. `[-2, -3,\
    \ -4, -5, -6]` becomes `[-6, -5, -4, -3, -2]`\n<|/ c |>\n<| a dscore=5 |>\n<code>",
  "    var len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        sorted[i] = 0;\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ == arr[j]){\n                sorted[i]++;\n                sorted[j]--;\n  \
    \          }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            if(sorted[i] > sorted[j]){\n            \
    \    k = sorted[i];\n                sorted[i] = sorted[j];\n                sorted[j]\
    \ = k;\n            }\n        }\n    }\n    return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        return count_ones(a) - count_ones(b);\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var swapped;\n    var sorted;\n    var i;\n\
    \n    sorted = new Array(len);\n    for(i = 0; i < len; i++){\n        swapped\
    \ = 0;\n        for(j = 0; j < len; j++){\n            if(arr[j] > arr[j+1]){\n\
    \                swapped = 1;\n                arr[j] = arr[j+1];\n          \
    \      arr[j+1] = swapped;\n            }\n        }\n        sorted[i] = arr[i];\n\
    \    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var sorted =\
    \ new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i]\
    \ = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len;\
    \ j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n   \
    \             sorted[j]--;\n            }\n        }\n    }\n    for(i = 0; i\
    \ < len; i++){\n        for(k = i; k < len; k++){\n            if(arr[i] > arr[k]){\n\
    \                for(j = k; j < len; j++){\n                    sorted[j] = sorted[j\
    \ - 1];\n                }\n                sorted[k] = arr[i];\n            \
    \    break;\n            }\n        }\n    }\n    return sorted;\n}\n", "    var\
    \ len = arr.length;\n    var swapped;\n    var sorted;\n    var i;\n\n    for(i\
    \ = 0; i < len; i++){\n        swapped = false;\n        for(j = 0; j < i; j++){\n\
    \            if(arr[j] > arr[j+1]){\n                swap(arr, j, j+1);\n    \
    \            swapped = true;\n            }\n        }\n        if(!swapped){\n\
    \            sorted = arr.slice();\n            sorted.sort();\n            arr\
    \ = sorted;\n            break;\n        }\n    }\n    return arr;\n}\n", "  \
    \  var len = arr.length;\n    var ret = new Array(len);\n    var i;\n    for(i\
    \ = 0; i < len; i++){\n        var count = 0;\n        var cur = arr[i];\n   \
    \     while(cur){\n            count += cur & 1;\n            cur >>= 1;\n   \
    \     }\n        ret[i] = count;\n    }\n    ret.sort(function(a, b){\n      \
    \  return a - b;\n    });\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] > arr[j]){\n                k\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = k;\n \
    \           }\n        }\n    }\n    return arr;\n}\n", "    return arr.sort(function(a,\
    \ b){\n        var c = (a&0xFFFF) + (b&0xFFFF);\n        var d = (a>>16) + (b>>16)\
    \ + (c>>16);\n        return c&0xFFFF == d&0xFFFF ? a-b : c-d;\n    });\n}\n",
  "    var len = arr.length;\n    var sortArr = new Array(len);\n    var flag = 0;\n\
    \    for(var i=0; i<len; i++){\n        sortArr[i] = flag;\n        flag = flag\
    \ * 10 + arr[i];\n    }\n    sortArr.sort(function(a, b){\n        return a -\
    \ b;\n    });\n    for(var i=0; i<len; i++){\n        sortArr[i] = flag;\n   \
    \     flag = flag * 10 + arr[i];\n    }\n    return sortArr;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `sort_array([1, 5, 2, 3,\
    \ 4]) == [1, 2, 3, 4, 5]` but `sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4,\
    \ -3, -2]`\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case\
    \ in the answer. Can you please check it again?\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works. I added the test case in the answer. Can you please check it again?\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case in the answer.\
    \ Can you please check it again?\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I added the test case in the answer. Can you please check it again?\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "    var len = arr.length;\n    if(len < 1) return\
    \ arr;\n    var result = [];\n    var ones = [1];\n    var twos = [2];\n    var\
    \ threes = [3];\n    var fours = [4];\n    var fives = [5];\n    var sixes = [6];\n\
    \    var i, j, k, tmp;\n    for(i = 0; i < len; i++){\n        tmp = ones;\n \
    \       ones = [];\n        for(j = 0; j < len; j++){\n            if(arr[j] %\
    \ 2 === 0){\n                ones.push(arr[j]);\n            }else{\n        \
    \        tmp[tmp.length] = arr[j];\n            }\n        }\n        for(j =\
    \ 0; j < tmp.length; j++){\n            twos[twos.length] = tmp[j];\n        }\n\
    \        for(j = 0; j < tmp.length; j++){\n            threes[threes.length] =\
    \ tmp[j];\n        }\n        for(j = 0; j < tmp.length; j++){\n            fours[fours.length]\
    \ = tmp[j];\n        }\n        for(j = 0; j < tmp.length; j++){\n           \
    \ fives[fives.length] = tmp[j];\n        }\n        for(j = 0; j < tmp.length;\
    \ j++){\n            sixes[sixes.length] = tmp[j];\n        }\n    }\n    for(i\
    \ = 0; i < ones.length; i++){\n        for(j = 0; j < twos.length; j++){\n   \
    \         if(ones[i] === twos[j]) result.push(ones[i]);\n        }\n        for(j\
    \ = 0; j < threes.length; j++){\n            if(ones[i] === threes[j]) result.push(ones[i]);\n\
    \        }\n        for(j = 0; j < fours.length; j++){\n            if(ones[i]\
    \ === fours[j]) result.push(ones[i]);\n        }\n        for(j = 0; j < fives.length;\
    \ j++){\n            if(ones[i] === fives[j]) result.push(ones[i]);\n        }\n\
    \        for(j = 0; j < sixes.length; j++){\n            if(ones[i] === sixes[j])\
    \ result.push(ones[i]);\n        }\n    }\n    for(i = 0; i < result.length; i++){\n\
    \        for(j = 0; j < len; j++){\n            if(result[i] === arr[j]){\n  \
    \              result.splice(i, 1);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n", "    var len = arr.length;\n    if(len\
    \ == 0) return arr;\n    var maxOnes = 0;\n    var maxDigit = 0;\n    for(var\
    \ i = 0; i < len; i++){\n        var ones = arr[i].toString(2);\n        var digit\
    \ = ones.length;\n        if(digit > maxDigit){\n            maxDigit = digit;\n\
    \            maxOnes = ones.length;\n        }\n    }\n    for(var i = 0; i <\
    \ len; i++){\n        arr[i] = parseInt(arr[i].toString(2), 10);\n    }\n    arr.sort(function(a,\
    \ b){\n        var aNum = a.toString(2);\n        var bNum = b.toString(2);\n\
    \        var aLen = aNum.length;\n        var bLen = bNum.length;\n        if(aLen\
    \ > bLen){\n            return 1;\n        }\n        if(aLen < bLen){\n     \
    \       return -1;\n        }\n        if(aNum == bNum){\n            return 0;\n\
    \        }\n        if(aNum > bNum){\n            return 1;\n        }\n     \
    \   return -1;\n    });\n    for(var i = 0; i < len; i++){\n        arr[i] = parseInt(arr[i].toString(2),\
    \ 10);\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    var ret\
    \ = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i+1;\
    \ j < len; j++){\n            k = j;\n            while(k >= 0 && arr[k] == arr[j]\
    \ ){\n                k--;\n            }\n            if(k >= 0){\n         \
    \       ret[k] = arr[j];\n                arr[j] = arr[i];\n                arr[i]\
    \ = k;\n            }\n        }\n    }\n    return ret;\n}\n", "    var len =\
    \ arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        sorted.push(arr[i]);\n    }\n    for(i = len - 1; i >= 0; i--){\n\
    \        j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n            arr[j]\
    \ = arr[j - 1];\n            j--;\n        }\n        arr[j] = i;\n    }\n   \
    \ for(i = 0; i < len; i++){\n        arr[i] = sorted[i];\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1]\
    \ > arr[j]){\n            arr[j] = arr[j - 1];\n            j--;\n        }\n\
    \        arr[j] = i;\n    }\n    for(i = 0; i < len; i++){\n        j = i;\n \
    \       while(j > 0 && arr[j - 1] < arr[j]){\n            arr[j] = arr[j - 1];\n\
    \            j--;\n        }\n        arr[j] = i;\n    }\n    for(i = 0; i < len;\
    \ i++){\n        j = i;\n        while(j > 0 && arr[j - 1] == arr[j]){\n     \
    \       j--;\n        }\n        arr[j] = i;\n    }\n    for(i = 0; i < len; i++){\n\
    \        j = i;\n        while(j > 0 && arr[j - 1] != arr[j]){\n            j--;\n\
    \        }\n        arr[j] = i;\n    }\n    return sorted;\n}\n", "    var len\
    \ = arr.length;\n    if(len < 2){\n        return arr;\n    }\n    var ones =\
    \ arr.filter(function(x){return x === 1;});\n    var zeros = arr.filter(function(x){return\
    \ x === 0;});\n    var maxOnes = Math.max.apply(null, ones);\n    var maxZeros\
    \ = Math.max.apply(null, zeros);\n    var maxOnesLen = Math.ceil(Math.log(maxOnes)\
    \ / Math.LN2);\n    var maxZerosLen = Math.ceil(Math.log(maxZeros) / Math.LN2);\n\
    \    var maxLen = Math.max(maxOnesLen, maxZerosLen);\n    var onesLen = Math.ceil(Math.log(len)\
    \ / Math.LN2);\n    var zerosLen = Math.ceil(Math.log(zeros.length) / Math.LN2);\n\
    \    var len = Math.max(onesLen, zerosLen);\n    var ones = onesLen > zerosLen\
    \ ? new Array(onesLen).fill(1)\n                                        : new\
    \ Array(zerosLen).fill(0);\n    var zeros = zerosLen > onesLen ? new Array(zerosLen).fill(0)\n\
    \                                        : new Array(onesLen).fill();\n    var\
    \ onesIndex = 0, zerosIndex = 0;\n    var onesCount = 0, zerosCount = 0;\n   \
    \ while(onesIndex < ones.length && zerosIndex < zeros.length){\n        if(ones[onesIndex]\
    \ === 1 && zeros[zerosIndex] === 0){\n            arr[onesIndex] = arr[onesIndex]\
    \ * 2;\n            arr[zerosIndex] = arr[zerosIndex] * 2;\n            onesCount++;\n\
    \            zerosCount++;\n        }else if(ones[onesIndex] === 0 && zeros[zerosIndex]\
    \ === 1){\n            arr[onesIndex] = arr[onesIndex] * 2;\n            arr[zerosIndex]\
    \ = arr[zerosIndex] * 2;\n            zerosCount++;\n            onesCount++;\n\
    \        }else if(ones[onesIndex] === 1 && zeros[zerosIndex] === 0){\n       \
    \     arr[onesIndex] = arr[onesIndex] * 2;\n            arr[zerosIndex] = arr[zerosIndex]\
    \ * 2;\n            onesCount++;\n            zerosCount++;\n        }else if(ones[onesIndex]\
    \ === 0 && zeros[zerosIndex] === 1){\n            arr[onesIndex] = arr[onesIndex]\
    \ * 2;\n            arr[zerosIndex] = arr[zerosIndex] * 2;\n            zerosCount++;\n\
    \            onesCount++;\n        }else if(ones[onesIndex] === 1 && zeros[zerosIndex]\
    \ === 0){\n            arr[onesIndex] = arr[onesIndex] * 2;\n            arr[zerosIndex]\
    \ = arr[zerosIndex] * 2;\n            onesCount++;\n            zerosCount++;\n\
    \        }else if(", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        sorted.push(arr[i]);\n    }\n\
    \    for(i = len - 1; i >= 0; i--){\n        j = i;\n        while(j > 0 && sorted[j\
    \ - 1] > sorted[j]){\n            sorted[j] = sorted[j - 1];\n            j =\
    \ j - 1;\n        }\n        sorted[j] = arr[i];\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        sorted.push(arr[i]);\n    }\n    for(i =\
    \ len - 1; i >= 0; i--){\n        j = i;\n        while(j > 0 && sorted[j - 1]\
    \ > sorted[j]){\n            sorted[j] = sorted[j - 1];\n            j--;\n  \
    \      }\n        sorted[j] = arr[i];\n    }\n    return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var aNum = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n\
    \        if(aNum === bNum){\n            return aNum - bNum;\n        }\n    \
    \    return aNum - bNum || aNum*10 - bNum*10;\n    });\n    return arr;\n}\n",
  "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n\
    \    var temp = 0;\n    var swap = 0;\n    var swapped = 0;\n    var i = 0;\n\
    \    var j = 0;\n    for(i = 0; i < len; i++){\n        max = Math.max(max, arr[i]);\n\
    \        min = Math.min(min, arr[i]);\n        mid = Math.floor((max + min) /\
    \ 2);\n        temp = arr[mid];\n        arr[mid] = arr[i];\n        arr[i] =\
    \ temp;\n    }\n    for(i = 0; i < len; i++){\n        arr[len] = arr[i];\n  \
    \  }\n    len = arr.length;\n    for(i = 0; i < len; i++){\n        arr[len] =\
    \ arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len;\
    \ j++){\n            if(arr[i] == arr[j]){\n                swap = arr[i];\n \
    \               swapped = 1;\n                arr[i] = arr[j];\n             \
    \   arr[j] = swap;\n                swapped = 0;\n            }\n        }\n \
    \   }\n    if(swapped == 1){\n        for(i = 0; i < len; i++){\n            arr[len]\
    \ = arr[i];\n        }\n    }\n    return arr;\n}", "    var len = arr.length;\n\
    \    if(len == 0) return arr;\n    var max = 0;\n    var min = 0;\n    for(var\
    \ i = 0; i < len; i++){\n        var cur = arr[i];\n        if(cur > max){\n \
    \           max = cur;\n        }else if(cur < min){\n            min = cur;\n\
    \        }\n    }\n    if(min == max){\n        return arr;\n    }\n    var mid\
    \ = parseInt(max + (max - min) / 2);\n    var left = arr.slice(0, mid);\n    var\
    \ right = arr.slice(mid);\n    return sort_array(left).concat(sort_array(right));\n\
    }\n", "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var\
    \ mid = 0;\n    var result = [];\n    var swap;\n\n    while (len > 0) {\n   \
    \     mid = Math.floor((min + max) / 2);\n        swap = arr[mid];\n        if\
    \ (swap === 0) {\n            max = mid;\n        } else {\n            min =\
    \ mid;\n        }\n        len = len - 1;\n    }\n\n    len = arr.length;\n  \
    \  while (len > 0) {\n        mid = Math.floor((min + max) / 2);\n        swap\
    \ = arr[mid];\n        if (swap === 0) {\n            max = mid;\n        } else\
    \ {\n            min = mid;\n        }\n        len = len - 1;\n        result.push(arr[min]);\n\
    \        arr[min] = 0;\n    }\n\n    return result;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_len\
    \ = a_bin.length;\n        var b_len = b_bin.length;\n        var a_ones = a_len.filter(function(x){return\
    \ x === 1;});\n        var b_ones = b_len.filter(function(x){return x === 1;});\n\
    \        var a_ones_count = a_ones.reduce(function(acc, val){return acc + val;},\
    \ 0);\n        var b_ones_count = b_ones.reduce(function(acc, val){return acc\
    \ + val;}, 0);\n        var a_ones_decimal = a_ones_count / Math.pow(2, a_len);\n\
    \        var b_ones_decimal = b_ones_count / Math.pow(2, b_len);\n        return\
    \ a_ones_decimal - b_ones_decimal;\n    });\n    return arr;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n               \
    \ k = j;\n                while(arr[k] == arr[j]){\n                    k++;\n\
    \                }\n                if(arr[k] > arr[j]){\n                   \
    \ sorted[i] = arr[i];\n                    sorted[k] = arr[j];\n             \
    \   }else{\n                    sorted[i] = arr[j];\n                    sorted[k]\
    \ = arr[i];\n                }\n                for(j = k; j < len; j++){\n  \
    \                  arr[j] = sorted[j];\n                }\n                for(j\
    \ = k; j < len; j++){\n                    arr[j] = sorted[j];\n             \
    \   }\n            }\n        }\n    }\n    return sorted;\n}\n", "    var len\
    \ = arr.length;\n    var sorted = [];\n    var tmp = [];\n    var i = 0;\n   \
    \ while(i < len){\n        var count = 0;\n        for(var j = 0; j < len; j++){\n\
    \            if((arr[j] & 1) == 1){\n                count++;\n            }\n\
    \        }\n        sorted.push(count);\n        tmp.push(arr[i]);\n        i++;\n\
    \    }\n    while(i < len){\n        sorted.push(tmp[sorted.length-1]);\n    \
    \    i++;\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n               \
    \ k = j;\n                while(arr[k] == arr[j]){\n                    k++;\n\
    \                }\n                arr[k] = arr[i];\n                arr[i] =\
    \ k;\n            }\n        }\n    }\n    return sorted;\n}\n", "  var len =\
    \ arr.length;\n  if(len < 2) return arr;\n  var ones = count_ones(arr);\n  var\
    \ cmp = function(a, b){\n    return a > b ? 1 : a < b ? -1 : 0;\n  };\n  arr.sort(function(a,\
    \ b){\n    var c = cmp(a, b);\n    if(c == 0) return ones[a] - ones[b];\n    return\
    \ c;\n  });\n  return arr;\n}\n", "    var len = arr.length;\n    var sorted =\
    \ new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i]\
    \ = arr[i];\n    }\n    for(i = len - 1; i >= 0; i--){\n        j = i;\n     \
    \   while(j > 0 && sorted[j - 1] > sorted[j]){\n            sorted[j] = sorted[j\
    \ - 1];\n            j--;\n        }\n        sorted[j] = arr[i];\n    }\n   \
    \ return sorted;\n}\n", "    var len = arr.length;\n    var sorted = [];\n   \
    \ var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i+1; j < len; j++){\n\
    \            k = sort_helper(arr[i], arr[j]);\n            if(k > 0){\n      \
    \          sorted.push(arr[k]);\n                arr[k] = arr[i];\n          \
    \      arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        sorted.push(arr[i]);\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = i+1; j < len; j++){\n            if(arr[i] == arr[j]){\n\
    \                k = j;\n                while(arr[k] == arr[j]){\n          \
    \          k++;\n                }\n                arr[k] = arr[i];\n       \
    \         arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n}",
  "    var len = arr.length;\n    var ret = new Array(len);\n    var i, j, k;\n  \
    \  for(i = 0; i < len; i++){\n        ret[i] = arr[i];\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i+1; j < len; j++){\n            k = j;\n  \
    \          while(k > 0 && arr[k - 1] > arr[k]){\n                arr[k] = arr[k\
    \ - 1];\n                k = k - 1;\n            }\n            arr[k] = arr[j];\n\
    \        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i+1; j < len; j++){\n            if(arr[i] == arr[j]){\n                k\
    \ = j;\n                while(arr[k] == arr[j]){\n                    k++;\n \
    \               }\n                arr[k] = arr[i];\n                arr[i] =\
    \ k;\n            }\n        }\n    }\n    return sorted;\n}\n", "  var len =\
    \ arr.length;\n  if(len < 2) return arr;\n  if(len % 2 === 0) return arr.sort();\n\
    \  var half = len / 2;\n  var left = arr.slice(0, half);\n  var right = arr.slice(half);\n\
    \  return merge(sort_array(left), sort_array(right));\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n\
    \                sorted[j]--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ > arr[j]){\n                k = sorted[j];\n                sorted[j] = sorted[i];\n\
    \                sorted[i] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    arr.sort(function(a, b){\n\
    \        var c = a.toString(2);\n        var d = b.toString(2);\n        var x\
    \ = c.length - d.length;\n        var y = Math.max(x,0);\n        return x - y;\n\
    \    });\n    return arr;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    var len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n\
    \    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i\
    \ = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ == arr[j]){\n                k = j;\n                while(arr[k] == arr[j]){\n\
    \                    k++;\n                }\n                arr[k] = arr[i];\n\
    \                arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var ret = [];\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1] > arr[j]){\n\
    \            k = j;\n            while(k >= 0 && arr[k - 1] > arr[k]){\n     \
    \           arr[k] = arr[k - 1];\n                k--;\n            }\n      \
    \      arr[k] = arr[j];\n            j--;\n        }\n        ret[i] = arr[j];\n\
    \    }\n    return ret;\n}\n", "    arr.sort(function(a, b){\n        var x =\
    \ parseInt(a, 10);\n        var y = parseInt(b, 10);\n        if(x < y){\n   \
    \         return -1;\n        }\n        if(x > y){\n            return 1;\n \
    \       }\n        return 0;\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x == '1';});\n        var b_ones\
    \ = b_bin.split('').filter(function(x){return x == '1';});\n        var a_ones_len\
    \ = a_ones.length;\n        var b_ones_len = b_ones.length;\n        if(a_ones_len\
    \ == b_ones_len){\n            return a_ones_len - b_ones_len;\n        }\n  \
    \      return a_ones_len - b_ones_len;\n    });\n    return arr;\n}", "    arr.sort(function(a,\
    \ b){\n        var x = parseInt(a, 10);\n        var y = parseInt(b, 10);\n  \
    \      if(x < y){\n            return -1;\n        }\n        if(x > y){\n   \
    \         return 1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var\
    \ mid = 0;\n    var midVal = 0;\n    var midVal2 = 0;\n    var midVal3 = 0;\n\
    \    var midVal4 = 0;\n    var midVal5 = 0;\n    var midVal6 = 0;\n    var midVal7\
    \ = 0;\n    var midVal8 = 0;\n    var midVal9 = 0;\n    var midVal10 = 0;\n  \
    \  var midVal11 = 0;\n    var midVal12 = 0;\n    var midVal13 = 0;\n    var midVal14\
    \ = 0;\n    var midVal15 = 0;\n    var midVal16 = 0;\n    var midVal17 = 0;\n\
    \    var midVal18 = 0;\n    var midVal19 = 0;\n    var midVal20 = 0;\n    var\
    \ midVal21 = 0;\n    var midVal22 = 0;\n    var midVal23 = 0;\n    var midVal24\
    \ = 0;\n    var midVal25 = 0;\n    var midVal26 = 0;\n    var midVal27 = 0;\n\
    \    var midVal28 = 0;\n    var midVal29 = 0;\n    var midVal30 = 0;\n    var\
    \ midVal31 = 0;\n    var midVal32 = 0;\n    var midVal33 = 0;\n    var midVal34\
    \ = 0;\n    var midVal35 = 0;\n    var midVal36 = 0;\n    var midVal37 = 0;\n\
    \    var midVal38 = 0;\n    var midVal39 = 0;\n    var midVal40 = 0;\n    var\
    \ midVal41 = 0;\n    var midVal42 = 0;\n    var midVal43 = 0;\n    var midVal44\
    \ = 0;\n    var midVal45 = 0;\n    var midVal46 = 0;\n    var midVal47 = 0;\n\
    \    var midVal48 = 0;\n    var midVal49 = 0;\n    var midVal50 = 0;\n    var\
    \ midVal51 = 0;\n    var midVal52 = 0;\n    var midVal53 = 0;\n    var midVal54\
    \ = 0;\n    var midVal55 = 0;\n    var midVal56 = 0;\n    var midVal57 = 0;\n\
    \    var midVal58 = 0;\n    var midVal59 = 0;\n    var midVal60 = 0;\n    var\
    \ midVal61 = 0;\n    var midVal62 = 0;\n    var midVal63 = 0;\n    var midVal64\
    \ = 0;\n    var midVal65 = 0;\n    var midVal66 = 0;\n    var midVal67 = 0;\n\
    \    var midVal68 = 0;\n    var midVal69 = 0;\n    var midVal70 = 0;\n    var\
    \ midVal71 = 0;\n    var midVal72 = 0;\n    var midVal73 = 0;\n    var midVal74\
    \ = 0;\n    var midVal75 = 0;\n    var midVal76 = 0;\n    var midVal77 = 0;\n\
    \    var midVal78 = 0;\n    var midVal79 = 0;\n    var midVal80 = 0;\n    var\
    \ midVal81 = 0;\n    var midVal82 = 0;\n    var midVal83 = 0;\n    var mid", " \
    \   var len = arr.length;\n    if(len < 1) return arr;\n    var result = [];\n\
    \    var ones = [];\n    var zeros = [];\n    var i, j, k;\n    for(i = 0; i <\
    \ len; i++){\n        j = ones.length;\n        while(j--){\n            if(arr[i]\
    \ === ones[j]) break;\n        }\n        if(j === 0) zeros.push(arr[i]);\n  \
    \      else ones.push(arr[i]);\n    }\n    for(i = 0; i < len; i++){\n       \
    \ j = zeros.length;\n        while(j--){\n            if(arr[i] === zeros[j])\
    \ break;\n        }\n        if(j === 0) result.push(arr[i]);\n        else result.push(zeros[i]);\n\
    \    }\n    return result;\n}\n", "    var len = arr.length;\n    var sorted =\
    \ [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i + 1;\
    \ j < len; j++){\n            k = arr[i]*arr[j];\n            if(k <= 0){\n  \
    \              k = k + arr[j];\n                arr[j] = arr[i];\n           \
    \     arr[i] = k;\n            }\n        }\n    }\n    return arr;\n}", "   \
    \ arr.sort(function(a, b){\n        var x = a.toString(2);\n        var y = b.toString(2);\n\
    \        var z = x.length - y.length;\n        if(z == 0){\n            return\
    \ 0;\n        }\n        if(z > 0){\n            return 1;\n        }\n      \
    \  return -1;\n    });\n    return arr;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    I like your solution, but I wonder why you used `return a.toString(2) - b.toString(2);`\
    \ instead of `return a.length - b.length;`\n<|/ c |>\n<| c |>\nBecause `a.toString(2)`\
    \ returns `'100'` instead of `'1001'`. `a.length` returns `4` instead of `5`.\n\
    <|/ c |>\n<| c |>\nI see. Thanks for the explanation!\n<|/ c |>\n<| a tags=arrays,sorting,javascript\
    \ |>\n<code>", "    var len = arr.length;\n    var ret = new Array(len);\n   \
    \ var cur = 0;\n    var numOnes = 0;\n    for(var i=0; i<len; i++){\n        cur\
    \ = arr[i];\n        numOnes = parseInt(cur.toString(2), 2);\n        ret[cur]\
    \ = numOnes;\n    }\n    ret.sort(function(a, b){\n        return a-b;\n    });\n\
    \    for(var i=0; i<len; i++){\n        cur = ret[i];\n        ret[i] = parseInt(cur.toString(2),\
    \ 2);\n    }\n    return ret;\n}\n", "    var len = arr.length;\n    var ret =\
    \ [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i+1; j\
    \ < len; j++){\n            for(k = 0; k < len; k++){\n                if(arr[k]\
    \ > arr[j] && arr[k] > arr[i]){\n                    ret[k] = arr[k];\n      \
    \          }\n                else if(arr[k] < arr[j] && arr[k] < arr[i]){\n \
    \                   ret[k] = arr[j];\n                }\n                else\
    \ if(arr[k] == arr[j]){\n                    ret[k] = arr[i];\n              \
    \  }\n            }\n        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k <=\
    \ 0){\n                ret.push(arr[i]);\n                ret.push(arr[j]);\n\
    \                break;\n            }\n            else if(k > 0){\n        \
    \        ret.push(arr[j]);\n                ret.push(arr[i]);\n              \
    \  break;\n            }\n        }\n    }\n    return ret;\n}\n", "    var len\
    \ = arr.length;\n    var temp = 0;\n    var i = 0;\n    var j = 0;\n    var k\
    \ = 0;\n    var tempArr = [];\n    while(i < len){\n        while(j < len){\n\
    \            if(arr[j] == 1){\n                temp++;\n            }\n      \
    \      j++;\n        }\n        while(k <= j){\n            tempArr.push(arr[k]);\n\
    \            k++;\n        }\n        while(j < len){\n            if(arr[j] ==\
    \ 0){\n                temp--;\n            }\n            j++;\n        }\n \
    \       while(temp > 0){\n            tempArr.push(arr[k]);\n            k++;\n\
    \            temp--;\n        }\n        while(j < len){\n            if(arr[j]\
    \ == 1){\n                temp++;\n            }\n            j++;\n        }\n\
    \        while(k <= j){\n            tempArr.push(arr[k]);\n            k++;\n\
    \        }\n        while(j < len){\n            if(arr[j] == 0){\n          \
    \      temp--;\n            }\n            j++;\n        }\n        while(temp\
    \ > 0){\n            tempArr.push(arr[k]);\n            k++;\n            temp--;\n\
    \        }\n        i++;\n    }\n    return tempArr;\n}\n", "    var len = arr.length;\n\
    \    if(len < 2){\n        return arr;\n    }\n    var ones = arr.reduce(function(p,\
    \ c){\n        return p + c;\n    }, 0);\n    var tens = ones * 10;\n    var hundreds\
    \ = tens * 100;\n    var thousands = hundreds * 1000;\n    var sortedArr = arr.map(function(num){\n\
    \        var bin = num.toString(2);\n        var len = bin.length;\n        var\
    \ zeros = \"\";\n        while(len < 32){\n            zeros += \"0\";\n     \
    \       len++;\n        }\n        var ones = \"\";\n        while(len < 32){\n\
    \            ones += \"1\";\n            len++;\n        }\n        var tens =\
    \ \"\";\n        while(len < 32){\n            tens += \"0\";\n            len++;\n\
    \        }\n        var hundreds = \"\";\n        while(len < 32){\n         \
    \   hundreds += \"0\";\n            len++;\n        }\n        var thousands =\
    \ \"\";\n        while(len < 32){\n            thousands += \"0\";\n         \
    \   len++;\n        }\n        var binary = zeros + ones + tens + hundreds + thousands\
    \ + bin;\n        return binary;\n    });\n    sortedArr.sort(function(a, b){\n\
    \        var aNum = parseInt(a, 2);\n        var bNum = parseInt(b, 2);\n    \
    \    if(aNum === bNum){\n            return 0;\n        }\n        if(aNum < bNum){\n\
    \            return -1;\n        }\n        if(aNum > bNum){\n            return\
    \ 1;\n        }\n    });\n    return sortedArr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   sorted[i] = [];\n        for(j = 0; j < len; j++){\n            sorted[i][j]\
    \ = 0;\n            for(k = 0; k < len; k++){\n                if(arr[k] == i){\n\
    \                    sorted[i][j] += 1;\n                    break;\n        \
    \        }\n            }\n        }\n    }\n    for(i = 0; i < len; i++){\n \
    \       for(j = 0; j < len; j++){\n            if(sorted[i][j] > 0){\n       \
    \         for(k = j; k < len; k++){\n                    if(sorted[i][k] > 0){\n\
    \                        sorted[i][k] = sorted[i][k] - 1;\n                  \
    \      sorted[k][j] = sorted[k][j] + 1;\n                        break;\n    \
    \                }\n                }\n                break;\n            }\n\
    \        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n\
    \        while(j > 0 && arr[j - 1] > arr[j]){\n            k = j;\n          \
    \  while(k >= 0 && arr[k - 1] > arr[k]){\n                arr[k] = arr[k - 1];\n\
    \                k--;\n            }\n            arr[k] = arr[j];\n         \
    \   j--;\n        }\n        arr[j] = arr[i];\n    }\n    return arr;\n}\n", " \
    \   arr.sort(function(a, b){\n        var a_bin = bin(a);\n        var b_bin =\
    \ bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return x==='1';});\n\
    \        var b_ones = b_bin.split('').filter(function(x){return x==='1';});\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_sum = a_ones.reduce(function(a, b){return a+b;});\n      \
    \  var b_ones_sum = b_ones.reduce(function(a, b){return a+b;});\n        var a_ones_sum_dec\
    \ = a_ones_sum/Math.pow(2, a_ones_len);\n        var b_ones_sum_dec = b_ones_sum/Math.pow(2,\
    \ b_ones_len);\n        var a_ones_sum_dec_str = a_ones_sum_dec.toFixed(2);\n\
    \        var b_ones_sum_dec_str = b_ones_sum_dec.toFixed(2);\n        var a_ones_sum_dec_str\
    \ = a_ones_sum_dec_str.split('.');\n        var b_ones_sum_dec_str = b_ones_sum_dec_str.split('.');\n\
    \        var a_ones_sum_dec_str = a_ones_sum_dec_str[0];\n        var b_ones_sum_dec_str\
    \ = b_ones_sum_dec_str[0];\n        var a_ones_sum_dec_str = a_ones_sum_dec_str.replace(/0+$/,\
    \ '');\n        var b_ones_sum_dec_str = b_ones_sum_dec_str.replace(/0+$/, '');\n\
    \        var a_ones_sum_dec_str = a_ones_sum_dec_str.replace(/^0+/g, '');\n  \
    \      var b_ones_sum_dec_str = b_ones_sum_dec_str.replace(/^0+/g, '');\n    \
    \    var a_ones_sum_dec_str = a_ones_sum_dec_str.replace(/\\.$/, '');\n      \
    \  var b_ones_sum_dec_str = b_ones_sum_dec_str.replace(/\\.$/, '');\n        var\
    \ a_ones_sum_dec_str = a_ones_sum_dec_str.replace(/\\.$/, '');\n        var b_ones_sum_dec_str\
    \ = b_ones_sum_dec_str.replace(/\\.$/, '');\n        var a_ones_sum_dec_str =\
    \ a_ones_sum_dec_str.replace(/\\.$/, '');\n        var b_ones_sum_dec_str = b_ones_sum_dec_str.replace(/\\\
    .$/, '');\n        var a_ones_sum_dec_str = a_ones_sum_dec_str.replace(/\\.$/,\
    \ '');\n        var b_ones_sum_dec_str = b_ones_sum_dec_str.replace(/\\.$/, '');\n\
    \        var ", "    var len = arr.length;\n    var sortArr = new Array(len);\n\
    \    for(var i=0; i<len; i++){\n        sortArr[i] = 0;\n    }\n    for(var i=0;\
    \ i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j] == 1){\n\
    \                sortArr[j] += 1;\n            }\n        }\n    }\n    for(var\
    \ i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n            if(sortArr[j]\
    \ > sortArr[j+1]){\n                var temp = sortArr[j];\n                sortArr[j]\
    \ = sortArr[j+1];\n                sortArr[j+1] = temp;\n            }\n     \
    \   }\n    }\n    return sortArr;\n}\n", "    var len = arr.length;\n    var swapped;\n\
    \    var sorted;\n    var i;\n\n    for(i = 0; i < len; i++){\n        swapped\
    \ = false;\n        for(j = 0; j < i; j++){\n            if(arr[j] > arr[j + 1]){\n\
    \                var temp = arr[j];\n                arr[j] = arr[j + 1];\n  \
    \              arr[j + 1] = temp;\n                swapped = true;\n         \
    \   }\n        }\n        if(!swapped){\n            sorted = arr.slice(0);\n\
    \            sorted.sort();\n            return sorted;\n        }\n    }\n  \
    \  return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp != 0){\n \
    \           return a_ones_comp;\n        }\n        if(b_ones_comp != 0){\n  \
    \          return b_ones_comp;\n        }\n        return a - b;\n    });\n  \
    \  return arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n\
    \    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n      \
    \      if(arr[i] == arr[j]){\n                for(k = 0; k < len; k++){\n    \
    \                if(arr[k] > arr[j]){\n                        sorted[k] = arr[k];\n\
    \                    }else{\n                        sorted[k] = arr[j];\n   \
    \                 }\n                }\n                for(k = len - 1; k >=\
    \ j; k--){\n                    sorted[k] = arr[k];\n                }\n     \
    \           break;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    arr.sort(function(a, b){\n        return a - b;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        for(var\
    \ j=0; j<len; j++){\n            if(arr[j] == 1){\n                swap(arr, j,\
    \ j);\n            }\n        }\n    }\n    return arr;\n}\n", "    var len =\
    \ arr.length;\n    var sorted_arr = [];\n    var sorted_arr2 = [];\n    var sorted_arr3\
    \ = [];\n    var sorted_arr4 = [];\n    var sorted_arr5 = [];\n    var sorted_arr6\
    \ = [];\n    var sorted_arr7 = [];\n    var sorted_arr8 = [];\n    var sorted_arr9\
    \ = [];\n    var sorted_arr10 = [];\n    var sorted_arr11 = [];\n    var sorted_arr12\
    \ = [];\n    var sorted_arr13 = [];\n    var sorted_arr14 = [];\n    var sorted_arr15\
    \ = [];\n    var sorted_arr16 = [];\n    var sorted_arr17 = [];\n    var sorted_arr18\
    \ = [];\n    var sorted_arr19 = [];\n    var sorted_arr20 = [];\n    var sorted_arr21\
    \ = [];\n    var sorted_arr22 = [];\n    var sorted_arr23 = [];\n    var sorted_arr24\
    \ = [];\n    var sorted_arr25 = [];\n    var sorted_arr26 = [];\n    var sorted_arr27\
    \ = [];\n    var sorted_arr28 = [];\n    var sorted_arr29 = [];\n    var sorted_arr30\
    \ = [];\n    var sorted_arr31 = [];\n    var sorted_arr32 = [];\n    var sorted_arr33\
    \ = [];\n    var sorted_arr34 = [];\n    var sorted_arr35 = [];\n    var sorted_arr36\
    \ = [];\n    var sorted_arr37 = [];\n    var sorted_arr38 = [];\n    var sorted_arr39\
    \ = [];\n    var sorted_arr40 = [];\n    var sorted_arr41 = [];\n    var sorted_arr42\
    \ = [];\n    var sorted_arr43 = [];\n    var sorted_arr44 = [];\n    var sorted_arr45\
    \ = [];\n    var sorted_arr46 = [];\n    var sorted_arr47 = [];\n    var sorted_arr48\
    \ = [];\n    var sorted_arr49 = [];\n    var sorted_arr50 = [];\n    var sorted_arr51\
    \ = [];\n    var sorted_arr52 = [];\n    var sorted_arr53 = [];\n    var sorted_arr54\
    \ = [];\n    var sorted_arr55 = [];\n    var sorted_arr56 = [];\n    var sorted_arr57\
    \ = [];\n    var sorted_arr58 = [];\n    var sorted_arr59 = [];\n    var sorted_arr60\
    \ = [];\n    var sorted_arr61 = [];\n    var sorted_arr62 = [];\n    var sorted_arr63\
    \ = [];\n    var sorted_arr64 = [];\n    var sorted_arr65 = [];\n    var sorted_arr66\
    \ = [];\n    var sorted_arr67 = [];\n    var sorted_arr68 = [];\n    var sorted_arr69\
    \ = [];\n    var sorted_arr70 = [];\n    var sorted_arr71 = [];\n    var sorted_arr72\
    \ = [];\n    var sorted_arr73 = [];\n    var sorted_arr74 = [];\n    var sorted_arr75\
    \ = [];\n    var sorted_arr76 = [];\n    var sorted_arr77 = [];\n    var sorted_arr78\
    \ = [];\n    var sorted_arr79 = [];\n    var sorted_arr80 = [];\n    var sorted_arr81\
    \ = [];\n    var sorted_arr8", "    arr.sort(function(a, b){\n        return count_ones(a)\
    \ - count_ones(b);\n    });\n    return arr;\n}\n", "  var len = arr.length;\n\
    \  if(len < 1) return arr;\n  var max = 0;\n  var min = 0;\n  for(var i=0; i<len;\
    \ i++){\n    var cur = arr[i];\n    var curLen = cur.length;\n    if(curLen >\
    \ max){\n      max = curLen;\n    }\n    if(curLen < min){\n      min = curLen;\n\
    \    }\n  }\n  if(min == max){\n    return arr;\n  }\n  var result = [];\n  for(var\
    \ i=0; i<len; i++){\n    var cur = arr[i];\n    var curLen = cur.length;\n   \
    \ for(var j=0; j<max; j++){\n      if(cur[j] == 1){\n        result.push(cur);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[j] == 0){\n                arr.splice(j,1);\n                len--;\n\
    \            }\n        }\n    }\n    arr.sort(function(a,b){\n        var aNum\
    \ = parseInt(a, 2);\n        var bNum = parseInt(b, 2);\n        if(aNum == bNum){\n\
    \            return 0;\n        }\n        if(aNum > bNum){\n            return\
    \ 1;\n        }\n        return -1;\n    });\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i] ==\
    \ 1){\n                k = j;\n                while(arr[k] == 1){\n         \
    \           k++;\n                }\n                arr[k] = arr[j];\n      \
    \          arr[j] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j - 1]\
    \ > arr[j]){\n            k = j;\n            while(k >= 0 && arr[k - 1] > arr[k]){\n\
    \                arr[k] = arr[k - 1];\n                k--;\n            }\n \
    \           arr[k] = arr[j];\n            j--;\n        }\n        arr[j] = arr[i];\n\
    \    }\n    return arr;\n}\n", "  var len = arr.length;\n  if(len < 1) return\
    \ arr;\n  var result = [];\n  var ones = [];\n  var zeros = [];\n  var i = 0;\n\
    \  while(i < len){\n    var one = arr[i];\n    var zero = arr[i-1];\n    if(one\
    \ > zero){\n      result.push(zero);\n      zeros.push(zero);\n    }else{\n  \
    \    result.push(one);\n      ones.push(one);\n    }\n    i++;\n  }\n  while(i\
    \ < len){\n    var one = arr[i];\n    var zero = zeros[i-1];\n    if(one > zero){\n\
    \      result.push(zero);\n      zeros.push(zero);\n    }else{\n      result.push(one);\n\
    \      ones.push(one);\n    }\n    i++;\n  }\n  while(i < len){\n    var one =\
    \ ones[i-1];\n    var zero = zeros[i];\n    if(one > zero){\n      result.push(zero);\n\
    \      zeros.push(zero);\n    }else{\n      result.push(one);\n      ones.push(one);\n\
    \    }\n    i++;\n  }\n  while(i < len){\n    var one = ones[i];\n    var zero\
    \ = zeros[i];\n    if(one > zero){\n      result.push(zero);\n      zeros.push(zero);\n\
    \    }else{\n      result.push(one);\n      ones.push(one);\n    }\n    i++;\n\
    \  }\n  while(i < len){\n    var one = ones[i];\n    var zero = zeros[i];\n  \
    \  if(one > zero){\n      result.push(zero);\n      zeros.push(zero);\n    }else{\n\
    \      result.push(one);\n      ones.push(one);\n    }\n    i++;\n  }\n  while(i\
    \ < len){\n    var one = ones[i];\n    var zero = zeros[i];\n    if(one > zero){\n\
    \      result.push(zero);\n      zeros.push(zero);\n    }else{\n      result.push(one);\n\
    \      ones.push(one);\n    }\n    i++;\n  }\n  while(i < len){\n    var one =\
    \ ones[i];\n    var zero = zeros[i];\n    if(one > zero){\n      result.push(zero);\n\
    \      zeros.push(zero);\n    }else{\n      result.push(one);\n      ones.push(one);\n\
    \    }\n    i++;\n  }\n  while(i < len){\n    var one = ones[i];\n    var zero\
    \ = zeros[i];\n    if(one > zero){\n      result.push(zero);\n      zeros.push(zero);\n\
    \    }else{\n      result.push(one);\n      ones.push(one);\n    }\n    i++;\n\
    \  }\n  while(i < len){\n", "    var len = arr.length;\n    var sorted = [];\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = 0;\n   \
    \ }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n  \
    \          if(arr[i] == arr[j]){\n                sorted[i]++;\n             \
    \   sorted[j]--;\n            }\n        }\n    }\n    for(i = 0; i < len; i++){\n\
    \        for(k = i + 1; k < len; k++){\n            if(arr[i] == arr[k]){\n  \
    \              sorted[i]++;\n                sorted[k]--;\n            }\n   \
    \     }\n    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len;\
    \ j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n   \
    \             sorted[j]--;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    var sorted = new Array(len);\n    for(var\
    \ i=0; i<len; i++){\n        sorted[i] = i;\n    }\n    sorted.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.substr(a_bin.length-4);\n        var b_ones = b_bin.substr(b_bin.length-4);\n\
    \        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_comp = 0;\n        var b_ones_comp = 0;\n        for(var i=0;\
    \ i<a_ones_len; i++){\n            a_ones_comp += parseInt(a_ones[i]);\n     \
    \   }\n        for(var i=0; i<b_ones_len; i++){\n            b_ones_comp += parseInt(b_ones[i]);\n\
    \        }\n        if(a_ones_comp < b_ones_comp){\n            return -1;\n \
    \       }else if(a_ones_comp > b_ones_comp){\n            return 1;\n        }else{\n\
    \            return 0;\n        }\n    });\n    for(var i=0; i<len; i++){\n  \
    \      sorted[i] = arr[i];\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n               \
    \ k = j;\n                while(arr[k] == arr[j]){\n                    k++;\n\
    \                }\n                arr[k] = arr[i];\n                arr[i] =\
    \ k;\n            }\n        }\n    }\n    return sorted;\n}\n", "    var len\
    \ = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n      \
    \  for(j = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n        \
    \        sorted[i]++;\n                sorted[j]--;\n            }\n        }\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n\
    \            if(sorted[i] > sorted[j]){\n                k = sorted[i];\n    \
    \            sorted[i] = sorted[j];\n                sorted[j] = k;\n        \
    \    }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[i] == arr[j]){\n                arr.splice(j,1);\n                len--;\n\
    \            }\n        }\n    }\n    arr.sort(function(a,b){\n        var aNum\
    \ = parseInt(a, 10);\n        var bNum = parseInt(b, 10);\n        if(aNum ==\
    \ bNum){\n            return aNum - bNum;\n        }\n        return aNum > bNum\
    \ ? 1 : -1;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n    if(len\
    \ < 1) return arr;\n    var max_ones = Math.max.apply(null, arr);\n    var min_ones\
    \ = Math.min.apply(null, arr);\n    var max_decimal = max_ones - min_ones;\n \
    \   var min_decimal = min_ones - max_ones;\n    var decimal = max_decimal - min_decimal;\n\
    \    var decimal_sign = decimal > 0 ? 1 : -1;\n    var arr2 = [];\n    for(var\
    \ i=0; i<len; i++){\n        var num = arr[i];\n        var num_ones = num.toString(2).length;\n\
    \        var num_decimal = num - Math.floor(num);\n        var num_decimal_sign\
    \ = num_decimal > 0 ? 1 : -1;\n        var num_decimal_sign = num_decimal_sign\
    \ * decimal;\n        arr2.push(num_decimal_sign * Math.floor(num));\n    }\n\
    \    return arr2;\n}", "    var len = arr.length;\n    var ret = [];\n    var\
    \ i = 0;\n    var j = 0;\n    var k = 0;\n    var tmp = 0;\n    var tmp2 = 0;\n\
    \    var tmp3 = 0;\n    var tmp4 = 0;\n    var tmp5 = 0;\n    while(i < len){\n\
    \        j = i;\n        while(j < len){\n            tmp = arr[j];\n        \
    \    tmp2 = arr[j+1];\n            tmp3 = arr[j+2];\n            tmp4 = arr[j+3];\n\
    \            tmp5 = arr[j+4];\n            if(tmp == 1){\n                arr[j]\
    \ = tmp2;\n                arr[j+1] = tmp3;\n                arr[j+2] = tmp4;\n\
    \                arr[j+3] = tmp5;\n                j += 5;\n            }else\
    \ if(tmp == 0){\n                arr[j] = tmp2;\n                arr[j+1] = tmp3;\n\
    \                arr[j+2] = tmp4;\n                arr[j+3] = tmp5;\n        \
    \        j += 4;\n            }else{\n                arr[j] = tmp2;\n       \
    \         arr[j+1] = tmp3;\n                arr[j+2] = tmp4;\n               \
    \ arr[j+3] = tmp5;\n                j += 3;\n            }\n        }\n      \
    \  i++;\n    }\n    while(j < len){\n        arr.push(arr[j]);\n        j++;\n\
    \    }\n    return arr;\n}\n", "  var len = arr.length;\n  if(len < 2){\n    return\
    \ arr;\n  }\n  if(len % 2){\n    return arr.sort();\n  }\n  var ones = arr.map(function(x){\n\
    \    return parseInt(x, 2);\n  });\n  var zeros = arr.map(function(x){\n    return\
    \ parseInt(x, 10) - 1;\n  });\n  var maxOnes = Math.max.apply(null, ones);\n \
    \ var maxZeros = Math.max.apply(null, zeros);\n  var maxOnesZeros = maxOnes -\
    \ maxZeros;\n  var maxOnesZeros_ = maxOnesZeros + 1;\n  var onesZeros = ones.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x + maxOnesZeros_;\n  });\n  var zeros_ = zeros.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var zeros_ = zeros.map(function(x){\n\
    \    return x + maxOnesZeros_;\n  });\n  var ones_ = ones.map(function(x){\n \
    \   return x - maxOnesZeros_;\n  });\n  var ones_ = ones.map(function(x){\n  \
    \  return x + maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x + maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x + maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x + maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x + maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x - maxOnesZeros_;\n  });\n  var onesZeros_ = onesZeros.map(function(x){\n\
    \    return x + max", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n\
    \        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp == 0){\n \
    \           return b_ones_comp;\n        }\n        if(b_ones_comp == 0){\n  \
    \          return a_ones_comp;\n        }\n        return a_ones_comp - b_ones_comp;\n\
    \    });\n    return arr;\n}\n", "  var len = arr.length;\n  if(len < 2){\n  \
    \  return arr;\n  }\n  var ones = count_ones(arr);\n  var sorted = new Array(len);\n\
    \  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a,\
    \ b){\n    var aVal = count_ones(a);\n    var bVal = count_ones(b);\n    if(aVal\
    \ == bVal){\n      return sort_number(a);\n    }\n    return aVal - bVal;\n  });\n\
    \  for(var i=0; i<len; i++){\n    sorted[i] = sorted[i].toString();\n  }\n  return\
    \ sorted;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = parseInt(a.toString(2),\
    \ 2);\n        var b_ones = parseInt(b.toString(2), 2);\n        return a_ones\
    \ - b_ones;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] > arr[j]){\n                k\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = k;\n \
    \           }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var cur = 0;\n    var cnt = 0;\n    for(var\
    \ i=0;i<len;i++){\n        while(cur < len && arr[cur] == 1){\n            cur++;\n\
    \            cnt++;\n        }\n        ret[i] = arr[cur];\n        arr[cur] =\
    \ cnt;\n        cnt = 1;\n        cur++;\n    }\n    return ret;\n}\n", "    var\
    \ len = arr.length;\n    if(len < 2) return arr;\n    var ones = count_ones(arr);\n\
    \    var len = ones.length;\n    if(len == 0) return arr;\n    var max = 0;\n\
    \    for(var i = 0; i < len; i++){\n        max = Math.max(max, ones[i]);\n  \
    \  }\n    var arr = arr.slice();\n    for(var i = 0; i < len; i++){\n        var\
    \ index = arr.indexOf(ones[i]);\n        if(index != -1) arr.splice(index, 1);\n\
    \    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    for(var\
    \ i = 0; i < len; i++){\n        arr.push(ones[i]);\n    }\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = new Array(len);\n    var i,\
    \ j, k;\n    for(i = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n \
    \   for(i = 0; i < len; i++){\n        for(j = i + 1; j < len; j++){\n       \
    \     k = j + 1;\n            while(k <= len && arr[k] === 0){\n             \
    \   k++;\n            }\n            if(arr[k] > arr[j]){\n                sorted[i]\
    \ = arr[k];\n                sorted[j] = arr[i];\n                i = j;\n   \
    \             j = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n        var\
    \ b_ones = count_ones(b);\n        var a_ones_comp = a_ones - b_ones;\n      \
    \  var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp == 0){\n       \
    \     return 0;\n        }\n        if(b_ones_comp == 0){\n            return\
    \ 1;\n        }\n        return a_ones_comp * b_ones_comp;\n    });\n    return\
    \ arr;\n}\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n    \
    \    var cur = arr[i];\n        var next = 0;\n        for(var j=i; j<len; j++){\n\
    \            if(arr[j] <= cur){\n                next = j;\n                break;\n\
    \            }\n        }\n        if(next != i){\n            var tmp = arr[i];\n\
    \            arr[i] = arr[next];\n            arr[next] = tmp;\n        }\n  \
    \  }\n    return arr;\n}\n", "  var len = arr.length;\n  if(len < 2) return arr;\n\
    \  var ones = count_ones(arr);\n  var cmp = function(a, b){\n    return a - b;\n\
    \  };\n  if(ones == 0) return arr;\n  if(ones == len) return arr.sort(cmp);\n\
    \  var arr = arr.slice();\n  arr.sort(function(a, b){\n    var c = cmp(a, b);\n\
    \    if(c == 0) return ones - count_ones(arr.slice(0, arr.length - 1));\n    return\
    \ c;\n  });\n  return arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n\
    \        return arr;\n    }\n    var ones = count_ones(arr);\n    var sorted_arr\
    \ = [];\n    for(var i=0; i<len; i++){\n        sorted_arr.push(arr[i]);\n   \
    \ }\n    sorted_arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        if(a_ones < b_ones){\n         \
    \   return -1;\n        }\n        if(a_ones > b_ones){\n            return 1;\n\
    \        }\n        return 0;\n    });\n    return sorted_arr;\n}\n", "    var\
    \ len = arr.length;\n    if(len < 1) return arr;\n    var result = [];\n    var\
    \ ones = [1];\n    var zeros = [0];\n    var minOnes = Math.pow(2,len-1);\n  \
    \  var minZeros = Math.pow(2,len);\n    for(var i=0;i<len;i++){\n        var oneCount\
    \ = 0;\n        var zeroCount = 0;\n        for(var j=0;j<len;j++){\n        \
    \    if(arr[j] == 1){\n                oneCount++;\n            }\n          \
    \  if(arr[j] == 0){\n                zeroCount++;\n            }\n        }\n\
    \        if(oneCount < minOnes){\n            ones = [1];\n            for(var\
    \ j=0;j<len;j++){\n                if(arr[j] == 1){\n                    ones[j]\
    \ = 1;\n                }\n            }\n        }else if(oneCount > minOnes){\n\
    \            ones = [1];\n            for(var j=0;j<len;j++){\n              \
    \  if(arr[j] == 0){\n                    ones[j] = 0;\n                }\n   \
    \         }\n        }\n        if(zeroCount < minZeros){\n            zeros =\
    \ [0];\n            for(var j=0;j<len;j++){\n                if(arr[j] == 0){\n\
    \                    zeros[j] = 0;\n                }\n            }\n       \
    \ }else if(zeroCount > minZeros){\n            zeros = [0];\n            for(var\
    \ j=0;j<len;j++){\n                if(arr[j] == 1){\n                    zeros[j]\
    \ = 1;\n                }\n            }\n        }\n    }\n    for(var i=0;i<len;i++){\n\
    \        if(ones[i] != 0){\n            result.push(ones[i]);\n        }\n   \
    \     if(zeros[i] != 0){\n            result.push(zeros[i]);\n        }\n    }\n\
    \    result.sort(function(a,b){\n        return a - b;\n    });\n    return result;\n\
    }\n", "  var len = arr.length;\n  if(len == 0){\n    return arr;\n  }\n  if(len\
    \ == 1){\n    return arr[0];\n  }\n  var ones = count_ones(arr);\n  var sorted\
    \ = new Array(len);\n  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n\
    \  sorted.sort(function(a, b){\n    var aOnes = count_ones(a);\n    var bOnes\
    \ = count_ones(b);\n    if(aOnes < bOnes){\n      return -1;\n    }\n    if(aOnes\
    \ > bOnes){\n      return 1;\n    }\n    return count_ones(a) - count_ones(b);\n\
    \  });\n  for(var i=0; i<len; i++){\n    sorted[i] = sorted[i].toString();\n \
    \ }\n  return sorted;\n}\n", "    var len = arr.length;\n    var temp = 0;\n \
    \   var i = 0;\n    var j = 0;\n    var k = 0;\n    var tempArray = [];\n    while(i\
    \ < len){\n        j = i;\n        while(j < len){\n            if(arr[j] % 2\
    \ == 1){\n                j++;\n            }else{\n                break;\n \
    \           }\n        }\n        while(j < len){\n            k = j;\n      \
    \      while(k >= 0 && arr[k] % 2 == 0){\n                k--;\n            }\n\
    \            if(k >= 0){\n                break;\n            }\n            k++;\n\
    \        }\n        if(j > i){\n            tempArray.push(arr[i]);\n        \
    \    i++;\n        }else{\n            tempArray.push(arr[j]);\n            j++;\n\
    \        }\n    }\n    while(i < len){\n        tempArray.push(arr[i]);\n    \
    \    i++;\n    }\n    while(j < len){\n        tempArray.push(arr[j]);\n     \
    \   j++;\n    }\n    while(j < len){\n        tempArray.push(arr[k]);\n      \
    \  k++;\n    }\n    return tempArray;\n}\n", "    return arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones\
    \ - a_ones;\n        if(a_ones_comp == 0){\n            return 0;\n        }\n\
    \        if(b_ones_comp == 0){\n            return 1;\n        }\n        return\
    \ a_ones_comp * b_ones_comp;\n    });\n}\n", "    var len = arr.length;\n    var\
    \ ret = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var tmp;\n  \
    \  var tmp2;\n    while(i < len){\n        tmp = arr[i];\n        tmp2 = arr[j];\n\
    \        if(tmp > tmp2){\n            arr[i] = tmp2;\n            arr[j] = tmp;\n\
    \            i++;\n            j++;\n        }else{\n            arr[i] = tmp;\n\
    \            arr[j] = tmp2;\n            i++;\n            j++;\n            k++;\n\
    \        }\n    }\n    while(j < len){\n        arr[k] = arr[j];\n        k++;\n\
    \        j++;\n    }\n    while(i < len){\n        arr[k] = arr[i];\n        k++;\n\
    \        i++;\n    }\n    return arr;\n}", "  var len = arr.length;\n  if(len\
    \ < 1) return arr;\n  var ones = count_ones(arr);\n  var sorted = new Array(len);\n\
    \  for(var i=0; i<len; i++){\n    sorted[i] = arr[i];\n  }\n  sorted.sort(function(a,\
    \ b){\n    var aVal = count_ones(a);\n    var bVal = count_ones(b);\n    if(aVal\
    \ == bVal){\n      return sort_number(a);\n    }\n    return aVal - bVal;\n  });\n\
    \  for(i=0; i<len; i++){\n    sorted[i] = sorted[i].toString();\n  }\n  return\
    \ sorted;\n}\n", "\tlet len = arr.length;\n\tlet max = 0;\n\tfor(let i = 0; i\
    \ < len; i++){\n\t\tlet ones = arr[i].toString(2).split('').reduce((acc, val)\
    \ => acc + +val, 0);\n\t\tmax = Math.max(max, ones);\n\t}\n\tfor(let i = 0; i\
    \ < len; i++){\n\t\tlet ones = arr[i].toString(2).split('').reduce((acc, val)\
    \ => acc + +val, 0);\n\t\tlet dec = (ones - max).toString(10);\n\t\tarr[i] = dec\
    \ + (dec < 10 ? '0' : '');\n\t}\n\treturn arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = a.toString(2);\n        var b_bin = b.toString(2);\n\
    \        var a_ones = a_bin.length - 1;\n        var b_ones = b_bin.length - 1;\n\
    \        var a_ones_count = a_ones.toString();\n        var b_ones_count = b_ones.toString();\n\
    \        var a_ones_count_num = parseInt(a_ones_count);\n        var b_ones_count_num\
    \ = parseInt(b_ones_count);\n        var a_ones_count_num_str = a_ones_count_num.toString();\n\
    \        var b_ones_count_num_str = b_ones_count_num.toString();\n        var\
    \ a_ones_count_num_num_str = a_ones_count_num_str.replace(/0/g, '');\n       \
    \ var b_ones_count_num_num_str = b_ones_count_num_str.replace(/0/g, '');\n   \
    \     var a_ones_count_num_num_num_str = a_ones_count_num_num_str.replace(/1/g,\
    \ '');\n        var b_ones_count_num_num_num_str = b_ones_count_num_num_str.replace(/1/g,\
    \ '');\n        var a_ones_count_num_num_num_num_str = a_ones_count_num_num_num_str.replace(/0/g,\
    \ '');\n        var b_ones_count_num_num_num_num_str = b_ones_count_num_num_num_str.replace(/0/g,\
    \ '');\n        var a_ones_count_num_num_num_num_num_str = a_ones_count_num_num_num_num_str.replace(/1/g,\
    \ '');\n        var b_ones_count_num_num_num_num_str = b_ones_count_num_num_num_str.replace(/1/g,\
    \ '');\n        var a_ones_count_num_num_num_num_num_str = a_ones_count_num_num_num_num_str.replace(/0/g,\
    \ '');\n        var b_ones_count_num_num_num_num_num_str = b_ones_count_num_num_num_num_str.replace(/0/g,\
    \ '');\n        var a_ones_count_num_num_num_num_num_num_str = a_ones_count_num_num_num_num_num_str.replace(/1/g,\
    \ '');\n        var b_ones_count_num_num_num_num_num_num_str = b_ones_count_num_num_num_num_num_str.replace(/1/g,\
    \ '');\n        var a_ones_count_num_num_num_num_num_num_num_str = a_ones_count_num_num_num_num_num_num_str.replace(/0/g,\
    \ '');\n        var b_ones_count_num_num_num_num_num_num_str = b_ones_count_num_num_num_num_num_num_str.replace(/0/g,\
    \ '');\n        var a_ones_count_num_num_num_num_num_num_num_str = a_ones_count_num_num_num_num_num_num_num_str.replace(/1/g,\
    \ '');\n        var b_ones_count_num_num_num_num_num_num_num_str = b_ones_count_num_num_num_num_num_num_num_str.replace(/1/g,\
    \ '');\n        var a_ones_", "    arr.sort(function(a, b){\n        var a_bin\
    \ = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_count = a_ones.length;\n        var b_ones_count = b_ones.length;\n\
    \        var a_ones_sum = 0;\n        var b_ones_sum = 0;\n        a_ones.forEach(function(x){a_ones_sum\
    \ += x;});\n        b_ones.forEach(function(x){b_ones_sum += x;});\n        var\
    \ a_ones_average = a_ones_sum / a_ones_count;\n        var b_ones_average = b_ones_sum\
    \ / b_ones_count;\n        var a_ones_decimal = a_ones_average * 10;\n       \
    \ var b_ones_decimal = b_ones_average * 10;\n        return a_ones_decimal - b_ones_decimal;\n\
    \    });\n    return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones\
    \ = count_ones(a);\n        var b_ones = count_ones(b);\n        var a_ones_comp\
    \ = a_ones - b_ones;\n        var b_ones_comp = b_ones - a_ones;\n        if(a_ones_comp\
    \ == 0){\n            return 0;\n        }\n        if(b_ones_comp == 0){\n  \
    \          return 1;\n        }\n        return a_ones_comp > b_ones_comp ? 1\
    \ : -1;\n    });\n    return arr;\n}\n", "    arr.sort(function(a, b){\n     \
    \   var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_count = a_ones.length;\n        var b_ones_count\
    \ = b_ones.length;\n        if(a_ones_count > b_ones_count){\n            return\
    \ -1;\n        }else if(a_ones_count < b_ones_count){\n            return 1;\n\
    \        }else{\n            return a_ones_count - b_ones_count;\n        }\n\
    \    });\n    return arr;\n}\n", "    var len = arr.length;\n    var result =\
    \ [];\n    var ones = [];\n    var zeros = [];\n    var i;\n    for(i = 0; i <\
    \ len; i++){\n        var one = arr[i];\n        var zero = 0;\n        while(one\
    \ && one != 0){\n            zero += one & -one;\n            one = one >> 1;\n\
    \        }\n        ones.push(zero);\n        zeros.push(one);\n    }\n    for(i\
    \ = 0; i < len; i++){\n        var one = ones[i];\n        var zero = zeros[i];\n\
    \        var index = one ^ zero;\n        while(index > 0){\n            result.push(zero);\n\
    \            index--;\n        }\n        result.push(one);\n    }\n    return\
    \ result;\n}\n", "    var len = arr.length;\n    var maxOnes = 0;\n    var minOnes\
    \ = Number.MAX_VALUE;\n    var maxDecimal = 0;\n    var minDecimal = Number.MAX_VALUE;\n\
    \    var maxDecimalString = '';\n    var minDecimalString = '';\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLenLen = 0;\n\
    \    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n \
    \   var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n \
    \   var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n \
    \   var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n \
    \   var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n \
    \   var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n \
    \   var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n \
    \   var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n \
    \   var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n \
    \   var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n \
    \   var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n \
    \   var maxDecimalStringLen = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen\
    \ = 0;\n    var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n \
    \   var minDecimalStringLen = 0;\n    var maxDecimalStringLen = 0;\n    var minDecimalStringLen\
    \ = 0;\n    var maxDecimalString", "    var len = arr.length;\n    var sorted\
    \ = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n       \
    \ sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j = i\
    \ + 1; j < len; j++){\n            if(arr[j] < arr[i]){\n                k = j;\n\
    \                while(arr[k] == arr[i]){\n                    k++;\n        \
    \        }\n                arr[k] = arr[i];\n                arr[i] = k;\n  \
    \          }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var max = 0;\n    var min = 0;\n    var mid = 0;\n    var temp = 0;\n   \
    \ var swap = 0;\n    for(var i = 0; i < len; i++){\n        temp = arr[i];\n \
    \       max = temp > max ? temp : max;\n        min = temp < min ? temp : min;\n\
    \        mid = max - (max - min) / 2;\n        swap = arr[i];\n        arr[i]\
    \ = arr[mid];\n        arr[mid] = swap;\n    }\n    return arr;\n}\n", "    var\
    \ len = arr.length;\n    var ret = new Array(len);\n    var cnt = 0;\n    for(var\
    \ i=0; i<len; i++){\n        while(arr[i] === 0){\n            cnt++;\n      \
    \      if(cnt === len){\n                ret[i] = 0;\n                break;\n\
    \            }\n            i++;\n        }\n        ret[i] = arr[i];\n    }\n\
    \    return ret;\n}\n", "    var len = arr.length;\n    if(len < 2){\n       \
    \ return arr;\n    }\n    var ones = count_ones(arr);\n    var sorted_arr = [];\n\
    \    for(var i=0; i<len; i++){\n        sorted_arr.push(arr[i]);\n    }\n    sorted_arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        if(a_ones < b_ones){\n            return -1;\n        }else if(a_ones\
    \ > b_ones){\n            return 1;\n        }else{\n            return 0;\n \
    \       }\n    });\n    return sorted_arr;\n}\n", "    arr.sort(function(a, b){\n\
    \        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n  \
    \      var a_ones_comp = a_ones - b_ones;\n        var b_ones_comp = b_ones -\
    \ a_ones;\n        if(a_ones_comp == 0){\n            return b_ones_comp;\n  \
    \      }\n        if(b_ones_comp == 0){\n            return a_ones_comp;\n   \
    \     }\n        return a_ones_comp - b_ones_comp;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        for(j = i+1; j < len; j++){\n           \
    \ k = arr[i]*arr[j];\n            if(k !== 0){\n                sorted.push(k);\n\
    \            }\n        }\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i+1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k !==\
    \ 0){\n                sorted.push(k);\n            }\n        }\n    }\n    return\
    \ sorted;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = parseInt(a.toString(2),\
    \ 2);\n        var b_ones = parseInt(b.toString(2), 2);\n        return a_ones\
    \ - b_ones;\n    });\n    return arr;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        j = i;\n\
    \        while(j > 0 && arr[j-1] > arr[j]){\n            k = j;\n            while(k\
    \ >= 0 && arr[k-1] > arr[k]){\n                arr[k] = arr[k-1];\n          \
    \      k--;\n            }\n            arr[k] = arr[j];\n            j--;\n \
    \       }\n        arr[j] = arr[i];\n    }\n    return arr;\n}\n", "    var len\
    \ = arr.length;\n    var sorted = new Array(len);\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i <\
    \ len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i] ==\
    \ arr[j]){\n                k = j;\n                while(arr[k] == arr[j]){\n\
    \                    k++;\n                }\n                if(arr[k] > arr[j]){\n\
    \                    sorted[i] = arr[k];\n                    sorted[j] = arr[i];\n\
    \                }else{\n                    sorted[i] = arr[j];\n           \
    \         sorted[k] = arr[i];\n                }\n                i = k;\n   \
    \         }\n        }\n    }\n    return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x == '1';});\n        var b_ones\
    \ = b_bin.split('').filter(function(x){return x == '1';});\n        var a_ones_count\
    \ = a_ones.length;\n        var b_ones_count = b_ones.length;\n        var a_ones_sum\
    \ = 0;\n        var b_ones_sum = 0;\n        a_ones.forEach(function(x){a_ones_sum\
    \ += x;});\n        b_ones.forEach(function(x){b_ones_sum += x;});\n        if(a_ones_count\
    \ > b_ones_count){\n            return a_ones_sum - b_ones_sum;\n        }else{\n\
    \            return b_ones_sum - a_ones_sum;\n        }\n    });\n    return arr;\n\
    }", "    var len = arr.length;\n    var sorted_arr = [];\n    var ones_arr = [];\n\
    \    var zeros_arr = [];\n    var i;\n    var j;\n    for(i = 0; i < len; i++){\n\
    \        if(arr[i] == 1){\n            ones_arr.push(i);\n        }else{\n   \
    \         zeros_arr.push(i);\n        }\n    }\n    for(i = 0; i < ones_arr.length;\
    \ i++){\n        for(j = 0; j < len; j++){\n            if(ones_arr[i] == j){\n\
    \                sorted_arr.push(arr[j]);\n                ones_arr.splice(i,\
    \ 1);\n                break;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < zeros_arr.length; i++){\n        for(j = 0; j < len; j++){\n           \
    \ if(zeros_arr[i] == j){\n                sorted_arr.push(arr[j]);\n         \
    \       zeros_arr.splice(i, 1);\n                break;\n            }\n     \
    \   }\n    }\n    return sorted_arr;\n}", "    var len = arr.length;\n    if(len\
    \ < 1) return arr;\n    var max = 0;\n    var min = 0;\n    for(var i=0; i<len;\
    \ i++){\n        var cur = arr[i];\n        if(cur > max){\n            max =\
    \ cur;\n        }\n        if(cur < min){\n            min = cur;\n        }\n\
    \    }\n    if(min === max){\n        return arr;\n    }\n    var mid = Math.floor((min+max)/2);\n\
    \    var left = arr.slice(0, mid);\n    var right = arr.slice(mid);\n    return\
    \ sort_array(left).concat(sort_array(right));\n}\n", "\tlet sortedArr = arr.slice();\n\
    \tsortedArr.sort((a,b)=>{\n\t\tlet ones = Math.log2(a);\n\t\tlet twos = Math.log2(b);\n\
    \t\tif(ones > twos){\n\t\t\treturn 1;\n\t\t}else if(ones < twos){\n\t\t\treturn\
    \ -1;\n\t\t}else{\n\t\t\treturn a - b;\n\t\t}\n\t});\n\treturn sortedArr;\n}\n",
  "  var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  if(len % 2){\n\
    \    return arr.sort();\n  }\n  var ones = arr.filter(function(x){\n    return\
    \ x === 1;\n  });\n  var len = ones.length;\n  if(len === 0){\n    return arr;\n\
    \  }\n  var twos = arr.filter(function(x){\n    return x === 2;\n  });\n  var\
    \ len = twos.length;\n  var half = len / 2;\n  var i = 0;\n  var j = 0;\n  var\
    \ k = 0;\n  var tmp;\n  var tmp2;\n  while(i < half){\n    tmp = ones[i];\n  \
    \  tmp2 = twos[i];\n    if(tmp > tmp2){\n      twos[i] = tmp;\n      ones[i] =\
    \ tmp2;\n    }else{\n      twos[j] = tmp;\n      ones[j] = tmp2;\n    }\n    i++;\n\
    \    j++;\n    k++;\n  }\n  while(j < len){\n    tmp = ones[j];\n    tmp2 = twos[j];\n\
    \    if(tmp > tmp2){\n      twos[j] = tmp;\n      ones[j] = tmp2;\n    }else{\n\
    \      twos[k] = tmp;\n      ones[k] = tmp2;\n    }\n    j++;\n    k++;\n  }\n\
    \  while(i < len){\n    tmp = ones[i];\n    tmp2 = twos[i];\n    if(tmp > tmp2){\n\
    \      twos[i] = tmp;\n      ones[i] = tmp2;\n    }else{\n      twos[k] = tmp;\n\
    \      ones[k] = tmp2;\n    }\n    i++;\n    k++;\n  }\n  return arr;\n}\n", " \
    \   var len = arr.length;\n    var maxOnes = 0;\n    var minOnes = Number.MAX_VALUE;\n\
    \    var maxDecimal = 0;\n    var minDecimal = Number.MAX_VALUE;\n    for(var\
    \ i=0; i<len; i++){\n        var ones = arr[i].toString(2);\n        var decimal\
    \ = ones.length - ones.replace(/[^01]/g, '').length;\n        if(ones.length <\
    \ minOnes){\n            minOnes = ones.length;\n        }\n        if(ones.length\
    \ > maxOnes){\n            maxOnes = ones.length;\n        }\n        if(decimal\
    \ < minDecimal){\n            minDecimal = decimal;\n        }\n        if(decimal\
    \ > maxDecimal){\n            maxDecimal = decimal;\n        }\n    }\n    arr.sort(function(a,\
    \ b){\n        var aDecimal = a.toString(2).replace(/[^01]/g, '').length;\n  \
    \      var bDecimal = b.toString(2).replace(/[^01]/g, '').length;\n        if(aDecimal\
    \ < bDecimal){\n            return -1;\n        }\n        if(aDecimal > bDecimal){\n\
    \            return 1;\n        }\n        return 0;\n    });\n    for(var i=0;\
    \ i<len; i++){\n        arr[i] = parseInt(arr[i], 2);\n    }\n    for(var i=0;\
    \ i<len; i++){\n        arr[i] = arr[i].toString(10);\n    }\n    arr.sort(function(a,\
    \ b){\n        var aDecimal = a.toString(10).replace(/[^01]/g, '').length;\n \
    \       var bDecimal = b.toString(10).replace(/[^01]/g, '').length;\n        if(aDecimal\
    \ < bDecimal){\n            return -1;\n        }\n        if(aDecimal > bDecimal){\n\
    \            return 1;\n        }\n        return 0;\n    });\n    for(var i=0;\
    \ i<len; i++){\n        arr[i] = parseInt(arr[i], 10);\n    }\n    return arr;\n\
    }", "    var len = arr.length;\n    if(len < 1) return arr;\n    var result =\
    \ [];\n    var ones = [];\n    var zeros = [];\n    var i, j, k;\n    for(i =\
    \ 0; i < len; i++){\n        j = ones.length;\n        while(j--){\n         \
    \   if(arr[i] === ones[j]){\n                result.push(arr[i]);\n          \
    \      i = j;\n                break;\n            }\n        }\n        j = zeros.length;\n\
    \        while(j--){\n            if(arr[i] === zeros[j]){\n                result.push(arr[i]);\n\
    \                i = j;\n                break;\n            }\n        }\n  \
    \      if(i === len){\n            k = result.length;\n            while(--k){\n\
    \                result.push(0);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    var len = arr.length;\n    var temp = 0;\n    var i = 0;\n\
    \    var j = 0;\n    var k = 0;\n    var tempArr = [];\n    while(i < len){\n\
    \        while(j >= 0 && arr[j] == 0){\n            j--;\n        }\n        while(k\
    \ >= 0 && arr[k] == 0){\n            k--;\n        }\n        if(j < k){\n   \
    \         temp += arr[j];\n            tempArr[i] = temp;\n            i++;\n\
    \            j--;\n        }else{\n            temp += arr[k];\n            tempArr[i]\
    \ = temp;\n            i++;\n            k--;\n        }\n    }\n    return tempArr;\n\
    }\n", "    var len = arr.length;\n    if(len == 0) return arr;\n    var maxOnes\
    \ = 0, maxOnesCount = 0;\n    var minOnes = Number.MAX_VALUE, minOnesCount = 0;\n\
    \    for(var i = 0; i < len; i++){\n        var ones = arr[i];\n        if(ones\
    \ > maxOnes){\n            maxOnes = ones;\n            maxOnesCount = 1;\n  \
    \      }else if(ones == maxOnes){\n            maxOnesCount++;\n        }else{\n\
    \            maxOnesCount = 0;\n        }\n        if(ones < minOnes){\n     \
    \       minOnes = ones;\n            minOnesCount = 1;\n        }else if(ones\
    \ == minOnes){\n            minOnesCount++;\n        }else{\n            minOnesCount\
    \ = 0;\n        }\n    }\n    if(maxOnesCount > minOnesCount){\n        return\
    \ arr;\n    }\n    for(var i = 0; i < len; i++){\n        var ones = arr[i];\n\
    \        var onesCount = arr[i];\n        var maxOnesCount = maxOnesCount;\n \
    \       var minOnesCount = minOnesCount;\n        if(onesCount > maxOnesCount){\n\
    \            arr[i] = maxOnesCount;\n        }else if(onesCount == maxOnesCount){\n\
    \            arr[i] = minOnesCount;\n        }else{\n            arr[i] = onesCount;\n\
    \        }\n    }\n    return arr;\n}\n", "    arr.sort(function(a, b){\n    \
    \    var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_count = a_ones.length;\n        var b_ones_count = b_ones.length;\n\
    \        var a_ones_sum = 0;\n        var b_ones_sum = 0;\n        for(var i=0;\
    \ i<a_ones_count; i++){\n            a_ones_sum += a_ones[i];\n        }\n   \
    \     for(var i=0; i<b_ones_count; i++){\n            b_ones_sum += b_ones[i];\n\
    \        }\n        return a_ones_sum - b_ones_sum;\n    });\n    return arr;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution, but I believe it\
    \ can be done in O(n) time by using a hash table to count the number of 1's in\
    \ the binary representation of each number, then sorting the array based on the\
    \ hash table values.\n<|/ c |>\n<| c |>\nYes, it can be done in O(n) time by using\
    \ a hash table to count the number of 1's in the binary representation of each\
    \ number, then sorting the array based on the hash table values.\n<|/ c |>\n<|\
    \ c |>\nI added an answer that does this in O(n) time.\n<|/ c |>\n<| a dscore=0\
    \ |>\nHere's a solution using an O(n) time algorithm to count the number of 1's\
    \ in each binary representation of each number, then sorting the array based on\
    \ the hash table values.\n<code>", "    arr.sort(function(a, b){\n        var\
    \ a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return x=='1';});\n\
    \        var a_ones_count = a_ones.length;\n        var b_ones_count = b_ones.length;\n\
    \        var a_ones_decimal = a_ones_count / Math.pow(2, a_ones_count);\n    \
    \    var b_ones_decimal = b_ones_count / Math.pow(2, b_ones_count);\n        return\
    \ a_ones_decimal - b_ones_decimal;\n    });\n    return arr;\n}\n</code>\n<|/\
    \ a tags=javascript,sorting |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `sort_array([-1, -5, -4, -3, -2]) == [-2, -3, -4, -1, -5]`\n<|/ c |>\n<| c |>\n\
    This doesn't work for negative numbers. `sort_array([-1, -5, -4, -3, -2]) == [-2,\
    \ -3, -4, -1, -5]`\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `sort_array([-1, -5, -4, -3, -2]) == [-2, -3, -4, -1, -5]`\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        if(a_ones < b_ones){\n         \
    \   return -1;\n        }else if(a_ones > b_ones){\n            return 1;\n  \
    \      }else{\n            return count_ones(a) - count_ones(b);\n        }\n\
    \    });\n    return arr;\n}\n", "\tlet result = [];\n\tlet ones = 0;\n\tlet decimal\
    \ = 0;\n\tfor(let i = 0; i < arr.length; i++){\n\t\tones += arr[i];\n\t\tdecimal\
    \ += arr[i] * Math.pow(2,i);\n\t}\n\tfor(let i = 0; i < arr.length; i++){\n\t\t\
    result.push(arr[i]);\n\t\tif(ones < arr[i]){\n\t\t\tresult.push(arr[i] - ones);\n\
    \t\t\tresult.push(decimal);\n\t\t}\n\t}\n\treturn result;\n}\n", "    var len\
    \ = arr.length;\n    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len;\
    \ i++){\n        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n \
    \       for(j = i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n   \
    \             k = j;\n                while(arr[k] == arr[j]){\n             \
    \       k++;\n                }\n                arr[k] = arr[i];\n          \
    \      arr[i] = k;\n            }\n        }\n    }\n    return sorted;\n}\n",
  "    var len = arr.length;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n\
    \    var temp = 0;\n    var swap = 0;\n    var swaps = 0;\n    var sorted = [];\n\
    \    for(var i = 0; i < len; i++){\n        max = Math.max(max, arr[i]);\n   \
    \     min = Math.min(min, arr[i]);\n        mid = Math.floor((max + min)/2);\n\
    \        temp = arr[mid];\n        arr[mid] = arr[i];\n        arr[i] = temp;\n\
    \        swaps += arr[mid] > arr[i] ? 1 : 0;\n    }\n    for(var i = 0; i < len;\
    \ i++){\n        arr[len-i-1] = arr[len-i-2];\n    }\n    arr[len-1] = max;\n\
    \    arr[len-2] = min;\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n    }\n    for(var i = 0; i < len; i++){\n        arr[len-i-1]\
    \ = arr[len-i-2];\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n\
    \        for(var j=0; j<len; j++){\n            if(arr[i]>arr[j]){\n         \
    \       var temp = arr[i];\n                arr[i] = arr[j];\n               \
    \ arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n}\n", "  \
    \  var len = arr.length;\n    var ret = new Array(len);\n    var cnt = 0;\n  \
    \  for(var i=0; i<len; i++){\n        while(arr[i] === 0){\n            cnt++;\n\
    \            if(cnt > 1){\n                cnt = 0;\n                ret[cnt]\
    \ = arr[i];\n            }\n            i++;\n        }\n    }\n    return ret;\n\
    }\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        var count\
    \ = 0;\n        for(var j=0; j<len; j++){\n            if((arr[j]&1) == 1){\n\
    \                count++;\n            }\n        }\n        if(count > 0){\n\
    \            arr.splice(i, 0, count);\n            arr.splice(i, 0, arr[i]);\n\
    \        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n\
    \                sorted[j]--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(sorted[i]\
    \ > sorted[j]){\n                k = sorted[i];\n                sorted[i] = sorted[j];\n\
    \                sorted[j] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }\n", "    var len = arr.length;\n    if(len < 2) return arr;\n    var result\
    \ = [];\n    var ones = [1];\n    var zeros = [0];\n    for(var i = 1; i < len;\
    \ i++){\n        var a = arr[i];\n        var b = arr[i - 1];\n        var c =\
    \ arr[i];\n        var d = arr[i - 1];\n        var e = arr[i];\n        var f\
    \ = arr[i - 1];\n        var g = arr[i];\n        var h = arr[i - 1];\n      \
    \  var k = arr[i];\n        var l = arr[i];\n        var m = arr[i];\n       \
    \ var n = arr[i];\n        var o = arr[i];\n        var p = arr[i];\n        var\
    \ q = arr[i];\n        var r = arr[i];\n        var s = arr[i];\n        var t\
    \ = arr[i];\n        var u = arr[i];\n        var v = arr[i];\n        var w =\
    \ arr[i];\n        var x = arr[i];\n        var y = arr[i];\n        var z = arr[i];\n\
    \        var a = arr[i];\n        var b = arr[i];\n        var c = arr[i];\n \
    \       var d = arr[i];\n        var e = arr[i];\n        var f = arr[i];\n  \
    \      var g = arr[i];\n        var h = arr[i];\n        var k = arr[i];\n   \
    \     var l = arr[i];\n        var m = arr[i];\n        var n = arr[i];\n    \
    \    var o = arr[i];\n        var p = arr[i];\n        var q = arr[i];\n     \
    \   var r = arr[i];\n        var s = arr[i];\n        var t = arr[i];\n      \
    \  var u = arr[i];\n        var v = arr[i];\n        var w = arr[i];\n       \
    \ var x = arr[i];\n        var y = arr[i];\n        var z = arr[i];\n        var\
    \ a = arr[i];\n        var b = arr[i];\n        var c = arr[i];\n        var d\
    \ = arr[i];\n        var e = arr[i];\n        var f = arr[i];\n        var g =\
    \ arr[i];\n        var h = arr[i];\n        var k = arr[i];\n        var l = arr[i];\n\
    \        var m = arr[i];\n        var n = arr[i];\n        var o = arr[i];\n \
    \       var p = arr[i];\n        var q = arr[i];\n        var r = arr[i];\n  \
    \      var s = arr[i];\n        var t = arr[i];\n        var u = arr[i];\n   \
    \     var v = arr[i];\n        var w = arr[i];\n        var x = arr[i];\n    \
    \    var y = arr[i];\n        var z = arr[i];\n        var a = arr[i];\n     \
    \   var b = arr[i];\n        var c = arr[i];\n        var d = arr[i];\n      \
    \  var e = arr[i];\n        var f = arr[i];\n        var g = arr[i];\n       \
    \ var h = arr[i];\n        var k = arr[i];\n        var l = arr[i];\n        var\
    \ m = arr[i];\n        var n = arr[i];\n        var o = arr[i];\n        var p\
    \ = arr[i];\n        var q = arr[i];\n        var r = arr[i];\n        var s =\
    \ arr[i];\n        var t = arr[i];\n        var u = arr[i];\n        var v = arr[i];\n\
    \        var w = arr[i];\n        var x = arr[i];\n        var y = ", "  var len\
    \ = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n\
    \  var sorted_arr = new Array(len);\n  for(var i = 0; i < len; i++){\n    var\
    \ num = arr[i];\n    var index = ones - num;\n    sorted_arr[i] = arr[index];\n\
    \  }\n  return sorted_arr;\n}\n", "    var len = arr.length;\n    var max = 0;\n\
    \    var min = 0;\n    var mid = 0;\n    var result = [];\n    while(len > 0){\n\
    \        mid = Math.floor((len - 1) / 2);\n        if(arr[mid] > max){\n     \
    \       max = arr[mid];\n        }\n        if(arr[mid] < min){\n            min\
    \ = arr[mid];\n        }\n        if(arr[mid] == max){\n            result.push(arr[mid]);\n\
    \            len--;\n        }\n        else if(arr[mid] == min){\n          \
    \  result.push(arr[mid]);\n            len--;\n        }\n        else{\n    \
    \        var temp = arr[mid];\n            arr[mid] = arr[len-1];\n          \
    \  arr[len-1] = temp;\n            len--;\n        }\n    }\n    while(len > 0){\n\
    \        mid = Math.floor((len - 1) / 2);\n        if(arr[mid] > max){\n     \
    \       max = arr[mid];\n        }\n        if(arr[mid] < min){\n            min\
    \ = arr[mid];\n        }\n        if(arr[mid] == max){\n            result.push(arr[mid]);\n\
    \            len--;\n        }\n        else if(arr[mid] == min){\n          \
    \  result.push(arr[mid]);\n            len--;\n        }\n        else{\n    \
    \        var temp = arr[mid];\n            arr[mid] = arr[len-1];\n          \
    \  arr[len-1] = temp;\n            len--;\n        }\n    }\n    return result;\n\
    }\n", "    var len = arr.length;\n    if(len < 1) return arr;\n    var result\
    \ = [];\n    var ones = [];\n    var zeros = [];\n    var i, j, k;\n    for(i\
    \ = 0; i < len; i++){\n        ones[i] = 0;\n        zeros[i] = 0;\n    }\n  \
    \  for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n            if(arr[j]\
    \ == 1){\n                ones[i] += 1;\n            }\n            if(arr[j]\
    \ == 0){\n                zeros[i] += 1;\n            }\n        }\n    }\n  \
    \  for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n            if(ones[j]\
    \ > zeros[j]){\n                result.push(arr[j]);\n            }\n        }\n\
    \    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len; j++){\n   \
    \         if(ones[j] == zeros[j]){\n                result.push(arr[j]);\n   \
    \         }\n        }\n    }\n    return result;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var ones = new Array(len);\n    var zeros\
    \ = new Array(len);\n    var i;\n    for(i = 0; i < len; i++){\n        ones[i]\
    \ = 0;\n        zeros[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        if(arr[i]\
    \ < 0){\n            ones[arr[i]] += 1;\n        }else{\n            zeros[arr[i]]\
    \ += 1;\n        }\n    }\n    for(i = 0; i < len; i++){\n        if(ones[i] >\
    \ zeros[i]){\n            ret[i] = -1;\n        }else if(ones[i] < zeros[i]){\n\
    \            ret[i] = 1;\n        }else{\n            ret[i] = 0;\n        }\n\
    \    }\n    return ret;\n}\n", "    var len = arr.length;\n    var ret = new Array(len);\n\
    \    var cnt = 0;\n    for(var i=0; i<len; i++){\n        var num = arr[i];\n\
    \        if(num == 0){\n            ret[cnt++] = num;\n        }else{\n      \
    \      var bin = num.toString(2);\n            var len = bin.length;\n       \
    \     for(var j=0; j<len; j++){\n                if((bin[j] === '1') || (bin[j]\
    \ === '0')){\n                    ret[cnt++] = num;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    ret.sort(function(a,\
    \ b){\n        var aNum = a.toString(2);\n        var bNum = b.toString(2);\n\
    \        var aLen = aNum.length;\n        var bLen = bNum.length;\n        if(aLen\
    \ > bLen){\n            return 1;\n        }else if(aLen < bLen){\n          \
    \  return -1;\n        }\n        for(var i=0; i<aLen; i++){\n            if(aNum[i]\
    \ < bNum[i]){\n                return -1;\n            }else if(aNum[i] > bNum[i]){\n\
    \                return 1;\n            }\n        }\n        return 0;\n    });\n\
    \    return ret;\n}\n", "\tlet len = arr.length;\n\tlet max = 0;\n\tlet min =\
    \ 0;\n\tfor(let i = 0; i < len; i++){\n\t\tlet num = arr[i];\n\t\tlet bin = num.toString(2);\n\
    \t\tlet count = 0;\n\t\tfor(let j = 0; j < bin.length; j++){\n\t\t\tif(bin[j]\
    \ == '1'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max){\n\t\t\tmax\
    \ = count;\n\t\t}\n\t\tif(count < min){\n\t\t\tmin = count;\n\t\t}\n\t}\n\tfor(let\
    \ i = 0; i < len; i++){\n\t\tlet num = arr[i];\n\t\tlet bin = num.toString(2);\n\
    \t\tlet count = 0;\n\t\tfor(let j = 0; j < bin.length; j++){\n\t\t\tif(bin[j]\
    \ == '1'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max){\n\t\t\tmax\
    \ = count;\n\t\t}\n\t\tif(count < min){\n\t\t\tmin = count;\n\t\t}\n\t}\n\tlet\
    \ result = [];\n\tfor(let i = 0; i < len; i++){\n\t\tlet num = arr[i];\n\t\tlet\
    \ bin = num.toString(2);\n\t\tlet count = 0;\n\t\tfor(let j = 0; j < bin.length;\
    \ j++){\n\t\t\tif(bin[j] == '1'){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count\
    \ > max){\n\t\t\tresult.push(num);\n\t\t}\n\t\tif(count < min){\n\t\t\tresult.push(num);\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "    arr.sort(function(a, b){\n        var\
    \ c = a.toString(2);\n        var d = b.toString(2);\n        var e = (d.length\
    \ - c.length);\n        var f = parseInt(d, 2);\n        var g = parseInt(c, 2);\n\
    \        var h = (f - g);\n        if(h == 0){\n            return parseInt(a,\
    \ 2) - parseInt(b, 2);\n        }\n        return h;\n    });\n    return arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        for(j = i+1; j < len; j++){\n           \
    \ k = j;\n            while(arr[k] == 0){\n                k++;\n            }\n\
    \            if(arr[k] > arr[j]){\n                sorted.push(arr[k]);\n    \
    \            arr[k] = arr[j];\n                arr[j] = k;\n            }\n  \
    \      }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] > arr[j]){\n                k\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = k;\n \
    \           }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n\
    \                sorted[j]--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(j = i + 1; j < len; j++){\n            if(arr[i]\
    \ > arr[j]){\n                k = sorted[j];\n                sorted[j] = sorted[i];\n\
    \                sorted[i] = k;\n            }\n        }\n    }\n    return sorted;\n\
    }", "  var len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones\
    \ = count_ones(arr);\n  var len = ones.length;\n  if(len === 0){\n    return arr;\n\
    \  }\n  var max = 0;\n  var min = 0;\n  for(var i = 0; i < len; i++){\n    if(ones[i]\
    \ > max){\n      max = ones[i];\n    }\n    if(ones[i] < min){\n      min = ones[i];\n\
    \    }\n  }\n  var mid = min + Math.floor((max - min) / 2);\n  var sorted = [];\n\
    \  for(var i = 0; i < len; i++){\n    if(ones[i] === mid){\n      sorted.push(arr[i]);\n\
    \    }\n  }\n  sorted.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ sorted;\n}\n", "\tarr.sort(function(a, b){\n\t\tif(a==b) return 0;\n\t\tif(a>b)\
    \ return 1;\n\t\treturn -1;\n\t});\n\treturn arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.split('').filter(function(x){return x=='1';});\n        var b_ones =\
    \ b_bin.split('').filter(function(x){return x=='1';});\n        var a_ones_len\
    \ = a_ones.length;\n        var b_ones_len = b_ones.length;\n        if(a_ones_len\
    \ == b_ones_len){\n            return a_ones_len - b_ones_len;\n        }\n  \
    \      return a_ones_len - b_ones_len;\n    });\n    return arr;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var c = (a-b)*Math.pow(2,Math.floor(a/b));\n        return c<0?1:c>0?-1:0;\n\
    \    });\n    return arr;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,sorting,arrays\
    \ |>\n<code>", "    arr.sort(function(a, b){\n        var aNum = parseInt(a, 10);\n\
    \        var bNum = parseInt(b, 10);\n        if(aNum == 0){\n            return\
    \ bNum;\n        }\n        if(bNum == 0){\n            return aNum;\n       \
    \ }\n        return aNum - bNum;\n    });\n    return arr;\n}\n", "    var len\
    \ = arr.length;\n    var result = [];\n    var ones = [];\n    var zeros = [];\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        ones[i] = 0;\n     \
    \   zeros[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = ones.length\
    \ - 1; j >= 0; j--){\n            if(arr[i] % Math.pow(2,j) === 0){\n        \
    \        ones[j]++;\n                break;\n            }\n        }\n      \
    \  for(j = zeros.length - 1; j >= 0; j--){\n            if(arr[i] % Math.pow(2,j)\
    \ !== 0){\n                zeros[j]++;\n                break;\n            }\n\
    \        }\n    }\n    for(i = 0; i < len; i++){\n        for(j = 0; j < ones.length;\
    \ j++){\n            if(ones[j] > zeros[j]){\n                result.push(arr[i]);\n\
    \                break;\n            }\n        }\n        for(j = 0; j < zeros.length;\
    \ j++){\n            if(zeros[j] > ones[j]){\n                result.push(arr[i]);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    var len = arr.length;\n    for(var i=0; i<len; i++){\n        for(var\
    \ j=0; j<len; j++){\n            if(arr[i]>arr[j]){\n                var temp\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \            }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        sorted[i] = arr[i];\n    }\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i + 1; j < len; j++){\n            if(arr[i] > arr[j]){\n                k\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = k;\n \
    \           }\n        }\n    }\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var sorted = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n     \
    \   sorted[i] = 0;\n    }\n    for(i = 0; i < len; i++){\n        for(j = i +\
    \ 1; j < len; j++){\n            if(arr[i] == arr[j]){\n                sorted[i]++;\n\
    \                sorted[j]--;\n            }\n        }\n    }\n    for(i = 0;\
    \ i < len; i++){\n        for(k = i + 1; k < len; k++){\n            if(arr[i]\
    \ == arr[k]){\n                sorted[i]++;\n                sorted[k]--;\n  \
    \          }\n        }\n    }\n    return sorted;\n}\n", "    arr.sort(function(a,\
    \ b){\n        var x = parseInt(a, 10);\n        var y = parseInt(b, 10);\n  \
    \      if(x < y){\n            return -1;\n        }\n        if(x > y){\n   \
    \         return 1;\n        }\n        return 0;\n    });\n    return arr;\n\
    }\n", "  var len = arr.length;\n  if(len < 1) return arr;\n  var ones = count_ones(arr);\n\
    \  var sorted_arr = new Array(len);\n  for(var i=0; i<len; i++){\n    sorted_arr[i]\
    \ = arr[i];\n  }\n  sorted_arr.sort(function(a, b){\n    var a_bit_len = count_bits(a);\n\
    \    var b_bit_len = count_bits(b);\n    var a_ones = count_ones(a);\n    var\
    \ b_ones = count_ones(b);\n    var a_bit_ones = count_bits(a) - a_ones;\n    var\
    \ b_bit_ones = count_bits(b) - b_ones;\n    if(a_bit_len > b_bit_len){\n     \
    \ return 1;\n    }else if(a_bit_len < b_bit_len){\n      return -1;\n    }else\
    \ if(a_bit_ones > b_bit_ones){\n      return 1;\n    }else if(a_bit_ones < b_bit_ones){\n\
    \      return -1;\n    }else{\n      return 0;\n    }\n  });\n  return sorted_arr;\n\
    }\n", "    var len = arr.length;\n    var sorted = [];\n    var i, j, k;\n   \
    \ for(i = 0; i < len; i++){\n        j = i;\n        while(j > 0 && arr[j-1] >\
    \ arr[j]){\n            arr[j] = arr[j-1];\n            j--;\n        }\n    \
    \    arr[j] = i;\n    }\n    for(i = 0; i < len; i++){\n        j = i;\n     \
    \   while(j > 0 && arr[j-1] < arr[j]){\n            arr[j] = arr[j-1];\n     \
    \       j--;\n        }\n        arr[j] = i;\n    }\n    for(i = 0; i < len; i++){\n\
    \        j = i;\n        while(j > 0 && arr[j-1] == arr[j]){\n            j--;\n\
    \        }\n        sorted[i] = arr[j];\n    }\n    return sorted;\n}\n", "  var\
    \ len = arr.length;\n  if(len < 2){\n    return arr;\n  }\n  var ones = count_ones(arr);\n\
    \  var len = ones.length;\n  if(len < 2){\n    return arr;\n  }\n  var biggest\
    \ = ones[0];\n  for(var i = 1; i < len; i++){\n    if(ones[i] > biggest){\n  \
    \    biggest = ones[i];\n    }\n  }\n  var sorted = [];\n  for(var i = 0; i <\
    \ len; i++){\n    sorted[i] = arr[i];\n  }\n  for(var i = 0; i < len; i++){\n\
    \    sorted[i] = sorted[i].toString();\n  }\n  sorted.sort(function(a, b){\n \
    \   var aNum = parseInt(a, 10);\n    var bNum = parseInt(b, 10);\n    if(aNum\
    \ === bNum){\n      return 0;\n    }\n    if(aNum > bNum){\n      return 1;\n\
    \    }\n    return -1;\n  });\n  for(var i = 0; i < len; i++){\n    sorted[i]\
    \ = parseInt(sorted[i], 10);\n  }\n  return sorted;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[i]>arr[j]){\n                var temp = arr[i];\n                arr[i]\
    \ = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n\
    \    return arr;\n}\n", "    arr.sort(function(a, b){\n        var a_ones = count_ones(a);\n\
    \        var b_ones = count_ones(b);\n        if(a_ones == b_ones){\n        \
    \    return sort_number(a);\n        }\n        return a_ones - b_ones;\n    });\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    var ret = new Array(len);\n\
    \    var cnt = 0;\n    for(var i=0; i<len; i++){\n        var item = arr[i];\n\
    \        if(item === 0) continue;\n        cnt++;\n        var bin = item.toString(2);\n\
    \        var len = bin.length;\n        var cnt2 = cnt;\n        for(var j=0;\
    \ j<len; j++){\n            if(cnt2 === 0) break;\n            cnt2--;\n     \
    \       var bin2 = bin.substr(j+1);\n            if(cnt2 === 0) ret[cnt] = parseInt(bin2,\
    \ 2);\n            cnt2++;\n        }\n    }\n    return ret;\n}\n", "  var len\
    \ = arr.length;\n  if(len < 1) return arr;\n  var result = [];\n  var ones = [];\n\
    \  var zeros = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var tmp;\n  while(i\
    \ < len){\n    tmp = arr[i];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    i++;\n  }\n  while(j\
    \ < len){\n    tmp = arr[j];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    j++;\n  }\n  while(i\
    \ < len){\n    tmp = arr[i];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    i++;\n  }\n  while(j\
    \ < len){\n    tmp = arr[j];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    j++;\n  }\n  while(i\
    \ < len){\n    tmp = arr[i];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    i++;\n  }\n  while(j\
    \ < len){\n    tmp = arr[j];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    j++;\n  }\n  while(i\
    \ < len){\n    tmp = arr[i];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    i++;\n  }\n  while(j\
    \ < len){\n    tmp = arr[j];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    j++;\n  }\n  while(i\
    \ < len){\n    tmp = arr[i];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    i++;\n  }\n  while(j\
    \ < len){\n    tmp = arr[j];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n    else result.push(tmp);\n    j++;\n  }\n  while(i\
    \ < len){\n    tmp = arr[i];\n    if(tmp == 0) zeros.push(tmp);\n    else if(tmp\
    \ == 1) ones.push(tmp);\n", "    var len = arr.length;\n    var ret = [];\n  \
    \  var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i + 1; j < len;\
    \ j++){\n            k = sort_array_helper(arr, i, j);\n            if(k > 0){\n\
    \                ret.push(arr[k - 1]);\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "    arr.sort(function(a, b){\n        var c = count_ones(a) - count_ones(b);\n\
    \        if(c === 0){\n            return 0;\n        }\n        return c > 0\
    \ ? 1 : -1;\n    });\n    return arr;\n}\n", "\tlet len = arr.length;\n\tlet sorted\
    \ = [];\n\tlet ones = 0;\n\tlet decimal = 0;\n\tfor(let i = 0; i < len; i++){\n\
    \t\tones += arr[i];\n\t\tdecimal += arr[i] * Math.pow(2,i);\n\t}\n\tfor(let i\
    \ = 0; i < len; i++){\n\t\tsorted.push(ones);\n\t\tsorted.push(decimal);\n\t}\n\
    \tsorted.sort((a,b) => a - b);\n\tlet result = [];\n\tfor(let i = 0; i < len;\
    \ i++){\n\t\tresult.push(sorted[i]);\n\t}\n\treturn result;\n}\n", "    var len\
    \ = arr.length;\n    var max = 0;\n    var min = 0;\n    var mid = 0;\n    var\
    \ temp = 0;\n    var swap = 0;\n    var tmp = 0;\n    var i = 0;\n    var j =\
    \ 0;\n    for(i = 0; i < len; i++){\n        max = Math.max(max, arr[i]);\n  \
    \      min = Math.min(min, arr[i]);\n        mid = Math.floor((max + min) / 2);\n\
    \        for(j = i; j > 0; j--){\n            if(arr[j] < arr[mid]){\n       \
    \         temp = arr[j];\n                arr[j] = arr[j - 1];\n             \
    \   arr[j - 1] = temp;\n                swap++;\n            }\n        }\n  \
    \  }\n    console.log(swap);\n    return arr;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var i, j, k;\n    for(i = 0; i < len; i++){\n\
    \        ret[i] = arr[i];\n    }\n    for(i = len - 1; i >= 0; i--){\n       \
    \ for(j = i + 1; j < len; j++){\n            k = ret[j];\n            if(arr[i]\
    \ > arr[j]){\n                ret[j] = arr[i];\n                ret[i] = k;\n\
    \            }\n        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    for(var i=0; i<len; i++){\n        for(var j=0; j<len; j++){\n          \
    \  if(arr[i]>arr[j]){\n                var temp = arr[i];\n                arr[i]\
    \ = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n\
    \    return arr;\n}\n", "    var len = arr.length;\n    var sorted = new Array(len);\n\
    \    for(var i=0; i<len; i++){\n        sorted[i] = i;\n    }\n    for(var i=0;\
    \ i<len; i++){\n        for(var j=0; j<len; j++){\n            if(arr[j] == 1){\n\
    \                sorted[j+1] = sorted[j];\n                sorted[j] = i;\n  \
    \          }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    var ret = new Array(len);\n    var cnt = 0;\n    for(var i = 0; i < len;\
    \ i++){\n        cnt = 0;\n        for(var j = 0; j < len; j++){\n           \
    \ if((arr[j] & 1 << i) > 0){\n                cnt++;\n            }\n        }\n\
    \        ret[i] = cnt;\n    }\n    ret.sort(function(a, b){\n        return a\
    \ - b;\n    });\n    return ret;\n}\n", "    var len = arr.length;\n    var max\
    \ = 0;\n    var min = 0;\n    var mid = 0;\n    var temp = 0;\n    var swap =\
    \ 0;\n    var i = 0;\n    while(i < len){\n        max = Math.max(max, arr[i]);\n\
    \        min = Math.min(min, arr[i]);\n        mid = Math.floor((max + min)/2);\n\
    \        temp = arr[mid];\n        arr[mid] = arr[i];\n        arr[i] = temp;\n\
    \        swap = arr[mid];\n        arr[mid] = swap;\n        i++;\n    }\n   \
    \ while(swap != 0){\n        swap = arr[mid];\n        arr[mid] = arr[len-1];\n\
    \        arr[len-1] = swap;\n        len--;\n        mid--;\n    }\n    return\
    \ arr;\n}\n", "    var len = arr.length;\n    if(len < 2){\n        return arr;\n\
    \    }\n    var ones = count_ones(arr);\n    var sorted_arr = [];\n    for(var\
    \ i=0; i<len; i++){\n        sorted_arr.push(arr[i]);\n    }\n    sorted_arr.sort(function(a,\
    \ b){\n        var a_ones = count_ones(a);\n        var b_ones = count_ones(b);\n\
    \        if(a_ones < b_ones){\n            return -1;\n        }\n        if(a_ones\
    \ > b_ones){\n            return 1;\n        }\n        return 0;\n    });\n \
    \   return sorted_arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = 0; j < len;\
    \ j++){\n            if(arr[j] == arr[i]){\n                sorted.push(arr[i]);\n\
    \                for(k = j + 1; k < len; k++){\n                    if(arr[j]\
    \ > arr[k]){\n                        sorted.push(arr[k]);\n                 \
    \       break;\n                    }\n                }\n                break;\n\
    \            }\n        }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n\
    \    if(len == 0){\n        return arr;\n    }\n    var maxOnes = 0;\n    var\
    \ maxOnesIndex = 0;\n    for(var i = 1; i < len; i++){\n        var ones = arr[i].toString(2).split('1');\n\
    \        if(ones.length == 1){\n            arr[i] = parseInt(ones[0]);\n    \
    \    }\n        maxOnes = Math.max(maxOnes, ones.length);\n        if(ones.length\
    \ > maxOnesIndex){\n            maxOnesIndex = ones.length;\n        }\n    }\n\
    \    arr.sort(function(a, b){\n        var aOnes = a.toString(2).split('1');\n\
    \        var bOnes = b.toString(2).split('1');\n        var aLen = aOnes.length;\n\
    \        var bLen = bOnes.length;\n        if(aLen != bLen){\n            return\
    \ aLen - bLen;\n        }\n        var aOnesIndex = 0;\n        var bOnesIndex\
    \ = 0;\n        while(aOnesIndex < aLen && bOnesIndex < bLen){\n            if(aOnes[aOnesIndex]\
    \ == bOnes[bOnesIndex]){\n                aOnesIndex++;\n                bOnesIndex++;\n\
    \            }else{\n                if(aOnes[aOnesIndex] < bOnes[bOnesIndex]){\n\
    \                    return -1;\n                }else{\n                    return\
    \ 1;\n                }\n            }\n        }\n        if(aLen < bLen){\n\
    \            return -1;\n        }else{\n            return 1;\n        }\n  \
    \  });\n    for(var i = maxOnesIndex; i < len; i++){\n        arr[i] = parseInt(arr[i].toString(2).split('1')[0]);\n\
    \    }\n    return arr;\n}\n", "    var len = arr.length;\n    var sorted = [];\n\
    \    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j = i+1; j < len;\
    \ j++){\n            k = arr[i]*arr[j];\n            if(k != 0){\n           \
    \     sorted.push(k);\n            }\n        }\n    }\n    for(i = 0; i < len;\
    \ i++){\n        for(j = i+1; j < len; j++){\n            k = arr[i]*arr[j];\n\
    \            if(k != 0){\n                sorted.push(k);\n            }\n   \
    \     }\n    }\n    return sorted;\n}\n", "    var len = arr.length;\n    var\
    \ ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j =\
    \ i + 1; j < len; j++){\n            k = arr[i]*arr[j];\n            if(k !==\
    \ 0){\n                ret.push(k);\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "    var len = arr.length;\n    var sorted = new Array(len);\n \
    \   for(var i = 0; i < len; i++){\n        sorted[i] = i;\n    }\n    sorted.sort(function(a,\
    \ b){\n        var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones\
    \ = a_bin.substr(a_bin.indexOf('1') + 1);\n        var b_ones = b_bin.substr(b_bin.indexOf('1')\
    \ + 1);\n        var a_ones_len = a_ones.length;\n        var b_ones_len = b_ones.length;\n\
    \        var a_ones_num = parseInt(a_ones, 2);\n        var b_ones_num = parseInt(b_ones,\
    \ 2);\n        var a_ones_num_len = a_ones_num.length;\n        var b_ones_num_len\
    \ = b_ones_num.length;\n        var a_ones_num_str = a_ones_num.substr(0, a_ones_num_len\
    \ - 1);\n        var b_ones_num_str = b_ones_num.substr(0, b_ones_num_len - 1);\n\
    \        var a_ones_num_num_str = a_ones_num.substr(a_ones_num_len - 1);\n   \
    \     var b_ones_num_num_str = b_ones_num.substr(b_ones_num_len - 1);\n      \
    \  var a_ones_num_num_num_str = a_ones_num.substr(0, a_ones_num_len - 1);\n  \
    \      var b_ones_num_num_num_str = b_ones_num.substr(0, b_ones_num_len - 1);\n\
    \        var a_ones_num_num_num_num_str = a_ones_num.substr(a_ones_num_len - 1);\n\
    \        var b_ones_num_num_num_num_str = b_ones_num.substr(b_ones_num_len - 1);\n\
    \        var a_ones_num_num_num_num_num_str = a_ones_num.substr(0, a_ones_num_len\
    \ - 1);\n        var b_ones_num_num_num_num_num_str = b_ones_num.substr(0, b_ones_num_len\
    \ - 1);\n        var a_ones_num_num_num_num_num_num_str = a_ones_num.substr(a_ones_num_len\
    \ - 1);\n        var b_ones_num_num_num_num_num_num_str = b_ones_num.substr(b_ones_num_len\
    \ - 1);\n        var a_ones_num_num_num_num_num_num_num_str = a_ones_num.substr(0,\
    \ a_ones_num_len - 1);\n        var b_ones_num_num_num_num_num_num_num_str = b_ones_num.substr(0,\
    \ b_ones_num_len - 1);\n        var a_ones_num_num_num_num_num_num_num_num_str\
    \ = a_ones_num.substr(a_ones_num_len - 1);\n        var b_ones_num_num_num_num_num_num_num_num_str\
    \ = b_ones_num.substr(b_ones_num_len - 1);\n        var a_ones_num_num_num_num_num_num_num_num_num_str\
    \ = a_one", "    var len = arr.length;\n    var ret = [];\n    var tmp = [];\n\
    \    var cnt = 0;\n    for(var i = 0; i < len; i++){\n        tmp.push(arr[i]);\n\
    \    }\n    for(var i = 0; i < len; i++){\n        for(var j = 0; j < len; j++){\n\
    \            if(arr[j] == tmp[i]){\n                cnt++;\n            }\n  \
    \      }\n        if(cnt == 0){\n            ret.push(tmp[i]);\n            cnt\
    \ = 0;\n        }\n    }\n    return ret;\n}\n", "    var len = arr.length;\n\
    \    var ret = [];\n    var i, j, k;\n    for(i = 0; i < len; i++){\n        for(j\
    \ = i+1; j < len; j++){\n            for(k = 0; k < len; k++){\n             \
    \   if(arr[k] > arr[j] && arr[k] > arr[i]){\n                    ret[k] = arr[k];\n\
    \                }else if(arr[k] < arr[j] && arr[k] < arr[i]){\n             \
    \       ret[k] = arr[j];\n                }else if(arr[k] == arr[j]){\n      \
    \              ret[k] = arr[i];\n                }\n            }\n        }\n\
    \    }\n    return ret;\n}\n", "    arr.sort(function(a, b){\n        var a_bin\
    \ = bin(a);\n        var b_bin = bin(b);\n        var a_ones = a_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x==='1';});\n        var a_ones_len = a_ones.length;\n        var b_ones_len\
    \ = b_ones.length;\n        var a_ones_sum = a_ones.reduce(function(a, b){return\
    \ a+b;});\n        var b_ones_sum = b_ones.reduce(function(a, b){return a+b;});\n\
    \        var a_ones_sum_dec = a_ones_sum.toString().split('.')[1];\n        var\
    \ b_ones_sum_dec = b_ones_sum.toString().split('.')[1];\n        var a_ones_sum_dec_len\
    \ = a_ones_sum_dec.length;\n        var b_ones_sum_dec_len = b_ones_sum_dec.length;\n\
    \        var a_ones_sum_dec_len_dec = a_ones_sum_dec_len.toString().length;\n\
    \        var b_ones_sum_dec_len_dec = b_ones_sum_dec_len.toString().length;\n\
    \        var a_ones_sum_dec_len_dec_dec = a_ones_sum_dec_len_dec.toString().length;\n\
    \        var b_ones_sum_dec_len_dec_dec = b_ones_sum_dec_len_dec.toString().length;\n\
    \        if(a_ones_len > b_ones_len){\n            return -1;\n        }else if(a_ones_len\
    \ < b_ones_len){\n            return 1;\n        }else if(a_ones_sum_dec > b_ones_sum_dec){\n\
    \            return -1;\n        }else if(a_ones_sum_dec < b_ones_sum_dec){\n\
    \            return 1;\n        }else if(a_ones_sum_dec_len > b_ones_sum_dec_len){\n\
    \            return -1;\n        }else if(a_ones_sum_dec_len < b_ones_sum_dec_len){\n\
    \            return 1;\n        }else if(a_ones_sum_dec_len_dec > b_ones_sum_dec_len_dec){\n\
    \            return -1;\n        }else if(a_ones_sum_dec_len_dec < b_ones_sum_dec_len_dec){\n\
    \            return 1;\n        }else if(a_ones_sum_dec_len_dec_dec > b_ones_sum_dec_len_dec_dec){\n\
    \            return -1;\n        }else if(a_ones_sum_dec_len_dec_dec < b_ones_sum_dec_len_dec_dec){\n\
    \            return 1;\n        }else{\n            return 0;\n        }", " \
    \   var len = arr.length;\n    var sorted = new Array(len);\n    for(var i=0;\
    \ i<len; i++){\n        sorted[i] = i;\n    }\n    for(var i=0; i<len; i++){\n\
    \        for(var j=0; j<len; j++){\n            if(arr[j] == 1){\n           \
    \     sorted[j+1] = sorted[j];\n                sorted[j] = i;\n            }\n\
    \        }\n    }\n    return sorted;\n}\n", "    arr.sort(function(a, b){\n \
    \       var a_bin = bin(a);\n        var b_bin = bin(b);\n        var a_ones =\
    \ a_bin.split('').filter(function(x){return x=='1';});\n        var b_ones = b_bin.split('').filter(function(x){return\
    \ x=='1';});\n        var a_ones_len = a_ones.length;\n        var b_ones_len\
    \ = b_ones.length;\n        var a_ones_sum = a_ones.reduce(function(a, b){return\
    \ a+b;});\n        var b_ones_sum = b_ones.reduce(function(a, b){return a+b;});\n\
    \        var a_ones_avg = a_ones_sum / a_ones_len;\n        var b_ones_avg = b_ones_sum\
    \ / b_ones_len;\n        var a_ones_decimal = a_ones_sum / a_ones_len * 100;\n\
    \        var b_ones_decimal = b_ones_sum / b_ones_len * 100;\n        if(a_ones_len\
    \ == 0){\n            return 1;\n        }\n        if(b_ones_len == 0){\n   \
    \         return -1;\n        }\n        if(a_ones_len > b_ones_len){\n      \
    \      return a_ones_decimal;\n        }\n        if(a_ones_len < b_ones_len){\n\
    \            return b_ones_decimal;\n        }\n        return a_ones_avg - b_ones_avg;\n\
    \    });\n    return arr;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

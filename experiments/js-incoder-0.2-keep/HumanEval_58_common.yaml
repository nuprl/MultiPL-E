name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] == l2[j]){\n\
    \        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\
    \    var l = 0;\n    var len1 = l1.length;\n    var len2 = l2.length;\n    while(i\
    \ < len1 && j < len2){\n        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else if(l1[i] < l2[j]){\n      \
    \      i++;\n        }else{\n            j++;\n        }\n    }\n    while(i <\
    \ len1){\n        result.push(l1[i]);\n        i++;\n    }\n    while(j < len2){\n\
    \        result.push(l2[j]);\n        j++;\n    }\n    return result;\n}\n", " \
    \ var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var l = [], n = l1.length, m = l2.length,\
    \ i = 0;\n  while( i < m ){\n    if( l1[i - 1] === l2[i] ){\n      l.push(l1[i\
    \ - 1]);\n      i++;\n    }else{\n      l.push(l2[i]);\n      i++;\n    }\n  }\n\
    \  return l;\n}\n", "  var l = [], i = 0, j = 0;\n  while(l1.length > 0 && l2.length\
    \ > 0){\n    if(l1[0] === l2[0]){\n      l.push(l1[0]); l1.shift();\n      l.push(l2[0]);\
    \ l2.shift();\n    }else{\n      if(l1[0] < l2[0]){\n        l.push(l1[0]); l1.shift();\n\
    \      }else{\n        l.push(l2[0]); l2.shift();\n      }\n    }\n  }\n  while(i\
    \ < l1.length){\n    l.push(l1[i++]);\n  }\n  while(j < l2.length){\n    l.push(l2[j++]);\n\
    \  }\n  return l;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n \
    \   var lLen2 = l2.length;\n    var i = 0;\n    var j = 0;\n    while(i<lLen1\
    \ && j<lLen2){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if(l1[i]<l2[j]){\n\
    \            i++;\n        }\n        else{\n            j++;\n        }\n   \
    \ }\n    return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var lc = l1.length, lp = l2.length;\n  if(lc>lp){\n    return [];\n  }\n  var\
    \ i, j, k, lcm = lcm, li, ri;\n  for(i=lc; i<lp; i++){\n    li = l1[i];\n    ri\
    \ = l2[i];\n    for(j=i; j<lcm && j<lp; j++){\n      if(li===l2[j]){\n       \
    \ lcm = j;\n        li = li === l1 ? l1[0] : li;\n        ri = ri === l2 ? l2[0]\
    \ : ri;\n      }\n    }\n    if(lcm === lp){ // If lcm===lp, li and ri are equal\n\
    \      for(j=i; j<lcm; j++){\n        lcm += 1;\n        li = li === l1 ? l1[0]\
    \ : li;\n        ri = ri === l2 ? l2[0] : ri;\n        if(li===ri){\n        \
    \  lcm += 1;\n          li = li === l1 ? l1[0] : li;\n          ri = ri === l2\
    \ ? l2[0] : ri;\n        }\n      }\n      lcm = lcm / 2;\n    }\n    l1[i] =\
    \ li;\n    l2[i] = ri;\n  }\n  return l1;\n}\n", "    var result = [];\n    for(var\
    \ i=0; i<l1.length; i++){\n        for(var j=0; j<l2.length; j++){\n         \
    \   if(l1[i] === l2[j]){\n                result.push(l1[i]);\n              \
    \  break;\n            }\n        }\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n      \
    \  for(j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n       \
    \         result.push(l1[i]);\n                break;\n            }\n       \
    \ }\n    }\n    return result;\n}\n", "    var result = [];\n    var i = 0;\n\
    \    var j = 0;\n    var k = 0;\n    var lLen = l1.length;\n    var l1Len = l1.length;\n\
    \    var l2Len = l2.length;\n    var maxLen = Math.max(lLen, l1Len, l2Len);\n\
    \    while(i<maxLen){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n            if(i==lLen){\n              \
    \  break;\n            }\n        }else{\n            if(l1[i]<l2[j]){\n     \
    \           i++;\n            }else{\n                j++;\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n\
    \    var m = l2.length;\n    while(i < n && j < m){\n        if(l1[i] === l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else{\n            if(l1[i] < l2[j]){\n                i++;\n            }else{\n\
    \                j++;\n            }\n        }\n    }\n    return result;\n}\n",
  "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n\
    \ = Math.min(l1.length, l2.length);\n    while(i<n && j<n){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else{\n            if(l1[i]<l2[j]){\n                i++;\n            }else{\n\
    \                j++;\n            }\n        }\n    }\n    return result;\n}\n",
  "    var ret = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n                ret.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return ret;\n}\n",
  "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length\
    \ && j<l2.length){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n\
    \            i++;\n            j++;\n        }else{\n            if(l1[i]<l2[j]){\n\
    \                i++;\n            }else{\n                j++;\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    var lLen\
    \ = l1.length;\n    var lIdx = 0, rIdx = 0, lIdx_ = 0, rIdx_ = 0;\n    while (lIdx\
    \ < lLen) {\n        var lVal = l1[lIdx];\n        var rVal = l2[lIdx];\n    \
    \    while (lIdx < lLen && rIdx < rLen) {\n            if (lVal == rVal) {\n \
    \               result[lIdx++] = rIdx++;\n            }\n            else {\n\
    \                lIdx++;\n                rIdx++;\n            }\n        }\n\
    \        if (lIdx >= lLen) {\n            lIdx_ = lIdx;\n            lIdx = lIdx_;\n\
    \        }\n        if (rIdx >= rLen) {\n            rIdx_ = rIdx;\n         \
    \   rIdx = rIdx_;\n        }\n    }\n    while (lIdx < lLen) {\n        result[lIdx++]\
    \ = lIdx_++;\n    }\n    while (rIdx < rLen) {\n        result[rIdx++] = rIdx_++;\n\
    \    }\n    return result;\n}\n", "    var out = [];\n    var llen = l1.length;\n\
    \    var lx = 0;\n    var ly = 0;\n    while (lx < llen && ly < llen){\n     \
    \   if (l1[lx] === l2[ly]){\n            lx++;\n            ly++;\n        }\n\
    \        else if (l1[lx] < l2[ly]){\n            out.push(l1[lx]);\n         \
    \   lx++;\n        }\n        else{\n            out.push(l2[ly]);\n         \
    \   ly++;\n        }\n    }\n    while (ly < llen){\n        out.push(l2[ly]);\n\
    \        ly++;\n    }\n    while (lx < llen){\n        out.push(l1[lx]);\n   \
    \     lx++;\n    }\n    return out;\n}\n", "  var result = [];\n  for(var i =\
    \ 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n\
    \      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i = 0;\n    var j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i =\
    \ 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length; j <\
    \ len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n     \
    \   break;\n      }\n    }\n  }\n  return result;\n}\n", "    var result = [];\n\
    \    for(var i=0; i<l1.length; i++){\n        for(var j=0; j<l2.length; j++){\n\
    \            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\n",
  "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i]) != -1){\n        \
    \    result.push(l1[i]);\n        }\n    }\n    return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0,\
    \ len2 = l2.length; j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2\
    \ = l2.length; j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "    var out = [];\n\
    \    var hash = {};\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n \
    \       for(j = 0; j < l2.length; j++){\n            k = l1[i] + l2[j];\n    \
    \        if(hash[k] !== undefined){\n                out.push(k);\n          \
    \      hash[k] = null;\n            }\n        }\n    }\n    return out;\n}\n",
  "    var out = [];\n    var common;\n    var lcm = lcm(l1, l2);\n    for(var i =\
    \ 0, len = l1.length; i < len; i++){\n        common = lcm(l1[i], l2[i]);\n  \
    \      for(var j = 0, len2 = l2.length; j < len2; j++){\n            if(common\
    \ === l2[j]){\n                out.push(l1[i]);\n                break;\n    \
    \        }\n        }\n    }\n    return out;\n}\n", "    var result = [];\n \
    \   for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    \
    \    if(l1[i] === l2[i]){\n            result.push(l1[i]);\n        }\n    }\n\
    \    return result;\n}\n", "  var l = [],\n      i = 0,\n      j = 0,\n      n\
    \ = l1.length,\n      m = l2.length,\n      a = l1.slice(0),\n      b = l2.slice(0);\n\
    \n  for(; i < m && j < n; i++, j++){\n    if(l1[i] === l2[j]){\n      l.push(a[i]);\n\
    \      a[i] = a[j];\n      a[j] = l[i];\n    }\n  }\n\n  for(; i < n; i++){\n\
    \    l.push(a[i]);\n  }\n\n  return l;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var lLen = l1.length;\n  \
    \  var l2 = l2.slice(0);\n    var i = 0;\n    while (lLen > i){\n        if (l1.charAt(i)\
    \ !== l2.charAt(i)){\n            result.push(l1.charAt(i));\n            l2.splice(i,\
    \ 1);\n            lLen--;\n        } else {\n            i++;\n        }\n  \
    \  }\n    return result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    var i = 0;\n    while(l1.length > 0 && l2.length\
    \ > 0){\n        if(l1[0] === l2[0]){\n            result.push(l1[0]);\n     \
    \       l1.shift();\n            l2.shift();\n        }else if(l1[0] < l2[0]){\n\
    \            l1.shift();\n        }else{\n            l2.shift();\n        }\n\
    \        i++;\n    }\n    return result;\n}\n", "    var result = [];\n    while(l1.length\
    \ > 0 && l2.length > 0){\n        if(l1[0] === l2[0]){\n            result.push(l1[0]);\n\
    \            l1.shift();\n            l2.shift();\n        }else if(l1[0] < l2[0]){\n\
    \            l1.shift();\n        }else{\n            l2.shift();\n        }\n\
    \    }\n    return result.concat(l1, l2);\n}\n", "    var ret = [];\n    var lLen\
    \ = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    var j = 0;\n  \
    \  while(i<lLen && j<l2){\n        if(l1[i]===l2[j]){\n            ret.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if(l1[i]<l2[j]){\n\
    \            i++;\n        }\n        else{\n            j++;\n        }\n   \
    \ }\n    return ret;\n}\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var l = [], i = 0, j = 0;\n  while(l1.length\
    \ > i){\n    if(l2.length > j){\n      l.push(l1[i]);\n      if(l1[i] === l2[j]){\n\
    \        l1.splice(i--, 1);\n        l2.splice(j--, 1);\n      }\n      else{\n\
    \        i++;\n        j++;\n      }\n    }\n    else{\n      l.push(l1[i]);\n\
    \      i++;\n    }\n  }\n  return l;\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n", "    var result = [];\n    var i = 0;\n    var\
    \ j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }\n        else if(l1[i]<l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ === -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i])\
    \ === -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", " \
    \   var ret = [];\n    var hash = {};\n    for(var i = 0, len = l1.length; i <\
    \ len; i++){\n        var item = l1[i];\n        if(!hash[item]){\n          \
    \  hash[item] = true;\n            ret.push(item);\n        }\n    }\n    for(var\
    \ i = 0, len = l2.length; i < len; i++){\n        var item = l2[i];\n        if(!hash[item]){\n\
    \            hash[item] = true;\n            ret.push(item);\n        }\n    }\n\
    \    return ret;\n}\n", "  var lc = 0, // current common length\n      lp = 0,\
    \ // current common prefix\n      ll = 0, // current common suffix\n      l1,\
    \ l2, // current lists\n      i, j, // current index in lists\n      k, // current\
    \ common element\n      ll1, ll2, // current lists\n      ii, jj; // current index\
    \ in lists\n\n  l1 = l1 || [];\n  l2 = l2 || [];\n  ll1 = l1.length;\n  ll2 =\
    \ l2.length;\n\n  if(ll1 > ll2){\n    ll1 = ll2;\n    l2 = l1;\n    l1 = [];\n\
    \  }\n\n  for(i = ll1 - ll2; i; i--){\n    ll2 = l2.length;\n    for(j = ll2 -\
    \ ll1; j; j--){\n      if((l1[i - j] || 0) !== (l2[j] || 0)){\n        break;\n\
    \      }\n      k = l1[i - j] || 0;\n      l1[i - j] = l2[j] || 0;\n      l2[j\
    \ - i] = k || 0;\n    }\n  }\n\n  for(i = ll1; i; i--){\n    for(j = ll2; j; j--){\n\
    \      if((l1[i - j] || 0) !== (l2[j] || 0)){\n        lc[lc++] = l1[i - j] ||\
    \ 0;\n        l1[i - j] = l2[j] || 0;\n        l2[j - i] = lc[lc-1] || 0;\n  \
    \    }\n    }\n  }\n\n  return lc;\n}\n", "    var result = [];\n    for(var i=0;\
    \ i<l1.length; i++){\n        for(var j=0; j<l2.length; j++){\n            if(l1[i]\
    \ === l2[j]){\n                result.push(l1[i]);\n                break;\n \
    \           }\n        }\n    }\n    return result;\n}\n", "    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    var n = l1.length;\n    var\
    \ m = l2.length;\n    while(i<n && j<m){\n        if(l1[i]===l2[j]){\n       \
    \     result.push(l1[i]);\n            i++;\n            j++;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                i++;\n            }else{\n    \
    \            j++;\n            }\n        }\n    }\n    return result;\n}\n",
  "  var out = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n    }else{\n      out.push(l2[0]);\n\
    \      l2.shift();\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  var lLen1\
    \ = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    out = l1;\n\
    \    l1 = l2;\n    l2 = out;\n  }\n  for(var i=0; i<lLen1; i++){\n    for(var\
    \ j=0; j<lLen2; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "  var out = [];\n\
    \  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i]\
    \ === l2[i]){\n      out.push(l1[i]);\n    }\n  }\n  return out;\n}\n", "  var\
    \ out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return result;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var l = [],\n      l1 = l1.length,\n\
    \      l2 = l2.length,\n      i = 0, j = 0;\n\n  while (l1 > 0 && l2 > 0) {\n\
    \    if (l1[i] === l2[j]) {\n      l.push(l1[i]);\n      i++;\n      j++;\n  \
    \  } else if (l1[i] < l2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n\
    \  }\n\n  return l;\n}\n", "  var out = [];\n  var hash = {};\n  for(var i=0;\
    \ i<l1.length; i++){\n    hash[l1[i]] = 1;\n  }\n  for(var i=0; i<l2.length; i++){\n\
    \    if(hash[l2[i]]){\n      out.push(l2[i]);\n      hash[l2[i]]++;\n    }\n \
    \ }\n  return out;\n}\n", "  var ret = [];\n  for(var i = 0, len = l1.length;\
    \ i < len; i++){\n    for(var j = 0, len2 = l2.length; j < len2; j++){\n     \
    \ if(l1[i] === l2[j]){\n        ret.push(l1[i]);\n      }\n    }\n  }\n  return\
    \ ret;\n}\n", "  var out = [];\n  while(l1.length > 0 && l2.length > 0){\n   \
    \ if(l1[0] === l2[0]){\n      out.push(l1[0]);\n      l1.splice(0, 1);\n     \
    \ l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n      l1.splice(0, 1);\n   \
    \ }else{\n      l2.splice(0, 1);\n    }\n  }\n  return out;\n}\n", "    var out\
    \ = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n     \
    \   if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n     \
    \       j++;\n        }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "  var result = [];\n\
    \  for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ lc = {}, lc2 = {}, i, j, k;\n  for(i = 0; i < l1.length; i++){\n    lc[l1[i]]\
    \ = 1;\n  }\n  for(i = 0; i < l2.length; i++){\n    lc2[l2[i]] = 1;\n  }\n  for(i\
    \ in lc){\n    for(j in lc2){\n      if(lc[i] === lc2[j]){\n        lc[i] = j;\n\
    \        break;\n      }\n    }\n  }\n  return lc;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n", "  var l = [], i = 0, j = 0;\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n   \
    \   l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      l.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n  return l;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  while(i<l1.length\
    \ && j<l2.length){\n    if(l1[i]===l2[j]){\n      result.push(l1[i]);\n      i++;\n\
    \      j++;\n    }else{\n      if(l1[i]<l2[j]){\n        i++;\n      }else{\n\
    \        j++;\n      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] < l2[0]){\n      out.unshift(l1.shift());\n\
    \    } else {\n      out.unshift(l2.shift());\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    var a\
    \ = l1[i];\n    for(var j = 0, len2 = l2.length; j < len2; j++){\n      if(a ===\
    \ l2[j]){\n        result.push(a);\n        break;\n      }\n    }\n  }\n  return\
    \ result;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "    var result = [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n\
    \    var lIdx = 0;\n    var rIdx = 0;\n    while (lIdx < lLen1 && rIdx < lLen2){\n\
    \        if (l1[lIdx] === l2[rIdx]){\n            result.push(l1[lIdx]);\n   \
    \         lIdx += 1;\n            rIdx += 1;\n        }else{\n            lIdx\
    \ += 1;\n        }\n    }\n    return result;\n}\n", "    var result = [];\n \
    \   var i = 0;\n    var j = 0;\n    var k = 0;\n    var lLen = l1.length;\n  \
    \  var l1Len = l1.length;\n    var l2Len = l2.length;\n    var maxLen = Math.max(lLen,\
    \ l1Len, l2Len);\n    while(i < maxLen && j < maxLen && k < maxLen){\n       \
    \ if(l1[i] === l2[j]){\n            result.push(l1[i]);\n            i++;\n  \
    \          j++;\n            k++;\n        }else if(l1[i] < l2[j]){\n        \
    \    i++;\n        }else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n", "  var ret = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        ret.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return ret;\n}\n", "  var result = [];\n  for(var i =\
    \ 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length; j <\
    \ len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n     \
    \   break;\n      }\n    }\n  }\n  return result;\n}\n", "  var lc = 0, // common\
    \ length\n      lp = 0, // common prefix\n      ln = 0, // common suffix\n   \
    \   i = 0;\n\n  while(l1 && l2 && l1.length > l2.length){\n    lc++;\n    l1 +=\
    \ l1.shift();\n  }\n\n  while(l2 && l1.length > l2.length){\n    ln++;\n    l2\
    \ += l2.shift();\n  }\n\n  while(l1 && l2 && l1.length > 0 && l2.length > 0){\n\
    \    if(l1.shift() !== l2.shift()){\n      i++;\n      lc = 0;\n    }\n  }\n\n\
    \  return [l1, l2, i, lc, ln];\n}\n", "  var result = [];\n  var i = 0;\n  var\
    \ j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n     \
    \ result.push(l1[i]);\n      i++;\n      j++;\n    }\n    else if(l1[i]<l2[j]){\n\
    \      i++;\n    }\n    else{\n      j++;\n    }\n  }\n  return result;\n}\n",
  "  var l = [],\n      l1 = l1 || [],\n      l2 = l2 || [],\n      i = 0, j = 0;\n\
    \n  while(l1.length && l2.length){\n    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      l.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n\n  while(i < l1.length){\n    l.push(l1[i++]);\n  }\n\n  while(i < l2.length){\n\
    \    l.push(l2[i++]);\n  }\n\n  return l;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n \
    \ }\n  return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "  var out = [];\n\
    \  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i<l1.length && j<l2.length){\n\
    \    if(l1[i]===l2[j]){\n      out.push(l1[i]);\n      i++;\n      j++;\n    }else\
    \ if(l1[i]<l2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n\
    }\n", "    var result = [];\n    var lLen = l1.length;\n    var lIdx = 0, rIdx\
    \ = 0, lIdx_ = 0, rIdx_ = 0;\n    while (lIdx < lLen && rIdx < rLen){\n      \
    \  if (l1[lIdx] === l2[rIdx]){\n            result.push(l1[lIdx]);\n         \
    \   lIdx += 1;\n            rIdx += 1;\n        }else{\n            if (l1[lIdx]\
    \ < l2[rIdx]){\n                lIdx += 1;\n            }else{\n             \
    \   rIdx += 1;\n            }\n        }\n    }\n    return result;\n}\n", " \
    \ var lc = new Set(l1),\n      lt = new Set(l2),\n      lcLen = lc.size,\n   \
    \   ltLen = lt.size;\n  if(lcLen > ltLen){\n    return lc;\n  }\n  if(lcLen <\
    \ ltLen){\n    return lt;\n  }\n  while(lc.has(lt.value())){\n    lc.delete(lt.value());\n\
    \    lt.delete(lc.value());\n  }\n  return lc;\n}\n", "  var out = [];\n  var\
    \ i = 0;\n  var j = 0;\n  var k = 0;\n  while (i < l1.length && j < l2.length){\n\
    \    if (l1[i] === l2[j]){\n      out.push(l1[i]);\n      i++;\n      j++;\n \
    \   }\n    else if (l1[i] < l2[j]){\n      i++;\n    }\n    else{\n      j++;\n\
    \    }\n  }\n  while (i < l1.length){\n    out.push(l1[i]);\n    i++;\n  }\n \
    \ while (j < l2.length){\n    out.push(l2[j]);\n    j++;\n  }\n  return out;\n\
    }\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) != -1){\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "    var out = [];\n    var i = 0, j = 0;\n    var n = l1.length;\n\
    \    var m = l2.length;\n    while (i < m && j < n) {\n        if (l1[i] === l2[j]){\n\
    \            out.push(l1[i]);\n            i++;\n            j++;\n        }\n\
    \        else if (l1[i] < l2[j]){\n            i++;\n        }\n        else {\n\
    \            j++;\n        }\n    }\n    return out;\n}\n", "    var result =\
    \ [];\n    var lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n\
    \    var j = 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i]<l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "  var out = [];\n  var llen = l1.length;\n\
    \  var lx = 0;\n  var ly = 0;\n  while(lx < llen){\n    var x = l1[lx];\n    var\
    \ y = l2[ly];\n    if(x == y){\n      out.push(x);\n      lx++;\n      ly++;\n\
    \      continue;\n    }\n    while(lx < llen && x == l1[lx]){\n      lx++;\n \
    \   }\n    while(ly < llen && y == l2[ly]){\n      ly++;\n    }\n    if(lx ==\
    \ ly){\n      out.push(x);\n    }\n  }\n  return out;\n}\n", "  var out = [];\n\
    \  var i = 0;\n  var j = 0;\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0]\
    \ === l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \      i++;\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n\
    \    }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n  }\n  return out;\n\
    }\n", "    var out = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            j++;\n\
    \        }\n        else{\n            i++;\n        }\n    }\n    return out;\n\
    }\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\
    \    var l = 0;\n    var n1 = l1.length;\n    var n2 = l2.length;\n    while(i<n1\
    \ && j<n2){\n        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n   \
    \         i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n           \
    \ i++;\n        }else{\n            j++;\n        }\n    }\n    while(i<n1){\n\
    \        result.push(l1[i]);\n        i++;\n    }\n    while(j<n2){\n        result.push(l2[j]);\n\
    \        j++;\n    }\n    return result;\n}\n", "    var result = [];\n    var\
    \ lLen1 = l1.length;\n    var lLen2 = l2.length;\n    var i = 0;\n    var j =\
    \ 0;\n    while(i<lLen1 && j<lLen2){\n        if(l1[i]===l2[j]){\n           \
    \ result.push(l1[i]);\n            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n\
    \            i++;\n        }else{\n            j++;\n        }\n    }\n    return\
    \ result;\n}\n", "    var out = [];\n    var commonCount = 0;\n    var lcm = lcm(l1,\
    \ l2);\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(i == j){\n                continue;\n            }\n \
    \           if(l1[i] % l2[j] == 0){\n                out.push(l1[i]);\n      \
    \          commonCount++;\n            }\n            if(commonCount == lcm){\n\
    \                break;\n            }\n        }\n    }\n    return out;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n\
    }\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0;\
    \ j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n \
    \   var lLen2 = l2.length;\n    var lIdx = 0;\n    var rIdx = 0;\n    while (lIdx\
    \ < lLen1 && rIdx < lLen2){\n        if (l1[lIdx] === l2[rIdx]){\n           \
    \ result.push(l1[lIdx]);\n            lIdx += 1;\n            rIdx += 1;\n   \
    \     }else{\n            lIdx += 1;\n        }\n    }\n    while (lIdx < lLen1){\n\
    \        result.push(l1[lIdx]);\n        lIdx += 1;\n    }\n    while (rIdx <\
    \ lLen2){\n        result.push(l2[rIdx]);\n        rIdx += 1;\n    }\n    return\
    \ result;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n                break;\n            }\n\
    \        }\n    }\n    return result;\n}\n", "  var i, l=Math.min(l1.length, l2.length),\
    \ a=[], i=0;\n  while(l1.length && l2.length){\n    if(l1[0]===l2[0]){\n     \
    \ a.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]<l2[0]){\n\
    \      a.push(l1[i++]);\n      l1.shift();\n    }else{\n      a.push(l2[i++]);\n\
    \      l2.shift();\n    }\n  }\n  return a;\n}\n", "  var result = [];\n  for(var\
    \ i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n \
    \ }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "  var out\
    \ = [];\n  for(var i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n\
    \    if(l1[i] === l2[i]){\n      out.push(l1[i]);\n    }\n  }\n  return out;\n\
    }\n", "    var result = [];\n    var i = 0, j = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }else if(l1[i] > l2[j]){\n            j++;\n      \
    \  }else{\n            i++;\n        }\n    }\n    return result;\n}\n", "  var\
    \ out = [];\n  var i = 0;\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0]\
    \ === l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n   \
    \ }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n  }\n  return out;\n\
    }\n", "    var out = [];\n    var common, i, len;\n    for(i = 0, len = Math.min(l1.length,\
    \ l2.length); i < len; i++){\n        common = l1[i] === l2[i] ? l1[i] : l1[i]\
    \ < l2[i] ? l1[i] : l2[i];\n        if(out.indexOf(common) === -1) out.push(common);\n\
    \    }\n    return out;\n}\n", "    var out = [];\n    var llen = l1.length;\n\
    \    var lx = 0;\n    var ly = 0;\n    var i = 0;\n    var j = 0;\n    while(llen\
    \ > i){\n        if(l1[lx] === l2[j]){\n            out.push(l1[lx]);\n      \
    \      lx++;\n            ly++;\n        }else{\n            if(lx > ly){\n  \
    \              out.push(l2[j]);\n                j++;\n            }else{\n  \
    \              out.push(l1[ly]);\n                ly++;\n            }\n     \
    \   }\n        lx++;\n        ly++;\n    }\n    return out;\n}\n", "  var lc =\
    \ new Set(l1);\n  lc.forEach(function(v){\n    lc.delete(v);\n  });\n  return\
    \ [...lc].filter(function(v){\n    return l2.indexOf(v) !== -1;\n  });\n}\n",
  "    var out = [];\n    var llen = l1.length;\n    var lx = 0;\n    var ly = 0;\n\
    \    var i = 0;\n    var j = 0;\n    while(lx < llen && ly < llen){\n        if(l1[lx]\
    \ === l2[ly]){\n            out.push(l1[lx]);\n            lx++;\n           \
    \ ly++;\n        }else if(l1[lx] < l2[ly]){\n            lx++;\n        }else{\n\
    \            ly++;\n        }\n    }\n    return out;\n}\n", "  var result = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n", "  var l = [], i, j, k;\n  for(i=0, j=0,\
    \ k=0; i<l1.length; i++){\n    if(l2[i] === l1[j]){\n      l.push(l1[i]);\n  \
    \    j++;\n    }else{\n      if(j === 0){\n        l.push(l1[i]);\n      }else{\n\
    \        while(j>0 && l2[j] === l1[j]){\n          l.push(l1[j--]);\n        }\n\
    \        for(j=0; j<k; j++){\n          l.push(l2[j]);\n        }\n        k++;\n\
    \      }\n    }\n  }\n  return l;\n}\n", "  var result = [];\n  for(var i = 0,\
    \ len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) == -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0, len\
    \ = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n\
    \      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var out = [];\n\
    \  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i<l1.length && j<l2.length){\n\
    \    if(l1[i]===l2[j]){\n      out.push(l1[i]);\n      i++;\n      j++;\n    }else\
    \ if(l1[i]<l2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n  return out;\n\
    }\n", "  var lc = 0, // common length\n      lp = 0, // common prefix\n      ln\
    \ = 0, // common suffix\n      i = 0;\n\n  while(l1 !== l2 && l1 !== l3 && l2\
    \ !== l3){\n    i++;\n    lc = l1.length;\n    lp = l1.length;\n    ln = l2.length;\n\
    \    if(lc > ln || lp > ln || lc > lp || lc > ln || lp > lc || lp > ln || ln >\
    \ lc){\n      lc = ln;\n      lp = ln;\n    }\n  }\n\n  return lc < l3 ? l1 :\
    \ l2;\n}\n", "    var result = [];\n    for(var i=0; i<l1.length; i++){\n    \
    \    if(l2.indexOf(l1[i]) != -1){\n            result.push(l1[i]);\n        }\n\
    \    }\n    return result;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var result = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] ===\
    \ l2[0]){\n      result.push(l1[0]);\n      l1.shift();\n      l2.shift();\n \
    \   }else if(l1[0] < l2[0]){\n      l1.shift();\n    }else{\n      l2.shift();\n\
    \    }\n  }\n  return result;\n}\n", "    var out = [];\n    var i = 0, j = 0;\n\
    \    var len = Math.min(l1.length, l2.length);\n    while (i < len && j < len){\n\
    \        if (l1[i] === l2[j]){\n            out.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if (l1[i] > l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return out;\n\
    }\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  for(var i =\
    \ 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length; j <\
    \ len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n     \
    \   break;\n      }\n    }\n  }\n  return result;\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.splice(0, 1);\n      l2.splice(0, 1);\n    }else if(l1[0] < l2[0]){\n\
    \      l1.splice(0, 1);\n    }else{\n      l2.splice(0, 1);\n    }\n  }\n  return\
    \ out;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "  var out = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n      }\n   \
    \ }\n  }\n  return out;\n}\n", "    var out = [];\n    var i, j, k;\n    for(i\
    \ = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n       \
    \     if(l1[i] === l2[j]){\n                out.push(l1[i]);\n               \
    \ break;\n            }\n        }\n    }\n    return out;\n}\n", "    var result\
    \ = [];\n    var lLen = l1.length;\n    var lIdx = 0, rIdx = 0, lIdx_ = 0, rIdx_\
    \ = 0;\n    while (lIdx < lLen) {\n        var lVal = l1[lIdx];\n        var rVal\
    \ = l2[lIdx];\n        if (lVal === rVal) {\n            result.push(lVal);\n\
    \            lIdx += 1;\n            rIdx += 1;\n        }\n        else if (lVal\
    \ < rVal) {\n            lIdx += 1;\n        }\n        else {\n            rIdx\
    \ += 1;\n        }\n    }\n    while (lIdx < lLen) {\n        result.push(l1[lIdx]);\n\
    \        lIdx += 1;\n    }\n    while (rIdx < rLen) {\n        result.push(l2[rIdx]);\n\
    \        rIdx += 1;\n    }\n    return result;\n}", "    var out = [];\n    var\
    \ i, j, k;\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                out.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return out;\n}\n",
  "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  var lLen1 =\
    \ l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n    for(var i =\
    \ lLen1; i < lLen2; i++){\n      result.push(l1[i]);\n    }\n  }else{\n    for(var\
    \ i = lLen2; i < lLen1; i++){\n      result.push(l2[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "    var ret = [];\n    var hash = {};\n    var l1 = l1 || [];\n\
    \    var l2 = l2 || [];\n    var i = 0, j = 0;\n    var len = Math.min(l1.length,\
    \ l2.length);\n    for(; i < len; i++){\n        hash[l1[i]] = l1[i];\n      \
    \  hash[l2[i]] = l2[i];\n    }\n    for(i = 0; i < len; i++){\n        if(hash[l1[i]]\
    \ !== l2[i]){\n            ret[l1[i]] = l2[i];\n        }\n    }\n    return ret;\n\
    }\n", "  var l = [], i = 0, j = 0;\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n\
    \    }else if(l1[0] < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n\
    \      l.push(l2[0]);\n      l2.shift();\n    }\n  }\n  return l;\n}\n", "  var\
    \ result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2 = l2.length; j\
    \ < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n   \
    \     break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n\
    \  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n\
    \    while (i<lLen) {\n        if (l2.indexOf(l1[i]) === -1) {\n            result.push(l1[i]);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    var out = [];\n\
    \    var lLen = l1.length;\n    var l2 = l2.slice(0);\n    var i = 0;\n    while\
    \ (lLen > i){\n        if (l1.charAt(i) !== l2.charAt(i)){\n            break;\n\
    \        }\n        out.push(l1.charAt(i));\n        l1 = l1.substring(i+1);\n\
    \        l2 = l2.substring(i+1);\n        i++;\n    }\n    return out;\n}\n",
  "  var out = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return out;\n}\n", "  var result = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      result.push(l1[0]);\n\
    \      l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      l1.shift();\n\
    \    }else{\n      l2.shift();\n    }\n  }\n  return result;\n}\n", "  var out\
    \ = [];\n  var i = 0;\n  var j = 0;\n  while(i < l1.length && j < l2.length){\n\
    \    if(l1[i] === l2[j]){\n      out.push(l1[i]);\n      i++;\n      j++;\n  \
    \  }else if(l1[i] > l2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n\
    \  return out;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length; i\
    \ < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    var ret = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n\
    \        l1 = l1[i];\n        for(i = 0; i < lLen2; i++){\n            l2 = l2[i];\n\
    \            if(l1 === l2){\n                ret.push(l1);\n                break;\n\
    \            }\n        }\n    }\n    return ret;\n}\n", "  var l = [], i = 0,\
    \ j = 0;\n  while(l1.length > i){\n    if(l2.length > j){\n      if(l1[i] ===\
    \ l2[j]){\n        l.push(l1[i]);\n        l1.splice(i,1);\n        l2.splice(j,1);\n\
    \      }\n      else{\n        j++;\n      }\n    }\n    else{\n      i++;\n \
    \   }\n  }\n  return l;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n\
    \        l1 = l1[i];\n        for(j = 0; j < lLen2; j++){\n            l2 = l2[j];\n\
    \            if(l1 === l2){\n                result.push(l1);\n              \
    \  break;\n            }\n        }\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    while(i<l1.length && i<l2.length){\n     \
    \   if(l1[i]===l2[i]){\n            result.push(l1[i]);\n            i++;\n  \
    \      }\n        else{\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n\
    \        for(j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n \
    \               result.push(l1[i]);\n                break;\n            }\n \
    \       }\n    }\n    return result;\n}\n", "  var lc = l1.length, lp = l2.length,\
    \ i = 0, j = 0;\n  while(lc > lp){\n    if(l1[i] == l2[j]){\n      lc -= 1;\n\
    \      lp -= 1;\n      i += 1;\n      j += 1;\n    }else{\n      if(lc == lp){\n\
    \        lc -= 1;\n        lp -= 1;\n      }else{\n        lc -= lp;\n       \
    \ lp -= lc;\n      }\n      i = 0;\n      j = 0;\n    }\n  }\n  return l1;\n}\n",
  "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] ===\
    \ l2[i]){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !== -1){\n  \
    \    result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var out = [];\n\
    \    var lLen = l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n\
    \    var l1i = 0;\n    var l2i = 0;\n    while (l1i < l1Len && l2i < l2Len){\n\
    \        if (l1[l1i] == l2[l2i]){\n            l1i++;\n            l2i++;\n  \
    \      }else{\n            if (l1[l1i] < l2[l2i]){\n                out.push(l1[l1i]);\n\
    \                l1i++;\n            }else{\n                out.push(l2[l2i]);\n\
    \                l2i++;\n            }\n        }\n    }\n    while (l1i < l1Len){\n\
    \        out.push(l1[l1i]);\n        l1i++;\n    }\n    while (l2i < l2Len){\n\
    \        out.push(l2[l2i]);\n        l2i++;\n    }\n    return out;\n}\n", " \
    \   var result = [];\n    var lLen = l1.length;\n    var l2 = l2.slice(0);\n \
    \   var i = 0;\n    while (lLen > i){\n        if (l1.charAt(i) !== l2.charAt(i)){\n\
    \            result.push(l1.charAt(i));\n            l2.splice(i, 1);\n      \
    \      lLen--;\n        }\n        i++;\n    }\n    return result;\n}\n", "  var\
    \ out = [];\n  var hash = {};\n  for(var i = 0; i < l1.length; i++){\n    hash[l1[i]]\
    \ = true;\n  }\n  for(var i = 0; i < l2.length; i++){\n    if(hash[l2[i]]){\n\
    \      out.push(l2[i]);\n    }\n  }\n  return out;\n}\n", "  var i, l=l1.length,\
    \ m=l2.length, a=0, b=0, c;\n  for(i=0; i<l; i++){\n    for(j=0; j<m; j++){\n\
    \      if(a===l1[i]) b=1;\n      else if(b===l2[j]) a=1;\n      else if(a<b){\n\
    \        c = l1[i];\n        l1[i] = l2[j];\n        l2[j] = c;\n      }\n   \
    \ }\n  }\n  return l1;\n}\n", "    var out = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var l1, l2, i;\n    for(i = 0; i < lLen1; i++){\n\
    \        l1 = l1[i];\n        for(i = 0; i < lLen2; i++){\n            l2 = l2[i];\n\
    \            if(l1 === l2){\n                out.push(l1);\n                break;\n\
    \            }\n        }\n    }\n    return out;\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] < l2[0]){\n      out.unshift(l1.shift());\n\
    \    }else{\n      out.unshift(l2.shift());\n    }\n  }\n  return out;\n}\n",
  "    var result = [];\n    for(var i = 0, len = l1.length; i < len; i++){\n    \
    \    if(l2.indexOf(l1[i]) === -1){\n            result.push(l1[i]);\n        }\n\
    \    }\n    return result;\n}\n", "  var lc = l1.length,\n      l2 = l2.length,\n\
    \      i = 0, j = 0;\n  \n  if(lc == 0){\n    return l2;\n  }\n  \n  if(lc ==\
    \ 1){\n    return l1;\n  }\n  \n  while(i<lc && j<l2){\n    if(l1[i] === l2[j]){\n\
    \      i++;\n      j++;\n    }\n    else if(l1[i] < l2[j]){\n      i++;\n    }\n\
    \    else{\n      j++;\n    }\n  }\n  \n  return l1.slice(i, j);\n}\n", "  var\
    \ i, l=l1.length, m=l2.length, a = [], o = [], v;\n  for(i=0; i<l; i++){\n   \
    \ v = l1[i];\n    for(j=0; j<m; j++){\n      if(l2[j] === v){\n        a.push(v);\n\
    \        break;\n      }\n    }\n  }\n  for(i=0; i<l; i++){\n    v = l2[i];\n\
    \    for(j=0; j<m; j++){\n      if(l1[j] === v){\n        o.push(v);\n       \
    \ break;\n      }\n    }\n  }\n  return [o, a];\n}\n", "  var result = [];\n \
    \ for(var i = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) !=\
    \ -1){\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ l = [], i = 0, j = 0;\n  while(i<l1.length && j<l2.length){\n    if(l1[i]===l2[j]){\n\
    \      l.push(l1[i]);\n      i++;\n      j++;\n    }else if(l1[i]<l2[j]){\n  \
    \    i++;\n    }else{\n      j++;\n    }\n  }\n  return l;\n}\n", "  var out =\
    \ [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while (i < l1.length && j <\
    \ l2.length){\n    if (l1[i] === l2[j]){\n      out.push(l1[i]);\n      i++;\n\
    \      j++;\n    }\n    else if (l1[i] < l2[j]){\n      i++;\n    }\n    else{\n\
    \      j++;\n    }\n  }\n  while (i < l1.length){\n    out.push(l1[i]);\n    i++;\n\
    \  }\n  while (j < l2.length){\n    out.push(l2[j]);\n    j++;\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i = 0, len = l1.length; i < len;\
    \ i++){\n    if(l2.indexOf(l1[i]) == -1){\n      result.push(l1[i]);\n    }\n\
    \  }\n  return result;\n}\n", "    var result = [];\n    var lLen1 = l1.length;\n\
    \    var lLen2 = l2.length;\n    var lIdx = 0;\n    var l2Idx = 0;\n    while\
    \ (lIdx < lLen1 && l2Idx < lLen2){\n        if (l1[lIdx] === l2[l2Idx]){\n   \
    \         result.push(l1[lIdx]);\n            lIdx++;\n            l2Idx++;\n\
    \        }\n        else if (l1[lIdx] < l2[l2Idx]){\n            lIdx++;\n   \
    \     }\n        else {\n            l2Idx++;\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\
    \    while(i<l1.length && j<l2.length){\n        if(l1[i]===l2[j]){\n        \
    \    result.push(l1[i]);\n            i++;\n            j++;\n        }else if(l1[i]<l2[j]){\n\
    \            i++;\n        }else{\n            j++;\n        }\n    }\n    return\
    \ result;\n}\n", "  var result = [];\n  var lLen1 = l1.length;\n  var lLen2 =\
    \ l2.length;\n  if(lLen1 > lLen2){\n    for(var i = lLen1; i < lLen2; i++){\n\
    \      result.push(l1[i]);\n    }\n  }else{\n    for(var i = lLen2; i < lLen1;\
    \ i++){\n      result.push(l2[i]);\n    }\n  }\n  return result;\n}\n", "  var\
    \ out = [];\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] < l2[0]){\n\
    \      out.unshift(l1.shift());\n    } else {\n      out.unshift(l2.shift());\n\
    \    }\n  }\n  return out;\n}\n", "    var result = [];\n    for(var i = 0; i\
    \ < l1.length; i++){\n        if(l2.indexOf(l1[i]) != -1){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i=0;\
    \ i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] ===\
    \ l2[j]){\n        result.push(l1[i]);\n        break;\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  var i = 0;\n  var j = 0;\n  while(i<l1.length\
    \ && j<l2.length){\n    if(l1[i]===l2[j]){\n      result.push(l1[i]);\n      i++;\n\
    \      j++;\n    }else if(l1[i]<l2[j]){\n      i++;\n    }else{\n      j++;\n\
    \    }\n  }\n  return result;\n}\n", "    var out = [];\n    var hash = {};\n\
    \    var i, j, k;\n    for(i = 0; i < l1.length; i++){\n        hash[l1[i]] =\
    \ 1;\n    }\n    for(i = 0; i < l2.length; i++){\n        hash[l2[i]] = 1;\n \
    \   }\n    for(i in hash){\n        if(hash.hasOwnProperty(i)){\n            for(j\
    \ = 0, k = hash[i]; j < l1.length; j++){\n                if(l1[j] === k){\n \
    \                   out.push(l1[j]);\n                }\n            }\n     \
    \       for(j = 0, k = hash[i]; j < l2.length; j++){\n                if(l2[j]\
    \ === k){\n                    out.push(l2[j]);\n                }\n         \
    \   }\n        }\n    }\n    return out;\n}\n", "  var out = [];\n  var i = 0;\n\
    \  while(l1.length > i){\n    if(l2.indexOf(l1[i]) === -1){\n      out.push(l1[i]);\n\
    \    }\n    i++;\n  }\n  return out;\n}\n", "    var result = [];\n    var i =\
    \ 0, j = 0;\n    while(i<l1.length && j<l2.length){\n        if(l1[i] === l2[j]){\n\
    \            result.push(l1[i]);\n            i++;\n            j++;\n       \
    \ }else if(l1[i] < l2[j]){\n            i++;\n        }else{\n            j++;\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0, len = l1.length; i < len; i++){\n    if(l2.indexOf(l1[i]) === -1){\n  \
    \    result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = Math.min(l1.length,\
    \ l2.length);\n    while(i < l1 || j < l2){\n        if(l1.length < l2.length){\n\
    \            if(!l1){\n                break;\n            }\n            i++;\n\
    \        }else{\n            if(!l2){\n                break;\n            }\n\
    \            j++;\n        }\n        if(l1.length > l2.length){\n           \
    \ result.push(l1[i]);\n            i++;\n        }else{\n            result.push(l2[j]);\n\
    \            j++;\n        }\n    }\n    return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0, len = l1.length; i < len; i++){\n    for(var j = 0, len2\
    \ = l2.length; j < len2; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] === l2[i]){\n\
    \      result.push(l1[i]);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var lLen = l1.length;\n    var l2 = l2.length;\n    var l = 0;\n\
    \    var i = 0;\n    while(l<lLen){\n        if(l1[l] === l2[l]){\n          \
    \  result.push(l1[l]);\n            l++;\n        }else{\n            if(l !==\
    \ lLen){\n                l++;\n            }else{\n                l = 0;\n \
    \           }\n        }\n    }\n    return result;\n}\n", "  var out = [];\n\
    \  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n    \
    \  if(l1[i]==l2[j]){\n        out.push(l1[i]);\n      }\n    }\n  }\n  return\
    \ out;\n}\n", "  var result = [];\n  for(var i=0; i<l1.length; i++){\n    for(var\
    \ j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n        result.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        break;\n   \
    \   }\n    }\n  }\n  return result;\n}\n", "  var ret = [];\n  var ln = l1.length;\n\
    \  var ln2 = l2.length;\n  var i = 0;\n  var j = 0;\n  while (i < ln1 && j < ln2){\n\
    \    if (l1[i] === l2[j]){\n      ret.push(l1[i]);\n      i++;\n      j++;\n \
    \   }\n    else if (l1[i] < l2[j]){\n      i++;\n    }\n    else{\n      j++;\n\
    \    }\n  }\n  return ret;\n}\n", "  var out = [];\n  while(l1.length > 0 && l2.length\
    \ > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n      l1.shift();\n\
    \      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n   \
    \   l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n    }\n\
    \  }\n  return out;\n}\n", "  var out = [];\n  for(var i=0; i<l1.length; i++){\n\
    \    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "  var l = [], i =\
    \ 0, j = 0;\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n\
    \      l.push(l1[0]);\n      l1.shift();\n      l2.shift();\n    }else if(l1[0]\
    \ < l2[0]){\n      l.push(l1[0]);\n      l1.shift();\n    }else{\n      l.push(l2[0]);\n\
    \      l2.shift();\n    }\n  }\n  return l;\n}\n", "  var out = [];\n  while(l1.length\
    \ > 0 && l2.length > 0){\n    if(l1[0] === l2[0]){\n      out.push(l1[0]);\n \
    \     l1.shift();\n      l2.shift();\n    }else if(l1[0] < l2[0]){\n      out.push(l1[0]);\n\
    \      l1.shift();\n    }else{\n      out.push(l2[0]);\n      l2.shift();\n  \
    \  }\n  }\n  return out;\n}\n", "  var lc = 0, // common length\n      lp = 0,\
    \ // common prefix\n      ln = 0, // common suffix\n      lm = 0, // common match\n\
    \      l1, l2, lm, i, j, k, l2, j, len, len2;\n\n  while(l1 || l2){\n    l1 =\
    \ l1 || l2;\n    l2 = !l1;\n    lm = (l2 ? 0 : l1);\n    len1 = l1.length;\n \
    \   len2 = l2.length;\n    lc += (l1 + l2 + lm)|0;\n    lp += (l1 + l2 + lm)|0;\n\
    \    ln += (l1 + l2 + lm)|0;\n    lm += (l1 + l2 + lm)|0;\n  }\n\n  lc += (l1\
    \ + l2)|0;\n  lp += (l1 + l2)|0;\n  ln += (l1 + l2)|0;\n  lm += (l1 + l2)|0;\n\
    \n  lc += (l1 + l2 + ln)|0;\n  lp += (l1 + l2 + ln)|0;\n  ln += (l1 + l2 + ln)|0;\n\
    \  lm += (l1 + l2 + ln)|0;\n\n  lc += (l1 + l2 + lm)|0;\n  lp += (l1 + l2 + lm)|0;\n\
    \  ln += (l1 + l2 + lm)|0;\n  lm += (l1 + l2 + lm)|0;\n\n  return lc + (lp + (ln\
    \ + (lm + (lc>>31)))>>31);\n}\n", "    var out = [];\n    var hash = {};\n   \
    \ var llen = l1.length;\n    var lx = 0;\n    var ly = 0;\n    while (lx < llen\
    \ && ly < llen){\n        if (hash[l1[lx]]) out.push(hash[l1[lx]]);\n        hash[l1[lx]]\
    \ = l1[lx];\n        lx++;\n    }\n    lx = ly = 0;\n    while (lx < llen){\n\
    \        if (hash[l2[ly]]) out.push(hash[l2[ly]]);\n        hash[l2[ly]] = l2[ly];\n\
    \        ly++;\n    }\n    return out;\n}\n", "  var lc = 0, // common length\n\
    \      l1, l2, lc, l1, l2, lc, i, j, k, l1, l2, lc, k;\n  for(i=0, l1=l1.length,\
    \ l2=l2.length; i<l1; i++){\n    for(j=0, l2=l2.length; j<l2; j++){\n      if(l1[i]\
    \ === l2[j]){\n        lc++;\n      }\n    }\n  }\n  return lc;\n}\n", "    var\
    \ result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var lLen =\
    \ l1.length;\n    var l1Len = l1.length;\n    var l2Len = l2.length;\n    while(i<lLen){\n\
    \        while(j<l2Len){\n            if(l1[i]===l2[j]){\n                result.push(l1[i]);\n\
    \                i++;\n                j++;\n            }else{\n            \
    \    break;\n            }\n        }\n        if(j===l2Len){\n            result.push(l1[i]);\n\
    \            i++;\n        }\n    }\n    return result;\n}\n", "  var result =\
    \ [];\n  var lLen1 = l1.length;\n  var lLen2 = l2.length;\n  if(lLen1 > lLen2){\n\
    \    lLen1 = lLen2;\n  }\n  while(lLen1 > 0){\n    var l1 = l1[0];\n    var l2\
    \ = l2[0];\n    if(l1 == l2){\n      result.push(l1);\n      l1.splice(0, 1);\n\
    \      lLen1--;\n    }else if(l1 > l2){\n      result.push(l1);\n      l1.splice(0,\
    \ 1);\n      lLen1--;\n    }else{\n      result.push(l2);\n      l2.splice(0,\
    \ 1);\n      lLen2--;\n    }\n  }\n  return result;\n}\n", "    var result = [];\n\
    \    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<l1.length && j<l2.length){\n\
    \        if(l1[i]===l2[j]){\n            result.push(l1[i]);\n            i++;\n\
    \            j++;\n        }\n        else if(l1[i]<l2[j]){\n            i++;\n\
    \        }\n        else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_65_circular_shift
language: js
prompt: "//Circular shift the digits of the integer x, shift the digits right by shift\n\
  // and return the result as a string.\n// If shift > number of digits, return digits\
  \ reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12,\
  \ 2)\n// \"12\"\nfunction circular_shift(x, shift){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = circular_shift;\n  assert.deepEqual(candidate(100, 2),\"001\");\n  assert.deepEqual(candidate(12,\
  \ 2),\"12\");\n  assert.deepEqual(candidate(97, 8),\"79\");\n  assert.deepEqual(candidate(12,\
  \ 1),\"21\");\n  assert.deepEqual(candidate(11, 101),\"11\");\n}\n\ntest();"
completions: ["    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n\
    \        circ_shift = shift > circ ? shift - circ : 0;\n    return digits.reverse().slice(circ_shift).concat(digits.slice(0,\
    \ circ_shift)).reverse().join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        shift = digits.length - shift;\n    for (var i = digits.length - 1; i\
    \ >= shift; i--)\n        digits[i] = digits[i + 1];\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    shift = shift % digits.length;\n\
    \    return digits.slice(shift, digits.length).reverse().join('');\n}\n", "  \
    \  var digits = x.toString().split('');\n    if (shift > digits.length)\n    \
    \    return digits.reverse().join('');\n    var result = \"\";\n    while (shift\
    \ > 0){\n        if (shift & 1){\n            result += digits.pop();\n      \
    \  }\n        shift >>= 1;\n    }\n    return result + digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    var result = \"\";\n    for(var\
    \ i = 0; i < shift; i++){\n        result += digits.pop();\n    }\n    for(var\
    \ i = 0; i < digits.length; i++){\n        result += digits[i];\n    }\n    return\
    \ result;\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length,\n        circ_shift = shift % circ,\n    \
    \    circ_mask = circ - circ_shift,\n        circ_mask2 = circ_mask << 1,\n  \
    \      circ_mask3 = circ_mask2 << 1,\n        circ_mask4 = circ_mask3 << 1,\n\
    \        circ_mask5 = circ_mask4 << 1,\n        circ_mask6 = circ_mask5 << 1,\n\
    \        circ_mask7 = circ_mask6 << 1,\n        circ_mask8 = circ_mask7 << 1,\n\
    \        circ_mask9 = circ_mask8 << 1,\n        circ_mask10 = circ_mask9 << 1,\n\
    \        circ_mask11 = circ_mask10 << 1,\n        circ_mask12 = circ_mask11 <<\
    \ 1,\n        circ_mask13 = circ_mask12 << 1,\n        circ_mask14 = circ_mask13\
    \ << 1,\n        circ_mask15 = circ_mask14 << 1,\n        circ_mask16 = circ_mask15\
    \ << 1,\n        circ_mask17 = circ_mask16 << 1,\n        circ_mask18 = circ_mask17\
    \ << 1,\n        circ_mask19 = circ_mask18 << 1,\n        circ_mask20 = circ_mask19\
    \ << 1,\n        circ_mask21 = circ_mask20 << 1,\n        circ_mask22 = circ_mask21\
    \ << 1,\n        circ_mask23 = circ_mask22 << 1,\n        circ_mask24 = circ_mask23\
    \ << 1,\n        circ_mask25 = circ_mask24 << 1,\n        circ_mask26 = circ_mask25\
    \ << 1,\n        circ_mask27 = circ_mask26 << 1,\n        circ_mask28 = circ_mask27\
    \ << 1,\n        circ_mask29 = circ_mask28 << 1,\n        circ_mask30 = circ_mask29\
    \ << 1,\n        circ_mask31 = circ_mask30 << 1,\n        circ_mask32 = circ_mask31\
    \ << 1,\n        circ_mask33 = circ_mask32 << 1,\n        circ_mask34 = circ_mask33\
    \ << 1,\n        circ_mask35 = circ_mask34 << 1,\n        circ_mask36 = circ_mask35\
    \ << 1,\n        circ_mask37 = circ_mask36 << 1,\n        circ_mask38 = circ_mask37\
    \ << 1,\n        circ_mask39 = cir", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).join('');\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n\
    \        circ_shift = shift > circ ? shift - circ : 0;\n    return digits.reverse().slice(circ_shift).reverse().join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "  if(shift > x.length) shift = x.length - shift;\n  return x.toString().split(\"\
    \").reverse().join(\"\").split(\"\").slice(shift).join(\"\");\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    var result = \"\";\n    var i;\n    for(i = 0; i < shift; i++){\n       \
    \ result += digits.pop();\n    }\n    for(i = digits.length - 1; i >= shift; i--){\n\
    \        result += digits[i];\n    }\n    return result;\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).join('');\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     return digits.reverse().join('');\n    }\n    return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "  if(shift > x.length){\n    return x.split(\"\
    \").reverse().join(\"\");\n  }\n  if(shift < 0){\n    shift = x.length + shift;\n\
    \  }\n  if(shift > x.length){\n    shift = x.length;\n  }\n  var result = \"\"\
    ;\n  for(var i = x.length - shift; i >= 0; i -= shift){\n    result += x.charAt(i);\n\
    \  }\n  return result;\n}\n", "    var digits = String(x).split(\"\"),\n     \
    \   circ = digits.length - shift;\n    if(circ > 0){\n        digits.splice(circ,\
    \ 0, digits.splice(circ, 1)[0]);\n    }\n    return digits.join(\"\");\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    \    }\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = x.toString().split('');\n\
    \  if(shift > digits.length){\n    shift = digits.length - shift;\n  }\n  for(var\
    \ i = digits.length - 1; i >= shift; i--){\n    digits[i] = digits[i + 1];\n \
    \ }\n  digits[0] = 0;\n  return digits.reverse().join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "  var digits = String(Math.abs(x)).split('');\n  if(shift\
    \ > digits.length){\n    return digits.reverse().join('');\n  }\n  if(shift <\
    \ -digits.length){\n    return digits.reverse().join('');\n  }\n  for(var i =\
    \ digits.length - 1; i >= shift; i--){\n    digits[i] = digits[i + 1];\n  }\n\
    \  digits[0] = 0;\n  return digits.reverse().join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - shift; i >=\
    \ 0; i--){\n        digits[i] = digits[i + shift];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n\
    \        circ_shift = shift > circ ? circ - shift : circ,\n        circ_mask =\
    \ (1 << circ_shift) - 1,\n        circ_mask2 = circ_mask << 1,\n        circ_mask3\
    \ = circ_mask2 << 1,\n        circ_mask4 = circ_mask3 << 1,\n        circ_mask5\
    \ = circ_mask4 << 1,\n        circ_mask6 = circ_mask5 << 1,\n        circ_mask7\
    \ = circ_mask6 << 1,\n        circ_mask8 = circ_mask7 << 1,\n        circ_mask9\
    \ = circ_mask8 << 1,\n        circ_mask10 = circ_mask9 + 1,\n        circ_mask11\
    \ = circ_mask10 << 1,\n        circ_mask12 = circ_mask11 + 1,\n        circ_mask13\
    \ = circ_mask12 << 1,\n        circ_mask14 = circ_mask13 + 1,\n        circ_mask15\
    \ = circ_mask14 << 1,\n        circ_mask16 = circ_mask15 + 1,\n        circ_mask17\
    \ = circ_mask16 << 1,\n        circ_mask18 = circ_mask17 + 1,\n        circ_mask19\
    \ = circ_mask18 << 1,\n        circ_mask20 = circ_mask19 + 1,\n        circ_mask21\
    \ = circ_mask20 + 1,\n        circ_mask22 = circ_mask21 + 1,\n        circ_mask23\
    \ = circ_mask22 << 1,\n        circ_mask24 = circ_mask23 + 1,\n        circ_mask25\
    \ = circ_mask24 << 1,\n        circ_mask26 = circ_mask25 + 1,\n        circ_mask27\
    \ = circ_mask26 << 1,\n        circ_mask28 = circ_mask27 + 1,\n        circ_mask29\
    \ = circ_mask28 << 1,\n        circ_mask30 = circ_mask29 + 1,\n        circ_mask31\
    \ = circ_mask30 << 1,\n        circ_mask32 = circ_mask31 + 1,\n        circ_mask33\
    \ = circ_mask32 << 1,\n        circ_mask34 = circ_mask33 + 1,\n        circ_mask35\
    \ = circ_mask34 << 1,\n        circ_mask36 = circ_mask35 + 1,\n        circ_mask37\
    \ = circ_mask36 << 1,\n        circ_mask38 = circ_mask37 + 1,", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    else return\
    \ digits.slice(shift, digits.length).join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - shift; i > -1; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - shift; i >= 0; i -= shift)\n        digits[i] = digits[i\
    \ + shift];\n    return digits.reverse().join('');\n}\n", "  if(shift > x.length)\
    \ shift = x.length - shift;\n  var result = \"\";\n  for(var i = 0; i < shift;\
    \ i++){\n    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n",
  "    var digits = String(x).split(\"\"),\n        digits_length = digits.length,\n\
    \        shift = shift || 0,\n        i = 1,\n        j = digits_length - shift;\n\
    \    for (; i < j; ++i) digits[i + shift] = digits[i];\n    for (i = digits_length\
    \ - shift; i > shift; --i) digits[i] = digits[i - 1];\n    return digits.join(\"\
    \");\n}\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length\
    \ - shift;\n    if (circ > 0) {\n        digits.splice(circ, 0, digits.splice(circ,\
    \ 1)[0]);\n    }\n    return digits.join(\"\");\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    shift = shift % digits.length;\n    return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    for(var i = 0; i < circ; i++){\n        digits[i] = digits[i-1];\n\
    \    }\n    return digits.join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length) return\
    \ digits.reverse().join('');\n    else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        shift = shift || 0,\n        i = digits.length - 1;\n    while (i >=\
    \ 0 && digits[i] >= '9') {\n        digits[i--] = digits[i] - '9';\n    }\n  \
    \  digits = digits.reverse();\n    while (shift > digits.length) {\n        digits\
    \ = digits.reverse();\n    }\n    return digits.join(\"\");\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length,\n\
    \        circ_shift = shift % circ,\n        circ_mask = circ - circ_shift,\n\
    \        circ_mask2 = circ_mask << 1,\n        circ_mask3 = circ_mask2 << 1,\n\
    \        circ_mask4 = circ_mask3 << 1,\n        circ_mask5 = circ_mask4 << 1,\n\
    \        circ_mask6 = circ_mask5 << 1,\n        circ_mask7 = circ_mask6 << 1,\n\
    \        circ_mask8 = circ_mask7 << 1,\n        circ_mask9 = circ_mask8 << 1,\n\
    \        circ_mask10 = circ_mask9 << 1,\n        circ_mask11 = circ_mask10 <<\
    \ 1,\n        circ_mask12 = circ_mask11 << 1,\n        circ_mask13 = circ_mask12\
    \ << 1,\n        circ_mask14 = circ_mask13 << 1,\n        circ_mask15 = circ_mask14\
    \ << 1,\n        circ_mask16 = circ_mask15 << 1,\n        circ_mask17 = circ_mask16\
    \ << 1,\n        circ_mask18 = circ_mask17 << 1,\n        circ_mask19 = circ_mask18\
    \ << 1,\n        circ_mask20 = circ_mask19 << 1,\n        circ_mask21 = circ_mask20\
    \ << 1,\n        circ_mask22 = circ_mask21 << 1,\n        circ_mask23 = circ_mask22\
    \ << 1,\n        circ_mask24 = circ_mask23 << 1,\n        circ_mask25 = circ_mask24\
    \ << 1,\n        circ_mask26 = circ_mask25 << 1,\n        circ_mask27 = circ_mask26\
    \ << 1,\n        circ_mask28 = circ_mask27 << 1,\n        circ_mask29 = circ_mask28\
    \ << 1,\n        circ_mask30 = circ_mask29 << 1,\n        circ_mask31 = circ_mask30\
    \ << 1,\n        circ_mask32 = circ_mask31 << 1,\n        circ_mask33 = circ_mask32\
    \ << 1,\n        circ_mask34 = circ_mask33 << 1,\n        circ_mask35 = circ_mask34\
    \ << 1,\n        circ_mask36 = circ_mask35 << 1,\n        circ_mask37 = circ_mask36\
    \ << 1,\n        circ_mask38 = circ_mask37 << 1,\n        circ_mask39 = cir",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     return digits.reverse().join('');\n    }\n    var result = \"\";\n    for\
    \ (var i = 0; i < shift; i++){\n        result += digits.pop();\n    }\n    return\
    \ result + digits.join('');\n}\n", "  if(shift > x.length) shift = x.length -\
    \ shift;\n  var result = \"\";\n  for(var i = x.length; i > shift; i--){\n   \
    \ result = x.substr(0,i) + result + x.substr(i-shift);\n  }\n  return result;\n\
    }\n", "    var digits = String(x).split(\"\"),\n        shift = shift || 0,\n\
    \        i = digits.length - shift;\n    if (i < 0) i = digits.length + shift;\n\
    \    return digits.reverse().join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  var digits = String(x).split(\"\"),\n \
    \     result = \"\",\n      i;\n  for(i = digits.length - shift + 1; digits &&\
    \ i; i--){\n    result += digits[i - 1];\n  }\n  return result;\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       return digits.reverse().join('');\n    }\n    else {\n        return digits.slice(shift,\
    \ digits.length).join('');\n    }\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i >= 0; i -= 1){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - shift; i > -1; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    var result = \"\";\n    for(var\
    \ i = 0; i < shift; i++){\n        result += digits.pop();\n    }\n    for(var\
    \ i = 0; i < digits.length; i++){\n        result += digits[i];\n    }\n    return\
    \ result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "  if(shift > x.length) shift = x.length\
    \ - shift;\n  var result = \"\";\n  for(var i = x.length; i-- > shift; ) result\
    \ = x[i] + result;\n  return result;\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = shift % x.length,\n        revshift = shift - circ,\n   \
    \     revcirc = revshift % x.length,\n        start = circ + revcirc;\n    digits[start]\
    \ = digits[start] + (revshift - circ) + 1;\n    return digits.join(\"\");\n}\n",
  "  if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n  for(var\
    \ i = x.length; i > shift; --i){\n    result = x.substr(0, i) + result + x.substr(i\
    \ - shift, i);\n  }\n  return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    shift = shift % digits.length;\n    return\
    \ digits.slice(shift, digits.length).reverse().join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        shift = shift || 0,\n        i = digits &&\
    \ digits.length,\n        result = digits && digits.length - 1 || 0;\n    shift\
    \ = shift > 0 ? shift : 0;\n    if(shift > i){\n        shift = i;\n    }\n  \
    \  for(; shift > 0; shift--){\n        result = result * 10 + digits[shift];\n\
    \    }\n    for(; i-- > shift; ){\n        result = result + digits[i];\n    }\n\
    \    return result;\n}\n", "    var digits = String(x).split(\"\"),\n        circ\
    \ = digits.length,\n        circ_shift = shift % circ,\n        circ_mask = circ\
    \ - circ_shift,\n        digits_shift = digits.length - circ_shift,\n        digits_mask\
    \ = digits_shift - circ_mask,\n        reversed_digits = digits.reverse(),\n \
    \       reversed_digits_shift = reversed_digits.length - circ_shift,\n       \
    \ reversed_digits_mask = reversed_digits_shift - circ_mask,\n        circular_shift_digits\
    \ = \"\";\n    \n    if (circ_shift > digits_shift){\n        circular_shift_digits\
    \ = reversed_digits.substr(circ_shift, reversed_digits_shift);\n    }\n    else\
    \ {\n        circular_shift_digits = reversed_digits.substr(0, circ_shift);\n\
    \    }\n    \n    return circular_shift_digits + reversed_digits.substr(reversed_digits_shift,\
    \ reversed_digits_mask);\n}\n", "    var digits = x.toString().split('');\n  \
    \  if (shift > digits.length)\n        return digits.reverse().join('');\n   \
    \ else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ shift; i >= 0; i -= 1){\n        digits[i] = digits[i + shift];\n    }\n   \
    \ return digits.join('');\n}\n", "    var digits = x.toString().split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    else {\n        return digits.slice(shift,\
    \ digits.length).join('');\n    }\n}\n", "    var digits = String(x).split(\"\"\
    ),\n        shift = shift || 0,\n        i = digits && digits.length,\n      \
    \  j = digits && digits.length;\n    if (i == 0) return \"\";\n    if (i == 1)\
    \ return digits[0];\n    if (i < j){\n        var result = \"\";\n        while(j--\
    \ > i) result += digits[j];\n        return result + digits[i];\n    }\n    while(j--\
    \ > i) digits[j] = digits[j].split(\"\").reverse().join(\"\");\n    while(shift--\
    \ > i) digits.pop();\n    return digits.reverse().join(\"\");\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       return digits.reverse().join('');\n    }\n    else {\n        return digits.splice(0,\
    \ shift).join('');\n    }\n}\n", "    var digits = x.toString().split('');\n \
    \   if (shift > digits.length){\n        shift = digits.length - shift;\n    }\n\
    \    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i\
    \ + 1];\n    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = x.toString().split('');\n    if (shift > digits.length){\n  \
    \      shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    circ = circ < 0 ? 0 : circ;\n    circ = circ > digits.length\
    \ ? digits.length : circ;\n    return digits.splice(circ, digits.length - circ).join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        shift = shift || 0,\n        i = digits.length - shift;\n    return digits.reverse().join(\"\
    \") + digits.splice(0, i + shift).join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "  var\
    \ digits = x.toString().split('');\n  if(shift > digits.length){\n    return digits.reverse().join('');\n\
    \  }\n  if(shift < 0){\n    shift = 0;\n  }\n  if(shift > digits.length){\n  \
    \  shift = digits.length - 1;\n  }\n  for(var i = digits.length - 1; i >= shift;\
    \ i--){\n    digits[i] = digits[i + 1];\n  }\n  digits[shift] = '';\n  return\
    \ digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length)\n        shift\
    \ = digits.length - shift;\n    for (var i = digits.length - shift; i > -1; i--)\n\
    \        digits[i] = digits[i + shift];\n    return digits.reverse().join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        var result\
    \ = \"\";\n        for (var i = 0; i < shift; i++){\n            result += digits.pop();\n\
    \        }\n        return result + digits.join('');\n    }\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    var result = \"\";\n    var\
    \ carry = 0;\n    for(var i = 0; i < digits.length; i++){\n        var digit =\
    \ parseInt(digits[i]);\n        if(digit < 10){\n            result += digit;\n\
    \        }else{\n            result += digit - 10;\n            carry = 1;\n \
    \       }\n        if(carry && shift > digits.length){\n            carry = 1;\n\
    \            shift -= digits.length;\n        }\n    }\n    return result + Array(shift\
    \ + 1).join('0');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    var result = \"\";\n    for(var i = digits.length - 1; i >= shift; i--){\n\
    \        result = digits[i] + result;\n    }\n    return result;\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    var result = \"\";\n  \
    \  for(var i = 0; i < shift; i++){\n        result += digits.pop();\n    }\n \
    \   for(var i = 0; i < digits.length; i++){\n        result += digits[i];\n  \
    \  }\n    return result;\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        return digits.reverse().join('');\n\
    \    else\n        return digits.slice(shift, digits.length).join('');\n}\n",
  "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    else\n    \
    \    return digits.slice(shift, digits.length).reverse().join('');\n}\n", "  \
    \  var digits = x.toString().split('');\n    if (shift > digits.length)\n    \
    \    return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    else\n    \
    \    return digits.slice(shift, digits.length).join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        return\
    \ digits.reverse().join('');\n    }\n    return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        return\
    \ digits.slice(shift, digits.length).join('');\n    }\n}\n", "    var digits =\
    \ String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = digits.length -\
    \ shift;\n    if(circ > 0){\n        digits.splice(circ, 0, digits.splice(circ,\
    \ 1)[0]);\n    }\n    return digits.join(\"\");\n}\n", "    var digits = String(x).split(\"\
    \"),\n        circ = digits.length - shift;\n    return digits.reverse().join(\"\
    \").split(\"\").map(function(d, i){\n        return circ ? circ * parseInt(d,\
    \ 10) + parseInt(digits[i + shift], 10) : parseInt(d, 10) + parseInt(digits[i\
    \ + shift], 10);\n    }).reverse().join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + shift];\n    }\n    return digits.reverse().join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "  if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n\
    \  for(var i = 0; i < shift; i++){\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  var digits = String(x).split(\"\"),\n      shift\
    \ = shift || 0,\n      i = digits.length - shift;\n  if (i < 0) return digits.reverse().join(\"\
    \");\n  return digits.slice(i, i + shift).reverse().join(\"\");\n}\n", "    var\
    \ digits = x.toString().split('');\n    if (shift > digits.length) return digits.reverse().join('');\n\
    \    var result = \"\";\n    for (var i = 0; i < shift; i++) result = digits[i\
    \ + shift] + result;\n    return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length)\n        shift = digits.length\
    \ - shift;\n    for (var i = digits.length - 1; i >= shift; i--)\n        digits[i]\
    \ = digits[i + 1];\n    return digits.reverse().join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length)\
    \ return digits.reverse().join('');\n    else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    else\n    \
    \    return digits.slice(shift, digits.length).join('');\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.reverse().join('');\n\
    }\n", "  if(shift > x.length) return x.split(\"\").reverse().join(\"\");\n  if(shift\
    \ < 0) return x.split(\"\").reverse().join(\"\") + x.split(\"\").reverse().join(\"\
    \");\n  if(shift === 0) return x.split(\"\").reverse().join(\"\");\n  if(shift\
    \ % x.length) return circular_shift(x, shift-x.length);\n  return x.split(\"\"\
    ).reverse().join(\"\") + x.split(\"\").reverse().join(\"\").substr(0, shift);\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    var result\
    \ = \"\";\n    for(var i = digits.length - 1; i >= shift; i--){\n        result\
    \ = digits[i] + result;\n    }\n    return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   var result = new Array(shift+1).join('0');\n    for (var i = 0; i < shift;\
    \ i++)\n        result = digits[i+shift] + result;\n    return result;\n}\n",
  "    var digits = String(x).split(\"\"),\n        circ = shift % x.length,\n   \
    \     circ_shift = shift - circ;\n    return digits.reverse().slice(circ, circ\
    \ + circ_shift).join(\"\");\n}\n", "    var digits = String(x).split(\"\"),\n\
    \        circ = digits.length - shift;\n    return circ > 0 ? digits.splice(circ,\
    \ digits.length - circ).join(\"\") : digits.reverse().join(\"\");\n}\n", "   \
    \ var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "  var digits = String(Math.abs(x)).split('');\n  if(shift\
    \ > digits.length){\n    return digits.reverse().join('');\n  }\n  else {\n  \
    \  return digits.slice(shift, digits.length).reverse().join('');\n  }\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        return\
    \ digits.slice(shift, digits.length).join('');\n    }\n}\n", "    var digits =\
    \ x.toString().split('');\n    if (shift > digits.length)\n        shift = digits.length\
    \ - shift;\n    for (var i = digits.length - shift; i > -1; i--)\n        digits[i]\
    \ = digits[i + 1];\n    return digits.reverse().join('');\n}\n", "    var digits\
    \ = String(x).split(\"\"),\n        circ = digits.length - shift;\n    return\
    \ digits.reverse().slice(circ, circ + shift).join(\"\");\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length; i-- > shift;\
    \ ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "  var digits = String(Math.abs(x)).split('');\n  if(shift > digits.length){\n\
    \    return digits.reverse().join('');\n  }\n  if(shift < -digits.length){\n \
    \   return digits.reverse().join('');\n  }\n  for(var i = digits.length - 1; i\
    \ >= shift; i--){\n    digits[i] = digits[i + 1];\n  }\n  digits[0] = 0;\n  return\
    \ digits.reverse().join('');\n}\n", "  if(shift > x.length){\n    return x.split(\"\
    \").reverse().join(\"\");\n  }\n  if(shift < 0){\n    shift = -shift;\n  }\n \
    \ var result = \"\";\n  while(shift > 0){\n    result = x[x.length - shift] +\
    \ result;\n    shift -= x.length;\n  }\n  while(shift < 0){\n    result = result\
    \ + x[shift];\n    shift += x.length;\n  }\n  return result;\n}\n", "    var digits\
    \ = x.toString().split('');\n    if (shift > digits.length){\n        shift =\
    \ digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "  if(shift > x.length) shift = x.length - shift;\n\
    \  return x.toString().split(\"\").reverse().join(\"\").split(\"\").slice(shift).join(\"\
    \");\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift >\
    \ digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length; i-- > shift; ){\n        digits[i] = digits[i + 1];\n   \
    \ }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(x).split(\"\"),\n        digits_length = digits.length,\n  \
    \      shift = shift || 0,\n        i = digits_length - shift;\n    if (i < 0)\
    \ i = digits_length + i;\n    return digits.reverse().join(\"\").slice(0,i+shift);\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    else\n        return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        return digits.reverse().join('');\n\
    \    }\n    else {\n        return digits.slice(shift, digits.length).join('');\n\
    \    }\n}\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - shift; i > -1; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "  if(shift\
    \ > x.length) shift = x.length;\n  var result = \"\";\n  for(var i = x.length;\
    \ i > shift; --i){\n    result = x.substr(0,i) + result + x.substr(i-1);\n  }\n\
    \  return result;\n}\n", "  var digits = x.toString().split('');\n  if(shift >\
    \ digits.length){\n    shift = digits.length - shift;\n  }\n  for(var i = digits.length\
    \ - shift; i > -1; i--){\n    digits[i] = digits[i-1];\n  }\n  return digits.reverse().join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.reverse().join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length) return digits.reverse().join('');\n    if (shift\
    \ < -digits.length) return digits.reverse().join('');\n    var result = new Array(digits.length\
    \ + shift);\n    digits.reverse().forEach(function(digit, i){\n        result[shift\
    \ + i] = digit;\n    });\n    return result.join('');\n}\n", "    var digits =\
    \ String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i+1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "  if(shift > x.length)\
    \ shift = x.length - shift;\n  var result = \"\";\n  for(var i = x.length; i >\
    \ shift; --i) result += x.charAt(x.length - i - 1);\n  return result;\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length)\n        return digits.reverse().join('');\n    else\n    \
    \    return digits.slice(shift, digits.length).reverse().join('');\n}\n", "  \
    \  var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.reverse().join('');\n}\n", "  if(shift > x.length) shift = x.length -\
    \ shift;\n  var result = \"\";\n  for(var i = x.length; i > shift; --i){\n   \
    \ result = x.substr(0, i) + result + x.substr(i - shift, i);\n  }\n  return result;\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        return digits.reverse().join('');\n    }\n    else {\n        var result\
    \ = \"\";\n        for (var i = 0; i < shift; i++){\n            result += digits.pop();\n\
    \        }\n        return result + digits.join('');\n    }\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length\
    \ - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = x.toString().split('');\n    if (shift\
    \ > digits.length){\n        shift = digits.length - shift;\n    }\n    for (var\
    \ i = digits.length - 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = String(Math.abs(x)).split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length; i-- > shift; ){\n        digits[i] = digits[i+1];\n\
    \    }\n    return digits.join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - shift; i >= 0; i--)\n        digits[i] = digits[i +\
    \ shift];\n    return digits.reverse().join('');\n}\n", "  if(shift > x.length)\
    \ return x.split(\"\").reverse().join(\"\");\n  if(shift < 0) return x.split(\"\
    \").reverse().join(\"\") + x.split(\"\").reverse().join(\"\");\n  \n  var digits\
    \ = x.split(\"\").reverse();\n  if(shift > digits.length) return digits.join(\"\
    \");\n  if(shift < 0) return digits.join(\"\") + digits.join(\"\");\n  \n  var\
    \ result = \"\";\n  for(var i = digits.length - shift; i >= 0; i--){\n    result\
    \ += digits[i];\n  }\n  return result;\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.reverse().join('');\n}\n", "    var\
    \ digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n \
    \       return digits.reverse().join('');\n    }\n    else {\n        return digits.splice(0,\
    \ shift).join('');\n    }\n}\n", "    var digits = x.toString().split('');\n \
    \   if (shift > digits.length)\n        shift = digits.length - shift;\n    for\
    \ (var i = digits.length - 1; i >= shift; i--)\n        digits[i] = digits[i +\
    \ 1];\n    return digits.reverse().join('');\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length)\n        return digits.reverse().join('');\n \
    \   else\n        return digits.slice(shift, digits.length).join('');\n}\n", " \
    \   var digits = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n\
    \        shift = digits.length - shift;\n    }\n    for (var i = digits.length;\
    \ i-- > shift; ){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift;\n    if\
    \ (circ > digits.length){\n        circ = digits.length - 1;\n    }\n    for (var\
    \ i = circ; i >= 0; i--){\n        digits[i] = digits[i + shift];\n    }\n   \
    \ return digits.join(\"\");\n}\n", "    var digits = x.toString().split('');\n\
    \    if (shift > digits.length){\n        shift = digits.length - shift;\n   \
    \ }\n    for (var i = digits.length - 1; i >= shift; i--){\n        digits[i]\
    \ = digits[i + 1];\n    }\n    return digits.join('');\n}\n", "    var digits\
    \ = String(Math.abs(x)).split('');\n    if (shift > digits.length){\n        shift\
    \ = digits.length - shift;\n    }\n    for (var i = digits.length - 1; i >= shift;\
    \ i--){\n        digits[i] = digits[i + 1];\n    }\n    return digits.join('');\n\
    }\n", "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    return digits.slice(circ).reverse().join(\"\");\n}\n",
  "    var digits = x.toString().split('');\n    if (shift > digits.length){\n   \
    \     shift = digits.length - shift;\n    }\n    for (var i = digits.length -\
    \ 1; i >= shift; i--){\n        digits[i] = digits[i + 1];\n    }\n    return\
    \ digits.join('');\n}\n", "    var digits = String(x).split(\"\"),\n        circ\
    \ = shift;\n    while (circ){\n        digits = digits.reverse().join(\"\");\n\
    \        circ--;\n    }\n    return digits.split(\"\").reverse().join(\"\");\n\
    }\n", "  if(shift > x.length) shift = x.length - shift;\n  var result = \"\";\n\
    \  for(var i = x.length; i > shift; --i) result += x.charAt(x.length - i - 1);\n\
    \  for(var i = shift; i > 0; --i) result += x.charAt(0);\n  return result;\n}\n",
  "    var digits = String(x).split(\"\"),\n        circ = shift<0 ? digits.length\
    \ + shift : shift;\n    digits = digits.splice(0, circ);\n    return digits.join(\"\
    \");\n}\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    var result = \"\";\n    while\
    \ (shift > 0){\n        if (shift & 1){\n            result += digits.pop();\n\
    \        }\n        shift >>= 1;\n    }\n    return result + digits.join('');\n\
    }\n", "    var digits = x.toString().split('');\n    if (shift > digits.length)\n\
    \        return digits.reverse().join('');\n    var result = \"\";\n    for (var\
    \ i = 0; i < shift; i++)\n        result += digits.pop();\n    return result +\
    \ digits.join('');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

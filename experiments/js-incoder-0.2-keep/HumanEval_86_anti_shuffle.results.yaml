name: HumanEval_86_anti_shuffle
language: js
results:
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii > 96 && ascii < 123){\n      newString += s.charAt(i);\n    }\n\
    \  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'i'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpjr9e0zzz.js:26:10)\n    at Object.<anonymous> (/tmp/tmpjr9e0zzz.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var re =\
    \ new RegExp(/\\s+/);\n    var words = s.split(re);\n    var new_words = [];\n\
    \    var new_word = '';\n    for(var i=0;i<words.length;i++){\n        new_word\
    \ += words[i];\n        new_words.push(new_word);\n        new_word = '';\n  \
    \  }\n    return new_words.join('');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpytgl1n2y.js:29:10)\n    at Object.<anonymous> (/tmp/tmpytgl1n2y.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, function(s){\n    return s.replace(/[a-z]/gi, function(s){\n      return\
    \ String.fromCharCode(s.charCodeAt(0)+1);\n    });\n  });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpn93_i5gc.js:24:10)\n    at Object.<anonymous> (/tmp/tmpn93_i5gc.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    var newLetter = letter - 65;\n\
    \    newString += String.fromCharCode(newLetter);\n  }\n  return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmph1mmb55y.js:26:10)\n    at Object.<anonymous> (/tmp/tmph1mmb55y.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newStr\
    \ = '';\n  var words = s.split(' ');\n  for(var i=0;i<words.length;i++){\n   \
    \ var letter = words[i].charCodeAt(0);\n    newStr += String.fromCharCode(letter);\n\
    \  }\n  return newStr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp2k5oyx4_.js:25:10)\n    at Object.<anonymous> (/tmp/tmp2k5oyx4_.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var new_word = '';\n    for(var i=0;i<words.length;i++){\n\
    \        var char = words[i];\n        var ascii = char.charCodeAt(0);\n     \
    \   if(ascii>64 && ascii<91){\n            new_word += char;\n        }else if(ascii>96\
    \ && ascii<123){\n            new_word += char;\n        }else{\n            new_word\
    \ += char;\n        }\n    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmplmiwunp4.js:33:10)\n    at Object.<anonymous> (/tmp/tmplmiwunp4.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newStr\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        var letter = words[i].split('')\n        for(var j=0;j<letter.length;j++){\n\
    \            var ascii = letter[j].charCodeAt(0);\n            if(ascii<97){\n\
    \                newStr += letter[j];\n            }\n            else if(ascii<123){\n\
    \                newStr += letter[j].toUpperCase();\n            }\n         \
    \   else{\n                newStr += letter[j].toLowerCase();\n            }\n\
    \        }\n        newStr += ' ';\n    }\n    return newStr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HI '\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpreyl9y4h.js:37:10)\n    at Object.<anonymous> (/tmp/tmpreyl9y4h.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HI ',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    var newWord = \"\";\n    for(var\
    \ i = 0; i < words.length; i++){\n        newWord = words[i];\n        for(var\
    \ j = 0; j < newWord.length; j++){\n            var ascii = newWord.charCodeAt(j);\n\
    \            var newChar = String.fromCharCode(ascii);\n            newString\
    \ += newChar;\n        }\n        newString += \" \";\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi '\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp8u5hpehm.js:31:10)\n    at Object.<anonymous> (/tmp/tmp8u5hpehm.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi ',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    new_word += words[i];\n  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpfv8bqy8t.js:25:10)\n    at Object.<anonymous> (/tmp/tmpfv8bqy8t.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var new_word = words[i];\n        var new_word_length = new_word.length;\n\
    \        var new_word_ascii = new_word.charCodeAt(0);\n        for(var j = 0;\
    \ j < new_word_length; j++){\n            var ascii = new_word_ascii;\n      \
    \      ascii += 1;\n            if(ascii > 26){\n                ascii -= 26;\n\
    \            }\n            new_word += String.fromCharCode(ascii);\n        }\n\
    \        new_s += new_word + \" \";\n    }\n    return new_s.trim();\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi//'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp0vqjedku.js:35:10)\n    at Object.<anonymous> (/tmp/tmp0vqjedku.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi//',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0; i<words.length; i++){\n\
    \    var ascii = words[i].charCodeAt(0);\n    var newChar = String.fromCharCode(ascii);\n\
    \    newString += newChar;\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmplygy_v5e.js:26:10)\n    at Object.<anonymous> (/tmp/tmplygy_v5e.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(letter);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpix7kuobv.js:25:10)\n    at Object.<anonymous> (/tmp/tmpix7kuobv.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var wordArray = s.split(' ');\n    for(var i=0; i<wordArray.length;\
    \ i++){\n        var asciiValue = wordArray[i].charCodeAt(0);\n        var newWord\
    \ = '';\n        for(var j=0; j<wordArray[i].length; j++){\n            if(j===0){\n\
    \                newWord += wordArray[i].charAt(j);\n            }\n         \
    \   else{\n                if(asciiValue >= 65 && asciiValue <= 90){\n       \
    \             newWord += wordArray[i].charAt(j);\n                }\n        \
    \        else if(asciiValue >= 97 && asciiValue <= 122){\n                   \
    \ newWord += wordArray[i].charAt(j).toUpperCase();\n                }\n      \
    \          else{\n                    newWord += wordArray[i].charAt(j);\n   \
    \             }\n            }\n        }\n        newString += newWord;\n   \
    \ }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hELLO'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpdgu1b2uq.js:43:10)\n    at Object.<anonymous> (/tmp/tmpdgu1b2uq.js:51:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hELLO',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var c = s.charAt(i);\n    var n\
    \ = s.charCodeAt(i);\n    new_s += String.fromCharCode((n+26)%26 + c);\n  }\n\
    \  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0000\\u0000'\n\nshould equal\n\n'Hi'\n\
    \    at test (/tmp/tmp7qy094d1.js:25:10)\n    at Object.<anonymous> (/tmp/tmp7qy094d1.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x00\\x00',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii < 65 || ascii > 90){\n      newString += s[i];\n    }else{\n   \
    \   newString += String.fromCharCode(ascii-32);\n    }\n  }\n  return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'(i'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpzs6miszu.js:28:10)\n    at Object.<anonymous> (/tmp/tmpzs6miszu.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '(i',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let words\
    \ = s.split(' ');\n    let new_word = '';\n    for(let i = 0; i < words.length;\
    \ i++){\n        let char = words[i].charCodeAt(0);\n        let index = char\
    \ - 96;\n        new_word += String.fromCharCode(index);\n    }\n    return new_word;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\uFFE8'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpgcsfskuf.js:26:10)\n    at Object.<anonymous> (/tmp/tmpgcsfskuf.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\uFFE8',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.split('\
    \ ').sort().join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpgg1l_z0u.js:20:10)\n    at Object.<anonymous> (/tmp/tmpgg1l_z0u.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var letter = s[i];\n    var ascii\
    \ = letter.charCodeAt(0);\n    if(ascii > 96 && ascii < 123){\n      newString\
    \ += letter;\n    }else{\n      newString += String.fromCharCode(ascii-32);\n\
    \    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'(i'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp3h2rfo2c.js:29:10)\n    at Object.<anonymous> (/tmp/tmp3h2rfo2c.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '(i',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var index = Math.floor(Math.random() * words[i].length);\n  \
    \      newString += words[i].substring(0, index) + words[i].substring(index, words[i].length)\
    \ + words[i].substring(words[i].length);\n    }\n    return newString;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpzl9qkums.js:26:10)\n    at Object.<anonymous> (/tmp/tmpzl9qkums.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var res =\
    \ [];\n  for(var i=0;i<s.length;i++){\n    var c = s.charAt(i);\n    var n = s.charCodeAt(i);\n\
    \    if(c !== ' '){\n      res.push(String.fromCharCode(n));\n    }\n  }\n  return\
    \ res.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp87kpphvh.js:28:10)\n    at Object.<anonymous> (/tmp/tmp87kpphvh.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_s += String.fromCharCode(letter);\n\
    \  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpca70wrb3.js:25:10)\n    at Object.<anonymous> (/tmp/tmpca70wrb3.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var arr=s.split(\"\
    \ \");\n    var newArr = [];\n    for(var i=0;i<arr.length;i++){\n        var\
    \ newWord = \"\";\n        for(var j=0;j<arr[i].length;j++){\n            var\
    \ ascii = arr[i].charCodeAt(j);\n            if(ascii<65 || ascii>90){\n     \
    \           newWord+=arr[i][j];\n            }\n        }\n        newArr.push(newWord);\n\
    \    }\n    return newArr.join(\" \");\n}\n</code>\n<|/ a tags=javascript,string,arrays\
    \ |>\n<| c |>\nThis doesn't seem to work. `anti_shuffle('Hello World!!!') returns\
    \ 'Hello !!!Wdlor'` but should be `'Hello !!!dlroW'`\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works fine. Can you please tell me what is not working?\n<|/ c |>\n\
    <| c |>\nIt returns `'Hello !!!dlroW'` but should be `'Hello !!!dlroW'`\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine. Can you please tell me what is not\
    \ working?\n<|/ c |>\n<| c |>\nIt returns `'Hello !!!dlroW'` but should be `'Hello\
    \ !!!dlroW'`\n<|/ c |>\n<| a dscore=0 |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpg7uams39.js:25\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        newString += String.fromCharCode(letter);\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp1oj_q8zk.js:25:10)\n    at Object.<anonymous> (/tmp/tmp1oj_q8zk.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var new_word = '';\n    for(var i=0;i<words.length;i++){\n\
    \        var char = words[i];\n        var ascii = char.charCodeAt(0);\n     \
    \   if(ascii<128){\n            new_word += char;\n        }else{\n          \
    \  var index = ascii-64;\n            var char = String.fromCharCode(index+65);\n\
    \            new_word += char;\n        }\n    }\n    return new_word;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpuant5g27.js:33:10)\n    at Object.<anonymous> (/tmp/tmpuant5g27.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var wordArray = s.split(' ');\n    for(var i = 0; i < wordArray.length;\
    \ i++){\n        var letter = wordArray[i].split('')\n        for(var j = 0; j\
    \ < letter.length; j++){\n            var ascii = letter[j].charCodeAt(0);\n \
    \           var newLetter = String.fromCharCode(ascii);\n            newString\
    \ += newLetter;\n        }\n        newString += ' ';\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi '\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp109bwqzp.js:30:10)\n    at Object.<anonymous> (/tmp/tmp109bwqzp.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi ',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var wordArr = s.split(' ');\n    for(var i=0;i<wordArr.length;i++){\n\
    \        var ascii = wordArr[i].charCodeAt(0);\n        var newChar = String.fromCharCode(ascii);\n\
    \        newString += newChar;\n    }\n    return newString;\n}\n</code>\n<|/\
    \ a tags=javascript,string,algorithm |>\n<| c |>\nThis doesn't work for me. `anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'`\n<|/ c |>\n<| c |>\nIt works fine for me.\
    \ Did you copy and paste it correctly? It returns 'Hello !!!Wdlor' when I run\
    \ it.\n<|/ c |>\n<| c |>\nYes, I copied it correctly. I'm using Chrome Version\
    \ 53.0.2785.116 m\n<|/ c |>\n<| c |>\nI tested it in Chrome Version 53.0.2785.116\
    \ m and it works fine. Maybe you have a different version of Chrome?\n<|/ c |>\n\
    <| c |>\nI tested it in Chrome Version 53.0.2785.116 m and it works fine. Maybe\
    \ you have a different version of Chrome?\n<|/ c |>\n<| a tags=javascript,string,algorithm\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\"\
    );\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpp75_7kr3.js:20\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g,' ').split(' ').sort().join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpeypsrqwi.js:20:10)\n    at Object.<anonymous> (/tmp/tmpeypsrqwi.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let new_s\
    \ = \"\";\n    let words = s.split(\" \");\n    for(let i = 0; i < words.length;\
    \ i++){\n        let char = words[i].charCodeAt(0);\n        if(char >= 65 &&\
    \ char <= 90){\n            new_s += String.fromCharCode(char + 32);\n       \
    \ }\n        else if(char >= 97 && char <= 122){\n            new_s += String.fromCharCode(char\
    \ - 32);\n        }\n        else{\n            new_s += words[i];\n        }\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'h'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpmhouis_z.js:33:10)\n    at Object.<anonymous> (/tmp/tmpmhouis_z.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'h',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newStr\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        var word = words[i];\n        var ascii = word.charCodeAt(0);\n     \
    \   var newWord = '';\n        for(var j=0;j<word.length;j++){\n            var\
    \ c = word.charAt(j);\n            var ascii = word.charCodeAt(j);\n         \
    \   if(ascii<97){\n                newWord += c;\n            }else if(ascii<123){\n\
    \                newWord += String.fromCharCode((ascii-32)+97);\n            }else{\n\
    \                newWord += String.fromCharCode((ascii-64)-26);\n            }\n\
    \        }\n        newStr += newWord;\n    }\n    return newStr;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H\xAA'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp7a_qxzzf.js:37:10)\n    at Object.<anonymous> (/tmp/tmp7a_qxzzf.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H\xAA',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  var splitString = s.split(' ');\n  for(var i = 0; i < splitString.length;\
    \ i++){\n    var letter = splitString[i];\n    var asciiValue = letter.charCodeAt(0);\n\
    \    if(asciiValue > 64 && asciiValue < 91){\n      newString += letter;\n   \
    \ }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'ehllo'\n    at test\
    \ (/tmp/tmp21hp7480.js:29:10)\n    at Object.<anonymous> (/tmp/tmp21hp7480.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'ehllo',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var result = '';\n    for(var i=0;i<words.length;i++){\n\
    \        result += words[i].split('').sort().join('');\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hello!!!Wdlor'\n\nshould equal\n\n'Hello\
    \ !!!Wdlor'\n    at test (/tmp/tmpagfc4s9i.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpagfc4s9i.js:33:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello!!!Wdlor',\n\
    \  expected: 'Hello !!!Wdlor',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    var ascii = words[i].charCodeAt(0);\n    if(ascii<97){\n      new_word +=\
    \ words[i];\n    }\n    else if(ascii<123){\n      new_word += String.fromCharCode(ascii-26);\n\
    \    }\n    else{\n      new_word += String.fromCharCode(ascii-26+26);\n    }\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'N'\n\nshould equal\n\n'ehllo'\n    at test\
    \ (/tmp/tmpw48icm7x.js:34:10)\n    at Object.<anonymous> (/tmp/tmpw48icm7x.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'N',\n  expected: 'ehllo',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, function(m){\n    return m.split('').reduce(function(p, c){\n      return\
    \ p + String.fromCharCode(c.charCodeAt(0) ^ 1);\n    });\n  });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpm59jxuqa.js:24:10)\n    at Object.<anonymous> (/tmp/tmpm59jxuqa.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newStr\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii < 65 || ascii > 90){\n      newStr += s.charAt(i);\n    }\n  }\n\
    \  return newStr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'i'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpy4dppws1.js:26:10)\n    at Object.<anonymous> (/tmp/tmpy4dppws1.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    var sortedWords = words.sort();\n\
    \    for(var i=0; i<words.length; i++){\n        if(words[i] != '') newString\
    \ += words[i] + ' ';\n    }\n    newString = newString.trim();\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpsmrdbbek.js:27:10)\n    at Object.<anonymous> (/tmp/tmpsmrdbbek.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, ' ').split(' ').sort().join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp4wjoewax.js:20:10)\n    at Object.<anonymous> (/tmp/tmp4wjoewax.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, function(m){\n    return m.split('').sort().join('');\n  });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpqxbnt7id.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqxbnt7id.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var newStringArray = s.split(\" \");\n    var newStringArrayLength\
    \ = newStringArray.length;\n    for(var i = 0; i < newStringArrayLength; i++){\n\
    \        var currentChar = newStringArray[i].charCodeAt(0);\n        var newChar\
    \ = currentChar - 1;\n        var newCharString = String.fromCharCode(newChar);\n\
    \        newString += newCharString;\n    }\n    return newString;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'G'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp5x3y484s.js:28:10)\n    at Object.<anonymous> (/tmp/tmp5x3y484s.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'G',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let words\
    \ = s.split(' ');\n  let new_word = '';\n  for (let i = 0; i < words.length; i++){\n\
    \    let letter = words[i].split('')\n      .sort((a, b) => a.charCodeAt() - b.charCodeAt())\n\
    \      .join('');\n    new_word += letter;\n  }\n  return new_word;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hello!!!Wdlor'\n\nshould equal\n\n'Hello\
    \ !!!Wdlor'\n    at test (/tmp/tmpfvdf5_co.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfvdf5_co.js:36:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello!!!Wdlor',\n\
    \  expected: 'Hello !!!Wdlor',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var c = s.charAt(i);\n    var\
    \ n = s.charCodeAt(i);\n    var new_c = \"\";\n    for(var j=0; j<c.length; j++){\n\
    \      if(n-c.charCodeAt(j) < 0){\n        new_c += c.charAt(j);\n      }else{\n\
    \        new_c += c.charAt(j);\n      }\n    }\n    new_s += new_c;\n  }\n  return\
    \ new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\"\
    );\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpg8idel5l.js:34:10)\n    at Object.<anonymous> (/tmp/tmpg8idel5l.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var wordArray = s.split(\" \");\n    for(var i=0; i<wordArray.length;\
    \ i++){\n        var ascii = wordArray[i].charCodeAt(0);\n        var newWord\
    \ = \"\";\n        for(var j=0; j<wordArray[i].length; j++){\n            if(j==0){\n\
    \                newWord += wordArray[i].charAt(j);\n            }\n         \
    \   else{\n                if(ascii<97){\n                    newWord += wordArray[i].charAt(j);\n\
    \                }\n                else{\n                    newWord += wordArray[i].charAt(j)\
    \ + wordArray[i].charAt(j-1);\n                }\n            }\n        }\n \
    \       newString += newWord;\n    }\n    return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hehlellol'\n\nshould equal\n\n'ehllo'\n\
    \    at test (/tmp/tmpd3zwyty5.js:40:10)\n    at Object.<anonymous> (/tmp/tmpd3zwyty5.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hehlellol',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g,function(m){\n    return m.split('').sort().join('');\n  });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpxq8lfqt3.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxq8lfqt3.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    var newLetter = letter - 96;\n\
    \    newString += String.fromCharCode(newLetter);\n  }\n  return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\uFFE8'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpwbcxyme4.js:26:10)\n    at Object.<anonymous> (/tmp/tmpwbcxyme4.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\uFFE8',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let newString\
    \ = '';\n  for (let i = 0; i < s.length; i++){\n    let ascii = s.charCodeAt(i);\n\
    \    if (ascii >= 65 && ascii <= 90){\n      newString += s.charAt(i);\n    }\n\
    \    else if (ascii >= 97 && ascii <= 122){\n      newString += s.charAt(i);\n\
    \    }\n    else if (ascii >= 48 && ascii <= 57){\n      newString += s.charAt(i);\n\
    \    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp_eczxfv9.js:33:10)\n    at Object.<anonymous> (/tmp/tmp_eczxfv9.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var new_ascii = ascii;\n    if(ascii < 65){\n      new_ascii = ascii + 1;\n\
    \    }else if(ascii < 70){\n      new_ascii = ascii - 26;\n    }else if(ascii\
    \ < 72){\n      new_ascii = ascii - 52;\n    }else if(ascii < 74){\n      new_ascii\
    \ = ascii - 96;\n    }else if(ascii < 76){\n      new_ascii = ascii - 122;\n \
    \   }else if(ascii < 78){\n      new_ascii = ascii - 156;\n    }else if(ascii\
    \ < 80){\n      new_ascii = ascii - 192;\n    }else if(ascii < 82){\n      new_ascii\
    \ = ascii - 224;\n    }else if(ascii < 84){\n      new_ascii = ascii - 256;\n\
    \    }else if(ascii < 86){\n      new_ascii = ascii - 288;\n    }else if(ascii\
    \ < 88){\n      new_ascii = ascii - 312;\n    }else if(ascii < 90){\n      new_ascii\
    \ = ascii - 336;\n    }else if(ascii < 92){\n      new_ascii = ascii - 352;\n\
    \    }else if(ascii < 94){\n      new_ascii = ascii - 376;\n    }else if(ascii\
    \ < 96){\n      new_ascii = ascii - 408;\n    }else if(ascii < 98){\n      new_ascii\
    \ = ascii - 432;\n    }else if(ascii < 100){\n      new_ascii = ascii - 460;\n\
    \    }else if(ascii < 102){\n      new_ascii = ascii - 492;\n    }else if(ascii\
    \ < 104){\n      new_ascii = ascii - 524;\n    }else if(ascii < 106){\n      new_ascii\
    \ = ascii - 556;\n    }else if(ascii < 108){\n      new_ascii = ascii - 588;\n\
    \    }else if(ascii < 110){\n      new_ascii = ascii - 612;\n    }else if(ascii\
    \ < 112){\n      new_ascii = ascii - 646;\n    }else if(ascii < 114){\n      new_ascii\
    \ = ascii - 672;\n    }else if(ascii < 116){\n      new_ascii = ascii - 704;\n\
    \    }else if(ascii < 118){\n      new_ascii = ascii - 728;\n    }else if(ascii\
    \ < 120){\n      new_ascii = ascii - 752;\n    }else if(ascii < 122){\n      new_ascii\
    \ = ascii - 776;\n    }else if(ascii < 124){\n      new_ascii = ascii - 808;\n\
    \    }else if(ascii < 126){\n      new_ascii = asci\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1bp0vf3b.js:89\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var letter = words[i].charCodeAt(0);\n        var newLetter =\
    \ letter - 65;\n        if(newLetter < 0){\n            newLetter = 26 + newLetter;\n\
    \        }\n        newString += String.fromCharCode(newLetter);\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpaixpnq5q.js:29:10)\n    at Object.<anonymous> (/tmp/tmpaixpnq5q.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr =\
    \ [];\n  s = s.split(\" \");\n  for(var i=0;i<s.length;i++){\n    arr.push(s.slice(0,i).join('\
    \ '));\n  }\n  for(var i=0;i<arr.length;i++){\n    arr[i] = arr[i].split('').sort().join('');\n\
    \  }\n  return arr.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpbpti46_3.js:27:10)\n    at Object.<anonymous> (/tmp/tmpbpti46_3.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var newWord = \"\";\n    var newChar = \"\";\n    var newCharAsc\
    \ = 0;\n    var newCharDesc = 0;\n    var newCharAscDesc = 0;\n    var newCharAscAsc\
    \ = 0;\n    var newCharAscDescAsc = 0;\n    var newCharDescDesc = 0;\n    var\
    \ newCharDescAsc = 0;\n    var newCharDescDescAsc = 0;\n    var newCharAscAscAsc\
    \ = 0;\n    var newCharAscAscDesc = 0;\n    var newCharAscDescDesc = 0;\n    var\
    \ newCharDescAscAsc = 0;\n    var newCharDescAscDesc = 0;\n    var newCharDescDescAsc\
    \ = 0;\n    var newCharDescDescDesc = 0;\n    var newCharAscAscAsc = 0;\n    var\
    \ newCharAscAscDesc = 0;\n    var newCharAscDescAsc = 0;\n    var newCharAscDescDesc\
    \ = 0;\n    var newCharDescAscAsc = 0;\n    var newCharDescAscDesc = 0;\n    var\
    \ newCharDescDescAsc = 0;\n    var newCharDescDescDesc = 0;\n    var newCharAscAscAsc\
    \ = 0;\n    var newCharAscAscDesc = 0;\n    var newCharAscDescAsc = 0;\n    var\
    \ newCharAscDescDesc = 0;\n    var newCharDescAscAsc = 0;\n    var newCharDescAscDesc\
    \ = 0;\n    var newCharDescDescAsc = 0;\n    var newCharDescDescDesc = 0;\n  \
    \  var newCharAscAscAsc = 0;\n    var newCharAscAscDesc = 0;\n    var newCharAscDescAsc\
    \ = 0;\n    var newCharAscDescDesc = 0;\n    var newCharDescAscAsc = 0;\n    var\
    \ newCharDescAscDesc = 0;\n    var newCharDescDescAsc = 0;\n    var newCharDescDescDesc\
    \ = 0;\n    var newCharAscAscAsc = 0;\n    var newCharAscAscDesc = 0;\n    var\
    \ newCharAscDescAsc = 0;\n    var newCharAscDescDesc = 0;\n    var newCharDescAscAsc\
    \ = 0;\n    var newCharDescAscDesc = 0;\n    var newCharDescDescAsc = 0;\n   \
    \ var newCharDescDescDesc = 0;\n    var newCharAscAscAsc = 0;\n    var newCharAscAscDesc\
    \ = 0;\n    var newCharAscDescAsc = 0;\n    var newCharAscDescDesc = 0;\n    var\
    \ newCharDescAscAsc = 0;\n    var newCharDescAscDesc = 0;\n    var newCharDesc\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpp3jc6oq6.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        var newLetter = Math.abs(letter\
    \ - 65);\n        newString += String.fromCharCode(newLetter);\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpa8ujiyrs.js:26:10)\n    at Object.<anonymous> (/tmp/tmpa8ujiyrs.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var newStringArray = s.split(' ');\n    for(var i = 0; i < newStringArray.length;\
    \ i++){\n        var letter = String.fromCharCode(65 + i);\n        newString\
    \ += letter;\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'A'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpquxt_873.js:25:10)\n    at Object.<anonymous> (/tmp/tmpquxt_873.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'A',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words=s.split('\
    \ ');\n  var new_words=[];\n  for(var i=0;i<words.length;i++){\n    var new_word=words[i];\n\
    \    for(var j=i+1;j<words.length;j++){\n      if(words[j].charCodeAt(0)>words[i].charCodeAt(0)){\n\
    \        new_word+=words[j];\n        words.splice(j,1);\n      }\n    }\n   \
    \ new_words.push(new_word);\n  }\n  return new_words.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp6ji3qur_.js:32:10)\n    at Object.<anonymous> (/tmp/tmp6ji3qur_.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(letter);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp0yz1ua6f.js:25:10)\n    at Object.<anonymous> (/tmp/tmp0yz1ua6f.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      newString += s.charAt(i);\n    }\n\
    \  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpv3vyw32k.js:26:10)\n    at Object.<anonymous> (/tmp/tmpv3vyw32k.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var newWord = \"\";\n    var newChar = \"\";\n    for(var i = 0;\
    \ i < s.length; i++){\n        newWord = s.substring(0,i);\n        newChar =\
    \ s.substring(i,i+1);\n        newString += newChar + newWord;\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HiH'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmph6cg0tew.js:27:10)\n    at Object.<anonymous> (/tmp/tmph6cg0tew.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HiH',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let arr =\
    \ [];\n  let word = '';\n  for(let i=0; i<s.length; i++){\n    word += s[i];\n\
    \    arr.push(word);\n  }\n  arr.sort();\n  for(let i=0; i<arr.length; i++){\n\
    \    arr[i] = arr[i].split('').sort().join('');\n  }\n  return arr.join('');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HHi'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmplvnd0t33.js:29:10)\n    at Object.<anonymous> (/tmp/tmplvnd0t33.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HHi',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var char = words[i].charCodeAt(0);\n        newString += String.fromCharCode(char);\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpfslzo266.js:25:10)\n    at Object.<anonymous> (/tmp/tmpfslzo266.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    for(var i=0; i<s.length; i++){\n        var ascii = s.charCodeAt(i);\n\
    \        if(ascii >= 65 && ascii <= 90){\n            newString += s.charAt(i);\n\
    \        }\n        else if(ascii >= 97 && ascii <= 122){\n            newString\
    \ += s.charAt(i);\n        }\n        else if(ascii >= 48 && ascii <= 57){\n \
    \           newString += s.charAt(i);\n        }\n        else if(ascii >= 32){\n\
    \            newString += s.charAt(i);\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpxubu5shw.js:36:10)\n    at Object.<anonymous> (/tmp/tmpxubu5shw.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var letter = words[i].charCodeAt(0);\n        if(letter > 64\
    \ && letter < 91){\n            new_s += words[i];\n        }else{\n         \
    \   new_s += letter;\n        }\n    }\n    return new_s;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'104'\n\nshould equal\n\n'ehllo'\n    at\
    \ test (/tmp/tmp_bab0c0g.js:30:10)\n    at Object.<anonymous> (/tmp/tmp_bab0c0g.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '104',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var c = s.charAt(i);\n    var\
    \ n = s.charCodeAt(i);\n    if(c != \" \"){\n      new_s += c;\n    }\n    if(n\
    \ >= 65 && n <= 90){\n      new_s += String.fromCharCode((n - 65) + 96);\n   \
    \ }\n    if(n >= 97 && n <= 122){\n      new_s += String.fromCharCode((n - 97)\
    \ + 64);\n    }\n  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HgiH'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp6oz15gt8.js:33:10)\n    at Object.<anonymous> (/tmp/tmp6oz15gt8.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HgiH',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var ascii = words[i].charCodeAt(0);\n        var newWord = '';\n    \
    \    for(var j=0; j<words[i].length; j++){\n            if(j==0){\n          \
    \      newWord += words[i].charAt(j);\n            }\n            else{\n    \
    \            if(ascii<97){\n                    newWord += words[i].charAt(j);\n\
    \                }\n                else{\n                    newWord += String.fromCharCode(ascii-26);\n\
    \                }\n            }\n        }\n        newString += newWord;\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hNNNN'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp1r295340.js:40:10)\n    at Object.<anonymous> (/tmp/tmp1r295340.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hNNNN',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newString += newChar;\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpfnxlrsg2.js:26:10)\n    at Object.<anonymous> (/tmp/tmpfnxlrsg2.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newStr\
    \ = '';\n    var wordArr = s.split(' ');\n    for(var i=0; i<wordArr.length; i++){\n\
    \        var letter = wordArr[i].charCodeAt(0);\n        newStr += String.fromCharCode(letter);\n\
    \    }\n    return newStr;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp945mewdl.js:25:10)\n    at Object.<anonymous> (/tmp/tmp945mewdl.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var words = s.split(\" \");\n  for (var i = 0; i < words.length;\
    \ i++) {\n    var ascii = words[i].charCodeAt(0);\n    if (ascii >= 65 && ascii\
    \ <= 90) {\n      newString += words[i].toUpperCase();\n    } else {\n      newString\
    \ += words[i];\n    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HI'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp19_s14kw.js:29:10)\n    at Object.<anonymous> (/tmp/tmp19_s14kw.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HI',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].split('')\n    for(var j=0; j<letter.length; j++){\n\
    \      if(letter[j] > 90){\n        letter[j] -= 26;\n      }\n      else{\n \
    \       letter[j] += 26;\n      }\n    }\n    new_word += letter.join('');\n \
    \ }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H26i26'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpk49v8h8f.js:33:10)\n    at Object.<anonymous> (/tmp/tmpk49v8h8f.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H26i26',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let newString\
    \ = '';\n  for(let i = 0; i < s.length; i++){\n    let letter = s.charAt(i);\n\
    \    newString += letter;\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp1kbd0z_o.js:25:10)\n    at Object.<anonymous> (/tmp/tmp1kbd0z_o.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = '';\n    var new_s_length = s.length;\n    var new_s_index = 0;\n    var new_s_index2\
    \ = 0;\n    var new_s_index3 = 0;\n    var new_s_index4 = 0;\n    var new_s_index5\
    \ = 0;\n    var new_s_index6 = 0;\n    var new_s_index7 = 0;\n    var new_s_index8\
    \ = 0;\n    var new_s_index9 = 0;\n    var new_s_index10 = 0;\n    var new_s_index11\
    \ = 0;\n    var new_s_index12 = 0;\n    var new_s_index13 = 0;\n    var new_s_index14\
    \ = 0;\n    var new_s_index15 = 0;\n    var new_s_index16 = 0;\n    var new_s_index17\
    \ = 0;\n    var new_s_index18 = 0;\n    var new_s_index19 = 0;\n    var new_s_index20\
    \ = 0;\n    var new_s_index21 = 0;\n    var new_s_index22 = 0;\n    var new_s_index23\
    \ = 0;\n    var new_s_index24 = 0;\n    var new_s_index25 = 0;\n    var new_s_index26\
    \ = 0;\n    var new_s_index27 = 0;\n    var new_s_index28 = 0;\n    var new_s_index29\
    \ = 0;\n    var new_s_index30 = 0;\n    var new_s_index31 = 0;\n    var new_s_index32\
    \ = 0;\n    var new_s_index33 = 0;\n    var new_s_index34 = 0;\n    var new_s_index35\
    \ = 0;\n    var new_s_index36 = 0;\n    var new_s_index37 = 0;\n    var new_s_index38\
    \ = 0;\n    var new_s_index39 = 0;\n    var new_s_index40 = 0;\n    var new_s_index41\
    \ = 0;\n    var new_s_index42 = 0;\n    var new_s_index43 = 0;\n    var new_s_index44\
    \ = 0;\n    var new_s_index45 = 0;\n    var new_s_index46 = 0;\n    var new_s_index47\
    \ = 0;\n    var new_s_index48 = 0;\n    var new_s_index49 = 0;\n    var new_s_index50\
    \ = 0;\n    var new_s_index51 = 0;\n    var new_s_index52 = 0;\n    var new_s_index53\
    \ = 0;\n    var new_s_index54 = 0;\n    var new_s_index55 = 0;\n    var new_s_index56\
    \ = 0;\n    var new_s_index57 = 0;\n    var new_s_index58 = 0;\n    var new_s_index59\
    \ = 0;\n    var new_s_index60 = 0;\n    var new_s_index61 = 0;\n    var new_s_index62\
    \ = 0;\n    var new_s_index63 = 0;\n    var new_s_index64 = 0;\n    var new_s_index65\
    \ = 0;\n    var new_s_index66 = 0;\n    var new_s_index67 = 0;\n    var new_s_index68\
    \ = 0;\n    var new_s_index69 = 0;\n    var new_s_index70 = 0;\n    var new_s_index71\
    \ = 0;\n    var new_s_index72 = 0;\n    var new_\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn8pieqdp.js:100\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i = 0; i < s.length; i++){\n    var letter = s.charAt(i);\n\
    \    var ascii = letter.charCodeAt(0);\n    var newLetter;\n    if(ascii >= 65\
    \ && ascii <= 90){\n      newLetter = String.fromCharCode(ascii - 32);\n    }\n\
    \    else if(ascii >= 97 && ascii <= 122){\n      newLetter = String.fromCharCode(ascii\
    \ - 96);\n    }\n    else{\n      newLetter = letter;\n    }\n    newString +=\
    \ newLetter;\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'(\\t'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp6n118oa0.js:35:10)\n    at Object.<anonymous> (/tmp/tmp6n118oa0.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '(\\t',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii < 65 || ascii > 90){\n      newString += s.charAt(i);\n    }\n \
    \ }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'i'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpdsr3dgmt.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdsr3dgmt.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var wordArray = s.split(' ');\n    wordArray.forEach(function(word){\n\
    \        var asciiValue = word.charCodeAt(0);\n        var newWord = '';\n   \
    \     for(var i=0;i<word.length;i++){\n            newWord += String.fromCharCode(asciiValue\
    \ - i);\n        }\n        newString += newWord;\n    });\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HG'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmphig8mlpu.js:29:10)\n    at Object.<anonymous> (/tmp/tmphig8mlpu.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HG',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        new_s += words[i].split(\"\").sort().join(\"\");\n        if(i\
    \ != words.length - 1){\n            new_s += \" \";\n        }\n    }\n    return\
    \ new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\"\
    );\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var wordArray = s.split(\" \");\n    for(var i=0; i<wordArray.length;\
    \ i++){\n        var ascii = wordArray[i].charCodeAt(0);\n        var newWord\
    \ = String.fromCharCode(ascii);\n        newString += newWord;\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpfzxc4i04.js:26:10)\n    at Object.<anonymous> (/tmp/tmpfzxc4i04.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        newString += String.fromCharCode(letter);\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpydlxqbz0.js:25:10)\n    at Object.<anonymous> (/tmp/tmpydlxqbz0.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var wordArr\
    \ = s.split(' ');\n  var newArr = wordArr.map(function(word){\n    return word.split('').sort().join('');\n\
    \  });\n  return newArr.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, function(m){\n    return m.split('').sort(function(a, b){\n      return\
    \ a.charCodeAt() - b.charCodeAt();\n    }).join('');\n  });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmper830mt5.js:24:10)\n    at Object.<anonymous> (/tmp/tmper830mt5.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(letter);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpart8j42h.js:25:10)\n    at Object.<anonymous> (/tmp/tmpart8j42h.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var new_word = words[i];\n        for(var j = 0; j < new_word.length;\
    \ j++){\n            var ascii = new_word.charCodeAt(j);\n            if(ascii\
    \ >= 65 && ascii <= 90){\n                new_word += new_word.charAt(j);\n  \
    \              j--;\n            }\n        }\n        new_s += new_word + \"\
    \ \";\n    }\n    return new_s.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = '';\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        var new_letter = letter\
    \ - 1;\n        if(new_letter < 97){\n            new_letter = 97 + new_letter;\n\
    \        }\n        else if(new_letter > 122){\n            new_letter = 122 -\
    \ new_letter;\n        }\n        new_s += String.fromCharCode(new_letter);\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\xA8'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp5zam5fah.js:32:10)\n    at Object.<anonymous> (/tmp/tmp5zam5fah.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\xA8',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var new_word = '';\n    for(var i = 0; i < words.length;\
    \ i++){\n        var letter = words[i].charCodeAt(0);\n        new_word += String.fromCharCode(letter);\n\
    \    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpu9puc2if.js:25:10)\n    at Object.<anonymous> (/tmp/tmpu9puc2if.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var new_word = words[i];\n        var new_char = \"\";\n    \
    \    for(var j = 0; j < new_word.length; j++){\n            var ascii = new_word.charCodeAt(j);\n\
    \            if(ascii >= 65 && ascii <= 90){\n                new_char += new_word.charAt(j);\n\
    \            }\n        }\n        new_s += new_char;\n    }\n    return new_s;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpda7knyv5.js:32:10)\n    at Object.<anonymous> (/tmp/tmpda7knyv5.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let words\
    \ = s.split(' ');\n    let new_word = '';\n    for(let i = 0; i < words.length;\
    \ i++){\n        let char = words[i].charCodeAt(0);\n        if(char > 64 && char\
    \ < 91){\n            new_word += String.fromCharCode(char - 65);\n        }else\
    \ if(char > 96 && char < 123){\n            new_word += String.fromCharCode(char\
    \ - 97);\n        }else{\n            new_word += words[i];\n        }\n    }\n\
    \    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp1rwzgplf.js:31:10)\n    at Object.<anonymous> (/tmp/tmp1rwzgplf.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let new_s\
    \ = \"\";\n  for(let i = 0; i < s.length; i++){\n    let ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      new_s += String.fromCharCode(ascii\
    \ - 32);\n    }else if(ascii >= 97 && ascii <= 122){\n      new_s += String.fromCharCode(ascii\
    \ - 96);\n    }else{\n      new_s += s[i];\n    }\n  }\n  return new_s;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'(\\t'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpdi6b8c5p.js:30:10)\n    at Object.<anonymous> (/tmp/tmpdi6b8c5p.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '(\\t',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr =\
    \ [];\n  for(var i=0; i<s.length; i++){\n    arr.push(s.charAt(i));\n  }\n  for(var\
    \ i=0; i<arr.length; i++){\n    var j = Math.floor(Math.random()*arr.length);\n\
    \    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  return\
    \ arr.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'iH'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpzy35vbfz.js:29:10)\n    at Object.<anonymous> (/tmp/tmpzy35vbfz.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'iH',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(letter);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpknwarbhy.js:25:10)\n    at Object.<anonymous> (/tmp/tmpknwarbhy.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var letter = words[i].split('')\n        for(var j=0; j<letter.length;\
    \ j++){\n            if(letter[j] > 90){\n                letter[j] = letter[j]\
    \ - 26\n            }\n            else{\n                letter[j] = letter[j]\
    \ + 26\n            }\n        }\n        new_s += letter.join('')\n    }\n  \
    \  return new_s\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H26i26'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp2ove3r_s.js:33:10)\n    at Object.<anonymous> (/tmp/tmp2ove3r_s.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H26i26',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var newWord = \"\";\n  var newSpace = \"\";\n  var newAsciiValue\
    \ = \"\";\n  for(var i = 0; i < s.length; i++){\n    newString = newString + s[i];\n\
    \    newWord = newString.split(\" \");\n    newSpace = newWord.join(\"\");\n \
    \   newAsciiValue = newSpace.charCodeAt(0);\n    newString = newString.replace(newSpace,\
    \ newAsciiValue);\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'55'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpw7qf9qlz.js:30:10)\n    at Object.<anonymous> (/tmp/tmpw7qf9qlz.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '55',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var c = s.charCodeAt(i);\n  \
    \  var new_c = \"\";\n    for(var j=0; j<s.length; j++){\n      if(c == s.charCodeAt(j)){\n\
    \        new_c += s[j];\n      }\n    }\n    new_s += new_c;\n  }\n  return new_s;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hellllo'\n\nshould equal\n\n'ehllo'\n \
    \   at test (/tmp/tmp6_pnmr8e.js:31:10)\n    at Object.<anonymous> (/tmp/tmp6_pnmr8e.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hellllo',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var char = s.charAt(i);\n    var\
    \ ascii = char.charCodeAt(0);\n    if(ascii > 64 && ascii < 91){\n      newString\
    \ += char;\n    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp4dfqhmsg.js:27:10)\n    at Object.<anonymous> (/tmp/tmp4dfqhmsg.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var new_s_words = s.split(\" \");\n    for(var i = 0; i < new_s_words.length;\
    \ i++){\n        var new_s_word = new_s_words[i];\n        var new_s_letters =\
    \ new_s_word.split(\"\");\n        var new_s_letters_sorted = new_s_letters.sort();\n\
    \        new_s_letters_sorted.forEach(function(letter){\n            new_s +=\
    \ letter;\n        });\n        new_s += \" \";\n    }\n    return new_s;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi '\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp7k76hlhd.js:30:10)\n    at Object.<anonymous> (/tmp/tmp7k76hlhd.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi ',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var letter = words[i].charCodeAt(0);\n        new_s += String.fromCharCode(letter);\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpccf4k0jt.js:25:10)\n    at Object.<anonymous> (/tmp/tmpccf4k0jt.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0;i<words.length;i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        var newLetter = letter\
    \ - 96;\n        newString += String.fromCharCode(newLetter);\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\uFFE8'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpbhq4hrqa.js:26:10)\n    at Object.<anonymous> (/tmp/tmpbhq4hrqa.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\uFFE8',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let arr =\
    \ s.split(' ');\n  let newArr = [];\n  let word = '';\n  let i = 0;\n  while(i\
    \ < arr.length){\n    word = arr[i];\n    for(let j = 0; j < word.length; j++){\n\
    \      if(word[j] > 90){\n        word = word.slice(0, j) + word.slice(j + 1);\n\
    \      }\n    }\n    newArr.push(word);\n    i++;\n  }\n  return newArr.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n \
    \ assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpidnu71r1.js:34:10)\n    at Object.<anonymous> (/tmp/tmpidnu71r1.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    new_word += words[i];\n    if(words[i].length>1){\n      new_word += words[i].split('').sort().join('');\n\
    \    }\n  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HiHi'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpljnizdb2.js:27:10)\n    at Object.<anonymous> (/tmp/tmpljnizdb2.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HiHi',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0; i<words.length; i++){\n\
    \        var ascii = words[i].charCodeAt(0);\n        var newWord = \"\";\n  \
    \      for(var j=0; j<words[i].length; j++){\n            if(j===0){\n       \
    \         newWord += words[i].charAt(j);\n            }\n            else{\n \
    \               if(ascii<97){\n                    newWord += words[i].charAt(j);\n\
    \                }\n                else if(ascii<123){\n                    newWord\
    \ += words[i].charAt(j).toUpperCase();\n                }\n                else{\n\
    \                    newWord += words[i].charAt(j).toLowerCase();\n          \
    \      }\n            }\n        }\n        newString += newWord;\n    }\n   \
    \ return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hELLO'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpijrkiw32.js:43:10)\n    at Object.<anonymous> (/tmp/tmpijrkiw32.js:51:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hELLO',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    new_word += words[i].split('').sort().join('');\n  }\n  return new_word;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hello!!!Wdlor'\n\nshould equal\n\n'Hello\
    \ !!!Wdlor'\n    at test (/tmp/tmpsk6zsnr8.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsk6zsnr8.js:33:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello!!!Wdlor',\n\
    \  expected: 'Hello !!!Wdlor',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words=s.split('\
    \ ');\n  var result=[];\n  for(var i=0;i<words.length;i++){\n    var index=Math.floor(Math.random()*words[i].length);\n\
    \    result.push(words[i].substr(0,index)+words[i].substr(index+1));\n  }\n  return\
    \ result.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpoimqe5bc.js:25:10)\n    at Object.<anonymous> (/tmp/tmpoimqe5bc.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var arr\
    \ = [];\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var word = words[i];\n        arr.push(word);\n    }\n    for(var i=0;\
    \ i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n          \
    \  if(arr[i].charCodeAt() > arr[j].charCodeAt()){\n                var temp =\
    \ arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \            }\n        }\n    }\n    return arr.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp2zmnked0.js:35:10)\n    at Object.<anonymous> (/tmp/tmp2zmnked0.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    var sortedWords = words.sort();\n\
    \    for(var i = 0; i < words.length; i++){\n        if(words[i] != \"\"){\n \
    \           newString += words[i];\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpn4gatl7c.js:28:10)\n    at Object.<anonymous> (/tmp/tmpn4gatl7c.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let new_s\
    \ = '';\n    let words = s.split(' ');\n    for(let i = 0; i < words.length; i++){\n\
    \        let char = words[i].charCodeAt(0);\n        if(char > 64 && char < 91){\n\
    \            new_s += words[i];\n        }\n        else if(char > 96 && char\
    \ < 123){\n            new_s += words[i].toUpperCase();\n        }\n        else\
    \ if(char > 47 && char < 58){\n            new_s += words[i].toLowerCase();\n\
    \        }\n        else{\n            new_s += words[i];\n        }\n    }\n\
    \    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HELLO'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpoyuyfvmz.js:37:10)\n    at Object.<anonymous> (/tmp/tmpoyuyfvmz.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HELLO',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0;i<words.length;i++){\n\
    \    newString += words[i].split('').sort().join('');\n  }\n  return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hello!!!Wdlor'\n\nshould equal\n\n'Hello\
    \ !!!Wdlor'\n    at test (/tmp/tmppc9zzmeq.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppc9zzmeq.js:33:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello!!!Wdlor',\n\
    \  expected: 'Hello !!!Wdlor',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    for(var i=0; i<s.length; i++){\n        var char = s.charAt(i);\n\
    \        var ascii = char.charCodeAt(0);\n        var newChar = String.fromCharCode(ascii);\n\
    \        newString += newChar;\n    }\n    return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp3ppi0cl3.js:27:10)\n    at Object.<anonymous> (/tmp/tmp3ppi0cl3.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  for(var i=0;i<s.length;i++){\n    if(s.charAt(i)!=' '){\n      newString\
    \ += s.charAt(i);\n    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp_bizdgpu.js:26:10)\n    at Object.<anonymous> (/tmp/tmp_bizdgpu.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var char = words[i].charCodeAt(0);\n        if(char > 64 && char\
    \ < 91){\n            new_s += words[i];\n        }\n        else if(char > 96\
    \ && char < 123){\n            new_s += words[i].toUpperCase();\n        }\n \
    \       else if(char > 47 && char < 58){\n            new_s += words[i].toLowerCase();\n\
    \        }\n        else if(char == 32){\n            new_s += \" \";\n      \
    \  }\n        else if(char == 46){\n            new_s += \"!\";\n        }\n \
    \       else if(char == 45){\n            new_s += \"?\";\n        }\n       \
    \ else if(char == 13){\n            new_s += \"\\n\";\n        }\n        else\
    \ if(char == \" \"){\n            new_s += \"-\";\n        }\n        else if(char\
    \ == \"'\"){\n            new_s += \"`\";\n        }\n        else if(char ==\
    \ \"-\"){\n            new_s += \"-\";\n        }\n        else if(char == \"\
    `\"){\n            new_s += \"`\";\n        }\n        else if(char == \"!\"){\n\
    \            new_s += \"!\";\n        }\n        else if(char == \"?\"){\n   \
    \         new_s += \"?\";\n        }\n        else if(char == \"\\n\"){\n    \
    \        new_s += \"\\n\";\n        }\n        else if(char == \"'\"){\n     \
    \       new_s += \"`\";\n        }\n        else if(char == \"-\"){\n        \
    \    new_s += \"-\";\n        }\n        else if(char == \"`\"){\n           \
    \ new_s += \"`\";\n        }\n        else if(char == \"!\"){\n            new_s\
    \ += \"!\";\n        }\n        else if(char == \"?\"){\n            new_s +=\
    \ \"?\";\n        }\n        else if(char == \"\\n\"){\n            new_s += \"\
    \\n\";\n        }\n        else if(char == \"'\"){\n            new_s += \"`\"\
    ;\n        }\n        else if(char == \"-\"){\n            new_s += \"-\";\n \
    \       }\n        else if(char == \"`\"){\n            new_s += \"`\";\n    \
    \    }\n        else if(char == \"!\"){\n            new_s += \"!\";\n       \
    \ }\n        else if(char == \"?\"){\n            new_s += \"?\";\n        }\n\
    \        else if(char == \"\\n\"){\n            new_s += \"\\n\";\n        }\n\
    \        else if(char == \"'\"){\n            new_s += \"`\";\n        }\n   \
    \     else if(char == \"-\"){\n            new_s += \"-\";\n        }\n      \
    \  else if(char == \"`\"){\n            new_s += \"`\";\n        }\n        else\
    \ if(char == \"!\"){\n            new_s += \"!\";\n        }\n        else if(char\
    \ == \"?\"){\n            new_s += \"?\";\n        }\n        else if(char ==\
    \ \"\\n\"){\n            new_s += \"\\n\";\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0giwda40.js:124\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newStr\
    \ = '';\n  var wordArr = s.split(' ');\n  for(var i=0; i<wordArr.length; i++){\n\
    \    var asciiVal = wordArr[i].charCodeAt(0);\n    var newWord = '';\n    for(var\
    \ j=0; j<wordArr[i].length; j++){\n      if(j==0){\n        newWord += wordArr[i].charAt(j);\n\
    \      }\n      else{\n        newWord += wordArr[i].charAt(j);\n        if(asciiVal\
    \ > 65 && asciiVal < 91){\n          newWord += wordArr[i].charAt(j+1);\n    \
    \      asciiVal -= 96;\n        }\n        else if(asciiVal > 96 && asciiVal <\
    \ 123){\n          newWord += wordArr[i].charAt(j+1);\n          asciiVal -= 122;\n\
    \        }\n        else if(asciiVal > 122 && asciiVal < 135){\n          newWord\
    \ += wordArr[i].charAt(j+1);\n          asciiVal -= 91;\n        }\n        else\
    \ if(asciiVal > 91 && asciiVal < 97){\n          newWord += wordArr[i].charAt(j+1);\n\
    \          asciiVal -= 121;\n        }\n        else if(asciiVal > 121 && asciiVal\
    \ < 143){\n          newWord += wordArr[i].charAt(j+1);\n          asciiVal -=\
    \ 93;\n        }\n        else if(asciiVal > 93 && asciiVal < 125){\n        \
    \  newWord += wordArr[i].charAt(j+1);\n          asciiVal -= 117;\n        }\n\
    \        else if(asciiVal > 117 && asciiVal < 141){\n          newWord += wordArr[i].charAt(j+1);\n\
    \          asciiVal -= 103;\n        }\n        else if(asciiVal > 103 && asciiVal\
    \ < 97){\n          newWord += wordArr[i].charAt(j+1);\n          asciiVal -=\
    \ 105;\n        }\n        else if(asciiVal > 105 && asciiVal < 113){\n      \
    \    newWord += wordArr[i].charAt(j+1);\n          asciiVal -= 101;\n        }\n\
    \        else if(asciiVal > 101 && asciiVal < 103){\n          newWord += wordArr[i].charAt(j+1);\n\
    \          asciiVal -= 103;\n        }\n        else if(asciiVal > 103 && asciiVal\
    \ < 115){\n          newWord += wordArr[i].charAt(j+1);\n          asciiVal -=\
    \ 105;\n        }\n        else if(asciiVal > 105 && asciiVal < 123){\n      \
    \    newWord += wordArr[i].charAt(j+1);\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_4m89d5u.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var splitString = s.split(' ');\n    for(var i = 0; i < splitString.length;\
    \ i++){\n        var letter = splitString[i];\n        var ascii = letter.charCodeAt(0);\n\
    \        var newLetter = String.fromCharCode(ascii + 1);\n        newString +=\
    \ newLetter;\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'I'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpi8r273jp.js:27:10)\n    at Object.<anonymous> (/tmp/tmpi8r273jp.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'I',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var result = '';\n  for (var i = 0; i < words.length; i++){\n\
    \    result += String.fromCharCode(words.charCodeAt(i) + 1);\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqb503rjc.js:14\n    result += String.fromCharCode(words.charCodeAt(i)\
    \ + 1);\n                                        ^\n\nTypeError: words.charCodeAt\
    \ is not a function\n    at anti_shuffle (/tmp/tmpqb503rjc.js:14:41)\n    at test\
    \ (/tmp/tmpqb503rjc.js:24:20)\n    at Object.<anonymous> (/tmp/tmpqb503rjc.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  s = s.split(\" \");\n  for(var i=0;i<s.length;i++){\n    var c =\
    \ s.charCodeAt(i);\n    var n = s.charCodeAt(i+1);\n    var o = s.charCodeAt(i+2);\n\
    \    var d = s.charCodeAt(i+3);\n    var a = s.charCodeAt(i+4);\n    var f = s.charCodeAt(i+5);\n\
    \    var l = s.charCodeAt(i+6);\n    var r = s.charCodeAt(i+7);\n    var p = s.charCodeAt(i+8);\n\
    \    var t = s.charCodeAt(i+9);\n    var h = s.charCodeAt(i+10);\n    var u =\
    \ s.charCodeAt(i+11);\n    var v = s.charCodeAt(i+12);\n    var m = s.charCodeAt(i+13);\n\
    \    var g = s.charCodeAt(i+14);\n    var y = s.charCodeAt(i+15);\n    var b =\
    \ s.charCodeAt(i+16);\n    var j = s.charCodeAt(i+17);\n    var w = s.charCodeAt(i+18);\n\
    \    var x = s.charCodeAt(i+19);\n    var q = s.charCodeAt(i+20);\n    var v =\
    \ s.charCodeAt(i+21);\n    var m = s.charCodeAt(i+22);\n    var g = s.charCodeAt(i+23);\n\
    \    var y = s.charCodeAt(i+24);\n    var b = s.charCodeAt(i+25);\n    var j =\
    \ s.charCodeAt(i+26);\n    var w = s.charCodeAt(i+27);\n    var x = s.charCodeAt(i+28);\n\
    \    var q = s.charCodeAt(i+29);\n    var v = s.charCodeAt(i+30);\n    var m =\
    \ s.charCodeAt(i+31);\n    var g = s.charCodeAt(i+32);\n    var y = s.charCodeAt(i+33);\n\
    \    var b = s.charCodeAt(i+34);\n    var j = s.charCodeAt(i+35);\n    var w =\
    \ s.charCodeAt(i+36);\n    var x = s.charCodeAt(i+37);\n    var q = s.charCodeAt(i+38);\n\
    \    var v = s.charCodeAt(i+39);\n    var m = s.charCodeAt(i+40);\n    var g =\
    \ s.charCodeAt(i+41);\n    var y = s.charCodeAt(i+42);\n    var b = s.charCodeAt(i+43);\n\
    \    var j = s.charCodeAt(i+44);\n    var w = s.charCodeAt(i+45);\n    var x =\
    \ s.charCodeAt(i+46);\n    var q = s.charCodeAt(i+47);\n    var v = s.charCodeAt(i+48);\n\
    \    var m = s.charCodeAt(i+49);\n    var g = s.charCodeAt(i+50);\n    var y =\
    \ s.charCodeAt(i+51);\n    var b = s.charCodeAt(i+52);\n    var j = s.charCodeAt(i+53);\n\
    \    var w = s.charCodeAt(i+54);\n    var x = s.charCodeAt(i+55);\n    var q =\
    \ s.charCodeAt(i+56);\n    var v = s.charCodeAt(i+57);\n    var m = s.charCodeAt(i+58);\n\
    \    var g = s.charCodeAt(i+59);\n    var y = s.charCodeAt(i+60);\n    var b =\
    \ s.charCodeAt(i+61);\n    var j = s.charCodeAt(i+62);\n    var w = s.charCodeAt(i+63);\n\
    \    var \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n \
    \ assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmpsls5qq.js:79\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g,function(m){\n    return m.split('').reduce(function(p,c){\n      return\
    \ p+String.fromCharCode(c.charCodeAt(0)-32);\n    },'');\n  });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpk8trhr2p.js:24:10)\n    at Object.<anonymous> (/tmp/tmpk8trhr2p.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newString += newChar;\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp68vf9wr0.js:26:10)\n    at Object.<anonymous> (/tmp/tmp68vf9wr0.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var wordArray = s.split(\" \");\n    for(var i = 0; i < wordArray.length;\
    \ i++){\n        var randomNum = Math.floor(Math.random() * wordArray.length);\n\
    \        newString += wordArray[randomNum];\n        wordArray.splice(randomNum,\
    \ 1);\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpddzheo4f.js:27:10)\n    at Object.<anonymous> (/tmp/tmpddzheo4f.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var letter = words[i].charCodeAt(0);\n        newString += String.fromCharCode(letter);\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmplcxi1m94.js:25:10)\n    at Object.<anonymous> (/tmp/tmplcxi1m94.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let new_s\
    \ = '';\n    let words = s.split(' ');\n    for(let i = 0; i < words.length; i++){\n\
    \        let char = words[i].charCodeAt(0);\n        if(char >= 65 && char <=\
    \ 90){\n            new_s += String.fromCharCode(char + 32);\n        }\n    \
    \    else if(char >= 97 && char <= 122){\n            new_s += String.fromCharCode(char\
    \ - 32);\n        }\n        else{\n            new_s += words[i];\n        }\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'h'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp9gzea425.js:33:10)\n    at Object.<anonymous> (/tmp/tmp9gzea425.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'h',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0; i<words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        new_s += String.fromCharCode(letter);\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpkc13w2cn.js:25:10)\n    at Object.<anonymous> (/tmp/tmpkc13w2cn.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var c = s.charCodeAt(i);\n  \
    \  var new_c = \"\";\n    for(var j=0; j<s.length; j++){\n      if(j != i){\n\
    \        var c_j = s.charCodeAt(j);\n        if(c > c_j){\n          new_c = new_c\
    \ + String.fromCharCode(c_j);\n        }else{\n          new_c = new_c + String.fromCharCode(c);\n\
    \        }\n      }\n    }\n    new_s = new_s + new_c;\n  }\n  return new_s;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HH'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp58a74hs8.js:35:10)\n    at Object.<anonymous> (/tmp/tmp58a74hs8.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HH',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let newString\
    \ = '';\n  for (let i = 0; i < s.length; i++){\n    let ascii = s.charCodeAt(i);\n\
    \    if (ascii >= 65 && ascii <= 90){\n      newString += s.charAt(i);\n    }\n\
    \    else if (ascii >= 97 && ascii <= 122){\n      newString += s.charAt(i);\n\
    \    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpq_hztxl3.js:30:10)\n    at Object.<anonymous> (/tmp/tmpq_hztxl3.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words=s.split(\"\
    \ \");\n  var newWords=[];\n  for(var i=0;i<words.length;i++){\n    var ascii=words[i].charCodeAt(0);\n\
    \    var newWord=String.fromCharCode(ascii-32);\n    newWords.push(newWord);\n\
    \  }\n  return newWords.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'('\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmplyapy13t.js:26:10)\n    at Object.<anonymous> (/tmp/tmplyapy13t.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '(',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let words\
    \ = s.split(' ');\n  let new_word = '';\n  for(let i = 0; i < words.length; i++){\n\
    \    let letter = words[i].split('')\n    letter.sort((a,b) => a - b)\n    letter\
    \ = letter.join('')\n    new_word += letter\n  }\n  return new_word\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpb4jt3_xn.js:28:10)\n    at Object.<anonymous> (/tmp/tmpb4jt3_xn.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let words\
    \ = s.split(' ');\n    let new_word = '';\n    for(let i = 0; i < words.length;\
    \ i++){\n        let char = words[i].charCodeAt(0);\n        if(char >= 65 &&\
    \ char <= 90){\n            char += 32;\n        }\n        new_word += String.fromCharCode(char);\n\
    \    }\n    return new_word;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'h'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpstpcyzgz.js:28:10)\n    at Object.<anonymous> (/tmp/tmpstpcyzgz.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'h',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    var len = words.length;\n    for(var\
    \ i = 0; i < len; i++){\n        var new_word = words[i];\n        var ascii =\
    \ new_word.charCodeAt(0);\n        var letter = String.fromCharCode(ascii);\n\
    \        new_s += letter;\n    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmphaxoffdc.js:28:10)\n    at Object.<anonymous> (/tmp/tmphaxoffdc.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newString += newChar;\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmppdqhe3xn.js:26:10)\n    at Object.<anonymous> (/tmp/tmppdqhe3xn.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let new_s\
    \ = \"\";\n    let words = s.split(\" \");\n    for(let i = 0; i < words.length;\
    \ i++){\n        let letter = words[i].charCodeAt(0) - 97;\n        new_s += String.fromCharCode(letter);\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\uFFE7'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpeq8vrubt.js:25:10)\n    at Object.<anonymous> (/tmp/tmpeq8vrubt.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\uFFE7',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  var new_word_len = 0;\n  for(var i=0;i<words.length;i++){\n\
    \    var word = words[i];\n    new_word_len += word.length;\n    new_word += word;\n\
    \    if(new_word_len > new_word.length){\n      new_word += word;\n      new_word_len\
    \ -= word.length;\n    }\n  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpcb882hl_.js:32:10)\n    at Object.<anonymous> (/tmp/tmpcb882hl_.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let new_s\
    \ = \"\";\n  for (let i = 0; i < s.length; i++){\n    let c = s.charAt(i);\n \
    \   if (c === \" \"){\n      new_s += s.substring(i + 1, s.length);\n      i =\
    \ s.length;\n    }\n    new_s += c;\n  }\n  return new_s;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpzk823_t8.js:29:10)\n    at Object.<anonymous> (/tmp/tmpzk823_t8.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newString += newChar;\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpevuabxjw.js:26:10)\n    at Object.<anonymous> (/tmp/tmpevuabxjw.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  var newStringArray = s.split(\" \");\n  for(var i=0; i<newStringArray.length;\
    \ i++){\n    var ascii = newStringArray[i].charCodeAt(0);\n    var newChar = String.fromCharCode(ascii);\n\
    \    newString += newChar;\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpph2s1mh0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpph2s1mh0.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    var char = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(char);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp_n46ewbo.js:25:10)\n    at Object.<anonymous> (/tmp/tmp_n46ewbo.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/[a-z]+/g,\
    \ function(c){\n    var r = Math.random()*26+97,\n      l = c.length;\n    while(l--){\n\
    \      r = r*26+c.charCodeAt(l);\n    }\n    return String.fromCharCode(r);\n\
    \  }).replace(/\\s+/g, ' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H\u0BF9'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp096i58u0.js:26:10)\n    at Object.<anonymous> (/tmp/tmp096i58u0.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H\u0BF9',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var char = s.charAt(i);\n    var\
    \ ascii = char.charCodeAt(0);\n    var new_char = String.fromCharCode(ascii-32);\n\
    \    new_s += new_char;\n  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'(I'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp8ez_a6i1.js:26:10)\n    at Object.<anonymous> (/tmp/tmp8ez_a6i1.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '(I',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr=s.split(\"\
    \ \");\n  var newArr = [];\n  for(var i=0;i<arr.length;i++){\n    var charArr\
    \ = arr[i].split(\"\");\n    for(var j=0;j<charArr.length;j++){\n      newArr.push(charArr.sort().join(\"\
    \"));\n    }\n  }\n  return newArr.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi Hi'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp23cg48ed.js:27:10)\n    at Object.<anonymous> (/tmp/tmp23cg48ed.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi Hi',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  for(var i=0;i<s.length;i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      newString += s.charAt(i);\n    }\n\
    \  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpg00wy6hw.js:26:10)\n    at Object.<anonymous> (/tmp/tmpg00wy6hw.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0; i<words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        newString += String.fromCharCode(letter);\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpcm8ew8y6.js:25:10)\n    at Object.<anonymous> (/tmp/tmpcm8ew8y6.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newStr\
    \ = '';\n  var wordArr = s.split(' ');\n  for(var i=0; i<wordArr.length; i++){\n\
    \    var char = wordArr[i].charCodeAt(0);\n    var newChar = char - 65;\n    newStr\
    \ += String.fromCharCode(newChar);\n  }\n  return newStr;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpunhxjs5h.js:26:10)\n    at Object.<anonymous> (/tmp/tmpunhxjs5h.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var new_word = '';\n    for(var i=0;i<words.length;i++){\n\
    \        new_word += words[i].split('').sort().join('');\n    }\n    return new_word;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,string |>\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcf9jjgcs.js:18\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var new_word = words[i];\n        for(var j = 0; j < new_word.length;\
    \ j++){\n            var ascii = new_word.charCodeAt(j);\n            if(ascii\
    \ >= 65 && ascii <= 90){\n                new_word += new_word.charAt(j);\n  \
    \              j = new_word.length - 1;\n            }\n        }\n        new_s\
    \ += new_word + \" \";\n    }\n    return new_s.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HiH'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpl6x6tpbg.js:32:10)\n    at Object.<anonymous> (/tmp/tmpl6x6tpbg.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HiH',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    var len = words.length;\n    var i;\n\
    \    var j;\n    var k;\n    var temp;\n    for(i = 0; i < len; i++){\n      \
    \  for(j = 0; j < len; j++){\n            if(j != i){\n                temp =\
    \ words[j];\n                words[j] = words[i];\n                words[i] =\
    \ temp;\n            }\n        }\n    }\n    for(i = 0; i < len; i++){\n    \
    \    for(j = 0; j < len; j++){\n            if(j != i){\n                k = words[j].charCodeAt(0);\n\
    \                temp = words[j];\n                words[j] = words[i];\n    \
    \            words[i] = temp;\n                k = k - 96;\n                temp\
    \ = words[j];\n                words[j] = words[i];\n                words[i]\
    \ = temp;\n                k = k - 96;\n                temp = words[j];\n   \
    \             words[j] = words[i];\n                words[i] = temp;\n       \
    \         k = k - 96;\n                temp = words[j];\n                words[j]\
    \ = words[i];\n                words[i] = temp;\n                k = k - 96;\n\
    \                temp = words[j];\n                words[j] = words[i];\n    \
    \            words[i] = temp;\n                k = k - 96;\n                temp\
    \ = words[j];\n                words[j] = words[i];\n                words[i]\
    \ = temp;\n                k = k - 96;\n                temp = words[j];\n   \
    \             words[j] = words[i];\n                words[i] = temp;\n       \
    \         k = k - 96;\n                temp = words[j];\n                words[j]\
    \ = words[i];\n                words[i] = temp;\n                k = k - 96;\n\
    \                temp = words[j];\n                words[j] = words[i];\n    \
    \            words[i] = temp;\n                k = k - 96;\n                temp\
    \ = words[j];\n                words[j] = words[i];\n                words[i]\
    \ = temp;\n                k = k - 96;\n                temp = words[j];\n   \
    \             words[j] = words[i];\n                words[i] = temp;\n       \
    \         k = k - 96;\n                temp = words[j];\n                words[j]\
    \ = words[i];\n                words[i] = temp;\n                k = k - 96;\n\
    \                temp = words[j];\n                words[j] = words[i];\n    \
    \            words[i] = temp;\n                k = k - 96;\n                temp\
    \ = words[j];\n                words[j] = words[i];\n                words[i]\
    \ = temp;\n                k = k - 96;\n                temp = words[j];\n   \
    \             words[j] = words[i];\n                words[i] = temp;\n       \
    \         k = k - 96;\n                temp = words[j];\n                words[j]\
    \ = words[i];\n                words[i] = \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp31iug5wj.js:94\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        if(letter > 96 && letter\
    \ < 123){\n            newString += words[i];\n        }\n        else{\n    \
    \        newString += String.fromCharCode(letter + 32);\n        }\n    }\n  \
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'h'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpycohfbw8.js:30:10)\n    at Object.<anonymous> (/tmp/tmpycohfbw8.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'h',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newStr\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newStr += newChar;\n  }\n\
    \  return newStr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp_69smape.js:26:10)\n    at Object.<anonymous> (/tmp/tmp_69smape.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  var wordArray = s.split(' ');\n  for(var i=0; i<wordArray.length; i++){\n\
    \    var asciiValue = wordArray[i].charCodeAt(0);\n    newString += String.fromCharCode(asciiValue);\n\
    \  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpuuchw05s.js:25:10)\n    at Object.<anonymous> (/tmp/tmpuuchw05s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var ascii = words[i].charCodeAt(0);\n        var newWord = \"\
    \";\n        for(var j = 0; j < words[i].length; j++){\n            if(ascii >=\
    \ 65 && ascii <= 90){\n                newWord += words[i].charAt(j);\n      \
    \      }\n            else if(ascii >= 97 && ascii <= 122){\n                newWord\
    \ += words[i].charAt(j);\n            }\n            else{\n                newWord\
    \ += \" \";\n            }\n        }\n        newString += newWord;\n    }\n\
    \    return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpi89u3qdk.js:38:10)\n    at Object.<anonymous> (/tmp/tmpi89u3qdk.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    var char = words[i].charCodeAt(0);\n    if(char>96 && char<123){\n      new_word\
    \ += String.fromCharCode(char-32);\n    }else{\n      new_word += words[i];\n\
    \    }\n  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'ehllo'\n    at test\
    \ (/tmp/tmphpt_yagp.js:30:10)\n    at Object.<anonymous> (/tmp/tmphpt_yagp.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'ehllo',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var char = s.charAt(i);\n   \
    \ var ascii = char.charCodeAt(0);\n    if(ascii >= 65 && ascii <= 90){\n     \
    \ new_s += char;\n    }\n  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpriemdcor.js:27:10)\n    at Object.<anonymous> (/tmp/tmpriemdcor.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0;i<words.length;i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_s += String.fromCharCode(letter);\n\
    \  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpo0yjdn64.js:25:10)\n    at Object.<anonymous> (/tmp/tmpo0yjdn64.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0;i<words.length;i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        new_s += String.fromCharCode(letter);\n\
    \    }\n    return new_s;\n}\n</code>\n<|/ a tags=javascript,string,arrays |>\n\
    <| c |>\nThis doesn't work if the string contains spaces.\n<|/ c |>\n<| c |>\n\
    It doesn't work if the string contains spaces. Try `anti_shuffle('hello world')`\
    \ which returns `'ehllo orld'`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed\
    \ it right after I posted my comment. Thanks for pointing it out.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if the string contains spaces.\n<|/ c |>\n<| c |>\n\
    It doesn't work if the string contains spaces. Try `anti_shuffle('hello world')`\
    \ which returns `'ehllo orld'`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpubhyxzfc.js:19\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, ' ').split(' ').sort().join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp51ype0jj.js:20:10)\n    at Object.<anonymous> (/tmp/tmp51ype0jj.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var newStringArray = s.split(\" \");\n    for(var i = 0; i < newStringArray.length;\
    \ i++){\n        var currentChar = newStringArray[i].charCodeAt(0);\n        var\
    \ newChar = currentChar - 1;\n        if(newChar < 97){\n            newString\
    \ += String.fromCharCode(newChar);\n        }else if(newChar < 123){\n       \
    \     newString += String.fromCharCode(newChar - 26);\n        }else{\n      \
    \      newString += String.fromCharCode(newChar - 52);\n        }\n    }\n   \
    \ return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'G'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpw8jmbzt9.js:32:10)\n    at Object.<anonymous> (/tmp/tmpw8jmbzt9.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'G',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var wordArr\
    \ = s.split(' ');\n  var newArr = wordArr.map(function(word){\n    return word.split('').sort().join('');\n\
    \  });\n  return newArr.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var letter = words[i].charCodeAt(0);\n        if(letter > 96\
    \ && letter < 123){\n            letter = letter - 32;\n        }\n        new_s\
    \ += letter;\n    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'72'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpqgax1ck5.js:28:10)\n    at Object.<anonymous> (/tmp/tmpqgax1ck5.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '72',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/, \"\").replace(/[a-z]/gi, function(a){\n    return String.fromCharCode(65\
    \ + a.charCodeAt(0));\n  }).replace(/[A-Z]/gi, function(a){\n    return String.fromCharCode(65\
    \ + a.charCodeAt(0) - 32);\n  }).replace(/\\s+/, \" \").split(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '\x89\xAA' ]\n\nshould equal\n\n'Hi'\n\
    \    at test (/tmp/tmpy0bo2u0e.js:23:10)\n    at Object.<anonymous> (/tmp/tmpy0bo2u0e.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '\\x89\xAA' ],\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0;i<words.length;i++){\n\
    \        var new_word = words[i];\n        var new_word_ascii = new_word.charCodeAt(0);\n\
    \        for(var j=i+1;j<words.length;j++){\n            var next_word = words[j];\n\
    \            var next_word_ascii = next_word.charCodeAt(0);\n            if(new_word_ascii\
    \ < next_word_ascii){\n                new_word += next_word;\n              \
    \  words.splice(j,1);\n            }\n        }\n        new_s += new_word;\n\
    \    }\n    return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpnnms3eqx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpnnms3eqx.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var re =\
    \ /(\\w+)\\s+(\\w+)/;\n    var m = s.match(re);\n    var a = m[1].split('');\n\
    \    var b = m[2].split('');\n    var c = m[0].split('');\n    var d = [];\n \
    \   for(var i=0;i<a.length;i++){\n        for(var j=0;j<b.length;j++){\n     \
    \       for(var k=0;k<c.length;k++){\n                if(a[i]>b[j]){\n       \
    \             if(a[i]>c[k]){\n                        d.push(c[k]);\n        \
    \                c.splice(k,1);\n                        k--;\n              \
    \      }\n                    else{\n                        d.push(b[j]);\n \
    \                       b.splice(j,1);\n                        j--;\n       \
    \             }\n                }\n                else{\n                  \
    \  if(b[i]>c[k]){\n                        d.push(c[k]);\n                   \
    \     c.splice(k,1);\n                        k--;\n                    }\n  \
    \                  else{\n                        d.push(a[i]);\n            \
    \            a.splice(i,1);\n                        i--;\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return d.join('');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdrragbfj.js:13\n    var a = m[1].split('');\n             ^\n\n\
    TypeError: Cannot read property '1' of null\n    at anti_shuffle (/tmp/tmpdrragbfj.js:13:14)\n\
    \    at test (/tmp/tmpdrragbfj.js:55:20)\n    at Object.<anonymous> (/tmp/tmpdrragbfj.js:64:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var new_word = '';\n    var new_word_len = 0;\n    for(var\
    \ i=0; i<words.length; i++){\n        new_word += words[i];\n        new_word_len\
    \ += words[i].length;\n    }\n    for(var i=0; i<new_word_len; i++){\n       \
    \ var ascii = new_word.charCodeAt(i);\n        if(ascii >= 65 && ascii <= 90){\n\
    \            new_word += String.fromCharCode((ascii - 65 + 26) % 26 + 65);\n \
    \       }else if(ascii >= 97 && ascii <= 122){\n            new_word += String.fromCharCode((ascii\
    \ - 97 + 26) % 26 + 97);\n        }else{\n            new_word += String.fromCharCode((ascii\
    \ - 48 + 26) % 26 + 48);\n        }\n    }\n    return new_word;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HiHi'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpybrchs8u.js:36:10)\n    at Object.<anonymous> (/tmp/tmpybrchs8u.js:45:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HiHi',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      new_s += s.charAt(i);\n    }\n  }\n\
    \  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmplxs_wmet.js:26:10)\n    at Object.<anonymous> (/tmp/tmplxs_wmet.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  let words\
    \ = s.split(' ');\n  let new_word = '';\n  let new_words = [];\n  for (let i =\
    \ 0; i < words.length; i++){\n    let char = words[i].charCodeAt(0);\n    if (char\
    \ > 64 && char < 91){\n      new_word += words[i];\n      new_words.push(new_word);\n\
    \      new_word = '';\n    }\n  }\n  return new_words.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'ehllo'\n    at test\
    \ (/tmp/tmpodmzwvte.js:31:10)\n    at Object.<anonymous> (/tmp/tmpodmzwvte.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'ehllo',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var letter = s.charAt(i);\n   \
    \ if(letter == ' '){\n      newString += letter;\n    }else{\n      newString\
    \ += letter + s.charAt(i+1);\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hii'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpugd78o_i.js:28:10)\n    at Object.<anonymous> (/tmp/tmpugd78o_i.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hii',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii > 64 && ascii < 91){\n      newString += s.charAt(i);\n    }\n \
    \ }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmph0f6wwym.js:26:10)\n    at Object.<anonymous> (/tmp/tmph0f6wwym.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        newString += String.fromCharCode(letter);\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpy980a7pd.js:25:10)\n    at Object.<anonymous> (/tmp/tmpy980a7pd.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  s = s.split(\" \");\n  for(var i=0;i<s.length;i++){\n    var ascii\
    \ = s.charCodeAt(i);\n    if(ascii >= 65 && ascii <= 90){\n      new_s += s.charAt(i);\n\
    \    }\n  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9xy8gfoi.js:14\n    var ascii = s.charCodeAt(i);\n            \
    \      ^\n\nTypeError: s.charCodeAt is not a function\n    at anti_shuffle (/tmp/tmp9xy8gfoi.js:14:19)\n\
    \    at test (/tmp/tmp9xy8gfoi.js:27:20)\n    at Object.<anonymous> (/tmp/tmp9xy8gfoi.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    new_word += words[i];\n  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmp7aogcbyg.js:25:10)\n    at Object.<anonymous> (/tmp/tmp7aogcbyg.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var res\
    \ = [];\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var word = words[i];\n        var ascii = word.split('').map(function(char){\n\
    \            return char.charCodeAt(0);\n        }).sort(function(a, b){\n   \
    \         return a - b;\n        }).join('');\n        res.push(ascii + word);\n\
    \    }\n    return res.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'72105Hi'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpqw2d1uq3.js:30:10)\n    at Object.<anonymous> (/tmp/tmpqw2d1uq3.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '72105Hi',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var words\
    \ = s.split(' ');\n    var new_word = '';\n    for(var i=0;i<words.length;i++){\n\
    \        new_word += words[i];\n    }\n    return new_word;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpa_4vk3h6.js:25:10)\n    at Object.<anonymous> (/tmp/tmpa_4vk3h6.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr=s.split('\
    \ ');\n  var new_arr=[];\n  for(var i=0;i<arr.length;i++){\n    var new_word=arr[i];\n\
    \    for(var j=i+1;j<arr.length;j++){\n      if(arr[j].charCodeAt(0)>arr[i].charCodeAt(0)){\n\
    \        new_word+=arr[j];\n        arr.splice(j,1);\n      }\n    }\n    new_arr.push(new_word);\n\
    \  }\n  return new_arr.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpbcb2rit6.js:32:10)\n    at Object.<anonymous> (/tmp/tmpbcb2rit6.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let words\
    \ = s.split(' ');\n    let new_word = '';\n    for(let i = 0; i < words.length;\
    \ i++){\n        let char = words[i].charCodeAt(0);\n        let index = char\
    \ - 96;\n        new_word += String.fromCharCode(index+32);\n    }\n    return\
    \ new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\b'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpqgn8zwq1.js:26:10)\n    at Object.<anonymous> (/tmp/tmpqgn8zwq1.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\b',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      newString += s.charAt(i);\n    }\n\
    \  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmptcriyt5m.js:26:10)\n    at Object.<anonymous> (/tmp/tmptcriyt5m.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i=0;i<words.length;i++){\n\
    \        var ascii = words[i].charCodeAt(0);\n        var newWord = \"\";\n  \
    \      for(var j=0;j<words[i].length;j++){\n            if(j==0){\n          \
    \      newWord += words[i][j];\n            }\n            else{\n           \
    \     if(ascii<97){\n                    newWord += words[i][j];\n           \
    \     }\n                else{\n                    newWord += String.fromCharCode(ascii-32);\n\
    \                }\n            }\n        }\n        newString += newWord;\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hHHHH'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpziwq10r9.js:40:10)\n    at Object.<anonymous> (/tmp/tmpziwq10r9.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hHHHH',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      newString += s.charAt(i);\n    }\n\
    \  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpftkpml_0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpftkpml_0.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var new_s\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var new_word = words[i];\n        var new_char = \"\";\n    \
    \    for(var j = 0; j < new_word.length; j++){\n            var ascii = new_word.charCodeAt(j);\n\
    \            if(ascii >= 65 && ascii <= 90){\n                new_char += new_word.charAt(j);\n\
    \            }\n        }\n        new_s += new_char;\n    }\n    return new_s;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpodny0ltn.js:32:10)\n    at Object.<anonymous> (/tmp/tmpodny0ltn.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr =\
    \ [];\n  var words = s.split(' ');\n  for(var i=0;i<words.length;i++){\n    arr.push(words[i]);\n\
    \  }\n  arr.sort();\n  return arr.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpsff0sv4j.js:26:10)\n    at Object.<anonymous> (/tmp/tmpsff0sv4j.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let newString\
    \ = '';\n    let words = s.split(' ');\n    for(let i = 0; i < words.length; i++){\n\
    \        let char = words[i];\n        let asciiCode = char.charCodeAt(0);\n \
    \       let newChar = String.fromCharCode(asciiCode - 1);\n        newString +=\
    \ newChar;\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'G'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpefxe8r3_.js:27:10)\n    at Object.<anonymous> (/tmp/tmpefxe8r3_.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'G',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var words = s.split(\" \");\n    for(var i = 0; i < words.length;\
    \ i++){\n        var char = words[i].charCodeAt(0);\n        var newChar = char\
    \ - 65;\n        newString += String.fromCharCode(newChar);\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp6l87tkg2.js:26:10)\n    at Object.<anonymous> (/tmp/tmp6l87tkg2.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0; i<words.length; i++){\n\
    \        var letter = words[i].split('')\n        for(var j=0; j<letter.length;\
    \ j++){\n            var ascii = letter[j].charCodeAt(0);\n            if(ascii\
    \ >= 65 && ascii <= 90){\n                letter[j] = letter[j].toUpperCase();\n\
    \            }\n            else if(ascii >= 97 && ascii <= 122){\n          \
    \      letter[j] = letter[j].toLowerCase();\n            }\n            newString\
    \ += letter[j];\n        }\n        newString += ' ';\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi '\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpt1024mzm.js:35:10)\n    at Object.<anonymous> (/tmp/tmpt1024mzm.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi ',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g, function(m){\n    return m.split('').sort().join('');\n  });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpqgt0ap72.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqgt0ap72.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0; i<words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(letter);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpydctg6zh.js:25:10)\n    at Object.<anonymous> (/tmp/tmpydctg6zh.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr =\
    \ [];\n  var words = s.split(' ');\n  for(var i=0;i<words.length;i++){\n    arr.push(words[i]);\n\
    \  }\n  for(var i=0;i<arr.length;i++){\n    for(var j=i;j<arr.length;j++){\n \
    \     if(arr[j].charCodeAt(0)>arr[i].charCodeAt(0)){\n        var temp = arr[i];\n\
    \        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n    }\n  }\n  return\
    \ arr.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpo7qukrc_.js:34:10)\n    at Object.<anonymous> (/tmp/tmpo7qukrc_.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newString += newChar;\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpx3_hj38z.js:26:10)\n    at Object.<anonymous> (/tmp/tmpx3_hj38z.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i=0;i<words.length;i++){\n\
    \    var new_word = words[i];\n    for(var j=i+1;j<words.length;j++){\n      if(words[j].charCodeAt(0)>words[i].charCodeAt(0)){\n\
    \        new_word += words[j];\n        words.splice(j,1);\n      }\n    }\n \
    \   new_s += new_word;\n  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpjtopvozp.js:32:10)\n    at Object.<anonymous> (/tmp/tmpjtopvozp.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i = 0; i < words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_s += String.fromCharCode(letter);\n\
    \  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp_1l986l8.js:25:10)\n    at Object.<anonymous> (/tmp/tmp_1l986l8.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var re =\
    \ new RegExp(/\\s+/);\n    var words = s.split(re);\n    var new_words = [];\n\
    \    for(var i=0;i<words.length;i++){\n        new_words.push(words[i].split('').sort().join(''));\n\
    \    }\n    return new_words.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/g,' ').split(' ').sort().join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpq4yvvsdm.js:20:10)\n    at Object.<anonymous> (/tmp/tmpq4yvvsdm.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = \"\";\n    var wordArray = s.split(\" \");\n    for(var i=0; i<wordArray.length;\
    \ i++){\n        var ascii = wordArray[i].charCodeAt(0);\n        var newWord\
    \ = \"\";\n        for(var j=0; j<wordArray[i].length; j++){\n            if(j%2\
    \ === 0){\n                newWord += wordArray[i][j];\n            }\n      \
    \      else{\n                newWord += String.fromCharCode(ascii - 1);\n   \
    \         }\n        }\n        newString += newWord;\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HG'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpqrhofsbb.js:34:10)\n    at Object.<anonymous> (/tmp/tmpqrhofsbb.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HG',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    var newChar = String.fromCharCode(ascii);\n    newString += newChar;\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'hello'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpshgp0y9o.js:26:10)\n    at Object.<anonymous> (/tmp/tmpshgp0y9o.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'hello',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var splitString = s.split(' ');\n    for(var i = 0; i < splitString.length;\
    \ i++){\n        var currentChar = splitString[i];\n        var asciiValue = currentChar.charCodeAt(0);\n\
    \        var newChar = String.fromCharCode(asciiValue + 1);\n        newString\
    \ += newChar;\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'I'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpgobxneyi.js:27:10)\n    at Object.<anonymous> (/tmp/tmpgobxneyi.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'I',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  return s.replace(/\\\
    s+/, \"\").replace(/[a-z]/ig, function(a){\n    return String.fromCharCode(65\
    \ + a.charCodeAt(0));\n  }).replace(/[A-Z]/ig, function(a){\n    return String.fromCharCode(65\
    \ + a.charCodeAt(0) - 26);\n  }).replace(/\\s+/, \" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\x89\xAA'\n\nshould equal\n\n'Hi'\n   \
    \ at test (/tmp/tmpwq0ftk3u.js:23:10)\n    at Object.<anonymous> (/tmp/tmpwq0ftk3u.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x89\xAA',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  var wordArr = s.split(' ');\n  for(var i=0; i<wordArr.length; i++){\n\
    \    var letter = wordArr[i].charCodeAt(0);\n    var newLetter = letter - 65;\n\
    \    newString += String.fromCharCode(newLetter);\n  }\n  return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp65errl4g.js:26:10)\n    at Object.<anonymous> (/tmp/tmp65errl4g.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var re =\
    \ /\\s+/g;\n    var words = s.split(re);\n    var new_word = '';\n    var new_words\
    \ = [];\n    for(var i=0;i<words.length;i++){\n        var new_char = words[i].split('').sort().join('');\n\
    \        new_word += new_char;\n        new_words.push(new_char);\n    }\n   \
    \ return new_word.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8hh4tngn.js:20\n    return new_word.join(' ');\n              \
    \      ^\n\nTypeError: new_word.join is not a function\n    at anti_shuffle (/tmp/tmp8hh4tngn.js:20:21)\n\
    \    at test (/tmp/tmp8hh4tngn.js:28:20)\n    at Object.<anonymous> (/tmp/tmp8hh4tngn.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var c = s.charCodeAt(i);\n  \
    \  var new_c = \"\";\n    for(var j=0; j<i; j++){\n      if(c > s.charCodeAt(j)){\n\
    \        new_c = new_c + s.charAt(j);\n      }\n    }\n    new_s = new_s + new_c;\n\
    \  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpwawag42y.js:30:10)\n    at Object.<anonymous> (/tmp/tmpwawag42y.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var res\
    \ = [];\n    var words = s.split(' ');\n    var len = words.length;\n    for(var\
    \ i = 0; i < len; i++){\n        var word = words[i];\n        var ascii = word.split('').map(function(char){\n\
    \            return char.charCodeAt(0);\n        }).sort(function(a, b){\n   \
    \         return a - b;\n        }).join('');\n        res.push(ascii);\n    }\n\
    \    return res.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'72105'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmp81z724yi.js:31:10)\n    at Object.<anonymous> (/tmp/tmp81z724yi.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '72105',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      new_s += s.charAt(i);\n    }\n  }\n\
    \  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpo0i3j02o.js:26:10)\n    at Object.<anonymous> (/tmp/tmpo0i3j02o.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  s = s.split(\" \");\n  for(var i=0;i<s.length;i++){\n    var ascii\
    \ = s[i].charCodeAt(0);\n    var new_ascii = ascii + 1;\n    new_s += String.fromCharCode(new_ascii);\n\
    \  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'I'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpzvkmljjj.js:26:10)\n    at Object.<anonymous> (/tmp/tmpzvkmljjj.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'I',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var words\
    \ = s.split(' ');\n  var new_word = '';\n  for(var i=0;i<words.length;i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    new_word += String.fromCharCode(letter);\n\
    \  }\n  return new_word;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'H'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpg9k1n_v_.js:25:10)\n    at Object.<anonymous> (/tmp/tmpg9k1n_v_.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'H',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var letter = words[i].split('')\n        for(var j = 0; j < letter.length;\
    \ j++){\n            letter[j] = letter[j].charCodeAt() - 97;\n        }\n   \
    \     newString += letter.join('');\n    }\n    return newString;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'-258'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmprb1296ji.js:28:10)\n    at Object.<anonymous> (/tmp/tmprb1296ji.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '-258',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  for(var i=0; i<s.length; i++){\n    if(s.charAt(i)==' '){\n      newString\
    \ += s.charAt(i);\n    }else{\n      newString += String.fromCharCode(s.charCodeAt(i)+1);\n\
    \    }\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Ij'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpjk5ptcad.js:27:10)\n    at Object.<anonymous> (/tmp/tmpjk5ptcad.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Ij',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var re =\
    \ /(\\w+)/g;\n    var arr = s.match(re);\n    var len = arr.length;\n    var new_arr\
    \ = [];\n    var new_str = '';\n    for(var i=0; i<len; i++){\n        var word\
    \ = arr[i];\n        var index = arr.indexOf(word);\n        var new_word = word.slice(0,\
    \ index) + word.slice(index+1);\n        new_arr.push(new_word);\n    }\n    for(var\
    \ i=0; i<len; i++){\n        new_str += new_arr[i];\n    }\n    return new_str;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'i'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpd411krhm.js:33:10)\n    at Object.<anonymous> (/tmp/tmpd411krhm.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    let newStr\
    \ = '';\n    let words = s.split(' ');\n    for(let i = 0; i < words.length; i++){\n\
    \        let char = words[i].charCodeAt(0);\n        let newChar = char - 65;\n\
    \        if(newChar < 0){\n            newChar += 26;\n        }\n        newStr\
    \ += String.fromCharCode(newChar);\n    }\n    return newStr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'\\u0007'\n\nshould equal\n\n'Hi'\n    at\
    \ test (/tmp/tmpuo2304vx.js:29:10)\n    at Object.<anonymous> (/tmp/tmpuo2304vx.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '\\x07',\n  expected: 'Hi',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i=0;i<words.length;i++){\n\
    \        var ascii = words[i].charCodeAt(0);\n        var newWord = '';\n    \
    \    for(var j=0;j<words[i].length;j++){\n            var ascii = words[i].charCodeAt(j);\n\
    \            if(ascii>64 && ascii<91){\n                newWord += String.fromCharCode(ascii-32);\n\
    \            }\n            else if(ascii>96 && ascii<123){\n                newWord\
    \ += String.fromCharCode(ascii-64);\n            }\n            else{\n      \
    \          newWord += words[i][j];\n            }\n        }\n        newString\
    \ += newWord;\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'()'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp3loxwnb2.js:38:10)\n    at Object.<anonymous> (/tmp/tmp3loxwnb2.js:47:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '()',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var re =\
    \ /\\s+/;\n    var words = s.split(re);\n    var new_word = '';\n    for(var i=0;i<words.length;i++){\n\
    \        new_word += words[i];\n    }\n    for(var i=0;i<words.length;i++){\n\
    \        new_word += words[i].split('').sort().join('');\n    }\n    return new_word;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HiHi'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpx7zp0uo1.js:28:10)\n    at Object.<anonymous> (/tmp/tmpx7zp0uo1.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HiHi',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var arr =\
    \ [];\n  for(var i=0;i<s.length;i++){\n    var char = s.charAt(i);\n    var ascii\
    \ = char.charCodeAt(0);\n    arr.push(char);\n  }\n  for(var i=0;i<arr.length;i++){\n\
    \    var j = Math.floor(Math.random()*arr.length);\n    var temp = arr[i];\n \
    \   arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  return arr.join('');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'lohle'\n\nshould equal\n\n'ehllo'\n   \
    \ at test (/tmp/tmpw7_k0x5u.js:32:10)\n    at Object.<anonymous> (/tmp/tmpw7_k0x5u.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'lohle',\n  expected: 'ehllo',\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  for(var i=0; i<s.length; i++){\n    var c = s.charCodeAt(i);\n  \
    \  var new_c = \"\";\n    for(var j=0; j<s.length; j++){\n      if((j == i) ||\
    \ (s.charCodeAt(j) == c)){\n        new_c += s[j];\n      }else{\n        new_c\
    \ += s[j];\n      }\n    }\n    new_s += new_c;\n  }\n  return new_s;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'HiHi'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp67b1sya6.js:32:10)\n    at Object.<anonymous> (/tmp/tmp67b1sya6.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'HiHi',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var newString\
    \ = '';\n  var words = s.split(' ');\n  for (var i = 0; i < words.length; i++){\n\
    \    var letter = words[i].split('')\n    letter = letter\n      .sort(function(a,\
    \ b){\n        return a.charCodeAt() - b.charCodeAt();\n      })\n      .join('');\n\
    \    newString += letter;\n  }\n  return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hello!!!Wdlor'\n\nshould equal\n\n'Hello\
    \ !!!Wdlor'\n    at test (/tmp/tmpp1e7kmu2.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp1e7kmu2.js:39:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello!!!Wdlor',\n\
    \  expected: 'Hello !!!Wdlor',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    for(var i = 0; i < words.length; i++){\n\
    \        var letter = words[i].charCodeAt(0);\n        var newLetter = Math.floor(letter/26);\n\
    \        if(newLetter < 26){\n            newString += String.fromCharCode(newLetter+65);\n\
    \        }else{\n            newString += words[i];\n        }\n    }\n    return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'C'\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmpwiq2tiha.js:30:10)\n    at Object.<anonymous> (/tmp/tmpwiq2tiha.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'C',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n  var new_s\
    \ = \"\";\n  var words = s.split(\" \");\n  for(var i = 0; i < words.length; i++){\n\
    \    var letter = words[i].charCodeAt(0);\n    if(letter > 96 && letter < 123){\n\
    \      new_s += words[i];\n    }\n  }\n  return new_s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmphqq42g7c.js:27:10)\n    at Object.<anonymous> (/tmp/tmphqq42g7c.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// anti_shuffle('Hi')\
    \ returns 'Hi'\n// anti_shuffle('hello') returns 'ehllo'\n// anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\nfunction anti_shuffle(s){\n    var newString\
    \ = '';\n    var words = s.split(' ');\n    var len = words.length;\n    var i\
    \ = 0;\n    while(i < len){\n        var j = Math.floor(Math.random()*len);\n\
    \        var temp = words[i];\n        words[i] = words[j];\n        words[j]\
    \ = temp;\n        i++;\n    }\n    for(i = 0; i < len; i++){\n        newString\
    \ += words[i] + ' ';\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi '\n\nshould equal\n\n'Hi'\n    at test\
    \ (/tmp/tmp2r9s98fk.js:33:10)\n    at Object.<anonymous> (/tmp/tmp2r9s98fk.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi ',\n  expected: 'Hi',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

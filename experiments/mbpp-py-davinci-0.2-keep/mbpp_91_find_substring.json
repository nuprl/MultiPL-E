{
  "name": "mbpp_91_find_substring",
  "language": "py",
  "prompt": "from typing import List\n\ndef find_substring(str1: List[str], sub_str: str) -> bool:\n    \"\"\"\n\tWrite a function to check if a string is present as a substring in a given list of string values.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(['red', 'black', 'white', 'green', 'orange'], 'ack') == True\n    assert candidate(['red', 'black', 'white', 'green', 'orange'], 'abc') == False\n    assert candidate(['red', 'black', 'white', 'green', 'orange'], 'ange') == True\n\ndef test_check():\n    check(find_substring)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return sub_str in str1\n",
    "    return sub_str in str1\n\n",
    "    return sub_str in str1\n\n",
    "    if sub_str in str1:\n        return True\n    return False\n",
    "    for i in str1:\n        if sub_str in i:\n            return True\n    return False\n",
    "    for i in str1:\n        if sub_str in i:\n            return True\n    return False\n\nprint(find_substring([\"hello\", \"world\"], \"hello\"))\nprint(find_substring([\"hello\", \"world\"], \"goodbye\"))",
    "    return sub_str in str1\n",
    "    return sub_str in str1\n",
    "    return sub_str in str1\n\nprint(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"))\nprint(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"it\"))",
    "    if sub_str in str1:\n        return True\n    else:\n        return False\n",
    "    return sub_str in str1\n",
    "    return sub_str in str1\n\nprint(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"this\"))\nprint(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"))\nprint(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"searching\"))\nprint(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"not\"))",
    "    return sub_str in str1\n",
    "    for i in str1:\n        if sub_str in i:\n            return True\n    return False\n",
    "    return sub_str in str1\n\n",
    "    return sub_str in str1\n",
    "    return sub_str in str1\n\n",
    "    for s in str1:\n        if sub_str in s:\n            return True\n    return False\n",
    "    return sub_str in str1\n\n",
    "    return sub_str in str1\n"
  ]
}
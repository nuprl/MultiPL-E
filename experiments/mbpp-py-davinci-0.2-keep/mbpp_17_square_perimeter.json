{
  "name": "mbpp_17_square_perimeter",
  "language": "py",
  "prompt": "def square_perimeter(a: int) -> int:\n    \"\"\"\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(10) == 40\n    assert candidate(5) == 20\n    assert candidate(4) == 16\n\ndef test_check():\n    check(square_perimeter)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return 4 * a\n\n",
    "    return a * 4\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return a * 4\n\n",
    "    return a * 4\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return a * 4\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return 4 * a\n\n",
    "    return a * 4\n\n",
    "    return 4 * a\n\n"
  ]
}
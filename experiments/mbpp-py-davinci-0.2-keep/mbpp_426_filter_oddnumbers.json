{
  "name": "mbpp_426_filter_oddnumbers",
  "language": "py",
  "prompt": "from typing import List\n\ndef filter_oddnumbers(nums: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a function to filter odd numbers.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_426_filter_oddnumbers.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 3, 5, 7, 9]\n    assert candidate([10, 20, 45, 67, 84, 93]) == [45, 67, 93]\n    assert candidate([5, 7, 9, 8, 6, 4, 3]) == [5, 7, 9, 3]\n\ndef test_check():\n    check(filter_oddnumbers)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [x for x in nums if x % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\n",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\n",
    "    return [x for x in nums if x % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return [num for num in nums if num % 2 == 1]",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return [num for num in nums if num % 2 != 0]",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2, nums))\n\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return [num for num in nums if num % 2 != 0]\n\n",
    "    return [num for num in nums if num % 2 != 0]",
    "    return list(filter(lambda x: x % 2 == 1, nums))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 == 1, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1,2,3,4,5,6,7,8,9,10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 == 1]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [num for num in nums if num % 2 != 0]\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n\nprint(filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return list(filter(lambda x: x % 2 != 0, nums))\n"
  ]
}
{
  "name": "mbpp_11_remove_Occ",
  "language": "py",
  "prompt": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu4r_3afo.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpu4r_3afo.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu4r_3afo.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.find(ch) == -1:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu4r_3afo.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpu4r_3afo.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu4r_3afo.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if len(s) == 0:\n        return s\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpim6aucwx.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpim6aucwx.py\", line 20, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpim6aucwx.py\", line 15, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, '', 1).replace(ch, '', s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        return s.replace(ch, \"\", 1)\n    else:\n        return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8tf5hrv9.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp8tf5hrv9.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp8tf5hrv9.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch not in s:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\nprint(remove_Occ(\"abcabc\", \"a\"))\nprint(remove_Occ(\"abcabc\", \"b\"))\nprint(remove_Occ(\"abcabc\", \"c\"))\nprint(remove_Occ(\"abcabc\", \"d\"))\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "bcbc\nacac\nabab\nabcabc\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    if s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) > 1:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n    else:\n        return s.replace(ch, \"\")\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu4r_3afo.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpu4r_3afo.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu4r_3afo.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\")\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) < 2:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    s = s.replace(ch, \"\", 1)\n    s = s[::-1]\n    s = s.replace(ch, \"\", 1)\n    s = s[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.find(ch) == -1:\n        return s\n    else:\n        return s[:s.find(ch)] + s[s.find(ch) + 1:]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6luaygwv.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp6luaygwv.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp6luaygwv.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    s = s.replace(ch, \"\", 1)\n    s = s[::-1].replace(ch, \"\", 1)\n    return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    s = s.replace(ch, \"\", 1)\n    s = s[::-1].replace(ch, \"\", 1)\n    return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    s = s.replace(ch, \"\", 1)\n    s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s[:s.find(ch)] + s[s.find(ch) + 1 : s.rfind(ch)] + s[s.rfind(ch) + 1 :]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.find(ch) == -1:\n        return s\n    else:\n        return s.replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwa4xdmgj.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpwa4xdmgj.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpwa4xdmgj.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\")\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) > 0:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n    else:\n        return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    if s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.find(ch) == -1:\n        return s\n    else:\n        return s[:s.find(ch)] + s[s.find(ch) + 1:]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6luaygwv.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp6luaygwv.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp6luaygwv.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    if s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdy8yi6m1.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpdy8yi6m1.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpdy8yi6m1.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, '', 1).replace(ch, '', s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.find(ch) == -1:\n        return s\n    else:\n        return s[:s.find(ch)] + s[s.find(ch) + 1:] + s[:s.rfind(ch)] + s[s.rfind(ch) + 1:]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpijgxgmw3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpijgxgmw3.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpijgxgmw3.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\", 1)\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if len(s) == 0:\n        return s\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpim6aucwx.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpim6aucwx.py\", line 20, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpim6aucwx.py\", line 15, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch not in s:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s[0] == ch:\n        s = s[1:]\n    if s[-1] == ch:\n        s = s[:-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu94z_r12.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpu94z_r12.py\", line 18, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu94z_r12.py\", line 13, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s[:s.index(ch)] + s[s.index(ch) + 1:] + s[:s.rindex(ch)] + s[s.rindex(ch) + 1:]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6z0al89s.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp6z0al89s.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp6z0al89s.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.find(ch) == -1:\n        return s\n    else:\n        return s[:s.find(ch)] + s[s.find(ch) + 1:]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6luaygwv.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp6luaygwv.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp6luaygwv.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu4r_3afo.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpu4r_3afo.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpu4r_3afo.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s == '':\n        return ''\n    if s[0] == ch:\n        return remove_Occ(s[1:], ch)\n    if s[-1] == ch:\n        return remove_Occ(s[:-1], ch)\n    return s[0] + remove_Occ(s[1:-1], ch) + s[-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpki_inecp.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpki_inecp.py\", line 20, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmpki_inecp.py\", line 15, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s[:s.index(ch)] + s[s.index(ch) + 1:] + s[:s.rindex(ch)] + s[s.rindex(ch) + 1:]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123187,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6z0al89s.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp6z0al89s.py\", line 17, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp6z0al89s.py\", line 12, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) > 0:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n    else:\n        return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if ch in s:\n        s = s.replace(ch, \"\", 1)\n        s = s[::-1].replace(ch, \"\", 1)[::-1]\n    return s\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    elif s.count(ch) == 1:\n        return s.replace(ch, \"\")\n    else:\n        return s.replace(ch, \"\", 1) + s[::-1].replace(ch, \"\", 1)[::-1]\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d_vnn_p.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4d_vnn_p.py\", line 19, in test_check\n    check(remove_Occ)\n  File \"/tmp/tmp4d_vnn_p.py\", line 14, in check\n    assert candidate('hello', 'l') == 'heo'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    if s.count(ch) == 0:\n        return s\n    else:\n        return s.replace(ch, \"\", 1).replace(ch, \"\", s.count(ch) - 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def remove_Occ(s: str, ch: str) -> str:\n    \"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n    return s.replace(ch, \"\", 1).replace(ch, \"\", 1)\n\n\ndef check(candidate):\n    assert candidate('hello', 'l') == 'heo'\n    assert candidate('abcda', 'a') == 'bcd'\n    assert candidate('PHP', 'P') == 'H'\n\ndef test_check():\n    check(remove_Occ)\n\ntest_check()\n",
      "timestamp": 1665510488,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
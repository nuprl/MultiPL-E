{
  "name": "mbpp_284_check_element",
  "language": "py",
  "prompt": "from typing import Any\n\ndef check_element(list: Any, element: Any) -> bool:\n    \"\"\"\n\tWrite a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(['green', 'orange', 'black', 'white'], 'blue') == False\n    assert candidate([1, 2, 3, 4], 7) == False\n    assert candidate(['green', 'green', 'green', 'green'], 'green') == True\n\ndef test_check():\n    check(check_element)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return list.count(element) == len(list)",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 1.0))\nprint(check_element([1, 1, 1, 1, 1], \"1\"))\nprint(check_element([1, 1, 1, 1, 1], True))\nprint(check_element([1, 1, 1, 1, 1], False))\nprint(check_element([1, 1, 1, 1, 1], [1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1, 1, 1, 1]))\nprint(check_element([1, 1, 1, 1, 1], (1, 1, 1, 1, 1)))\nprint(check_element([1, 1, 1, 1, 1], {1, 1, 1, 1, 1}))\nprint(check_element([1, 1, 1, 1, 1], {1: 1, 1: 1, 1: 1, 1: 1, 1: 1}))",
    "    return all(elem == element for elem in list)\n\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element(['a', 'a', 'a', 'a', 'a'], 'a'))\nprint(check_element(['a', 'b', 'c', 'd', 'e'], 'a'))\nprint(check_element(['a', 'b', 'c', 'd', 'e'], 'f'))\nprint(check_element([True, True, True, True, True], True))\nprint(check_element([True, False, True, False, True], True))\nprint(check_element([True, False, True, False, True], False))\nprint(check_element([True, False, True, False, True], False))\nprint(check_element([], False))",
    "    return all(i == element for i in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([], 5))",
    "    return all(item == element for item in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 0))\nprint(check_element([1, 2, 3, 4, 5], 0))\nprint(check_element([], 0))\nprint(check_element([], 1))\nprint(check_element([], 2))\nprint(check_element([], 3))\nprint(check_element([], 4))\nprint(check_element([], 5))\nprint(check_element([], 6))\nprint(check_element([], 7))\nprint(check_element([], 8))\nprint(check_element([], 9))\nprint(check_element([], 10))\nprint(check_element([], 11))\nprint(check_element([], 12))\nprint(check_element([], 13))\nprint(check_element([], 14))\nprint(check_element([], 15))\nprint(check_element([], 16))\nprint(check_element([], 17))\nprint(check_element([], 18))\nprint(check_element([], 19))\nprint(check_element([], 20))\nprint(check_element([], 21))\nprint(check_element([], 22))\nprint(check_element([], 23))\nprint(check_element([], 24))\nprint(check_element([], 25))\nprint(check_element([], 26))\nprint(check_element([], 27))\nprint(check_element([], 28))\nprint(check_element([], 29))\nprint(check_element([], 30))\nprint(check_element([], 31))\nprint(check_element([], 32))\nprint(check_element([], 33))\nprint(check_element([], 34))\nprint(check_element([], 35))\nprint(check_",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1, 2, 3, 4], 1))\nprint(check_element([1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1], 2))",
    "    return all(item == element for item in list)\n",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 0))\nprint(check_element([1, 1, 1, 1, 1], -1))",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 5))",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 0))\nprint(check_element([1, 1, 1, 1, 1], -1))\nprint(check_element([1, 1, 1, 1, 1], 1.0))\nprint(check_element([1, 1, 1, 1, 1], 1.1))\nprint(check_element([1, 1, 1, 1, 1], \"1\"))\nprint(check_element([1, 1, 1, 1, 1], \"2\"))\nprint(check_element([1, 1, 1, 1, 1], \"0\"))\nprint(check_element([1, 1, 1, 1, 1], \"-1\"))\nprint(check_element([1, 1, 1, 1, 1], \"1.0\"))\nprint(check_element([1, 1, 1, 1, 1], \"1.1\"))\nprint(check_element([1, 1, 1, 1, 1], True))\nprint(check_element([1, 1, 1, 1, 1], False))\nprint(check_element([1, 1, 1, 1, 1], None))\nprint(check_element([1, 1, 1, 1, 1], [1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1, 1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1, 1, 1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1, 1, 1, 1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]))\nprint(check_element([1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1]))\nprint",
    "    for item in list:\n        if item != element:\n            return False\n    return True\n\n",
    "    return all(x == element for x in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 2], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 4))\nprint(check_element([1, 2, 3, 4, 5], 3))\nprint(check_element([1, 2, 3, 4, 5], 2))\nprint(check_element([1, 2, 3, 4, 5], 0))",
    "    return all(x == element for x in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 5))\nprint(check_element([1, 2, 3, 4, 5], 0))\nprint(check_element([], 0))",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 4))",
    "    for item in list:\n        if item != element:\n            return False\n    return True\n",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 4))",
    "    return all(i == element for i in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([], 5))",
    "    return all(list[i] == element for i in range(len(list)))",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1, 2, 3, 4], 1))\nprint(check_element([1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1], 0))"
  ]
}
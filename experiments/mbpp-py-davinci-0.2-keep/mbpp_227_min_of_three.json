{
  "name": "mbpp_227_min_of_three",
  "language": "py",
  "prompt": "def min_of_three(a: int, b: int, c: int) -> int:\n    \"\"\"\n\tWrite a function to find minimum of three numbers.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(10, 20, 0) == 0\n    assert candidate(19, 15, 18) == 15\n    assert candidate(-10, -20, -30) == -30\n\ndef test_check():\n    check(min_of_three)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n",
    "    return min(a, b, c)\n\n"
  ]
}
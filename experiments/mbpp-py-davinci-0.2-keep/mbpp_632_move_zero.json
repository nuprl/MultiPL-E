{
  "name": "mbpp_632_move_zero",
  "language": "py",
  "prompt": "from typing import List\n\ndef move_zero(num_list: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n    assert candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n    assert candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n\ndef test_check():\n    check(move_zero)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            num_list.append(num_list.pop(i))\n    return num_list\n\n",
    "    zero_count = 0\n    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            zero_count += 1\n        else:\n            num_list[i - zero_count] = num_list[i]\n    for i in range(len(num_list) - zero_count, len(num_list)):\n        num_list[i] = 0\n    return num_list\n\n",
    "    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            num_list.append(num_list.pop(i))\n    return num_list\n",
    "    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            num_list.append(num_list.pop(i))\n    return num_list\n\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))",
    "    for i in range(num_list.count(0)):\n        num_list.remove(0)\n        num_list.append(0)\n    return num_list\n\n",
    "    zero_count = 0\n    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            zero_count += 1\n        else:\n            num_list[i - zero_count] = num_list[i]\n    for i in range(zero_count):\n        num_list[len(num_list) - 1 - i] = 0\n    return num_list\n",
    "    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            num_list.append(num_list.pop(i))\n    return num_list\n",
    "    return [i for i in num_list if i != 0] + [i for i in num_list if i == 0]\n",
    "    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            num_list.append(num_list.pop(i))\n    return num_list\n\nprint(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]))",
    "    zero_count = 0\n    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            zero_count += 1\n        else:\n            num_list[i - zero_count] = num_list[i]\n    for i in range(zero_count):\n        num_list[len(num_list) - 1 - i] = 0\n    return num_list\n",
    "    zero_list = []\n    non_zero_list = []\n    for num in num_list:\n        if num == 0:\n            zero_list.append(num)\n        else:\n            non_zero_list.append(num)\n    return non_zero_list + zero_list\n",
    "    zero_count = 0\n    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            zero_count += 1\n        else:\n            num_list[i - zero_count] = num_list[i]\n    for i in range(zero_count):\n        num_list[len(num_list) - i - 1] = 0\n    return num_list\n\n",
    "    zero_count = 0\n    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            zero_count += 1\n        elif zero_count > 0:\n            num_list[i - zero_count] = num_list[i]\n            num_list[i] = 0\n    return num_list\n\n",
    "    num_list.sort(key=lambda x: x == 0)\n    return num_list\n\n",
    "    non_zero_list = []\n    zero_list = []\n    for num in num_list:\n        if num == 0:\n            zero_list.append(num)\n        else:\n            non_zero_list.append(num)\n    return non_zero_list + zero_list\n\n",
    "    for i in range(num_list.count(0)):\n        num_list.remove(0)\n        num_list.append(0)\n    return num_list\n",
    "    zero_list = []\n    non_zero_list = []\n    for num in num_list:\n        if num == 0:\n            zero_list.append(num)\n        else:\n            non_zero_list.append(num)\n    return non_zero_list + zero_list\n",
    "    zero_count = 0\n    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            zero_count += 1\n        else:\n            num_list[i - zero_count] = num_list[i]\n    for i in range(zero_count):\n        num_list[len(num_list) - i - 1] = 0\n    return num_list\n",
    "    for i in range(len(num_list)):\n        if num_list[i] == 0:\n            num_list.append(num_list.pop(i))\n    return num_list\n",
    "    num_list.sort(key=lambda x: x == 0)\n    return num_list\n\n"
  ]
}
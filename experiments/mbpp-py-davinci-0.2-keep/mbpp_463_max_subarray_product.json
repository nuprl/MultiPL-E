{
  "name": "mbpp_463_max_subarray_product",
  "language": "py",
  "prompt": "from typing import List\n\ndef max_subarray_product(arr: List[int]) -> int:\n    \"\"\"\n\tWrite a function to find the maximum product subarray of the given array.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, -2, -3, 0, 7, -8, -2]) == 112\n    assert candidate([6, -3, -10, 0, 2]) == 180\n    assert candidate([-2, -40, 0, -2, -3]) == 80\n\ndef test_check():\n    check(max_subarray_product)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if not arr:\n        return 0\n    max_product = arr[0]\n    min_product = arr[0]\n    result = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n        result = max(result, max_product)\n    return result\n",
    "    max_so_far = 1\n    min_so_far = 1\n    max_product = 1\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            max_so_far = max_so_far * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        elif arr[i] == 0:\n            max_so_far = 1\n            min_so_far = 1\n        else:\n            temp = max_so_far\n            max_so_far = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        if max_so_far > max_product:\n            max_product = max_so_far\n    return max_product\n\n",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n\n    max_so_far = arr[0]\n    min_so_far = arr[0]\n    max_product = arr[0]\n\n    for i in range(1, len(arr)):\n        curr = arr[i]\n        temp_max = max(curr, max_so_far * curr, min_so_far * curr)\n        min_so_far = min(curr, max_so_far * curr, min_so_far * curr)\n        max_so_far = temp_max\n        max_product = max(max_product, max_so_far)\n    return max_product\n\n",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    max_so_far = arr[0]\n    min_so_far = arr[0]\n    max_product = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_so_far, min_so_far = min_so_far, max_so_far\n        max_so_far = max(arr[i], max_so_far * arr[i])\n        min_so_far = min(arr[i], min_so_far * arr[i])\n        max_product = max(max_product, max_so_far)\n    return max_product\n\n",
    "    if len(arr) == 0:\n        return 0\n\n    max_product = arr[0]\n    min_product = arr[0]\n    result = arr[0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n\n        result = max(result, max_product)\n\n    return result",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    max_product = arr[0]\n    min_product = arr[0]\n    max_so_far = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n        max_so_far = max(max_so_far, max_product)\n    return max_so_far",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n\n    max_so_far = arr[0]\n    min_so_far = arr[0]\n    max_product = arr[0]\n\n    for i in range(1, len(arr)):\n        curr = arr[i]\n        temp_max = max(curr, max_so_far * curr, min_so_far * curr)\n        min_so_far = min(curr, max_so_far * curr, min_so_far * curr)\n        max_so_far = temp_max\n        max_product = max(max_product, max_so_far)\n\n    return max_product",
    "    if not arr:\n        return 0\n    max_so_far = min_so_far = max_ending_here = min_ending_here = arr[0]\n    for i in range(1, len(arr)):\n        max_ending_here = max(arr[i], max_ending_here * arr[i], min_ending_here * arr[i])\n        min_ending_here = min(arr[i], max_ending_here * arr[i], min_ending_here * arr[i])\n        max_so_far = max(max_so_far, max_ending_here)\n        min_so_far = min(min_so_far, min_ending_here)\n    return max_so_far",
    "    max_so_far = 1\n    min_so_far = 1\n    max_product = 1\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            max_so_far = max_so_far * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        elif arr[i] == 0:\n            max_so_far = 1\n            min_so_far = 1\n        else:\n            temp = max_so_far\n            max_so_far = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        if max_so_far > max_product:\n            max_product = max_so_far\n    return max_product\n\n",
    "    if not arr:\n        return 0\n\n    max_product = arr[0]\n    min_product = arr[0]\n    max_so_far = arr[0]\n\n    for i in range(1, len(arr)):\n        temp_max = max_product\n        max_product = max(arr[i], max_product * arr[i], min_product * arr[i])\n        min_product = min(arr[i], temp_max * arr[i], min_product * arr[i])\n        max_so_far = max(max_so_far, max_product)\n\n    return max_so_far",
    "    if not arr:\n        return 0\n\n    max_so_far = arr[0]\n    min_so_far = arr[0]\n    result = arr[0]\n\n    for i in range(1, len(arr)):\n        curr = arr[i]\n        temp_max = max(curr, max_so_far * curr, min_so_far * curr)\n        min_so_far = min(curr, max_so_far * curr, min_so_far * curr)\n        max_so_far = temp_max\n        result = max(result, max_so_far)\n\n    return result",
    "    if not arr:\n        return 0\n\n    max_so_far = arr[0]\n    min_so_far = arr[0]\n    max_product = arr[0]\n\n    for i in range(1, len(arr)):\n        curr = arr[i]\n        temp_max = max(curr, max_so_far * curr, min_so_far * curr)\n        min_so_far = min(curr, max_so_far * curr, min_so_far * curr)\n        max_so_far = temp_max\n        max_product = max(max_product, max_so_far)\n\n    return max_product\n\n",
    "    if not arr:\n        return 0\n    max_prod = arr[0]\n    min_prod = arr[0]\n    max_so_far = arr[0]\n    for i in range(1, len(arr)):\n        curr = arr[i]\n        temp_max = max(curr, max_prod * curr, min_prod * curr)\n        min_prod = min(curr, max_prod * curr, min_prod * curr)\n        max_prod = temp_max\n        max_so_far = max(max_so_far, max_prod)\n    return max_so_far",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n\n    max_product = arr[0]\n    min_product = arr[0]\n    result = arr[0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n\n        result = max(result, max_product)\n\n    return result",
    "    if len(arr) == 0:\n        return 0\n\n    max_product = arr[0]\n    min_product = arr[0]\n    max_so_far = arr[0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n\n        max_so_far = max(max_so_far, max_product)\n\n    return max_so_far",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    max_product = arr[0]\n    min_product = arr[0]\n    max_so_far = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n        max_so_far = max(max_so_far, max_product)\n    return max_so_far\n",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    max_product = arr[0]\n    min_product = arr[0]\n    result = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n        result = max(result, max_product)\n    return result\n",
    "    if not arr:\n        return 0\n\n    max_product = arr[0]\n    min_product = arr[0]\n    max_so_far = arr[0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            max_product, min_product = min_product, max_product\n\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n\n        max_so_far = max(max_so_far, max_product)\n\n    return max_so_far",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    max_so_far = arr[0]\n    min_so_far = arr[0]\n    max_ending_here = arr[0]\n    min_ending_here = arr[0]\n    for i in range(1, len(arr)):\n        max_ending_here = max(arr[i], max_ending_here * arr[i], min_ending_here * arr[i])\n        min_ending_here = min(arr[i], max_ending_here * arr[i], min_ending_here * arr[i])\n        max_so_far = max(max_so_far, max_ending_here)\n        min_so_far = min(min_so_far, min_ending_here)\n    return max_so_far\n",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n\n    max_product = arr[0]\n    min_product = arr[0]\n    max_so_far = arr[0]\n\n    for i in range(1, len(arr)):\n        curr = arr[i]\n        temp_max = max(curr, max_product * curr, min_product * curr)\n        min_product = min(curr, max_product * curr, min_product * curr)\n        max_product = temp_max\n        max_so_far = max(max_so_far, max_product)\n\n    return max_so_far\n\n"
  ]
}
{
  "name": "mbpp_120_max_product_tuple",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef max_product_tuple(list1: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([(2, 7), (2, 6), (1, 8), (4, 9)]) == 36\n    assert candidate([(10, 20), (15, 2), (5, 10)]) == 200\n    assert candidate([(11, 44), (10, 15), (20, 5), (12, 9)]) == 484\n\ndef test_check():\n    check(max_product_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = abs(list1[i][0] * list1[j][1])\n                if product > max_product:\n                    max_product = product\n    return max_product\n\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0]) * abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0]) * abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = abs(list1[i][0] * list1[j][1])\n                if product > max_product:\n                    max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i == j:\n                continue\n            product = abs(list1[i][0] * list1[j][0]) * abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = abs(list1[i][0] * list1[j][0])\n                if product > max_product:\n                    max_product = product\n    return max_product\n\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 22)]))\nprint(max_product_tuple([(1, 2",
    "    return max(a * b for a, b in list1)\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0])\n            if product > max_product:\n                max_product = product\n    return max_product",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[i][1] * list1[j][0] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = abs(list1[i][0] * list1[j][0])\n                if product > max_product:\n                    max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for tup in list1:\n        if tup[0] * tup[1] > max_product:\n            max_product = tup[0] * tup[1]\n    return max_product\n\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i == j:\n                continue\n            product = abs(list1[i][0] * list1[j][0]) + abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0]) + abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]))\nprint(max_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12)]))",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = abs(list1[i][0] * list1[j][0])\n                if product > max_product:\n                    max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0]) * abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n",
    "    max_product = 0\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = abs(list1[i][0] * list1[j][0]) * abs(list1[i][1] * list1[j][1])\n            if product > max_product:\n                max_product = product\n    return max_product\n"
  ]
}
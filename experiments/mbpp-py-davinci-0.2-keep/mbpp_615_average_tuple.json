{
  "name": "mbpp_615_average_tuple",
  "language": "py",
  "prompt": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_615_average_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))",
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(tup) / len(tup) for tup in nums]",
    "    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))",
    "    return [sum(tup) / len(tup) for tup in nums]",
    "    return [sum(tup) / len(tup) for tup in nums]",
    "    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))))",
    "    return [sum(i) / len(i) for i in nums]",
    "    return [sum(tup) / len(tup) for tup in nums]",
    "    return [sum(i) / len(i) for i in nums]\n\n",
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))",
    "    return [sum(x)/len(x) for x in nums]",
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(x) / len(x) for x in nums]",
    "    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))",
    "    return [sum(x) / len(x) for x in nums]"
  ]
}
{
  "name": "mbpp_584_find_adverbs",
  "language": "py",
  "prompt": "def find_adverbs(text: str) -> str:\n    \"\"\"\n\tWrite a function to find the first adverb ending with ly and its positions in a given string.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('Clearly, he has no excuse for such behavior.') == '0-7: Clearly'\n    assert candidate('Please handle the situation carefuly') == '28-36: carefuly'\n    assert candidate('Complete the task quickly') == '18-25: quickly'\n\ndef test_check():\n    check(find_adverbs)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    text = text.split()\n    for i in range(len(text)):\n        if text[i].endswith('ly'):\n            return text[i], i\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    text = text.split()\n    for word in text:\n        if word.endswith('ly'):\n            return word, text.index(word)\n\n",
    "    return re.findall(r'\\b\\w+ly\\b', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\b\\w+ly\\b', text)\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n"
  ]
}
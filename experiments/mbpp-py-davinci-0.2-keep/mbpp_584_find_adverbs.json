{
  "name": "mbpp_584_find_adverbs",
  "language": "py",
  "prompt": "def find_adverbs(text: str) -> str:\n    \"\"\"\n\tWrite a function to find the first adverb ending with ly and its positions in a given string.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('Clearly, he has no excuse for such behavior.') == '0-7: Clearly'\n    assert candidate('Please handle the situation carefuly') == '28-36: carefuly'\n    assert candidate('Complete the task quickly') == '18-25: quickly'\n\ndef test_check():\n    check(find_adverbs)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    text = text.split()\n    for i in range(len(text)):\n        if text[i].endswith('ly'):\n            return text[i], i\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    text = text.split()\n    for word in text:\n        if word.endswith('ly'):\n            return word, text.index(word)\n\n",
    "    return re.findall(r'\\b\\w+ly\\b', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\b\\w+ly\\b', text)\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w*ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w*ly', text)\n\n",
    "    text = text.split()\n    for i, word in enumerate(text):\n        if word.endswith('ly'):\n            return word, i\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    return re.search(r'\\w+ly', text).group(), re.search(r'\\w+ly', text).span()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverb_list = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverb_list.append(word)\n    return adverb_list\n\n",
    "    adverbs = re.findall(r\"\\w+ly\", text)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.search(pattern, text).group()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = [word for word in text.split() if word.endswith(\"ly\")]\n    if adverbs:\n        return adverbs[0], text.find(adverbs[0])\n    return None\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n            break\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group()\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return [word for word in text.split() if word.endswith(\"ly\")]\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group(0)\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    import re\n    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\w+ly', text).group(0)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    # your code here\n    return None\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = re.findall(r'\\w+ly', text)\n    if adverbs:\n        return f'{adverbs[0]} - {text.find(adverbs[0])}'\n    return 'There are no adverbs in this text'\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\w+ly'\n    adverbs = re.findall(pattern, text)\n    return adverbs\n\n",
    "    # your code here\n    return None\n\n",
    "    pattern = r'\\b\\w*ly\\b'\n    adverbs = re.findall(pattern, text)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group()\n\n",
    "    text = text.split()\n    for i in range(len(text)):\n        if text[i].endswith('ly'):\n            return text[i], i\n    return '', -1\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    adverbs = re.findall(r'\\w+ly', text)\n    if adverbs:\n        return adverbs[0]\n    return ''\n\n",
    "    pattern = r\"\\w+ly\"\n    result = re.search(pattern, text)\n    if result:\n        return result.group(), result.span()\n    return \"\", ()\n\n",
    "    text = text.split()\n    for word in text:\n        if word.endswith(\"ly\"):\n            return word, text.index(word)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    text = text.split()\n    for word in text:\n        if word.endswith(\"ly\"):\n            return word, text.index(word)\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = re.findall(r'\\w+ly', text)\n    return adverbs[0] if adverbs else None\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group(0)\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    pass\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group(), re.search(r'\\b\\w+ly\\b', text).span()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r\"\\w+ly\", text).group(), re.search(r\"\\w+ly\", text).span()\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\b\\w+ly\\b', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    adverbs = re.findall(pattern, text)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w*ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group()\n\n",
    "    adverb = re.search(r'\\w+ly', text)\n    if adverb:\n        return adverb.group(), adverb.start(), adverb.end()\n    else:\n        return None\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\b\\w*ly\\b', text)\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = re.findall(r'\\w*ly', text)\n    if adverbs:\n        return adverbs[0]\n    return None\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    if adverbs:\n        return adverbs[0], text.find(adverbs[0])\n    else:\n        return \"\", -1\n\n",
    "    return re.findall(r'\\b\\w*ly\\b', text)\n\n",
    "    return re.search(r'\\b\\w+ly\\b', text).group()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    import re\n    return re.findall(r'\\w+ly', text)\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    adverbs = re.findall(r'\\b\\w+ly\\b', text)\n    if len(adverbs) == 0:\n        return 'There are no adverbs in the text'\n    else:\n        return f'The first adverb is {adverbs[0]} and it is in position {text.find(adverbs[0])}'\n\n\nprint(find_adverbs('She ran hurriedly towards the stadium.'))\nprint(find_adverbs('She ate the lasagne heartily and noisily.'))\nprint(find_adverbs('He hates potatoes!'))\nprint(find_adverbs('He was carefully disguised but captured quickly by the police.'))\nprint(find_adverbs('She works very efficiently.'))\nprint(find_adverbs('Python is a high level general purpose programming language that can be applied to many different classes of problems.'))",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = re.findall(r'\\w+ly', text)\n    if adverbs:\n        return adverbs[0]\n    return ''\n\n",
    "    pattern = r'\\w+ly'\n    result = re.findall(pattern, text)\n    return result\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    text = text.split()\n    for word in text:\n        if word.endswith(\"ly\"):\n            return word, text.index(word)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    return re.findall(r'\\w+ly', text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pattern = r'\\b\\w+ly\\b'\n    return re.findall(pattern, text)\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    pass\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = re.findall(r'\\b\\w+ly\\b', text)\n    if adverbs:\n        return adverbs[0]\n    return ''\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    for word in text.split():\n        if word.endswith('ly'):\n            return word, text.find(word)\n\n",
    "    return re.findall(r'\\b\\w*ly\\b', text)\n\n",
    "    text = text.split()\n    for i in range(len(text)):\n        if text[i].endswith('ly'):\n            return text[i], i\n\n",
    "    return re.search(r'\\w+ly', text).group()\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith(\"ly\"):\n            adverbs.append(word)\n    return adverbs\n\n",
    "    adverbs = []\n    for word in text.split():\n        if word.endswith('ly'):\n            adverbs.append(word)\n    return adverbs\n\n"
  ]
}
{
  "name": "mbpp_799_left_rotate",
  "language": "py",
  "prompt": "def left_rotate(n: int, d: int) -> int:\n    \"\"\"\n\tWrite a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_799_left_rotate.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(16, 2) == 64\n    assert candidate(10, 2) == 40\n    assert candidate(99, 3) == 792\n    assert candidate(99, 3) == 792\n    assert candidate(1, 3) == 8\n    assert candidate(5, 3) == 40\n    assert candidate(29, 3) == 232\n\ndef test_check():\n    check(left_rotate)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n",
    "    return (n << d) | (n >> (32 - d))\n\n"
  ]
}
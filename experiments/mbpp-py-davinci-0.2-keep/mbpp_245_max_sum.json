{
  "name": "mbpp_245_max_sum",
  "language": "py",
  "prompt": "from typing import List\n\ndef max_sum(arr: List[int]) -> int:\n    \"\"\"\n\tWrite a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194\n    assert candidate([80, 60, 30, 40, 20, 10]) == 210\n    assert candidate([2, 3, 14, 16, 21, 23, 29, 30]) == 138\n\ndef test_check():\n    check(max_sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if not arr:\n        return 0\n\n    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n        dec[n - i - 1] = max(dec[n - i] + arr[n - i - 1], arr[n - i - 1])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = dec[n - 1] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n        dec[n - 1 - i] = max(dec[n - i] + arr[n - 1 - i], arr[n - 1 - i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    # dp[i][0] = max sum ending at i, increasing\n    # dp[i][1] = max sum ending at i, decreasing\n    dp = [[0] * 2 for _ in range(n)]\n    dp[0][0] = arr[0]\n    dp[0][1] = arr[0]\n    for i in range(1, n):\n        dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + arr[i])\n        dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + arr[i])\n    return max(dp[n - 1][0], dp[n - 1][1])\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n",
    "    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return arr[0]\n    else:\n        max_sum = arr[0]\n        for i in range(1, len(arr)):\n            if arr[i] > arr[i-1]:\n                arr[i] = arr[i] + arr[i-1]\n            if arr[i] > max_sum:\n                max_sum = arr[i]\n        return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = -1\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    if not arr:\n        return 0\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    arr_with_zero = [0] + arr\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n    # reversed\n    arr_with_zero_reversed = [0] + arr[::-1]\n\n    # create a list of length len(arr) + 1\n    # where the first element is 0\n    # and the rest are the elements of arr\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max([inc[i] + dec[i] for i in range(n)])\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0 for _ in range(n)]\n    dec = [0 for _ in range(n)]\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i]+dec[i]-arr[i])\n    return max_sum\n",
    "    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr)\n    if len(arr) == 3:\n        return max(arr[0] + arr[2], arr[1])\n\n    # find max sum of increasing subsequence\n    inc = [0] * len(arr)\n    inc[0] = arr[0]\n    for i in range(1, len(arr)):\n        inc[i] = arr[i]\n        for j in range(i):\n            if arr[i] > arr[j] and inc[i] < inc[j] + arr[i]:\n                inc[i] = inc[j] + arr[i]\n\n    # find max sum of decreasing subsequence\n    dec = [0] * len(arr)\n    dec[-1] = arr[-1]\n    for i in range(len(arr) - 2, -1, -1):\n        dec[i] = arr[i]\n        for j in range(i + 1, len(arr)):\n            if arr[i] > arr[j] and dec[i] < dec[j] + arr[i]:\n                dec[i] = dec[j] + arr[i]\n\n    # find max sum of bitonic subsequence\n    max_sum = 0\n    for i in range(len(arr)):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n",
    "    n = len(arr)\n    lis = [1] * n\n    lds = [1] * n\n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + 1:\n                lds[i] = lds[j] + 1\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, lis[i] + lds[i] - 1)\n\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr)\n    max_sum = 0\n    for i in range(len(arr)):\n        curr_sum = 0\n        for j in range(i, len(arr)):\n            curr_sum += arr[j]\n            if curr_sum > max_sum:\n                max_sum = curr_sum\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    # TODO: Implement me\n    pass\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    if not arr:\n        return 0\n\n    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    dec[n - 1] = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr[0], arr[1])\n\n    # find the max sum of a strictly increasing subsequence\n    max_sum_inc = [0] * len(arr)\n    max_sum_inc[0] = arr[0]\n    for i in range(1, len(arr)):\n        max_sum_inc[i] = arr[i]\n        for j in range(i):\n            if arr[j] < arr[i]:\n                max_sum_inc[i] = max(max_sum_inc[i], max_sum_inc[j] + arr[i])\n\n    # find the max sum of a strictly decreasing subsequence\n    max_sum_dec = [0] * len(arr)\n    max_sum_dec[-1] = arr[-1]\n    for i in range(len(arr) - 2, -1, -1):\n        max_sum_dec[i] = arr[i]\n        for j in range(i + 1, len(arr)):\n            if arr[j] < arr[i]:\n                max_sum_dec[i] = max(max_sum_dec[i], max_sum_dec[j] + arr[i])\n\n    # find the max sum of a bitonic subsequence\n    max_sum_bitonic = [0] * len(arr)\n    for i in range(len(arr)):\n        max_sum_bitonic[i] = max_sum_inc[i] + max_sum_dec[i] - arr[i]\n\n    return max(max_sum_bitonic)\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    res = 0\n    for i in range(n):\n        res = max(res, inc[i] + dec[i] - arr[i])\n    return res\n\n",
    "    n = len(arr)\n    lis = [1] * n\n    lds = [1] * n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + 1:\n                lds[i] = lds[j] + 1\n    max_sum = lis[0] + lds[0] - 1\n    for i in range(1, n):\n        max_sum = max(max_sum, lis[i] + lds[i] - 1)\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i-1] + arr[i])\n    \n    for i in range(n-2, -1, -1):\n        dec[i] = max(arr[i], dec[i+1] + arr[i])\n    \n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    \n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    lis = [1] * n\n    lds = [1] * n\n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + 1:\n                lds[i] = lds[j] + 1\n\n    max_val = 0\n    for i in range(n):\n        max_val = max(max_val, lis[i] + lds[i] - 1)\n\n    return max_val\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr)\n    if len(arr) == 3:\n        return max(arr[0] + arr[2], arr[1])\n\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence is first increasing and then decreasing\n    # find the max sum of a bitonic subsequence\n    # where the subsequence",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    # TODO: Implement me\n    pass\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    left = [0] * n\n    right = [0] * n\n    left[0] = arr[0]\n    right[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        left[i] = max(left[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        right[i] = max(right[i + 1], arr[i])\n    sum = 0\n    for i in range(n):\n        sum += max(left[i], right[i]) - arr[i]\n    return sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    if not arr:\n        return 0\n\n    # find the max sum of increasing subsequence\n    inc = [arr[0]]\n    for i in range(1, len(arr)):\n        inc.append(max(inc[i - 1] + arr[i], arr[i]))\n\n    # find the max sum of decreasing subsequence\n    dec = [arr[-1]]\n    for i in range(len(arr) - 2, -1, -1):\n        dec.append(max(dec[-1] + arr[i], arr[i]))\n    dec.reverse()\n\n    # find the max sum of bitonic subsequence\n    max_sum = 0\n    for i in range(len(arr)):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    return max(inc[i] + dec[i] for i in range(n))\n",
    "    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return arr[0]\n    else:\n        max_sum = arr[0]\n        for i in range(1, len(arr)):\n            if arr[i] > arr[i-1]:\n                arr[i] += arr[i-1]\n            if arr[i] > max_sum:\n                max_sum = arr[i]\n        return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    if not arr:\n        return 0\n    n = len(arr)\n    dp = [0] * n\n    dp[0] = arr[0]\n    for i in range(1, n):\n        dp[i] = arr[i]\n        for j in range(i):\n            if arr[i] > arr[j] and dp[i] < dp[j] + arr[i]:\n                dp[i] = dp[j] + arr[i]\n    return max(dp)\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    res = 0\n    for i in range(n):\n        res = max(res, inc[i] + dec[i] - arr[i])\n    return res\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = inc[0] + dec[1]\n    for i in range(1, n - 1):\n        max_sum = max(max_sum, inc[i] + dec[i + 1])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    # TODO: Implement me\n    pass\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] for i in range(n))\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    ans = 0\n    for i in range(n):\n        ans = max(ans, inc[i] + dec[i] - arr[i])\n    return ans\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    # TODO: Implement me\n    pass\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = -float(\"inf\")\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0 for i in range(n)]\n    dec = [0 for i in range(n)]\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr)\n    if len(arr) == 3:\n        return max(arr[0] + arr[2], arr[1])\n    if len(arr) == 4:\n        return max(arr[0] + arr[2], arr[1] + arr[3])\n\n    max_sum = 0\n    for i in range(len(arr)):\n        if i == 0:\n            max_sum = max(max_sum, arr[i] + max_sum(arr[2:]))\n        elif i == len(arr) - 1:\n            max_sum = max(max_sum, arr[i] + max_sum(arr[:-2]))\n        else:\n            max_sum = max(max_sum, arr[i] + max_sum(arr[:i - 1]) + max_sum(arr[i + 2:]))\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n\n    dec[n - 1] = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    if not arr:\n        return 0\n\n    # Find the max sum of increasing subsequence\n    inc = [0] * len(arr)\n    inc[0] = arr[0]\n    for i in range(1, len(arr)):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    # Find the max sum of decreasing subsequence\n    dec = [0] * len(arr)\n    dec[-1] = arr[-1]\n    for i in range(len(arr) - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    # Find the max sum of bitonic subsequence\n    bitonic = [0] * len(arr)\n    for i in range(len(arr)):\n        bitonic[i] = inc[i] + dec[i] - arr[i]\n\n    return max(bitonic)",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    dec[n - 1] = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0 for _ in range(n)]\n    dec = [0 for _ in range(n)]\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    dec[n - 1] = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    dec[n - 1] = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n    return max(inc[i] + dec[i+1] for i in range(n-1))",
    "    # TODO: Implement me\n    return 0\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    if not arr:\n        return 0\n    n = len(arr)\n    dp = [0] * n\n    dp[0] = arr[0]\n    for i in range(1, n):\n        dp[i] = arr[i]\n        for j in range(i):\n            if arr[j] < arr[i]:\n                dp[i] = max(dp[i], dp[j] + arr[i])\n    return max(dp)\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max(inc[i] + dec[i + 1] for i in range(n - 1))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr[0], arr[1])\n    return max(max_sum(arr[:-1]), max_sum(arr[1:]))\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1] + arr[i], arr[i])\n\n    dec[n-1] = arr[n-1]\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1] + arr[i], arr[i])\n\n    max_sum = inc[0] + dec[1]\n    for i in range(1, n-1):\n        max_sum = max(max_sum, inc[i] + dec[i+1])\n\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = arr[i]\n        for j in range(i):\n            if arr[j] < arr[i]:\n                inc[i] = max(inc[i], inc[j] + arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = arr[i]\n        for j in range(i+1, n):\n            if arr[j] < arr[i]:\n                dec[i] = max(dec[i], dec[j] + arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    lis = [0] * n\n    lds = [0] * n\n\n    for i in range(n):\n        lis[i] = arr[i]\n\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + arr[i]:\n                lis[i] = lis[j] + arr[i]\n\n    for i in range(n):\n        lds[i] = arr[i]\n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + arr[i]:\n                lds[i] = lds[j] + arr[i]\n\n    max_sum = lis[0] + lds[0] - arr[0]\n\n    for i in range(1, n):\n        max_sum = max(max_sum, lis[i] + lds[i] - arr[i])\n\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    dec[n - 1] = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    lis = [1] * n\n    lds = [1] * n\n\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + 1:\n                lds[i] = lds[j] + 1\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, lis[i] + lds[i] - 1)\n\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))",
    "    if not arr:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr[0], arr[1])\n\n    # find the max sum of increasing subsequence\n    inc = [arr[0]]\n    for i in range(1, len(arr)):\n        inc.append(max(inc[i - 1] + arr[i], arr[i]))\n\n    # find the max sum of decreasing subsequence\n    dec = [arr[-1]]\n    for i in range(len(arr) - 2, -1, -1):\n        dec.append(max(dec[-1] + arr[i], arr[i]))\n    dec.reverse()\n\n    # find the max sum of bitonic subsequence\n    max_sum = 0\n    for i in range(len(arr)):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in range(1, n):\n        inc[i] = max(inc[i-1], arr[i])\n    for i in range(n-2, -1, -1):\n        dec[i] = max(dec[i+1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    lis = [1] * n\n    lds = [1] * n\n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + 1:\n                lds[i] = lds[j] + 1\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, lis[i] + lds[i] - 1)\n\n    return max_sum\n\n",
    "    n = len(arr)\n    lis = [1] * n\n    lds = [1] * n\n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(n - 1, i, -1):\n            if arr[i] > arr[j] and lds[i] < lds[j] + 1:\n                lds[i] = lds[j] + 1\n\n    max_sum = lis[0] + lds[0] - 1\n    for i in range(1, n):\n        max_sum = max(max_sum, lis[i] + lds[i] - 1)\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] - arr[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max(inc[i] + dec[i + 1] for i in range(n - 1))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max([inc[i] + dec[i] for i in range(n)])\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    if len(arr) == 0:\n        return 0\n\n    dp = [0] * len(arr)\n    dp[0] = arr[0]\n\n    for i in range(1, len(arr)):\n        dp[i] = arr[i]\n        for j in range(i):\n            if arr[j] < arr[i]:\n                dp[i] = max(dp[i], dp[j] + arr[i])\n\n    return max(dp)\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return max(arr[0], arr[1])\n    max_sum = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > arr[i-1]:\n            arr[i] += arr[i-1]\n        max_sum = max(max_sum, arr[i])\n    return max_sum\n\nprint(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]))\nprint(max_sum([80, 60, 30, 40, 20, 10]))\nprint(max_sum([1, 2, 3, 4]))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1], arr[i])\n\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1], arr[i])\n\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    return max(inc[i] + dec[i] - arr[i] for i in range(n))",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n\n",
    "    n = len(arr)\n    inc = [0] * n\n    dec = [0] * n\n    inc[0] = arr[0]\n    dec[n - 1] = arr[n - 1]\n    for i in range(1, n):\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    for i in range(n - 2, -1, -1):\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    return max_sum\n"
  ]
}
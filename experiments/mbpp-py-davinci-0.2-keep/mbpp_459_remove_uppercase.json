{
  "name": "mbpp_459_remove_uppercase",
  "language": "py",
  "prompt": "def remove_uppercase(str1: str) -> str:\n    \"\"\"\n\tWrite a function to remove uppercase substrings from a given string.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_459_remove_uppercase.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('cAstyoUrFavoRitETVshoWs') == 'cstyoravoitshos'\n    assert candidate('wAtchTheinTernEtrAdIo') == 'wtchheinerntrdo'\n    assert candidate('VoicESeaRchAndreComMendaTionS') == 'oiceachndreomendaion'\n\ndef test_check():\n    check(remove_uppercase)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return re.sub(r\"[A-Z]+\", \"\", str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join([x for x in str1 if x.islower()])\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(str1[0], \"\")\n\n\nprint(remove_uppercase(\"ABC\"))\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join([i for i in str1 if i.islower()])\n\n"
  ]
}
{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "py",
  "prompt": "from typing import List\n\ndef max_sub_array_sum(a: List[int], size: int) -> int:\n    \"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7\n    assert candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8\n    assert candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10\n\ndef test_check():\n    check(max_sub_array_sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        elif max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -float('inf')\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        elif max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        elif max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        elif max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -float('inf')\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = -float('inf')\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting index %d\" % (start))\n    print(\"Ending index %d\" % (end))\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        elif max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -float('inf')\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = -1000000\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n    for i in range(0, size):\n        max_ending_here += a[i]\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        elif max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = -sys.maxsize - 1\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n    return max_so_far\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\n\n",
    "    max_so_far = a[0]\n    curr_max = a[0]\n\n    for i in range(1, size):\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0:\n            max_ending_here = 0\n\n        # Do not compare for all elements. Compare only\n        # when  max_ending_here > 0\n        elif (max_so_far < max_ending_here):\n            max_so_far = max_ending_here\n\n    return max_so_far\n\n",
    "    max_so_far = 0\n    max_ending_here = 0\n    start = 0\n    end = 0\n    s = 0\n\n    for i in range(0, size):\n        max_ending_here += a[i]\n\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n            start = s\n            end = i\n\n        if max_ending_here < 0:\n            max_ending_here = 0\n            s = i + 1\n\n    print(\"Maximum contiguous sum is %d\" % (max_so_far))\n    print(\"Starting Index %d\" % (start))\n    print(\"Ending Index %d\" % (end))\n\n"
  ]
}
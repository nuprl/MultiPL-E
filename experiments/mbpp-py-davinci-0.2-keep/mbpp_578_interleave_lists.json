{
  "name": "mbpp_578_interleave_lists",
  "language": "py",
  "prompt": "from typing import List\n\ndef interleave_lists(list1: List[int], list2: List[int], list3: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a function to interleave 3 lists of the same length into a single flat list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_578_interleave_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]) == [1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]\n    assert candidate([10, 20], [15, 2], [5, 10]) == [10, 15, 5, 20, 2, 10]\n    assert candidate([11, 44], [10, 15], [20, 5]) == [11, 10, 20, 44, 15, 5]\n\ndef test_check():\n    check(interleave_lists)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [list1[i] for i in range(len(list1))] + [list2[i] for i in range(len(list2))] + [list3[i] for i in range(len(list3))]\n\nprint(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]))\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [item for sublist in zip(list1, list2, list3) for item in sublist]\n",
    "    interleaved_list = []\n    for i in range(len(list1)):\n        interleaved_list.append(list1[i])\n        interleaved_list.append(list2[i])\n        interleaved_list.append(list3[i])\n\n    return interleaved_list\n",
    "    pass",
    "    return [list1[i] for i in range(len(list1))] + [list2[i] for i in range(len(list2))] + [list3[i] for i in range(len(list3))]\n\nprint(interleave_lists([1, 2, 3], ['a', 'b', 'c'], [True, False, True]))",
    "    return [item for sublist in zip(list1, list2, list3) for item in sublist]\n\nprint(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]))",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [item for t in zip(list1, list2, list3) for item in t]\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [item for tup in zip(list1, list2, list3) for item in tup]\n",
    "    # TODO: Implement this function\n    pass\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n\nprint(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]))",
    "    return [item for t in zip(list1, list2, list3) for item in t]\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n",
    "    return [item for t in zip(list1, list2, list3) for item in t]\n",
    "    return [x for t in zip(list1, list2, list3) for x in t]\n"
  ]
}
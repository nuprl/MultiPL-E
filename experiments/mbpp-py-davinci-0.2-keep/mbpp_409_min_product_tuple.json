{
  "name": "mbpp_409_min_product_tuple",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef min_product_tuple(list1: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to find the minimum product from the pairs of tuples within a given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_409_min_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([(2, 7), (2, 6), (1, 8), (4, 9)]) == 8\n    assert candidate([(10, 20), (15, 2), (5, 10)]) == 30\n    assert candidate([(11, 44), (10, 15), (20, 5), (12, 9)]) == 100\n\ndef test_check():\n    check(min_product_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return min([x[0] * x[1] for x in list1])\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = None\n    for tup in list1:\n        if min_product is None:\n            min_product = tup[0] * tup[1]\n        else:\n            min_product = min(min_product, tup[0] * tup[1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            min_product = min(min_product, product)\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    return min(list1, key=lambda x: x[0] * x[1])[0] * min(list1, key=lambda x: x[0] * x[1])[1]",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10), (11,12)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20)]))\nprint(min_product_tuple([(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22)]))\nprint(min_product_tuple([(1,2), (3,4),",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = list1[i][0] * list1[j][1]\n                if min_product is None:\n                    min_product = product\n                elif product < min_product:\n                    min_product = product\n    return min_product",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            min_product = min(min_product, product)\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = None\n    for tup in list1:\n        product = tup[0] * tup[1]\n        if min_product is None or product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = None\n    for i in list1:\n        for j in list1:\n            if i != j:\n                product = i[0] * i[1] * j[0] * j[1]\n                if min_product is None or product < min_product:\n                    min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = math.inf\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n                if product < min_product:\n                    min_product = product\n    return min_product\n",
    "    min_prod = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        prod = list1[i][0] * list1[i][1]\n        if prod < min_prod:\n            min_prod = prod\n    return min_prod\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0])\n            min_product = min(min_product, list1[i][1] * list1[j][1])\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n            min_product = min(min_product, list1[i][1] * list1[j][0])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n",
    "    return min(x[0] * x[1] for x in list1)\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_prod = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            prod = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if prod < min_prod:\n                min_prod = prod\n    return min_prod\n\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 3), (0, 2)]))\nprint(min_product_tuple([(1, 1), (1, 1), (1, 1)]))",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(len(list1)):\n        for j in range(len(list1[i])):\n            if list1[i][j] * list1[i][j+1] < min_product:\n                min_product = list1[i][j] * list1[i][j+1]\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    return min([i[0] * i[1] for i in list1])\n",
    "    min_product = float('inf')\n    for tup in list1:\n        if tup[0] * tup[1] < min_product:\n            min_product = tup[0] * tup[1]\n    return min_product\n",
    "    return min(map(lambda x: x[0] * x[1], list1))\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    return min([a * b for a, b in list1])\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            if list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1] < min_product:\n                min_product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n    return min_product\n",
    "    min_product = None\n    for tup in list1:\n        if min_product is None:\n            min_product = tup[0] * tup[1]\n        else:\n            min_product = min(min_product, tup[0] * tup[1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(len(list1)):\n        for j in range(len(list1[i])):\n            if list1[i][j] * list1[i][j+1] < min_product:\n                min_product = list1[i][j] * list1[i][j+1]\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1) - 1):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = None\n    for i in list1:\n        if min_product is None:\n            min_product = i[0] * i[1]\n        else:\n            min_product = min(min_product, i[0] * i[1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    return min(map(lambda x: x[0] * x[1], list1))\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in list1:\n        if i[0] * i[1] < min_product:\n            min_product = i[0] * i[1]\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_prod = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            prod = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if prod < min_prod:\n                min_prod = prod\n    return min_prod\n",
    "    return min(list(map(lambda x: x[0] * x[1], list1)))\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    return min(map(lambda x: x[0] * x[1], list1))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    list1.sort(key=lambda x: x[0] * x[1])\n    return list1[0][0] * list1[0][1]\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if min_product > list1[i][0] * list1[i][1]:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = None\n    for tup in list1:\n        product = tup[0] * tup[1]\n        if min_product is None or product < min_product:\n            min_product = product\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_prod = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            prod = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if prod < min_prod:\n                min_prod = prod\n    return min_prod\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = list1[i][0] * list1[j][0]\n                if min_product is None or product < min_product:\n                    min_product = product\n    return min_product\n",
    "    list1.sort(key=lambda x: x[0]*x[1])\n    return list1[0][0]*list1[0][1]\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    return min([a * b for a, b in list1])\n",
    "    return min(map(lambda x: x[0] * x[1], list1))\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_prod = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            prod = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if prod < min_prod:\n                min_prod = prod\n    return min_prod\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    list1.sort(key=lambda x: x[0] * x[1])\n    return list1[0][0] * list1[0][1]\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    return min(map(lambda x: x[0] * x[1], list1))\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for tup1 in list1:\n        for tup2 in list1:\n            if tup1 != tup2:\n                product = tup1[0] * tup2[0] + tup1[1] * tup2[1]\n                if product < min_product:\n                    min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8)]))\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = None\n    for tup in list1:\n        if min_product is None:\n            min_product = tup[0] * tup[1]\n        else:\n            min_product = min(min_product, tup[0] * tup[1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in list1:\n        if i[0] * i[1] < min_product:\n            min_product = i[0] * i[1]\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                min_product = min(min_product, list1[i][0] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    return min(map(lambda x: x[0] * x[1], list1))\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        if list1[i][0] * list1[i][1] < min_product:\n            min_product = list1[i][0] * list1[i][1]\n    return min_product\n\nprint(min_product_tuple([(1, 2), (3, 4), (5, 6)]))",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(len(list1)):\n            if i != j:\n                product = list1[i][0] * list1[j][1]\n                if product < min_product:\n                    min_product = product\n    return min_product\n",
    "    min_product = None\n    for tup in list1:\n        if min_product is None:\n            min_product = tup[0] * tup[1]\n        else:\n            min_product = min(min_product, tup[0] * tup[1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in list1:\n        if i[0] * i[1] < min_product:\n            min_product = i[0] * i[1]\n    return min_product\n\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(len(list1)):\n        for j in range(len(list1[i])):\n            if list1[i][j] * list1[i][j+1] < min_product:\n                min_product = list1[i][j] * list1[i][j+1]\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    return min(x[0] * x[1] for x in list1)\n",
    "    min_product = float(\"inf\")\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if product < min_product:\n                min_product = product\n    return min_product\n",
    "    return min([x[0] * x[1] for x in list1])\n",
    "    min_product = None\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            product = list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1]\n            if min_product is None or product < min_product:\n                min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i + 1, len(list1)):\n            min_product = min(min_product, list1[i][0] * list1[j][0] + list1[i][1] * list1[j][1])\n    return min_product\n\nprint(min_product_tuple([(1,2), (3,4), (5,6)]))",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = float('inf')\n    for i in range(len(list1)):\n        for j in range(i+1, len(list1)):\n            min_product = min(min_product, list1[i][0]*list1[j][0] + list1[i][1]*list1[j][1])\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n",
    "    min_product = list1[0][0] * list1[0][1]\n    for i in range(1, len(list1)):\n        product = list1[i][0] * list1[i][1]\n        if product < min_product:\n            min_product = product\n    return min_product\n"
  ]
}
{
  "name": "mbpp_626_triangle_area",
  "language": "py",
  "prompt": "from typing import Optional\n\ndef triangle_area(r: int) -> Optional[int]:\n    \"\"\"\n\tWrite a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(-1) == None\n    assert candidate(0) == 0\n    assert candidate(2) == 4\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r**2 * math.sqrt(3))/4\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2) * math.sqrt(3) / 4\n",
    "    if r <= 0:\n        return None\n    return (r**2 * math.sqrt(3))/4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2) * (math.sqrt(3) / 4)\n\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r**2 * math.sqrt(3))/4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    return (r**2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2) * (math.sqrt(3) / 4)\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r**2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2) * math.pi / 2\n",
    "    if r <= 0:\n        return None\n    return (r ** 2) * math.sqrt(3) / 4\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 2\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 4\n",
    "    if r <= 0:\n        return None\n    else:\n        return (r ** 2) * math.sqrt(3) / 4\n",
    "    if r <= 0:\n        return None\n    return (r ** 2 * math.sqrt(3)) / 4\n\n"
  ]
}
{
  "name": "mbpp_760_unique_Element",
  "language": "py",
  "prompt": "from typing import List\n\ndef unique_Element(arr: List[int]) -> bool:\n    \"\"\"\n\tWrite a python function to check whether a list of numbers contains only one distinct element or not.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 1, 1]) == True\n    assert candidate([1, 2, 1, 2]) == False\n    assert candidate([1, 2, 3, 4, 5]) == False\n\ndef test_check():\n    check(unique_Element)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1]))\nprint(unique_Element([1,2,3,4,5]))",
    "    if len(arr) == len(set(arr)):\n        return True\n    else:\n        return False\n\nprint(unique_Element([1,2,3,4,5,6,7,8,9,10]))\nprint(unique_Element([1,2,3,4,5,6,7,8,9,10,10]))",
    "    if len(arr) == 1:\n        return True\n    else:\n        for i in range(0, len(arr)):\n            for j in range(i+1, len(arr)):\n                if arr[i] == arr[j]:\n                    return False\n        return True\n",
    "    return len(set(arr)) == 1\n",
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1]))\nprint(unique_Element([1,2,3,4,5]))",
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1]))",
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1]))\nprint(unique_Element([1,2,3,4,5]))",
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    if len(arr) == 0:\n        return False\n    elif len(arr) == 1:\n        return True\n    else:\n        for i in range(len(arr)):\n            for j in range(i+1, len(arr)):\n                if arr[i] == arr[j]:\n                    return False\n        return True\n",
    "    if len(arr) == 1:\n        return True\n    else:\n        return False\n\nprint(unique_Element([1]))\nprint(unique_Element([1,1,1,1,1]))\nprint(unique_Element([1,2,3,4,5]))",
    "    if len(arr) == 1:\n        return True\n    else:\n        return False\n",
    "    return len(arr) == arr.count(arr[0])\n",
    "    if len(arr) == 1:\n        return True\n    else:\n        return False\n\nprint(unique_Element([1]))",
    "    return len(set(arr)) == 1\n\nprint(unique_Element([1,1,1,1,1]))",
    "    return len(arr) == arr.count(arr[0])\n\nprint(unique_Element([1,1,1,1,1]))\nprint(unique_Element([1,2,3,4,5]))",
    "    if len(arr) == 1:\n        return True\n    else:\n        for i in range(len(arr)):\n            if arr[i] != arr[i+1]:\n                return False\n        return True\n\nprint(unique_Element([1,2,3,4,5,6]))",
    "    return len(set(arr)) == 1\n\n",
    "    if len(arr) == len(set(arr)):\n        return True\n    else:\n        return False\n\n",
    "    if len(arr) == 1:\n        return True\n    else:\n        return False\n\nprint(unique_Element([1,2,3]))\nprint(unique_Element([1]))"
  ]
}
{
  "name": "mbpp_595_min_Swaps",
  "language": "py",
  "prompt": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    if str1 == str2:\n        return 0\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    # Write your code here\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\nprint(min_Swaps(\"1101\", \"0101\"))\nprint(min_Swaps(\"10011\", \"11100\"))\nprint(min_Swaps(\"11010101\", \"01010101\"))",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count - 1\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    # Write your code here\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return int(count/2)\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    # count the number of 1s in str1\n    count = 0\n    for i in str1:\n        if i == '1':\n            count += 1\n    # count the number of 1s in str2\n    count2 = 0\n    for i in str2:\n        if i == '1':\n            count2 += 1\n    # compare the number of 1s in str1 and str2\n    if count == count2:\n        return 0\n    else:\n        return abs(count - count2)\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    # write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    # Write your code here\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    else:\n        count = 0\n        for i in range(len(str1)):\n            if str1[i] != str2[i]:\n                count += 1\n        return count\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\nprint(min_Swaps(\"11001\", \"01111\"))",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2",
    "    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n",
    "    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n"
  ]
}
{
  "name": "mbpp_267_square_Sum",
  "language": "py",
  "prompt": "def square_Sum(n: int) -> int:\n    \"\"\"\n\tWrite a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(2) == 10\n    assert candidate(3) == 35\n    assert candidate(4) == 84\n\ndef test_check():\n    check(square_Sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1) if i % 2 != 0)\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i**2 for i in range(1, n*2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1) if i % 2 != 0)\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(x ** 2 for x in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    if n < 1:\n        return 0\n    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([x ** 2 for x in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i**2 for i in range(1, n*2, 2)])\n\n",
    "    if n < 0:\n        return 0\n    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i**2 for i in range(1, n+1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n + 1) if i % 2 != 0])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n + 1) if i % 2 != 0])\n\n",
    "    return sum(x ** 2 for x in range(1, n + 1, 2))\n\n",
    "    return sum(map(lambda x: x**2, range(1, n*2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    if n < 0:\n        return 0\n    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    if n <= 0:\n        return 0\n    else:\n        return (2 * n - 1) ** 2 + square_Sum(n - 1)\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n + 1) if i % 2 != 0])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n + 1) if i % 2 != 0])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i**2 for i in range(1, n*2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    if n < 0:\n        return 0\n    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum(x ** 2 for x in range(1, n * 2, 2))\n\n",
    "    if n < 0:\n        return -1\n    else:\n        return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([x**2 for x in range(1, n*2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(x ** 2 for x in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([x ** 2 for x in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    if n == 0:\n        return 0\n    else:\n        return (2 * n - 1) ** 2 + square_Sum(n - 1)\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    if n < 0:\n        return -1\n    else:\n        return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i**2 for i in range(1, n+1) if i % 2 != 0])\n\n",
    "    return sum([x ** 2 for x in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    if n < 0:\n        return 0\n    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n + 1, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(map(lambda x: x ** 2, filter(lambda x: x % 2 != 0, range(1, n + 1))))\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum([i**2 for i in range(1, n*2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n + 1, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    if n <= 0:\n        return 0\n    return sum(map(lambda x: x ** 2, range(1, n * 2, 2)))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n",
    "    return sum([x ** 2 for x in range(1, n * 2, 2)])\n\n",
    "    return sum(i ** 2 for i in range(1, n * 2, 2))\n\n",
    "    return sum([i ** 2 for i in range(1, n * 2, 2)])\n\n"
  ]
}
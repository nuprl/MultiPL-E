{
  "name": "mbpp_130_max_occurrences",
  "language": "py",
  "prompt": "from typing import List\n\ndef max_occurrences(nums: List[int]) -> int:\n    \"\"\"\n\tWrite a function to find the item with maximum frequency in a given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]) == 2\n    assert candidate([2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]) == 8\n    assert candidate([10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]) == 20\n\ndef test_check():\n    check(max_occurrences)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return max(nums, key=nums.count)\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))",
    "    # Create a dictionary to store the frequency of each number\n    freq = {}\n    for num in nums:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    # Find the maximum frequency\n    max_freq = 0\n    for key in freq:\n        if freq[key] > max_freq:\n            max_freq = freq[key]\n    return max_freq\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3",
    "    return max(nums, key=nums.count)\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            if curr_count > max_count:\n                max_count = curr_count\n                res = nums[i - 1]\n            curr_count = 1\n    if curr_count > max_count:\n        max_count = curr_count\n        res = nums[-1]\n    return res\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n\n    max_value = 0\n    for key, value in nums_dict.items():\n        if value > max_value:\n            max_value = value\n\n    return max_value",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_freq = 0\n    for num in nums_dict:\n        if nums_dict[num] > max_freq:\n            max_freq = nums_dict[num]\n    return max_freq\n\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num not in num_count:\n            num_count[num] = 1\n        else:\n            num_count[num] += 1\n        max_count = max(max_count, num_count[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_num = max(nums)\n    min_num = min(nums)\n    num_range = max_num - min_num + 1\n    count = [0] * num_range\n    for num in nums:\n        count[num - min_num] += 1\n    max_count = max(count)\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            curr_freq = 1\n        max_freq = max(max_freq, curr_freq)\n\n    return max_freq\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    return res\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 0\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    max_count = 0\n    for key, value in count.items():\n        if value > max_count:\n            max_count = value\n    return max_count\n\nprint(max_occurrences([1, 2, 3, 3, 3, 3, 4, 5, 6, 6, 6, 6, 6]))",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 0\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    return res\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    return max(Counter(nums).values())\n",
    "    if len(nums) == 0:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count",
    "    nums.sort()\n    max_count = 0\n    max_num = nums[0]\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            if curr_count > max_count:\n                max_count = curr_count\n                max_num = nums[i-1]\n            curr_count = 1\n    if curr_count > max_count:\n        max_count = curr_count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n    return max(count.values())\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n",
    "    if not nums:\n        return 0\n    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    max_val = max(d.values())\n    return max_val\n",
    "    if not nums:\n        return 0\n    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    max_count = 0\n    for k, v in d.items():\n        if v > max_count:\n            max_count = v\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n    max_count = 0\n    max_item = None\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n        if count[num] > max_count:\n            max_count = count[num]\n            max_item = num\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    # TODO: Implement me\n    pass\n",
    "    return max(set(nums), key=nums.count)",
    "    if len(nums) == 0:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    nums.sort()\n    max_count = 0\n    max_item = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_item = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_item = nums[-1]\n    return max_item, max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3]))",
    "    return max(Counter(nums).values())\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    max_count = max(count.values())\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        max_count = max(max_count, num_count[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_value = max(nums_dict.values())\n    return max_value\n",
    "    nums.sort()\n    max_count = 0\n    max_num = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    # TODO: Implement this function\n    pass\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    return res\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    max_item = None\n    count_dict = {}\n    for num in nums:\n        if num not in count_dict:\n            count_dict[num] = 1\n        else:\n            count_dict[num] += 1\n        if count_dict[num] > max_count:\n            max_count = count_dict[num]\n            max_item = num\n    return max_item\n",
    "    # TODO: implement this function\n    pass\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    res = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            res = max(res, count)\n            count = 1\n    return max(res, count)\n",
    "    if nums == []:\n        return 0\n    else:\n        nums.sort()\n        count = 1\n        max_count = 1\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i-1]:\n                count += 1\n            else:\n                count = 1\n            if count > max_count:\n                max_count = count\n        return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    count = {}\n    for i in nums:\n        if i not in count:\n            count[i] = 1\n        else:\n            count[i] += 1\n        max_count = max(max_count, count[i])\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_freq = 0\n    num_freq = {}\n    for num in nums:\n        if num in num_freq:\n            num_freq[num] += 1\n        else:\n            num_freq[num] = 1\n        max_freq = max(max_freq, num_freq[num])\n    return max_freq\n",
    "    if len(nums) == 0:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    if not nums:\n        return 0\n    counter = {}\n    for num in nums:\n        if num in counter:\n            counter[num] += 1\n        else:\n            counter[num] = 1\n    max_count = 0\n    for key in counter:\n        if counter[key] > max_count:\n            max_count = counter[key]\n    return max_count",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    return max(count.values())",
    "    nums.sort()\n    max_count = 0\n    max_num = None\n    curr_num = nums[0]\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == curr_num:\n            curr_count += 1\n        else:\n            if curr_count > max_count:\n                max_count = curr_count\n                max_num = curr_num\n            curr_num = nums[i]\n            curr_count = 1\n    if curr_count > max_count:\n        max_count = curr_count\n        max_num = curr_num\n    return max_num, max_count\n\n",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n\nprint(max_occurrences([1, 2, 2, 3, 3, 3, 4, 4, 4, 4]))\nprint(max_occurrences([1, 2, 3, 4]))\nprint(max_occurrences([1, 1, 2, 2, 3, 3, 4, 4]))\nprint(max_occurrences([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4]))\nprint(max_occurrences([1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4]))\nprint(max_occurrences([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4]))\nprint(max_occurrences([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4]))\nprint(max_occurrences([1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4]))\nprint(max_occurrences([1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    return max(nums, key=nums.count)\n\n",
    "    max_count = 0\n    max_item = None\n    for item in nums:\n        count = nums.count(item)\n        if count > max_count:\n            max_count = count\n            max_item = item\n    return max_item\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_value = max(nums_dict.values())\n    return max_value\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    count = 1\n    max_count = 1\n    max_num = nums[0]\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n            max_num = nums[i]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    max_occur = 0\n    occur_dict = {}\n    for num in nums:\n        if num not in occur_dict:\n            occur_dict[num] = 1\n        else:\n            occur_dict[num] += 1\n        max_occur = max(max_occur, occur_dict[num])\n    return max_occur\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    return res\n",
    "    d = {}\n    for i in nums:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    return max(d.values())\n",
    "    max_count = 0\n    max_num = None\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n            max_num = num\n    return max_num\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    return max(set(nums), key=nums.count)",
    "    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 1\n    else:\n        nums.sort()\n        max_count = 1\n        count = 1\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i - 1]:\n                count += 1\n            else:\n                count = 1\n            if count > max_count:\n                max_count = count\n        return max_count",
    "    nums.sort()\n    count = 1\n    max_count = 1\n    max_num = nums[0]\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n            max_num = nums[i]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n",
    "    nums.sort()\n    max_count = 0\n    max_num = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    return max(Counter(nums).values())\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n\n    return max_item\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]))",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    return res\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(count, max_count)\n    return max_count\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_val = 0\n    for key in nums_dict:\n        if nums_dict[key] > max_val:\n            max_val = nums_dict[key]\n    return max_val\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())",
    "    if not nums:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    return max(count.values())",
    "    if len(nums) == 0:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    max_count = max(max_count, count)\n    return max_count\n",
    "    return max(nums, key=nums.count)\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44",
    "    if not nums:\n        return 0\n    max_count = 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n        max_count = max(max_count, count[num])\n    return max_count\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_val = max(nums_dict.values())\n    return max_val\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    max_count = 0\n    max_item = None\n    for num in nums:\n        count = nums.count(num)\n        if count > max_count:\n            max_count = count\n            max_item = num\n    return max_item\n\n",
    "    if not nums:\n        return 0\n    max_num = max(nums)\n    min_num = min(nums)\n    count = [0] * (max_num - min_num + 1)\n    for num in nums:\n        count[num - min_num] += 1\n    return max(count)\n",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1]))",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    nums_dict = {}\n    for num in nums:\n        if num not in nums_dict:\n            nums_dict[num] = 1\n        else:\n            nums_dict[num] += 1\n        if nums_dict[num] > max_count:\n            max_count = nums_dict[num]\n    return max_count\n\n",
    "    if len(nums) == 0:\n        return 0\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    cur_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            cur_count += 1\n        else:\n            max_count = max(max_count, cur_count)\n            cur_count = 1\n    return max(max_count, cur_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    curr_num = nums[0]\n    curr_count = 1\n    max_num = curr_num\n    max_count = curr_count\n    for i in range(1, len(nums)):\n        if nums[i] == curr_num:\n            curr_count += 1\n        else:\n            if curr_count > max_count:\n                max_count = curr_count\n                max_num = curr_num\n            curr_num = nums[i]\n            curr_count = 1\n    if curr_count > max_count:\n        max_count = curr_count\n        max_num = curr_num\n    return max_count\n\n",
    "    return max(Counter(nums).values())\n",
    "    nums.sort()\n    max_occur = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_occur:\n                max_occur = count\n                max_num = nums[i]\n            count = 1\n    if count > max_occur:\n        max_occur = count\n        max_num = nums[i]\n    return max_num\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        if num not in d:\n            d[num] = 1\n        else:\n            d[num] += 1\n    return max(d.values())\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    # TODO: Implement this function\n    pass\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_num = nums[0]\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    return max_num\n",
    "    nums.sort()\n    max_freq = 0\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    d = {}\n    for num in nums:\n        if num not in d:\n            d[num] = 1\n        else:\n            d[num] += 1\n    max_freq = 0\n    for key in d:\n        if d[key] > max_freq:\n            max_freq = d[key]\n    return max_freq\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]))",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n            max_count = max(max_count, count)\n        else:\n            count = 1\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    max_count = max(max_count, count)\n    return max_count",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num not in counts:\n            counts[num] = 0\n        counts[num] += 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    max_count = max(max_count, count)\n    return max_count\n",
    "    return max(Counter(nums).values())\n",
    "    max_count = 0\n    max_item = None\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n        if count[num] > max_count:\n            max_count = count[num]\n            max_item = num\n    return max_item\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n\n",
    "    nums.sort()\n    max_count = 0\n    max_item = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_item = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_item = nums[-1]\n    return max_item\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        count[num] = count.get(num, 0) + 1\n    return max(count.values())\n",
    "    if len(nums) == 0:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    max_count = max(max_count, curr_count)\n    return max_count\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_freq += 1\n        else:\n            curr_freq = 1\n        max_freq = max(max_freq, curr_freq)\n    return max_freq\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    cur_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            cur_count += 1\n        else:\n            max_count = max(max_count, cur_count)\n            cur_count = 1\n    return max(max_count, cur_count)\n",
    "    nums.sort()\n    max_num = nums[0]\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n\n    return res\n\n",
    "    nums.sort()\n    max_count = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n            count = 1\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n\n",
    "    max_count = 0\n    max_item = None\n    for item in nums:\n        count = nums.count(item)\n        if count > max_count:\n            max_count = count\n            max_item = item\n    return max_item\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(count, max_count)\n            count = 1\n    return max(count, max_count)\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    max_val = max(d.values())\n    return max_val\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(curr_count, max_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    count = {}\n    for i in nums:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n    max_count = 0\n    for i in count:\n        if count[i] > max_count:\n            max_count = count[i]\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    return max(Counter(nums).values())\n\n",
    "    if not nums:\n        return 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return max(num_count.values())",
    "    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 1\n    else:\n        nums.sort()\n        max_count = 1\n        curr_count = 1\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i - 1]:\n                curr_count += 1\n            else:\n                max_count = max(max_count, curr_count)\n                curr_count = 1\n        return max(max_count, curr_count)",
    "    if not nums:\n        return 0\n\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        max_count = max(max_count, num_count[num])\n    return max_count\n",
    "    nums.sort()\n    max_count = 0\n    max_num = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n            max_count = max(max_count, count)\n        else:\n            count = 1\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_occurrences = 0\n    for num, occurrences in nums_dict.items():\n        if occurrences > max_occurrences:\n            max_occurrences = occurrences\n    return max_occurrences\n",
    "    nums.sort()\n    max_count = 0\n    max_num = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num, max_count\n\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    return max(nums_dict.values())\n\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_value = max(nums_dict.values())\n    return max_value\n\n",
    "    nums.sort()\n    max_freq = 0\n    max_item = None\n    curr_item = None\n    curr_freq = 0\n    for num in nums:\n        if curr_item != num:\n            curr_item = num\n            curr_freq = 1\n        else:\n            curr_freq += 1\n        if curr_freq > max_freq:\n            max_freq = curr_freq\n            max_item = curr_item\n    return max_item",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n"
  ]
}
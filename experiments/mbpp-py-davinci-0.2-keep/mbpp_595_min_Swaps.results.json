{
  "name": "mbpp_595_min_Swaps",
  "language": "py",
  "prompt": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg5ub3tz8.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpg5ub3tz8.py\", line 19, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpg5ub3tz8.py\", line 15, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    if str1 == str2:\n        return 0\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy_r1fusg.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpy_r1fusg.py\", line 26, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpy_r1fusg.py\", line 22, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo1cxd4dm.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpo1cxd4dm.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpo1cxd4dm.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu23uqeh1.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpu23uqeh1.py\", line 20, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpu23uqeh1.py\", line 16, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2nw4p1f_.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp2nw4p1f_.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp2nw4p1f_.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\nprint(min_Swaps(\"1101\", \"0101\"))\nprint(min_Swaps(\"10011\", \"11100\"))\nprint(min_Swaps(\"11010101\", \"01010101\"))\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "0\n2\n0\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplkjqm18w.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmplkjqm18w.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmplkjqm18w.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count - 1\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1m3a0yt_.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp1m3a0yt_.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp1m3a0yt_.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp51ovr7rm.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp51ovr7rm.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp51ovr7rm.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph7kntsse.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmph7kntsse.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmph7kntsse.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo1cxd4dm.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpo1cxd4dm.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpo1cxd4dm.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpneta6ym0.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpneta6ym0.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpneta6ym0.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf62grg2t.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpf62grg2t.py\", line 20, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpf62grg2t.py\", line 16, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpixi0jcpj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpixi0jcpj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpixi0jcpj.py\", line 17, in check\n    assert candidate('1101', '1110') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9128v_mh.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp9128v_mh.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp9128v_mh.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpneta6ym0.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpneta6ym0.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpneta6ym0.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmproj0ip4o.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmproj0ip4o.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmproj0ip4o.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_tvlq37f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_tvlq37f.py\", line 20, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp_tvlq37f.py\", line 16, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return int(count/2)\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprw5qxq2h.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmprw5qxq2h.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmprw5qxq2h.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy06t3r9t.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpy06t3r9t.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpy06t3r9t.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpneta6ym0.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpneta6ym0.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpneta6ym0.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpun71nhxi.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpun71nhxi.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpun71nhxi.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf4sz2jd_.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpf4sz2jd_.py\", line 19, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpf4sz2jd_.py\", line 14, in check\n    assert candidate('1101', '1110') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9128v_mh.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp9128v_mh.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp9128v_mh.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # count the number of 1s in str1\n    count = 0\n    for i in str1:\n        if i == '1':\n            count += 1\n    # count the number of 1s in str2\n    count2 = 0\n    for i in str2:\n        if i == '1':\n            count2 += 1\n    # compare the number of 1s in str1 and str2\n    if count == count2:\n        return 0\n    else:\n        return abs(count - count2)\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppvf6r339.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmppvf6r339.py\", line 29, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmppvf6r339.py\", line 24, in check\n    assert candidate('1101', '1110') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo1cxd4dm.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpo1cxd4dm.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpo1cxd4dm.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgt5kq3ns.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpgt5kq3ns.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpgt5kq3ns.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpun71nhxi.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpun71nhxi.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpun71nhxi.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxk3qhgrl.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxk3qhgrl.py\", line 20, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpxk3qhgrl.py\", line 15, in check\n    assert candidate('1101', '1110') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmproj0ip4o.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmproj0ip4o.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmproj0ip4o.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpneta6ym0.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpneta6ym0.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpneta6ym0.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy06t3r9t.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpy06t3r9t.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpy06t3r9t.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpas6yuyfb.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpas6yuyfb.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpas6yuyfb.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    else:\n        count = 0\n        for i in range(len(str1)):\n            if str1[i] != str2[i]:\n                count += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyn0ces2u.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpyn0ces2u.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpyn0ces2u.py\", line 18, in check\n    assert candidate('1101', '1110') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\nprint(min_Swaps(\"11001\", \"01111\"))\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "1\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcubt96gc.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpcubt96gc.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcubt96gc.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmproj0ip4o.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmproj0ip4o.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmproj0ip4o.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    # Write your code here\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmproj0ip4o.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmproj0ip4o.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmproj0ip4o.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdrq9byd0.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpdrq9byd0.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpdrq9byd0.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpun71nhxi.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpun71nhxi.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpun71nhxi.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count//2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmh5bx6eu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpmh5bx6eu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpmh5bx6eu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdrq9byd0.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpdrq9byd0.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpdrq9byd0.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    n = len(str1)\n    count = 0\n    for i in range(n):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2nw4p1f_.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp2nw4p1f_.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp2nw4p1f_.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcm0yyl6n.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpcm0yyl6n.py\", line 23, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcm0yyl6n.py\", line 19, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122487,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9jms9snw.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp9jms9snw.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmp9jms9snw.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    if str1 == str2:\n        return 0\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpun71nhxi.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpun71nhxi.py\", line 24, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpun71nhxi.py\", line 20, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk_kyuwkj.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_kyuwkj.py\", line 22, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpk_kyuwkj.py\", line 18, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef min_Swaps(str1: str, str2: str) -> Any:\n    \"\"\"\n\tWrite a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n\t\"\"\"\n    if len(str1) != len(str2):\n        return -1\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate('1101', '1110') == 1\n    assert candidate('111', '000') == 'Not Possible'\n    assert candidate('111', '110') == 'Not Possible'\n\ndef test_check():\n    check(min_Swaps)\n\ntest_check()\n",
      "timestamp": 1665509803,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcxg3rhvu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpcxg3rhvu.py\", line 21, in test_check\n    check(min_Swaps)\n  File \"/tmp/tmpcxg3rhvu.py\", line 17, in check\n    assert candidate('111', '000') == 'Not Possible'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
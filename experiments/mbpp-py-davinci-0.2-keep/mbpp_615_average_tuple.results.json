{
  "name": "mbpp_615_average_tuple",
  "language": "py",
  "prompt": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_615_average_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[2.0, 5.0]\n[2.0, 5.0, 8.0]\n[2.0, 5.0, 8.0, 11.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt4qfff5h.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpt4qfff5h.py\", line 18, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpt4qfff5h.py\", line 13, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1nv4jur6.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp1nv4jur6.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp1nv4jur6.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp93ychqf1.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp93ychqf1.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp93ychqf1.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprm7o9iqy.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmprm7o9iqy.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmprm7o9iqy.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnlp3taar.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpnlp3taar.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpnlp3taar.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe7ss6w6o.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpe7ss6w6o.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpe7ss6w6o.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7a775g66.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp7a775g66.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp7a775g66.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7a775g66.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp7a775g66.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp7a775g66.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpowvozajy.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpowvozajy.py\", line 15, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpowvozajy.py\", line 10, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1nv4jur6.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp1nv4jur6.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp1nv4jur6.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3, 4, 5))))\nprint(average_tuple(((1,), (2, 4), (2, 3, 4, 5))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 3.5]\n[1.0, 3.0, 3.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjr_qffrj.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpjr_qffrj.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpjr_qffrj.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkj_762c0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpkj_762c0.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpkj_762c0.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9), (4, 8, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n[2.0, 4.0, 6.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2a4ccewa.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp2a4ccewa.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp2a4ccewa.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkj_762c0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpkj_762c0.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpkj_762c0.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(num) / len(num) for num in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9ghgvn3y.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp9ghgvn3y.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp9ghgvn3y.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpm33itg_q.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpm33itg_q.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpm33itg_q.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnlp3taar.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpnlp3taar.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpnlp3taar.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(n)/len(n) for n in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3), (2, 2))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 2.5, 2.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp25ut58iw.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp25ut58iw.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp25ut58iw.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (4, 8))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (4, 8, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 6.0]\n[2.0, 4.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl0mo0m09.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpl0mo0m09.py\", line 18, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl0mo0m09.py\", line 13, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i])/len(nums[i]) for i in range(len(nums))]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n[2.0, 4.0, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_dcppxse.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp_dcppxse.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp_dcppxse.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(num) / len(num) for num in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5wyi_shh.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp5wyi_shh.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp5wyi_shh.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(num) / len(num) for num in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5wyi_shh.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp5wyi_shh.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp5wyi_shh.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup)/len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9), (4, 8, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n[2.0, 4.0, 6.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgs48x4yf.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpgs48x4yf.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpgs48x4yf.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3), (2, 2))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 2.5, 2.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqghj5e38.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpqghj5e38.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpqghj5e38.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkj_762c0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpkj_762c0.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpkj_762c0.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i])/len(nums[i]) for i in range(len(nums))]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxt6w2a1l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpxt6w2a1l.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpxt6w2a1l.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9), (4, 8, 12))))\nprint(average_tuple(((1, 2, 3, 4), (2, 4, 6, 8), (3, 6, 9, 12), (4, 8, 12, 16))))\nprint(average_tuple(((1, 2, 3, 4, 5), (2, 4, 6, 8, 10), (3, 6, 9, 12, 15), (4, 8, 12, 16, 20))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n[2.0, 4.0, 6.0, 8.0]\n[2.5, 5.0, 7.5, 10.0]\n[3.0, 6.0, 9.0, 12.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdnwlc566.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpdnwlc566.py\", line 19, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpdnwlc566.py\", line 14, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n[2.0, 4.0, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg48wv2fg.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpg48wv2fg.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpg48wv2fg.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpue0slp5q.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpue0slp5q.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpue0slp5q.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpit65j21b.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpit65j21b.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpit65j21b.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpue0slp5q.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpue0slp5q.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpue0slp5q.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i]) / len(nums[i]) for i in range(len(nums))]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0y28bhza.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp0y28bhza.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp0y28bhza.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr_fxg935.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr_fxg935.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr_fxg935.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfctxpvvr.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpfctxpvvr.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpfctxpvvr.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfiq9nbsk.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpfiq9nbsk.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpfiq9nbsk.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkj_762c0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpkj_762c0.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpkj_762c0.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfiq9nbsk.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpfiq9nbsk.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpfiq9nbsk.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfctxpvvr.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpfctxpvvr.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpfctxpvvr.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr_fxg935.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr_fxg935.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr_fxg935.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfiq9nbsk.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpfiq9nbsk.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpfiq9nbsk.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_jbsf4oi.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp_jbsf4oi.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp_jbsf4oi.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr_fxg935.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr_fxg935.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr_fxg935.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpllmi_9pu.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpllmi_9pu.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpllmi_9pu.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpeibdk3x6.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpeibdk3x6.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpeibdk3x6.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpowvozajy.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpowvozajy.py\", line 15, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpowvozajy.py\", line 10, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmlvo2ojq.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpmlvo2ojq.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpmlvo2ojq.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpm33itg_q.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpm33itg_q.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpm33itg_q.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr_fxg935.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr_fxg935.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr_fxg935.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[2.0, 5.0, 8.0]\n[2.0, 5.0, 8.0, 11.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpktkafnno.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpktkafnno.py\", line 18, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpktkafnno.py\", line 13, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(n) / len(n) for n in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3wb_pa5g.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp3wb_pa5g.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp3wb_pa5g.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i)/len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpp1sfvbfl.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpp1sfvbfl.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpp1sfvbfl.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3, 4, 5))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 3.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4d4pr_mc.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp4d4pr_mc.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp4d4pr_mc.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpowvozajy.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpowvozajy.py\", line 15, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpowvozajy.py\", line 10, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprm7o9iqy.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmprm7o9iqy.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmprm7o9iqy.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i)/len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (3, 4, 5))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 4.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxu5b2b4m.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpxu5b2b4m.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpxu5b2b4m.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgu_nuotv.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpgu_nuotv.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpgu_nuotv.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(num) / len(num) for num in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc2m0hpa_.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpc2m0hpa_.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpc2m0hpa_.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i)/len(i) for i in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0_7busp7.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp0_7busp7.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp0_7busp7.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnlp3taar.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpnlp3taar.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpnlp3taar.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(num) / len(num) for num in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9wz_exl9.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp9wz_exl9.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp9wz_exl9.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3), (2, 2))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 2.5, 2.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr8j_euhf.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr8j_euhf.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr8j_euhf.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfiq9nbsk.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpfiq9nbsk.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpfiq9nbsk.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i]) / len(nums[i]) for i in range(len(nums))]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjumtpa3m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpjumtpa3m.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpjumtpa3m.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n[2.0, 4.0, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5qwvyhc_.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp5qwvyhc_.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp5qwvyhc_.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk9df3a4c.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpk9df3a4c.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpk9df3a4c.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9), (4, 8, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n[2.0, 4.0, 6.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwz3wixyu.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpwz3wixyu.py\", line 18, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpwz3wixyu.py\", line 13, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0gdtb54.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpo0gdtb54.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpo0gdtb54.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpm33itg_q.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpm33itg_q.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpm33itg_q.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[2.0, 5.0]\n[2.0, 5.0, 8.0]\n[2.0, 5.0, 8.0, 11.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8on9_sz6.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp8on9_sz6.py\", line 19, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp8on9_sz6.py\", line 14, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6xv9z92.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpl6xv9z92.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpl6xv9z92.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpllmi_9pu.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpllmi_9pu.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpllmi_9pu.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3), (2, 2))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 2.5, 2.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0xl1tiu3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp0xl1tiu3.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp0xl1tiu3.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr_fxg935.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr_fxg935.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr_fxg935.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\n\nprint(average_tuple(((1, 2), (2, 4), (2, 3), (2, 2))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (2, 3, 5), (2, 2, 2))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 2.5, 2.0]\n[2.0, 4.0, 3.3333333333333335, 2.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpm_gb8ryx.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpm_gb8ryx.py\", line 18, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpm_gb8ryx.py\", line 13, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i]) / len(nums[i]) for i in range(len(nums))]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjumtpa3m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpjumtpa3m.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpjumtpa3m.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i]) / len(nums[i]) for i in range(len(nums))]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjumtpa3m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpjumtpa3m.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpjumtpa3m.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n[2.0, 4.0, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwjlpz1sj.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpwjlpz1sj.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpwjlpz1sj.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i)/len(i) for i in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123955,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpp1sfvbfl.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpp1sfvbfl.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpp1sfvbfl.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(tup) / len(tup) for tup in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr_fxg935.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr_fxg935.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpr_fxg935.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1hpd23x.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpn1hpd23x.py\", line 15, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpn1hpd23x.py\", line 10, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprm7o9iqy.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmprm7o9iqy.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmprm7o9iqy.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj6vsspzv.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpj6vsspzv.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpj6vsspzv.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(nums[i]) / len(nums[i]) for i in range(len(nums))]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjumtpa3m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpjumtpa3m.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpjumtpa3m.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp50oj6sd1.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp50oj6sd1.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp50oj6sd1.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnlp3taar.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpnlp3taar.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpnlp3taar.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6))))\nprint(average_tuple(((1, 2, 3), (2, 4, 6), (3, 6, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "[1.5, 3.0, 4.5]\n[2.0, 4.0, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5qwvyhc_.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmp5qwvyhc_.py\", line 17, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp5qwvyhc_.py\", line 12, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(i) / len(i) for i in nums]\n\nprint(average_tuple(((1, 2, 3), (4, 5, 6), (7, 8, 9))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[2.0, 5.0, 8.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpue0slp5q.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpue0slp5q.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpue0slp5q.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(num) / len(num) for num in nums]\n\n\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123957,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9wz_exl9.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp9wz_exl9.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmp9wz_exl9.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x)/len(x) for x in nums]\n\nprint(average_tuple(((1, 2), (2, 4), (3, 6), (4, 8))))\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1666123956,
      "stdout": "[1.5, 3.0, 4.5, 6.0]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkj_762c0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpkj_762c0.py\", line 16, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpkj_762c0.py\", line 11, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Tuple, List\n\ndef average_tuple(nums: Tuple[Tuple[int]]) -> List[float]:\n    \"\"\"\n\tWrite a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n\t\"\"\"\n    return [sum(x) / len(x) for x in nums]\ndef check(candidate):\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\n    assert candidate(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))) == [25.5, -18.0, 3.75]\n    assert candidate(((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40))) == [305.0, 342.5, 270.0, 232.5]\n\ndef test_check():\n    check(average_tuple)\n\ntest_check()\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpab1q5q7q.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpab1q5q7q.py\", line 14, in test_check\n    check(average_tuple)\n  File \"/tmp/tmpab1q5q7q.py\", line 9, in check\n    assert candidate(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4))) == [30.5, 34.25, 27.0, 23.25]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
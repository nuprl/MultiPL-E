{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "py",
  "prompt": "def is_Sum_Of_Powers_Of_Two(n: int) -> bool:\n    \"\"\"\n\tWrite a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(10) == True\n    assert candidate(7) == False\n    assert candidate(14) == True\n\ndef test_check():\n    check(is_Sum_Of_Powers_Of_Two)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if n == 0:\n        return False\n    while n != 1:\n        if n % 2 != 0:\n            return False\n        n = n // 2\n    return True\n\n",
    "    if n < 0:\n        return False\n    if n == 0:\n        return True\n    while n > 0:\n        if n % 2 == 1:\n            n -= 1\n        else:\n            n /= 2\n    return n == 0\n\n",
    "    if n == 0:\n        return False\n    while n != 1:\n        if n % 2 != 0:\n            return False\n        n = n // 2\n    return True\n\n",
    "    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n % 2 == 1:\n        return False\n    return is_Sum_Of_Powers_Of_Two(n // 2)\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n != 1:\n        if n % 2 != 0:\n            return False\n        n = n // 2\n    return True\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n != 0:\n        if n % 2 != 0:\n            return False\n        n = n // 2\n    return True\n\n",
    "    if n == 0:\n        return True\n    if n == 1:\n        return False\n    if n % 2 == 0:\n        return is_Sum_Of_Powers_Of_Two(n // 2)\n    return is_Sum_Of_Powers_Of_Two(n - 1)\n\n",
    "    if n == 0:\n        return True\n    if n == 1:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n <= 0:\n        return False\n    while n % 2 == 0:\n        n = n // 2\n    return n == 1\n\n",
    "    if n == 0:\n        return False\n    while n != 1:\n        if n % 2 != 0:\n            return False\n        n = n // 2\n    return True\n\n",
    "    if n == 0:\n        return False\n    while n != 1:\n        if n % 2 != 0:\n            return False\n        n = n // 2\n    return True\n\n",
    "    if n < 0:\n        return False\n    if n == 0:\n        return True\n    return is_Sum_Of_Powers_Of_Two(n - 2 ** int(math.log(n, 2)))\n\n",
    "    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        while n % 2 == 0:\n            n = n // 2\n        return n == 1\n\n"
  ]
}
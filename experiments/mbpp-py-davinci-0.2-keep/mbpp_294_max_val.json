{
  "name": "mbpp_294_max_val",
  "language": "py",
  "prompt": "from typing import List, Union\n\ndef max_val(listval: List[Union[str, int]]) -> int:\n    \"\"\"\n\tWrite a function to find the maximum value in a given heterogeneous list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(['Python', 3, 2, 4, 5, 'version']) == 5\n    assert candidate(['Python', 15, 20, 25]) == 25\n    assert candidate(['Python', 30, 20, 40, 50, 'version']) == 50\n\ndef test_check():\n    check(max_val)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    max_val = 0\n    for i in listval:\n        if isinstance(i, int):\n            if i > max_val:\n                max_val = i\n    return max_val\n",
    "    return max(listval)",
    "    return max(listval)",
    "    max_val = 0\n    for i in listval:\n        if isinstance(i, int):\n            if i > max_val:\n                max_val = i\n    return max_val\n\n",
    "    max_val = 0\n    for val in listval:\n        if isinstance(val, int):\n            if val > max_val:\n                max_val = val\n    return max_val",
    "    max_val = 0\n    for i in listval:\n        if isinstance(i, int):\n            if i > max_val:\n                max_val = i\n    return max_val\n\n",
    "    max_val = 0\n    for val in listval:\n        if isinstance(val, int):\n            if val > max_val:\n                max_val = val\n    return max_val\n",
    "    return max(listval)\n",
    "    return max(listval)\n",
    "    return max(listval)\n\nprint(max_val([1, 2, 3, 4, 5]))\nprint(max_val([1, 2, 3, 4, 5, \"6\"]))\nprint(max_val([1, 2, 3, 4, 5, \"6\", \"7\"]))",
    "    return max(listval)",
    "    return max(listval)\n",
    "    return max(listval)",
    "    return max(listval)\n",
    "    return max(listval)\n",
    "    max_val = 0\n    for i in listval:\n        if isinstance(i, int) and i > max_val:\n            max_val = i\n    return max_val\n",
    "    return max(listval)",
    "    max_val = 0\n    for val in listval:\n        if isinstance(val, int) and val > max_val:\n            max_val = val\n    return max_val\n\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a']))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D',",
    "    return max(listval)\n\n",
    "    max_val = 0\n    for i in listval:\n        if isinstance(i, int):\n            if i > max_val:\n                max_val = i\n    return max_val\n\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\", \"e\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"]))\nprint(max_val([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \""
  ]
}
{
  "name": "mbpp_627_find_First_Missing",
  "language": "py",
  "prompt": "from typing import List\n\ndef find_First_Missing(array: List[int]) -> int:\n    \"\"\"\n\tWrite a python function to find the smallest missing number from a sorted list of natural numbers.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_627_find_First_Missing.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([0, 1, 2, 3]) == 4\n    assert candidate([0, 1, 2, 6, 9]) == 3\n    assert candidate([2, 3, 5, 8, 9]) == 0\n\ndef test_check():\n    check(find_First_Missing)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if len(array) == 0:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(1, len(array)):\n        if array[i] - array[i - 1] > 1:\n            return array[i - 1] + 1\n    return array[-1] + 1\n",
    "    if array == []:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(len(array)-1):\n        if array[i+1] - array[i] > 1:\n            return array[i]+1\n    return array[-1]+1\n",
    "    if len(array) == 0:\n        return 0\n    if len(array) == 1:\n        return array[0] + 1\n    if array[0] != 0:\n        return 0\n    for i in range(len(array) - 1):\n        if array[i + 1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1\n\n",
    "    n = len(array)\n    i = 0\n    while i < n:\n        if array[i] != i + 1:\n            return i + 1\n        i += 1\n    return n + 1\n\n",
    "    if array[0] != 1:\n        return 1\n    for i in range(len(array)-1):\n        if array[i+1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1\n",
    "    if not array:\n        return 1\n    for i in range(len(array)):\n        if array[i] != i + 1:\n            return i + 1\n    return len(array) + 1\n",
    "    if len(array) == 0:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(1, len(array)):\n        if array[i] - array[i-1] > 1:\n            return array[i-1] + 1\n    return array[-1] + 1\n",
    "    # check if the array is empty\n    if len(array) == 0:\n        return 1\n    # check if the array is sorted\n    if array != sorted(array):\n        return \"Array is not sorted\"\n    # check if the array is positive\n    if array[0] < 0:\n        return \"Array is not positive\"\n    # check if the array is consecutive\n    for i in range(len(array) - 1):\n        if array[i + 1] - array[i] != 1:\n            return array[i] + 1\n    # if the array is consecutive, return the last number + 1\n    return array[-1] + 1",
    "    if len(array) == 0:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(len(array) - 1):\n        if array[i + 1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1",
    "    if not array:\n        return 1\n\n    for i, num in enumerate(array):\n        if num != i + 1:\n            return i + 1\n    return array[-1] + 1\n\n",
    "    if len(array) == 0:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(len(array)-1):\n        if array[i+1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1\n",
    "    if not array:\n        return 1\n    for i in range(len(array)):\n        if array[i] != i+1:\n            return i+1\n    return len(array)+1\n\nprint(find_First_Missing([1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20]))",
    "    if not array:\n        return 1\n    for i in range(len(array)):\n        if array[i] != i + 1:\n            return i + 1\n    return array[-1] + 1\n",
    "    if not array:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(len(array)-1):\n        if array[i+1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1\n",
    "\n    if array[0] != 1:\n        return 1\n\n    for i in range(len(array) - 1):\n        if array[i + 1] - array[i] > 1:\n            return array[i] + 1\n\n    return array[-1] + 1\n\n",
    "    n = len(array)\n    for i in range(n):\n        if array[i] != i:\n            return i\n    return n\n",
    "    if not array:\n        return 1\n    for i in range(len(array)):\n        if array[i] != i + 1:\n            return i + 1\n    return len(array) + 1\n",
    "    if array == []:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(len(array) - 1):\n        if array[i + 1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1\n\n",
    "    if not array:\n        return 1\n    for i in range(len(array)):\n        if array[i] != i + 1:\n            return i + 1\n    return array[-1] + 1\n",
    "    if array == []:\n        return 1\n    if array[0] != 1:\n        return 1\n    for i in range(len(array)-1):\n        if array[i+1] - array[i] > 1:\n            return array[i] + 1\n    return array[-1] + 1\n"
  ]
}
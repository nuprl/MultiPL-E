{
  "name": "mbpp_281_all_unique",
  "language": "py",
  "prompt": "from typing import List\n\ndef all_unique(test_list: List[int]) -> bool:\n    \"\"\"\n\tWrite a python function to check if the elements of a given list are unique or not.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_281_all_unique.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3]) == True\n    assert candidate([1, 2, 1, 2]) == False\n    assert candidate([1, 2, 3, 4, 5]) == True\n\ndef test_check():\n    check(all_unique)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(set(test_list)) == len(test_list)\n",
    "    return len(set(test_list)) == len(test_list)\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n\n",
    "    return len(test_list) == len(set(test_list))\n",
    "    return len(test_list) == len(set(test_list))\n"
  ]
}
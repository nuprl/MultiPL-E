{
  "name": "mbpp_796_return_sum",
  "language": "py",
  "prompt": "from typing import Dict\n\ndef return_sum(dict: Dict[str, int]) -> int:\n    \"\"\"\n\tWrite function to find the sum of all items in the given dictionary.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_796_return_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate({ 'a': 100, 'b': 200, 'c': 300 }) == 600\n    assert candidate({ 'a': 25, 'b': 18, 'c': 45 }) == 88\n    assert candidate({ 'a': 36, 'b': 39, 'c': 49 }) == 124\n\ndef test_check():\n    check(return_sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())\n",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())\n",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())",
    "    return sum(dict.values())"
  ]
}
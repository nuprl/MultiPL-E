{
  "name": "mbpp_779_unique_sublists",
  "language": "py",
  "prompt": "from typing import Any\n\ndef unique_sublists(list1: Any) -> Any:\n    \"\"\"\n\tWrite a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_779_unique_sublists.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]) == { (1, 3): 2, (5, 7): 2, (13, 15, 17): 1, (9, 11): 1 }\n    assert candidate([['green', 'orange'], ['black'], ['green', 'orange'], ['white']]) == { ('green', 'orange'): 2, ('black',): 1, ('white',): 1 }\n    assert candidate([[1, 2], [3, 4], [4, 5], [6, 7]]) == { (1, 2): 1, (3, 4): 1, (4, 5): 1, (6, 7): 1 }\n\ndef test_check():\n    check(unique_sublists)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    dict1 = {}\n    for i in list1:\n        if type(i) == list:\n            i = tuple(i)\n            if i not in dict1:\n                dict1[i] = 1\n            else:\n                dict1[i] += 1\n    return dict1\n\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(x) for x in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}\n",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(i) for i in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5",
    "    return Counter([tuple(x) for x in list1])",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}",
    "    return {tuple(x): list1.count(x) for x in list1}\n\n",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2,",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    unique_sublists = {}\n    for sublist in list1:\n        if tuple(sublist) in unique_sublists:\n            unique_sublists[tuple(sublist)] += 1\n        else:\n            unique_sublists[tuple(sublist)] = 1\n    return unique_sublists\n\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2], [3, 4]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2], [3, 4], [3, 4]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2], [3, 4], [3, 4], [1, 2]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2], [3, 4], [3, 4], [1, 2], [1, 2]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2], [3, 4], [3, 4], [1, 2], [1, 2], [1, 2]]))\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5, 6], [1, 2], [3, 4], [1, 2], [3, 4], [3, 4], [1, 2], [1,",
    "    unique_sublists = {}\n    for i in list1:\n        if type(i) == list:\n            i = tuple(i)\n            if i in unique_sublists:\n                unique_sublists[i] += 1\n            else:\n                unique_sublists[i] = 1\n    return unique_sublists",
    "    return {tuple(sublist): list1.count(sublist) for sublist in list1}\n\nprint(unique_sublists([[1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1,",
    "    list1 = [tuple(x) for x in list1]\n    return {x:list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(l) for l in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter(tuple(i) for i in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}\n\nprint(unique_sublists([[1,2], [3,4], [1,2], [5], [6], [7], [8], [3,4], [3,4], [7]]))",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,3], [4,5], [4,5], [6]]))",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter([tuple(x) for x in list1])\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(i) for i in list1)\n",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [3, 4], [3, 4], [1, 2, 3]]))",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)\n",
    "    list1 = [tuple(i) for i in list1]\n    return {i: list1.count(i) for i in list1}\n\n",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(i) for i in list1)",
    "    # your code here\n    return {tuple(i): list1.count(i) for i in list1}\n",
    "    return {tuple(x): list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6]]))",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    unique_sublists = {}\n    for sublist in list1:\n        if type(sublist) == list:\n            sublist = tuple(sublist)\n            if sublist in unique_sublists:\n                unique_sublists[sublist] += 1\n            else:\n                unique_sublists[sublist] = 1\n    return unique_sublists",
    "    return Counter(tuple(i) for i in list1)",
    "    list1 = [tuple(i) for i in list1]\n    return {i: list1.count(i) for i in list1}\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,3], [4,5,6], [4,5,6], [4,5,6], [4,5,6]]))",
    "    list1 = [tuple(i) for i in list1]\n    return {i: list1.count(i) for i in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6]]))\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6]]))\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6]]))",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2, 3], [1, 2, 3], [2, 3, 4], [1, 2,",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6]]))",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter([tuple(x) for x in list1])",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    # your code here\n    return None\n\n",
    "    list2 = []\n    for i in list1:\n        list2.append(tuple(i))\n    return Counter(list2)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3],",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    unique_sublists = {}\n    for item in list1:\n        if type(item) == list:\n            item = tuple(item)\n        if item in unique_sublists:\n            unique_sublists[item] += 1\n        else:\n            unique_sublists[item] = 1\n    return unique_sublists\n\nprint(unique_sublists([1, 2, 3, [1, 2], [1, 2], [1, 2], [1, 2, 3], [1, 2, 3]]))",
    "    return {tuple(x): list1.count(x) for x in list1}\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    list1 = [tuple(x) for x in list1]\n    return {x:list1.count(x) for x in set(list1)}\n",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(i) for i in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}\n",
    "    return {tuple(i): list1.count(i) for i in list1}\n\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(x) for x in list1)\n\nprint(unique_sublists([[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6]]))",
    "    return {tuple(i): list1.count(i) for i in list1}\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,",
    "    return {tuple(x): list1.count(x) for x in list1}\n",
    "    return Counter(tuple(i) for i in list1)\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1",
    "    return Counter(tuple(x) for x in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5], [4, 5], [4, 5]]))",
    "    list1 = [tuple(l) for l in list1]\n    return {i: list1.count(i) for i in list1}\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2,",
    "    return Counter(tuple(sublist) for sublist in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter([tuple(i) for i in list1])",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    unique_sublists = {}\n    for i in list1:\n        if type(i) == list:\n            i = tuple(i)\n        if i in unique_sublists:\n            unique_sublists[i] += 1\n        else:\n            unique_sublists[i] = 1\n    return unique_sublists\n\nprint(unique_sublists([1, 2, 3, [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3],",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter([tuple(x) for x in list1])\n\n",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter([tuple(i) for i in list1])\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,3], [3,4], [3,4], [1,2,3,4]]))",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    # your code here\n    return None\n\n",
    "    return Counter(tuple(x) for x in list1)\n",
    "    unique_sublists = {}\n    for i in list1:\n        if type(i) == list:\n            i = tuple(i)\n        if i in unique_sublists:\n            unique_sublists[i] += 1\n        else:\n            unique_sublists[i] = 1\n    return unique_sublists\n\nprint(unique_sublists([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,",
    "    return Counter(tuple(x) for x in list1)",
    "    list2 = []\n    for i in list1:\n        if i not in list2:\n            list2.append(i)\n    return list2\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,4], [10,11]]))",
    "    return {tuple(i): list1.count(i) for i in list1}",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter([tuple(x) for x in list1])\n",
    "    return Counter(tuple(x) for x in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return {tuple(i): list1.count(i) for i in list1}",
    "    unique_sublists = {}\n    for sublist in list1:\n        if type(sublist) == list:\n            sublist = tuple(sublist)\n            if sublist in unique_sublists:\n                unique_sublists[sublist] += 1\n            else:\n                unique_sublists[sublist] = 1\n    return unique_sublists",
    "    # your code here\n    return {}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return dict(Counter(tuple(i) for i in list1))",
    "    return {tuple(sublist): list1.count(sublist) for sublist in list1}\n",
    "    return {tuple(i): list1.count(i) for i in list1}",
    "    return Counter(tuple(i) for i in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1",
    "    return Counter(tuple(i) for i in list1)",
    "    return Counter([tuple(i) for i in list1])\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2",
    "    return {tuple(sublist): list1.count(sublist) for sublist in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    # your code here\n    return None\n\n",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(x) for x in list1)",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}\n\n",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}",
    "    return Counter([tuple(i) for i in list1])\n",
    "    unique_sublists = {}\n    for sublist in list1:\n        if type(sublist) == list:\n            sublist = tuple(sublist)\n        if sublist in unique_sublists:\n            unique_sublists[sublist] += 1\n        else:\n            unique_sublists[sublist] = 1\n    return unique_sublists\n\nprint(unique_sublists([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)",
    "    unique_sublists = {}\n    for sublist in list1:\n        if tuple(sublist) in unique_sublists:\n            unique_sublists[tuple(sublist)] += 1\n        else:\n            unique_sublists[tuple(sublist)] = 1\n    return unique_sublists\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,3], [4,5,6], [4,5,6], [4,5,6], [4,5,6]]))",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    # your code here\n    return None\n\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    list1 = [tuple(i) for i in list1]\n    return {i: list1.count(i) for i in list1}",
    "    unique_sublists = {}\n    for sublist in list1:\n        if tuple(sublist) in unique_sublists:\n            unique_sublists[tuple(sublist)] += 1\n        else:\n            unique_sublists[tuple(sublist)] = 1\n    return unique_sublists\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2",
    "    return Counter([tuple(i) for i in list1])",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return {tuple(i): list1.count(i) for i in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(l) for l in list1)\n",
    "    list1 = [tuple(x) for x in list1]\n    return {i: list1.count(i) for i in list1}",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return {tuple(x): list1.count(x) for x in list1}\n\n",
    "    return Counter(tuple(i) for i in list1)\n\nprint(unique_sublists([[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6]]))\nprint(unique_sublists([[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6],[1,2,3]]))\nprint(unique_sublists([[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6],[1,2,3],[4,5,6],[4,5,6],[4,5,6]]))\nprint(unique_sublists([[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6],[1,2,3],[4,5,6],[4,5,6],[4,5,6],[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6],[1,2,3],[4,5,6],[4,5,6],[4,5,6]]))",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return Counter(tuple(i) for i in list1)",
    "    return Counter(tuple(x) for x in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2",
    "    return {tuple(i): list1.count(i) for i in list1}\n\n",
    "    list1 = [tuple(i) for i in list1]\n    return {i: list1.count(i) for i in list1}\n\n",
    "    list1 = [tuple(x) for x in list1]\n    return {x: list1.count(x) for x in list1}",
    "    return Counter([tuple(i) for i in list1])",
    "    return {tuple(x): list1.count(x) for x in list1}\n\nprint(unique_sublists([[1, 2], [3, 4], [1, 2], [5], [6], [7], [8], [3, 4], [3, 4], [7]]))",
    "    return Counter(tuple(x) for x in list1)\n",
    "    return {tuple(sublist): list1.count(sublist) for sublist in list1}\n\n",
    "    return Counter(tuple(x) for x in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(i) for i in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6], [4, 5, 6]]))",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(x) for x in list1)",
    "    # your code here\n    return None\n",
    "    return Counter([tuple(x) for x in list1])",
    "    return Counter(tuple(x) for x in list1)",
    "    unique_sublists = {}\n    for sublist in list1:\n        if type(sublist) == list:\n            sublist = tuple(sublist)\n            if sublist in unique_sublists:\n                unique_sublists[sublist] += 1\n            else:\n                unique_sublists[sublist] = 1\n    return unique_sublists\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3",
    "    return Counter(tuple(sublist) for sublist in list1)\n",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(i) for i in list1)",
    "    return Counter(tuple(x) for x in list1)",
    "    list1 = [tuple(i) for i in list1]\n    return {i: list1.count(i) for i in list1}\n",
    "    return Counter(tuple(i) for i in list1)\n\nprint(unique_sublists([[1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2",
    "    return Counter(tuple(x) for x in list1)",
    "    return {tuple(x): list1.count(x) for x in list1}",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(i) for i in list1)",
    "    return Counter(tuple(sublist) for sublist in list1)",
    "    return Counter(tuple(x) for x in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2",
    "    return Counter(tuple(sublist) for sublist in list1)\n\nprint(unique_sublists([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1",
    "    return Counter(tuple(x) for x in list1)\n"
  ]
}
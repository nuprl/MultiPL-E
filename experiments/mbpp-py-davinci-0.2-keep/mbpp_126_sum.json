{
  "name": "mbpp_126_sum",
  "language": "py",
  "prompt": "def sum(a: int, b: int) -> int:\n    \"\"\"\n\tWrite a python function to find the sum of common divisors of two given numbers.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(10, 15) == 6\n    assert candidate(100, 150) == 93\n    assert candidate(4, 6) == 3\n\ndef test_check():\n    check(sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    pass\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    divisors_a = [i for i in range(1, a + 1) if a % i == 0]\n    divisors_b = [i for i in range(1, b + 1) if b % i == 0]\n    common_divisors = [i for i in divisors_a if i in divisors_b]\n    return sum(common_divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n"
  ]
}
{
  "name": "mbpp_310_string_to_tuple",
  "language": "py",
  "prompt": "from typing import Tuple\n\ndef string_to_tuple(str1: str) -> Tuple[str]:\n    \"\"\"\n\tWrite a function to convert a given string to a tuple of characters.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_310_string_to_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('python 3.0') == ('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0')\n    assert candidate('item1') == ('i', 't', 'e', 'm', '1')\n    assert candidate('15.10') == ('1', '5', '.', '1', '0')\n\ndef test_check():\n    check(string_to_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return tuple(str1)\n\nprint(string_to_tuple(\"w3resource\"))\nprint(string_to_tuple(\"Python\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple('abc'))",
    "    return tuple(str1)\n",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abcdef\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple('abc'))\nprint(string_to_tuple('hello'))",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)",
    "    return tuple(str1)\n",
    "    return tuple(str1)\n\nprint(string_to_tuple('abc'))",
    "    return tuple(str1)",
    "    return tuple(str1)\n\nprint(string_to_tuple(\"abc\"))",
    "    return tuple(str1)\n\nprint(string_to_tuple('abc'))"
  ]
}
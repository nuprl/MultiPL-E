{
  "name": "mbpp_282_sub_list",
  "language": "py",
  "prompt": "from typing import List\n\ndef sub_list(nums1: List[int], nums2: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a function to subtract two lists element-wise.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_282_sub_list.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3], [4, 5, 6]) == [-3, -3, -3]\n    assert candidate([1, 2], [3, 4]) == [-2, -2]\n    assert candidate([90, 120], [50, 70]) == [40, 50]\n\ndef test_check():\n    check(sub_list)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))\nprint(sub_list([1, 2, 3], [1, 2, 4]))\nprint(sub_list([1, 2, 3], [1, 2, 3, 4]))",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1,2,3], [4,5,6]))",
    "    return [i - j for i, j in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))\nprint(sub_list([1, 2, 3], [1, 2, 4]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1,2,3], [1,2,3]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [4, 5, 6]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x-y for x,y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 1, 1]))",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\nprint(sub_list([1,2,3], [2,3,4]))",
    "    return [a - b for a, b in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n",
    "    return [a - b for a, b in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n",
    "    return [a - b for a, b in zip(nums1, nums2)]\n",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [4, 5, 6]))",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))\n",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n",
    "    return [a - b for a, b in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    if len(nums1) != len(nums2):\n        raise ValueError(\"Input lists must be of the same length\")\n    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    if len(nums1) != len(nums2):\n        return None\n    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [n1 - n2 for n1, n2 in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [a - b for a, b in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))\nprint(sub_list([1, 2, 3], [1, 2, 3, 4]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))\nprint(sub_list([1, 2, 3], [1, 2, 4]))\nprint(sub_list([1, 2, 3], [1, 2, 3, 4]))",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 1, 1]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\nprint(sub_list([1, 2, 3], [1, 2, 3]))\nprint(sub_list([1, 2, 3], [1, 2, 4]))\nprint(sub_list([1, 2, 3], [1, 2, 3, 4]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n\n",
    "    return [a - b for a, b in zip(nums1, nums2)]\n\nprint(sub_list([1, 2, 3], [1, 1, 1]))",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [x - y for x, y in zip(nums1, nums2)]\n\n",
    "    return [a - b for a, b in zip(nums1, nums2)]\n\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [a - b for a, b in zip(nums1, nums2)]\n",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]\n",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [x - y for x, y in zip(nums1, nums2)]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]",
    "    return [nums1[i] - nums2[i] for i in range(len(nums1))]"
  ]
}
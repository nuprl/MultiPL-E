{
  "name": "mbpp_737_check_str",
  "language": "py",
  "prompt": "def check_str(string: str) -> bool:\n    \"\"\"\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('annie') == True\n    assert candidate('dawood') == False\n    assert candidate('Else') == True\n\ndef test_check():\n    check(check_str)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU]\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r'^[aeiouAEIOU].*', string))\n\n",
    "    return bool(re.match(r'^[aeiouAEIOU].*', string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r'^[aeiouAEIOU]', string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU]\", string))\n\n",
    "    return bool(re.match(r'^[aeiou]', string, re.IGNORECASE))\n\n",
    "    return bool(re.match(r\"^[aeiou]\", string, re.IGNORECASE))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU]\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r'^[aeiouAEIOU].*', string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU]\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU]\", string))\n\n",
    "    return bool(re.match(r\"^[aeiouAEIOU].*\", string))\n\n",
    "    return bool(re.match(r'^[aeiou]', string, re.IGNORECASE))\n\n"
  ]
}
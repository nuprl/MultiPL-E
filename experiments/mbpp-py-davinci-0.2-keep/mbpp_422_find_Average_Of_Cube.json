{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "py",
  "prompt": "def find_Average_Of_Cube(n: int) -> float:\n    \"\"\"\n\tWrite a python function to find the average of cubes of first n natural numbers.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(2) == 4.5\n    assert candidate(3) == 12\n    assert candidate(1) == 1\n\ndef test_check():\n    check(find_Average_Of_Cube)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum = sum + i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i * i\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    return sum(i ** 3 for i in range(1, n + 1)) / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 3\n    return sum / n\n\n",
    "    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i * i\n    return sum / n\n\n",
    "    return sum(map(lambda x: x ** 3, range(1, n + 1))) / n\n\n"
  ]
}
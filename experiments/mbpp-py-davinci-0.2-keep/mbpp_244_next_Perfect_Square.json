{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "py",
  "prompt": "def next_Perfect_Square(N: int) -> int:\n    \"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(35) == 36\n    assert candidate(6) == 9\n    assert candidate(9) == 16\n\ndef test_check():\n    check(next_Perfect_Square)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if N < 0:\n        return -1\n    else:\n        i = 1\n        while i * i <= N:\n            i += 1\n        return i * i\n\n",
    "    return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return int(math.sqrt(N)) + 1\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return int(math.ceil(math.sqrt(N))) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return (N + 1) ** 2\n\n",
    "    return (N + 1) ** 2\n\n",
    "    return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return (N + 1) ** 2\n\n",
    "    return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return 0\n    else:\n        return int(math.sqrt(N)) + 1\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return N + 1 + 2 * int(math.sqrt(N))\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    if N == 0:\n        return 1\n    if N == 1:\n        return 4\n    if N == 2:\n        return 5\n    if N == 3:\n        return 6\n    if N == 4:\n        return 9\n    if N == 5:\n        return 10\n    if N == 6:\n        return 11\n    if N == 7:\n        return 12\n    if N == 8:\n        return 13\n    if N == 9:\n        return 16\n    if N == 10:\n        return 17\n    if N == 11:\n        return 18\n    if N == 12:\n        return 19\n    if N == 13:\n        return 20\n    if N == 14:\n        return 21\n    if N == 15:\n        return 22\n    if N == 16:\n        return 25\n    if N == 17:\n        return 26\n    if N == 18:\n        return 27\n    if N == 19:\n        return 28\n    if N == 20:\n        return 29\n    if N == 21:\n        return 30\n    if N == 22:\n        return 31\n    if N == 23:\n        return 32\n    if N == 24:\n        return 33\n    if N == 25:\n        return 36\n    if N == 26:\n        return 37\n    if N == 27:\n        return 38\n    if N == 28:\n        return 39\n    if N == 29:\n        return 40\n    if N == 30:\n        return 41\n    if N == 31:\n        return 42\n    if N == 32:\n        return 43\n    if N == 33:\n        return 44\n    if N == 34:\n        return 45\n    if N == 35:\n        return 46\n    if N == 36:\n        return 49\n    if N == 37:\n        return 50\n    if N == 38:\n        return 51\n    if N == 39:\n        return 52\n    if N == 40:\n        return 53\n    if N == 41:\n        return 54\n    if N == 42:\n        return 55\n    if N == 43:\n        return 56\n    if N == 44:\n        return 57\n    if N ==",
    "    if N < 0:\n        return -1\n    if N == 0:\n        return 1\n    if N == 1:\n        return 4\n    if N == 2:\n        return 4\n    if N == 3:\n        return 9\n    if N == 4:\n        return 9\n    if N == 5:\n        return 9\n    if N == 6:\n        return 9\n    if N == 7:\n        return 9\n    if N == 8:\n        return 16\n    if N == 9:\n        return 16\n    if N == 10:\n        return 16\n    if N == 11:\n        return 16\n    if N == 12:\n        return 16\n    if N == 13:\n        return 16\n    if N == 14:\n        return 16\n    if N == 15:\n        return 16\n    if N == 16:\n        return 25\n    if N == 17:\n        return 25\n    if N == 18:\n        return 25\n    if N == 19:\n        return 25\n    if N == 20:\n        return 25\n    if N == 21:\n        return 25\n    if N == 22:\n        return 25\n    if N == 23:\n        return 25\n    if N == 24:\n        return 25\n    if N == 25:\n        return 36\n    if N == 26:\n        return 36\n    if N == 27:\n        return 36\n    if N == 28:\n        return 36\n    if N == 29:\n        return 36\n    if N == 30:\n        return 36\n    if N == 31:\n        return 36\n    if N == 32:\n        return 36\n    if N == 33:\n        return 36\n    if N == 34:\n        return 36\n    if N == 35:\n        return 36\n    if N == 36:\n        return 49\n    if N == 37:\n        return 49\n    if N == 38:\n        return 49\n    if N == 39:\n        return 49\n    if N == 40:\n        return 49\n    if N == 41:\n        return 49\n    if N == 42:\n        return 49\n    if N == 43:\n        return 49\n    if N == 44:\n        return 49\n    if N ==",
    "    return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return N + (int(math.sqrt(N)) + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        i = 1\n        while i * i <= N:\n            i += 1\n        return i * i\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return (N + 1) ** 2\n\n",
    "    if N < 0:\n        return -1\n    else:\n        return (N + 1) ** 2\n\n\nprint(next_Perfect_Square(5))\n\n"
  ]
}
{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "py",
  "prompt": "from typing import Any\n\ndef consecutive_duplicates(nums: Any) -> Any:\n    \"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n    assert candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n    assert candidate(['a', 'a', 'b', 'c', 'd', 'd']) == ['a', 'b', 'c', 'd']\n    assert candidate(['a', 'a', 'b', 'c', 'd', 'd', 'a', 'a']) == ['a', 'b', 'c', 'd', 'a']\n\ndef test_check():\n    check(consecutive_duplicates)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 8, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 10, 10, 11, 11]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13,",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        else:\n            if nums[i] != nums[i-1]:\n                new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6]))\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) <= 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 8, 9, 10, 10, 10]))",
    "    if len(nums) <= 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 7, 7, 7, 8, 8, 9, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    result = []\n    for i in range(len(nums)):\n        if i == 0:\n            result.append(nums[i])\n        else:\n            if nums[i] != nums[i - 1]:\n                result.append(nums[i])\n    return result\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        new_list = []\n        for i in range(len(nums)):\n            if i == 0:\n                new_list.append(nums[i])\n            elif nums[i] != nums[i-1]:\n                new_list.append(nums[i])\n        return new_list\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if not nums:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 7, 7]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9]))\nprint(consecutive_duplicates(['a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e']))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 8, 9, 9, 9]))",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return nums\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            nums.pop(i)\n            return consecutive_duplicates(nums)\n    return nums\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    # TODO: Implement this function\n    pass\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])\n\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9]))\nprint(consecutive_duplicates",
    "    result = []\n    for i in nums:\n        if len(result) == 0 or i != result[-1]:\n            result.append(i)\n    return result\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))\nprint(consecutive_duplicates([]))\nprint(consecutive_duplicates([1]))",
    "    new_list = []\n    for i in nums:\n        if len(new_list) == 0 or i != new_list[-1]:\n            new_list.append(i)\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 1, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    return [x[0] for x in groupby(nums)]\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    elif nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9, 10, 10, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if not nums:\n        return []\n    result = []\n    for i in range(len(nums)):\n        if i == 0:\n            result.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            result.append(nums[i])\n    return result\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 8, 8]))",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    result = []\n    for i in nums:\n        if len(result) == 0 or i != result[-1]:\n            result.append(i)\n    return result\n\nprint(consecutive_duplicates([1, 1, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 8, 9, 4, 4]))\nprint(consecutive_duplicates([1, 2, 3]))\nprint(consecutive_duplicates([1, 1, 1]))\nprint(consecutive_duplicates([]))",
    "    return [x for i, x in enumerate(nums) if i == 0 or x != nums[i - 1]]\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    if len(nums) <= 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 7, 7, 7, 7, 8]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 8, 9, 9, 10]))",
    "    result = []\n    for i in range(len(nums)):\n        if i == 0:\n            result.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            result.append(nums[i])\n    return result\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 8, 8]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    if len(nums) == 0:\n        return nums\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    # TODO: Implement me\n    return None\n",
    "    if not nums:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    return [nums[i] for i in range(len(nums)) if nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([x for x in nums[1:] if x != nums[0]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates(['a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e']))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 8, 8]))",
    "    if not nums:\n        return nums\n    result = []\n    prev = nums[0]\n    result.append(prev)\n    for num in nums[1:]:\n        if num != prev:\n            result.append(num)\n        prev = num\n    return result\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 8, 8, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 8, 9, 9]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9, 9]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        new_list = []\n        new_list.append(nums[0])\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i-1]:\n                new_list.append(nums[i])\n        return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 10]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])\n\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    i = 0\n    while i < len(nums) - 1:\n        if nums[i] == nums[i + 1]:\n            nums.pop(i)\n        else:\n            i += 1\n    return nums\n\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]))\nprint(consecutive_duplicates([1,2,3,4,5,6,7,8,9,10]))\nprint(consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]))\nprint(consecutive_duplicates([1,2,3,4,5,6,7,8,9,10,10,10,10,10,10,10,10,10,10,10]))\nprint(consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2]))\nprint(consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 7, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2,",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    i = 0\n    while i < len(nums) - 1:\n        if nums[i] == nums[i + 1]:\n            del nums[i]\n        else:\n            i += 1\n    return nums\n\n",
    "    result = []\n    for i in range(len(nums)):\n        if i == 0 or nums[i] != nums[i - 1]:\n            result.append(nums[i])\n    return result\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    i = 0\n    while i < len(nums) - 1:\n        if nums[i] == nums[i + 1]:\n            nums.pop(i)\n        else:\n            i += 1\n    return nums\n\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1,1,1,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    if not nums:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9]))",
    "    if not nums:\n        return []\n    result = [nums[0]]\n    for i in range(1, len(nums)):\n        if nums[i] != nums[i - 1]:\n            result.append(nums[i])\n    return result\n",
    "    return [x[0] for x in groupby(nums)]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9]))",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 7]))",
    "    result = []\n    for i in range(len(nums)):\n        if i == 0 or nums[i] != nums[i - 1]:\n            result.append(nums[i])\n    return result\n\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n"
  ]
}
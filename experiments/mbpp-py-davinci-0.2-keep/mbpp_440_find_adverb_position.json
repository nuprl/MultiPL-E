{
  "name": "mbpp_440_find_adverb_position",
  "language": "py",
  "prompt": "from typing import Tuple, Union\n\ndef find_adverb_position(text: str) -> Tuple[Union[str, int]]:\n    \"\"\"\n\tWrite a function to find the first adverb and their positions in a given sentence.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('clearly!! we can see the sky') == (0, 7, 'clearly')\n    assert candidate('seriously!! there are many roses') == (0, 9, 'seriously')\n    assert candidate('unfortunately!! sita is going to home') == (0, 13, 'unfortunately')\n\ndef test_check():\n    check(find_adverb_position)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    text = nltk.word_tokenize(text)\n    pos_tag = nltk.pos_tag(text)\n    adverb = [word for word, pos in pos_tag if pos == 'RB']\n    if adverb:\n        return adverb[0], text.index(adverb[0])\n    return 'No adverb found', -1\n\nprint(find_adverb_position(\"He ran hurriedly towards the stadium.\"))\nprint(find_adverb_position(\"She was carefully disguised but captured quickly by the police.\"))\nprint(find_adverb_position(\"He drove recklessly.\"))\nprint(find_adverb_position(\"They got there early, and they got really good seats.\"))",
    "    pass",
    "    pass",
    "    adverbs = []\n    for token in nltk.word_tokenize(text):\n        if token in nltk.corpus.wordnet.all_synsets('r'):\n            adverbs.append(token)\n    if len(adverbs) > 0:\n        return adverbs[0], text.find(adverbs[0])\n    else:\n        return None, None\n\nprint(find_adverb_position(\"He ran hurriedly.\"))\nprint(find_adverb_position(\"She spoke softly.\"))\nprint(find_adverb_position(\"He was slowly becoming impatient.\"))\nprint(find_adverb_position(\"She read the book carefully to herself.\"))\nprint(find_adverb_position(\"I will never be this young again. Ever. Oh damn\u2026 I just got older.\"))\nprint(find_adverb_position(\"I wish I had hair.\"))\n",
    "    adverbs = []\n    for word, tag in nltk.pos_tag(nltk.word_tokenize(text)):\n        if tag == 'RB':\n            adverbs.append(word)\n    return adverbs[0], text.find(adverbs[0])\n\nprint(find_adverb_position(\"He ran hurriedly towards the stadium.\"))\nprint(find_adverb_position(\"She was carefully disguised but captured quickly by the police.\"))\nprint(find_adverb_position(\"He spoke softly.\"))",
    "    text = text.split()\n    for i, word in enumerate(text):\n        if word.endswith('ly'):\n            return word, i\n    return 'Not found', -1\n",
    "    pass",
    "    adverbs = []\n    for word, tag in nltk.pos_tag(nltk.word_tokenize(text)):\n        if tag == 'RB':\n            adverbs.append((word, tag))\n    return adverbs[0] if adverbs else 'No adverbs found'\n\nprint(find_adverb_position('He ran hurriedly. He always ran hurriedly.'))",
    "    pass",
    "    pass",
    "    adverbs = []\n    for word, tag in nltk.pos_tag(nltk.word_tokenize(text)):\n        if tag in ['RB', 'RBR', 'RBS']:\n            adverbs.append(word)\n    return adverbs[0], text.find(adverbs[0])\n",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    text = text.split()\n    for i, word in enumerate(text):\n        if word.endswith('ly'):\n            return word, i\n    return 'Not found', -1\n\n",
    "    pass",
    "    pass"
  ]
}
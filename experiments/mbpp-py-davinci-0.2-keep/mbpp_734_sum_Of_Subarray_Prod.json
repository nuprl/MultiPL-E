{
  "name": "mbpp_734_sum_Of_Subarray_Prod",
  "language": "py",
  "prompt": "from typing import List\n\ndef sum_Of_Subarray_Prod(arr: List[int]) -> int:\n    \"\"\"\n\tWrite a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3]) == 20\n    assert candidate([1, 2]) == 5\n    assert candidate([1, 2, 3, 4]) == 84\n\ndef test_check():\n    check(sum_Of_Subarray_Prod)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    n = len(arr)\n    sum_of_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_of_prod += prod\n    return sum_of_prod\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j + 1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum_of_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_of_prod += prod\n    return sum_of_prod\n",
    "    arr_len = len(arr)\n    sum_of_prod = 0\n    for i in range(arr_len):\n        prod = 1\n        for j in range(i, arr_len):\n            prod *= arr[j]\n            sum_of_prod += prod\n    return sum_of_prod\n",
    "    n = len(arr)\n    sum_of_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_of_prod += prod\n    return sum_of_prod\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j + 1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum_of_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_of_prod += prod\n    return sum_of_prod\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j + 1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j + 1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    res = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j + 1):\n                prod *= arr[k]\n            res += prod\n    return res\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum_of_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_of_prod += prod\n    return sum_of_prod\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    sum_of_subarray_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_of_subarray_prod += prod\n    return sum_of_subarray_prod\n",
    "    n = len(arr)\n    res = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            res += prod\n    return res\n",
    "    n = len(arr)\n    sum = 0\n    for i in range(n):\n        for j in range(i, n):\n            prod = 1\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum += prod\n    return sum\n",
    "    n = len(arr)\n    prod = 1\n    sum_prod = 0\n    for i in range(n):\n        for j in range(i, n):\n            for k in range(i, j+1):\n                prod *= arr[k]\n            sum_prod += prod\n            prod = 1\n    return sum_prod\n"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "py",
  "prompt": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_zero = 0\n    count_one = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_zero += 1\n        else:\n            count_one += 1\n        if count_zero == count_one:\n            max_len = max(max_len, count_zero + count_one)\n    count_zero = 0\n    count_one = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_zero += 1\n        else:\n            count_one += 1\n        if count_zero == count_one:\n            max_len = max(max_len, count_zero + count_one)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpma808rbw.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpma808rbw.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmpma808rbw.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in hash_map:\n                max_length = max(max_length, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpz1dc6edu.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpz1dc6edu.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpz1dc6edu.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpz1dc6edu.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_diff = max(max_diff, count_0)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpna4oq0k_.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpna4oq0k_.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpna4oq0k_.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            curr_diff += 1\n        else:\n            curr_diff -= 1\n        if curr_diff < 0:\n            curr_diff = 0\n        if curr_diff > max_diff:\n            max_diff = curr_diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_length = i + 1\n        if count in hash_map:\n            max_length = max(max_length, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5kapoffj.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp5kapoffj.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp5kapoffj.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp5kapoffj.py\", line 14, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in string:\n        if i == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        diff = abs(count_0 - count_1)\n        if diff > max_diff:\n            max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfpdecqk6.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpfpdecqk6.py\", line 25, in test_check\n    check(find_length)\n  File \"/tmp/tmpfpdecqk6.py\", line 20, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for i in string:\n        if i == '0':\n            curr_diff += 1\n        else:\n            curr_diff -= 1\n        max_diff = max(max_diff, abs(curr_diff))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnx6_lpz_.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpnx6_lpz_.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmpnx6_lpz_.py\", line 17, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpizllmt0h.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpizllmt0h.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpizllmt0h.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpizllmt0h.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy95a384s.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpy95a384s.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpy95a384s.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_str = string[i:j + 1]\n            diff = abs(sub_str.count('0') - sub_str.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxpwc5rmb.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpxpwc5rmb.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpxpwc5rmb.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    if len(string) == 0:\n        return 0\n    if len(string) == 1:\n        return 1\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpocdpxup7.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpocdpxup7.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpocdpxup7.py\", line 23, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in d:\n            max_length = max(max_length, i - d[count])\n        else:\n            d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp45ztq7hm.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp45ztq7hm.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp45ztq7hm.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp45ztq7hm.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for i in string:\n        if i == '0':\n            curr_diff += 1\n        else:\n            curr_diff -= 1\n        max_diff = max(max_diff, abs(curr_diff))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnx6_lpz_.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpnx6_lpz_.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmpnx6_lpz_.py\", line 17, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in string:\n        if i == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = max(max_len, count)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3i4ayqla.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp3i4ayqla.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp3i4ayqla.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count(\"0\") == string[i:j + 1].count(\"1\"):\n                max_len = max(max_len, j - i + 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplyhu_pm4.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmplyhu_pm4.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmplyhu_pm4.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    curr_len = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            curr_len += 1\n        else:\n            curr_len -= 1\n        if curr_len < 0:\n            curr_len = 0\n        if curr_len > max_len:\n            max_len = curr_len\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in string:\n        if i == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = max(max_len, len(string) - i)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyf61o_w0.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpyf61o_w0.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpyf61o_w0.py\", line 18, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpyf61o_w0.py\", line 13, in find_length\n    max_len = max(max_len, len(string) - i)\nTypeError: unsupported operand type(s) for -: 'int' and 'str'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsq_tu0sp.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpsq_tu0sp.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpsq_tu0sp.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpsq_tu0sp.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in string:\n        if i == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = max(max_len, count)\n        if count < 0:\n            count = 0\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4r6j4kcu.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmp4r6j4kcu.py\", line 25, in test_check\n    check(find_length)\n  File \"/tmp/tmp4r6j4kcu.py\", line 20, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in hash_map:\n                max_length = max(max_length, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpz1dc6edu.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpz1dc6edu.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpz1dc6edu.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpz1dc6edu.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8_lml9ny.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp8_lml9ny.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp8_lml9ny.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp8_lml9ny.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0u38nhqe.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp0u38nhqe.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmp0u38nhqe.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            max_length = max(max_length, i + 1 - find_index(count, count_dict))\n        count_dict[count] = i + 1\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe4opcr08.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpe4opcr08.py\", line 26, in test_check\n    check(find_length)\n  File \"/tmp/tmpe4opcr08.py\", line 21, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpe4opcr08.py\", line 15, in find_length\n    max_length = max(max_length, i + 1 - find_index(count, count_dict))\nNameError: name 'find_index' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for i in string:\n        if i == '0':\n            curr_diff -= 1\n        else:\n            curr_diff += 1\n        max_diff = max(max_diff, abs(curr_diff))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3ncgdnek.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ncgdnek.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmp3ncgdnek.py\", line 17, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in d:\n            max_length = max(max_length, i - d[count])\n        else:\n            d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdnstg9qi.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpdnstg9qi.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpdnstg9qi.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpdnstg9qi.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpogjbj9fl.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpogjbj9fl.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpogjbj9fl.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            if abs(string[i:j].count('0') - string[i:j].count('1')) > max_diff:\n                max_diff = abs(string[i:j].count('0') - string[i:j].count('1'))\n\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu2ln180l.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpu2ln180l.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpu2ln180l.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            diff = abs(string[i:j + 1].count(\"0\") - string[i:j + 1].count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvw34zf7f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpvw34zf7f.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpvw34zf7f.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    zeros = 0\n    ones = 0\n    max_diff = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            zeros += 1\n        else:\n            ones += 1\n        if zeros == ones:\n            max_diff = max(max_diff, zeros)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsiljmzi7.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpsiljmzi7.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpsiljmzi7.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2z763fm1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp2z763fm1.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp2z763fm1.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            max_diff = max(max_diff, abs(string[i:j + 1].count('0') - string[i:j + 1].count('1')))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphxkoy1bb.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmphxkoy1bb.py\", line 18, in test_check\n    check(find_length)\n  File \"/tmp/tmphxkoy1bb.py\", line 14, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprpiidi0b.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmprpiidi0b.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmprpiidi0b.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    n = len(string)\n    for i in range(n):\n        for j in range(i, n):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyywj_giv.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpyywj_giv.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpyywj_giv.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in hash_map:\n            max_length = max(max_length, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc0iuulr2.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpc0iuulr2.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpc0iuulr2.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpc0iuulr2.py\", line 14, in find_length\n    elif count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in d:\n                max_length = max(max_length, i - d[count])\n            else:\n                d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqhm6e_21.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpqhm6e_21.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpqhm6e_21.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpqhm6e_21.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_1 = 0\n    count_0 = 0\n    for i in range(len(string)):\n        if string[i] == '1':\n            count_1 += 1\n        else:\n            count_0 += 1\n        max_diff = max(max_diff, count_1 - count_0)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9shccl7b.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp9shccl7b.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp9shccl7b.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    # Initialize result\n    result = 0\n\n    # Initialize curr_count of zeroes and ones\n    n_zero = 0\n    n_one = 0\n\n    # Traverse the binary string\n    for i in range(len(string)):\n\n        # If current character is '0'\n        # increment n_zero\n        if string[i] == '0':\n            n_zero += 1\n\n        # Else increment n_one\n        else:\n            n_one += 1\n\n        # Update result if n_zero and n_one are\n        # not same\n        if n_zero != n_one:\n            result = max(result, abs(n_zero - n_one))\n\n    return result\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpq6ed8s09.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmpq6ed8s09.py\", line 38, in test_check\n    check(find_length)\n  File \"/tmp/tmpq6ed8s09.py\", line 33, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    # max_diff = 0\n    # curr_diff = 0\n    # for i in range(len(string)):\n    #     if string[i] == '0':\n    #         curr_diff -= 1\n    #     else:\n    #         curr_diff += 1\n    #     max_diff = max(max_diff, abs(curr_diff))\n    # return max_diff\n\n    # max_diff = 0\n    # curr_diff = 0\n    # for i in range(len(string)):\n    #     if string[i] == '0':\n    #         curr_diff -= 1\n    #     else:\n    #         curr_diff += 1\n    #     if curr_diff == 0:\n    #         max_diff = i + 1\n    #     elif curr_diff in d:\n    #         max_diff = max(max_diff, i - d[curr_diff])\n    #     else:\n    #         d[curr_diff] = i\n    # return max_diff\n\n    max_diff = 0\n    curr_diff = 0\n    d = {}\n    for i in range(len(string)):\n        if string[i] == '0':\n            curr_diff -= 1\n        else:\n            curr_diff += 1\n        if curr_diff == 0:\n            max_diff = i + 1\n        elif curr_diff in d:\n            max_diff = max(max_diff, i - d[curr_diff])\n        else:\n            d[curr_diff] = i\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpp5fzrf5l.py\", line 55, in <module>\n    test_check()\n  File \"/tmp/tmpp5fzrf5l.py\", line 53, in test_check\n    check(find_length)\n  File \"/tmp/tmpp5fzrf5l.py\", line 48, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    diff = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            diff -= 1\n        else:\n            diff += 1\n        if diff > max_diff:\n            max_diff = diff\n        if diff < 0:\n            diff = 0\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx6iqqkbe.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpx6iqqkbe.py\", line 25, in test_check\n    check(find_length)\n  File \"/tmp/tmpx6iqqkbe.py\", line 20, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') == string[i:j + 1].count('1'):\n                max_len = max(max_len, j - i + 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0y3_x6k3.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp0y3_x6k3.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmp0y3_x6k3.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') == string[i:j + 1].count('1'):\n                max_len = max(max_len, j - i + 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0y3_x6k3.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp0y3_x6k3.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmp0y3_x6k3.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2z763fm1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp2z763fm1.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp2z763fm1.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') - string[i:j + 1].count('1') > max_diff:\n                max_diff = string[i:j + 1].count('0') - string[i:j + 1].count('1')\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count = 0\n    max_count = 0\n    for i in string:\n        if i == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count < 0:\n            count = 0\n        if max_count < count:\n            max_count = count\n    return max_count\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_length = max(max_length, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_length = max(max_length, count_0 + count_1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwridcdau.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpwridcdau.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmpwridcdau.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            zeros = sub_string.count('0')\n            ones = sub_string.count('1')\n            diff = abs(zeros - ones)\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_wlz9khr.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp_wlz9khr.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp_wlz9khr.py\", line 19, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx6brg8xw.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpx6brg8xw.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpx6brg8xw.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2qrdh_14.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmp2qrdh_14.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmp2qrdh_14.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if i != len(string) - 1:\n            max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpp9k6qi3w.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpp9k6qi3w.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpp9k6qi3w.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt3ssh9pz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpt3ssh9pz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpt3ssh9pz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp__wtb281.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp__wtb281.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp__wtb281.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp__wtb281.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in string:\n        if i == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = max(max_len, len(string) - string.index(i))\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8f1ltexa.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp8f1ltexa.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp8f1ltexa.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprpiidi0b.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmprpiidi0b.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmprpiidi0b.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count(\"0\") == string[i:j + 1].count(\"1\"):\n                max_len = max(max_len, j - i + 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplyhu_pm4.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmplyhu_pm4.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmplyhu_pm4.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j+1].count('0') == string[i:j+1].count('1'):\n                max_length = max(max_length, j-i+1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2quokv2.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpt2quokv2.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmpt2quokv2.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in hash_map:\n                max_length = max(max_length, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2wnc5_y8.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp2wnc5_y8.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp2wnc5_y8.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp2wnc5_y8.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy95a384s.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpy95a384s.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpy95a384s.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            if sub_string.count(\"1\") == sub_string.count(\"0\"):\n                max_length = max(max_length, len(sub_string))\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo4nrq4tm.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpo4nrq4tm.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpo4nrq4tm.py\", line 15, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    if not string:\n        return 0\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsalrfwiq.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpsalrfwiq.py\", line 30, in test_check\n    check(find_length)\n  File \"/tmp/tmpsalrfwiq.py\", line 25, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpsalrfwiq.py\", line 17, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpizllmt0h.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpizllmt0h.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpizllmt0h.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpizllmt0h.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in string:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4djoebjq.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp4djoebjq.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp4djoebjq.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    curr_len = 0\n    count_zero = 0\n    count_one = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_zero += 1\n        else:\n            count_one += 1\n        curr_len += 1\n        if count_zero == count_one:\n            max_len = max(max_len, curr_len)\n        elif count_zero < count_one:\n            count_zero = 0\n            count_one = 0\n            curr_len = 0\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpiewqjfu8.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpiewqjfu8.py\", line 30, in test_check\n    check(find_length)\n  File \"/tmp/tmpiewqjfu8.py\", line 25, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            max_diff = max(max_diff, abs(string[i:j].count('0') - string[i:j].count('1')))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk4t_cq4w.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmpk4t_cq4w.py\", line 18, in test_check\n    check(find_length)\n  File \"/tmp/tmpk4t_cq4w.py\", line 14, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            max_diff = max(max_diff, abs(string[i:j + 1].count('0') - string[i:j + 1].count('1')))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphxkoy1bb.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmphxkoy1bb.py\", line 18, in test_check\n    check(find_length)\n  File \"/tmp/tmphxkoy1bb.py\", line 14, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count_zero = 0\n    count_one = 0\n    for i in string:\n        if i == '0':\n            count_zero += 1\n        else:\n            count_one += 1\n        max_length = max(max_length, abs(count_zero - count_one))\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2x_1pcjl.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp2x_1pcjl.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp2x_1pcjl.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx6brg8xw.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpx6brg8xw.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpx6brg8xw.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if i != len(string) - 1:\n            max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsdazen90.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpsdazen90.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpsdazen90.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            if string[i:j].count(\"0\") == string[i:j].count(\"1\"):\n                max_length = max(max_length, j - i)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpujlkgmb6.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpujlkgmb6.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmpujlkgmb6.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in d:\n            max_length = max(max_length, i - d[count])\n        else:\n            d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp45ztq7hm.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp45ztq7hm.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp45ztq7hm.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp45ztq7hm.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2z763fm1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp2z763fm1.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp2z763fm1.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_1 = 0\n    count_0 = 0\n    for i in range(len(string)):\n        if string[i] == \"1\":\n            count_1 += 1\n        else:\n            count_0 += 1\n        if i != len(string) - 1:\n            max_diff = max(max_diff, abs(count_1 - count_0))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg7zeo910.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpg7zeo910.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpg7zeo910.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            diff = abs(string[i:j + 1].count('0') - string[i:j + 1].count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx2rn97az.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpx2rn97az.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpx2rn97az.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in string:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpknpren78.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpknpren78.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpknpren78.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count = 0\n    max_count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count < 0:\n            count = 0\n        if count > max_count:\n            max_count = count\n    return max_count\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8_lml9ny.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp8_lml9ny.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp8_lml9ny.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp8_lml9ny.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n        elif count_0 > count_1:\n            count_0 = 0\n            count_1 = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n        elif count_0 < count_1:\n            count_0 = 0\n            count_1 = 0\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1qg3gc1d.py\", line 41, in <module>\n    test_check()\n  File \"/tmp/tmp1qg3gc1d.py\", line 39, in test_check\n    check(find_length)\n  File \"/tmp/tmp1qg3gc1d.py\", line 34, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in d:\n                max_length = max(max_length, i - d[count])\n            else:\n                d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptll5vfa9.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmptll5vfa9.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmptll5vfa9.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmptll5vfa9.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_zero = 0\n    count_one = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_zero += 1\n        else:\n            count_one += 1\n        max_diff = max(max_diff, abs(count_zero - count_one))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplx_3k72m.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmplx_3k72m.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmplx_3k72m.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if i != len(string) - 1:\n            max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsdazen90.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpsdazen90.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpsdazen90.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_length = max(max_length, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_length = max(max_length, count_0 + count_1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwridcdau.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpwridcdau.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmpwridcdau.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd2lvc_jv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpd2lvc_jv.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpd2lvc_jv.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp__wtb281.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp__wtb281.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp__wtb281.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp__wtb281.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_length = i + 1\n        if count in hash_map:\n            max_length = max(max_length, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5kapoffj.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp5kapoffj.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp5kapoffj.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp5kapoffj.py\", line 14, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprpiidi0b.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmprpiidi0b.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmprpiidi0b.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            diff = abs(string[i:j].count(\"0\") - string[i:j].count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphbui5hdb.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmphbui5hdb.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmphbui5hdb.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    curr_len = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            curr_len += 1\n        else:\n            curr_len -= 1\n        if curr_len < 0:\n            curr_len = 0\n        if curr_len > max_len:\n            max_len = curr_len\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpizllmt0h.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpizllmt0h.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpizllmt0h.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpizllmt0h.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3o6zvfba.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp3o6zvfba.py\", line 30, in test_check\n    check(find_length)\n  File \"/tmp/tmp3o6zvfba.py\", line 25, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp3o6zvfba.py\", line 16, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in string:\n        if i == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = max(max_len, len(string) - string.index(i) - 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj8dyhh77.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpj8dyhh77.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpj8dyhh77.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') == string[i:j + 1].count('1'):\n                max_length = max(max_length, j - i + 1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4qxrcokq.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4qxrcokq.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmp4qxrcokq.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0u38nhqe.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp0u38nhqe.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmp0u38nhqe.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_diff = i + 1\n        else:\n            if count in hashmap:\n                max_diff = max(max_diff, i - hashmap[count])\n            else:\n                hashmap[count] = i\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp05f5f039.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp05f5f039.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp05f5f039.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp05f5f039.py\", line 15, in find_length\n    if count in hashmap:\nNameError: name 'hashmap' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for i in string:\n        if i == '0':\n            curr_diff += 1\n        else:\n            curr_diff -= 1\n        max_diff = max(max_diff, abs(curr_diff))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnx6_lpz_.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpnx6_lpz_.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmpnx6_lpz_.py\", line 17, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = max(max_length, i + 1)\n        else:\n            if count in d:\n                max_length = max(max_length, i - d[count])\n            else:\n                d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpor1p3j0v.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpor1p3j0v.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpor1p3j0v.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpor1p3j0v.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0ygrjsuf.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp0ygrjsuf.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmp0ygrjsuf.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            max_diff = max(max_diff, abs(string[i:j + 1].count(\"0\") - string[i:j + 1].count(\"1\")))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2fi64d20.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp2fi64d20.py\", line 18, in test_check\n    check(find_length)\n  File \"/tmp/tmp2fi64d20.py\", line 14, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in hash_map:\n                max_length = max(max_length, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqfystsvi.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpqfystsvi.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpqfystsvi.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpqfystsvi.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsq_tu0sp.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpsq_tu0sp.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpsq_tu0sp.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpsq_tu0sp.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for char in string:\n        if char == \"0\":\n            curr_diff += 1\n        else:\n            curr_diff -= 1\n        max_diff = max(max_diff, abs(curr_diff))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg1ew7akb.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpg1ew7akb.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmpg1ew7akb.py\", line 17, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = max(max_len, len(string) - i - 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmv6mzqh_.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpmv6mzqh_.py\", line 31, in test_check\n    check(find_length)\n  File \"/tmp/tmpmv6mzqh_.py\", line 26, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2z763fm1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp2z763fm1.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp2z763fm1.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp__wtb281.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp__wtb281.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp__wtb281.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp__wtb281.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_len = i + 1\n        if count in hash_map:\n            max_len = max(max_len, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy5viod6t.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpy5viod6t.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpy5viod6t.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpy5viod6t.py\", line 14, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in string:\n        if i == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in string[::-1]:\n        if i == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzjr0e2g7.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpzjr0e2g7.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmpzjr0e2g7.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            diff = abs(string[i:j].count(\"0\") - string[i:j].count(\"1\"))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqdpw35u3.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpqdpw35u3.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmpqdpw35u3.py\", line 15, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            zeros = sub_string.count(\"0\")\n            ones = sub_string.count(\"1\")\n            diff = abs(zeros - ones)\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpro8_t965.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpro8_t965.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpro8_t965.py\", line 19, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_length = max(max_length, abs(count_0 - count_1))\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0g9msyqn.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp0g9msyqn.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp0g9msyqn.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    zero_count = 0\n    one_count = 0\n    max_diff = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            zero_count += 1\n        else:\n            one_count += 1\n        max_diff = max(max_diff, abs(zero_count - one_count))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpke6sp24h.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpke6sp24h.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpke6sp24h.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in string:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdttlupk1.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpdttlupk1.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmpdttlupk1.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0u38nhqe.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp0u38nhqe.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmp0u38nhqe.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in d:\n            max_length = max(max_length, i - d[count])\n        else:\n            d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdnstg9qi.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpdnstg9qi.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpdnstg9qi.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpdnstg9qi.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnsal2jjz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpnsal2jjz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpnsal2jjz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            zeros = string[i:j].count('0')\n            ones = string[i:j].count('1')\n            max_diff = max(max_diff, abs(zeros - ones))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpukeuunr6.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpukeuunr6.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpukeuunr6.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in count_dict:\n                max_length = max(max_length, i - count_dict[count])\n            else:\n                count_dict[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcrt8b1lg.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpcrt8b1lg.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpcrt8b1lg.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpcrt8b1lg.py\", line 15, in find_length\n    if count in count_dict:\nNameError: name 'count_dict' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp__wtb281.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp__wtb281.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp__wtb281.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp__wtb281.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            if string[i:j].count(\"0\") - string[i:j].count(\"1\") > max_diff:\n                max_diff = string[i:j].count(\"0\") - string[i:j].count(\"1\")\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        if count in hash_map:\n            max_length = max(max_length, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8oxpj9rw.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp8oxpj9rw.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp8oxpj9rw.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp8oxpj9rw.py\", line 14, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt3ssh9pz.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpt3ssh9pz.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpt3ssh9pz.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp__wtb281.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp__wtb281.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmp__wtb281.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp__wtb281.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in hash_map:\n                max_len = max(max_len, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpidsu86j6.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpidsu86j6.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpidsu86j6.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpidsu86j6.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count -= 1\n        else:\n            count += 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in hash_map:\n                max_length = max(max_length, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqfystsvi.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpqfystsvi.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpqfystsvi.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpqfystsvi.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    n = len(string)\n    max_len = 0\n    for i in range(n):\n        for j in range(i, n):\n            if string[i] == string[j]:\n                max_len = max(max_len, j - i + 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5sqtv5hx.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp5sqtv5hx.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmp5sqtv5hx.py\", line 15, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') == string[i:j + 1].count('1'):\n                max_length = max(max_length, j - i + 1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4qxrcokq.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4qxrcokq.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmp4qxrcokq.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    if not string:\n        return 0\n\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            max_length = max(max_length, abs(string[i:j + 1].count(\"0\") - string[i:j + 1].count(\"1\")))\n\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxslwq15z.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpxslwq15z.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmpxslwq15z.py\", line 18, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in hash_map:\n                max_len = max(max_len, i - hash_map[count])\n            else:\n                hash_map[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl9h4eih5.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpl9h4eih5.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpl9h4eih5.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpl9h4eih5.py\", line 15, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        if count in hash_map:\n            max_length = max(max_length, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8oxpj9rw.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp8oxpj9rw.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp8oxpj9rw.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp8oxpj9rw.py\", line 14, in find_length\n    if count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy95a384s.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpy95a384s.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpy95a384s.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_len = max(max_len, abs(count_0 - count_1))\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6ef310hh.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp6ef310hh.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp6ef310hh.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        count_0 = 0\n        count_1 = 0\n        for j in range(i, len(string)):\n            if string[j] == \"0\":\n                count_0 += 1\n            else:\n                count_1 += 1\n            max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphnp3brm4.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmphnp3brm4.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmphnp3brm4.py\", line 20, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    if not string:\n        return 0\n    max_length = 0\n    count = 0\n    for char in string:\n        if char == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = max(max_length, len(string))\n        else:\n            max_length = max(max_length, len(string) - count)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphmvl51i3.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmphmvl51i3.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmphmvl51i3.py\", line 22, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        count_0 = 0\n        count_1 = 0\n        for j in range(i, len(string)):\n            if string[j] == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n            if abs(count_0 - count_1) > max_length:\n                max_length = abs(count_0 - count_1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp78hka4yf.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp78hka4yf.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp78hka4yf.py\", line 23, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            if sub_string.count(\"0\") == sub_string.count(\"1\"):\n                max_length = max(max_length, len(sub_string))\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg395uhr5.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpg395uhr5.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpg395uhr5.py\", line 15, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            if abs(sub_string.count('0') - sub_string.count('1')) <= 1:\n                max_len = max(max_len, len(sub_string))\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgtw01neq.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpgtw01neq.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpgtw01neq.py\", line 15, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    if not string:\n        return 0\n\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n\n    count_0 = 0\n    count_1 = 0\n\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpq34p4wr7.py\", line 44, in <module>\n    test_check()\n  File \"/tmp/tmpq34p4wr7.py\", line 42, in test_check\n    check(find_length)\n  File \"/tmp/tmpq34p4wr7.py\", line 37, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in string:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_len = max(max_len, abs(count_0 - count_1))\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxk6279jb.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpxk6279jb.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpxk6279jb.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpizllmt0h.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpizllmt0h.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpizllmt0h.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpizllmt0h.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0u38nhqe.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp0u38nhqe.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmp0u38nhqe.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            if abs(string[i:j].count(\"0\") - string[i:j].count(\"1\")) > max_diff:\n                max_diff = abs(string[i:j].count(\"0\") - string[i:j].count(\"1\"))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpa__psqhs.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpa__psqhs.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmpa__psqhs.py\", line 15, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') == string[i:j + 1].count('1'):\n                max_len = max(max_len, j - i + 1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0y3_x6k3.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp0y3_x6k3.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmp0y3_x6k3.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            diff = abs(string[i:j].count(\"0\") - string[i:j].count(\"1\"))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqdpw35u3.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpqdpw35u3.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmpqdpw35u3.py\", line 15, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    n = len(string)\n    max_len = 0\n    for i in range(n):\n        for j in range(i, n):\n            max_len = max(max_len, max(count_zeros(string[i:j + 1]), count_ones(string[i:j + 1])))\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfhmh166c.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpfhmh166c.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmpfhmh166c.py\", line 14, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpfhmh166c.py\", line 9, in find_length\n    max_len = max(max_len, max(count_zeros(string[i:j + 1]), count_ones(string[i:j + 1])))\nNameError: name 'count_zeros' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_str = string[i:j]\n            if sub_str.count('0') == sub_str.count('1'):\n                max_len = max(max_len, len(sub_str))\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp14ju5m36.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp14ju5m36.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmp14ju5m36.py\", line 15, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in hash_map:\n            max_length = max(max_length, i - hash_map[count])\n        else:\n            hash_map[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjxeem2r7.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpjxeem2r7.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpjxeem2r7.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpjxeem2r7.py\", line 14, in find_length\n    elif count in hash_map:\nNameError: name 'hash_map' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string) - 1, -1, -1):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_len = max(max_len, count_0 + count_1)\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprpiidi0b.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmprpiidi0b.py\", line 33, in test_check\n    check(find_length)\n  File \"/tmp/tmprpiidi0b.py\", line 28, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            if string[i:j + 1].count('0') == string[i:j + 1].count('1'):\n                max_length = max(max_length, j - i + 1)\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4qxrcokq.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4qxrcokq.py\", line 19, in test_check\n    check(find_length)\n  File \"/tmp/tmp4qxrcokq.py\", line 14, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2z763fm1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp2z763fm1.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp2z763fm1.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    curr_diff = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            curr_diff += 1\n        else:\n            curr_diff -= 1\n        max_diff = max(max_diff, abs(curr_diff))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmhdxfbhv.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpmhdxfbhv.py\", line 22, in test_check\n    check(find_length)\n  File \"/tmp/tmpmhdxfbhv.py\", line 17, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            diff = abs(string[i:j].count('0') - string[i:j].count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2f3hx01q.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp2f3hx01q.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmp2f3hx01q.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            zero_count = sub_string.count('0')\n            one_count = sub_string.count('1')\n            diff = abs(zero_count - one_count)\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ibqllvq.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp1ibqllvq.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp1ibqllvq.py\", line 19, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        else:\n            if count in d:\n                max_len = max(max_len, i - d[count])\n            else:\n                d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsq_tu0sp.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpsq_tu0sp.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpsq_tu0sp.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpsq_tu0sp.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            zeros = sub_string.count('0')\n            ones = sub_string.count('1')\n            diff = abs(zeros - ones)\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_wlz9khr.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp_wlz9khr.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmp_wlz9khr.py\", line 19, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6_c_v1y0.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp6_c_v1y0.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmp6_c_v1y0.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        else:\n            if count in d:\n                max_length = max(max_length, i - d[count])\n            else:\n                d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqhm6e_21.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpqhm6e_21.py\", line 28, in test_check\n    check(find_length)\n  File \"/tmp/tmpqhm6e_21.py\", line 23, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpqhm6e_21.py\", line 15, in find_length\n    if count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count('0') - sub_string.count('1'))\n            max_diff = max(max_diff, diff)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpihxhyqts.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpihxhyqts.py\", line 20, in test_check\n    check(find_length)\n  File \"/tmp/tmpihxhyqts.py\", line 16, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_length = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_length = i + 1\n        elif count in d:\n            max_length = max(max_length, i - d[count])\n        else:\n            d[count] = i\n    return max_length\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp45ztq7hm.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp45ztq7hm.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmp45ztq7hm.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmp45ztq7hm.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i + 1, len(string) + 1):\n            sub_string = string[i:j]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvr425rjh.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvr425rjh.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpvr425rjh.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == count_1:\n            max_diff = max(max_diff, count_0)\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbx46r9z5.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpbx46r9z5.py\", line 24, in test_check\n    check(find_length)\n  File \"/tmp/tmpbx46r9z5.py\", line 19, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvmsa60kh.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpvmsa60kh.py\", line 23, in test_check\n    check(find_length)\n  File \"/tmp/tmpvmsa60kh.py\", line 18, in check\n    assert candidate('11000010001') == 6\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_len = 0\n    count = 0\n    for i in range(len(string)):\n        if string[i] == \"0\":\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            max_len = i + 1\n        elif count in d:\n            max_len = max(max_len, i - d[count])\n        else:\n            d[count] = i\n    return max_len\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwwslog8c.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwwslog8c.py\", line 27, in test_check\n    check(find_length)\n  File \"/tmp/tmpwwslog8c.py\", line 22, in check\n    assert candidate('11000010001') == 6\n  File \"/tmp/tmpwwslog8c.py\", line 14, in find_length\n    elif count in d:\nNameError: name 'd' is not defined. Did you mean: 'id'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def find_length(string: str) -> int:\n    \"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n    max_diff = 0\n    for i in range(len(string)):\n        for j in range(i, len(string)):\n            sub_string = string[i:j + 1]\n            diff = abs(sub_string.count(\"0\") - sub_string.count(\"1\"))\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef check(candidate):\n    assert candidate('11000010001') == 6\n    assert candidate('10111') == 1\n    assert candidate('11011101100101') == 2\n\ndef test_check():\n    check(find_length)\n\ntest_check()\n",
      "timestamp": 1665509954,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy95a384s.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpy95a384s.py\", line 21, in test_check\n    check(find_length)\n  File \"/tmp/tmpy95a384s.py\", line 17, in check\n    assert candidate('10111') == 1\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
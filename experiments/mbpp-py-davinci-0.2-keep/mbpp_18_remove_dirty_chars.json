{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "py",
  "prompt": "def remove_dirty_chars(string: str, second_string: str) -> str:\n    \"\"\"\n\tWrite a function to remove characters from the first string which are present in the second string.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate('probasscurve', 'pros') == 'bacuve'\n    assert candidate('digitalindia', 'talent') == 'digiidi'\n    assert candidate('exoticmiles', 'toxic') == 'emles'\n\ndef test_check():\n    check(remove_dirty_chars)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return \"\".join(char for char in string if char not in second_string)\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    return \"\".join([char for char in string if char not in second_string])\n\n",
    "    return \"\".join(\n        [char for char in string if char not in second_string]\n    )\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    return \"\".join([i for i in string if i not in second_string])\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    return \"\".join(\n        [char for char in string if char not in second_string]\n    )  # list comprehension\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    return \"\".join([char for char in string if char not in second_string])\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    for char in second_string:\n        string = string.replace(char, \"\")\n    return string\n\n",
    "    return \"\".join([char for char in string if char not in second_string])\n\n",
    "    return \"\".join([char for char in string if char not in second_string])\n\n",
    "    return \"\".join(c for c in string if c not in second_string)\n\n"
  ]
}
{
  "name": "mbpp_777_find_sum",
  "language": "py",
  "prompt": "from typing import List\n\ndef find_sum(arr: List[int]) -> int:\n    \"\"\"\n\tWrite a python function to find the sum of non-repeated elements in a given list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3, 1, 1, 4, 5, 6]) == 21\n    assert candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]) == 71\n    assert candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]) == 78\n\ndef test_check():\n    check(find_sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return sum(set(arr))\n\nprint(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n\nprint(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n\nprint(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\nprint(find_sum([1,2,3,4,5,6,7,8,9,10]))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    sum = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            sum += i\n    return sum\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\nprint(find_sum([1,2,3,4,5,6,7,8,9,10]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\nprint(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    sum = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            sum += i\n    return sum\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\nprint(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\nprint(find_sum([1, 2, 3, 4, 3, 2, 1]))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    sum = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            sum += i\n    return sum\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))",
    "    sum = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            sum += i\n    return sum\n",
    "    return sum(set(arr))\n",
    "    sum = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            sum += i\n    return sum\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum([x for x in arr if arr.count(x) == 1])\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n",
    "    return sum(set(arr))\n"
  ]
}
{
  "name": "mbpp_803_is_perfect_square",
  "language": "py",
  "prompt": "def is_perfect_square(n: int) -> bool:\n    \"\"\"\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate(10) == False\n    assert candidate(36) == True\n    assert candidate(14) == False\n    assert candidate(196) == True\n    assert candidate(125) == False\n    assert candidate(15625) == True\n\ndef test_check():\n    check(is_perfect_square)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    for i in range(1, n // 2 + 1):\n        if i * i == n:\n            return True\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    while i * i <= n:\n        if i * i == n:\n            return True\n        i += 1\n    return False\n\n",
    "    if n < 0:\n        return False\n    if n == 0 or n == 1:\n        return True\n    i = 1\n    j = n // 2\n    while i <= j:\n        mid = (i + j) // 2\n        if mid * mid == n:\n            return True\n        if mid * mid < n:\n            i = mid + 1\n        else:\n            j = mid - 1\n    return False\n\n"
  ]
}
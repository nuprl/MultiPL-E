{
  "name": "mbpp_591_swap_List",
  "language": "py",
  "prompt": "from typing import List\n\ndef swap_List(newList: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a python function to interchange the first and last elements in a list.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_591_swap_List.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([12, 35, 9, 56, 24]) == [24, 35, 9, 56, 12]\n    assert candidate([1, 2, 3]) == [3, 2, 1]\n    assert candidate([4, 5, 6]) == [6, 5, 4]\n\ndef test_check():\n    check(swap_List)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5,6]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n\nnewList = [12, 35, 9, 56, 24]\nprint(swap_List(newList))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5,6]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    first = newList[0]\n    last = newList[-1]\n    newList[0] = last\n    newList[-1] = first\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    size = len(newList)\n\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    # Swap the first and last elements\n    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))\nprint(swap_List([1,2,3,4]))\nprint(swap_List([1,2,3]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5, 6]))",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))\nprint(swap_List([1, 2, 3, 4, 5, 6]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5,6,7,8,9]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    first, *middle, last = newList\n    newList = [last, *middle, first]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n\n"
  ]
}
{
  "name": "mbpp_460_Extract",
  "language": "py",
  "prompt": "from typing import List\n\ndef Extract(lst: List[List[int]]) -> List[int]:\n    \"\"\"\n\tWrite a python function to get the first element of each sublist.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([[1, 2], [3, 4, 5], [6, 7, 8, 9]]) == [1, 3, 6]\n    assert candidate([[1, 2, 3], [4, 5]]) == [1, 4]\n    assert candidate([[9, 8, 1], [1, 2]]) == [9, 1]\n\ndef test_check():\n    check(Extract)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [item[0] for item in lst]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [x[0] for x in lst]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [i[0] for i in lst]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [sublist[0] for sublist in lst]\n",
    "    return [i[0] for i in lst]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n",
    "    return [lst[i][0] for i in range(len(lst))]\n"
  ]
}
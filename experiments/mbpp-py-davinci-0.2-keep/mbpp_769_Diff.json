{
  "name": "mbpp_769_Diff",
  "language": "py",
  "prompt": "from typing import List\n\ndef Diff(li1: List[int], li2: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a python function to get the difference between two lists.\n\t\"\"\"\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "def check(candidate):\n    assert candidate([10, 15, 20, 25, 30, 35, 40], [25, 40, 35]) == [10, 20, 30, 15]\n    assert candidate([1, 2, 3, 4, 5], [6, 7, 1]) == [2, 3, 4, 5, 6, 7]\n    assert candidate([1, 2, 3], [6, 7, 1]) == [2, 3, 6, 7]\n\ndef test_check():\n    check(Diff)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    li_dif = [i for i in li1 + li2 if i not in li1 or i not in li2]\n    return li_dif\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1).difference(set(li2)))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    li_dif = [i for i in li1 + li2 if i not in li1 or i not in li2]\n    return li_dif\n",
    "    return list(set(li1) - set(li2))\n",
    "    li_dif = [i for i in li1 + li2 if i not in li1 or i not in li2]\n    return li_dif\n\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n",
    "    return list(set(li1) - set(li2))\n"
  ]
}
name: HumanEval_95_check_dict_case
language: pl
prompt: "# Given a dictionary, return True if all keys are strings in lower \n# case\
  \ or all keys are strings in upper case, else return False.\n# The function should\
  \ return False is the given dictionary is empty.\n# Examples:\n# >>> check_dict_case({\"\
  a\" => \"apple\", \"b\" => \"banana\"})\n# 1\n# >>> check_dict_case({\"a\" => \"\
  apple\", \"A\" => \"banana\", \"B\" => \"banana\"})\n# \"\"\n# >>> check_dict_case({\"\
  a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"})\n# \"\"\n# >>> check_dict_case({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"})\n# \"\"\n# >>>\
  \ check_dict_case({\"STATE\" => \"NC\", \"ZIP\" => \"12345\"})\n# 1\nsub check_dict_case\
  \ {\n    my($dict) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_dict_case;\n\
  \        if(eq_deeply($candidate->({\"p\" => \"pineapple\", \"b\" => \"banana\"\
  }),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\"}),\"\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\"}),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->({\"fruit\" => \"\
  Orange\", \"taste\" => \"Sweet\"}),1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->({}),\"\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n   \
    \     my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n     \
    \       $result = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n    \
    \        $result = $result && $value =~ /^[a-z]+$/i;\n        } elsif ($key =~\
    \ /^[A-Z]+$/i) {\n            $result = $result && $value =~ /^[A-Z]+$/i;\n  \
    \      } else {\n            $result = 0;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n \
    \           $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $case = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($case eq \"\
    lower\") {\n            $value =~ tr/a-z/A-Z/;\n        } elsif ($case eq \"upper\"\
    ) {\n            $value =~ tr/A-Z/a-z/;\n        } else {\n            $ok = 0;\n\
    \        }\n        if (!$ok) {\n            $ok = check_dict_case($dict->{sub}{$key});\n\
    \        }\n    }\n    return $ok;\n}", "    my $result = 1;\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key =~\
    \ /^[a-z]+$/i) {\n            $result = $result && $value =~ /^[a-z]+$/i;\n  \
    \      } elsif ($key =~ /^[A-Z]+$/i) {\n            $result = $result && $value\
    \ =~ /^[A-Z]+$/i;\n        } else {\n            $result = 0;\n        }\n   \
    \ }\n    return $result;\n}", "    my $result = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i)\
    \ {\n            $result = $result && $value =~ /^[a-z]+$/i;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/i) {\n            $result = $result && $value =~ /^[A-Z]+$/i;\n\
    \        } else {\n            $result = 0;\n        }\n    }\n    return $result;\n\
    }", "    \n    my $result = 1;\n    \n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        \n        if ($key =~ /^[A-Z]+$/)\
    \ {\n            $result = $result && $value =~ /^[a-z]+$/;\n        } elsif ($key\
    \ =~ /^[a-z]+$/) {\n            $result = $result && $value =~ /^[A-Z]+$/;\n \
    \       } else {\n            $result = 0;\n        }\n    }\n    \n    return\
    \ $result;\n}", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n    \
    \        $result = $result && $value =~ /^[a-z]+$/i;\n        } elsif ($key =~\
    \ /^[A-Z]+$/i) {\n            $result = $result && $value =~ /^[A-Z]+$/i;\n  \
    \      } else {\n            $result = 0;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        my $value_lower = lc($value);\n        my $value_upper\
    \ = uc($value);\n        if ($key =~ /^[A-Z]+$/) {\n            if ($value_lower\
    \ ne $value_upper) {\n                $result = 0;\n            }\n        } elsif\
    \ ($key !~ /^[A-Z]+$/) {\n            $result = 0;\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        my $case = lc($key);\n        if\
    \ ($case ne $key && $case ne $value && $case ne \"STATE\" && $case ne \"ZIP\"\
    ) {\n            $result = 0;\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        my $case = lc($key);\n        if\
    \ ($case ne $key && $case ne uc($key)) {\n            $result = 0;\n        }\n\
    \    }\n    return $result;\n}", "    my $result = 1;\n    foreach my $key (keys(%$dict))\
    \ {\n        my $value = $dict->{$key};\n        my $lowercase = lc($key);\n \
    \       my $uppercase = uc($key);\n        if ($value =~ /^$lowercase$/i) {\n\
    \            $result = 0;\n        }\n        if ($value =~ /^$uppercase$/i) {\n\
    \            $result = 0;\n        }\n    }\n    return $result;\n}", "    my\
    \ $result = 1;\n    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n\
    \        if (ref($value) eq \"HASH\") {\n            $result = check_dict_case($value)\
    \ if (keys(%$value) > 0);\n        } elsif (ref($value) eq \"ARRAY\") {\n    \
    \        $result = check_dict_case($value) if (@$value > 0);\n        } elsif\
    \ (ref($value) eq \"SCALAR\") {\n            $result = check_dict_case($value)\
    \ if ($value eq \"true\" || $value eq \"false\");\n        } elsif (ref($value)\
    \ eq \"CODE\") {\n            $result = check_dict_case($value) if ($value->($dict));\n\
    \        } elsif (ref($value) eq \"GLOB\") {\n            $result = check_dict_case($value)\
    \ if ($value eq \"true\" || $value eq \"false\");\n        } elsif (ref($value)\
    \ eq \"IO::Handle\") {\n            $result = check_dict_case($value) if ($value\
    \ eq \"true\" || $value eq \"false\");\n        } elsif (ref($value) eq \"IO::File\"\
    ) {\n            $result = check_dict_case($value) if ($value eq \"true\" || $value\
    \ eq \"false\");\n        } elsif (ref($value) eq \"IO::Socket\") {\n        \
    \    $result = check_dict_case($value) if ($value eq \"true\" || $value eq \"\
    false\");\n        } elsif (ref($value) eq \"IO::Select\") {\n            $result\
    \ = check_dict_case($value) if ($value eq \"true\" || $value eq \"false\");\n\
    \        } elsif (ref($value) eq \"IO::Poll\") {\n            $result = check_dict_case($value)\
    \ if ($value eq \"true\" || $value eq \"false\");\n        } elsif (ref($value)\
    \ eq \"IO::Dir\") {\n            $result = check_dict_case($value) if ($value\
    \ eq \"true\" || $value eq \"false\");\n        } elsif (ref($value) eq \"IO::Seekable\"\
    ) {\n            $result = check_dict_case($value) if ($value eq \"true\" || $value\
    \ eq \"false\");\n        } elsif (ref($value) eq \"IO::Socket::INET\") {\n  \
    \          $result = check_dict_case($value) if ($value eq \"true\" || $value\
    \ eq \"false\");\n        } elsif (ref($value) eq \"IO::Socket::UNIX\") {\n  \
    \          $", "    my $result = 1;\n    foreach my $key (keys(%$dict)) {\n  \
    \      my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n     \
    \       $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            return 1;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/i) {\n            return 1;\n        } else {\n            return\
    \ 0;\n        }\n    }\n    return 0;\n}", "    my $result = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key\
    \ =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n        }\n\
    \        if ($key =~ /^[A-Z]+$/i) {\n            $result = 0;\n            last;\n\
    \        }\n    }\n    return $result;\n}", "    my $flag = 0;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key\
    \ =~ /^[a-z]+$/i) {\n            $flag = 1;\n        } elsif ($key =~ /^[A-Z]+$/i)\
    \ {\n            $flag = 0;\n        } else {\n            $flag = 1;\n      \
    \  }\n    }\n    return $flag;\n}", "    \n    foreach my $key (keys(%$dict))\
    \ {\n        my $value = $dict->{$key};\n        \n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            return 1;\n        }\n        elsif ($value =~ /^[A-Z]+$/i) {\n\
    \            return 1;\n        }\n    }\n    \n    return 0;\n}", "    my $result\
    \ = 1;\n    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n\
    \        my $value_lower = lc($value);\n        my $value_upper = uc($value);\n\
    \        if ($value_lower ne $value_upper) {\n            $result = 0;\n     \
    \       last;\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n  \
    \      if ($key =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n\
    \        } elsif ($key =~ /^[A-Z]+$/i) {\n            $result = 0;\n         \
    \   last;\n        } else {\n            $result = 1;\n        }\n    }\n    return\
    \ $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

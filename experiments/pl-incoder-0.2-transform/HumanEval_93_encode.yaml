name: HumanEval_93_encode
language: pl
prompt: "# Write a function that takes a message, and encodes in such a \n# way that\
  \ it swaps case of all letters, replaces all vowels in \n# the message with the\
  \ letter that appears 2 places ahead of that \n# vowel in the english alphabet.\
  \ \n# Assume only letters. \n# Examples:\n# >>> encode(\"test\")\n# \"TGST\"\n#\
  \ >>> encode(\"This is a message\")\n# \"tHKS KS C MGSSCGG\"\nsub encode {\n   \
  \ my($message) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&encode;\n\
  \        if(eq_deeply($candidate->(\"TEST\"),\"tgst\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Mudasir\"\
  ),\"mWDCSKR\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"YES\"),\"ygs\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"This is a message\"\
  ),\"tHKS KS C MGSSCGG\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(\"I DoNt KnOw WhAt tO WrItE\"),\"k dQnT\
  \ kNqW wHcT Tq wRkTg\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n}\n\ntesthumaneval();"
completions: ["    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w\
    \ x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_found = 0;\n    my $letter_found\
    \ = 0;\n    my $letter;\n    my $vowel;\n    foreach $letter (split(//, $message))\
    \ {\n        $letter_found = 0;\n        $vowel_found = 0;\n        $new_message\
    \ .= $letter;\n        foreach $vowel (split(//, $alphabet)) {\n            $vowel_found\
    \ = 0;\n            foreach $letter (split(//, $message)) {\n                $letter_found\
    \ = 0;\n                if ($letter eq $vowel) {\n                    $letter_found\
    \ = 1;\n                    $new_message .= $alphabet[$j];\n                 \
    \   $j++;\n                }\n                else {\n                    if ($letter_found\
    \ == 1) {\n                        $new_message .= $vowel;\n                 \
    \       $vowel_found = 1;\n                    }\n                }\n        \
    \    }\n        }\n    }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThis doesn't work for the input `This is a message`\n<|/ c |>\n\
    <| c |>\n: It does work for the input `This is a message`. `This is a message`\
    \ becomes `tHKS KS C MGSSCGG`.\n<|/ c |>\n<| c |>\n: I added a comment to the\
    \ OP's question to clarify that he wants to swap case. Your solution doesn't do\
    \ that.\n<|/ c |>\n<| c |>\n: I added a comment to the OP's question to clarify\
    \ that he wants to swap case. Your solution doesn't do that.\n<|/ c |>\n<| c |>\n\
    : I added a comment to the OP's question to clarify that he wants to swap case.\
    \ Your solution doesn't do that.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    my\
    \ $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my\
    \ $vowels = qw(a e i o u);\n    my $vowel_positions = map { $alphabet[$_] } 0\
    \ .. length($alphabet) - 1;\n    my $vowel_positions_2 = map { $alphabet[$_] }\
    \ 0 .. length($alphabet) - 2;\n    my $vowel_positions_3 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 3;\n    my $vowel_positions_4 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 4;\n    my $vowel_positions_5 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 5;\n    my $vowel_positions_6 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 6;\n    my $vowel_positions_7 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 7;\n    my $vowel_positions_8 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 8;\n    my $vowel_positions_9 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 9;\n    my $vowel_positions_10 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 10;\n    my $vowel_positions_11 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 11;\n    my $vowel_positions_12 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 12;\n    my $vowel_positions_13 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 13;\n    my $vowel_positions_14 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 14;\n    my $vowel_positions_15 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 15;\n    my $vowel_positions_16 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 16;\n    my $vowel_positions_17 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 17;\n    my $vowel_positions_18 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 18;\n    my $vowel_positions_19 = map { $alphabet[$_]\
    \ } 0 .. length($alphabet) - 19;\n    my $vowel_positions_20 = map { $alphabet[$_]\
    \ } 0 .. ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//,\
    \ $message)) {\n        my $index = index($alphabet, $letter);\n        if ($index\
    \ != -1) {\n            $new_message .= substr($alphabet, $index, 1);\n      \
    \  }\n        else {\n            $new_message .= $letter;\n        }\n    }\n\
    \    \n    foreach my $letter (split(//, $message)) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= substr($alphabet,\
    \ $index + 1, 1);\n        }\n        else {\n            $new_message .= $letter;\n\
    \        }\n    }\n    \n    return $new_message;\n}", "    my $vowels = \"aeiou\"\
    ;\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $encoded = \"\";\n\
    \    my $index = 0;\n    my $vowel_index = 0;\n    my $letter_index = 0;\n   \
    \ my $vowel_letter = \"\";\n    my $letter_letter = \"\";\n    my $vowel_letter_2\
    \ = \"\";\n    my $letter_letter_2 = \"\";\n    my $vowel_letter_3 = \"\";\n \
    \   my $letter_letter_3 = \"\";\n    my $vowel_letter_4 = \"\";\n    my $letter_letter_4\
    \ = \"\";\n    my $vowel_letter_5 = \"\";\n    my $letter_letter_5 = \"\";\n \
    \   my $vowel_letter_6 = \"\";\n    my $letter_letter_6 = \"\";\n    my $vowel_letter_7\
    \ = \"\";\n    my $letter_letter_7 = \"\";\n    my $vowel_letter_8 = \"\";\n \
    \   my $letter_letter_8 = \"\";\n    my $vowel_letter_9 = \"\";\n    my $letter_letter_9\
    \ = \"\";\n    my $vowel_letter_10 = \"\";\n    my $letter_letter_10 = \"\";\n\
    \    my $vowel_letter_11 = \"\";\n    my $letter_letter_11 = \"\";\n    my $vowel_letter_12\
    \ = \"\";\n    my $letter_letter_12 = \"\";\n    my $vowel_letter_13 = \"\";\n\
    \    my $letter_letter_13 = \"\";\n    my $vowel_letter_14 = \"\";\n    my $letter_letter_14\
    \ = \"\";\n    my $vowel_letter_15 = \"\";\n    my $letter_letter_15 = \"\";\n\
    \    my $vowel_letter_16 = \"\";\n    my $letter_letter_16 = \"\";\n    my $vowel_letter_17\
    \ = \"\";\n    my $letter_letter_17 = \"\";\n    my $vowel_letter_18 = \"\";\n\
    \    my $letter_letter_18 = \"\";\n    my $vowel_letter_19 = \"\";\n    my $letter_letter_19\
    \ = \"\";\n    my $vowel_letter_20 = \"\";\n    my $letter_letter_20 = \"\";\n\
    \    my $vowel_letter_21 = \"\";\n    my $letter_letter_21 = \"\";\n    my $vowel_letter_22\
    \ = \"\";\n    my $letter_letter_22 = \"\";\n    my $vowel_letter_23 = \"\";\n\
    \    my $letter_letter_23 = \"\";\n    my $vowel_letter_24 = \"\";\n    my $letter_letter_24\
    \ = \"\";\n    my $vowel_letter_25 = \"\";\n    my $letter_letter_25 = \"\";\n\
    \    my $vowel_letter_26 = \"\";\n    my $letter_letter_26 = \"\";\n    my $vowel_letter_27\
    \ = \"\";\n    my $letter_letter_27 = \"\";\n    my $vowel_letter_28 = \"\";\n\
    \    my $letter_letter_28 = \"\";\n    my $vowel_letter_29 = \"\";\n    my $letter_letter_29\
    \ = \"\";\n    my $vowel_letter_30 = \"\";\n    my $letter_letter_30 = \"\";\n\
    \    my $vowel_letter_31 = \"\";\n    my $letter_letter_3", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        if ($letter\
    \ =~ /[AEIOU]/) {\n            $new_message .= $letter;\n        }\n        else\
    \ {\n            $new_message .= $alphabet[$alphabet =~ /(?<!^)(?!$)([AEIOU])(?!$)/];\n\
    \        }\n    }\n    \n    return $new_message;\n}", "    my $alphabet = \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new = \"\"\
    ;\n    \n    foreach my $letter (split //, $message) {\n        my $pos = index($alphabet,\
    \ $letter);\n        if ($pos > -1) {\n            my $vowel_pos = $pos + 1;\n\
    \            my $vowel_letter = $alphabet->[$vowel_pos];\n            my $new_letter\
    \ = $alphabet->[$pos];\n            $new .= $new_letter if ($new_letter ne $vowel_letter);\n\
    \        }\n    }\n    return $new;\n}", "    my $message = $message;\n    my\
    \ $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n \
    \   my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4\
    \ = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\";\n    my\
    \ $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIO", "    $message =~ tr/A-Z/a-z/;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[AEIOU]/[aeiou]/g;\n    return $message;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `tr/A-Z/a-z/` replaces\
    \ every uppercase letter with lowercase letters. `s/[aeiou]/[AEIOU]/g` replaces\
    \ every vowel with itself. `s/[AEIOU]/[aeiou]/g` replaces every vowel with itself.\
    \ `tr/A-Z/a-z/` replaces every uppercase letter with lowercase letters. `s/[aeiou]/[AEIOU]/g`\
    \ replaces every vowel with itself. `s/[AEIOU]/[aeiou]/g` replaces every vowel\
    \ with itself.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed it by\
    \ adding `tr/A-Z/a-z/;` before `s/[aeiou]/[AEIOU]/g;`. And `tr/A-Z/a-z/;` before\
    \ `s/[AEIOU]/[aeiou]/g;`. That should do it.\n<|/ c |>\n<| c |>\nThanks for your\
    \ help. I appreciate it.\n<|/ c |>\n<| a |>\n<code>", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $result = '';\n    \n    foreach my $letter\
    \ (split //, $message) {\n        my $index = index($alphabet, $letter);\n   \
    \     if ($index != -1) {\n            $letter = $alphabet[$index + 1];\n    \
    \    }\n        \n        foreach my $vowel (split //, $vowels) {\n          \
    \  my $index = index($vowels, $vowel);\n            if ($index != -1) {\n    \
    \            $vowel = $vowels[$index + 1];\n            }\n            \n    \
    \        $result .= $letter;\n        }\n    }\n    \n    return $result;\n}",
  "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index >= 0)\
    \ {\n            $new_message .= $alphabet[$index + 1];\n        }\n    }\n  \
    \  \n    foreach my $letter (split //, $message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index >= 0) {\n            $new_message .= $alphabet[$index\
    \ + 2];\n        }\n    }\n    \n    return $new_message;\n}", "    my $alphabet\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels =\
    \ \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $vowel_count = 0;\n    my $letter;\n    my $vowel;\n   \
    \ foreach $letter (split(//, $message)) {\n        if ($letter eq \"a\") {\n \
    \           $new_message .= $alphabet[$j];\n            $j++;\n        } elsif\
    \ ($letter eq \"e\") {\n            $new_message .= $alphabet[$j + 1];\n     \
    \       $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"o\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"y\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"a\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"o\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"y\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"a\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"o\"\
    ) {\n            $new_message .= $alphabet[$j", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        } else {\n            $new_message .= $letter;\n        }\n   \
    \ }\n    \n    foreach my $vowel (split //, $vowels) {\n        $new_message =~\
    \ s/$vowel/$alphabet[$alphabet =~ tr/AEIOU/AEIOU/r]/g;\n    }\n    \n    return\
    \ $new_message;\n}", "    \n    # Write your code here\n    \n    return $message;\n\
    }", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            my $vowel_index = index($vowels, $letter);\n            if ($vowel_index\
    \ != -1) {\n                $new_message .= substr($alphabet, $index, 1) . substr($alphabet,\
    \ $vowel_index + 2, 1);\n            } else {\n                $new_message .=\
    \ substr($alphabet, $index, 1);\n            }\n        } else {\n           \
    \ $new_message .= $letter;\n        }\n    }\n    return $new_message;\n}", " \
    \   my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $letters =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels2;\n    my $letters2;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n\
    \    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n\
    \    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n\
    \    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n\
    \    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            my $vowel_index = index($vowels, $letter);\n            if ($vowel_index\
    \ != -1) {\n                $new_message .= substr($alphabet, $vowel_index + 2,\
    \ 1) . $letter;\n            } else {\n                $new_message .= substr($alphabet,\
    \ $index + 2, 1) . $letter;\n            }\n        } else {\n            $new_message\
    \ .= $letter;\n        }\n    }\n    return $new_message;\n}", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $pos\
    \ = $alphabet =~ tr/AEIOU/AEIOU/;\n        $new_message .= $alphabet =~ tr/AEIOU/AEIOU/;\n\
    \        $new_message .= substr($alphabet, $pos + 1, 1) if $pos > 0;\n       \
    \ $new_message .= $letter;\n    }\n    return $new_message;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThanks for your answer. Your code works perfectly for\
    \ me. I just had to change `my $pos = $alphabet =~ tr/AEIOU/AEIOU/;` to `my $pos\
    \ = $alphabet =~ tr/AEIOU/AEIOU/;` and it worked perfectly. Thanks again!\n<|/\
    \ c |>\n<| c |>\nOops, sorry. I missed that one. Thanks for pointing it out. I've\
    \ fixed the code in the answer.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\nuse\
    \ utf8;\nuse strict;\nuse warnings;", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_found = 0;\n    my $letter_found\
    \ = 0;\n    my $letter;\n    my $vowel;\n    my $new_letter;\n    foreach $letter\
    \ (split //, $message) {\n        $letter_found = 0;\n        $vowel_found = 0;\n\
    \        $new_letter = \"\";\n        foreach $vowel (split //, $vowels) {\n \
    \           $new_letter .= $letter;\n            $letter_found = 1;\n        \
    \    foreach $new_letter (split //, $alphabet) {\n                $new_letter\
    \ .= $new_letter;\n                $letter_found = 1;\n            }\n       \
    \ }\n        $new_letter .= $letter;\n        $letter_found = 1;\n        foreach\
    \ $new_letter (split //, $alphabet) {\n            $new_letter .= $new_letter;\n\
    \            $letter_found = 1;\n        }\n        $new_letter .= $letter;\n\
    \        $letter_found = 1;\n        foreach $new_letter (split //, $alphabet)\
    \ {\n            $new_letter .= $new_letter;\n            $letter_found = 1;\n\
    \        }\n        $new_letter .= $letter;\n        $letter_found = 1;\n    \
    \    foreach $new_letter (split //, $alphabet) {\n            $new_letter .= $new_letter;\n\
    \            $letter_found = 1;\n        }\n        $new_letter .= $letter;\n\
    \        $letter_found = 1;\n        foreach $new_letter (split //, $alphabet)\
    \ {\n            $new_letter .= $new_letter;\n            $letter_found = 1;\n\
    \        }\n        $new_letter .= $letter;\n        $letter_found = 1;\n    \
    \    foreach $new_letter (split //, $alphabet) {\n            $new_letter .= $new_letter;\n\
    \            $letter_found = 1;\n        }\n        $new_letter .= $letter;\n\
    \        $letter_found = 1;\n        foreach $new_letter (split //, $alphabet)\
    \ {\n            $new_letter .= $new_letter;\n            $letter_found = 1;\n\
    \        }\n        $new_letter .= $letter;\n        $letter_found = 1;\n    \
    \    foreach $new_letter (split //, $alphabet) {\n            $new_letter .= $new_letter;\n\
    \            $letter_found = 1;\n        }\n        $new_letter .= $letter;\n\
    \        $letter_found = 1;\n        foreach $new_letter (split //, $alphabet)\
    \ {\n            $new_letter .= $new_letter;\n            $letter_found = 1;\n\
    \        }\n", "    my $message = $message;\n    my $vowels = \"aeiou\";\n   \
    \ my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_pos = 0;\n   \
    \ my $letters_pos = 0;\n    my $letters_pos_2 = 1;\n    my $letters_pos_3 = 2;\n\
    \    my $letters_pos_4 = 3;\n    my $letters_pos_5 = 4;\n    my $letters_pos_6\
    \ = 6;\n    my $letters_pos_7 = 7;\n    my $letters_pos_8 = 8;\n    my $letters_pos_9\
    \ = 9;\n    my $letters_pos_10 = 10;\n    my $letters_pos_11 = 11;\n    my $letters_pos_12\
    \ = 12;\n    my $letters_pos_13 = 13;\n    my $letters_pos_14 = 14;\n    my $letters_pos_15\
    \ = 15;\n    my $letters_pos_16 = 16;\n    my $letters_pos_17 = 17;\n    my $letters_pos_18\
    \ = 18;\n    my $letters_pos_19 = 19;\n    my $letters_pos_20 = 20;\n    my $letters_pos_21\
    \ = 21;\n    my $letters_pos_22 = 22;\n    my $letters_pos_23 = 23;\n    my $letters_pos_24\
    \ = 24;\n    my $letters_pos_25 = 25;\n    my $letters_pos_26 = 26;\n    my $letters_pos_27\
    \ = 27;\n    my $letters_pos_28 = 28;\n    my $letters_pos_29 = 29;\n    my $letters_pos_30\
    \ = 30;\n    my $letters_pos_31 = 31;\n    my $letters_pos_32 = 32;\n    my $letters_pos_33\
    \ = 33;\n    my $letters_pos_34 = 34;\n    my $letters_pos_35 = 35;\n    my $letters_pos_36\
    \ = 36;\n    my $letters_pos_37 = 37;\n    my $letters_pos_38 = 38;\n    my $letters_pos_39\
    \ = 39;\n    my $letters_pos_40 = 40;\n    my $letters_pos_41 = 41;\n    my $letters_pos_42\
    \ = 42;\n    my $letters_pos_43 = 43;\n    my $letters_pos_44 = 44;\n    my $letters_pos_45\
    \ = 45;\n    my $letters_pos_46 = 46;\n    my $letters_pos_47 = 47;\n    my $letters_pos_48\
    \ = 48;\n    my $letters_pos_49 = 49;\n    my $letters_pos_50 = 50;\n    my $letters_pos_51\
    \ = 51;\n    my $letters_pos_52 = 52;\n    my $", "    \n    my @vowels = qw(a\
    \ e i o u);\n    \n    my @new_message = ();\n    \n    foreach my $letter (split(//,\
    \ $message)) {\n        my $new_letter;\n        if ($letter =~ /[aeiou]/) {\n\
    \            $new_letter = $letter;\n        } elsif ($letter =~ /[aeiou]/) {\n\
    \            $new_letter = substr($letter, 2, 1);\n        } else {\n        \
    \    $new_letter = substr($letter, 0, 1);\n        }\n        push(@new_message,\
    \ $new_letter);\n    }\n    \n    return join(\"\", @new_message);\n}", "    $message\
    \ =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[ae", "    my $result\
    \ = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_pos = 0;\n    my $letters_pos = 0;\n    my $vowels_found = 0;\n\
    \    my $letters_found = 0;\n    my $vowels_found2 = \"\";\n    my $letters_found2\
    \ = \"\";\n    my $vowels_found3 = \"\";\n    my $letters_found3 = \"\";\n   \
    \ my $vowels_found4 = \"\";\n    my $letters_found4 = \"\";\n    my $vowels_found5\
    \ = \"\";\n    my $letters_found5 = \"\";\n    my $vowels_found6 = \"\";\n   \
    \ my $letters_found6 = \"\";\n    my $vowels_found7 = \"\";\n    my $letters_found7\
    \ = \"\";\n    my $vowels_found8 = \"\";\n    my $letters_found8 = \"\";\n   \
    \ my $vowels_found9 = \"\";\n    my $letters_found9 = \"\";\n    my $vowels_found10\
    \ = \"\";\n    my $letters_found10 = \"\";\n    my $vowels_found11 = \"\";\n \
    \   my $letters_found11 = \"\";\n    my $vowels_found12 = \"\";\n    my $letters_found12\
    \ = \"\";\n    my $vowels_found13 = \"\";\n    my $letters_found13 = \"\";\n \
    \   my $vowels_found14 = \"\";\n    my $letters_found14 = \"\";\n    my $vowels_found15\
    \ = \"\";\n    my $letters_found15 = \"\";\n    my $vowels_found16 = \"\";\n \
    \   my $letters_found16 = \"\";\n    my $vowels_found17 = \"\";\n    my $letters_found17\
    \ = \"\";\n    my $vowels_found18 = \"\";\n    my $letters_found18 = \"\";\n \
    \   my $vowels_found19 = \"\";\n    my $letters_found19 = \"\";\n    my $vowels_found20\
    \ = \"\";\n    my $letters_found20 = \"\";\n    my $vowels_found21 = \"\";\n \
    \   my $letters_found21 = \"\";\n    my $vowels_found22 = \"\";\n    my $letters_found22\
    \ = \"\";\n    my $vowels_found23 = \"\";\n    my $letters_found23 = \"\";\n \
    \   my $vowels_found24 = \"\";\n    my $letters_found24 = \"\";\n    my $vowels_found25\
    \ = \"\";\n    my $letters_found25 = \"\";\n    my $vowels_found26 = \"\";\n \
    \   my $letters_found26 = \"\";\n    my $vowels_found27 = \"\";\n    my $letters_found27\
    \ = \"\";\n    my $vowels_found28 = \"\";\n    my $letters_found28 = \"\";\n \
    \   my $vowels_found29 = \"\";\n    my $letters_found29 = \"\";\n    ", "    my\
    \ $message = $message;\n    my $vowels = \"AEIOUaeiou\";\n    my $vowels_2 = \"\
    AEIOUaeiou\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiou\";\n  \
    \  my $vowels_7 = \"AEIOUaeiou\";\n    my $vowels_8 = \"AEIOUaeiou\";\n    my\
    \ $vowels_9 = \"AEIOUaeiou\";\n    my $vowels_10 = \"AEIOUaeiou\";\n    my $vowels_11\
    \ = \"AEIOUaeiou\";\n    my $vowels_12 = \"AEIOUaeiou\";\n    my $vowels_13 =\
    \ \"AEIOUaeiou\";\n    my $vowels_14 = \"AEIOUaeiou\";\n    my $vowels_15 = \"\
    AEIOUaeiou\";\n    my $vowels_16 = \"AEIOUaeiou\";\n    my $vowels_17 = \"AEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiou\";\n    my $vowels_19 = \"AEIOUaeiou\";\n\
    \    my $vowels_20 = \"AEIOUaeiou\";\n    my $vowels_21 = \"AEIOUaeiou\";\n  \
    \  my $vowels_22 = \"AEIOUaeiou\";\n    my $vowels_23 = \"AEIOUaeiou\";\n    my\
    \ $vowels_24 = \"AEIOUaeiou\";\n    my $vowels_25 = \"AEIOUaeiou\";\n    my $vowels_26\
    \ = \"AEIOUaeiou\";\n    my $vowels_27 = \"AEIOUaeiou\";\n    my $vowels_28 =\
    \ \"AEIOUaeiou\";\n    my $vowels_29 = \"AEIOUaeiou\";\n    my $vowels_30 = \"\
    AEIOUaeiou\";\n    my $vowels_31 = \"AEIOUaeiou\";\n    my $vowels_32 = \"AEIOUaeiou\"\
    ;\n    my $vowels_33 = \"AEIOUaeiou\";\n    my $vowels_34 = \"AEIOUaeiou\";\n\
    \    my $vowels_35 = \"AEIOUaeiou\";\n    my $vowels_36 = \"AEIOUaeiou\";\n  \
    \  my $vowels_37 = \"AEIOUaeiou\";\n    my $vowels_38 = \"AEIOUaeiou\";\n    my\
    \ $vowels_39 = \"AEIOUaeiou", "    my $alphabet = qw(a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $message2\
    \ = \"\";\n    my $i = 0;\n    foreach my $letter (split(//, $message)) {\n  \
    \      if ($letter =~ /[a-z]/) {\n            $message2 .= $letter;\n        }\n\
    \        else {\n            $message2 .= $alphabet[$i];\n            $i++;\n\
    \        }\n    }\n    foreach my $vowel (split(//, $message2)) {\n        if\
    \ ($vowel =~ /[aeiou]/) {\n            $message2 .= $vowels[$i];\n           \
    \ $i++;\n        }\n    }\n    return $message2;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    my $alphabet = qw(a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_position\
    \ = 0;\n    my $letter_position = 0;\n    my $letter;\n    my $vowel;\n    foreach\
    \ $letter (split(//, $message)) {\n        if ($letter eq \"\") {\n          \
    \  $new_message .= $letter;\n        } else {\n            $letter = uc($letter);\n\
    \            $new_message .= $alphabet[$i];\n            if ($letter eq $alphabet[$i])\
    \ {\n                $new_message .= $alphabet[$j];\n                $j++;\n \
    \           } else {\n                $new_message .= $letter;\n            }\n\
    \            $i++;\n        }\n    }\n    foreach $vowel (split(//, $vowels))\
    \ {\n        $new_message .= $vowel;\n        $vowel_position++;\n    }\n    foreach\
    \ $letter (split(//, $alphabet)) {\n        $letter_position++;\n        if ($letter_position\
    \ == $vowel_position) {\n            $new_message .= $letter;\n            $letter_position\
    \ = 0;\n            $vowel_position++;\n        }\n    }\n    return $new_message;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nI like your solution, but I do\
    \ not understand why you use $letter = uc($letter);\n<|/ c |>\n<| c |>\nBecause\
    \ `uc` converts letters to uppercase and `lc` converts letters to lowercase. `uc`\
    \ converts uppercase letters to lowercase and `lc` converts lowercase letters\
    \ to uppercase. `uc` converts lowercase letters to uppercase and `lc` converts\
    \ uppercase letters to lowercase. `uc` converts uppercase letters to uppercase\
    \ and `lc` converts lowercase letters to lowercase.\n<|/ c |>\n<| c |>\nI see\
    \ what you mean, but I do not understand why you use $letter = uc($letter);\n\
    <|/ c |>\n<| c |>\nBecause `uc` converts letters to uppercase and `lc` converts\
    \ letters to lowercase. `uc` converts uppercase letters to lowercase and `lc`\
    \ converts lowercase letters to uppercase. `uc` converts lowercase letters to\
    \ uppercase and `lc` ", "    my $alphabet = qw(a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_count\
    \ = 0;\n    my $letter;\n    foreach $letter (split(//, $message)) {\n       \
    \ $new_message .= $letter;\n        if ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        } elsif ($letter eq \"e\") {\n\
    \            $new_message .= $alphabet[$j + 1];\n            $j++;\n        }\
    \ elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"u\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"e\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"u\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"e\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"o\") {", "    my $result = \"\
    \";\n    my $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_index = index($vowels, $message);\n    my $letters_index = index($letters,\
    \ $message);\n    my $vowels_index2 = index($vowels, $message);\n    my $letters_index2\
    \ = index($letters, $message);\n    my $vowels_index3 = index($vowels, $message);\n\
    \    my $letters_index3 = index($letters, $message);\n    my $vowels_index4 =\
    \ index($vowels, $message);\n    my $letters_index4 = index($letters, $message);\n\
    \    my $vowels_index5 = index($vowels, $message);\n    my $letters_index5 = index($letters,\
    \ $message);\n    my $vowels_index6 = index($vowels, $message);\n    my $letters_index6\
    \ = index($letters, $message);\n    my $vowels_index7 = index($vowels, $message);\n\
    \    my $letters_index7 = index($letters, $message);\n    my $vowels_index8 =\
    \ index($vowels, $message);\n    my $letters_index8 = index($letters, $message);\n\
    \    my $vowels_index9 = index($vowels, $message);\n    my $letters_index9 = index($letters,\
    \ $message);\n    my $vowels_index10 = index($vowels, $message);\n    my $letters_index10\
    \ = index($letters, $message);\n    my $vowels_index11 = index($vowels, $message);\n\
    \    my $letters_index11 = index($letters, $message);\n    my $vowels_index12\
    \ = index($vowels, $message);\n    my $letters_index12 = index($letters, $message);\n\
    \    my $vowels_index13 = index($vowels, $message);\n    my $letters_index13 =\
    \ index($letters, $message);\n    my $vowels_index14 = index($vowels, $message);\n\
    \    my $letters_index14 = index($letters, $message);\n    my $vowels_index15\
    \ = index($vowels, $message);\n    my $letters_index15 = index($letters, $message);\n\
    \    my $vowels_index16 = index($vowels, $message);\n    my $letters_index16 =\
    \ index($letters, $message);\n    my $vowels_index17 = index($vowels, $message);\n\
    \    my $letters_index17 = index($letters, $message);\n    my $vowels_index18\
    \ = index($vowels, $message);\n    my $letters_index18 = index($letters, $message);\n\
    \    ", "    my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount\
    \ = length($vowels);\n    my $vowelsIndex = 0;\n    my $vowelsIndex2 = 0;\n  \
    \  my $vowelsIndex3 = 0;\n    my $vowelsIndex4 = 0;\n    my $vowelsIndex5 = 0;\n\
    \    my $vowelsIndex6 = 0;\n    my $vowelsIndex7 = 0;\n    my $vowelsIndex8 =\
    \ 0;\n    my $vowelsIndex9 = 0;\n    my $vowelsIndex10 = 0;\n    my $vowelsIndex11\
    \ = 0;\n    my $vowelsIndex12 = 0;\n    my $vowelsIndex13 = 0;\n    my $vowelsIndex14\
    \ = 0;\n    my $vowelsIndex15 = 0;\n    my $vowelsIndex16 = 0;\n    my $vowelsIndex17\
    \ = 0;\n    my $vowelsIndex18 = 0;\n    my $vowelsIndex19 = 0;\n    my $vowelsIndex20\
    \ = 0;\n    my $vowelsIndex21 = 0;\n    my $vowelsIndex22 = 0;\n    my $vowelsIndex23\
    \ = 0;\n    my $vowelsIndex24 = 0;\n    my $vowelsIndex25 = 0;\n    my $vowelsIndex26\
    \ = 0;\n    my $vowelsIndex27 = 0;\n    my $vowelsIndex28 = 0;\n    my $vowelsIndex29\
    \ = 0;\n    my $vowelsIndex30 = 0;\n    my $vowelsIndex31 = 0;\n    my $vowelsIndex32\
    \ = 0;\n    my $vowelsIndex33 = 0;\n    my $vowelsIndex34 = 0;\n    my $vowelsIndex35\
    \ = 0;\n    my $vowelsIndex36 = 0;\n    my $vowelsIndex37 = 0;\n    my $vowelsIndex38\
    \ = 0;\n    my $vowelsIndex39 = 0;\n    my $vowelsIndex40 = 0;\n    my $vowelsIndex41\
    \ = 0;\n    my $vowelsIndex42 = 0;\n    my $vowelsIndex43 = 0;\n    my $vowelsIndex44\
    \ = 0;\n    my $vowelsIndex45 = 0;\n    my $vowelsIndex46 = 0;\n    my $vowelsIndex47\
    \ = 0;\n    my $vowelsIndex48 = 0;\n    my $vowelsIndex49 = 0;\n    my $vowelsIndex50\
    \ = 0;\n    my $vowelsIndex51 = 0;\n    my $vowelsIndex52 = 0;\n    my $vowelsIndex53\
    \ = 0;\n    my $vowelsIndex54 = 0;\n    my $vowelsIndex55 = 0;\n    my $vowelsIndex56\
    \ = 0;\n    my $vowelsIndex57 = 0;\n    my $vowelsIndex58 = 0;\n    my $vowelsIndex59\
    \ = 0;\n    my $vowelsIndex60 = 0;\n    my $vowelsIndex61 = 0;\n    my $", " \
    \   my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = length($message);\n    while($i < $l) {\n        while($j < $l) {\n   \
    \         while($k < $l) {\n                if($message[$i] eq $alphabet[$j])\
    \ {\n                    $new .= $alphabet[$k];\n                    $k++;\n \
    \               }\n                else {\n                    $new .= $message[$i];\n\
    \                    $i++;\n                }\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return $new;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't work. Try it on \"This is a message\".\n<|/ c |>\n\
    <| c |>\nIt doesn't work because you didn't test it on \"This is a message\".\n\
    <|/ c |>\n<| c |>\nI did. And it works. I tested it on \"This is a message\".\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it on \"This is a message\".\n<|/ c |>\n\
    <| c |>\nIt doesn't work. Try it on \"This is a message\".\n<|/ c |>\n<| a tags=perl,algorithm\
    \ |>\n<code>", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels\
    \ = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $alphabet_size = length($alphabet);\n    my $vowels_size\
    \ = length($vowels);\n    my $message_size = length($message);\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    ", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOU",
  "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        my $vowel_index =\
    \ index($vowels, $letter);\n        if ($index != -1 and $vowel_index != -1) {\n\
    \            $new_message .= substr($alphabet, $index, 1) . substr($alphabet,\
    \ $vowel_index + 1, 1);\n        } else {\n            $new_message .= $letter;\n\
    \        }\n    }\n    return $new_message;\n}", "    my $vowels = \"aeiou\";\n\
    \    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $new_message = \"\"\
    ;\n    \n    foreach my $letter (split //, $message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        } else {\n            $new_message .= $letter;\n        }\n \
    \   }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\n\
    Thanks for your answer. I tried your code, but I got this error `Use of uninitialized\
    \ value in concatenation (.) or string at test.pl line 13, <DATA> line 1.` I tried\
    \ to fix it, but I couldn't do it. Can you please help me with this?\n<|/ c |>\n\
    <| c |>\nI fixed it. I had to change `my $new_message = \"\";` to `my $new_message;`\
    \ Thanks for your help!\n<|/ c |>\n<| c |>\nI fixed it. I had to change `my $new_message\
    \ = \"\";` to `my $new_message;` Thanks for your help!\n<|/ c |>\n<| c |>\n: I\
    \ fixed it. I had to change `my $new_message = \"\";` to `my $new_message;` Thanks\
    \ for your help!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    my $alphabet = qw(a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e\
    \ i o u);\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $vowel_counter = 0;\n    my $letter_counter = 0;\n   \
    \ my $letter;\n    my $vowel;\n    my $new_letter;\n    my $new_vowel;\n    \n\
    \    foreach $letter (split(//, $message)) {\n        $letter_counter++;\n   \
    \     if ($letter_counter > 1) {\n            $new_letter =  substr($letter, 0,\
    \ 1);\n            $new_letter .= substr($letter, 1, 1);\n        } else {\n \
    \           $new_letter = $letter;\n        }\n        \n        if ($new_letter\
    \ eq $letter) {\n            $new_letter .= substr($letter, 2, 1);\n        }\n\
    \        \n        if ($new_letter eq $letter) {\n            $new_letter .= substr($letter,\
    \ 3, 1);\n        }\n        \n        if ($new_letter eq $letter) {\n       \
    \     $new_letter .= substr($letter, 4, 1);\n        }\n        \n        if ($new_letter\
    \ eq $letter) {\n            $new_letter .= substr($letter, 5, 1);\n        }\n\
    \        \n        if ($new_letter eq $letter) {\n            $new_letter .= substr($letter,\
    \ 6, 1);\n        }\n        \n        if ($new_letter eq $letter) {\n       \
    \     $new_letter .= substr($letter, 7, 1);\n        }\n        \n        if ($new_letter\
    \ eq $letter) {\n            $new_letter .= substr($letter, 8, 1);\n        }\n\
    \        \n        if ($new_letter eq $letter) {\n            $new_letter .= substr($letter,\
    \ 9, 1);\n        }\n        \n        if ($new_letter eq $letter) {\n       \
    \     $new_letter .= substr($letter, 10, 1);\n        }\n        \n        if\
    \ ($new_letter eq $letter) {\n            $new_letter .= substr($letter, 11, 1);\n\
    \        }\n        \n        if ($new_letter eq $letter) {\n            $new_letter\
    \ .= substr($letter, 12, 1);\n        }\n        \n", "    \n    my $vowels =\
    \ \"aeiouAEIOU\";\n    \n    my $result = \"\";\n    \n    foreach my $letter\
    \ (split //, $message) {\n        my $index = index($vowels, $letter);\n     \
    \   if ($index >= 0) {\n            $letter = substr($vowels, $index, 2);\n  \
    \      }\n        $result .= $letter;\n    }\n    \n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I am not allowed to use any\
    \ string functions. I should use only subroutines and loops.\n<|/ c |>\n<| c |>\n\
    I added a solution that uses only subroutines and loops.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I tried your solution and it works fine for small strings.\
    \ But when I try it with a string with more than 100 characters, it gives me a\
    \ segmentation fault.\n<|/ c |>\n<| c |>\nI added a solution that uses only subroutines\
    \ and loops.\n<|/ c |>\n<| c |>\nThanks for your answer. I tried your solution\
    \ and it works fine for small strings. But when I try it with a string with more\
    \ than 100 characters, it gives me a segmentation fault.\n<|/ c |>\n<| a tags=perl,string,algorithm\
    \ |>\n<code>", "    my $encoded = \"\";\n    my $vowels = \"aeiou\";\n    my $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_positions = $vowels . \"2\"\
    ;\n    my $letters_positions = $letters . \"2\";\n    my $vowels_positions_length\
    \ = length($vowels_positions);\n    my $letters_positions_length = length($letters_positions);\n\
    \    my $vowels_positions_position = $vowels_positions . \"2\";\n    my $letters_positions_position\
    \ = $letters_positions . \"2\";\n    my $vowels_positions_position_length = length($vowels_positions_position);\n\
    \    my $letters_positions_position_length = length($letters_positions_position);\n\
    \    my $vowels_positions_position_position = $vowels_positions_position . \"\
    2\";\n    my $letters_positions_position_position = $letters_positions_position\
    \ . \"2\";\n    my $vowels_positions_position_position_length = length($vowels_positions_position_position);\n\
    \    my $letters_positions_position_position_length = length($letters_positions_position_position);\n\
    \    my $vowels_positions_position_position_position = $vowels_positions_position_position\
    \ . \"2\";\n    my $letters_positions_position_position_position = $letters_positions_position_position\
    \ . \"2\";\n    my $vowels_positions_position_position_position_length = length($vowels_positions_position_position_position);\n\
    \    my $letters_positions_position_position_position_length = length($letters_positions_position_position_position);\n\
    \    my $vowels_positions_position_position_position_position = $vowels_positions_position_position_position\
    \ . \"2\";\n    my $letters_positions_position_position_position_position = $letters_positions_position_position_position\
    \ . \"2\";\n    my $vowels_positions_position_position_position_position_length\
    \ = length($vowels_positions_position_position_position_position);\n    my $letters_positions_position_position_position_position_length\
    \ = length($letters_positions_position_position_position_position);\n    my $vowels_positions_position_position_position_position_position\
    \ = $vowels_positions_position_position_position_position . \"2\";\n    my $letters_positions_position_position_position_position_position\
    \ = $letters_positions_position_position_position_position . \"2\";\n    my $vowels_positions_position_position_position_position_position_length\
    \ = length($vowels_positions_position_position_position_position_position);\n\
    \    my $letters_positions_position_position_position_position_position_length\
    \ = length($letters_positions_position_position_position_position_position);\n\
    \    my $vowels_positions_position_position_position_position_position_position\
    \ = $vowels_positions_", "    my $alphabet = qw(a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_position\
    \ = 0;\n    my $letter_position = 0;\n    my $letter;\n    foreach $letter (split\
    \ //, $message) {\n        $letter_position++;\n        if ($letter_position ==\
    \ 2) {\n            $letter_position = 0;\n            $vowel_position++;\n  \
    \      }\n        if ($letter eq \"a\") {\n            $new_message .= $alphabet[$j];\n\
    \        }\n        if ($letter eq \"e\") {\n            $new_message .= $alphabet[$j\
    \ + 1];\n        }\n        if ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 2];\n        }\n        if ($letter eq \"o\") {\n        \
    \    $new_message .= $alphabet[$j + 3];\n        }\n        if ($letter eq \"\
    u\") {\n            $new_message .= $alphabet[$j + 4];\n        }\n        if\
    \ ($letter eq \"A\") {\n            $new_message .= $alphabet[$j + 5];\n     \
    \   }\n        if ($letter eq \"E\") {\n            $new_message .= $alphabet[$j\
    \ + 6];\n        }\n        if ($letter eq \"I\") {\n            $new_message\
    \ .= $alphabet[$j + 7];\n        }\n        if ($letter eq \"O\") {\n        \
    \    $new_message .= $alphabet[$j + 8];\n        }\n        if ($letter eq \"\
    U\") {\n            $new_message .= $alphabet[$j + 9];\n        }\n        if\
    \ ($letter eq \"a\") {\n            $new_message .= $alphabet[$j + 10];\n    \
    \    }\n        if ($letter eq \"e\") {\n            $new_message .= $alphabet[$j\
    \ + 11];\n        }\n        if ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 12];\n        }\n        if ($letter eq \"o\") {\n       \
    \     $new_message .= $alphabet[$j + 13];\n        }\n        if ($letter eq \"\
    u\") {\n            $new_message .= $alphabet[$j + 14];\n        }\n        if\
    \ ($letter eq \"A\") {\n            $new_message .= $alphabet[$j + 15];\n    \
    \    }\n        if ($letter eq \"E\") {\n            $new_message .= $alphabet[$j\
    \ + 16];\n        }\n        if (", "    my $vowels = \"aeiou\";\n    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $result = '';\n    \n    foreach my\
    \ $letter (split //, $message) {\n        my $index = index($vowels, $letter);\n\
    \        if ($index != -1) {\n            my $nextLetter = $alphabet[$index +\
    \ 1];\n            $result .= $letter;\n            $result .= $nextLetter;\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}", "    \n    # Write your code here\n    \n    return $message;\n\
    }", "    \n    # Write your code here\n    \n    return $message;\n}", "    my\
    \ $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\"\
    ;\n    my $vowels_3 = \"AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU",
  "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n \
    \   my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index >= 0) {\n            $new_message .= $alphabet[$index + 1];\n\
    \        }\n    }\n    \n    foreach my $letter (split //, $message) {\n     \
    \   my $index = index($vowels, $letter);\n        if ($index >= 0) {\n       \
    \     $new_message .= $alphabet[$index + 1];\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $message = $message;\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $letters_2 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_3 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_4 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_5 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_6 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_7 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_8 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_9 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_10 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_11 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_12 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_13 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_14 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_15 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_16 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_17 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_18 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_19 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_20 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_21 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_22 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_23 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_24 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_25 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_26 = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $letters_27 = \"bcdfghjklmnpqrstvwxyz\";\n    my $letters_28 = \"bcdf",
  "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n \
    \   my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n   \
    \ my $j = 0;\n    my $k = 0;\n    my $vowel_count = 0;\n    my $letter;\n    foreach\
    \ $letter (split(//, $message)) {\n        if ($letter eq \"a\") {\n         \
    \   $new_message .= $alphabet[$j];\n            $j++;\n        } elsif ($letter\
    \ eq \"e\") {\n            $new_message .= $alphabet[$j];\n            $j++;\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        } elsif ($letter eq \"u\") {\n\
    \            $new_message .= $alphabet[$j];\n            $j++;\n        } elsif\
    \ ($letter eq \"y\") {\n            $new_message .= $alphabet[$j];\n         \
    \   $j++;\n        } elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        } elsif ($letter eq \"e\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        } elsif ($letter eq \"i\") {\n\
    \            $new_message .= $alphabet[$j];\n            $j++;\n        } elsif\
    \ ($letter eq \"o\") {\n            $new_message .= $alphabet[$j];\n         \
    \   $j++;\n        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        } elsif ($letter eq \"y\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        } elsif ($letter eq \"a\") {\n\
    \            $new_message .= $alphabet[$j];\n            $j++;\n        } elsif\
    \ ($letter eq \"e\") {\n            $new_message .= $alphabet[$j];\n         \
    \   $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        } elsif ($letter eq \"u\") {\n\
    \            $new_", "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n\
    \    $message =~ tr/aeiouAEIOU/AEIOUAEIOU/;\n    return $message;\n}", "    $message\
    \ =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/AEIOU/aeiou/;\n\
    \    return $message;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution,\
    \ but I believe that `tr/aeiou/AEIOU/` should be `tr/aeiouAEIOU/`\n<|/ c |>\n\
    <| c |>\n: Yes, you are right. I was thinking about `tr/aeiouAEIOU/aeiou/` but\
    \ then I realized that `AEIOU` should be `AEIOUaeiou` so I changed my mind and\
    \ forgot to change it back. Thanks for pointing it out.\n<|/ c |>\n<| c |>\n:\
    \ I added a solution that doesn't use any regexes at all.\n<|/ c |>\n<| c |>\n\
    : I added a solution that doesn't use any regexes at all.\n<|/ c |>\n<| c |>\n\
    : I added a solution that doesn't use any regexes at all.\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels\
    \ = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach my $letter (split\
    \ //, $message) {\n        $new_message .= $letter if $letter !~ /[aeiou]/;\n\
    \        $new_message .= $alphabet[$alphabet =~ /(?<=\\Q$letter\\E)\\Q$letter\\\
    E(?=\\Q$letter\\E)/g] \n            if $letter =~ /[aeiou]/;\n    }\n    \n  \
    \  return $new_message;\n}", "    \n    # Write your code here.\n    \n    return\
    \ $message;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $output = '';\n    \n    foreach my $letter (split(//,\
    \ $message)) {\n        my $index = index($alphabet, $letter);\n        if ($index\
    \ != -1) {\n            $output .= substr($alphabet, $index, 1);\n        } else\
    \ {\n            $output .= $letter;\n        }\n    }\n    \n    foreach my $letter\
    \ (split(//, $message)) {\n        my $index = index($vowels, $letter);\n    \
    \    if ($index != -1) {\n            $output .= substr($alphabet, $index + 1,\
    \ 1);\n        } else {\n            $output .= $letter;\n        }\n    }\n \
    \   \n    return $output;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n        else {\n            $new_message .= $letter;\n     \
    \   }\n    }\n    \n    foreach my $letter (split //, $new_message) {\n      \
    \  my $index = index($vowels, $letter);\n        if ($index != -1) {\n       \
    \     $new_message .= substr($alphabet, $index + 2, 1);\n        }\n        else\
    \ {\n            $new_message .= $letter;\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $message = $message;\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $newMessage = \"\";\n    my $i = 0;\n \
    \   my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    ", "    \n    my $vowels = \"aeiou\";\n    my $vowels_2 =\
    \ \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_8 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n \
    \   my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", " \
    \   \n    # Write your code here.\n    \n    return $message;\n}", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $newMessage\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $index\
    \ = index($alphabet, $letter);\n        my $nextLetter = $alphabet[$index + 1];\n\
    \        \n        if ($letter eq $nextLetter) {\n            $newMessage .= $letter;\n\
    \        } else {\n            $newMessage .= $letter;\n            $newMessage\
    \ .= $alphabet[$index + 2];\n        }\n    }\n    \n    return $newMessage;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks, I appreciate it. I will\
    \ try this out and see how it goes.\n<|/ c |>\n<| c |>\nI added a second solution\
    \ that doesn't use any loops.\n<|/ c |>\n<| c |>\nThanks again, that works great.\
    \ I appreciate it.\n<|/ c |>\n<| a tags=perl,regex |>\nThis can be done with a\
    \ single regex substitution:\n<code>\n$message =~ s/([aeiou])([aeiou])/$1$2/g;\n\
    </code>\nThis replaces any vowel followed by another vowel with just the second\
    \ vowel.\n<|/ a dscore=2 |>\n<| c |>\nThanks, I appreciate it. I will try this\
    \ out and see how it goes.\n<|/ c |>\n<| c |>\nThanks, I appreciate it. I will\
    \ try this out and see how it goes.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n\
    $message =~ s/([aeiou])([aeiou])/$1$2/g;\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    Thanks, I appreciate it. I will try this out and see how it goes.\n<|/ c |>\n\
    <| a tags=perl,regex |>\n<code>\n$message =~ s/([aeiou])([aeiou])/$1$2/g;\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks, I appreciate it. I will try this out and see\
    \ how it goes.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n$message =~ s/([aeiou])([aeiou])/$1$2/g;\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks, ", "    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ tr/aeiouAEIOU/bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ/;\n\
    \    return $message;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks so much\
    \ for the help. I really appreciate it. I tried the code you provided and it worked.\
    \ Now I just need to figure out how to make it work for my own code. Thanks again!\n\
    <|/ c |>\n<| c |>\nNo problem. Glad I could help. If you found this answer helpful,\
    \ please consider accepting it by clicking the check mark next to it. Thanks!\n\
    <|/ c |>\n<| a tags=perl,regex |>\n<code>\nuse strict;\nuse warnings;", "    my\
    \ $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n \
    \   my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $letter_pos = index($alphabet, $letter);\n        my $vowel_pos\
    \ = index($vowels, $letter);\n        if ($letter_pos > $vowel_pos) {\n      \
    \      $new_message .= substr($alphabet, $letter_pos + 1, 1);\n        } else\
    \ {\n            $new_message .= substr($alphabet, $vowel_pos + 1, 1);\n     \
    \   }\n    }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex |>\n\
    <| c |>\nI like your solution, although I do think it would be more efficient\
    \ to just use a hash to do the lookups.\n<|/ c |>\n<| c |>\nI agree. Hash lookups\
    \ are much faster than regex lookups.\n<|/ c |>\n<| c |>\nI agree, hash is much\
    \ more efficient.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>", "    \n    my @chars\
    \ = split(//, $message);\n    \n    my $i = 0;\n    \n    foreach my $char (@chars)\
    \ {\n        my $index = index($char, 'a');\n        \n        if ($index != -1)\
    \ {\n            $chars[$i] = $chars[$index];\n        }\n        \n        $index\
    \ = index($char, 'e');\n        \n        if ($index != -1) {\n            $chars[$i]\
    \ = $chars[$index];\n        }\n        \n        $index = index($char, 'i');\n\
    \        \n        if ($index != -1) {\n            $chars[$i] = $chars[$index];\n\
    \        }\n        \n        $index = index($char, 'o');\n        \n        if\
    \ ($index != -1) {\n            $chars[$i] = $chars[$index];\n        }\n    \
    \    \n        $index = index($char, 'u');\n        \n        if ($index != -1)\
    \ {\n            $chars[$i] = $chars[$index];\n        }\n        \n        $index\
    \ = index($char, 'A');\n        \n        if ($index != -1) {\n            $chars[$i]\
    \ = $chars[$index];\n        }\n        \n        $index = index($char, 'E');\n\
    \        \n        if ($index != -1) {\n            $chars[$i] = $chars[$index];\n\
    \        }\n        \n        $index = index($char, 'I');\n        \n        if\
    \ ($index != -1) {\n            $chars[$i] = $chars[$index];\n        }\n    \
    \    \n        $index = index($char, 'O');\n        \n        if ($index != -1)\
    \ {\n            $chars[$i] = $chars[$index];\n        }\n        \n        $index\
    \ = index($char, 'U');\n        \n        if ($index != -1) {\n            $chars[$i]\
    \ = $chars[$index];\n        }\n        \n        $index = index($char, 'a');\n\
    \        \n        if ($index != -1) {\n            $chars[$i] = $chars[$index];\n\
    \        }\n        \n        $index = index($char, 'e');\n        \n        if\
    \ ($index != -1) {\n            $chars[$i] = $chars[$index];\n        }\n    \
    \    \n        $index = index($char, 'i');\n        \n        if ($index != -1)\
    \ {\n            $chars[$i] = $chars[$index];\n        }\n        \n        $index\
    \ = index($char, 'o');\n        \n        if ($index != -1) {\n            $chars[$i]\
    \ = $chars[$index];\n        }\n        \n        $index = index($char, 'u');\n\
    \        \n        if ($index != -1) {\n            $chars[", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n  \
    \  my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    ", "    my\
    \ $message = $message;\n    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[AEIOU]/[aeiou]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            my $vowel_index = index($vowels, $letter);\n            if ($vowel_index\
    \ != -1) {\n                $new_message .= $alphabet[$vowel_index + 2];\n   \
    \         } else {\n                $new_message .= $alphabet[$index + 2];\n \
    \           }\n        } else {\n            $new_message .= $letter;\n      \
    \  }\n    }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,string,algorithm\
    \ |>\n<| c |>\nThanks for your answer. I think I understand your solution, but\
    \ I'm having trouble understanding how it works. Could you explain how it works?\n\
    <|/ c |>\n<| c |>\nI added some comments to my answer. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThanks for your explanation. I'm still having trouble understanding how\
    \ it works. Could you explain how it works?\n<|/ c |>\n<| c |>\nI added some comments\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your explanation.\
    \ I'm still having trouble understanding how it works. Could you explain how it\
    \ works?\n<|/ c |>\n<| a tags=perl,string,algorithm |>\n<code>", "    my $messageLength\
    \ = length($message);\n    my $encodedMessage = \"\";\n    my $currentLetter;\n\
    \    my $currentVowel;\n    my $currentVowelPosition;\n    my $currentLetterPosition;\n\
    \    my $currentLetterPosition2;\n    my $currentVowelPosition2;\n    my $currentLetterPosition3;\n\
    \    my $currentVowelPosition3;\n    my $currentLetterPosition4;\n    my $currentVowelPosition4;\n\
    \    my $currentLetterPosition5;\n    my $currentVowelPosition5;\n    my $currentLetterPosition6;\n\
    \    my $currentVowelPosition6;\n    my $currentLetterPosition7;\n    my $currentVowelPosition7;\n\
    \    my $currentLetterPosition8;\n    my $currentVowelPosition8;\n    my $currentLetterPosition9;\n\
    \    my $currentVowelPosition9;\n    my $currentLetterPosition10;\n    my $currentVowelPosition10;\n\
    \    my $currentLetterPosition11;\n    my $currentVowelPosition11;\n    my $currentLetterPosition12;\n\
    \    my $currentVowelPosition12;\n    my $currentLetterPosition13;\n    my $currentVowelPosition13;\n\
    \    my $currentLetterPosition14;\n    my $currentVowelPosition14;\n    my $currentLetterPosition15;\n\
    \    my $currentVowelPosition15;\n    my $currentLetterPosition16;\n    my $currentVowelPosition16;\n\
    \    my $currentLetterPosition17;\n    my $currentVowelPosition17;\n    my $currentLetterPosition18;\n\
    \    my $currentVowelPosition18;\n    my $currentLetterPosition19;\n    my $currentVowelPosition19;\n\
    \    my $currentLetterPosition20;\n    my $currentVowelPosition20;\n    my $currentLetterPosition21;\n\
    \    my $currentVowelPosition21;\n    my $currentLetterPosition22;\n    my $currentVowelPosition22;\n\
    \    my $currentLetterPosition23;\n    my $currentVowelPosition23;\n    my $currentLetterPosition24;\n\
    \    my $currentVowelPosition24;\n    my $currentLetterPosition25;\n    my $currentVowelPosition25;\n\
    \    my $currentLetterPosition26;\n    my $currentVowelPosition26;\n    my $currentLetterPosition27;\n\
    \    my $currentVowelPosition27;\n    my $currentLetterPosition28;\n    my $currentVowelPosition28;\n\
    \    my $currentLetterPosition29;\n    my $currentVowel", "    my $alphabet =\
    \ qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a\
    \ e i o u);\n    my $new_message = \"\";\n    my $index = 0;\n    my $current_letter;\n\
    \    my $next_letter;\n    foreach $current_letter (split(//, $message)) {\n \
    \       $index++;\n        $next_letter = $alphabet[$index];\n        if ($current_letter\
    \ eq $next_letter) {\n            $new_message .= $current_letter;\n        }\
    \ else {\n            $new_message .= $next_letter;\n        }\n    }\n    foreach\
    \ $next_letter (split(//, $alphabet)) {\n        $index++;\n        $current_letter\
    \ = $next_letter;\n        if ($next_letter eq $vowels[$index]) {\n          \
    \  $new_message .= $next_letter;\n        }\n    }\n    return $new_message;\n\
    }\n</code>\n<|/ a tags=perl,substitution,regex |>\n<| c |>\nI like this solution,\
    \ but I believe it would be better to use a hash to avoid the linear search through\
    \ `$alphabet`.\n<|/ c |>\n<| c |>\nI agree that using a hash is better, but I\
    \ didn't want to change the OP's code too much. Also, I think it's important to\
    \ note that `split` will split on any whitespace, including newlines, which is\
    \ probably not what he wants.\n<|/ c |>\n<| c |>\nI agree that using a hash is\
    \ better, but I didn't want to change the OP's code too much. Also, I think it's\
    \ important to note that `split` will split on any whitespace, including newlines,\
    \ which is probably not what he wants.\n<|/ c |>\n<| c |>\nI agree that using\
    \ a hash is better, but I didn't want to change the OP's code too much. Also,\
    \ I think it's important to note that `split` will split on any whitespace, including\
    \ newlines, which is probably not what he wants.\n<|/ c |>\n<| c |>\nI agree that\
    \ using a hash is better, but I didn't want to change the OP's code too much.\
    \ Also, I think it's important to note that `split` will split on any whitespace,\
    \ including newlines, which is probably not what he wants.\n<|/ c |>\n<| a tags=perl,substitution,regex\
    \ |>\n<code>\nmy $message = \"This is a message\";\nmy $alphabet = qw(a b c d\
    \ e f g h i j k l m n o p q r s t u v w x ", "    my $alphabet = qw(a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = \"aeiou\";\n \
    \   my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= $alphabet[$index];\n        }\n        else {\n\
    \            $new_message .= $letter;\n        }\n    }\n    \n    foreach my\
    \ $vowel (split //, $vowels) {\n        $new_message =~ s/$vowel/$alphabet[($alphabet\
    \ - $vowel)]/g;\n    }\n    \n    return $new_message;\n}", "    my $message =\
    \ $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\"\
    ;\n    my $vowels_3 = \"AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n \
    \   my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    foreach my $letter (split //, $message) {\n        if ($letter eq \"a\")\
    \ {\n            $new_message .= $alphabet[$i];\n        } elsif ($letter eq \"\
    e\") {\n            $new_message .= $alphabet[$i+1];\n        } elsif ($letter\
    \ eq \"i\") {\n            $new_message .= $alphabet[$i+2];\n        } elsif ($letter\
    \ eq \"o\") {\n            $new_message .= $alphabet[$i+3];\n        } elsif ($letter\
    \ eq \"u\") {\n            $new_message .= $alphabet[$i+4];\n        } elsif ($letter\
    \ eq \"A\") {\n            $new_message .= $alphabet[$i];\n        } elsif ($letter\
    \ eq \"E\") {\n            $new_message .= $alphabet[$i+1];\n        } elsif ($letter\
    \ eq \"I\") {\n            $new_message .= $alphabet[$i+2];\n        } elsif ($letter\
    \ eq \"O\") {\n            $new_message .= $alphabet[$i+3];\n        } elsif ($letter\
    \ eq \"U\") {\n            $new_message .= $alphabet[$i+4];\n        } else {\n\
    \            $new_message .= $letter;\n        }\n        $i++;\n    }\n    $new_message;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work for me. I get\
    \ \"TGHS KS C MGSSCGG\" when I run it.\n<|/ c |>\n<| c |>\nIt works for me. Did\
    \ you copy and paste it exactly? I added the missing `use strict;` and `use warnings;`\
    \ at the top.\n<|/ c |>\n<| c |>\nI copied and pasted it exactly. I'm using Perl\
    \ 5.10.1 on Mac OS X 10.6.8. Maybe it's something with my version of Perl?\n<|/\
    \ c |>\n<| c |>\nYeah, it looks like it's something with your version of Perl.\
    \ I'm running 5.10.1 on Mac OS X 10.6.8 as well. I'll see if I can get it to work\
    \ with the latest version of Perl.\n<|/ c |>\n<| c |>\nI added a version that\
    \ works with Perl 5.10.1 on ", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n    my $vowel_position\
    \ = 0;\n    my $vowel_position2 = 0;\n    my $new_message2 = \"\";\n    my $new_message3\
    \ = \"\";\n    my $new_message4 = \"\";\n    my $new_message5 = \"\";\n    my\
    \ $new_message6 = \"\";\n    my $new_message7 = \"\";\n    my $new_message8 =\
    \ \"\";\n    my $new_message9 = \"\";\n    my $new_message10 = \"\";\n    my $new_message11\
    \ = \"\";\n    my $new_message12 = \"\";\n    my $new_message13 = \"\";\n    my\
    \ $new_message14 = \"\";\n    my $new_message15 = \"\";\n    my $new_message16\
    \ = \"\";\n    my $new_message17 = \"\";\n    my $new_message18 = \"\";\n    my\
    \ $new_message19 = \"\";\n    my $new_message20 = \"\";\n    my $new_message21\
    \ = \"\";\n    my $new_message22 = \"\";\n    my $new_message23 = \"\";\n    my\
    \ $new_message24 = \"\";\n    my $new_message25 = \"\";\n    my $new_message26\
    \ = \"\";\n    my $new_message27 = \"\";\n    my $new_message28 = \"\";\n    my\
    \ $new_message29 = \"\";\n    my $new_message30 = \"\";\n    my $new_message31\
    \ = \"\";\n    my $new_message32 = \"\";\n    my $new_message33 = \"\";\n    my\
    \ $new_message34 = \"\";\n    my $new_message35 = \"\";\n    my $new_message36\
    \ = \"\";\n    my $new_message37 = \"\";\n    my $new_message38 = \"\";\n    my\
    \ $new_message39 = \"\";\n    my $new_message40 = \"\";\n    my $new_message41\
    \ = \"\";\n    my $new_message42 = \"\";\n    my $new_message43 = \"\";\n    my\
    \ $new_message44 = \"\";\n    my $new_message45 = \"\";\n    my $new_message46\
    \ = \"\";\n    my $new_message47 = \"\";\n    my $new_message48 = \"\";\n    my\
    \ $new_message49 = \"\";\n    my $new_message50 = \"\";\n    my $new_message51\
    \ = \"\";\n    my $new_message52 = \"\";\n    my $new_message53 = \"\";\n    my\
    \ $new_message54 = \"\";\n    my $new_message55 = \"\";\n    my $new_message56\
    \ = \"\";\n    my $new_message57 = \"\";\n    my $new_message58 = \"\";\n    my\
    \ $new_message59 = \"\";\n    my $new_message60 = \"\";\n    my $new_message61\
    \ = \"\";\n    my $new_message62 = \"\";\n    my $new_message63 = \"\";", "  \
    \  my $message = $message;\n    my @vowels = (\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n    my @consonants = (\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\");\n    my @letters = (\"A\", \"B\", \"C\", \"D\", \"E\", \"\
    F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"\
    R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n    my @vowels_2 = (\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    my @consonants_2 = (\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    my @letters_2 = (\"A\"\
    , \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"\
    , \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Y\"\
    , \"Z\");\n    my @vowels_3 = (\"a\", \"e\", \"i\", \"o\", \"u\");\n    my @consonants_3\
    \ = (\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\
    \    my @letters_3 = (\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\
    \ \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\"\
    , \"V\", \"W\", \"X\", \"Y\", \"Z\");\n    my @vowels_4 = (\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n    my @consonants_4 = (\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\");\n    my @letters_4 = (\"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"\
    P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n    my @vowels_5\
    \ = (\"a\", \"e\", \"i\", \"o\", \"u\");\n    my @consonants_5 = (\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    my @letters_5\
    \ = (\"A\", \"B\", \"", "    \n    my @chars = split(//, $message);\n    \n  \
    \  my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    \n    foreach my $char (@chars)\
    \ {\n        if ($char eq \"a\") {\n            $chars[$i] = $chars[$j];\n   \
    \         $j++;\n        }\n        elsif ($char eq \"e\") {\n            $chars[$i]\
    \ = $chars[$j];\n            $j++;\n        }\n        elsif ($char eq \"i\")\
    \ {\n            $chars[$i] = $chars[$j];\n            $j++;\n        }\n    \
    \    elsif ($char eq \"o\") {\n            $chars[$i] = $chars[$j];\n        \
    \    $j++;\n        }\n        elsif ($char eq \"u\") {\n            $chars[$i]\
    \ = $chars[$j];\n            $j++;\n        }\n        elsif ($char eq \"A\")\
    \ {\n            $chars[$i] = $chars[$j];\n            $j++;\n        }\n    \
    \    elsif ($char eq \"E\") {\n            $chars[$i] = $chars[$j];\n        \
    \    $j++;\n        }\n        elsif ($char eq \"I\") {\n            $chars[$i]\
    \ = $chars[$j];\n            $j++;\n        }\n        elsif ($char eq \"O\")\
    \ {\n            $chars[$i] = $chars[$j];\n            $j++;\n        }\n    \
    \    elsif ($char eq \"U\") {\n            $chars[$i] = $chars[$j];\n        \
    \    $j++;\n        }\n        elsif ($char eq \"a\") {\n            $chars[$i]\
    \ = $chars[$k];\n            $k++;\n        }\n        elsif ($char eq \"e\")\
    \ {\n            $chars[$i] = $chars[$k];\n            $k++;\n        }\n    \
    \    elsif ($char eq \"i\") {\n            $chars[$i] = $chars[$k];\n        \
    \    $k++;\n        }\n        elsif ($char eq \"o\") {\n            $chars[$i]\
    \ = $chars[$k];\n            $k++;\n        }\n        elsif ($char eq \"u\")\
    \ {\n            $chars[$i] = $chars[$k];\n            $k++;\n        }\n    \
    \    elsif ($char eq \"A\") {\n            $chars[$i] = $chars[$k];\n        \
    \    $k++;\n        }\n        elsif ($char eq \"E\") {\n            $", "   \
    \ my $message = $message;\n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"\
    AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_8 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n \
    \   my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", "    \n    my\
    \ $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  \n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $letter_pos = index($letters, $letter);\n        my $vowel_pos\
    \ = index($vowels, $letter);\n        \n        if ($letter_pos > $vowel_pos)\
    \ {\n            $new_message .= substr($letters, $letter_pos + 1, 1);\n     \
    \   } else {\n            $new_message .= substr($letters, $vowel_pos + 1, 1);\n\
    \        }\n    }\n    \n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThanks for your answer. I'm sorry I didn't specify this in my question,\
    \ but I do need to use regex. I've edited my question to reflect this.\n<|/ c\
    \ |>\n<| c |>\n: I added a regex solution to my answer.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I'm sorry I didn't specify this in my question, but I do need\
    \ to use regex. I've edited my question to reflect this.\n<|/ c |>\n<| c |>\n\
    : I added a regex solution to my answer.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I'm sorry I didn't specify this in my question, but I do need to use regex.\
    \ I've edited my question to reflect this.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount\
    \ = length($vowels);\n    my $vowelsCount2 = length($vowels) * 2;\n    my $vowelsCount3\
    \ = length($vowels) * 3;\n    my $vowelsCount4 = length($vowels) * 4;\n    my\
    \ $vowelsCount5 = length($vowels) * 5;\n    my $vowelsCount6 = length($vowels)\
    \ * 6;\n    my $vowelsCount7 = length($vowels) * 7;\n    my $vowelsCount8 = length($vowels)\
    \ * 8;\n    my $vowelsCount9 = length($vowels) * 9; \n    my $vowelsCount10 =\
    \ length($vowels) * 10;\n    my $vowelsCount11 = length($vowels) * 11;\n    my\
    \ $vowelsCount12 = length($vowels) * 12;\n    my $vowelsCount13 = length($vowels)\
    \ * 13;\n    my $vowelsCount14 = length($vowels) * 14;\n    my $vowelsCount15\
    \ = length($vowels) * 15;\n    my $vowelsCount16 = length($vowels) * 16;\n   \
    \ my $vowelsCount17 = length($vowels) * 17;\n    my $vowelsCount18 = length($vowels)\
    \ * 18;\n    my $vowelsCount19 = length($vowels) * 19;\n    my $vowelsCount20\
    \ = length($vowels) * 20;\n    my $vowelsCount21 = length($vowels) * 21;\n   \
    \ my $vowelsCount22 = length($vowels) * 22;\n    my $vowelsCount23 = length($vowels)\
    \ * 23;\n    my $vowelsCount24 = length($vowels) * 24;\n    my $vowelsCount25\
    \ = length($vowels) * 25;\n    my $vowelsCount26 = length($vowels) * 26;\n   \
    \ my $vowelsCount27 = length($vowels) * 27;\n    my $vowelsCount28 = length($vowels)\
    \ * 28;\n    my $vowelsCount29 = length($vowels) * 29;\n    my $vowelsCount30\
    \ = length($vowels) * 30;\n    my $vowelsCount31 = length($vowels) * 31;\n   \
    \ my $vowelsCount32 = length($vowels) * 32;\n    my $vowelsCount33 = length($vowels)\
    \ * 33;\n    my $vowelsCount34 = length($vowels) * 34;\n    my $vowelsCount35\
    \ = length($vowels) * 35;\n    my $vowel", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            my $vowel_index = index($vowels, $letter);\n\
    \            if ($vowel_index != -1) {\n                $new_message .= substr($alphabet,\
    \ $index, 2);\n                $new_message .= substr($alphabet, $vowel_index\
    \ + 1, 1);\n            } else {\n                $new_message .= substr($alphabet,\
    \ $index, 1);\n            }\n        } else {\n            $new_message .= $letter;\n\
    \        }\n    }\n    return $new_message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new = \"\";\n    \n    foreach my $letter\
    \ (split //, $message) {\n        my $index = index($alphabet, $letter);\n   \
    \     if ($index != -1) {\n            $new .= substr($alphabet, $index, 1) .\
    \ $letter;\n        }\n    }\n    \n    foreach my $letter (split //, $new) {\n\
    \        my $index = index($vowels, $letter);\n        if ($index != -1) {\n \
    \           $new .= substr($alphabet, $index, 1) . $letter;\n        }\n    }\n\
    \    \n    return $new;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_position = 0;\n    my $letter_position\
    \ = 0;\n    my $letter;\n    my $vowel;\n    my $new_letter;\n    \n    foreach\
    \ $letter (split(//, $message)) {\n        $letter_position++;\n        if ($letter_position\
    \ == 2 && $letter =~ /[aeiou]/) {\n            $new_letter = $alphabet[$j];\n\
    \            $j++;\n        }\n        elsif ($letter =~ /[aeiou]/) {\n      \
    \      $new_letter = $alphabet[$k];\n            $k++;\n        }\n        else\
    \ {\n            $new_letter = $letter;\n        }\n        $new_message .= $new_letter;\n\
    \    }\n    return $new_message;\n}", "    $message =~ tr/A-Z/a-z/;\n    $message\
    \ =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOU", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new = \"\";\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = length($message);\n    my\
    \ $n = length($alphabet);\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    ", "    \n    my $vowels\
    \ = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\"\
    ;\n    my $vowels_4 = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", " \
    \   my $message = $message;\n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"\
    AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUae", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $newMessage = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            my $nextLetter = $alphabet[$index +\
    \ 2];\n            $newMessage .= $letter;\n            $newMessage .= $nextLetter;\n\
    \        } else {\n            $newMessage .= $letter;\n        }\n    }\n   \
    \ \n    $newMessage;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your\
    \ answer. Can you please explain how you came up with the solution? I understand\
    \ that it is very similar to the one I already have, but I don't understand how\
    \ you came up with it.\n<|/ c |>\n<| c |>\nI used a combination of `index` and\
    \ `substr` to get the index of the first vowel in the message, and get the letter\
    \ 2 places ahead of that. I then concatenated the two letters together to form\
    \ the new message.\n<|/ c |>\n<| c |>\nI understand that it is very similar to\
    \ the one I already have, but I don't understand how you came up with it. I don't\
    \ understand how you came up with the solution. Can you please explain how you\
    \ came up with it?\n<|/ c |>\n<| c |>\nI used a combination of `index` and `substr`\
    \ to get the index of the first vowel in the message, and get the letter 2 places\
    \ ahead of that. I then concatenated the two letters together to form the new\
    \ message.\n<|/ c |>\n<| c |>\nThanks for your explanation. Can you please explain\
    \ how you came up with the solution? I understand that it is very similar to the\
    \ one I already have, but I don't understand how you came up with it. I don't\
    \ understand how you came up with the solution. Can you please explain how you\
    \ came up with it?\n<|/ c |>\n<| a dscore=0 |>\n<code>\nuse strict;\nuse warnings;",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n    return $message;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts, but this doesn't\
    \ answer the question at all. I'm looking for a way to encode a message in such\
    \ a way that all letters are swapped except for the vowels. I already know how\
    \ to swap letters, I'm looking for a way to encode a message in such a way that\
    \ all letters are swapped except for the vowels.\n<|/ c |>\n<| c |>\nI apologize\
    \ for not reading your question carefully enough. I edited my answer to include\
    \ a solution that does what you want.\n<|/ c |>\n<| c |>\nThanks for the effort,\
    \ but this still doesn't work. I'm looking for a way to encode a message in such\
    \ a way that all letters are swapped except for the vowels. I already know how\
    \ to swap letters, I'm looking for a way to encode a message in such a way that\
    \ all letters are swapped except for the vowels.\n<|/ c |>\n<| c |>\nI apologize\
    \ for not reading your question carefully enough. I edited my answer to include\
    \ a solution that does what you want.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n\
    use strict;\nuse warnings;\nuse 5.010;", "    my $encoded = \"\";\n    my $vowels\
    \ = \"aeiouAEIOU\";\n    my $vowels_index = 0;\n    my $vowels_index2 = 0;\n \
    \   my $vowels_index3 = 0;\n    my $vowels_index4 = 0;\n    my $vowels_index5\
    \ = 0;\n    my $vowels_index6 = 0;\n    my $vowels_index7 = 0;\n    my $vowels_index8\
    \ = 0;\n    my $vowels_index9 = 0;\n    my $vowels_index10 = 0;\n    my $vowels_index11\
    \ = 0;\n    my $vowels_index12 = 0;\n    my $vowels_index13 = 0;\n    my $vowels_index14\
    \ = 0;\n    my $vowels_index15 = 0;\n    my $vowels_index16 = 0;\n    my $vowels_index17\
    \ = 0;\n    my $vowels_index18 = 0;\n    my $vowels_index19 = 0;\n    my $vowels_index20\
    \ = 0;\n    my $vowels_index21 = 0;\n    my $vowels_index22 = 0;\n    my $vowels_index23\
    \ = 0;\n    my $vowels_index24 = 0;\n    my $vowels_index25 = 0;\n    my $vowels_index26\
    \ = 0;\n    my $vowels_index27 = 0;\n    my $vowels_index28 = 0;\n    my $vowels_index29\
    \ = 0;\n    my $vowels_index30 = 0;\n    my $vowels_index31 = 0;\n    my $vowels_index32\
    \ = 0;\n    my $vowels_index33 = 0;\n    my $vowels_index34 = 0;\n    my $vowels_index35\
    \ = 0;\n    my $vowels_index36 = 0;\n    my $vowels_index37 = 0;\n    my $vowels_index38\
    \ = 0;\n    my $vowels_index39 = 0;\n    my $vowels_index40 = 0;\n    my $vowels_index41\
    \ = 0;\n    my $vowels_index42 = 0;\n    my $vowels_index43 = 0;\n    my $vowels_index44\
    \ = 0;\n    my $vowels_index45 = 0;\n    my $vowels_index46 = 0;\n    my $vowels_index47\
    \ = 0;\n    my $vowels_index48 = 0;\n    my $vowels_index49 = 0;\n    my $vowels_index50\
    \ = 0;\n    my $vowels_index51 = 0;\n    my $vowels_index52 = 0;\n    my $vowels_index53\
    \ = 0;\n    my $vowels_index54 = 0;\n    my $vowels_index55 = 0;\n    my $vowels_index56\
    \ = 0;\n    my $vowels_index57 = 0;\n    my $vowels_index58 = 0;\n    my $vowels_index59\
    \ = 0;\n    my $vowels_index60 = 0;\n    my $vowels_index61 = 0;\n    my $vowels_index62\
    \ = 0;\n    my $vowels_", "    my $vowels = \"aeiou\";\n    my $alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    my $newMessage = \"\";\n    my $i = 0;\n  \
    \  my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c", "    \n    # Write your code here\n\
    \    \n    return $message;\n}", "    $message =~ s/([aeiou])/\n        my $letter\
    \ = $1;\n        $letter =~ tr/aeiou/[AEIOU]/;\n        $letter;\n    }\n</code>\n\
    <|/ a tags=perl,regex |>\n<| c |>\nI like your solution, but I wonder if there\
    \ is a way to do it without using tr?\n<|/ c |>\n<| c |>\nI added a solution without\
    \ `tr`.\n<|/ c |>\n<| c |>\nI like your solution, but I wonder if there is a way\
    \ to do it without using tr?\n<|/ c |>\n<| c |>\nI added a solution without `tr`.\n\
    <|/ c |>\n<| a tags=perl,regex |>\n<code>\nuse strict;\nuse warnings;", "    my\
    \ $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n \
    \   my $new_message = \"\";\n    my $index = 0;\n    my $letter;\n    my $vowel;\n\
    \    my $new_letter;\n    foreach $letter (split(//, $message)) {\n        if\
    \ ($letter eq \"a\") {\n            $new_letter = $alphabet[$index];\n       \
    \ } elsif ($letter eq \"e\") {\n            $new_letter = $alphabet[$index + 1];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_letter = $alphabet[$index\
    \ + 2];\n        } elsif ($letter eq \"o\") {\n            $new_letter = $alphabet[$index\
    \ + 3];\n        } elsif ($letter eq \"u\") {\n            $new_letter = $alphabet[$index\
    \ + 4];\n        } elsif ($letter eq \"y\") {\n            $new_letter = $alphabet[$index\
    \ + 5];\n        } else {\n            $new_letter = $letter;\n        }\n   \
    \     $new_message .= $new_letter;\n        $index += 2;\n    }\n    foreach $vowel\
    \ (split(//, $vowels)) {\n        $new_message .= $new_message . $new_message\
    \ . $new_letter;\n    }\n    return $new_message;\n}", "    my $alphabet = qw(A\
    \ B C D E F G H I J K L M N O P Q R S T U V W X Y Z);\n    my $vowels = qw(a e\
    \ i o u);\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $vowel = 0;\n    my $letter = 0;\n    my $new_letter =\
    \ 0;\n    my $new_vowel = 0;\n    my $new_letter_index = 0;\n    my $new_vowel_index\
    \ = 0;\n    my $new_letter_index2 = 0;\n    my $new_vowel_index2 = 0;\n    my\
    \ $new_letter_index3 = 0;\n    my $new_vowel_index3 = 0;\n    my $new_letter_index4\
    \ = 0;\n    my $new_vowel_index4 = 0;\n    my $new_letter_index5 = 0;\n    my\
    \ $new_vowel_index5 = 0;\n    my $new_letter_index6 = 0;\n    my $new_vowel_index6\
    \ = 0;\n    my $new_letter_index7 = 0;\n    my $new_vowel_index7 = 0;\n    my\
    \ $new_letter_index8 = 0;\n    my $new_vowel_index8 = 0;\n    my $new_letter_index9\
    \ = 0;\n    my $new_vowel_index9 = 0;\n    my $new_letter_index10 = 0;\n    my\
    \ $new_vowel_index10 = 0;\n    my $new_letter_index11 = 0;\n    my $new_vowel_index11\
    \ = 0;\n    my $new_letter_index12 = 0;\n    my $new_vowel_index12 = 0;\n    my\
    \ $new_letter_index13 = 0;\n    my $new_vowel_index13 = 0;\n    my $new_letter_index14\
    \ = 0;\n    my $new_vowel_index14 = 0;\n    my $new_letter_index15 = 0;\n    my\
    \ $new_vowel_index15 = 0;\n    my $new_letter_index16 = 0;\n    my $new_vowel_index16\
    \ = 0;\n    my $new_letter_index17 = 0;\n    my $new_vowel_index17 = 0;\n    my\
    \ $new_letter_index18 = 0;\n    my $new_vowel_index18 = 0;\n    my $new_letter_index19\
    \ = 0;\n    my $new_vowel_index19 = 0;\n    my $new_letter_index20 = 0;\n    my\
    \ $new_vowel_index20 = 0;\n    my $new_letter_index21 = 0;\n    my $new_vowel_index21\
    \ = 0;\n    my $new_letter_index22 = 0;\n    my $new_vowel_index22 = 0;\n    my\
    \ $new_letter_index", "    $message =~ s/([aeiou])/lc($1)/eg;\n    $message =~\
    \ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou])/lc($1)/eg;\n    $message\
    \ =~ s/([aeiou])/lc($1)/eg;\n    $message =~ s/([aeiou", "    $message =~ s/([aeiou])/\n\
    \        my $vowel = $1;\n        $vowel =~ tr/aeiou/AEIOU/;\n        $vowel;\n\
    \    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution, but I feel\
    \ like it could be improved. For example, what if the message is \"The quick brown\
    \ fox jumps over the lazy dog\"? The output should be \"tHKS KS C MGSSCGG\", but\
    \ your solution will output \"tHKS KS C MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG\
    \ KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS\
    \ CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG\
    \ MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG\
    \ KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS\
    \ CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG\
    \ MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG KS CGG MGSSCGG\
    \ KS CGG MGSSCGG KS CGG MGSS", "    my $messageLength = length($message);\n  \
    \  my $encodedMessage = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowelsCount = length($vowels);\n\
    \    my $lettersCount = length($letters);\n    my $currentLetter;\n    my $currentVowel;\n\
    \    my $currentVowelCount;\n    my $currentLetterCount;\n    my $currentLetterIndex;\n\
    \    my $currentVowelIndex;\n    my $currentVowelCountIndex;\n    my $currentLetterIndex2;\n\
    \    my $currentVowelIndex2;\n    my $currentVowelCountIndex2;\n    my $currentLetterIndex3;\n\
    \    my $currentVowelIndex3;\n    my $currentVowelCountIndex3;\n    my $currentLetterIndex4;\n\
    \    my $currentVowelIndex4;\n    my $currentVowelCountIndex4;\n    my $currentLetterIndex5;\n\
    \    my $currentVowelIndex5;\n    my $currentVowelCountIndex5;\n    my $currentLetterIndex6;\n\
    \    my $currentVowelIndex6;\n    my $currentVowelCountIndex6;\n    my $currentLetterIndex7;\n\
    \    my $currentVowelIndex7;\n    my $currentVowelCountIndex7;\n    my $currentLetterIndex8;\n\
    \    my $currentVowelIndex8;\n    my $currentVowelCountIndex8;\n    my $currentLetterIndex9;\n\
    \    my $currentVowelIndex9;\n    my $currentVowelCountIndex9;\n    my $currentLetterIndex10;\n\
    \    my $currentVowelIndex10;\n    my $currentVowelCountIndex10;\n    my $currentLetterIndex11;\n\
    \    my $currentVowelIndex11;\n    my $currentVowelCountIndex11;\n    my $currentLetterIndex12;\n\
    \    my $currentVowelIndex12;\n    my $currentVowelCountIndex12;\n    my $currentLetterIndex13;\n\
    \    my $currentVowelIndex13;\n    my $currentVowelCountIndex13;\n    my $currentLetterIndex14;\n\
    \    my $currentVowelIndex14;\n    my $currentVowelCountIndex14;\n    my $currentLetterIndex15;\n\
    \    my $currentVowelIndex15;\n    my $currentVowelCountIndex15;\n    my $currentLetterIndex16;\n\
    \    my $currentVowelIndex16;\n    my $currentVowelCountIndex16;\n    my $currentLetterIndex17;\n\
    \    ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels =\
    \ \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach my $letter (split\
    \ //, $message) {\n        my $index = index($alphabet, $letter);\n        my\
    \ $vowel_index = index($vowels, $letter);\n        if ($index != -1 && $vowel_index\
    \ != -1) {\n            $new_message .= substr($alphabet, $index, 1);\n      \
    \      $new_message .= substr($alphabet, $vowel_index + 1, 1);\n        } else\
    \ {\n            $new_message .= $letter;\n        }\n    }\n    return $new_message;\n\
    }", "    my $vowels = \"aeiou\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $result = \"\";\n    my $index = 0;\n    my $currentChar;\n    my $currentVowel;\n\
    \    foreach $currentChar (split(//, $message)) {\n        $currentVowel = $vowels[$index];\n\
    \        $index++;\n        if ($currentChar eq $currentVowel) {\n           \
    \ $currentChar = $alphabet[$index];\n            $index++;\n        }\n      \
    \  $result .= $currentChar;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nI like your solution, but I believe it would be more efficient\
    \ to just use a single regex substitution instead of two. Something like `s/[aeiou]/[bcdfghjklmnpqrstvwxyz]/g`\n\
    <|/ c |>\n<| c |>\n: Yes, that would be more efficient. I'll add that to my answer.\n\
    <|/ c |>\n<| c |>\n: I added a solution that uses only one substitution.\n<|/\
    \ c |>\n<| c |>\n: I added a solution that uses only one substitution.\n<|/ c\
    \ |>\n<| a tags=perl,regex |>\n<code>\nuse strict;\nuse warnings;\nuse 5.010;",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new = \"\";\n    \n    foreach my $letter (split //, $message) {\n\
    \        my $index = index($alphabet, $letter);\n        if ($index >= 0) {\n\
    \            $new .= substr($alphabet, $index, 1);\n        }\n        else {\n\
    \            $new .= substr($alphabet, length($alphabet) - length($vowels) - 1,\
    \ 1);\n        }\n    }\n    \n    return $new;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_found = 0;\n    my $letter;\n \
    \   foreach $letter (split //, $message) {\n        if ($letter eq \"a\") {\n\
    \            $new_message .= $alphabet[$j];\n            $j++;\n        } elsif\
    \ ($letter eq \"e\") {\n            $new_message .= $alphabet[$j + 1];\n     \
    \       $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"o\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"y\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"a\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"o\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"y\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"a\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j + 1];\n\
    \            $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter eq \"o\"\
    ) {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n     \
    \   } elsif ($letter eq \"u\") {\n            $new_message .", "    my $encoded\
    \ = \"\";\n    my $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    foreach my $letter (split //, $message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $letter = substr($letters,\
    \ $index, 1);\n        }\n        $encoded .= $letter;\n    }\n    return $encoded;\n\
    }", "    my $message = $message;\n    my $vowels = \"aeiou\";\n    my $vowels_2\
    \ = \"AEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $letters_2\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $letters_3 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $letters_4 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_5 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $letters_6 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_7 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $letters_8 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdef",
  "    \n    my @letters = split(//, $message);\n    my $i = 0;\n    my $j = 0;\n\
    \    my $letter;\n    \n    foreach $letter (@letters) {\n        if ($letter\
    \ eq \"a\") {\n            $letter = \"A\";\n        } elsif ($letter eq \"e\"\
    ) {\n            $letter = \"E\";\n        } elsif ($letter eq \"i\") {\n    \
    \        $letter = \"I\";\n        } elsif ($letter eq \"o\") {\n            $letter\
    \ = \"O\";\n        } elsif ($letter eq \"u\") {\n            $letter = \"U\"\
    ;\n        } elsif ($letter eq \"y\") {\n            $letter = \"Y\";\n      \
    \  } elsif ($letter eq \"a\") {\n            $letter = \"A\";\n        } elsif\
    \ ($letter eq \"e\") {\n            $letter = \"E\";\n        } elsif ($letter\
    \ eq \"i\") {\n            $letter = \"I\";\n        } elsif ($letter eq \"o\"\
    ) {\n            $letter = \"O\";\n        } elsif ($letter eq \"u\") {\n    \
    \        $letter = \"U\";\n        } elsif ($letter eq \"y\") {\n            $letter\
    \ = \"Y\";\n        } else {\n            $letter = $letter;\n        }\n    \
    \    \n        if ($i == 0) {\n            $letter = $letter;\n        } elsif\
    \ ($i == 1) {\n            $letter = $letter;\n        } elsif ($i == 2) {\n \
    \           $letter = $letter;\n        } elsif ($i == 3) {\n            $letter\
    \ = $letter;\n        } elsif ($i == 4) {\n            $letter = $letter;\n  \
    \      } elsif ($i == 5) {\n            $letter = $letter;\n        } elsif ($i\
    \ == 6) {\n            $letter = $letter;\n        } elsif ($i == 7) {\n     \
    \       $letter = $letter;\n        } elsif ($i == 8) {\n            $letter =\
    \ $letter;\n        } elsif ($i == 9) {\n            $letter = $letter;\n    \
    \    } elsif ($i == 10) {\n            $letter = $letter;\n        } elsif ($i\
    \ == 11) {\n            $letter = $letter;\n        } elsif ($i == 12) {\n   \
    \         $letter = $letter;\n        } elsif ($i == 13) {\n            $letter\
    \ = $letter;\n        } elsif ($i == 14) {\n            $letter = $letter;\n \
    \       } elsif ($i == 15) {\n            $letter = $letter;\n        } elsif\
    \ ($i == 16) {\n            $letter = $letter;\n        } elsif ($i == 17) {\n\
    \            $letter = $letter;", "    $message =~ tr/A-Z/a-z/;\n    $message\
    \ =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/AEIOUaeiou/;\n    return\
    \ $message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z);\n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n\
    \    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\";\n\
    \    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_8 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n \
    \   my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae",
  "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= $alphabet[$index];\n        } else {\n      \
    \      $new_message .= $letter;\n        }\n    }\n    \n    foreach my $vowel\
    \ (split //, $vowels) {\n        my $index = index($alphabet, $vowel);\n     \
    \   if ($index != -1) {\n            $new_message .= $alphabet[$index + 2];\n\
    \        } else {\n            $new_message .= $vowel;\n        }\n    }\n   \
    \ \n    return $new_message;\n}", "    \n    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    \n    my $result = \"\";\n    \n    foreach\
    \ my $letter (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index >= 0) {\n            $letter = $alphabet[$index + 1];\n  \
    \      }\n        \n        if ($letter =~ /$vowels/) {\n            $letter =\
    \ $alphabet[$index + 1];\n        }\n        \n        $result .= $letter;\n \
    \   }\n    \n    return $result;\n}", "    my $alphabet = qw(a b c d e f g h i\
    \ j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my\
    \ $new = '';\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel;\n\
    \    foreach $vowel (@$vowels) {\n        $new .= substr($alphabet, $i, 2);\n\
    \        $i++;\n    }\n    foreach $i (0 .. length($message) - 1) {\n        $j\
    \ = 0;\n        $k = 0;\n        foreach $vowel (@$vowels) {\n            if ($message[$i]\
    \ eq $vowel) {\n                $new .= substr($alphabet, $j, 2);\n          \
    \      $j++;\n            }\n            else {\n                $new .= substr($alphabet,\
    \ $k, 2);\n                $k++;\n            }\n        }\n    }\n    return\
    \ $new;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach my $letter (split\
    \ //, $message) {\n        my $index = index($alphabet, $letter);\n        if\
    \ ($index != -1) {\n            $new_message .= substr($alphabet, $index, 1) .\
    \ $letter;\n        }\n    }\n    \n    foreach my $letter (split //, $new_message)\
    \ {\n        my $index = index($vowels, $letter);\n        if ($index != -1) {\n\
    \            $new_message .= substr($alphabet, $index, 1) . $letter;\n       \
    \ }\n    }\n    \n    return $new_message;\n}", "    \n    my $vowels = \"aeiou\"\
    ;\n    my $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    my $vowels_count = length($vowels);\n\
    \    my $consonants_count = length($consonants);\n    \n    my $index = 0;\n \
    \   my $new_message = \"\";\n    \n    foreach my $char (split(//, $message))\
    \ {\n        my $new_char = substr($consonants, $index, 1);\n        $new_message\
    \ .= $new_char;\n        $index += $vowels_count;\n    }\n    \n    foreach my\
    \ $char (split(//, $message)) {\n        my $new_char = substr($vowels, $index,\
    \ 1);\n        $new_message .= $new_char;\n        $index += $consonants_count;\n\
    \    }\n    \n    return $new_message;\n}", "    my $message = $message;\n   \
    \ my @vowels = (\"a\", \"e\", \"i\", \"o\", \"u\");\n    my @consonants = (\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    my @letters\
    \ = (\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"\
    K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"\
    V\", \"W\", \"X\", \"Y\", \"Z\");\n    my @vowels_2 = (\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    my @consonants_2 = (\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\");\n    my @letters_2 = (\"A\", \"B\", \"C\", \"D\"\
    , \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\"\
    , \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"\
    );\n    my @vowels_3 = (\"a\", \"e\", \"i\", \"o\", \"u\");\n    my @consonants_3\
    \ = (\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\
    \    my @letters_3 = (\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\
    \ \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\"\
    , \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n    my @vowels_4 = (\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    my @consonants_4 = (\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    my @letters_4 = (\"A\", \"\
    B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"\
    M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"\
    X\", \"Y\", \"Z\");\n    my @vowels_5 = (\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    my @consonants_5 = (\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $new\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n\
    \    \n    while($i < $l) {\n        my $letter = $message[$i];\n        my $pos\
    \ = index($alphabet, $letter);\n        if($pos == -1) {\n            $new .=\
    \ $letter;\n            $i++;\n        }\n        else {\n            $new .=\
    \ $alphabet[$pos + 1];\n            $i++;\n        }\n    }\n    \n    while($j\
    \ < $l) {\n        my $letter = $message[$j];\n        my $pos = index($alphabet,\
    \ $letter);\n        if($pos == -1) {\n            $new .= $letter;\n        \
    \    $j++;\n        }\n        else {\n            $new .= $alphabet[$pos + 1];\n\
    \            $j++;\n        }\n    }\n    \n    while($k < $l) {\n        my $letter\
    \ = $message[$k];\n        my $pos = index($alphabet, $letter);\n        if($pos\
    \ == -1) {\n            $new .= $letter;\n            $k++;\n        }\n     \
    \   else {\n            $new .= $alphabet[$pos + 1];\n            $k++;\n    \
    \    }\n    }\n    \n    while($l > 0) {\n        my $letter = $message[$l];\n\
    \        my $pos = index($alphabet, $letter);\n        if($pos == -1) {\n    \
    \        $new .= $letter;\n            $l--;\n        }\n        else {\n    \
    \        $new .= $alphabet[$pos + 1];\n            $l--;\n        }\n    }\n \
    \   \n    return $new;\n}", "    my $messageLength = length($message);\n    my\
    \ $vowels = \"aeiou\";\n    my $vowelsLength = length($vowels);\n    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $alphabetLength = length($alphabet);\n\
    \    my $newMessage = \"\";\n    my $newMessageLength = 0;\n    my $i = 0;\n \
    \   my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my\
    \ $vowels = \"AEIOU\";\n    my $result = \"\";\n    \n    foreach my $letter (split\
    \ //, $message) {\n        if ($letter eq \"_\") {\n            $result .= $letter;\n\
    \        } else {\n            $result .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/r]\
    \ . $letter;\n        }\n    }\n    \n    return $result;\n}", "    my $message\
    \ = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowel_positions = $vowels =~ /[aeiou]/gi;\n    my $letter_positions\
    \ = $letters =~ /[aeiou]/gi;\n    my $new_message = \"\";\n    my $i = 0;\n  \
    \  my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $vowel_found = 0;\n    my $letter_found\
    \ = 0;\n    my $letter_position = 0;\n    my $vowel_position = 0;\n    my $letter_index\
    \ = 0;\n    my $vowel_index = 0;\n    my $new_letter_index = 0;\n    my $new_vowel_index\
    \ = 0;\n    my $new_letter = \"\";\n    my $new_vowel = \"\";\n    my $new_letter_position\
    \ = 0;\n    my $new_vowel_position = 0;\n    my $new_letter_index2 = 0;\n    my\
    \ $new_vowel_index2 = 0;\n    my $new_letter2 = \"\";\n    my $new_vowel2 = \"\
    \";\n    my $new_letter_position2 = 0;\n    my $new_vowel_position2 = 0;\n   \
    \ my $new_letter_index3 = 0;\n    my $new_vowel_index3 = 0;\n    my $new_letter3\
    \ = \"\";\n    my $new_vowel3 = \"\";\n    my $new_letter_position3 = 0;\n   \
    \ my $new_vowel_position3 = 0;\n    my $new_letter_index4 = 0;\n    my $new_vowel_index4\
    \ = 0;\n    my $new_letter4 = \"\";\n    my $new_vowel4 = \"\";\n    my $new_letter_position4\
    \ = 0;\n    my $new_vowel_position4 = 0;\n    my $new_letter_index5 = 0;\n   \
    \ my $new_vowel_index5 = 0;\n    my $new_letter5 = \"\";\n    my $new_vowel5 =\
    \ \"\";\n    my $new_letter_position5 = 0;\n    my $new_vowel_position5 = 0;\n\
    \    my $new_letter_index6 = 0;\n    my $new_vowel_index6 = 0;\n    my $new_letter6\
    \ = \"\";\n    my $new_vowel6 = \"\";\n    my $new_letter_position6 = 0;\n   \
    \ my $new_vowel_position6 = 0;\n    my $new_letter_index7 = 0;\n    my $new_vowel_index7\
    \ = 0;\n    my $new_letter7 = \"\";\n    my $new_vowel7 = \"\";\n    my $new_letter_position7\
    \ = 0;\n    my $new_vowel_position7 = 0;\n    my $new_letter", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $index\
    \ = index($alphabet, $letter);\n        my $next_letter = $alphabet[$index + 1];\n\
    \        \n        if ($letter eq $next_letter) {\n            $new_message .=\
    \ $letter;\n        } else {\n            $new_message .= $vowels;\n        }\n\
    \    }\n    \n    return $new_message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_position = 0;\n    my $letter_position\
    \ = 0;\n    my $letter;\n    my $vowel;\n    foreach $letter (split(//, $message))\
    \ {\n        $letter_position++;\n        if ($letter eq \"a\") {\n          \
    \  $new_message .= $alphabet[$letter_position];\n        }\n        elsif ($letter\
    \ eq \"e\") {\n            $new_message .= $alphabet[$letter_position];\n    \
    \    }\n        elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$letter_position];\n\
    \        }\n        elsif ($", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $encoded = \"\";\n    \n    foreach my\
    \ $letter (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $encoded .= $alphabet[$index + 1];\n\
    \        }\n    }\n    \n    foreach my $letter (split(//, $message)) {\n    \
    \    my $index = index($vowels, $letter);\n        if ($index != -1) {\n     \
    \       $encoded .= $alphabet[$index + 2];\n        }\n    }\n    \n    return\
    \ $encoded;\n}", "    my $message = $message;\n    $message =~ s/([aeiou])/e$1/gi;\n\
    \    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n  \
    \  $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message\
    \ =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message =~\
    \ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n\
    \    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n  \
    \  $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message\
    \ =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message =~\
    \ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n\
    \    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n  \
    \  $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message\
    \ =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message =~\
    \ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n\
    \    $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])/o$1/gi;\n  \
    \  $message =~ s/([aeiou])/o$1/gi;\n    $message =~ s/([aeiou])", "    my $alphabet\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels =\
    \ qw(a e i o u);\n    my $new_message = \"\";\n    my $index = 0;\n    foreach\
    \ my $letter (split(//, $message)) {\n        if ($letter =~ /[a-z]/) {\n    \
    \        $new_message .= $letter;\n        }\n        else {\n            $new_message\
    \ .= $alphabet[$index++ % scalar(@$alphabet)];\n        }\n    }\n    foreach\
    \ my $vowel (split(//, $vowels)) {\n        $new_message =~ s/$vowel/$alphabet[$index++\
    \ % scalar(@$alphabet)]/;\n    }\n    return $new_message;\n}\n</code>\n<|/ a\
    \ tags=perl,regex |>\n<| c |>\nI like your solution, but I wonder if there is\
    \ a way to do it without using an array. Maybe by using a hash?\n<|/ c |>\n<|\
    \ c |>\nI added a solution without an array\n<|/ c |>\n<| a tags=perl,regex |>\n\
    I like your solution, but I wonder if there is a way to do it without using an\
    \ array. Maybe by using a hash?", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index >= 0) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n        else {\n            $new_message .= substr($alphabet,\
    \ length($alphabet) - length($vowels) + $index, 1);\n        }\n    }\n    \n\
    \    foreach my $letter (split //, $new_message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index >= 0) {\n            $new_message .= substr($alphabet,\
    \ $index, 1);\n        }\n        else {\n            $new_message .= substr($alphabet,\
    \ length($alphabet) - length($vowels) + $index, 1);\n        }\n    }\n    \n\
    \    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nI like\
    \ your solution, but I wonder if there is a way to do it without using any loops.\
    \ I thought of using regex to replace vowels with letters 2 places ahead of them\
    \ but I can't figure out how to do it.\n<|/ c |>\n<| c |>\nI added a regex solution,\
    \ but I still think loops are the best solution. Loops are the best solution in\
    \ Perl. :)\n<|/ c |>\n<| c |>\nI agree that loops are the best solution, but I\
    \ wanted to see if I could do it without loops. Thanks for the regex solution,\
    \ though.\n<|/ c |>\n<| c |>\nI added a non-regex solution. :)\n<|/ c |>\n<| c\
    \ |>\nI added a non-regex solution. :)\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n\
    use strict;\nuse warnings;\nuse 5.010;", "    my $alphabet = qw(A B C D E F G\
    \ H I J K L M N O P Q R S T U V W X Y Z);\n    my $vowels = qw(a e i o u);\n \
    \   my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $vowel_found = 0;\n    my $vowel_position = 0;\n    my $letter_position\
    \ = 0;\n    my $letter_found = 0;\n    my $letter_position2 = 0;\n    my $letter_found2\
    \ = 0;\n    my $letter_position3 = 0;\n    my $letter_found3 = 0;\n    my $letter_position4\
    \ = 0;\n    my $letter_found4 = 0;\n    my $letter_position5 = 0;\n    my $letter_found5\
    \ = 0;\n    my $letter_position6 = 0;\n    my $letter_found6 = 0;\n    my $letter_position7\
    \ = 0;\n    my $letter_found7 = 0;\n    my $letter_position8 = 0;\n    my $letter_found8\
    \ = 0;\n    my $letter_position9 = 0;\n    my $letter_found9 = 0;\n    my $letter_position10\
    \ = 0;\n    my $letter_found10 = 0;\n    my $letter_position11 = 0;\n    my $letter_found11\
    \ = 0;\n    my $letter_position12 = 0;\n    my $letter_found12 = 0;\n    my $letter_position13\
    \ = 0;\n    my $letter_found13 = 0;\n    my $letter_position14 = 0;\n    my $letter_found14\
    \ = 0;\n    my $letter_position15 = 0;\n    my $letter_found15 = 0;\n    my $letter_position16\
    \ = 0;\n    my $letter_found16 = 0;\n    my $letter_position17 = 0;\n    my $letter_found17\
    \ = 0;\n    my $letter_position18 = 0;\n    my $letter_found18 = 0;\n    my $letter_position19\
    \ = 0;\n    my $letter_found19 = 0;\n    my $letter_position20 = 0;\n    my $letter_found20\
    \ = 0;\n    my $letter_position21 = 0;\n    my $letter_found21 = 0;\n    my $letter_position22\
    \ = 0;\n    my $letter_found22 = 0;\n    my $letter_position23 = 0;\n    my $letter_found23\
    \ = 0;\n    my $letter_position24 = 0;\n    my $letter_found24 = 0;\n    my $letter_position25\
    \ = 0;\n    my $letter_found25 = 0;\n    my $letter_position26 = 0;\n    my $letter_found26\
    \ = 0;\n    ", "    my $vowels = \"aeiou\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($vowels, $letter);\n        if ($index != -1) {\n\
    \            $new_message .= $alphabet[$index+2];\n        } else {\n        \
    \    $new_message .= $letter;\n        }\n    }\n    return $new_message;\n}",
  "    my $message = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_2\
    \ = \"AEIOUaeiou\";\n    my $vowels_3 = \"AEIOUaeiouAEIOU\";\n    my $vowels_4\
    \ = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n   \
    \ my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    \n    my $message2 = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $letter2 = $letter;\n        \n        if ($letter eq \"A\") {\n\
    \            $letter2 = \"a\";\n        } elsif ($letter eq \"E\") {\n       \
    \     $letter2 = \"e\";\n        } elsif ($letter eq \"I\") {\n            $letter2\
    \ = \"i\";\n        } elsif ($letter eq \"O\") {\n            $letter2 = \"o\"\
    ;\n        } elsif ($letter eq \"U\") {\n            $letter2 = \"u\";\n     \
    \   } elsif ($letter eq \"a\") {\n            $letter2 = \"a\";\n        } elsif\
    \ ($letter eq \"e\") {\n            $letter2 = \"e\";\n        } elsif ($letter\
    \ eq \"i\") {\n            $letter2 = \"i\";\n        } elsif ($letter eq \"o\"\
    ) {\n            $letter2 = \"o\";\n        } elsif ($letter eq \"u\") {\n   \
    \         $letter2 = \"u\";\n        } elsif ($letter eq \"A\") {\n          \
    \  $letter2 = \"A\";\n        } elsif ($letter eq \"E\") {\n            $letter2\
    \ = \"E\";\n        } elsif ($letter eq \"I\") {\n            $letter2 = \"I\"\
    ;\n        } elsif ($letter eq \"O\") {\n            $letter2 = \"O\";\n     \
    \   } elsif ($letter eq \"U\") {\n            $letter2 = \"U\";\n        } elsif\
    \ ($letter eq \"a\") {\n            $letter2 = \"a\";\n        } elsif ($letter\
    \ eq \"e\") {\n            $letter2 = \"e\";\n        } elsif ($letter eq \"i\"\
    ) {\n            $letter2 = \"i\";\n        } elsif ($letter eq \"o\") {\n   \
    \         $letter2 = \"o\";\n        } elsif ($letter eq \"u\") {\n          \
    \  $letter2 = \"u\";\n        }\n        \n        $message2 .= $letter2;\n  \
    \  }\n    \n    return $message2;\n}", "    \n    # Write your code here\n   \
    \ \n    return $message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $letter_pos = index($alphabet,\
    \ $letter);\n        if ($letter_pos > 0) {\n            my $vowel_pos = index($vowels,\
    \ $letter);\n            if ($vowel_pos > 0) {\n                $new_message .=\
    \ substr($alphabet, $letter_pos + 2, 1) . \n                    substr($alphabet,\
    \ $vowel_pos + 1, 1);\n            } else {\n                $new_message .= substr($alphabet,\
    \ $letter_pos + 2, 1);\n            }\n        } else {\n            $new_message\
    \ .= $letter;\n        }\n    }\n    return $new_message;\n}", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $new\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $pos\
    \ = index($alphabet, $letter);\n        my $next = $alphabet[$pos + 1];\n    \
    \    \n        if ($letter eq $next) {\n            $new .= $letter;\n       \
    \ } else {\n            $new .= $letter;\n            $new .= $alphabet[$pos +\
    \ 1];\n        }\n    }\n    \n    $new =~ s/$vowels/$alphabet[$alphabet{$_}]\
    \ for grep {$_} keys %$alphabet;\n    \n    return $new;\n}", "    \n    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    \n    my\
    \ $new_message = \"\";\n    \n    foreach my $letter (split //, $message) {\n\
    \        if ($letter eq \"a\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"e\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    i\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"u\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    y\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"e\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    i\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"u\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    y\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"e\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c", "    \n    my @chars = split(//,\
    \ $message);\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    \n    foreach\
    \ my $char (@chars) {\n        if ($char =~ /[a-z]/) {\n            $chars[$i]\
    \ = $char;\n            $i++;\n        }\n        if ($char =~ /[A-Z]/) {\n  \
    \          $chars[$j] = $char;\n            $j++;\n        }\n        if ($char\
    \ =~ /[aeiou]/) {\n            $chars[$k] = $char;\n            $k++;\n      \
    \  }\n        if ($char =~ /[AEIOU]/) {\n            $chars[$l] = $char;\n   \
    \         $l++;\n        }\n        if ($char =~ /[qwertyuiop]/) {\n         \
    \   $chars[$m] = $char;\n            $m++;\n        }\n        if ($char =~ /[QWERTYUIOP]/)\
    \ {\n            $chars[$n] = $char;\n            $n++;\n        }\n        if\
    \ ($char =~ /[asdfghjklzxcvbnm]/) {\n            $chars[$o] = $char;\n       \
    \     $o++;\n        }\n        if ($char =~ /[ASDFGHJKLZXCVBNM]/) {\n       \
    \     $chars[$p] = $char;\n            $p++;\n        }\n        if ($char =~\
    \ /[zxcvbnm]/) {\n            $chars[$q] = $char;\n            $q++;\n       \
    \ }\n        if ($char =~ /[ZYXWVUTSRQPONMLKJIHGFEDCBA]/) {\n            $chars[$r]\
    \ = $char;\n            $r++;\n        }\n        if ($char =~ /[ZYWXVUTSRQPONMLKJIHGFEDCBA]/)\
    \ {\n            $chars[$s] = $char;\n            $s++;\n        }\n        if\
    \ ($char =~ /[ZXCVBNM]/) {\n            $chars[$t] = $char;\n            $t++;\n\
    \        }\n        if ($char =~ /[VUTSRQPONMLKJIHGFED", "    my $result = \"\"\
    ;\n    my $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_index = index($vowels, $message);\n    my $letters_index = index($letters,\
    \ $message);\n    my $letter_count = 1;\n    my $vowel_count = 0;\n    my $letter_pos\
    \ = 0;\n    my $vowel_pos = 0;\n    my $vowel_letter = \"\";\n    my $letter_letter\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n  \
    \  my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $vowel_letter_index\
    \ = 0;\n    my $letter_letter_index = 0;\n    my $letter_letter_count = 1;\n \
    \   my $vowel_letter_count = 1;\n    my $vowel_letter_pos = 0;\n    my $letter_letter_pos\
    \ = 0;\n    my $letter_letter_letter = \"\";\n    my $vowel_letter_letter = \"\
    \";\n    my $vowel_letter_letter_index = 0;\n    my $letter_letter_letter_index\
    \ = 0;\n    my $letter_letter_letter_count = 1;\n    my $vowel_letter_letter_count\
    \ = 1;\n    my $vowel_letter_letter_pos = 0;\n    my $letter_letter_letter_pos\
    \ = 0;\n    my $letter_letter_letter_letter = \"\";\n    my $vowel_letter_letter_letter\
    \ = \"\";\n    my $vowel_letter_letter_letter_index = 0;\n    my $letter_letter_letter_letter_index\
    \ = 0;\n    my $letter_letter_letter_letter_count = 1;\n    my $vowel_letter_letter_letter_count\
    \ = 1;\n    my $vowel_letter_letter_letter_pos = 0;\n    my $letter_letter_letter_pos\
    \ = 0;\n    my $letter_letter_letter_letter = \"\";\n    my $vowel_letter_letter_letter\
    \ = \"\";\n    my $vowel_letter_letter_letter_index = 0;\n    my $letter_letter_letter_letter_index\
    \ = 0;\n    my $letter_letter_letter_letter_count = 1;\n    my $vowel_letter_letter_letter_count\
    \ = 1;\n    my $vowel_letter_letter_pos = 0;\n    my $letter_letter_letter_pos\
    \ = 0;\n    my $letter_letter_letter_letter = \"\";\n    my $vowel_letter_letter_letter\
    \ = \"\";\n    my $vowel_letter_letter_letter_index = 0;\n    my $letter_letter_letter_letter_index\
    \ = 0;\n    my $letter_letter_letter_letter_count = 1;\n    my $vowel_letter_letter_letter_count\
    \ = 1;\n    my $vowel_letter_letter_pos = 0;\n    my $letter_letter_letter_pos\
    \ = 0;\n    my $", "    my $message = $message;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $", "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n   \
    \ $message =~ tr/AEIOUaeiou/AEIOUAEIOU/;\n    return $message;\n}", "    my $message2\
    \ = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount = length($vowels);\n\
    \    my $messageLength = length($message);\n    my $index = 0;\n    my $letter;\n\
    \    my $vowel;\n    my $letterCount;\n    my $vowelCount;\n    my $letterIndex;\n\
    \    my $vowelIndex;\n    my $letterCountIndex;\n    my $vowelCountIndex;\n  \
    \  my $letterIndex2;\n    my $vowelIndex2;\n    my $letterCountIndex2;\n    my\
    \ $vowelCountIndex2;\n    my $letterIndex3;\n    my $vowelIndex3;\n    my $letterCountIndex3;\n\
    \    my $vowelCountIndex3;\n    my $letterIndex4;\n    my $vowelIndex4;\n    my\
    \ $letterCountIndex4;\n    my $vowelCountIndex4;\n    my $letterIndex5;\n    my\
    \ $vowelIndex5;\n    my $letterCountIndex5;\n    my $vowelCountIndex5;\n    my\
    \ $letterIndex6;\n    my $vowelIndex6;\n    my $letterCountIndex6;\n    my $vowelCountIndex6;\n\
    \    my $letterIndex7;\n    my $vowelIndex7;\n    my $letterCountIndex7;\n   \
    \ my $vowelCountIndex7;\n    my $letterIndex8;\n    my $vowelIndex8;\n    my $letterCountIndex8;\n\
    \    my $vowelCountIndex8;\n    my $letterIndex9;\n    my $vowelIndex9;\n    my\
    \ $letterCountIndex9;\n    my $vowelCountIndex9;\n    my $letterIndex10;\n   \
    \ my $vowelIndex10;\n    my $letterCountIndex10;\n    my $vowelCountIndex10;\n\
    \    my $letterIndex11;\n    my $vowelIndex11;\n    my $letterCountIndex11;\n\
    \    my $vowelCountIndex11;\n    my $letterIndex12;\n    my $vowelIndex12;\n \
    \   my $letterCountIndex12;\n    my $vowelCountIndex12;\n    my $letterIndex13;\n\
    \    my $vowelIndex13;\n    my $letterCountIndex13;\n    my $vowelCountIndex13;\n\
    \    my $letterIndex14;\n    my $vowelIndex14;\n    my $letterCountIndex14;\n\
    \    my $vowelCountIndex14;\n    my $letterIndex15;\n    my $vowelIndex15;\n \
    \   my $letterCountIndex15;\n    my $vowelCountIndex15;\n    my $letterIndex16;\n\
    \    my $vowelIndex16;\n    my $letterCountIndex16;\n    my $vowelCountIndex16;\n\
    \    my $letterIndex17;\n    my $vowelIndex17;\n    my $letterCountIndex17;\n\
    \    my $vowelCountIndex17;\n    my $letterIndex18;\n    my $vowelIndex18", " \
    \   my $alphabet = qw(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z);\n\
    \    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_position = 0;\n    my $new_vowel_position\
    \ = 0;\n    my $new_vowel_position2 = 0;\n    my $new_vowel_position3 = 0;\n \
    \   my $new_vowel_position4 = 0;\n    my $new_vowel_position5 = 0;\n    my $new_vowel_position6\
    \ = 0;\n    my $new_vowel_position7 = 0;\n    my $new_vowel_position8 = 0;\n \
    \   my $new_vowel_position9 = 0;\n    my $new_vowel_position10 = 0;\n    my $new_vowel_position11\
    \ = 0;\n    my $new_vowel_position12 = 0;\n    my $new_vowel_position13 = 0;\n\
    \    my $new_vowel_position14 = 0;\n    my $new_vowel_position15 = 0;\n    my\
    \ $new_vowel_position16 = 0;\n    my $new_vowel_position17 = 0;\n    my $new_vowel_position18\
    \ = 0;\n    my $new_vowel_position19 = 0;\n    my $new_vowel_position20 = 0;\n\
    \    my $new_vowel_position21 = 0;\n    my $new_vowel_position22 = 0;\n    my\
    \ $new_vowel_position23 = 0;\n    my $new_vowel_position24 = 0;\n    my $new_vowel_position25\
    \ = 0;\n    my $new_vowel_position26 = 0;\n    my $new_vowel_position27 = 0;\n\
    \    my $new_vowel_position28 = 0;\n    my $new_vowel_position29 = 0;\n    my\
    \ $new_vowel_position30 = 0;\n    my $new_vowel_position31 = 0;\n    my $new_vowel_position32\
    \ = 0;\n    my $new_vowel_position33 = 0;\n    my $new_vowel_position34 = 0;\n\
    \    my $new_vowel_position35 = 0;\n    my $new_vowel_position36 = 0;\n    my\
    \ $new_vowel_position37 = 0;\n    my $new_vowel_position38 = 0;\n    my $new_vowel_position39\
    \ = 0;\n    my $new_vowel_position40 = 0;\n    my $new_vowel_position41 = 0;\n\
    \    my $new_vowel_position42 = 0;\n    my $new_vowel_position43 = 0;\n    my\
    \ $new_vowel_position44 = 0;\n    my $new_vowel_position45 = 0;\n    my $new_vowel_position46\
    \ = 0;\n    my $new_vowel_position47 = 0;\n    my $new_vowel_position48 = 0;\n\
    \    my $new_vowel_position49 = 0;", "    my $vowels = \"aeiou\";\n    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $result = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;", "    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOU", "    my $message = $message;\n    my\
    \ $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_positions = $vowels =~ /[aeiouAEIOU]/gi;\n    my $letters_positions\
    \ = $letters =~ /[abcdefghijklmnopqrstuvwxyz]/gi;\n    my $new_message = \"\"\
    ;\n    my $new_vowels = \"\";\n    my $new_letters = \"\";\n    my $position =\
    \ 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_position =\
    \ 0;\n    my $letter_position = 0;\n    my $new_vowel_position = 0;\n    my $new_letter_position\
    \ = 0;\n    my $new_vowel_letter = \"\";\n    my $new_letter_letter = \"\";\n\
    \    my $new_vowel_letter_index = 0;\n    my $new_letter_letter_index = 0;\n \
    \   my $new_vowel_letter_index = 0;\n    my $new_letter_letter_index = 0;\n  \
    \  my $new_vowel_letter_position = 0;\n    my $new_letter_letter_position = 0;\n\
    \    my $new_vowel_letter_letter = \"\";\n    my $new_letter_letter_letter = \"\
    \";\n    my $new_vowel_letter_letter_index = 0;\n    my $new_letter_letter_letter_index\
    \ = 0;\n    my $new_vowel_letter_letter_index = 0;\n    my $new_letter_letter_letter_index\
    \ = 0;\n    my $new_vowel_letter_letter_position = 0;\n    my $new_letter_letter_letter_position\
    \ = 0;\n    my $new_vowel_letter_letter_letter = \"\";\n    my $new_letter_letter_letter_letter\
    \ = \"\";\n    my $new_vowel_letter_letter_letter_index = 0;\n    my $new_letter_letter_letter_letter_index\
    \ = 0;\n    my $new_vowel_letter_letter_letter_index = 0;\n    my $new_letter_letter_letter_letter_index\
    \ = 0;\n    my $new_vowel_letter_letter_letter_position = 0;\n    my $new_letter_letter_letter_letter_position\
    \ = 0;\n    my $new_vowel_letter_letter_letter_letter = \"\";\n    my $new_letter_letter_letter_letter_letter\
    \ = \"\";\n    my $new_vowel_letter_letter_letter_letter_index = 0;\n    my $new_letter_letter_letter_letter_letter_index\
    \ = 0;\n    my $new_vowel_letter_letter_letter_letter_index = 0;\n    my $new_letter_letter_letter_letter_letter_index\
    \ = 0;\n    my $new_vowel_letter_letter_letter_letter_position = 0;\n    my $new_letter_letter_letter_letter_letter_position\
    \ = 0;\n    my $new_vowel_letter_letter_letter_letter_letter = \"\";\n    my $new_letter_letter_letter_letter_letter_letter\
    \ = \"\";\n    my $new_vowel_letter_letter_letter_letter_letter_index = 0;\n \
    \   my $new_letter_letter_letter_letter_letter_letter_index = 0;\n    my $", " \
    \   my $result = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_pos =\
    \ 0;\n    my $vowels_pos_2 = $vowels_pos + 2;\n    my $vowels_pos_3 = $vowels_pos_2\
    \ + 2;\n    my $vowels_pos_4 = $vowels_pos_3 + 2;\n    my $vowels_pos_5 = $vowels_pos_4\
    \ + 2;\n    my $vowels_pos_6 = $vowels_pos_5 + 2;\n    my $vowels_pos_7 = $vowels_pos_6\
    \ + 2;\n    my $vowels_pos_8 = $vowels_pos_7 + 2;\n    my $vowels_pos_9 = $vowels_pos_8\
    \ + 2;\n    my $vowels_pos_10 = $vowels_pos_9 + 2;\n    my $vowels_pos_11 = $vowels_pos_10\
    \ + 2;\n    my $vowels_pos_12 = $vowels_pos_11 + 2;\n    my $vowels_pos_13 = $vowels_pos_12\
    \ + 2;\n    my $vowels_pos_14 = $vowels_pos_13 + 2;\n    my $vowels_pos_15 = $vowels_pos_14\
    \ + 2;\n    my $vowels_pos_16 = $vowels_pos_15 + 2;\n    my $vowels_pos_17 = $vowels_pos_16\
    \ + 2;\n    my $vowels_pos_18 = $vowels_pos_17 + 2;\n    my $vowels_pos_19 = $vowels_pos_18\
    \ + 2;\n    my $vowels_pos_20 = $vowels_pos_19 + 2;\n    my $vowels_pos_21 = $vowels_pos_20\
    \ + 2;\n    my $vowels_pos_22 = $vowels_pos_21 + 2;\n    my $vowels_pos_23 = $vowels_pos_22\
    \ + 2;\n    my $vowels_pos_24 = $vowels_pos_23 + 2;\n    my $vowels_pos_25 = $vowels_pos_24\
    \ + 2;\n    my $vowels_pos_26 = $vowels_pos_25 + 2;\n    my $vowels_pos_27 = $vowels_pos_26\
    \ + 2;\n    my $vowels_pos_28 = $vowels_pos_27 + 2;\n    my $vowels_pos_29 = $vowels_pos_28\
    \ + 2;\n    my $vowels_pos_30 = $vowels_pos_29 + 2;\n    my $vowels_pos_31 = $vowels_pos_30\
    \ + 2;\n    my $vowels_pos_32 = $vowels_pos_31 + 2;\n    my $vowels_pos_33 = $vowels_pos_32\
    \ + 2;\n    my $vowels_pos_34 = $vowels_pos_33 + 2;\n    my $vowels_pos_35 = $vowels_pos_34\
    \ + 2;\n    my $vowels_pos_36 = $vowels_pos_35 + 2;\n    my $", "    my $alphabet\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels =\
    \ qw(a e i o u);\n    my $consonants = qw(g p q r s t v w x y z);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n  \
    \  my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $vowel_counter\
    \ = 0;\n    my $consonant_counter = 0;\n    my $consonant_letter;\n    my $vowel_letter;\n\
    \    my $consonant_letter_2;\n    my $vowel_letter_2;\n    my $consonant_letter_3;\n\
    \    my $vowel_letter_3;\n    my $consonant_letter_4;\n    my $vowel_letter_4;\n\
    \    my $consonant_letter_5;\n    my $vowel_letter_5;\n    my $consonant_letter_6;\n\
    \    my $vowel_letter_6;\n    my $consonant_letter_7;\n    my $vowel_letter_7;\n\
    \    my $consonant_letter_8;\n    my $vowel_letter_8;\n    my $consonant_letter_9;\n\
    \    my $vowel_letter_9;\n    my $consonant_letter_10;\n    my $vowel_letter_10;\n\
    \    my $consonant_letter_11;\n    my $vowel_letter_11;\n    my $consonant_letter_12;\n\
    \    my $vowel_letter_12;\n    my $consonant_letter_13;\n    my $vowel_letter_13;\n\
    \    my $consonant_letter_14;\n    my $vowel_letter_14;\n    my $consonant_letter_15;\n\
    \    my $vowel_letter_15;\n    my $consonant_letter_16;\n    my $vowel_letter_16;\n\
    \    my $consonant_letter_17;\n    my $vowel_letter_17;\n    my $consonant_letter_18;\n\
    \    my $vowel_letter_18;\n    my $consonant_letter_19;\n    my $vowel_letter_19;\n\
    \    my $consonant_letter_20;\n    my $vowel_letter_20;\n    my $consonant_letter_21;\n\
    \    my $vowel_letter_21;\n    my $consonant_letter_22;\n    ", "    \n    my\
    \ $vowels = \"aeiouAEIOU\";\n    \n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $letter_pos = index($vowels, $letter);\n\
    \        if ($letter_pos > -1) {\n            $new_message .= substr($letter,\
    \ 0, $letter_pos);\n            $new_message .= substr($letter, $letter_pos +\
    \ 1);\n        } else {\n            $new_message .= $letter;\n        }\n   \
    \ }\n    \n    return $new_message;\n}", "    my $message2 = \"\";\n    my $vowels\
    \ = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my\
    \ $vowelsCount = 0;\n    my $lettersCount = 0;\n    foreach my $letter (split(//,\
    \ $message)) {\n        if ($letter eq \"a\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"e\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"i\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"o\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"u\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"A\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"E\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"I\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"O\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"U\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"a\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"e\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"i\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"o\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"u\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"A\") {\n        \
    \    $letter = $letters[$lettersCount];\n            $lettersCount++;\n      \
    \  } elsif ($letter eq \"E\") {\n            $letter = $letters[$lettersCount];\n\
    \            $lettersCount++;\n        } elsif ($letter eq \"I\") {\n        \
    \    $letter = $", "    my $vowels = \"aeiou\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($vowels, $letter);\n        if ($index != -1) {\n\
    \            $new_message .= substr($alphabet, $index + 1, 1) . $letter;\n   \
    \     } else {\n            $new_message .= $letter;\n        }\n    }\n    return\
    \ $new_message;\n}", "    my $message = $message;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiouAEIOU]/./g;\n\
    \    return $message;\n}", "    my $message = $message;\n    my $vowels = \"aeiou\"\
    ;\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4\
    \ = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my\
    \ $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUae", "    my $alphabet = qw(a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split(//, $message)) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index >= 0) {\n            $new_message\
    \ .= $alphabet[$index + 1];\n        }\n    }\n    \n    foreach my $letter (split(//,\
    \ $new_message)) {\n        my $index = index($vowels, $letter);\n        if ($index\
    \ >= 0) {\n            $new_message .= $vowels[$index + 1];\n        }\n    }\n\
    \    \n    return $new_message;\n}", "    my $message = \"\";\n    my $vowels\
    \ = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my $letter_2 = \"a\";\n   \
    \ my $letter_1 = \"b\";\n    my $letter_3 = \"c\";\n    my $letter_4 = \"d\";\n\
    \    my $letter_5 = \"e\";\n    my $letter_6 = \"f\";\n    my $letter_7 = \"g\"\
    ;\n    my $letter_8 = \"h\";\n    my $letter_9 = \"i\";\n    my $letter_10 = \"\
    j\";\n    my $letter_11 = \"k\";\n    my $letter_12 = \"l\";\n    my $letter_13\
    \ = \"m\";\n    my $letter_14 = \"n\";\n    my $letter_15 = \"o\";\n    my $letter_16\
    \ = \"p\";\n    my $letter_17 = \"q\";\n    my $letter_18 = \"r\";\n    my $letter_19\
    \ = \"s\";\n    my $letter_20 = \"t\";\n    my $letter_21 = \"u\";\n    my $letter_22\
    \ = \"v\";\n    my $letter_23 = \"w\";\n    my $letter_24 = \"x\";\n    my $letter_25\
    \ = \"y\";\n    my $letter_26 = \"z\";\n    my $letter_27 = \"A\";\n    my $letter_28\
    \ = \"B\";\n    my $letter_29 = \"C\";\n    my $letter_30 = \"D\";\n    my $letter_31\
    \ = \"E\";\n    my $letter_32 = \"F\";\n    my $letter_33 = \"G\";\n    my $letter_34\
    \ = \"H\";\n    my $letter_35 = \"I\";\n    my $letter_36 = \"J\";\n    my $letter_37\
    \ = \"K\";\n    my $letter_38 = \"L\";\n    my $letter_39 = \"M\";\n    my $letter_40\
    \ = \"N\";\n    my $letter_41 = \"O\";\n    my $letter_42 = \"P\";\n    my $letter_43\
    \ = \"Q\";\n    my $letter_44 = \"R\";\n    my $letter_45 = \"S\";\n    my $letter_46\
    \ = \"T\";\n    my $letter_47 = \"U\";\n    my $letter_48 = \"V\";\n    my $letter_49\
    \ = \"W\";\n    my $letter_50 = \"X\";\n    my $letter_51 = \"Y\";\n    my $letter_52\
    \ = \"Z\";\n    my $letter_53 = \"a\";\n    my $letter_54 = \"b\";\n    my $letter_55\
    \ = \"c\";\n    my $letter_56 = \"d\";\n    my $letter_57 = \"e\";\n    my $letter_58\
    \ = \"f\";\n    my $letter_59 = \"g\";\n    my $letter_60 = \"h\";\n    my $letter_61\
    \ = ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"\
    AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = length($message);\n    my $new_message = \"\";\n    my\
    \ $vowel_position = 0;\n    my $vowel_position2 = -1;\n    my $vowel_position3\
    \ = -1;\n    my $vowel_position4 = -1;\n    my $vowel_position5 = -1;\n    my\
    \ $vowel_position6 = -1;\n    my $vowel_position7 = -1;\n    my $vowel_position8\
    \ = -1;\n    my $vowel_position9 = -1;\n    my $vowel_position10 = -1;\n    my\
    \ $vowel_position11 = -1;\n    my $vowel_position12 = -1;\n    my $vowel_position13\
    \ = -1;\n    my $vowel_position14 = -1;\n    my $vowel_position15 = -1;\n    my\
    \ $vowel_position16 = -1;\n    my $vowel_position17 = -1;\n    my $vowel_position18\
    \ = -1;\n    my $vowel_position19 = -1;\n    my $vowel_position20 = -1;\n    my\
    \ $vowel_position21 = -1;\n    my $vowel_position22 = -1;\n    my $vowel_position23\
    \ = -1;\n    my $vowel_position24 = -1;\n    my $vowel_position25 = -1;\n    my\
    \ $vowel_position26 = -1;\n    my $vowel_position27 = -1;\n    my $vowel_position28\
    \ = -1;\n    my $vowel_position29 = -1;\n    my $vowel_position30 = -1;\n    my\
    \ $vowel_position31 = -1;\n    my $vowel_position32 = -1;\n    my $vowel_position33\
    \ = -1;\n    my $vowel_position34 = -1;\n    my $vowel_position35 = -1;\n    my\
    \ $vowel_position36 = -1;\n    my $vowel_position37 = -1;\n    my $vowel_position38\
    \ = -1;\n    my $vowel_position39 = -1;\n    my $vowel_position40 = -1;\n    my\
    \ $vowel_position41 = -1;\n    my $vowel_position42 = -1;\n    my $vowel_position43\
    \ = -1;\n    my $vowel_position44 = -1;\n    my $vowel_position45 = -1;\n    my\
    \ $vowel_position46 = -1;\n    my $vowel_position47 = -1;\n    my $vowel_position48\
    \ = -1;\n    my $vowel_position49 = -1;\n    my $vowel_position50 = -1;\n    my\
    \ $vowel_position51 = -1;\n    my $vowel_position", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= $alphabet[$index];\n\
    \        } else {\n            $new_message .= $letter;\n        }\n    }\n  \
    \  \n    foreach my $vowel (split //, $vowels) {\n        my $index = index($alphabet,\
    \ $vowel);\n        if ($index != -1) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        } else {\n            $new_message .= $vowel;\n        }\n  \
    \  }\n    \n    return $new_message;\n}", "    $message =~ tr/A-Z/a-z/;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[AEIOU]/[aeiou]/g;\n    return $message;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work. `tr/A-Z/a-z/`\
    \ doesn't do anything to the `test` string.\n<|/ c |>\n<| c |>\nIt does work,\
    \ try it yourself. It replaces all uppercase letters with lowercase letters, and\
    \ then replaces all vowels with vowels 2 places ahead of them. Try it yourself\
    \ and see for yourself.\n<|/ c |>\n<| c |>\nI did try it myself and it didn't\
    \ work. `tr/A-Z/a-z/` doesn't do anything to the `test` string. Try it yourself\
    \ and see for yourself.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. It\
    \ replaces all uppercase letters with lowercase letters, and then replaces all\
    \ vowels with vowels 2 places ahead of them. Try it yourself and see for yourself.\n\
    <|/ c |>\n<| c |>\nI did try it myself and it didn't work. `tr/A-Z/a-z/` doesn't\
    \ do anything to the `test` string. Try it yourself and see for yourself.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index >= 0) {\n            $new_message .= $alphabet[$index + 1];\n\
    \        } else {\n            $new_message .= $letter;\n        }\n    }\n  \
    \  \n    foreach my $letter (split //, $new_message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index >= 0) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        } else {\n            $new_message .= $letter;\n        }\n \
    \   }\n    \n    return $new_message;\n}", "    $message =~ tr/A-Z/a-z/;\n   \
    \ $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOU", "    my @chars = split(//, $message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $result = \"\";\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n  \
    \  my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    ", "    my $alphabet = qw(a b c d e f g h\
    \ i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n   \
    \ my $consonants = qw(g p q r s t v w x y z);\n    my $vowel_positions = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_2 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $consonant_positions_2 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my\
    \ $vowel_positions_3 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions_3\
    \ = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_4 = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions_4 = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_5 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $consonant_positions_5 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my\
    \ $vowel_positions_6 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions_6\
    \ = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_7 = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions_7 = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_8 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $consonant_positions_8 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my\
    \ $vowel_positions_9 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions_9\
    \ = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_10 = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $consonant_positions_10 = map { $alphabet[$_]\
    \ } ", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n\
    \    foreach my $letter (split //, $message) {\n        my $index = index($alphabet,\
    \ $letter);\n        if ($index >= 0) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        } else {\n            $new_message .= $letter;\n        }\n \
    \   }\n    \n    foreach my $vowel (split //, $vowels) {\n        $new_message\
    \ =~ s/$vowel/$alphabet[($alphabet - $vowel) + 1]/g;\n    }\n    \n    return\
    \ $new_message;\n}", "    \n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"\
    AEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $letters_2\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    \n    my $new_message = \"\";\n    \n\
    \    foreach my $letter (split //, $message) {\n        my $letter_pos = index($vowels,\
    \ $letter);\n        if ($letter_pos != -1) {\n            $new_message .= $letters_2[$letter_pos\
    \ + 1];\n        } else {\n            $new_message .= $letter;\n        }\n \
    \   }\n    \n    return $new_message;\n}", "    my $vowels = \"aeiouAEIOU\";\n\
    \    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $result = \"\";\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    ", "    my $message = $message;\n\
    \    my $vowels = \"AEIOUaeiou\";\n    my $letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowel_positions = $vowels =~ /[AEIOUaeiou]/gi;\n    my $letter_positions\
    \ = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n    my $letter_positions_2\
    \ = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n    my $vowel_positions_2 =\
    \ $vowels =~ /[AEIOUaeiou]/gi;\n    my $letter_positions_3 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_4 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_5 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_6 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_7 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_8 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_9 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_10 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_11 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_12 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_13 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_14 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi;\n\
    \    my $letter_positions_15 = $letters =~ /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/gi",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/ig;\n    $message =~ s/[AEIOUaeiou]/[AEIOU",
  "    my $vowels = \"aeiouAEIOU\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $new = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    ", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n\
    \    foreach my $letter (split //, $message) {\n        my $index = index($alphabet,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n    }\n    \n    foreach my $vowel (split //, $vowels) {\n\
    \        my $index = index($alphabet, $vowel);\n        if ($index != -1) {\n\
    \            $new_message .= $alphabet[$index + 2];\n        }\n    }\n    \n\
    \    return $new_message;\n}", "    my $result = \"\";\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_index = 0;\n\
    \    my $letters_index = 0;\n    my $vowels_index2 = 0;\n    my $letters_index2\
    \ = 0;\n    my $vowels_index3 = 0;\n    my $letters_index3 = 0;\n    my $vowels_index4\
    \ = 0;\n    my $letters_index4 = 0;\n    my $vowels_index5 = 0;\n    my $letters_index5\
    \ = 0;\n    my $vowels_index6 = 0;\n    my $letters_index6 = 0;\n    my $vowels_index7\
    \ = 0;\n    my $letters_index7 = 0;\n    my $vowels_index8 = 0;\n    my $letters_index8\
    \ = 0;\n    my $vowels_index9 = 0;\n    my $letters_index9 = 0;\n    my $vowels_index10\
    \ = 0;\n    my $letters_index10 = 0;\n    my $vowels_index11 = 0;\n    my $letters_index11\
    \ = 0;\n    my $vowels_index12 = 0;\n    my $letters_index12 = 0;\n    my $vowels_index13\
    \ = 0;\n    my $letters_index13 = 0;\n    my $vowels_index14 = 0;\n    my $letters_index14\
    \ = 0;\n    my $vowels_index15 = 0;\n    my $letters_index15 = 0;\n    my $vowels_index16\
    \ = 0;\n    my $letters_index16 = 0;\n    my $vowels_index17 = 0;\n    my $letters_index17\
    \ = 0;\n    my $vowels_index18 = 0;\n    my $letters_index18 = 0;\n    my $vowels_index19\
    \ = 0;\n    my $letters_index19 = 0;\n    my $vowels_index20 = 0;\n    my $letters_index20\
    \ = 0;\n    my $vowels_index21 = 0;\n    my $letters_index21 = 0;\n    my $vowels_index22\
    \ = 0;\n    my $letters_index22 = 0;\n    my $vowels_index23 = 0;\n    my $letters_index23\
    \ = 0;\n    my $vowels_index24 = 0;\n    my $letters_index24 = 0;\n    my $vowels_index25\
    \ = 0;\n    my $letters_index25 = 0;\n    my $vowels_index26 = 0;\n    my $letters_index26\
    \ = 0;\n    my $vowels_index27 = 0;\n    my $letters_index27 = 0;\n    my $vowels_index28\
    \ = 0;\n    my $letters_index28 = 0;\n    my $vowels_index29 = 0;\n    my $letters_index29\
    \ = 0;\n    my $vowels_index30 = 0;\n    my $letters_index30 = 0;\n    my $vowels_index31\
    \ = 0;\n    ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = length($message);\n    while($i < $l) {\n       \
    \ my $letter = $message[$i];\n        my $letter_pos = index($alphabet, $letter);\n\
    \        my $vowel_pos = index($vowels, $letter);\n        if($letter_pos > $vowel_pos)\
    \ {\n            $new_message .= $letter;\n            $i++;\n        } else {\n\
    \            $new_message .= $alphabet[$letter_pos - $vowel_pos + 1];\n      \
    \      $i++;\n        }\n    }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nI like your solution, but I believe it would be better to use a\
    \ hash to map the letters to their positions in the alphabet.  That way you don't\
    \ have to keep recalculating the positions every time you encounter a letter.\n\
    <|/ c |>\n<| c |>\n: Yes, I agree. I'll add that to my answer.\n<|/ c |>\n<| a\
    \ tags=perl,regex |>\nHere's a solution using regex:\n<code>\nmy $string = \"\
    This is a message\";\nmy $pattern = qr/([a-z])/;\nmy $replacement = \"\\L$1\"\
    ;\n$string =~ s/$pattern/$replacement/g;\nprint $string;\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThe `/e` modifier isn't necessary in this case. `/e` is only necessary\
    \ when you want to do some kind of substitution on the replacement string. Here,\
    \ you're just replacing one character with another.\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>\nmy $string = \"This is a message\";\n$string =~ s/([a-z])/lc($1)/ge;\n\
    print $string;\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work\
    \ if you have a string like \"aBcD\".  It will turn it into \"lBcD\".\n<|/ c |>\n\
    <| c |>\n: Yes, that's true. That's why I said \"assuming only letters\". I'll\
    \ add that to my answer.\n<|/ c |>\n<| c |>\n: Yes, that's true. That's why I\
    \ said \"assuming only letters\". I'll add that to my answer.\n<|/ c |>\n<| ",
  "    my $message = $message;\n    my @letters = split(//, $message);\n    my $letter;\n\
    \    my $vowel;\n    my $vowel_position;\n    my $new_letter;\n    my $new_letters;\n\
    \    my $new_letters_count;\n    my $new_letters_position;\n    my $new_vowel;\n\
    \    my $new_vowels;\n    my $new_vowels_count;\n    my $new_vowels_position;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n    my $new_vowel_position;\n\
    \    my $new_vowel_position_count;\n    my $new_vowel_position;\n    my $new_vowel_position_count;\n\
    \    my $new_vowel_position;\n    my $new_vowel_position_count;\n", "    my $message\
    \ = $message;\n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n  \
    \  my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUae", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $newMessage = \"\";\n    my $i = 0;\n \
    \   my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c", "    $message =~ tr/A-Z/a-z/;\n \
    \   $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/AEIOUAEIOU/;\n\
    \    $message =~ tr/aeiou
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        my $vowel_index =\
    \ index($vowels, $letter);\n        \n        if ($index != -1 && $vowel_index\
    \ != -1) {\n            $new_message .= substr($alphabet, $index, 2);\n      \
    \      $new_message .= substr($alphabet, $vowel_index + 1, 1);\n        } else\
    \ {\n            $new_message .= $letter;\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new = '';\n  \
    \  \n    foreach my $letter (split //, $message) {\n        my $index = index($alphabet,\
    \ $letter);\n        if ($index != -1) {\n            $new .= substr($alphabet,\
    \ $index, 2);\n        }\n        else {\n            $new .= $letter;\n     \
    \   }\n    }\n    \n    foreach my $vowel (split //, $vowels) {\n        $new\
    \ .= substr($alphabet, index($alphabet, $vowel), 1);\n    }\n    \n    return\
    \ $new;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $vowel_found = 0;\n    my $vowel_position = 0;\n    my\
    \ $vowel_position2 = 0;\n    my $vowel_position3 = 0;\n    my $vowel_position4\
    \ = 0;\n    my $vowel_position5 = 0;\n    my $vowel_position6 = 0;\n    my $vowel_position7\
    \ = 0;\n    my $vowel_position8 = 0;\n    my $vowel_position9 = 0;\n    my $vowel_position10\
    \ = 0;\n    my $vowel_position11 = 0;\n    my $vowel_position12 = 0;\n    my $vowel_position13\
    \ = 0;\n    my $vowel_position14 = 0;\n    my $vowel_position15 = 0;\n    my $vowel_position16\
    \ = 0;\n    my $vowel_position17 = 0;\n    my $vowel_position18 = 0;\n    my $vowel_position19\
    \ = 0;\n    my $vowel_position20 = 0;\n    my $vowel_position21 = 0;\n    my $vowel_position22\
    \ = 0;\n    my $vowel_position23 = 0;\n    my $vowel_position24 = 0;\n    my $vowel_position25\
    \ = 0;\n    my $vowel_position26 = 0;\n    my $vowel_position27 = 0;\n    my $vowel_position28\
    \ = 0;\n    my $vowel_position29 = 0;\n    my $vowel_position30 = 0;\n    my $vowel_position31\
    \ = 0;\n    my $vowel_position32 = 0;\n    my $vowel_position33 = 0;\n    my $vowel_position34\
    \ = 0;\n    my $vowel_position35 = 0;\n    my $vowel_position36 = 0;\n    my $vowel_position37\
    \ = 0;\n    my $vowel_position38 = 0;\n    my $vowel_position39 = 0;\n    my $vowel_position40\
    \ = 0;\n    my $vowel_position41 = 0;\n    my $vowel_position42 = 0;\n    my $vowel_position43\
    \ = 0;\n    my $vowel_position44 = 0;\n    my $vowel_position45 = 0;\n    my $vowel_position46\
    \ = 0;\n    my $vowel_position47 = 0;\n    my $vowel_position48 = 0;\n    my $vowel_position",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index >= 0)\
    \ {\n            my $vowel_index = index($vowels, $letter);\n            if ($vowel_index\
    \ >= 0) {\n                $new_message .= substr($alphabet, $index, 2);\n   \
    \         } else {\n                $new_message .= substr($alphabet, $index,\
    \ 1);\n            }\n        } else {\n            $new_message .= $letter;\n\
    \        }\n    }\n    return $new_message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $output = '';\n    my $index = 0;\n   \
    \ my $letter;\n    my $vowel;\n    foreach $letter (split(//, $message)) {\n \
    \       $index++;\n        if ($index > 1) {\n            $letter = substr($alphabet,\
    \ index($alphabet, $letter) + 2, 1);\n        }\n        if ($letter =~ /[aeiou]/)\
    \ {\n            $vowel = substr($vowels, index($vowels, $letter) + 2, 1);\n \
    \           $letter = $vowel;\n        }\n        $output .= $letter;\n    }\n\
    \    return $output;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new = \"\"\
    ;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m =\
    \ 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r\
    \ = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my\
    \ $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $vowel = 0;\n\
    \    my $letter = 0;\n    my $letter2 = 0;\n    my $letter3 = 0;\n    my $letter4\
    \ = 0;\n    my $letter5 = 0;\n    my $letter6 = 0;\n    my $letter7 = 0;\n   \
    \ my $letter8 = 0;\n    my $letter9 = 0;\n    my $letter10 = 0;\n    my $letter11\
    \ = 0;\n    my $letter12 = 0;\n    my $letter13 = 0;\n    my $letter14 = 0;\n\
    \    my $letter15 = 0;\n    my $letter16 = 0;\n    my $letter17 = 0;\n    my $letter18\
    \ = 0;\n    my $letter19 = 0;\n    my $letter20 = 0;\n    my $letter21 = 0;\n\
    \    my $letter22 = 0;\n    my $letter23 = 0;\n    my $letter24 = 0;\n    my $letter25\
    \ = 0;\n    my $letter26 = 0;\n    my $letter27 = 0;\n    my $letter28 = 0;\n\
    \    my $letter29 = 0;\n    my $letter30 = 0;\n    my $letter31 = 0;\n    my $letter32\
    \ = 0;\n    my $letter33 = 0;\n    my $letter34 = 0;\n    my $letter35 = 0;\n\
    \    my $letter36 = 0;\n    my $letter37 = 0;\n    my $letter38 = 0;\n    my $letter39\
    \ = 0;\n    my $letter40 = 0;\n    my $letter41 = 0;\n    my $letter42 = 0;\n\
    \    my $letter43 = 0;\n    my $letter44 = 0;\n    my $letter45 = 0;\n    my $letter46\
    \ = 0;\n    my $letter47 = 0;\n    my $letter48 = 0;\n    my $letter49 = 0;\n\
    \    my $letter50 = 0;\n    my $letter51 = 0;\n    my $letter52 = 0;\n    my $letter53\
    \ = 0;\n    my $letter54 = 0;\n    my $letter55 = 0;\n    my $letter56 = 0;\n\
    \    my $letter57 = 0;\n    my $letter58 = 0;\n    my $letter59 = 0;\n    my $letter60\
    \ = 0;\n    my $letter61 = 0;\n    my $letter62 = 0;", "    my $alphabet = qw(a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e\
    \ i o u);\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = length($message);\n    my $vowel_position = 0;\n    my\
    \ $vowel_position2 = 0;\n    my $letter;\n    my $letter2;\n    my $letter3;\n\
    \    my $letter4;\n    my $letter5;\n    my $letter6;\n    my $letter7;\n    my\
    \ $letter8;\n    my $letter9;\n    my $letter10;\n    my $letter11;\n    my $letter12;\n\
    \    my $letter13;\n    my $letter14;\n    my $letter15;\n    my $letter16;\n\
    \    my $letter17;\n    my $letter18;\n    my $letter19;\n    my $letter20;\n\
    \    my $letter21;\n    my $letter22;\n    my $letter23;\n    my $letter24;\n\
    \    my $letter25;\n    my $letter26;\n    my $letter27;\n    my $letter28;\n\
    \    my $letter29;\n    my $letter30;\n    my $letter31;\n    my $letter32;\n\
    \    my $letter33;\n    my $letter34;\n    my $letter35;\n    my $letter36;\n\
    \    my $letter37;\n    my $letter38;\n    my $letter39;\n    my $letter40;\n\
    \    my $letter41;\n    my $letter42;\n    my $letter43;\n    my $letter44;\n\
    \    my $letter45;\n    my $letter46;\n    my $letter47;\n    my $letter48;\n\
    \    my $letter49;\n    my $letter50;\n    my $letter51;\n    my $letter52;\n\
    \    my $letter53;\n    my $letter54;\n    my $letter55;\n    my $letter56;\n\
    \    my $letter57;\n    my $letter58;\n    my $letter59;\n    my $letter60;\n\
    \    my $letter61;\n    my $letter62;\n    my $letter63;\n    my $letter64;\n\
    \    my $letter65;\n    my $letter66;\n    my $letter67;\n    my $letter68;\n\
    \    my $letter69;\n    my $letter70;\n    my $letter71;\n    my $letter72;\n\
    \    my $letter73;\n    my $letter74", "    $message =~ s/([aeiou])/$1/g;\n  \
    \  $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $output = '';\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    ", "    my $encoded = \"\";\n    my $vowels\
    \ = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my\
    \ $vowels_index = index($vowels, $message);\n    my $letters_index = index($letters,\
    \ $message);\n    my $vowels_index2 = $vowels_index + 2;\n    my $letters_index2\
    \ = $letters_index + 2;\n    my $vowels_index3 = $vowels_index + 3;\n    my $letters_index3\
    \ = $letters_index + 3;\n    my $vowels_index4 = $vowels_index + 4;\n    my $letters_index4\
    \ = $letters_index + 4;\n    my $vowels_index5 = $vowels_index + 5;\n    my $letters_index5\
    \ = $letters_index + 5;\n    my $vowels_index6 = $vowels_index + 6;\n    my $letters_index6\
    \ = $letters_index + 6;\n    my $vowels_index7 = $vowels_index + 7;\n    my $letters_index7\
    \ = $letters_index + 7;\n    my $vowels_index8 = $vowels_index + 8;\n    my $letters_index8\
    \ = $letters_index + 8;\n    my $vowels_index9 = $vowels_index + 9;\n    my $letters_index9\
    \ = $letters_index + 9;\n    my $vowels_index10 = $vowels_index + 10;\n    my\
    \ $letters_index10 = $letters_index + 10;\n    my $vowels_index11 = $vowels_index\
    \ + 11;\n    my $letters_index11 = $letters_index + 11;\n    my $vowels_index12\
    \ = $vowels_index + 12;\n    my $letters_index12 = $letters_index + 12;\n    my\
    \ $vowels_index13 = $vowels_index + 13;\n    my $letters_index13 = $letters_index\
    \ + 13;\n    my $vowels_index14 = $vowels_index + 14;\n    my $letters_index14\
    \ = $letters_index + 14;\n    my $vowels_index15 = $vowels_index + 15;\n    my\
    \ $letters_index15 = $letters_index + 15;\n    my $vowels_index16 = $vowels_index\
    \ + 16;\n    my $letters_index16 = $letters_index + 16;\n    my $vowels_index17\
    \ = $vowels_index + 17;\n    my $letters_index17 = $letters_index + 17;\n    my\
    \ $vowels_index18 = $vowels_index + 18;\n    my $letters_index18 = $letters_index\
    \ + 18;\n    my $vowels_index19 = $vowels_index + 19;\n    my $letters_index19\
    \ = $letters_index + 19;\n    my $vowels_index20 = $vowels_index + 20;\n    my\
    \ $letters_index", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my\
    \ $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($message);\n    my $vowel_count = 0;\n\
    \    my $new_vowel = \"\";\n    my $new_letter = \"\";\n    my $new_vowel_letter\
    \ = \"\";\n    my $new_letter_letter = \"\";\n    \n    while($i < $l) {\n   \
    \     $new_message .= substr($alphabet, $i, 1);\n        $i++;\n    }\n    \n\
    \    while($i < $l) {\n        $new_letter .= substr($message, $i, 1);\n     \
    \   $i++;\n    }\n    \n    while($i < $l) {\n        $new_vowel_letter .= substr($vowels,\
    \ $j, 1);\n        $j++;\n    }\n    \n    while($i < $l) {\n        $new_letter_letter\
    \ .= substr($alphabet, $k, 1);\n        $k++;\n    }\n    \n    while($i < $l)\
    \ {\n        $new_vowel .= substr($vowels, $l, 1);\n        $l++;\n    }\n   \
    \ \n    while($i < $l) {\n        $new_letter .= substr($message, $i, 1);\n  \
    \      $i++;\n    }\n    \n    while($i < $l) {\n        $new_vowel_letter .=\
    \ substr($vowels, $j, 1);\n        $j++;\n    }\n    \n    while($i < $l) {\n\
    \        $new_letter_letter .= substr($alphabet, $k, 1);\n        $k++;\n    }\n\
    \    \n    while($i < $l) {\n        $new_vowel .= substr($vowels, $l, 1);\n \
    \       $l++;\n    }\n    \n    while($i < $l) {\n        $new_message .= substr($alphabet,\
    \ $i, 1);\n        $i++;\n    }\n    \n    while($i < $l) {\n        $new_letter\
    \ .= substr($message, $i, 1);\n        $i++;\n    }\n    \n    while($i < $l)\
    \ {\n        $new_vowel_letter .= substr($vowels, $j, 1);\n        $j++;\n   \
    \ }\n    \n    while($i < $l) {\n        $new_letter_letter .= substr($alphabet,\
    \ $k, 1);\n        $k++;\n    }\n    \n    while($i < $l) {\n        $new_vowel\
    \ .= substr($vowels, $l, 1);\n        $l++;\n    }\n    \n    while($i < $l) {\n\
    \        $new_message .= substr($alphabet, $i, 1);\n        $i++;\n    }\n   \
    \ \n    while", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n\
    \    my $index = 0;\n    my $vowel_index = 0;\n    my $letter_index = 0;\n   \
    \ my $vowel_letter_index = 0;\n    my $letter;\n    my $vowel_letter;\n    foreach\
    \ $letter (split(//, $message)) {\n        $new_message .= $letter;\n        if\
    \ ($letter eq \"a\") {\n            $letter_index = $index;\n        }\n     \
    \   if ($letter eq \"e\") {\n            $letter_index = $index + 1;\n       \
    \ }\n        if ($letter eq \"i\") {\n            $letter_index = $index + 2;\n\
    \        }\n        if ($letter eq \"o\") {\n            $letter_index = $index\
    \ + 3;\n        }\n        if ($letter eq \"u\") {\n            $letter_index\
    \ = $index + 4;\n        }\n        $index += 1;\n    }\n    foreach $letter (split(//,\
    \ $new_message)) {\n        if ($letter eq \"a\") {\n            $letter_index\
    \ = $index;\n        }\n        if ($letter eq \"e\") {\n            $letter_index\
    \ = $index + 1;\n        }\n        if ($letter eq \"i\") {\n            $letter_index\
    \ = $index + 2;\n        }\n        if ($letter eq \"o\") {\n            $letter_index\
    \ = $index + 3;\n        }\n        if ($letter eq \"u\") {\n            $letter_index\
    \ = $index + 4;\n        }\n        $index += 1;\n    }\n    foreach $letter (split(//,\
    \ $new_message)) {\n        if ($letter eq \"a\") {\n            $letter_index\
    \ = $index;\n        }\n        if ($letter eq \"e\") {\n            $letter_index\
    \ = $index + 1;\n        }\n        if ($letter eq \"i\") {\n            $letter_index\
    \ = $index + 2;\n        }\n        if ($letter eq \"o\") {\n            $letter_index\
    \ = $index + 3;\n        }\n        if ($letter eq \"u\") {\n            $letter_index\
    \ = $index + 4;\n        }\n        $index += 1;\n    }\n    foreach $letter (split(//,\
    \ $new_message)) {\n        if ($letter eq \"a\") {\n            $letter_index\
    \ = $index;\n        }\n        if ($letter eq \"e\") {\n            $letter_index\
    \ = $index + 1;\n        }\n        if ($letter eq \"i\") {\n            $letter_index\
    \ = $index + 2;\n        }\n        if ($letter eq \"o\") {\n            $letter_index\
    \ = $index + 3;\n        }\n        if ($letter eq \"u\") {\n            $letter_index\
    \ = $index + 4;\n        }\n        $index += ", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $pos = index($alphabet, $letter);\n\
    \        if ($pos > -1) {\n            $new_message .= substr($alphabet, $pos,\
    \ 2);\n        }\n        else {\n            $new_message .= $letter;\n     \
    \   }\n    }\n    \n    foreach my $vowel (split //, $vowels) {\n        $new_message\
    \ =~ s/$vowel/$alphabet[$alphabet =~ tr/aeiouAEIOU/aeiouAEIOU/r]/g;\n    }\n \
    \   \n    return $new_message;\n}", "    my $message = $message;\n    my $vowels\
    \ = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\";\n    my $vowels_3 = \"\
    AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_5\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    my $message = $message;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~\
    \ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message\
    \ =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n\
    \    $message =~ s/([aeiou])/$1/g;\n    $message =~ s/([aeiou])/$1/g;\n    $",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n   \
    \ $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n    $message =~ s/[", "    \n  \
    \  my $vowels = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\";\n    my $vowels_3\
    \ = \"AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\";\n    \n\
    \    my $new_message = \"\";\n    \n    my $i = 0;\n    \n    foreach my $letter\
    \ (split //, $message) {\n        \n        if ($letter eq \"a\") {\n        \
    \    $new_message .= $letter;\n        }\n        elsif ($letter eq \"e\") {\n\
    \            $new_message .= $letter;\n        }\n        elsif ($letter eq \"\
    i\") {\n            $new_message .= $letter;\n        }\n        elsif ($letter\
    \ eq \"o\") {\n            $new_message .= $letter;\n        }\n        elsif\
    \ ($letter eq \"u\") {\n            $new_message .= $letter;\n        }\n    \
    \    elsif ($letter eq \"A\") {\n            $new_message .= $letter;\n      \
    \  }\n        elsif ($letter eq \"E\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"I\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"O\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"U\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"i\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"A\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"E\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"I\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"O\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        if ($letter eq \"a\") {\n       \
    \     $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif\
    \ ($letter eq \"e\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    u\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"A\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/AEIOU/AEIOU/];\n        } elsif ($letter eq \"E\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/];\n        } elsif ($letter eq \"\
    I\") {\n            $new_message .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/];\n\
    \        } elsif ($letter eq \"O\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/AEIOU/AEIOU/];\n        } elsif ($letter eq \"U\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/];\n        } elsif ($letter eq \"\
    a\") {\n            $new_message .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/];\n\
    \        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/AEIOU/AEIOU/];\n        } elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/];\n        } elsif ($letter eq \"\
    o\") {\n            $new_message .= $alphabet[$alphab", "    \n    # Write your\
    \ code here\n    \n    return $message;\n}", "    my $encoded = \"\";\n    my\
    \ $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowel_positions = $message =~ /($vowels)/g;\n    foreach my $letter\
    \ (split //, $message) {\n        my $position = $letters =~ tr/A-Z/a-z/;\n  \
    \      $encoded .= $letters[$position + $vowel_positions[$letter]];\n    }\n \
    \   return $encoded;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nI like your\
    \ solution, but I still don't understand why my code doesn't work. Could you please\
    \ explain why my code doesn't work?\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the answer.\n<|/ c |>\n<| a tags=perl,regex |>\nThe reason your code doesn't\
    \ work is that you are using $1 instead of $& in your substitution regex. \n<code>\n\
    $message =~ s/($vowels)/($letters[$1+$vowel_positions[$1]])/g;\n</code>\nshould\
    \ be\n<code>\n$message =~ s/($vowels)/($letters[$&+$vowel_positions[$&]])/g;\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nI still don't understand why my code doesn't\
    \ work. Could you please explain why my code doesn't work?\n<|/ c |>\n<| c |>\n\
    The reason your code doesn't work is that you are using $1 instead of $& in your\
    \ substitution regex. ", "    my $message = $message;\n    my $vowels = \"aeiou\"\
    ;\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4\
    \ = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\";\n    my\
    \ $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $output\
    \ = '';\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n\
    \    my $vowels_found = 0;\n    my $vowels_found2 = 0;\n    my $letter;\n    my\
    \ $vowel;\n    my $letter2;\n    my $vowel2;\n    my $letter3;\n    my $vowel3;\n\
    \    my $letter4;\n    my $vowel4;\n    my $letter5;\n    my $vowel5;\n    my\
    \ $letter6;\n    my $vowel6;\n    my $letter7;\n    my $vowel7;\n    my $letter8;\n\
    \    my $vowel8;\n    my $letter9;\n    my $vowel9;\n    my $letter10;\n    my\
    \ $vowel10;\n    my $letter11;\n    my $vowel11;\n    my $letter12;\n    my $vowel12;\n\
    \    my $letter13;\n    my $vowel13;\n    my $letter14;\n    my $vowel14;\n  \
    \  my $letter15;\n    my $vowel15;\n    my $letter16;\n    my $vowel16;\n    my\
    \ $letter17;\n    my $vowel17;\n    my $letter18;\n    my $vowel18;\n    my $letter19;\n\
    \    my $vowel19;\n    my $letter20;\n    my $vowel20;\n    my $letter21;\n  \
    \  my $vowel21;\n    my $letter22;\n    my $vowel22;\n    my $letter23;\n    my\
    \ $vowel23;\n    my $letter24;\n    my $vowel24;\n    my $letter25;\n    my $vowel25;\n\
    \    my $letter26;\n    my $vowel26;\n    my $letter27;\n    my $vowel27;\n  \
    \  my $letter28;\n    my $vowel28;\n    my $letter29;\n    my $vowel29;\n    my\
    \ $letter30;\n    my $vowel30;\n    my $letter31;\n    my $vowel31;\n    my $letter32;\n\
    \    my $vowel32;\n    my $letter33;\n    my $vowel33;\n    my $letter34;\n  \
    \  my $vowel34;\n    my $letter35;\n    my $vowel35;\n    my $letter36;\n    my\
    \ $vowel36;\n    my $letter37;\n    my $vowel37;\n    my $letter38;\n    my $vowel38;\n\
    \    my $letter39;\n    my $vowel39;\n    my $letter40;\n    my $vowel40;\n  \
    \  my $letter41;", "    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n\
    \    $message =~ s/([aeiou", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOU",
  "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= substr($alphabet, $index, 1);\n        }\n  \
    \      else {\n            $new_message .= $letter;\n        }\n    }\n    \n\
    \    foreach my $vowel (split(//, $vowels)) {\n        $new_message .= substr($alphabet,\
    \ index($alphabet, $vowel) + 2, 1);\n    }\n    \n    return $new_message;\n}",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $vowels_2 = \"AEIOU\";\n    my $new_message = \"\";\n    my $index =\
    \ 0;\n    my $vowels_index = 0;\n    my $vowels_2_index = 0;\n    my $new_vowels_index\
    \ = 0;\n    my $new_vowels_2_index = 0;\n    my $new_vowels_3_index = 0;\n   \
    \ my $new_vowels_4_index = 0;\n    my $new_vowels_5_index = 0;\n    my $new_vowels_6_index\
    \ = 0;\n    my $new_vowels_7_index = 0;\n    my $new_vowels_8_index = 0;\n   \
    \ my $new_vowels_9_index = 0;\n    my $new_vowels_10_index = 0;\n    my $new_vowels_11_index\
    \ = 0;\n    my $new_vowels_12_index = 0;\n    my $new_vowels_13_index = 0;\n \
    \   my $new_vowels_14_index = 0;\n    my $new_vowels_15_index = 0;\n    my $new_vowels_16_index\
    \ = 0;\n    my $new_vowels_17_index = 0;\n    my $new_vowels_18_index = 0;\n \
    \   my $new_vowels_19_index = 0;\n    my $new_vowels_20_index = 0;\n    my $new_vowels_21_index\
    \ = 0;\n    my $new_vowels_22_index = 0;\n    my $new_vowels_23_index = 0;\n \
    \   my $new_vowels_24_index = 0;\n    my $new_vowels_25_index = 0;\n    my $new_vowels_26_index\
    \ = 0;\n    my $new_vowels_27_index = 0;\n    my $new_vowels_28_index = 0;\n \
    \   my $new_vowels_29_index = 0;\n    my $new_vowels_30_index = 0;\n    my $new_vowels_31_index\
    \ = 0;\n    my $new_vowels_32_index = 0;\n    my $new_vowels_33_index = 0;\n \
    \   my $new_vowels_34_index = 0;\n    my $new_vowels_35_index = 0;\n    my $new_vowels_36_index\
    \ = 0;\n    my $new_vowels_37_index = 0;\n    my $new_vowels_38_index = 0;\n \
    \   my $new_vowels_39_index = 0;\n    my $new_vowels_40_index = 0;\n    my $new_vowels_41_index\
    \ = 0;\n    my $new_vowels_42_index = 0;\n    my $new_vowels_43_index = 0;\n \
    \   my $new_vowels_44_index = 0;\n    my $new_vowels_45_index = 0;\n    my $new_vowels_46_index\
    \ = 0;\n    my $new_vowels_47_index = 0;\n    my $new_vowels_48_index = 0;\n \
    \   my $new_vowels_49_index = 0;\n    my $new_vowels_50_index = 0;\n    ", " \
    \   my @letters = split(//, $message);\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n", "    my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $vowelsCount = length($vowels);\n    my $vowelsCount2 = length($vowels)\
    \ * 2;\n    my $vowelsCount3 = length($vowels) * 3;\n    my $vowelsCount4 = length($vowels)\
    \ * 4;\n    my $vowelsCount5 = length($vowels) * 5;\n    my $vowelsCount6 = length($vowels)\
    \ * 6;\n    my $vowelsCount7 = length($vowels) * 7;\n    my $vowelsCount8 = length($vowels)\
    \ * 8;\n    my $vowelsCount9 = length($vowels) * 9; \n    my $vowelsCount10 =\
    \ length($vowels) * 10;\n    my $vowelsCount11 = length($vowels) * 11;\n    my\
    \ $vowelsCount12 = length($vowels) * 12;\n    my $vowelsCount13 = length($vowels)\
    \ * 13;\n    my $vowelsCount14 = length($vowels) * 14;\n    my $vowelsCount15\
    \ = length($vowels) * 15;\n    my $vowelsCount16 = length($vowels) * 16;\n   \
    \ my $vowelsCount17 = length($vowels) * 17;\n    my $vowelsCount18 = length($vowels)\
    \ * 18;\n    my $vowelsCount19 = length($vowels) * 19;\n    my $vowelsCount20\
    \ = length($vowels) * 20;\n    my $vowelsCount21 = length($vowels) * 21;\n   \
    \ my $vowelsCount22 = length($vowels) * 22;\n    my $vowelsCount23 = length($vowels)\
    \ * 23;\n    my $vowelsCount24 = length($vowels) * 24;\n    my $vowelsCount25\
    \ = length($vowels) * 25;\n    my $vowelsCount26 = length($vowels) * 26;\n   \
    \ my $vowelsCount27 = length($vowels) * 27;\n    my $vowelsCount28 = length($vowels)\
    \ * 28;\n    my $vowelsCount29 = length($vowels) * 29;\n    my $vowelsCount30\
    \ = length($vowels) * 30;\n    my $vowelsCount31 = length($vowels) * 31;\n   \
    \ my $vowelsCount32 = length($vowels) * 32;\n    my $vowelsCount33 = length($vowels)\
    \ * 33;\n    my $vowelsCount34 = length($vowels) * 34;\n    my $vowelsCount35\
    \ = length($vowels) * 35;\n    my $vowel", "    \n    # Write your code here\n\
    \    \n    return $message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_count = 0;\n    my $letter_count\
    \ = 1;\n    my $letter;\n    foreach $letter (split //, $message) {\n        if\
    \ ($letter eq \"a\") {\n            $new_message .= $alphabet[$j];\n         \
    \   $j++;\n        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j\
    \ + 1];\n            $j++;\n        } elsif ($letter eq \"i\") {\n           \
    \ $new_message .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter\
    \ eq \"o\") {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n\
    \        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j\
    \ + 1];\n            $j++;\n        } elsif ($letter eq \"y\") {\n           \
    \ $new_message .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter\
    \ eq \"a\") {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n\
    \        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j\
    \ + 1];\n            $j++;\n        } elsif ($letter eq \"i\") {\n           \
    \ $new_message .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter\
    \ eq \"o\") {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n\
    \        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j\
    \ + 1];\n            $j++;\n        } elsif ($letter eq \"y\") {\n           \
    \ $new_message .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter\
    \ eq \"a\") {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n\
    \        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$j\
    \ + 1];\n            $j++;\n        } elsif ($letter eq \"i\") {\n           \
    \ $new_message .= $alphabet[$j + 1];\n            $j++;\n        } elsif ($letter\
    \ eq \"o\") {\n            $new_message .= $alphabet[$j + 1];\n            $j++;\n\
    \        } elsif ($letter eq \"u\") {", "    $message =~ tr/A-Z/a-z/;\n    $message\
    \ =~ tr/aeiou/AEIOU/;\n    return $message;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThanks for your answer. I'm new to perl and I didn't know about\
    \ tr/A-Z/a-z/;\n<|/ c |>\n<| c |>\n`tr/A-Z/a-z/` translates every uppercase letter\
    \ to lowercase and vice versa. `tr/aeiou/AEIOU/` translates every vowel to an\
    \ uppercase vowel and vice versa.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I'm new to perl and I didn't know about tr/A-Z/a-z/;\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>\nmy $string = \"This is a message\";\n$string =~ tr/aeiouAEIOU/AEIOUaeiou/;\n\
    print \"$string\\n\";\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer.\
    \ I'm new to perl and I didn't know about tr/A-Z/a-z/;\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nmy $string = \"This is a message\";\n$string =~ tr/aeiouAEIOU/AEIOUaeiou/;\n\
    print \"$string\\n\";\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks for\
    \ your answer. I'm new to perl and I didn't know about tr/A-Z/a-z/;\n<|/ c |>\n\
    <| a tags=perl,regex |>\n<code>\nmy $string = \"This is a message\";\n$string\
    \ =~ tr/aeiouAEIOU/AEIOUaeiou/;\nprint \"$string\\n\";\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer. I'm new to perl and I didn't know about\
    \ tr/A-Z/a-z/;\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\nmy $string = \"This\
    \ is a message\";\n$string =~ tr/aeiouAEIOU/AEIOUaeiou/;\nprint \"$string\\n\"\
    ;\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I'm new to perl\
    \ and I didn't know about tr/A-Z/a-z/;\n<|/ c |>\n<| a tags=perl,", "    my $message\
    \ = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $new_message = \"\";\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $vowel_position\
    \ = 0;\n    my $vowel_position2 = 0;\n    my $vowel_position3 = 0;\n    my $vowel_position4\
    \ = 0;\n    my $vowel_position5 = 0;\n    my $vowel_position6 = 0;\n    my $vowel_position7\
    \ = 0;\n    my $vowel_position8 = 0;\n    my $vowel_position9 = 0;\n    my $vowel_position10\
    \ = 0;\n    my $vowel_position11 = 0;\n    my $vowel_position12 = 0;\n    my $vowel_position13\
    \ = 0;\n    my $vowel_position14 = 0;\n    my $vowel_position15 = 0;\n    my $vowel_position16\
    \ = 0;\n    my $vowel_position17 = 0;\n    my $vowel_position18 = 0;\n    my $vowel_position19\
    \ = 0;\n    my $vowel_position20 = 0;\n    my $vowel_position21 = 0;\n    my $vowel_position22\
    \ = 0;\n    my $vowel_position23 = 0;\n    my $vowel_position24 = 0;\n    my $vowel_position25\
    \ = 0;\n    my $vowel_position26 = 0;\n    my $vowel_position27 = 0;\n    my $vowel_position28\
    \ = 0;\n    my $vowel_position29 = 0;\n    my $vowel_position30 = 0;\n    my $vowel_position31\
    \ = 0;\n    my $vowel_position32 = 0;\n    my $vowel_position33 = 0;\n    my $vowel_position34\
    \ = 0;\n    my $vowel_position35 = 0;\n    my $vowel_position36 = 0;\n    my $vowel_position37\
    \ = 0;\n    my $vowel_position38 = 0;\n    my $vowel_position39 = 0;\n    my $vowel_position40\
    \ = 0;\n    my $vowel_position41 = 0;\n    my $vowel_position42 = 0;\n    my $vowel_position43\
    \ = 0;\n    my $vowel_position44 = 0;\n    my $vowel_position45 = 0;\n    my $vowel_position46\
    \ = 0;\n    my $vowel_position47 = 0;\n    my $vowel_position48 = 0;\n    my $vowel_position49\
    \ = 0;\n    my $vowel_position50 = 0;\n    my $vowel_position51 = 0;\n    my $vowel_position52\
    \ = 0;\n    my $vowel_position53 = 0;\n    my $vowel_position54 = 0;\n    my $vowel_position55\
    \ = 0;\n    my $vowel_position56 = 0;\n    my $vowel_position57 = 0;\n    my $vowel_position58\
    \ = 0;\n    my $vowel_position59 = 0;\n    my $", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split(//, $message)) {\n        my $letter_pos = index($alphabet,\
    \ $letter);\n        my $vowel_pos = index($vowels, $letter);\n        \n    \
    \    if ($letter_pos > $vowel_pos) {\n            $new_message .= substr($alphabet,\
    \ $letter_pos + 1, 1);\n        } else {\n            $new_message .= substr($alphabet,\
    \ $vowel_pos + 1, 1);\n        }\n    }\n    \n    return $new_message;\n}", " \
    \   my $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $result = \"\";\n    my $index = 0;\n    my $lastLetter = \"\";\n  \
    \  my $lastVowel = \"\";\n    my $lastLetterIndex = 0;\n    my $lastVowelIndex\
    \ = 0;\n    foreach my $letter (split //, $message) {\n        my $letterIndex\
    \ = $letters->index($letter);\n        if ($letterIndex != $lastLetterIndex) {\n\
    \            $lastLetter = $letter;\n            $lastLetterIndex = $letterIndex;\n\
    \        }\n        if ($letterIndex != $lastVowelIndex) {\n            $lastVowel\
    \ = $letter;\n            $lastVowelIndex = $letterIndex;\n        }\n    }\n\
    \    foreach my $letter (split //, $message) {\n        my $letterIndex = $letters->index($letter);\n\
    \        if ($letterIndex != $lastLetterIndex) {\n            $result .= $letters->[$letterIndex];\n\
    \        }\n        if ($letterIndex != $lastVowelIndex) {\n            $result\
    \ .= $vowels->[$letterIndex];\n        }\n    }\n    return $result;\n}", "  \
    \  my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $vowel_position = 0;\n    my $letter_position = 0;\n    my $letter;\n\
    \    my $vowel;\n    foreach $letter (split //, $message) {\n        $letter_position++;\n\
    \        if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n            $vowel_position++;\n\
    \        }\n        if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n   \
    \         $new_message .= $alphabet[$j];\n            $j++;\n        }\n     \
    \   if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n            $new_message\
    \ .= $alphabet[$k];\n            $k++;\n        }\n        if ($letter_position\
    \ == 2 && $letter =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        }\n        if ($letter_position == 2 && $letter =~\
    \ /[aeiou]/) {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n        if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n   \
    \         $new_message .= $alphabet[$j];\n            $j++;\n        }\n     \
    \   if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n            $new_message\
    \ .= $alphabet[$k];\n            $k++;\n        }\n        if ($letter_position\
    \ == 2 && $letter =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        }\n        if ($letter_position == 2 && $letter =~\
    \ /[aeiou]/) {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n        if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n   \
    \         $new_message .= $alphabet[$j];\n            $j++;\n        }\n     \
    \   if ($letter_position == 2 && $letter =~ /[aeiou]/) {\n            $new_message\
    \ .= $alphabet[$k];\n            $k++;\n        }\n        if ($letter_position\
    \ == 2 && $letter =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        }\n        if ($letter_position == 2 && $letter =~\
    \ /[aeiou]/) {\n            $new_message .= $alphabet[$k];\n", "    $message =~\
    \ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/AEIOUAEIOU/;\n\
    \    return $message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n  \
    \  my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $vowel_count\
    \ = 0;\n    my $vowel_position = 0;\n    my $vowel_letter;\n    my $vowel_position_count;\n\
    \    my $vowel_letter_index;\n    my $vowel_letter_index2;\n    my $vowel_letter_index3;\n\
    \    my $vowel_letter_index4;\n    my $vowel_letter_index5;\n    my $vowel_letter_index6;\n\
    \    my $vowel_letter_index7;\n    my $vowel_letter_index8;\n    my $vowel_letter_index9;\n\
    \    my $vowel_letter_index10;\n    my $vowel_letter_index11;\n    my $vowel_letter_index12;\n\
    \    my $vowel_letter_index13;\n    my $vowel_letter_index14;\n    my $vowel_letter_index15;\n\
    \    my $vowel_letter_index16;\n    my $vowel_letter_index17;\n    my $vowel_letter_index18;\n\
    \    my $vowel_letter_index19;\n    my $vowel_letter_index20;\n    my $vowel_letter_index21;\n\
    \    my $vowel_letter_index22;\n    my $vowel_letter_index23;\n    my $vowel_letter_index24;\n\
    \    my $vowel_letter_index25;\n    my $vowel_letter_index26;\n    my $vowel_letter_index27;\n\
    \    my $vowel_letter_index28;\n    my $vowel_letter_index29;\n    my $vowel_letter_index30;\n\
    \    my $vowel_letter_index31;\n    my $vowel_letter_index32;\n    my $vowel_letter_index33;\n\
    \    my $vowel_letter_index34;\n    my $vowel_letter_index35;\n    my $vowel_letter_index36;\n\
    \    my $vowel_letter_index37;\n    my $vowel_letter_index38;\n    my $vowel_letter_index39;\n\
    \    my $vowel_letter_index40;\n    "]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

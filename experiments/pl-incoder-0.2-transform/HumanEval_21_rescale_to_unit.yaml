name: HumanEval_21_rescale_to_unit
language: pl
prompt: "# Given list of numbers (of at least two elements), apply a linear transform\
  \ to that list,\n# such that the smallest number will become 0 and the largest will\
  \ become 1\n# >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n# [0.0, 0.25, 0.5,\
  \ 0.75, 1.0]\nsub rescale_to_unit {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rescale_to_unit;\n\
  \        if(eq_deeply($candidate->([2.0, 49.9]),[0.0, 1.0])) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100.0,\
  \ 49.9]),[1.0, 0.0])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5,\
  \ 0.75, 1.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->([2.0, 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5,\
  \ 0.75])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my\
    \ $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        if ($number < $min)\
    \ {\n            $min = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $number - $min;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = $range / $numbers[0];\n    my $result =\
    \ [];\n    foreach my $number (@$numbers) {\n        $result[$number] = $number\
    \ * $scale;\n    }\n    return $result;\n}", "    my $min = min($numbers);\n \
    \   my $max = max($numbers);\n    my $scale = ($max - $min) / 0.0;\n    my @new_numbers\
    \ = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[] = $min +\
    \ $scale * $number;\n    }\n    return @new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
    \ @$rescaled_numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / 1.0;\n    my $result = [];\n    foreach my $num\
    \ (@$numbers) {\n        $result[$num] = $num * $scale;\n    }\n    return $result;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled;\n\
    \    my $i;\n    for ($i = 0; $i < @$numbers; $i++) {\n        my $number = $numbers[$i];\n\
    \        $rescaled[$i] = $number / ($max - $min);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my\
    \ $max_number = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max_number) {\n            $max_number = $number;\n        }\n \
    \       if ($number < $min_number) {\n            $min_number = $number;\n   \
    \     }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number =\
    \ ($number - $min_number) / ($max_number - $min_number);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / length($numbers);\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers->[$number]\
    \ = $min + $scale * $number;\n    }\n    return $new_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $num (@$numbers)\
    \ {\n        if ($num < $min) {\n            $min = $num;\n        }\n       \
    \ if ($num > $max) {\n            $max = $num;\n        }\n    }\n    foreach\
    \ my $num (@$numbers) {\n        $num = $num - $min;\n        $num = $num / $max\
    \ - $min;\n        push(@rescaled, $num);\n    }\n    return @rescaled;\n}", " \
    \   my @rescaled = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min);\n    my $offset = $min - $scale;\n    foreach\
    \ my $num (@$numbers) {\n        push(@rescaled, $num + $offset);\n    }\n   \
    \ return @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my @rescaled;\n    foreach my $num (@$numbers) {\n        my $scale = ($num\
    \ - $min) / ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n\
    \    }\n    return @rescaled;\n}", "    my $min = min @$numbers;\n    my $max\
    \ = max @$numbers;\n    my @rescaled;\n    my $scale = ($max - $min) / @$numbers;\n\
    \    foreach my $number (@$numbers) {\n        push @rescaled, $min + ($number\
    \ - $min) * $scale;\n    }\n    return @rescaled;\n}", "    my $min = min @$numbers;\n\
    \    my $max = max @$numbers;\n    my @rescaled = map { $_ / $max - $min } @$numbers;\n\
    \    return @rescaled;\n}", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
    \    my @rescaled;\n    foreach my $number (@$numbers) {\n        push @rescaled,\
    \ $number / $max - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        my $new_number\
    \ = $min + $scale * $number;\n        push(@rescaled_numbers, $new_number);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max -\
    \ $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        push @rescaled_numbers,\
    \ $min + $scale * $number;\n    }\n    return @rescaled_numbers;\n}", "    my\
    \ @rescaled_numbers;\n    my $smallest_number = $numbers[0];\n    my $largest_number\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $smallest_number\
    \ = $number if $number < $smallest_number;\n        $largest_number = $number\
    \ if $number > $largest_number;\n        push(@rescaled_numbers, $smallest_number\
    \ + ($number - $smallest_number) / ($largest_number - $smallest_number));\n  \
    \  }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers = ();\n   \
    \ my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}", "   \
    \ my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $number - $min;\n    }\n    return @$numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = $range / $min;\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $scale\
    \ * $number;\n    }\n    return $new_numbers;\n}", "    my @rescaled = ();\n \
    \   my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = $number - $min;\n        $new_number\
    \ /= ($max - $min);\n        $rescaled[$#rescaled + 1] = $new_number;\n      \
    \  $min = $number;\n        $max = $number;\n    }\n    return @rescaled;\n}",
  "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
    \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n          \
    \  $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $number/$max-$min;\n    }\n    return @rescaled;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ - ($min - $max) / @$numbers;\n    }\n    return @rescaled;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max - $min)\
    \ / 1.0;\n    my @rescaled = ();\n    foreach my $number (@$numbers) {\n     \
    \   $rescaled[$number] = $min + ($number - $min) * $scale;\n    }\n    return\
    \ \\@rescaled;\n}", "    my @rescaled;\n    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled[$number] = $min + $scale * $number;\n\
    \    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = abs($max - $min);\n    my $scale = $range\
    \ / $min;\n    my $new_numbers = map { $_ * $scale } @$numbers;\n    return @$new_numbers;\n\
    }", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        }\n        if ($number > $max) {\n            $max\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min\
    \ @$numbers;\n    my $max = max @$numbers;\n    my @rescaled = map { $_ / $max\
    \ - $min } @$numbers;\n    return @rescaled;\n}", "    my @rescaled;\n    my $min\
    \ = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        }\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        my $scale = ($number - $min) /\
    \ ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max =\
    \ $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min)\
    \ {\n            $min = $number;\n        }\n        if ($number > $max) {\n \
    \           $max = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min\
    \ @$numbers;\n    my $max = max @$numbers;\n    my $range = 1 - $min / $max;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers->[$number]\
    \ = $range * $number + $min;\n    }\n    return @$new_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max - $min)\
    \ / 1.0;\n    my @rescaled = ();\n    foreach my $num (@$numbers) {\n        $rescaled[$num]\
    \ = $num * $scale;\n    }\n    return \\@rescaled;\n}", "    my @rescaled;\n \
    \   my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n        $rescaled[$#rescaled + 1] = $number / $max - $min;\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min;\n    }\n\
    \    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $scale = ($max - $min) / $numbers[0];\n    my @rescaled\
    \ = map { $_ * $scale } @$numbers;\n    return @rescaled;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n    }\n    my $scale = ($max - $min) / @$numbers;\n    foreach\
    \ my $number (@$numbers) {\n        push @rescaled, $min + ($number - $min) *\
    \ $scale;\n    }\n    return @rescaled;\n}", "    my @rescaled;\n    my $min =\
    \ $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        } elsif\
    \ ($number > $max) {\n            $max = $number;\n        }\n    }\n    foreach\
    \ my $number (@$numbers) {\n        my $scale = ($number - $min) / ($max - $min);\n\
    \        push(@rescaled, $min + $scale * ($max - $min));\n    }\n    return @rescaled;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
    \        $max = $number if $number > $max;\n        push(@rescaled, $number *\
    \ ($max - $min) / $number);\n    }\n    return @rescaled;\n}", "    my @rescaled\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $num (@$numbers) {\n        if ($num < $min) {\n            $min = $num;\n \
    \       }\n        if ($num > $max) {\n            $max = $num;\n        }\n \
    \   }\n    foreach my $num (@$numbers) {\n        my $scale = ($num - $min) /\
    \ ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n  \
    \  }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($number - $min)\
    \ / ($max - $min);\n    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my\
    \ $max_number = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min_number) {\n            $min_number = $number;\n        }\n \
    \       if ($number > $max_number) {\n            $max_number = $number;\n   \
    \     }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min_number + ($number - $min_number) * ($max_number - $min_number) / ($max_number\
    \ - $min_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min\
    \ @$numbers;\n    my $max = max @$numbers;\n    my @rescaled;\n    my $scale =\
    \ ($max - $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        push\
    \ @rescaled, $min + ($number - $min) * $scale;\n    }\n    return @rescaled;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers\
    \ = map { $_ * $scale } @$numbers;\n    return $new_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $scale = $range / $numbers[0];\n    my $new_numbers = map { $_ * $scale\
    \ } @$numbers;\n    return $new_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $new_min\
    \ = min($numbers);\n    my $new_max = max($numbers);\n    my $new_range = abs($new_max\
    \ - $new_min);\n    my $scale = $range / $new_range;\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers[] = $new_min + ($number\
    \ - $min) * $scale;\n    }\n    return @$new_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $result = [];\n    foreach my $num (@$numbers)\
    \ {\n        $result[$num] = $num * $scale;\n    }\n    return @$result;\n}",
  "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
    \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n          \
    \  $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $rescaled = ($number - $min) / ($max - $min);\n        push(@rescaled, $rescaled);\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $scale = ($number - $min) / ($max - $min);\n     \
    \   push(@rescaled, $scale * $max);\n    }\n    return @rescaled;\n}", "    my\
    \ @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n  \
    \  foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
    \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ - ($min * $_ / $max);\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / scalar(@$numbers);\n\
    \    foreach my $num (@$numbers) {\n        push(@rescaled, $num * $scale);\n\
    \    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = $max - $min;\n    my $new_min = min ($min\
    \ / $range, $min * $range);\n    my $new_max = max ($max / $range, $max * $range);\n\
    \    my $new_numbers = map { $_ / $range } @$numbers;\n    return ($new_numbers,\
    \ $new_min, $new_max);\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / 0.0;\n    my @rescaled = ();\n    foreach my\
    \ $number (@$numbers) {\n        $rescaled[$number] = $min + $scale * $number;\n\
    \    }\n    return \\@rescaled;\n}", "    my @rescaled_numbers;\n    my $min =\
    \ $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       if ($number < $min) {\n            $min = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $number\
    \ - $min;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
    \ @$numbers if @$numbers == 1;\n    return @$rescaled_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n    my $new_range\
    \ = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n    my $new_numbers\
    \ = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[] = $new_min\
    \ + ($number - $min) * $scale;\n    }\n    return $new_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled = $number\
    \ - $min;\n        $rescaled = $rescaled / ($max - $min);\n        push(@rescaled,\
    \ $rescaled);\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n\
    \    return $new_numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers->[$number]\
    \ = $number * $scale;\n    }\n    return $new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / scalar(@$numbers);\n    for (@$numbers) {\n        push @rescaled_numbers,\
    \ $min + ($_ * $scale);\n    }\n    return @rescaled_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n    my $new_range\
    \ = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n    my $new_numbers\
    \ = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number] =\
    \ $new_min + ($number - $min) * $scale;\n    }\n    return @$new_numbers;\n}",
  "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $scale = $number - $min;\n        $scale = $scale / $max - $min;\n        $rescaled[$number]\
    \ = $scale;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n  \
    \  my $smallest_number = $numbers[0];\n    my $largest_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $smallest_number = $number if $number\
    \ < $smallest_number;\n        $largest_number = $number if $number > $largest_number;\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $smallest_number + ($number - $smallest_number) / ($largest_number - $smallest_number);\n\
    \    }\n    return @$numbers;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n\
    \    my $new_max = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n\
    \    my $scale = $new_range / $range;\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers[$number] = $new_min + ($number\
    \ * $scale);\n    }\n    return $new_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my @rescaled;\n    foreach my $num (@$numbers)\
    \ {\n        my $scale = ($num - $min) / ($max - $min);\n        push(@rescaled,\
    \ $min + $scale * ($max - $min));\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min_value = $numbers[0];\n    my $max_value = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max_value) {\n \
    \           $max_value = $number;\n        }\n        if ($number < $min_value)\
    \ {\n            $min_value = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = ($number - $min_value) / ($max_value\
    \ - $min_value);\n        push(@rescaled_numbers, $new_number);\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \      $rescaled[$#rescaled + 1] = $number - $min;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $scale = ($max - $min) / scalar(@$numbers);\n    for\
    \ (@$numbers) {\n        push @rescaled_numbers, $min + ($_ * $scale);\n    }\n\
    \    return @rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        } elsif ($number <\
    \ $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number >\
    \ $max_number) {\n            $max_number = $number;\n        }\n        if ($number\
    \ < $min_number) {\n            $min_number = $number;\n        }\n    }\n   \
    \ foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min_number\
    \ + ($number - $min_number) * ($max_number - $min_number) / ($max_number - $min_number);\n\
    \    }\n    return @$numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $min > $number ? $min : $number;\n        $max = $max < $number ? $max : $number;\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / $numbers[0];\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + $scale * $number;\n    }\n    return @rescaled_numbers;\n}", "    my\
    \ @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        if ($number < $min) {\n            $min =\
    \ $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
    \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n \
    \   return @rescaled;\n}", "    my @rescaled = ();\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / scalar(@$numbers);\n\
    \    foreach my $number (@$numbers) {\n        push(@rescaled, $min + $scale *\
    \ $number);\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min);\n    my @rescaled\
    \ = ();\n    foreach my $number (@$numbers) {\n        $rescaled[$number] = $number\
    \ / $scale;\n    }\n    return @rescaled;\n}", "    my $min = min @$numbers;\n\
    \    my $max = max @$numbers;\n    my $scale = 1.0 * ($max - $min);\n    my @rescaled\
    \ = map { $_ / $scale } @$numbers;\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        } elsif ($number < $min) {\n            $min = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
    \ @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($max - $min) * ($number\
    \ - $min) / ($max - $min);\n    }\n    return @rescaled_numbers;\n}", "    my\
    \ $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers[] = $number * $scale;\n\
    \    }\n    return $new_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        my\
    \ $new_number = $number - $min;\n        $new_number /= $max - $min;\n       \
    \ $rescaled[$#rescaled + 1] = $new_number;\n        $min = $number;\n        $max\
    \ = $number;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = $number - $min;\n        $new_number\
    \ = $new_number / $max - $min;\n        $min = $min;\n        $max = $max;\n \
    \       push @rescaled_numbers, $new_number;\n    }\n    return @rescaled_numbers;\n\
    }", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
    \        $max = $number if $number > $max;\n    }\n    my $scale = ($max - $min)\
    \ / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n}", " \
    \   my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0\
    \ * ($max - $min);\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers->[$number] = $number * $scale;\n    }\n    return $new_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = ($max - $min) / length($numbers);\n    my $result = [];\n    foreach my $num\
    \ (@$numbers) {\n        $result[$num] = $num * $scale;\n    }\n    return $result;\n\
    }", "    my @rescaled = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $num (@$numbers)\
    \ {\n        $rescaled[$_] = $num + $min * $scale;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / 0.0;\n    foreach my $number (@$numbers) {\n\
    \        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        } elsif ($number <\
    \ $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $scale = ($number - $min) / ($max - $min);\n        push(@rescaled, $scale *\
    \ $max);\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n  \
    \  my $max = max($numbers);\n    my $range = $max - $min;\n    my $new_min = min($numbers);\n\
    \    my $new_max = max($numbers);\n    my $new_range = $new_max - $new_min;\n\
    \    my $scale = $range / $new_range;\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers[] = $new_min + $scale * ($number\
    \ - $min);\n    }\n    return @$new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $smallest_number = $numbers[0];\n    my $largest_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $largest_number)\
    \ {\n            $largest_number = $number;\n        }\n        if ($number <\
    \ $smallest_number) {\n            $smallest_number = $number;\n        }\n  \
    \  }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $smallest_number + ($number - $smallest_number) / ($largest_number - $smallest_number);\n\
    \    }\n    return @$rescaled_numbers;\n}", "    my $min = min($numbers);\n  \
    \  my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $result = ();\n    foreach my $number (@$numbers)\
    \ {\n        $result .= $number * $scale;\n    }\n    return $result;\n}", " \
    \   my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = @$numbers\
    \ - 1;\n    my $scale = ($max - $min) / $range;\n    my @result;\n    foreach\
    \ my $number (@$numbers) {\n        $number -= $min;\n        $number /= $scale;\n\
    \        push @result, $number;\n    }\n    return @result;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($max - $min) * $number / $max;\n    }\n    return @rescaled_numbers;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        }\n        if ($number > $max) {\n            $max\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $new_number = $number - $min;\n        $new_number = $new_number / $max -\
    \ $min;\n        $new_number = $new_number * $max + $min;\n        push @rescaled,\
    \ $new_number;\n    }\n    return @rescaled;\n}", "    my @rescaled = ();\n  \
    \  my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $num (@$numbers)\
    \ {\n        if ($num < $min) {\n            $min = $num;\n        }\n       \
    \ if ($num > $max) {\n            $max = $num;\n        }\n        push(@rescaled,\
    \ $num / $max - $min);\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = $range\
    \ / $numbers[0];\n    my $result = [];\n    foreach my $num (@$numbers) {\n  \
    \      $result[$num] = $num * $scale;\n    }\n    return $result;\n}", "    my\
    \ @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n  \
    \  foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
    \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
    \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n \
    \   return @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / $numbers[0];\n    my @new_numbers;\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers[$number] = $min + $scale * $number;\n\
    \    }\n    return \\@new_numbers;\n}", "    my $min = min @$numbers;\n    my\
    \ $max = max @$numbers;\n    my $range = 1 - $min + $max;\n    my @rescaled;\n\
    \    foreach my $number (@$numbers) {\n        push @rescaled, $number * $range\
    \ / $min;\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n \
    \   my $max = max($numbers);\n    my $scale = ($max - $min);\n    my @rescaled;\n\
    \    foreach my $num (@$numbers) {\n        $rescaled[$_] = $num / $scale;\n \
    \   }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max =\
    \ max($numbers);\n    my $scale = 1 / ($max - $min);\n    my @rescaled = map {$_\
    \ * $scale} @$numbers;\n    return @rescaled;\n}", "    my @rescaled_numbers =\
    \ ();\n    my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min_number) {\n\
    \            $min_number = $number;\n        }\n        if ($number > $max_number)\
    \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = ($number - $min_number) / ($max_number\
    \ - $min_number);\n        $new_number = $new_number * ($max_number - $min_number)\
    \ + $min_number;\n        push(@rescaled_numbers, $new_number);\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \      $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min;\n    }\n  \
    \  return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        }\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = $number - $min;\n        $new_number\
    \ /= ($max - $min);\n        push(@rescaled_numbers, $new_number);\n    }\n  \
    \  return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        }\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min;\n    }\n\
    \    return @rescaled_numbers;\n}", "    my $min = min @$numbers;\n    my $max\
    \ = max @$numbers;\n    my @rescaled = map { $_ / $max - $min } @$numbers;\n \
    \   return @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my @rescaled = map { $_ * $scale } @$numbers;\n    return @rescaled;\n}", " \
    \   my @rescaled_numbers = ();\n    my $min_value = $numbers[0];\n    my $max_value\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number <\
    \ $min_value) {\n            $min_value = $number;\n        }\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n        }\n    }\n    foreach\
    \ my $number (@$numbers) {\n        my $new_number = $number - $min_value;\n \
    \       $new_number /= ($max_value - $min_value);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min\
    \ @$numbers;\n    my $max = max @$numbers;\n    my $scale = ($max - $min) / @$numbers;\n\
    \    my @result;\n    for my $number (@$numbers) {\n        $number *= $scale;\n\
    \        $number += $min;\n        push @result, $number;\n    }\n    return @result;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled\
    \ = ();\n    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $num\
    \ (@$numbers) {\n        $rescaled[$_] = $num + $min * $scale;\n    }\n    return\
    \ @rescaled;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n   \
    \ my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min =\
    \ $min > $number ? $min : $number;\n        $max = $max < $number ? $max : $number;\n\
    \    }\n    my $scale = ($max - $min);\n    foreach my $number (@$numbers) {\n\
    \        $rescaled_numbers[$number] = $number - $min;\n        $rescaled_numbers[$number]\
    \ = $rescaled_numbers[$number] / $scale;\n    }\n    return @$rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = 1.0 / $range;\n    my @rescaled;\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled[$_] = $number * $scale;\n    }\n\
    \    return @rescaled;\n}", "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \      $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min;\n    }\n  \
    \  return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($number - $min)\
    \ / ($max - $min);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min\
    \ @$numbers;\n    my $max = max @$numbers;\n    my @rescaled;\n    my $scale =\
    \ ($max - $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $number * $scale + $min;\n    }\n    return @rescaled;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ / ($max - $min);\n    }\n    return @rescaled;\n}", "    my @rescaled;\n   \
    \ my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min = $number if $number < $min;\n        $max = $number if $number\
    \ > $max;\n        $rescaled[$#rescaled+1] = $number - $min;\n    }\n    return\
    \ @rescaled;\n}", "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / @$numbers;\n  \
    \  foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min\
    \ + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $new_number = $number\
    \ - $min;\n        $new_number /= ($max - $min);\n        $new_number *= $max;\n\
    \        $new_number += $min;\n        push @rescaled_numbers, $new_number;\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       if ($number < $min) {\n            $min = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        my $rescaled = $number - $min;\n\
    \        $rescaled = $rescaled / ($max - $min);\n        push @rescaled_numbers,\
    \ $rescaled;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min_value = $numbers[0];\n    my $max_value = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        my $new_value = $number - $min_value;\n\
    \        $min_value = $new_value < 0 ? $new_value : $min_value;\n        $max_value\
    \ = $new_value > 0 ? $new_value : $max_value;\n        push(@rescaled_numbers,\
    \ $new_value);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min @$numbers;\n\
    \    my $max = max @$numbers;\n    my $scale = ($max - $min) / @$numbers;\n  \
    \  my @rescaled;\n    foreach my $number (@$numbers) {\n        push @rescaled,\
    \ $number * $scale;\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my @rescaled;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $number / ($max - $min);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled, $new_number);\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n    my $min_number\
    \ = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \        }\n        if ($number < $min_number) {\n            $min_number = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min_number + ($number - $min_number) / ($max_number - $min_number);\n   \
    \ }\n    return @rescaled_numbers;\n}", "    my $min = min @$numbers;\n    my\
    \ $max = max @$numbers;\n    my $range = 1 - $min + $max;\n    my @rescaled;\n\
    \    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number / $range;\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = $number - $min;\n        $new_number\
    \ /= ($max - $min);\n        push @rescaled, $new_number;\n    }\n    return @rescaled;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $scale\
    \ = 1.0 * ($max - $min);\n    my @rescaled = map { $_ / $scale } @$numbers;\n\
    \    return @rescaled;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = $number - $min;\n        $new_number\
    \ /= ($max - $min);\n        $new_number *= $max;\n        $new_number += $min;\n\
    \        push @rescaled_numbers, $new_number;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled_numbers;\n\
    \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + ($number - $min) * $scale;\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min\
    \ = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        my $new_number = $number - $min;\n        $new_number = $new_number\
    \ / $max - $min;\n        push(@rescaled, $new_number);\n        $min = $number;\n\
    \        $max = $number;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
    \ @$numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max\
    \ = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n    my $scale\
    \ = $new_range / $range;\n    my $new_numbers = map { ($new_min + ($_ * $scale))\
    \ } @$numbers;\n    return $new_numbers;\n}", "    my @rescaled_numbers;\n   \
    \ my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / $numbers[0];\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}", "   \
    \ my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        if ($number < $min) {\n            $min =\
    \ $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
    \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n \
    \   return @rescaled;\n}", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
    \    my @rescaled = map { $_ / $max - $min } @$numbers;\n    return @rescaled;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range\
    \ = $max - $min;\n    my $scale = $range / $max;\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $min\
    \ + ($number - $min) * $scale;\n    }\n    return @$new_numbers;\n}", "    my\
    \ $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled = ();\n\
    \    foreach my $num (@$numbers) {\n        $num = $num - $min;\n        $num\
    \ = $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return @rescaled;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
    \ = $new_min + ($number - $min) * $scale;\n    }\n    return $new_numbers;\n}",
  "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled;\n\
    \    foreach my $number (@$numbers) {\n        $rescaled[$number] = $number /\
    \ $max - $min;\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my @rescaled;\n    foreach my $num (@$numbers)\
    \ {\n        $num = $num * $scale;\n        push(@rescaled, $num);\n    }\n  \
    \  return @rescaled;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        }\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min;\n    }\n\
    \    return @rescaled_numbers;\n}", "    my $min = min @$numbers;\n    my $max\
    \ = max @$numbers;\n    my $scale = ($max - $min) / $max;\n    my @rescaled;\n\
    \    foreach my $num (@$numbers) {\n        $num *= $scale;\n        $num += $min;\n\
    \        push @rescaled, $num;\n    }\n    return @rescaled;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers->[$number] = $number * $scale;\n\
    \    }\n    return $new_numbers;\n}", "    my @rescaled_numbers;\n    my $min_number\
    \ = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min_number) {\n            $min_number = $number;\n\
    \        }\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number\
    \ = ($number - $min_number) / ($max_number - $min_number);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $min_number = $number if $number\
    \ < $min_number;\n        $max_number = $number if $number > $max_number;\n  \
    \      $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
    \  }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers = ();\n   \
    \ my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min = $number if $number < $min;\n        $max = $number if $number\
    \ > $max;\n        $rescaled_numbers[] = $number / ($max - $min);\n    }\n   \
    \ return @rescaled_numbers;\n}", "    my @rescaled_numbers = ();\n    my $min_number\
    \ = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \        }\n        if ($number < $min_number) {\n            $min_number = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min_number + ($number - $min_number) / ($max_number - $min_number);\n   \
    \ }\n    return @$numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \      $rescaled[$#rescaled + 1] = $number - $min;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $scale = ($number - $min) / ($max - $min);\n        push(@rescaled, $scale *\
    \ $max);\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n  \
    \  my $max = max($numbers);\n    my $scale = ($max - $min) / length($numbers);\n\
    \    my @rescaled = ();\n    foreach my $num (@$numbers) {\n        $rescaled[$_]\
    \ = $num * $scale;\n    }\n    return \\@rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = 1.0/$max - $min;\n    return map\
    \ { $_ * $scale } @$numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        } elsif ($number <\
    \ $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers+1]\
    \ = $rescaled_number;\n    }\n    return @rescaled_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max - $min)\
    \ / $numbers[0];\n    my @rescaled = map { $_ * $scale } @$numbers;\n    return\
    \ @rescaled;\n}", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
    \    my $range = 1 - $min + $max;\n    my $scale = $range / $max;\n    my $result\
    \ = ();\n    foreach my $number (@$numbers) {\n        $result .= $number * $scale;\n\
    \    }\n    return $result;\n}", "    my @rescaled_numbers = ();\n    my $min\
    \ = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min = $min > $number ? $min : $number;\n        $max = $max < $number\
    \ ? $max : $number;\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled\
    \ = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers, $rescaled);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers = ();\n \
    \   my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = $number - $min;\n        $new_number\
    \ /= ($max - $min);\n        $min = $new_number if $new_number < $min;\n     \
    \   $max = $new_number if $new_number > $max;\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my @rescaled = ();\n    my $scale = ($max -\
    \ $min) / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
    \ = $min + $scale * $number;\n    }\n    return @rescaled;\n}", "    my @rescaled\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        $min = $number if $number < $min;\n        $max\
    \ = $number if $number > $max;\n        $rescaled[$#rescaled + 1] = $number -\
    \ $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n \
    \   my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n        $rescaled_numbers[] = $number / ($max - $min);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n    my $min = @$numbers\
    \ < 2 ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ? 1 : $numbers[-1];\n  \
    \  my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $min + $scale * $number;\n    }\n    return @$rescaled;\n\
    }", "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max =\
    \ $numbers[0];\n    foreach my $number (@$numbers) {\n        my $new_number =\
    \ $number - $min;\n        $new_number /= ($max - $min);\n        $min = $number;\n\
    \        $max = $new_number;\n        push(@rescaled_numbers, $new_number);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n   \
    \ my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale =\
    \ 1.0 / $range;\n    my @rescaled_numbers;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $scale * $number;\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min = min @$numbers;\n\
    \    my $max = max @$numbers;\n    my $scale = ($max - $min) / @$numbers;\n  \
    \  foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min\
    \ + ($number - $min) * $scale;\n    }\n    return @$rescaled_numbers;\n}", " \
    \   my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = 1.0 / $range;\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers->[$number] = $scale * $number;\n\
    \    }\n    return $new_numbers;\n}", "    my $min = min @$numbers;\n    my $max\
    \ = max @$numbers;\n    my @rescaled;\n    foreach my $number (@$numbers) {\n\
    \        push @rescaled, $number / $max - $min;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my\
    \ $max_number = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min_number) {\n            $min_number = $number;\n        }\n \
    \       if ($number > $max_number) {\n            $max_number = $number;\n   \
    \     }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min_number + ($number - $min_number) * ($max_number - $min_number) / ($max_number\
    \ - $min_number);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n        push @rescaled, $min + ($number - $min) / ($max\
    \ - $min) * ($max - $min);\n    }\n    return @rescaled;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $rescaled = $number -\
    \ $min;\n        $rescaled /= ($max - $min);\n        push @rescaled, $rescaled;\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        } elsif ($number <\
    \ $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $smallest_number = $numbers[0];\n    my\
    \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n     \
    \   if ($number > $largest_number) {\n            $largest_number = $number;\n\
    \        }\n        if ($number < $smallest_number) {\n            $smallest_number\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $smallest_number + ($number - $smallest_number)\
    \ / ($largest_number - $smallest_number);\n    }\n    return @$numbers;\n}", " \
    \   my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        }\n        if ($number > $max) {\n            $max\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $number - $min;\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $rescaled_numbers[$number]\
    \ / $max - $min;\n    }\n    return @$numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        if ($number < $min_number) {\n           \
    \ $min_number = $number;\n        }\n        if ($number > $max_number) {\n  \
    \          $max_number = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min_number + ($number - $min_number)\
    \ * ($max_number - $min_number) / ($max_number - $min_number);\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled_numbers = ();\n    my $min_number\
    \ = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min_number = $number if $number < $min_number;\n        $max_number\
    \ = $number if $number > $max_number;\n        $rescaled_numbers[$#rescaled_numbers\
    \ + 1] = $number - $min_number;\n    }\n    return @rescaled_numbers;\n}", " \
    \   my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        } elsif ($number < $min) {\n            $min =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $new_number = $number - $min;\n        $new_number /= ($max - $min);\n     \
    \   $new_number *= $max;\n        $new_number += $min;\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n        push(@rescaled, $number/$max-$min);\n    }\n   \
    \ return @rescaled;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $scale = ($number - $min) / ($max - $min);\n     \
    \   push(@rescaled, $scale * $max);\n    }\n    return @rescaled;\n}", "    my\
    \ @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $new_number = $number - $min;\n        $new_number /= ($max - $min);\n  \
    \      $new_number *= $max;\n        $new_number += $min;\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $num (@$numbers)\
    \ {\n        if ($num < $min) {\n            $min = $num;\n        }\n       \
    \ if ($num > $max) {\n            $max = $num;\n        }\n    }\n    foreach\
    \ my $num (@$numbers) {\n        my $scale = ($num - $min) / ($max - $min);\n\
    \        push(@rescaled, $min + $scale * ($max - $min));\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        }\n        if ($number > $max) {\n            $max\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $min + ($number - $min) * ($max - $min) / ($max\
    \ - $min);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = @$numbers < 2 ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ?\
    \ 1 : $numbers[-1];\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n        $rescaled_numbers[$number] = $rescaled_numbers[$number]\
    \ / $max - $min;\n    }\n    return @$numbers ? @$rescaled_numbers : undef;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = 1 -\
    \ $min + $max;\n    my $scale = $range / $max - $min;\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $range\
    \ * $number + $min;\n    }\n    return $new_numbers;\n}", "    my @rescaled =\
    \ ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        } elsif ($number < $min) {\n            $min = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number - $min)\
    \ / ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n\
    \    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = abs($max - $min);\n    my $scale = $range\
    \ / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n    return\
    \ @$new_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n  \
    \  my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        } elsif ($number < $min) {\n\
    \            $min = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n}",
  "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $scale = $number - $min;\n        $rescaled[$_] = $scale / $max - $min;\n  \
    \  }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max =\
    \ max($numbers);\n    my $range = abs($max - $min);\n    my $scale = $range /\
    \ $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n    return\
    \ $new_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min = $min >\
    \ $number ? $min : $number;\n        $max = $max < $number ? $max : $number;\n\
    \    }\n    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
    \ {\n        push @rescaled, $min + ($number - $min) * $scale;\n    }\n    return\
    \ @rescaled;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n   \
    \ my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min =\
    \ $min > $number ? $min : $number;\n        $max = $max < $number ? $max : $number;\n\
    \    }\n    my $scale = ($max - $min);\n    foreach my $number (@$numbers) {\n\
    \        $rescaled_numbers[$number] = $number - $min;\n        $rescaled_numbers[$number]\
    \ = $rescaled_numbers[$number] / $scale;\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $num (@$numbers)\
    \ {\n        $rescaled[$_] = $num + $min * $scale;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
    \        $new_number /= ($max - $min);\n        push(@rescaled, $new_number);\n\
    \        $min = $number;\n        $max = $number;\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n  \
    \  return @$rescaled_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $num (@$numbers) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n        if ($num > $max) {\n\
    \            $max = $num;\n        }\n    }\n    foreach my $num (@$numbers) {\n\
    \        $num = $num - $min;\n        $num = $num / $max - $min;\n        push(@rescaled,\
    \ $num);\n    }\n    return @rescaled;\n}", "    my @rescaled = ();\n    my $min\
    \ = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        }\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
    \        $new_number = $new_number / ($max - $min);\n        $new_number = $new_number\
    \ * ($max - $min) + $min;\n        push(@rescaled, $new_number);\n    }\n    return\
    \ @rescaled;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number <\
    \ $min) {\n            $min = $number;\n        }\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $number - ($min - $max) / @$numbers;\n    }\n   \
    \ return @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers->[$number]\
    \ = $number * $scale;\n    }\n    return $new_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $scale = $number - $min;\n\
    \        $scale /= ($max - $min);\n        push(@rescaled, $min + $scale * ($max\
    \ - $min));\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $min;\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers->[$number] = $number * $scale;\n    }\n    return $new_numbers;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_114_minSubArraySum
language: pl
prompt: "# Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n# of nums.\n# Example\n# >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n#\
  \ 1\n# >>> minSubArraySum([-1, -2, -3])\n# -6\nsub minSubArraySum {\n    my($nums)\
  \ = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&minSubArraySum;\n\
  \        if(eq_deeply($candidate->([2, 3, 4, 1, 2, 4]),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -2,\
  \ -3]),-6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->([-1, -2, -3, 2, -10]),-14)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-9999999999999999]),-9999999999999999))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0,\
  \ 10, 20, 1000000]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([-1, -2, -3, 10, -5]),-6)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100,\
  \ -1, -2, -3, 10, -5]),-6)) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->([10, 11, 13, 8, 3, 4]),3)) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100,\
  \ -33, 32, -1, 0, -2]),-33)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([-10]),-10)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([7]),7))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ -1]),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $min = -1;\n    my $sum = 0;\n    foreach my $num (@$nums) {\n\
    \        $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}", "    my $min = undef;\n    my $sum =\
    \ 0;\n    foreach my $num (@$nums) {\n        $sum += $num;\n        if ($min\
    \ == undef) {\n            $min = $sum;\n        } elsif ($sum < $min) {\n   \
    \         $min = $sum;\n        }\n    }\n    return $min;\n}", "    my $min =\
    \ -1;\n    my $sum = 0;\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        if ($sum < $min) {\n            $min = $sum;\n        }\n    }\n    return\
    \ $min;\n}", "    my $min = -1;\n    my $sum = 0;\n    my $i = 0;\n    my $j =\
    \ 0;\n    my $k = 0;\n    while($i < @$nums) {\n        $sum += $nums->[$i];\n\
    \        if($sum < $min) {\n            $min = $sum;\n        }\n        $i++;\n\
    \    }\n    while($j < @$nums) {\n        $sum += $nums->[$j];\n        if($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        $j++;\n    }\n    while($k\
    \ < @$nums) {\n        $sum += $nums->[$k];\n        if($sum < $min) {\n     \
    \       $min = $sum;\n        }\n        $k++;\n    }\n    return $min;\n}", " \
    \   my $min = undef;\n    my $sum = 0;\n    foreach my $num (@$nums) {\n     \
    \   $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n    \
    \    }\n    }\n    return $min;\n}", "    my $min = -1;\n    my $sum = 0;\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    while($i < @$nums) {\n    \
    \    $sum += $nums->[$i];\n        if($sum < $min) {\n            $min = $sum;\n\
    \        }\n        $i++;\n    }\n    while($j < @$nums) {\n        $sum += $nums->[$j];\n\
    \        if($sum < $min) {\n            $min = $sum;\n        }\n        $j++;\n\
    \    }\n    while($k < @$nums) {\n        $sum += $nums->[$k];\n        if($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        $k++;\n    }\n    return\
    \ $min;\n}", "    my $min = undef;\n    my $sum = 0;\n    foreach my $num (@$nums)\
    \ {\n        $sum += $num;\n        if ($min eq undef) {\n            $min = $sum;\n\
    \        }\n        elsif ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}", "    my $sum = 0;\n    my $min = 0;\n    foreach\
    \ my $num (@$nums) {\n        $sum += $num;\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n    }\n    return $min;\n}", "    my $min =\
    \ -1;\n    my $sum = 0;\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        if ($sum < $min) {\n            $min = $sum;\n        }\n    }\n    return\
    \ $min;\n}", "    my $min = -1;\n    my $sum = 0;\n    foreach my $num (@$nums)\
    \ {\n        $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}", "    my $min = undef;\n    my $sum =\
    \ 0;\n    foreach my $num (@$nums) {\n        $sum += $num;\n        if ($min\
    \ == undef) {\n            $min = $sum;\n        } elsif ($sum < $min) {\n   \
    \         $min = $sum;\n        }\n    }\n    return $min;\n}", "    my $min =\
    \ undef;\n    my $sum = 0;\n    foreach my $num (@$nums) {\n        $sum += $num;\n\
    \        if ($min == undef) {\n            $min = $sum;\n        } elsif ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n    }\n    return $min;\n}",
  "    my $min = undef;\n    my $sum = 0;\n    foreach my $num (@$nums) {\n      \
    \  $sum += $num;\n        if ($min == undef) {\n            $min = $sum;\n   \
    \     }\n        elsif ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}", "    my $min = undef;\n    my $sum = 0;\n    my\
    \ $i = 0;\n    while($i < @$nums) {\n        $sum += $nums->[$i];\n        if($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        $i++;\n    }\n    return\
    \ $min;\n}", "    my $min = -1;\n    my $sum = 0;\n    foreach my $num (@$nums)\
    \ {\n        $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}", "    my $min = 0;\n    my $sum = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = @$nums;\n    my $num;\n\
    \    my $minSum;\n    my $minSumIndex;\n    my $minSumValue;\n    my $minSumSum;\n\
    \    my $minSumSumIndex;\n    my $minSumSumValue;\n    my $minSumSumSum;\n   \
    \ my $minSumSumSumIndex;\n    my $minSumSumSumValue;\n    my $minSumSumSumSum;\n\
    \    my $minSumSumSumSumIndex;\n    my $minSumSumSumSumValue;\n    my $minSumSumSumSumSum;\n\
    \    my $minSumSumSumSumSumIndex;\n    my $minSumSumSumSumSumValue;\n    my $minSumSumSumSumSumSum;\n\
    \    my $minSumSumSumSumSumSumIndex;\n    my $minSumSumSumSumSumSumValue;\n  \
    \  my $minSumSumSumSumSumSum;\n    my $minSumSumSumSumSumSumIndex;\n    my $minSumSumSumSumSumSumValue;\n\
    \    my $minSumSumSumSumSumSumSum;\n    my $minSumSumSumSumSumSumSumIndex;\n \
    \   my $minSumSumSumSumSumSumSumValue;\n    my $minSumSumSumSumSumSumSum;\n  \
    \  my $minSumSumSumSumSumSumSumIndex;\n    my $minSumSumSumSumSumSumSumValue;\n\
    \    my $minSumSumSumSumSumSumSum;\n    my $minSumSumSumSumSumSumSumIndex;\n \
    \   my $minSumSumSumSumSumSumSumValue;\n    my $minSumSumSumSumSumSumSumSum;\n\
    \    my $minSumSumSumSumSumSumSumSumIndex;\n    my $minSumSumSumSumSumSumSumSumValue;\n\
    \    my $minSumSumSumSumSumSumSumSum;\n    my $minSumSumSumSumSumSumSumSumIndex;\n\
    \    my $minSumSumSumSumSumSumSumSumValue;\n    my $minSumSumSumSumSumSumSumSum;\n\
    \    my $minSumSumSumSumSumSumSumSumIndex;\n    my $minSumSumSumSumSumSumSumSumValue;\n\
    \    my $minSumSumSumSumSumSumSumSum;\n    my $minSumSumSumSumSumSumSumSumSumIndex;\n\
    \    my $minSumSumSumSumSumSumSumSumSumValue;\n    my $minSumSumSumSumSumSumSumSumSum;\n\
    \    my $minSumSumSumSumSumSum", "    my $min = -1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$nums) {\n        $sum += $num;\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n    }\n    return $min;\n}", "    my $min =\
    \ -1;\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $n = @$nums;\n    while($i < $n) {\n        $sum += $nums->[$i];\n        if($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        $i++;\n    }\n    while($j\
    \ < $n) {\n        $sum += $nums->[$j];\n        if($sum < $min) {\n         \
    \   $min = $sum;\n        }\n        $j++;\n    }\n    while($k < $n) {\n    \
    \    $sum += $nums->[$k];\n        if($sum < $min) {\n            $min = $sum;\n\
    \        }\n        $k++;\n    }\n    return $min;\n}", "    my $min = -1;\n \
    \   my $sum = 0;\n    foreach my $num (@$nums) {\n        $sum += $num;\n    \
    \    if ($sum < $min) {\n            $min = $sum;\n        }\n    }\n    return\
    \ $min;\n}", "    my $min = -1;\n    my $sum = 0;\n    foreach my $num (@$nums)\
    \ {\n        $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

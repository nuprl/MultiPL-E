name: HumanEval_20_find_closest_elements
language: pl
prompt: "# From a supplied list of numbers (of length at least two) select and return\
  \ two that are the closest to each\n# other and return them in order (smaller number,\
  \ larger number).\n# >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n\
  # [2.0, 2.2]\n# >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n# [2.0,\
  \ 2.0]\nsub find_closest_elements {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_closest_elements;\n\
  \        if(eq_deeply($candidate->([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
  \ 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9])) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0,\
  \ 2.2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
  \ 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0])) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n        if(eq_deeply($candidate->([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
  \ 3.1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @closest_elements;\n    my $smallest_number = $numbers[0];\n\
    \    my $largest_number = $numbers[0];\n    my $smallest_diff = 0;\n    my $largest_diff\
    \ = 0;\n    foreach my $number (@$numbers) {\n        my $diff = $number - $smallest_number;\n\
    \        if ($diff < $smallest_diff) {\n            $smallest_diff = $diff;\n\
    \            $smallest_number = $number;\n        }\n        elsif ($diff > $largest_diff)\
    \ {\n            $largest_diff = $diff;\n            $largest_number = $number;\n\
    \        }\n    }\n    push(@closest_elements, $smallest_number);\n    push(@closest_elements,\
    \ $largest_number);\n    return @closest_elements;\n}", "    my @closest_elements;\n\
    \    my $smallest_number = $numbers[0];\n    my $largest_number = $numbers[0];\n\
    \    my $smallest_difference = abs($smallest_number);\n    my $largest_difference\
    \ = abs($largest_number);\n    foreach my $number (@$numbers) {\n        my $difference\
    \ = abs($number);\n        if ($difference < $smallest_difference) {\n       \
    \     $smallest_difference = $difference;\n            $smallest_number = $number;\n\
    \        }\n        if ($difference > $largest_difference) {\n            $largest_difference\
    \ = $difference;\n            $largest_number = $number;\n        }\n    }\n \
    \   push(@closest_elements, $smallest_number);\n    push(@closest_elements, $largest_number);\n\
    \    return @closest_elements;\n}", "    my @closest_elements;\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    my $smallest_index\
    \ = 0;\n    my $largest_index = 0;\n    my $smallest_diff;\n    my $largest_diff;\n\
    \    my $i;", "    my @closest_numbers = ();\n    my $smallest_number = $numbers[0];\n\
    \    my $largest_number = $numbers[0];\n    my $smallest_difference = undef;\n\
    \    my $largest_difference = undef;\n    my $smallest_index = undef;\n    my\
    \ $largest_index = undef;\n    my $smallest_difference_index = undef;\n    my\
    \ $largest_difference_index = undef;\n    my $smallest_index_difference = undef;\n\
    \    my $largest_index_difference = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n    my $largest_index_difference_index = undef;\n    my $smallest_index_difference_index\
    \ = undef;\n", "    my @closest_elements;\n    my $smallest_number = $numbers[0];\n\
    \    my $largest_number = $numbers[0];\n    my $smallest_index = 0;\n    my $largest_index\
    \ = 0;\n    foreach my $number (@$numbers) {\n        if ($number < $smallest_number)\
    \ {\n            $smallest_number = $number;\n            $smallest_index = $_;\n\
    \        } elsif ($number > $largest_number) {\n            $largest_number =\
    \ $number;\n            $largest_index = $_;\n        }\n    }\n    push @closest_elements,\
    \ $numbers[$smallest_index];\n    push @closest_elements, $numbers[$largest_index];\n\
    \    return @closest_elements;\n}", "    my @closest_elements;\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    my $smallest_difference\
    \ = abs($smallest_number);\n    my $largest_difference = abs($largest_number);\n\
    \    my $smallest_index = 0;\n    my $largest_index = 0;\n    my $smallest_difference_index\
    \ = 0;\n    my $largest_difference_index = 0;\n    my $smallest_element = $numbers[0];\n\
    \    my $largest_element = $numbers[0];\n    my $smallest_element_index = 0;\n\
    \    my $largest_element_index = 0;\n    my $smallest_element_difference = abs($smallest_number);\n\
    \    my $largest_element_difference = abs($largest_number);\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_difference_index = 0;\n    my $smallest_element_index\
    \ = 0;\n    my $largest_element_index = 0;\n    my $smallest_element_difference_index\
    \ = 0;\n    my $largest_element_", "    my($smallest, $largest);\n    my $smallest_diff;\n\
    \    my $largest_index;\n    my $largest;\n    my $smallest_index;\n    foreach\
    \ my $number (@$numbers) {\n        if ($number == $smallest) {\n            $smallest_diff\
    \ = $number - $smallest;\n            $smallest_index = $numbers;\n        }\n\
    \        elsif ($number == $largest) {\n            $largest_index = $numbers;\n\
    \        }\n        elsif ($number - $smallest < $smallest_diff) {\n         \
    \   $smallest = $number;\n            $smallest_diff = $number - $smallest;\n\
    \            $smallest_index = $numbers;\n        }\n        elsif ($number -\
    \ $smallest > $smallest_diff) {\n            $largest = $number;\n           \
    \ $largest_index = $numbers;\n        }\n    }\n    return ($smallest_index, $largest_index);\n\
    }", "    my @closest_elements;\n    my $smallest_number = $numbers[0];\n    my\
    \ $largest_number = $numbers[0];\n    my $smallest_index = 0;\n    my $largest_index\
    \ = 0;\n    foreach my $number (@$numbers) {\n        if ($number < $smallest_number)\
    \ {\n            $smallest_number = $number;\n            $smallest_index = $_;\n\
    \        } elsif ($number > $largest_number) {\n            $largest_number =\
    \ $number;\n            $largest_index = $_;\n        }\n    }\n    push @closest_elements,\
    \ $smallest_number;\n    push @closest_elements, $largest_number;\n    return\
    \ @closest_elements;\n}", "    my @closest_elements;\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    my $smallest_difference\
    \ = abs($smallest_number);\n    my $largest_difference = abs($largest_number);\n\
    \    foreach my $number (@$numbers) {\n        my $difference = abs($number -\
    \ $smallest_number);\n        if ($difference < $smallest_difference) {\n    \
    \        $smallest_difference = $difference;\n            $smallest_number = $number;\n\
    \        }\n        elsif ($difference > $largest_difference) {\n            $largest_difference\
    \ = $difference;\n            $largest_number = $number;\n        }\n    }\n \
    \   push @closest_elements, $smallest_number;\n    push @closest_elements, $largest_number;\n\
    \    return @closest_elements;\n}", "    my @closest_elements;\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $smallest_number) {\n            $smallest_number\
    \ = $number;\n        }\n        if ($number > $largest_number) {\n          \
    \  $largest_number = $number;\n        }\n    }\n    push @closest_elements, $smallest_number;\n\
    \    push @closest_elements, $largest_number;\n    return @closest_elements;\n\
    }", "    my(@closest_numbers);\n    my($smallest_number);\n    my($largest_number);\n\
    \    my($smallest_diff);\n    my($largest_diff);\n    my($smallest_index);\n \
    \   my($largest_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n    my($largest_diff_index);\n    my($smallest_diff_index);\n\
    \    my($largest_diff_index);\n    my($smallest_diff_index);\n    my($largest_diff_index);\n\
    \    my($smallest_diff_index);\n", "    my $min = $numbers[0];\n    my $max =\
    \ $numbers[0];\n    my $min_index = 0;\n    my $max_index = 0;\n    foreach my\
    \ $number (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \            $min_index = $_;\n        } elsif ($number > $max) {\n          \
    \  $max = $number;\n            $max_index = $_;\n        }\n    }\n    return\
    \ ($min_index, $max_index);\n}", "    my @closest_elements;\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    my $smallest_index\
    \ = 0;\n    my $largest_index = 0;\n    foreach my $number (@$numbers) {\n   \
    \     if ($number < $smallest_number) {\n            $smallest_number = $number;\n\
    \            $smallest_index = $_;\n        } elsif ($number > $largest_number)\
    \ {\n            $largest_number = $number;\n            $largest_index = $_;\n\
    \        }\n    }\n    push @closest_elements, $smallest_number;\n    push @closest_elements,\
    \ $largest_number;\n    return @closest_elements;\n}", "    my @closest_elements;\n\
    \    my $smallest_number = $numbers[0];\n    my $largest_number = $numbers[0];\n\
    \    my $smallest_index = 0;\n    my $largest_index = 0;\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $smallest_number) {\n            $smallest_number\
    \ = $number;\n            $smallest_index = $_;\n        } elsif ($number > $largest_number)\
    \ {\n            $largest_number = $number;\n            $largest_index = $_;\n\
    \        }\n    }\n    push @closest_elements, $smallest_number;\n    push @closest_elements,\
    \ $largest_number;\n    return @closest_elements;\n}", "    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n\
    \    my $min_diff = undef;\n    my $min_diff = undef;\n    my $min_diff = undef;\n",
  "    my @closest_elements;\n    my $min_diff;\n    my $min_diff_index;\n    my $min_diff_value;\n\
    \    my $max_diff;\n    my $max_diff_index;\n    my $max_diff_value;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $diff;\n    my $diff_index;\n    my $diff_value;\n\
    \    my $diff_value2;\n    my $diff_value3;\n    my $diff_value4;\n    my $diff_value5;\n\
    \    my $diff_value6;\n    my $diff_value7;\n    my $diff_value8;\n    my $diff_value9;\n\
    \    my $diff_value10;\n    my $diff_value11;\n    my $diff_value12;\n    my $diff_value13;\n\
    \    my $diff_value14;\n    my $diff_value15;\n    my $diff_value16;\n    my $diff_value17;\n\
    \    my $diff_value18;\n    my $diff_value19;\n    my $diff_value20;\n    my $diff_value21;\n\
    \    my $diff_value22;\n    my $diff_value23;\n    my $diff_value24;\n    my $diff_value25;\n\
    \    my $diff_value26;\n    my $diff_value27;\n    my $diff_value28;\n    my $diff_value29;\n\
    \    my $diff_value30;\n    my $diff_value31;\n    my $diff_value32;\n    my $diff_value33;\n\
    \    my $diff_value34;\n    my $diff_value35;\n    my $diff_value36;\n    my $diff_value37;\n\
    \    my $diff_value38;\n    my $diff_value39;\n    my $diff_value40;\n    my $diff_value41;\n\
    \    my $diff_value42;\n    my $diff_value43;\n    my $diff_value44;\n    my $diff_value45;\n\
    \    my $diff_value46;\n    my $diff_value47;\n    my $diff_value48;\n    my $diff_value49;\n\
    \    my $diff_value50;\n    my $diff_value51;\n    my $diff_value52;\n    my $diff_value53;\n\
    \    my $diff_value54;\n    my $diff_value55;\n    my $diff_value56;\n    my $diff_value57;\n\
    \    my $diff_value58;\n    my $diff_value59;\n    my $diff_value60;\n    my $diff_value61;\n\
    \    my $diff_value62;\n    my $diff_value63;\n    my $diff_value64;\n    my $diff_value65;\n\
    \    my $diff_value66;\n", "    my @closest_elements;\n    my $min_diff;\n   \
    \ my $min_diff_index;\n    my $i;\n    my $j;\n    my $diff;\n    my $diff_index;\n\
    \    my $min_element;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;\n    my $min_element_diff;\n\
    \    my $min_element_diff_index;\n    my $min_element_index;", "    my $min =\
    \ $numbers[0];\n    my $max = $numbers[0];\n    my $index = 0;\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    my $min_diff = 0;\n    my $max_diff = 0;\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n            $min_index = $index;\n        }\n        if\
    \ ($number > $max) {\n            $max = $number;\n            $max_index = $index;\n\
    \        }\n        $index++;\n    }\n    foreach my $number (@$numbers) {\n \
    \       if ($number == $min) {\n            return [$min, $max];\n        }\n\
    \        if ($number == $max) {\n            return [$min, $max];\n        }\n\
    \        my $diff = $number - $min;\n        if ($diff < $min_diff) {\n      \
    \      $min_diff = $diff;\n            $min_index = $index;\n        }\n     \
    \   if ($diff > $max_diff) {\n            $max_diff = $diff;\n            $max_index\
    \ = $index;\n        }\n        $index++;\n    }\n    return [$numbers[$min_index],\
    \ $numbers[$max_index]];\n}", "    my($min, $max);\n    my $min_index = 0;\n \
    \   my $max_index = 0;\n    my $min_diff = 0;\n    my $max_diff = 0;\n    foreach\
    \ my $num (@$numbers) {\n        my $diff = $num - $min;\n        if ($diff <\
    \ $min_diff) {\n            $min_index = $min_index + 1;\n            $min_diff\
    \ = $diff;\n        }\n        if ($diff > $max_diff) {\n            $max_index\
    \ = $max_index + 1;\n            $max_diff = $diff;\n        }\n        $min =\
    \ $num;\n    }\n    return @$numbers[$min_index..$max_index];\n}", "    my($smallest,\
    \ $largest);\n    foreach my $number (@$numbers) {\n        if ($smallest == undef)\
    \ {\n            $smallest = $number;\n            $largest = $number;\n     \
    \   }\n        elsif ($number < $smallest) {\n            $smallest = $number;\n\
    \        }\n        elsif ($number > $largest) {\n            $largest = $number;\n\
    \        }\n    }\n    return ($smallest, $largest);\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

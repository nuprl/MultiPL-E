name: HumanEval_10_make_palindrome
language: pl
prompt: "# Find the shortest palindrome that begins with a supplied string.\n# Algorithm\
  \ idea is simple:\n# - Find the longest postfix of supplied string that is a palindrome.\n\
  # - Append to the end of the string reverse of a string prefix that comes before\
  \ the palindromic suffix.\n# >>> make_palindrome(\"\")\n# \"\"\n# >>> make_palindrome(\"\
  cat\")\n# \"catac\"\n# >>> make_palindrome(\"cata\")\n# \"catac\"\nsub make_palindrome\
  \ {\n    my($string) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&make_palindrome;\n\
  \        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"x\"),\"x\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  xyz\"),\"xyzyx\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"xyx\"),\"xyx\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"jerry\"),\"jerryrrej\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my($palindrome);\n    my($prefix_length);\n    my($suffix_length);\n\
    \    my($suffix_reverse);\n    my($suffix_prefix);\n    my($suffix_suffix);\n\
    \    my($suffix_prefix_length);\n    my($suffix_suffix_length);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n\
    \    my($suffix_suffix_reverse);\n    my($suffix_prefix_reverse);\n    my($suffix_suffix_reverse);\n\
    \    my($suffix_prefix_reverse);\n    my($", "    my($palindrome);\n    my($longest_postfix_palindrome);\n\
    \    my($longest_postfix_palindrome_length);\n    my($longest_postfix_palindrome_suffix);\n\
    \    my($longest_postfix_palindrome_suffix_length);\n    my($longest_postfix_palindrome_prefix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix);\n    my($longest_postfix_palindrome_prefix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix);\n    my($longest_postfix_palindrome_prefix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix);\n    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix);\n   \
    \ my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_", "    my($longest);\n    my($longestLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefixLength);\n", "    my($longest);\n    my($longestLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromePalindrome);\n\
    \    my($longestPalindromePalindromeLength);\n    my($longestPalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromeLength);\n    my($longestPalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromeLength);\n    my($longestPalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n \
    \   my($longestPalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalin", "    my($longest);\n\
    \    my($longestLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromePalindrome);\n    my($longestPalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalin", "    my($longest,\
    \ $longestLength, $longestPrefix, $longestSuffix) =\n        map {\n         \
    \   my $length = $_;\n            my $prefix = substr($string, 0, $length);\n\
    \            my $suffix = substr($string, $length);\n            my $palindrome\
    \ = $prefix . reverse($suffix);\n            $palindrome if $palindrome eq $suffix;\n\
    \        } reverse split //, $string;\n    $longestLength = $longestLength ||\
    \ length($longest);\n    $longestPrefix = $longestPrefix || substr($longest, 0,\
    \ $longestLength);\n    $longestSuffix = $longestSuffix || substr($longest, $longestLength);\n\
    \    $longest = $longestPrefix . $longestSuffix;\n    return $longest;\n}", " \
    \   my($longest);\n    my($longestLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromePalindrome);\n    my($longestPalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalin", "    my($longest);\n\
    \    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($palindrome);\n\
    \    my($i);", "    my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n\
    \    my($longestLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromeSuffixReverse);\n\
    \    my($longestPalindromePrefixReverse);\n    my($longestPalindromePrefixReverseLength);\n\
    \    my($longestPalindromeSuffixReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n\
    \    my($longestPalindromeSuffixReverseReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n\
    \    my($longestPalindromeSuffixReverseReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n\
    \    my($longestPalindromeSuffixReverseReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n\
    \    my($longestPalindromeSuffixReverseReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n\
    \    my($longestPalindromeSuffixReverseReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n\
    \    my($longestPalindromeSuffixReverseReverseLength);\n    my($longestPalindromeSuffixReverseReverse);\n\
    \    my($longestPalindromePrefixReverseReverse);\n    my($longestPalindromePrefixReverseReverseLength);\n",
  "    my($longest);\n    my($longestLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromePalindrome);\n    my($longestPalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalin", "    my($longest);\n\
    \    my($prefix);\n    my($suffix);\n    my($reverse);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my($longest);\n    my($longest);\n    my($longest);\n    my($longest);\n  \
    \  my(", "    my($longest);\n    my($longestLength);\n    my($longestPalindrome);\n\
    \    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindromePrefixSuffix);\n    my($longestPalindromePrefixSuffixLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindromePrefixSuffix);\n    my($longestPalindromePrefixSuffixLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromePrefixSuffix);\n\
    \    my($longestPalindromePrefixSuffixLength);\n    my($longestPalindrome);\n\
    \    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindromePrefixSuffix);\n    my($longestPalindromePrefixSuffixLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromePrefixSuffix);\n\
    \    my($longestPalindromePrefixSuffixLength);\n    my($longestPalindrome);\n\
    \    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestP", "    my($longest);\n  \
    \  my($longestLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromePalindrome);\n    my($longestPalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalin", "    my($longest);\n\
    \    my($longestLength);\n    my($longestPrefix);\n    my($longestSuffix);\n \
    \   my($longestPrefixLength);\n    my($longestSuffixLength);\n    my($longestPalindrome);\n\
    \    my($longestPalindromeLength);\n    my($longestPalindromePrefix);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePalindrome);\n    my($longestPalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePrefix);\n    my($longestPalindromePalindromeSuffix);\n\
    \    my($longestPalindromePalindromePrefixLength);\n    my($longestPalindromePalindromeSuffixLength);\n\
    \    my($longestPalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePrefix);\n    my($longestPalindromePalindromePalindromeSuffix);\n\
    \    my($longestPalindromePalindromePalindromePrefixLength);\n    my($longestPalindromePalindromePalindromeSuffixLength);\n\
    \    my($longestPalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePrefix);\n    my($longestPalindromePalindromePalindromePalindromeSuffix);\n\
    \    my($longestPalindromePalindromePalindromePalindromePrefixLength);\n    my($longestPalindromePalindromePalindromePalindromeSuffixLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindrome);\n    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longest", "    my($longest);\n    my($prefix);\n    my($suffix);\n  \
    \  my($reverse);\n    my($palindrome);", "    return $string if $string eq \"\"\
    ;\n    my($longest, $longestLength, $longestPrefix, $longestSuffix) = ('', 0,\
    \ \"\", \"\");\n    my($longestPalindrome, $longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $", "    my($longest);\n\
    \    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($palindrome);\n\
    \    my($result);", "    my($palindrome);\n    my($suffix_length) = length($string);\n\
    \    my($prefix_length) = length($string) - $suffix_length;\n    my($suffix_reverse);\n\
    \    my($prefix_reverse);", "    my($longest);\n    my($longestLength);\n    my($longestPalindrome);\n\
    \    my($longestPalindromeLength);\n    my($longestPalindromePalindrome);\n  \
    \  my($longestPalindromePalindromeLength);\n    my($longestPalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromeLength);\n    my($longestPalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromeLength);\n    my($longestPalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromeLength);\n \
    \   my($longestPalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindrome);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromePalindromeLength);\n\
    \    my($longestPalindromePalindromePalindromePalindromePalin", "    my($longest);\n\
    \    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($palindrome);"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_45_triangle_area
language: pl
prompt: "# Given length of a side and high return area for a triangle.\n# >>> triangle_area(5,\
  \ 3)\n# 7.5\nsub triangle_area {\n    my($a, $h) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triangle_area;\n\
  \        if(eq_deeply($candidate->(5, 3),7.5)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(2, 2),2.0)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 8),40.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $area = $h * $h * ($h - 1) / 2;\n    return $area;\n}", "  \
    \  my $area = $h * $h * ($h + 1);\n    return $area;\n}", "    $h *= $h;\n   \
    \ $a *= $h;\n    $a += $h * (sqrt(3)/2);\n    return $a;\n}", "    my $s = $a\
    \ * $h / 2;\n    my $t = sqrt($a * $a + $s * $s);\n    return $t * ($t + $h) /\
    \ 2;\n}", "    $h *= $h;\n    $a *= $h;\n    $a += $h;\n    return $a;\n}", " \
    \   return $a * $h / 2;\n}", "    my $b = $h / 2;\n    my $c = $a * $h;\n    my\
    \ $d = $a * $b;\n    my $e = $b * $b;\n    my $f = $a * $c;\n    my $g = $b *\
    \ $c;\n    my $h = $a * $d;\n    my $i = $b * $d;\n    my $j = $c * $d;\n    my\
    \ $k = $a * $e;\n    my $l = $b * $e;\n    my $m = $c * $e;\n    my $n = $a *\
    \ $f;\n    my $o = $b * $f;\n    my $p = $c * $f;\n    my $q = $a * $g;\n    my\
    \ $r = $b * $g;\n    my $s = $c * $g;\n    my $t = $a * $h;\n    my $u = $b *\
    \ $h;\n    my $v = $c * $h;\n    my $w = $a * $i;\n    my $x = $b * $i;\n    my\
    \ $y = $c * $i;\n    my $z = $a * $j;\n    my $A = $b * $j;\n    my $B = $c *\
    \ $j;\n    my $C = $a * $k;\n    my $D = $b * $k;\n    my $E = $c * $k;\n    my\
    \ $F = $a * $l;\n    my $G = $b * $l;\n    my $H = $c * $l;\n    my $I = $a *\
    \ $m;\n    my $J = $b * $m;\n    my $K = $c * $m;\n    my $L = $a * $n;\n    my\
    \ $M = $b * $n;\n    my $N = $c * $n;\n    my $O = $a * $o;\n    my $P = $b *\
    \ $o;\n    my $Q = $c * $o;\n    my $R = $a * $p;\n    my $S = $b * $p;\n    my\
    \ $T = $c * $p;\n    my $U = $a * $q;\n    my $V = $b * $q;\n    my $W = $c *\
    \ $q;\n    my $X = $a * $r;\n    my $Y = $b * $r;\n    my $Z = $c * $r;\n    my\
    \ $a = $A + $B + $C + $D + $E + $F + $G + $H + $I + $J + $K + $L + $M + $N", " \
    \   my $area = $h * ($h + $a) * ($h + $a + $h);\n    return $area;\n}", "    my\
    \ $s = $h / $a;\n    return $s * $s;\n}", "    $h *= $h;\n    $a *= $h;\n    return\
    \ $a / $h;\n}", "    my $area = $h * ($h + $a) * ($a + $h - 1);\n    return $area;\n\
    }", "    $h *= $h;\n    $a *= $h;\n    $a *= $h;\n    return $a;\n}", "    $h\
    \ *= $h;\n    $a *= $h;\n    return $a / $h;\n}", "    return $a * $h / 2;\n}",
  "    my $s = $h / $a;\n    return $s * $s;\n}", "    $h *= $h;\n    $a *= $h;\n\
    \    $a += $h * (sqrt(3)/2);\n    return $a;\n}", "    $h *= $h;\n    $a *= $h;\n\
    \    return $a * $h;\n}", "    $h = $h / 2;\n    $a = $a / 2;\n    my $s = $a\
    \ * $a;\n    my $t = $s * $h;\n    my $u = $s * $h;\n    my $v = $t * $h;\n  \
    \  return $u + $v;\n}", "    my $s = $h / $a;\n    return $s * $s;\n}", "    $h\
    \ *= $h;\n    $a *= $h;\n    $a += $h * (sqrt(3)/2);\n    return $a;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

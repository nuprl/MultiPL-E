name: HumanEval_134_check_if_last_char_is_a_letter
language: pl
prompt: "# Create a function that returns True if the last character\n# of a given\
  \ string is an alphabetical character and is not\n# a part of a word, and False\
  \ otherwise.\n# Note: \"word\" is a group of characters separated by space.\n# Examples:\n\
  # >>> check_if_last_char_is_a_letter(\"apple pie\")\n# \"\"\n# >>> check_if_last_char_is_a_letter(\"\
  apple pi e\")\n# 1\n# >>> check_if_last_char_is_a_letter(\"apple pi e \")\n# \"\"\
  \n# >>> check_if_last_char_is_a_letter(\"\")\n# \"\"\nsub check_if_last_char_is_a_letter\
  \ {\n    my($txt) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_if_last_char_is_a_letter;\n\
  \        if(eq_deeply($candidate->(\"apple\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"apple pi e\"),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  eeeee\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"A\"),1)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"Pumpkin pie \"),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Pumpkin pie 1\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"eeeee e \"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  apple pie\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"apple pi e \"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~\
    \ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt\
    \ =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if\
    \ $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt\
    \ if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ ", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    return $txt if $txt =~ /^[a-z]+$/i;\n  \
    \  return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ ", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_a_letter) = !($last_char =~\
    \ /\\w/);\n    return $is_a_letter;\n}", "    my($last_char) = substr($txt, -1,\
    \ 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}",
  "    my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}",
  "    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, -1,\
    \ 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_a_letter) =\
    \ !$last_char =~ /\\w/;\n    return $is_a_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_a_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_a_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_a_letter) = !$last_char =~ /\\w/;\n    return $is_a_letter;\n}", " \
    \   my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) =\
    \ !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w$/;\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_a_letter) = !($last_char =~ /\\w/);\n    return $is_a_letter;\n}",
  "    my $last_char = $txt->[-1];\n    return $last_char =~ /^[a-zA-Z]$/;\n}", " \
    \   my $last_char = substr($txt, length($txt) - 1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}",
  "    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ ", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w$/;\n    return $is_letter;\n\
    }", "    return $txt if $txt =~ /^\\s*$/;\n    $txt =~ s/^\\s*//;\n    $txt =~\
    \ s/\\s*$//;\n    return $txt if $txt =~ /\\w$/;\n    return '';\n}", "    my\
    \ $last_char = substr($txt, length($txt)-1, 1);\n    return $last_char =~ /[a-zA-Z]/\
    \ ? $last_char : \"$last_char\";\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n\
    \    return $last_char =~ /\\w/ && ! $last_char =~ /\\w$/;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w$/;\n    return\
    \ $is_a_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n \
    \   return $last_char =~ /[a-z]/i && !$txt =~ /[a-z]/ ? 1 : 0;\n}", "    my($last_char)\
    \ = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n\
    \    return $last_char =~ /^[A-Za-z]$/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_a_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n \
    \   my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\w$/);\n\
    \    return $is_letter && !$is_word;\n}", "    my $last_char = $txt->[-1];\n \
    \   return $last_char =~ /\\w/ && ! $last_char =~ /\\w$/;\n}", "    my $last_char\
    \ = $txt->[-1];\n    my $is_letter = lc($last_char) =~ /[a-z]/i;\n    return $is_letter\
    \ ? $last_char : undef;\n}", "    my($last_char) = substr($txt, length($txt) -\
    \ 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w$/;\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_a_letter)\
    \ = !$is_a_word{$last_char};\n    return $is_a_letter;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n    return\
    \ $last_char =~ /^[a-zA-Z]$/ && ! $last_char =~ /\\w$/;\n}", "    my $last_char\
    \ = substr($txt, length($txt) - 1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = ($txt =~ /\\w$/);\n    return $is_letter && !$is_word;\n}",
  "    my($last_char) = substr($txt, -1, 1);\n    my($is_a_letter) = !$is_word_char($last_char);\n\
    \    return $is_a_letter;\n}", "    my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n    return $last_char =~ /\\w/;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word\
    \ = $is_letter && !$is_word_char($last_char);\n    return $is_word;\n}", "   \
    \ return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return\
    \ 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1\
    \ if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if\
    \ $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt\
    \ =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~\
    \ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n\
    \    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n  \
    \  return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return\
    \ 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1\
    \ if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if\
    \ $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt\
    \ =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~\
    \ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n\
    \    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n  \
    \  return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return\
    \ 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1\
    \ if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if\
    \ $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt\
    \ =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~\
    \ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt\
    \ =~ /\\w$/);\n    return $is_letter && !$is_word;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w/;\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n\
    \    return $last_char =~ /^[a-zA-Z]$/ ? 1 : 0;\n}", "    my $last_char = substr($txt,\
    \ -1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt\
    \ =~ /\\w$/);\n    return $is_letter && !$is_word;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word\
    \ = !$is_letter;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n   \
    \ my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\w$/);\n\
    \    return $is_letter && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n\
    \    my $is_letter = lc($last_char) =~ /[a-z]/i;\n    return $is_letter ? $last_char\
    \ : undef;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n   \
    \ my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my\
    \ $last_char = $txt->[-1];\n    my $is_letter = $last_char =~ /[A-Za-z]/;\n  \
    \  return $is_letter;\n}", "    my $last_char = $txt->[-1];\n    return $last_char\
    \ =~ /^[A-Za-z]$/;\n}", "    return $txt if $txt !~ /\\w$/;\n    return $txt if\
    \ $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $", "    my $last_char = $txt->[-1];\n    return $last_char\
    \ =~ /\\w/ && ! $last_char =~ /\\w$/;\n}", "    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n\
    \    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ ", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_a_letter) = !($last_char =~ /\\w/);\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_a_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_a_letter;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n   \
    \ my $is_letter = lc($last_char) =~ /[a-z]/i;\n    return $is_letter;\n}", " \
    \   my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) =\
    \ !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "   \
    \ my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_a_letter) =\
    \ !$last_char =~ /\\w/;\n    return $is_a_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w$/;\n    return\
    \ $is_a_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1, 1);\n\
    \    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "   \
    \ my $last_char = $txt->[-1];\n    my $is_letter = lc($last_char) =~ /[a-z]/i;\n\
    \    my $is_word = $last_char =~ /\\w/;\n    return $is_letter && !$is_word;\n\
    }", "    my $last_char = substr($txt, length($txt) - 1, 1);\n    my $is_letter\
    \ = is_alpha($last_char);\n    my $is_word = !$is_letter;\n    return $is_letter\
    \ ? $is_word : \"\";\n}", "    my($last_char) = substr($txt, length($txt) - 1,\
    \ 1);\n    my($is_a_letter) = !($last_char =~ /\\w/);\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_a_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_a_letter;\n}", "    my($last_char)\
    \ = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_a_letter) =\
    \ !($last_char =~ /\\w/);\n    return $is_a_letter;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    my $is_letter = is_alpha($last_char);\n\
    \    my $is_word = !$is_letter;\n    return $is_letter ? $is_word : \"\";\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w/;\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "   \
    \ my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n\
    \    return $last_char =~ /\\w/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w$/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w$/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter)\
    \ = !($last_char =~ /\\w/);\n    return $is_letter;\n}", "    return $txt if length($txt)\
    \ == 0;\n    my $last_char = substr($txt, -1, 1);\n    return $last_char if $last_char\
    \ !~ /\\w$/;\n    return $txt;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_a_letter) = !($last_char =~ /\\w/);\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n    my $is_letter\
    \ = lc($last_char) =~ /[a-z]/i;\n    return $is_letter && ! lc($last_char) =~\
    \ /\\w/i;\n}", "    my $last_char = substr($txt, length($txt)-1, 1);\n    return\
    \ $last_char =~ /[a-zA-Z]/ && ! $last_char =~ /\\w/;\n}", "    my $last_char =\
    \ substr($txt, length($txt)-1, 1);\n    return $last_char =~ /\\w/;\n}", "   \
    \ my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter) = !$is_letter;\n\
    \    my($is_word) = !$is_word;\n    my($is_word_end) = !$is_word_end;\n    my($is_word_start)\
    \ = !$is_word_start;\n    my($is_word_start_end) = !$is_word_start_end;\n    my($is_word_start_end_space)\
    \ = !$is_word_start_end_space;\n    my($is_word_start_end_letter) = !$is_word_start_end_letter;\n\
    \    my($is_word_start_end_letter_big) = !$is_word_start_end_letter_big;\n   \
    \ my($is_word_start_end_letter_small) = !$is_word_start_end_letter_small;\n  \
    \  my($is_word_start_end_letter_big_small) = !$is_word_start_end_letter_big_small;\n\
    \    my($is_word_start_end_letter_big_letter) = !$is_word_start_end_letter_big_letter;\n\
    \    my($is_word_start_end_letter_small_letter) = !$is_word_start_end_letter_small_letter;\n\
    \    my($is_word_start_end_letter_big_small_letter) = !$is_word_start_end_letter_big_small_letter;\n\
    \    my($is_word_start_end_letter_big_letter_small) = !$is_word_start_end_letter_big_letter_small;\n\
    \    my($is_word_start_end_letter_big_small_letter) = !$is_word_start_end_letter_big_small_letter;\n\
    \    my($is_word_start_end_letter_big_letter_big) = !$is_word_start_end_letter_big_letter_big;\n\
    \    my($is_word_start_end_letter_small_letter_big) = !$is_word_start_end_letter_small_letter_big;\n\
    \    my($is_word_start_end_letter_big_small_letter_big) = !$is_word_start_end_letter_big_small_letter_big;\n\
    \    my($is_word_start_end_letter_big_letter_small) = !$is_word_start_end_letter_big_letter_small;\n\
    \    my($is_word_start_end_letter_big_small_letter_small) = !$is_word_start_end_letter_big_small_letter_small;\n\
    \    my($is_word_start_end_letter_big_letter_big_small) = !$is_word_start_end_letter_big_letter_big_small;\n\
    \    my($is_word_start_end_letter_small_letter_b", "    my($last_char) = substr($txt,\
    \ length($txt)-1, 1);\n    my($is_a_letter) = !$is_word_char($last_char);\n  \
    \  return $is_a_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    return $last_char =~ /[A-Za-z]/ ? $last_char : \"\";\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\\
    w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my $last_char = $txt->[-1];\n    return $last_char =~ /^[a-zA-Z]$/ ?\
    \ $last_char : \"\";\n}", "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n    my $is_letter\
    \ = lc($last_char) =~ /[a-z]/i;\n    return $is_letter ? $last_char : \"\";\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n \
    \   return $last_char =~ /^[a-zA-Z]$/;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    return $last_char =~ /[a-zA-Z]/ ? 1 : 0;\n}", "   \
    \ my $last_char = $txt->[-1];\n    my $is_letter = lc($last_char) =~ /[a-z]/i;\n\
    \    my $is_word = $last_char =~ /[a-z]/i && !$is_letter;\n    return $is_letter\
    \ && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_a_letter) = !$last_char =~ /\\w/;\n    return $is_a_letter;\n}", " \
    \   return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n   \
    \ return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return\
    \ 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1\
    \ if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if\
    \ $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt\
    \ =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~\
    \ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n\
    \    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n  \
    \  return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return\
    \ 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 0\
    \ if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if\
    \ $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt\
    \ =~ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~\
    \ /^[a-z]$/i;\n    return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n\
    \    return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n  \
    \  return 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return\
    \ 1 if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1\
    \ if $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if\
    \ $txt =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt\
    \ =~ /^[a-z]$/i;\n    return 0 if $txt =~ /^[a-z]$/i;\n    return 1 if $txt =~\
    \ /^[a-z", "    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt\
    \ if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt\
    \ !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\\
    w$/;\n    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n\
    \    return $txt if $txt !~ /\\w$/;\n    return $txt if $txt !~ /\\w$/;\n    return\
    \ $txt if $", "    my $last_char = $txt->[-1];\n    return $last_char =~ /^[A-Za-z]$/;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}", "    my $last_char = $txt->[-1];\n    return $last_char =~\
    \ /^[a-zA-Z]$/ ? 1 : 0;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    return $last_char =~ /[a-zA-Z]/ && !($last_char =~ /[a-zA-Z]/);\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\\
    b(\\w+)\\b/);\n    return $is_letter && !$is_word;\n}", "    my $last_char = substr($txt,\
    \ length($txt) - 1, 1);\n    return $last_char =~ /^[a-z]+$/i;\n}", "    my($last_char)\
    \ = substr($txt, -1, 1);\n    my($is_a_letter) = !$is_word_char($last_char);\n\
    \    return $is_a_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w$/;\n    return $is_letter;\n\
    }", "    return $txt if $txt !~ /^[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n\
    \    return $txt if $txt !~ ", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt)-1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n    my $is_letter\
    \ = lc $last_char =~ /[a-z]/i;\n    my $is_word = lc $last_char =~ /\\w/i;\n \
    \   return $is_letter && !$is_word;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    return $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n\
    \    return $txt if $txt =~ ", "    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]$/i;\n    return $txt if $txt =~ ", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n\
    \    return $last_char =~ /[A-Za-z]/ ? 1 : 0;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my $last_char = substr($txt, length($txt) - 1, 1);\n \
    \   return $last_char =~ /^[A-Za-z]$/;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n}", " \
    \   my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) =\
    \ !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    return $txt if $txt\
    \ =~ /^[a-z]$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if\
    \ $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return $txt\
    \ if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ /^[a-z]+$/i;\n    return $txt if $txt =~ /^[a-z]+$/i;\n    return\
    \ $txt if $txt =~ ", "    my $last_char = $txt->[-1];\n    return $last_char =~\
    \ /\\w/ && ! $last_char =~ /\\w$/;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w$/;\n    return $is_letter;\n\
    }", "    my $last_char = $txt->[-1];\n    return $last_char =~ /\\w/;\n}", " \
    \   my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) =\
    \ !$last_char =~ /\\w$/;\n    return $is_letter;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    my $is_letter = lc($last_char) =~ /[a-z]/i;\n    my\
    \ $is_word = !$is_letter;\n    return $is_letter ? $is_word : \"\";\n}", "   \
    \ my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_a_letter) = !($last_char =~ /\\w/);\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}", "    my $last_char = $txt->[-1];\n    my $is_letter = $last_char\
    \ =~ /[a-z]/i;\n    my $is_word = $last_char =~ /[a-z]/i && $last_char !~ /[a-z]/i;\n\
    \    return $is_letter && !$is_word;\n}", "    my $last_char = substr($txt, length($txt)-1,\
    \ 1);\n    my $is_letter = is_alpha($last_char);\n    my $is_word = ($txt =~ /\\\
    w$/);\n    return $is_letter && !$is_word;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n\
    \    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "   \
    \ my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1,\
    \ 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}",
  "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !($last_char\
    \ =~ /\\w/);\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return $is_letter;\n\
    }", "    my $last_char = substr($txt, length($txt)-1, 1);\n    my $is_letter =\
    \ lc($last_char) =~ /^[a-z]+$/i;\n    return $is_letter;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, -1, 1);\n    my($is_letter) = !$last_char\
    \ =~ /\\w$/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !($last_char =~ /\\w/);\n    return\
    \ $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)-1, 1);\n  \
    \  my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my $last_char = $txt->[-1];\n    return\
    \ $last_char =~ /^[a-zA-Z]$/ ? 1 : 0;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}", "    return $txt if $txt !~ /^[a-z]+$/i;\n    return $txt if\
    \ $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ /[a-z]+$/i;\n    return $txt\
    \ if $txt !~ /[a-z]+$/i;\n    return $txt if $txt !~ ", "    my($last_char) =\
    \ substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return $is_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my $last_char = substr($txt,\
    \ length($txt)-1, 1);\n    return $last_char =~ /\\w/;\n}", "    my($last_char)\
    \ = substr($txt, length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\\
    w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt, length($txt)\
    \ - 1, 1);\n    my($is_a_letter) = !$last_char =~ /\\w$/;\n    return $is_a_letter;\n\
    }", "    my($last_char) = substr($txt, length($txt) - 1, 1);\n    my($is_letter)\
    \ = !$last_char =~ /\\w/;\n    return $is_letter;\n}", "    my($last_char) = substr($txt,\
    \ length($txt) - 1, 1);\n    my($is_letter) = !$last_char =~ /\\w/;\n    return\
    \ $is_letter;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

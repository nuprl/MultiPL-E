name: HumanEval_158_find_max
language: pl
prompt: "# Write a function that accepts a list of strings.\n# The list contains different\
  \ words. Return the word with maximum number\n# of unique characters. If multiple\
  \ strings have maximum number of unique\n# characters, return the one which comes\
  \ first in lexicographical order.\n# >>> find_max([\"name\", \"of\", \"string\"\
  ])\n# \"string\"\n# >>> find_max([\"name\", \"enam\", \"game\"])\n# \"enam\"\n#\
  \ >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n# \"aaaaaaa\"\nsub find_max {\n \
  \   my($words) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_max;\n\
  \        if(eq_deeply($candidate->([\"name\", \"of\", \"string\"]),\"string\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  name\", \"enam\", \"game\"]),\"enam\")) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->([\"aaaaaaa\", \"bb\", \"\
  cc\"]),\"aaaaaaa\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([\"abc\", \"cba\"]),\"abc\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  play\", \"this\", \"game\", \"of\", \"footbott\"]),\"footbott\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  we\", \"are\", \"gonna\", \"rock\"]),\"gonna\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"we\", \"are\"\
  , \"a\", \"mad\", \"nation\"]),\"nation\")) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([\"this\", \"is\",\
  \ \"a\", \"prrk\"]),\"this\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([\"b\"]),\"b\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  play\", \"play\", \"play\"]),\"play\")) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n  \
    \      my $count = scalar(@$words);\n        foreach my $char (split(//, $word))\
    \ {\n            $count--;\n            if ($count > $max) {\n               \
    \ $max = $count;\n                $word = $char;\n            }\n        }\n \
    \   }\n    return $word;\n}", "    my $max_count = 0;\n    my $max_word;\n   \
    \ foreach my $word (@$words) {\n        my $count = 0;\n        foreach my $char\
    \ (split(//, $word)) {\n            $count++ if $char =~ /[[:alpha:]]/;\n    \
    \    }\n        if ($count > $max_count) {\n            $max_count = $count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}",
  "    my $max_count = -1;\n    my $max_word;\n    foreach my $word (@$words) {\n\
    \        my $count = scalar(keys %{$word});\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_count = 0;\n    my $max_word;\n\
    \    my $max_word_index;\n    my $i;\n    my $j;\n    my $k;\n    my $word;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $",
  "    my $max = 0;\n    my $word = \"\";\n    foreach my $word (@$words) {\n    \
    \    my $count = scalar(@$words);\n        $count++ if $word eq $words[$count-1];\n\
    \        $count++ if $word eq $words[$count-2];\n        $count++ if $word eq\
    \ $words[$count-3];\n        $count++ if $word eq $words[$count-4];\n        $count++\
    \ if $word eq $words[$count-5];\n        $count++ if $word eq $words[$count-6];\n\
    \        $count++ if $word eq $words[$count-7];\n        $count++ if $word eq\
    \ $words[$count-8];\n        $count++ if $word eq $words[$count-9];\n        $count++\
    \ if $word eq $words[$count-10];\n        $count++ if $word eq $words[$count-11];\n\
    \        $count++ if $word eq $words[$count-12];\n        $count++ if $word eq\
    \ $words[$count-13];\n        $count++ if $word eq $words[$count-14];\n      \
    \  $count++ if $word eq $words[$count-15];\n        $count++ if $word eq $words[$count-16];\n\
    \        $count++ if $word eq $words[$count-17];\n        $count++ if $word eq\
    \ $words[$count-18];\n        $count++ if $word eq $words[$count-19];\n      \
    \  $count++ if $word eq $words[$count-20];\n        $count++ if $word eq $words[$count-21];\n\
    \        $count++ if $word eq $words[$count-22];\n        $count++ if $word eq\
    \ $words[$count-23];\n        $count++ if $word eq $words[$count-24];\n      \
    \  $count++ if $word eq $words[$count-25];\n        $count++ if $word eq $words[$count-26];\n\
    \        $count++ if $word eq $words[$count-27];\n        $count++ if $word eq\
    \ $words[$count-28];\n        $count++ if $word eq $words[$count-29];\n      \
    \  $count++ if $word eq $words[$count-30];\n        $count++ if $word eq $words[$count-31];\n\
    \        $count++ if $word eq $", "    my $max;\n    my $word;\n    my $count\
    \ = 0;\n    foreach $word (@$words) {\n        $count++;\n        if ($count >\
    \ $max) {\n            $max = $count;\n            $word = $word;\n        }\n\
    \    }\n    return $word;\n}", "    my $max_count = 0;\n    my $max_word;\n  \
    \  my $max_word_len;\n    my $max_word_index;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $count;\n    my $word;\n    my $word_len;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_chars;\n    my $word_chars_count;\n    my $word_chars_index;\n\
    \    my $word_chars_max;\n    my $word_chars_max_index;\n    my $word_chars_min_index;\n\
    \    my $word_chars_min_count;\n    my $word_chars_min_max;\n    my $word_chars_min_max_index;\n\
    \    my $word_chars_min_max_count;\n    my $word_chars_min_max_chars;\n    my\
    \ $word_chars_min_max_chars_index;\n    my $word_chars_min_max_chars_count;\n\
    \    my $word_chars_min_max_chars_max;\n    my $word_chars_min_max_chars_max_index;\n\
    \    my $word_chars_min_max_chars_max_count;\n    my $word_chars_min_max_chars_max_max;\n\
    \    my $word_chars_min_max_chars_max_max_index;\n    my $word_chars_min_max_chars_max_max_count;\n\
    \    my $word_chars_min_max_chars_max_max_max;\n    my $word_chars_min_max_chars_max_max_max_index;\n\
    \    my $word_chars_min_max_chars_max_max_max_count;\n    my $word_chars_min_max_chars_max_max_max_max;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_index;\n    my $word_chars_min_max_chars_max_max_max_max_count;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_max;\n    my $word_chars_min_max_chars_max_max_max_max_max_index;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_max_count;\n    my $word_chars_min_max_chars_max_max_max_max_max_max;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_max_max_index;\n    my $word_chars_min_max_chars_max_max_max_max_max_max_count;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_max_max_max;\n    my $word_chars_min_max_chars_max_max_max_max_max_max_max_index;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_max_max_max_count;\n    my $word_chars_min_max_chars_max_max_max_max_max_max_max_max;\n\
    \    my $word_chars_min_max_chars_max_max_max_max_max_max_max_max_index;\n   \
    \ my $word_chars_min_max_chars_max_max_max_max_max_max_max_max_count;\n    my\
    \ $word_chars_min_max_chars_max_max_max_max_max_max_max_max_max;\n    my $word_chars_min_max_chars_max_max_max_max_max_max_",
  "    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n        my $count\
    \ = scalar(@$words);\n        foreach my $char (split(//, $word)) {\n        \
    \    $count--;\n            if ($count > $max) {\n                $max = $count;\n\
    \                $word = $char;\n            }\n        }\n    }\n    return $word;\n\
    }", "    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n        my\
    \ $len = length($word);\n        if ($len > $max) {\n            $max = $len;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}", "    my\
    \ $max_count = 0;\n    my $max_word;\n    my $max_word_len;\n    my $max_word_start;\n\
    \    my $max_word_end;\n    my $i;\n    my $j;\n    my $k;\n    my $len;\n   \
    \ my $word;\n    my $word_len;\n    my $word_start;\n    my $word_end;\n    my\
    \ $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    my $word_index;\n    my $word_count;\n    my $word_index;\n\
    \    my $word_count;\n    ", "    my $max = 0;\n    my $word;\n    foreach $word\
    \ (@$words) {\n        my $count = scalar(@$words);\n        foreach my $char\
    \ (split(//, $word)) {\n            $count--;\n            if ($count > $max)\
    \ {\n                $max = $count;\n                $word = $char;\n        \
    \    }\n        }\n    }\n    return $word;\n}", "    my $max = 0;\n    my $word;\n\
    \    foreach $word (@$words) {\n        my $count = scalar(@$words);\n       \
    \ foreach my $char (split(//, $word)) {\n            $count-- if $count--;\n \
    \       }\n        if ($count > $max) {\n            $max = $count;\n        \
    \    $word = $word;\n        }\n    }\n    return $word;\n}", "    my $max_chars\
    \ = 0;\n    my $max_word;\n    my $max_word_index;\n    my $i;\n    my $j;\n \
    \   my $word;\n    my $word_count;\n    my $word_index;\n    my $char_count;\n\
    \    my $char_index;\n    my $word;\n    my $word_count;\n    my $word_index;\n\
    \    my $char_count;\n    my $char_index;\n    my $word_chars;\n    my $word_char_index;\n\
    \    my $char_chars;\n    my $char_char_index;\n    my $max_char_chars;\n    my\
    \ $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $max_char_chars;\n\
    \    my $max_char_char_index;\n    my $max_char_chars;\n    my $max_char_char_index;\n\
    \    my $max_char_chars;\n    my $max_char_char_index;\n    my $", "    my $max_count\
    \ = 0;\n    my $max_word = \"\";\n    my $max_word_len = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $word = \"\";\n    my $word_len = 0;\n\
    \    my $word_count = 0;\n    my $word_count_max = 0;\n    my $word_count_max_index\
    \ = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n\
    \    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my\
    \ $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count\
    \ = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n\
    \    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my\
    \ $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index\
    \ = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n\
    \    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my\
    \ $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count\
    \ = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n\
    \    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my\
    \ $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index\
    \ = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n\
    \    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my\
    \ $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count\
    \ = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n\
    \    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my\
    \ $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index\
    \ = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n\
    \    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my\
    \ $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count\
    \ = 0;\n    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n\
    \    my $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my\
    \ $word_count_max_index = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index\
    \ = 0;\n    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;\n\
    \    my $word_count_max_count = 0;\n    my $word_count_max_index = 0;", "    my\
    \ $max_count = 0;\n    my $max_word = \"\";\n    my $max_word_len = 0;\n    foreach\
    \ my $word (@$words) {\n        my $word_len = length($word);\n        if ($word_len\
    \ > $max_word_len) {\n            $max_word_len = $word_len;\n            $max_word\
    \ = $word;\n        }\n        elsif ($word_len == $max_word_len) {\n        \
    \    if ($word cmp $max_word) {\n                $max_word = $word;\n        \
    \    }\n        }\n        else {\n            $max_count++;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max = 0;\n    my $word;\n    foreach $word\
    \ (@$words) {\n        my $count = $words->{$word};\n        if ($count > $max)\
    \ {\n            $max = $count;\n            $word = $word;\n        }\n    }\n\
    \    return $word;\n}", "    my $max;\n    my $word;\n    my $count;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $count;\n    my $max;\n    my $word;\n    my $i;\n\
    \    my $j;\n    my $k;", "    my $max = 0;\n    my $word = \"\";\n    foreach\
    \ my $word (@$words) {\n        my $chars = scalar(split(//, $word));\n      \
    \  if ($chars > $max) {\n            $max = $chars;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}", "    my $max_count = 0;\n    my $max_word\
    \ = \"\";\n    my $max_word_length = 0;\n    foreach my $word (@$words) {\n  \
    \      my $word_length = length($word);\n        if ($word_length > $max_word_length)\
    \ {\n            $max_word_length = $word_length;\n            $max_word = $word;\n\
    \        }\n        if ($word_length == $max_word_length) {\n            $max_count++;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max_count = 0;\n    my\
    \ $max_word = \"\";\n    foreach my $word (@$words) {\n        my $count = 0;\n\
    \        foreach my $char (split(//, $word)) {\n            $count++ if $char\
    \ =~ /[[:alpha:]]/;\n        }\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_35_max_element
language: pl
prompt: "# Return maximum element in the list.\n# >>> max_element([1, 2, 3])\n# 3\n\
  # >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\nsub max_element\
  \ {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_element;\n\
  \        if(eq_deeply($candidate->([1, 2, 3]),3)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 3, -5, 2, -3,\
  \ 3, 9, 0, 124, 1, -10]),124)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n}\n\ntesthumaneval();"
completions: ["    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if\
    \ $x > $max;\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my\
    \ $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n  \
    \  }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    for (my\
    \ $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n            $maxi = $i;\n        }\n    }\n    return $l->[$maxi];\n\
    }", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n       \
    \ if ($i > $max) {\n            $max = $i;\n            $maxi = $i;\n        }\n\
    \    }\n    return $maxi;\n}", "    my $max = -1;\n    my $max_el;\n    foreach\
    \ my $el (@$l) {\n        if ($el > $max) {\n            $max = $el;\n       \
    \     $max_el = $el;\n        }\n    }\n    return $max_el;\n}", "    my $max\
    \ = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n            $maxi = $i;\n        }\n    }\n    return\
    \ $maxi;\n}", "    my $max = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i <\
    \ @$l; $i++) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \            $maxi = $i;\n        }\n    }\n    return $l->[$maxi];\n}", "   \
    \ my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n     \
    \   if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $elem (@$l) {\n        if ($elem > $max)\
    \ {\n            $max = $elem;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = $l->[0];\n    foreach my $i (1 .. $#$l) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i\
    \ > $max) {\n            $max = $i;\n            $maxi = $i;\n        }\n    }\n\
    \    return $maxi;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n\
    \        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n   \
    \ }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n   \
    \     if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    my $i = 0;\n    foreach my $el (@$l) {\n    \
    \    if ($el > $max) {\n            $max = $el;\n        }\n        $i++;\n  \
    \  }\n    return $max;\n}", "    my $max = -1;\n    my $max_elem;\n    foreach\
    \ my $elem (@$l) {\n        if ($elem > $max) {\n            $max = $elem;\n \
    \           $max_elem = $elem;\n        } elsif ($elem == $max) {\n          \
    \  $max_elem = $elem if $elem > $max_elem;\n        }\n    }\n    return $max_elem;\n\
    }", "    my $max = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n          \
    \  $maxi = $i;\n        }\n    }\n    return $l->[$maxi];\n}", "    my $max =\
    \ -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n\
    \            $max = $i;\n            $maxi = $i;\n        }\n    }\n    return\
    \ $maxi;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n       \
    \ if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n   \
    \ return $max;\n}", "    my $max = -1;\n    my $maxel;\n    foreach my $el (@$l)\
    \ {\n        if ($el > $max) {\n            $max = $el;\n            $maxel =\
    \ $el;\n        }\n    }\n    return $maxel;\n}", "    my $max = -1;\n    foreach\
    \ my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for\
    \ (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "   \
    \ my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n     \
    \   if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (@$l) {\n        $max\
    \ = $i if $i > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n \
    \   foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxidx =\
    \ -1;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($max == -1 || $l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n            $maxidx = $i;\n       \
    \ }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n   \
    \ for (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}", " \
    \   my $max = -1;\n    my $maxel;\n    foreach my $el (@$l) {\n        if ($el\
    \ > $max) {\n            $max = $el;\n            $maxel = $el;\n        }\n \
    \   }\n    return $maxel;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n\
    \        if ($i > $max) {\n            $max = $i;\n            $maxi = $i;\n \
    \       }\n    }\n    return $maxi;\n}", "    my $max = -1;\n    my $max_element;\n\
    \    foreach my $element (@$l) {\n        if ($element > $max) {\n           \
    \ $max = $element;\n            $max_element = $element;\n        } elsif ($element\
    \ == $max) {\n            $max_element = $element;\n        }\n    }\n    return\
    \ $max_element;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (reverse\
    \ 0 .. $#$l) {\n        last if $l->[$i] > $max;\n        $max = $l->[$i];\n \
    \   }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n \
    \       if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    my $i = 0;\n    for(my $j = 1; $j <\
    \ @$l; ++$j) {\n        if($l->[$j] > $max) {\n            $max = $l->[$j];\n\
    \        }\n    }\n    return $max;\n}", "    my $max;\n    my $maxidx = -1;\n\
    \    foreach my $i (0..$#$l) {\n        my $x = $l->[$i];\n        if ($x > $max)\
    \ {\n            $max = $x;\n            $maxidx = $i;\n        }\n    }\n   \
    \ return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n            $maxi = $i;\n\
    \        }\n    }\n    return $maxi;\n}", "    my $max = $l->[0];\n    foreach\
    \ my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n\
    \    for(my $i = 0; $i < @$l; $i++) {\n        if($l->[$i] > $max) {\n       \
    \     $max = $l->[$i];\n            $maxi = $i;\n        }\n    }\n    return\
    \ $l->[$maxi];\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n            $maxi = $i;\n\
    \        }\n    }\n    return $maxi;\n}", "    my $max = $l->[0];\n    foreach\
    \ my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $max_elem;\n\
    \    foreach my $elem (@$l) {\n        if ($elem > $max) {\n            $max =\
    \ $elem;\n            $max_elem = $elem;\n        } elsif ($elem == $max) {\n\
    \            $max_elem = $elem if $elem > $max_elem;\n        }\n    }\n    return\
    \ $max_elem;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max\
    \ = $x if $x > $max;\n    }\n    return $max;\n}", "    my $max = -1;\n    my\
    \ $maxi = 0;\n    for(my $i = 0; $i < @$l; $i++) {\n        if($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n            $maxi = $i;\n        }\n    }\n\
    \    return $l->[$maxi];\n}", "    my $max;\n    my $maxidx;\n    my $i;\n   \
    \ my $j;\n    my $maxidx2;\n    my $maxval = 0;\n    my $maxval2 = 0;\n    my\
    \ $maxval3 = 0;\n    my $maxval4 = 0;\n    my $maxval5 = 0;\n    my $maxval6 =\
    \ 0;\n    my $maxval7 = 0;\n    my $maxval8 = 0;\n    my $maxval9 = 0;\n    my\
    \ $maxval10 = 0;\n    my $maxval11 = 0;\n    my $maxval12 = 0;\n    my $maxval13\
    \ = 0;\n    my $maxval14 = 0;\n    my $maxval15 = 0;\n    my $maxval16 = 0;\n\
    \    my $maxval17 = 0;\n    my $maxval18 = 0;\n    my $maxval19 = 0;\n    my $maxval20\
    \ = 0;\n    my $maxval21 = 0;\n    my $maxval22 = 0;\n    my $maxval23 = 0;\n\
    \    my $maxval24 = 0;\n    my $maxval25 = 0;\n    my $maxval26 = 0;\n    my $maxval27\
    \ = 0;\n    my $maxval28 = 0;\n    my $maxval29 = 0;\n    my $maxval30 = 0;\n\
    \    my $maxval31 = 0;\n    my $maxval32 = 0;\n    my $maxval33 = 0;\n    my $maxval34\
    \ = 0;\n    my $maxval35 = 0;\n    my $maxval36 = 0;\n    my $maxval37 = 0;\n\
    \    my $maxval38 = 0;\n    my $maxval39 = 0;\n    my $maxval40 = 0;\n    my $maxval41\
    \ = 0;\n    my $maxval42 = 0;\n    my $maxval43 = 0;\n    my $maxval44 = 0;\n\
    \    my $maxval45 = 0;\n    my $maxval46 = 0;\n    my $maxval47 = 0;\n    my $maxval48\
    \ = 0;\n    my $maxval49 = 0;\n    my $maxval50 = 0;\n    my $maxval51 = 0;\n\
    \    my $maxval52 = 0;\n    my $maxval53 = 0;\n    my $maxval54 = 0;\n    my $maxval55\
    \ = 0;\n    my $maxval56 = 0;\n    my $maxval57 = 0;\n    my $maxval58 = 0;\n\
    \    my $maxval59 = 0;\n    my $maxval60 = 0;\n    my $maxval61 = 0;\n    my $maxval62\
    \ = 0;\n    my $maxval63 = 0;\n    my $maxval64 = 0;\n    my $maxval65 = 0;\n\
    \    my $maxval66 = 0;\n    my $maxval67 = 0;\n    my $maxval68 = 0;\n    my $maxval69\
    \ = 0;\n    my $maxval70 = 0;\n    ", "    my $max = -1;\n    foreach my $x (@$l)\
    \ {\n        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (reverse 0\
    \ .. $#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n \
    \       }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n\
    \    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max\
    \ = -1;\n    my $maxel;\n    foreach my $el (@$l) {\n        if ($el > $max) {\n\
    \            $max = $el;\n            $maxel = $el;\n        }\n    }\n    return\
    \ $maxel;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (@$l) {\n\
    \        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse\
    \ @$l) {\n        if ($i > $max) {\n            $max = $i;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = -1;\n    foreach my $i (@$l) {\n       \
    \ if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1 .. $#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $i (@$l) {\n        $max = $i if $i > $max;\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        $max = $x if $x > $max;\n    }\n    return $max;\n}", "    my $max =\
    \ $l->[0];\n    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1]\
    \ : 0;\n    for my $i (reverse 0 .. $#l) {\n        if ($l->[$i] > $max) {\n \
    \           $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++) {\n     \
    \   if ($l->[$i] > $max) {\n            $max = $l->[$i];\n            $maxi =\
    \ $i;\n        }\n    }\n    return $l->[$maxi];\n}", "    my $max = $l->[0];\n\
    \    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n  \
    \  foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach\
    \ my $i (reverse @$l) {\n        if ($i > $max) {\n            $max = $i;\n  \
    \      }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n\
    \    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] > $max) {\n     \
    \       $max = $l->[$i];\n            $maxi = $i;\n        }\n    }\n    return\
    \ $l->[$maxi];\n}", "    my $max = $l->[0];\n    foreach my $i (@$l) {\n     \
    \   if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (@$l) {\n        $max\
    \ = $i if $i > $max;\n    }\n    return $max;\n}", "    my $max = -1;\n    my\
    \ $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n            $maxi = $i;\n        }\n    }\n\
    \    return $l->[$maxi];\n}", "    my $max = -1;\n    my $max_elem;\n    foreach\
    \ my $elem (@$l) {\n        if ($elem > $max) {\n            $max = $elem;\n \
    \           $max_elem = $elem;\n        }\n    }\n    return $max_elem;\n}", " \
    \   my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (reverse 0 .. $#$l) {\n \
    \       my $e = $l->[$i];\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n\
    \    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n        if ($i\
    \ > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n     \
    \       $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n\
    \    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x\
    \ if $x > $max;\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach\
    \ my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x\
    \ (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n}", "   \
    \ my $max = -1;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n       \
    \     $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max;\n    my\
    \ $maxidx = -1;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n            $maxidx = $i;\n        }\n\
    \    }\n    return $l->[$maxidx];\n}", "    my $max = -1;\n    my $max_idx = 0;\n\
    \    for (my $idx = 0; $idx < @$l; $idx++) {\n        if ($l->[$idx] > $max) {\n\
    \            $max = $l->[$idx];\n            $max_idx = $idx;\n        }\n   \
    \ }\n    return $l->[$max_idx];\n}", "    my $max = -1;\n    my $maxi = 0;\n \
    \   for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] > $max) {\n      \
    \      $max = $l->[$i];\n            $maxi = $i;\n        }\n    }\n    return\
    \ $l->[$maxi];\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n \
    \       if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n\
    \    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n\
    \        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n   \
    \ }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n   \
    \     if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n\
    \            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    for my $i (reverse 0 .. $#$l) {\n        last\
    \ if $l->[$i] > $max;\n        $max = $l->[$i];\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max)\
    \ {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", " \
    \   my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n   \
    \     if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n\
    \            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    my $max_element;\n    foreach my $x (@$l) {\n        if ($x > $max)\
    \ {\n            $max_element = $x;\n            $max = $x;\n        }\n    }\n\
    \    return $max_element;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        $max = $x if $x > $max;\n    }\n    return $max;\n}", "    my $max =\
    \ -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n   \
    \ return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        if\
    \ ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    my $max_el;\n    foreach\
    \ my $el (@$l) {\n        if ($el > $max) {\n            $max = $el;\n       \
    \     $max_el = $el;\n        }\n    }\n    return $max_el;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    for my $i (0 .. @$l - 1) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n\
    \            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n        last if\
    \ $i > $max;\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my\
    \ $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n  \
    \  }\n    return $max;\n}", "    my $max = -1;\n    foreach my $i (@$l) {\n  \
    \      if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for (@$l) {\n       \
    \ $max = $_ if $_ > $max;\n    }\n    return $max;\n}", "    my $max = @$l > 0\
    \ ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n        if ($i > $max) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++) {\n        if\
    \ ($l->[$i] > $max) {\n            $max = $l->[$i];\n            $maxi = $i;\n\
    \        }\n    }\n    return $l->[$maxi];\n}", "    my $max = $l->[0];\n    foreach\
    \ my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n\
    \    foreach my $i (reverse @$l) {\n        if ($i < $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n   \
    \ foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n  \
    \  foreach my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n \
    \       }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my\
    \ $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    my $i;\n\
    \    for ($i = 1; $i < @$l; $i++) {\n        if ($l->[$i] > $max) {\n        \
    \    $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n  \
    \          $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = $l->[0];\n    foreach my $i (@$l) {\n        if ($i > $max) {\n          \
    \  $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = @$l > 0\
    \ ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n        if ($i > $max) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max;\n\
    \    my $maxidx;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n            $maxidx = $i;\n       \
    \ }\n    }\n    return $l->[$maxidx];\n}", "    my $max = -1;\n    foreach my\
    \ $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n}", " \
    \   my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (reverse 0 .. $#{$l}) {\n\
    \        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n   \
    \ }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n   \
    \     if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach\
    \ my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach\
    \ my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n          \
    \  $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max = $l->[0];\n\
    \    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxel;\n\
    \    foreach my $el (@$l) {\n        if ($el > $max) {\n            $max = $el;\n\
    \            $maxel = $el;\n        }\n    }\n    return $maxel;\n}", "    my\
    \ $max = $l->[0];\n    foreach my $i (@$l) {\n        if ($i > $max) {\n     \
    \       $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n\
    \    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n            $maxi = $i;\n        }\n\
    \    }\n    return $l->[$maxi];\n}", "    my $max = -1;\n    my $maxi = 0;\n \
    \   foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max\
    \ = $l->[0];\n    foreach my $i (@$l) {\n        if ($i > $max) {\n          \
    \  $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n  \
    \  foreach my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n \
    \       }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x\
    \ (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (@$l)\
    \ {\n        $max = $i if $i > $max;\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n            $max\
    \ = $x;\n        }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n   \
    \ foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n  \
    \      }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n\
    \    foreach my $i (reverse @$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi\
    \ = 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", " \
    \   my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $i (@$l) {\n\
    \        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n\
    \        if ($i > $max) {\n            $max = $i;\n            $maxi = $i;\n \
    \       }\n    }\n    return $maxi;\n}", "    my $max = $l->[0];\n    my $i =\
    \ 0;\n    my $j = 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n  \
    \          $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n            $max =\
    \ $x;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach\
    \ my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n}",
  "    my $max = -1;\n    my $maxel;\n    foreach my $el (@$l) {\n        if ($el\
    \ > $max) {\n            $max = $el;\n            $maxel = $el;\n        }\n \
    \   }\n    return $maxel;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (@$l) {\n \
    \       if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $l->[0];\n    foreach my $i (@$l) {\n        if ($i\
    \ > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n   \
    \     if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n          \
    \  $maxi = $i;\n        }\n    }\n    return $l->[$maxi];\n}", "    my $max =\
    \ -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n            $max =\
    \ $x;\n        }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1]\
    \ : 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi\
    \ = 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max\
    \ = $i;\n            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", " \
    \   my $max = -1;\n    foreach my $elem (@$l) {\n        if ($elem > $max) {\n\
    \            $max = $elem;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n            $maxi = $i;\n        }\n    }\n    return\
    \ $maxi;\n}", "    my $max = -1;\n    my $maxel;\n    foreach my $el (@$l) {\n\
    \        if ($el > $max) {\n            $max = $el;\n            $maxel = $el;\n\
    \        }\n    }\n    return $maxel;\n}", "    my $max = $l->[0];\n    foreach\
    \ my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n\
    \    foreach my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n\
    \            $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (@$l) {\n        $max = $i if $i\
    \ > $max;\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $i\
    \ (@$l) {\n        if ($i > $max) {\n            $max = $i;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my\
    \ $i (@$l) {\n        $max = $i if $i > $max;\n    }\n    return $max;\n}", " \
    \   my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i\
    \ > $max) {\n            $max = $i;\n            $maxi = $i;\n        }\n    }\n\
    \    return $maxi;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n      \
    \  if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        if ($x > $max) {\n\
    \            $max = $x;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (@$l) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n\
    \            $max = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n            $maxi = $i;\n        }\n    }\n    return\
    \ $maxi;\n}", "    my $max = -1;\n    my $maxel;\n    foreach my $el (@$l) {\n\
    \        if ($el > $max) {\n            $max = $el;\n            $maxel = $el;\n\
    \        }\n    }\n    return $maxel;\n}", "    my $max = -1;\n    foreach my\
    \ $x (@$l) {\n        $max = $x if $x > $max;\n    }\n    return $max;\n}", " \
    \   my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    foreach my $i (@$l) {\n        if ($i > $max) {\n \
    \           $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n    }\n   \
    \ return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n        if\
    \ ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++) {\n \
    \       if ($l->[$i] > $max) {\n            $max = $l->[$i];\n            $maxi\
    \ = $i;\n        }\n    }\n    return $l->[$maxi];\n}", "    my $max = @$l > 0\
    \ ? $l->[-1] : 0;\n    for my $i (reverse 0 .. $#l) {\n        if ($l->[$i] >\
    \ $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n}",
  "    my $max = $l->[0];\n    my $i;\n    for ($i = 1; $i < @$l; $i++) {\n      \
    \  if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n    }\n  \
    \  return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i\
    \ (@$l) {\n        if ($i > $max) {\n            $max = $i;\n            $maxi\
    \ = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max = -1;\n    foreach\
    \ my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach\
    \ my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n          \
    \  $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max = -1;\n\
    \    my $maxi = 0;\n    foreach my $i (@$l) {\n        if ($i > $max) {\n    \
    \        $max = $i;\n            $maxi = $i;\n        }\n    }\n    return $maxi;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (@$l) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse @$l) {\n        if ($i\
    \ > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = -1;\n    my $maxi = 0;\n    for (my $i = 0; $i < @$l; $i++) {\n\
    \        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n            $maxi\
    \ = $i;\n        }\n    }\n    return $l->[$maxi];\n}", "    my $max = $l->[0];\n\
    \    foreach my $i (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max\
    \ = $l->[$i];\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n  \
    \  foreach my $x (@$l) {\n        if ($x > $max) {\n            $max = $x;\n \
    \       }\n    }\n    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n\
    \    for (@$l) {\n        $max = $_ if $_ > $max;\n    }\n    return $max;\n}",
  "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1 ..\
    \ $#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n    \
    \    }\n    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i\
    \ (1..$#$l) {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n\
    \        }\n    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x\
    \ (@$l) {\n        if ($x > $max) {\n            $max = $x;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n       \
    \ if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = $l->[0];\n    foreach my $i (1..$#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    foreach my $x (@$l) {\n        $max = $x if $x > $max;\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my $i (reverse\
    \ @$l) {\n        if ($i < $max) {\n            $max = $i;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    foreach my\
    \ $i (reverse @$l) {\n        $max = $i if $i > $max;\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    my $maxi = 0;\n    foreach my $i (@$l) {\n       \
    \ if ($i > $max) {\n            $max = $i;\n            $maxi = $i;\n        }\n\
    \    }\n    return $maxi;\n}", "    my $max = -1;\n    my $maxi = 0;\n    foreach\
    \ my $i (@$l) {\n        if ($i > $max) {\n            $max = $i;\n          \
    \  $maxi = $i;\n        }\n    }\n    return $maxi;\n}", "    my $max = @$l >\
    \ 0 ? $l->[-1] : 0;\n    for my $i (reverse 0 .. $#$l) {\n        if ($l->[$i]\
    \ > $max) {\n            $max = $l->[$i];\n        }\n    }\n    return $max;\n\
    }", "    my $max = @$l > 0 ? $l->[-1] : 0;\n    for my $i (reverse 0 .. $#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $l->[0];\n    foreach my $i (1..$#$l)\
    \ {\n        if ($l->[$i] > $max) {\n            $max = $l->[$i];\n        }\n\
    \    }\n    return $max;\n}", "    my $max = -1;\n    foreach my $x (@$l) {\n\
    \        if ($x > $max) {\n            $max = $x;\n        }\n    }\n    return\
    \ $max;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_103_rounded_avg
language: pl
prompt: "# You are given two positive integers n and m, and your task is to compute\
  \ the\n# average of the integers from n through m (including n and m). \n# Round\
  \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
  \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
  \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
  # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
  \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
  \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
  \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
  \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
  \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
  \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my $sum = 0;\n    my $count = 0;\n    my $bin = '';\n    \n   \
    \ for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \        $bin .= $i & 1 ? '1' : '0';\n    }\n    \n    return $sum / $count if\
    \ $count > 0;\n    return -1;\n}", "    my $avg = int(($n + $m) / 2);\n    return\
    \ -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}", "    my $sum = 0;\n\
    \    my $count = 0;\n    while($n <= $m) {\n        $sum += $n;\n        $count++;\n\
    \        $n++;\n    }\n    return $sum / $count if $count > 0;\n    return -1;\n\
    }", "    my $result = \"\";\n    my $count = 0;\n    my $i = 0;\n    \n    while\
    \ ($i < $n) {\n        $result .= $i & 1 ? \"1\" : \"0\";\n        $i++;\n   \
    \     $count++;\n    }\n    \n    while ($i < $m) {\n        $result .= $i & 1\
    \ ? \"0\" : \"1\";\n        $i++;\n        $count++;\n    }\n    \n    if ($count\
    \ < $m) {\n        $result .= \"1\";\n    }\n    \n    return $result;\n}", " \
    \   my $avg = int(($n + $m) / 2);\n    return $avg if $avg < $n;\n    return -1;\n\
    }", "    my $sum = 0;\n    my $count = 0;\n    my $base = 1;\n    my $bin = '';\n\
    \    while($n >= $m) {\n        $sum += $n;\n        $count++;\n        $n -=\
    \ $m;\n        $base *= 2;\n    }\n    $sum += $n;\n    $count++;\n    $bin =\
    \ sprintf(\"%b\", $sum / $count);\n    return $bin if $bin =~ /^0b/;\n    return\
    \ -1;\n}", "    my $avg = int(($n + $m) / 2);\n    return $avg if $avg == $n ||\
    \ $avg == $m;\n    return -1;\n}", "    my $avg = int(($n + $m) / 2);\n    my\
    \ $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]*$/;\n    return\
    \ -1;\n}", "    my $sum = 0;\n    my $count = 0;\n    \n    for(my $i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    \n    return\
    \ -1 if $count < $n;\n    \n    return sprintf(\"0b%b\", $sum / $count); \n}",
  "    my $avg = int(($n + $m) / 2);\n    return -1 if $avg > $m;\n    return sprintf(\"\
    0b%b\", $avg);\n}", "    my $avg = int(($n + $m) / 2);\n    return $avg if $avg\
    \ == $n || $avg == $m;\n    return -1;\n}", "    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}", "  \
    \  my $avg = round($n / $m);\n    my $bin = sprintf(\"%b\", $avg);\n    return\
    \ $bin if $bin =~ /^0b/;\n    return -1;\n}", "    my $sum = 0;\n    my $count\
    \ = 0;\n    while($n <= $m) {\n        $sum += $n;\n        $count++;\n      \
    \  $n++;\n    }\n    return $sum / $count if $count > 0;\n    return -1;\n}",
  "    my $result = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $sum = 0;\n    my $count = 0;\n    while($i < $n and $j < $m) {\n        $sum\
    \ += $i;\n        $count++;\n        $i++;\n        $j++;\n    }\n    if($i <\
    \ $n) {\n        $result = $sum / $count;\n    }\n    elsif($j < $m) {\n     \
    \   $result = -1;\n    }\n    elsif($i == $n and $j == $m) {\n        $result\
    \ = $sum / $count;\n    }\n    elsif($i == $n) {\n        $result = $sum / $count;\n\
    \    }\n    elsif($j == $m) {\n        $result = -1;\n    }\n    elsif($i == $n\
    \ and $j == $m) {\n        $result = $sum / $count;\n    }\n    elsif($i == $n)\
    \ {\n        $result = -1;\n    }\n    elsif($j == $m) {\n        $result = -1;\n\
    \    }\n    elsif($i == $n and $j == $m) {\n        $result = $sum / $count;\n\
    \    }\n    elsif($i == $n) {\n        $result = -1;\n    }\n    elsif($j == $m)\
    \ {\n        $result = -1;\n    }\n    elsif($i == $n and $j == $m) {\n      \
    \  $result = $sum / $count;\n    }\n    elsif($i == $n) {\n        $result = -1;\n\
    \    }\n    elsif($j == $m) {\n        $result = -1;\n    }\n    elsif($i == $n\
    \ and $j == $m) {\n        $result = $sum / $count;\n    }\n    elsif($i == $n)\
    \ {\n        $result = -1;\n    }\n    elsif($j == $m) {\n        $result = -1;\n\
    \    }\n    elsif($i == $n and $j == $m) {\n        $result = $sum / $count;\n\
    \    }\n    elsif($i == $n) {\n        $result = -1;\n    }\n    elsif($j == $m)\
    \ {\n        $result = -1;\n    }\n    elsif($i == $n and $j == $m) {\n      \
    \  $result = $sum / $count;\n    }\n    elsif($i == $n) {\n        $result = -1;\n\
    \    }\n    elsif($j == $m) {\n        $result = -1;\n    }\n    elsif($i == $n\
    \ and $j == $m) {\n        $result = $sum / $count;\n    }\n    elsif($i == $n)\
    \ {\n        $result = -1;\n    }\n    elsif($j == $m) {\n        $", "    my\
    \ $avg = int(($n + $m) / 2);\n    $avg = ($avg == $n) ? $avg : -1;\n    my $bin\
    \ = sprintf(\"%b\", $avg);\n    $bin =~ s/^0/0/g;\n    $bin =~ s/^1/1/g;\n   \
    \ $bin =~ s/^0/0/g;\n    $bin =~ s/^1/1/g;\n    return $bin;\n}", "    my $sum\
    \ = 0;\n    my $count = 0;\n    while($n <= $m) {\n        $sum += $n;\n     \
    \   $count++;\n        $n++;\n    }\n    return -1 if $count < $m;\n    return\
    \ sprintf(\"0b%b\", $sum / $count);\n}", "    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}", "    my $result\
    \ = 0;\n    my $i = 0;\n    while($i <= $m) {\n        $result += $n;\n      \
    \  $i++;\n    }\n    return $result if $i > $m;\n    return -1;\n}", "    my $avg\
    \ = round(($n - $m) / 2);\n    return $avg if $avg == $n || $avg == $m;\n    return\
    \ -1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"
